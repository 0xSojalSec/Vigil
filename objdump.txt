
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.0+0x30d>
 360:	78 38                	js     39a <buffer.0+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 9b ca 1e cc e2    	add    BYTE PTR [rbx-0x1d33e136],bl
 3b5:	b6 54                	mov    dh,0x54
 3b7:	4b a9 f2 cd 47 dc    	rex.WXB test rax,0xffffffffdc47cdf2
 3bd:	d2 a0 86 b0 50 df    	shl    BYTE PTR [rax-0x20af4f7a],cl
 3c3:	64                   	fs

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	b2 a2                	mov    dl,0xa2
 412:	f7 12                	not    DWORD PTR [rdx]
 414:	33                   	.byte 0x33
 415:	b3 f0                	mov    bl,0xf0
 417:	a9                   	.byte 0xa9

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
 433:	00 12                	add    BYTE PTR [rdx],dl
	...
 445:	00 00                	add    BYTE PTR [rax],al
 447:	00 bb 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],bh
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 82 02 00 00 12    	add    BYTE PTR [rdx+0x12000002],al
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 7f 01             	add    BYTE PTR [rdi+0x1],bh
 47a:	00 00                	add    BYTE PTR [rax],al
 47c:	12 00                	adc    al,BYTE PTR [rax]
	...
 48e:	00 00                	add    BYTE PTR [rax],al
 490:	77 02                	ja     494 <message_buffer+0x14>
 492:	00 00                	add    BYTE PTR [rax],al
 494:	12 00                	adc    al,BYTE PTR [rax]
	...
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4a9:	02 00                	add    al,BYTE PTR [rax]
 4ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 36                	add    BYTE PTR [rsi],dh
 4c1:	02 00                	add    al,BYTE PTR [rax]
 4c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 6c 00 00          	add    BYTE PTR [rax+rax*1+0x0],ch
 4db:	00 12                	add    BYTE PTR [rdx],dl
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 e1                	add    cl,ah
 4f1:	01 00                	add    DWORD PTR [rax],eax
 4f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 c8                	add    al,cl
 509:	01 00                	add    DWORD PTR [rax],eax
 50b:	00 12                	add    BYTE PTR [rdx],dl
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 ae 02 00 00 12    	add    BYTE PTR [rsi+0x12000002],ch
	...
 535:	00 00                	add    BYTE PTR [rax],al
 537:	00 d5                	add    ch,dl
 539:	00 00                	add    BYTE PTR [rax],al
 53b:	00 12                	add    BYTE PTR [rdx],dl
	...
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 5a 01             	add    BYTE PTR [rdx+0x1],bl
 552:	00 00                	add    BYTE PTR [rax],al
 554:	12 00                	adc    al,BYTE PTR [rax]
	...
 566:	00 00                	add    BYTE PTR [rax],al
 568:	50                   	push   rax
 569:	00 00                	add    BYTE PTR [rax],al
 56b:	00 12                	add    BYTE PTR [rdx],dl
	...
 57d:	00 00                	add    BYTE PTR [rax],al
 57f:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 582:	00 00                	add    BYTE PTR [rax],al
 584:	12 00                	adc    al,BYTE PTR [rax]
	...
 596:	00 00                	add    BYTE PTR [rax],al
 598:	54                   	push   rsp
 599:	02 00                	add    al,BYTE PTR [rax]
 59b:	00 12                	add    BYTE PTR [rdx],dl
	...
 5ad:	00 00                	add    BYTE PTR [rax],al
 5af:	00 28                	add    BYTE PTR [rax],ch
 5b1:	01 00                	add    DWORD PTR [rax],eax
 5b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 26                	add    BYTE PTR [rsi],ah
 5c9:	02 00                	add    al,BYTE PTR [rax]
 5cb:	00 12                	add    BYTE PTR [rdx],dl
	...
 5dd:	00 00                	add    BYTE PTR [rax],al
 5df:	00 6a 02             	add    BYTE PTR [rdx+0x2],ch
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	af                   	scas   eax,DWORD PTR es:[rdi]
 5f9:	00 00                	add    BYTE PTR [rax],al
 5fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	00 4c 02 00          	add    BYTE PTR [rdx+rax*1+0x0],cl
 613:	00 12                	add    BYTE PTR [rdx],dl
	...
 625:	00 00                	add    BYTE PTR [rax],al
 627:	00 f2                	add    dl,dh
 629:	00 00                	add    BYTE PTR [rax],al
 62b:	00 12                	add    BYTE PTR [rdx],dl
	...
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 18                	add    BYTE PTR [rax],bl
 641:	02 00                	add    al,BYTE PTR [rax]
 643:	00 12                	add    BYTE PTR [rdx],dl
	...
 659:	02 00                	add    al,BYTE PTR [rax]
 65b:	00 12                	add    BYTE PTR [rdx],dl
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 32                	add    BYTE PTR [rdx],dh
 671:	01 00                	add    DWORD PTR [rax],eax
 673:	00 12                	add    BYTE PTR [rdx],dl
	...
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 61 01             	add    BYTE PTR [rcx+0x1],ah
 68a:	00 00                	add    BYTE PTR [rax],al
 68c:	12 00                	adc    al,BYTE PTR [rax]
	...
 69e:	00 00                	add    BYTE PTR [rax],al
 6a0:	a1 01 00 00 12 00 00 	movabs eax,ds:0x12000001
 6a7:	00 00 
	...
 6b5:	00 00                	add    BYTE PTR [rax],al
 6b7:	00 5b 02             	add    BYTE PTR [rbx+0x2],bl
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	7c 02                	jl     6d4 <message_buffer+0x254>
 6d2:	00 00                	add    BYTE PTR [rax],al
 6d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	12 01                	adc    al,BYTE PTR [rcx]
 6ea:	00 00                	add    BYTE PTR [rax],al
 6ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 6fe:	00 00                	add    BYTE PTR [rax],al
 700:	a0 02 00 00 12 00 00 	movabs al,ds:0x12000002
 707:	00 00 
	...
 715:	00 00                	add    BYTE PTR [rax],al
 717:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
 71a:	00 00                	add    BYTE PTR [rax],al
 71c:	12 00                	adc    al,BYTE PTR [rax]
	...
 72e:	00 00                	add    BYTE PTR [rax],al
 730:	66 01 00             	add    WORD PTR [rax],ax
 733:	00 12                	add    BYTE PTR [rdx],dl
	...
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 ef                	add    bh,ch
 749:	01 00                	add    DWORD PTR [rax],eax
 74b:	00 12                	add    BYTE PTR [rdx],dl
	...
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	00 86 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],al
	...
 775:	00 00                	add    BYTE PTR [rax],al
 777:	00 e8                	add    al,ch
 779:	01 00                	add    DWORD PTR [rax],eax
 77b:	00 12                	add    BYTE PTR [rdx],dl
	...
 78d:	00 00                	add    BYTE PTR [rax],al
 78f:	00 c2                	add    dl,al
 791:	02 00                	add    al,BYTE PTR [rax]
 793:	00 12                	add    BYTE PTR [rdx],dl
	...
 7a5:	00 00                	add    BYTE PTR [rax],al
 7a7:	00 c2                	add    dl,al
 7a9:	01 00                	add    DWORD PTR [rax],eax
 7ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 7bd:	00 00                	add    BYTE PTR [rax],al
 7bf:	00 99 02 00 00 12    	add    BYTE PTR [rcx+0x12000002],bl
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 99 01 00 00 12    	add    BYTE PTR [rcx+0x12000001],bl
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 db                	add    bl,bl
 7f1:	01 00                	add    DWORD PTR [rax],eax
 7f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 cf                	add    bh,cl
 809:	01 00                	add    DWORD PTR [rax],eax
 80b:	00 12                	add    BYTE PTR [rdx],dl
	...
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 9d 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bl
	...
 835:	00 00                	add    BYTE PTR [rax],al
 837:	00 bd 02 00 00 12    	add    BYTE PTR [rbp+0x12000002],bh
	...
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 91 02 00 00 12    	add    BYTE PTR [rcx+0x12000002],dl
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 95 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],dl
	...
 87d:	00 00                	add    BYTE PTR [rax],al
 87f:	00 20                	add    BYTE PTR [rax],ah
 881:	01 00                	add    DWORD PTR [rax],eax
 883:	00 12                	add    BYTE PTR [rdx],dl
	...
 895:	00 00                	add    BYTE PTR [rax],al
 897:	00 49 01             	add    BYTE PTR [rcx+0x1],cl
 89a:	00 00                	add    BYTE PTR [rax],al
 89c:	12 00                	adc    al,BYTE PTR [rax]
	...
 8ae:	00 00                	add    BYTE PTR [rax],al
 8b0:	6b 01 00             	imul   eax,DWORD PTR [rcx],0x0
 8b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 a2 00 00 00 12    	add    BYTE PTR [rdx+0x12000000],ah
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 e4                	add    ah,ah
 8e1:	00 00                	add    BYTE PTR [rax],al
 8e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 07                	add    BYTE PTR [rdi],al
 8f9:	01 00                	add    DWORD PTR [rax],eax
 8fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 b5 02 00 00 12    	add    BYTE PTR [rbp+0x12000002],dh
	...
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 b3 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],dh
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 11                	add    BYTE PTR [rcx],dl
 941:	02 00                	add    al,BYTE PTR [rax]
 943:	00 12                	add    BYTE PTR [rdx],dl
	...
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 ca                	add    dl,cl
 959:	00 00                	add    BYTE PTR [rax],al
 95b:	00 12                	add    BYTE PTR [rdx],dl
	...
 96d:	00 00                	add    BYTE PTR [rax],al
 96f:	00 ba 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],bh
	...
 985:	00 00                	add    BYTE PTR [rax],al
 987:	00 55 01             	add    BYTE PTR [rbp+0x1],dl
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	12 00                	adc    al,BYTE PTR [rax]
	...
 99e:	00 00                	add    BYTE PTR [rax],al
 9a0:	f6 01 00             	test   BYTE PTR [rcx],0x0
 9a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 87 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],al
	...
 9cd:	00 00                	add    BYTE PTR [rax],al
 9cf:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
 9d2:	00 00                	add    BYTE PTR [rax],al
 9d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	c3                   	ret    
 9e9:	01 00                	add    DWORD PTR [rax],eax
 9eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 9fd:	00 00                	add    BYTE PTR [rax],al
 9ff:	00 d6                	add    dh,dl
 a01:	01 00                	add    DWORD PTR [rax],eax
 a03:	00 12                	add    BYTE PTR [rdx],dl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 0a                	add    BYTE PTR [rdx],cl
 a19:	02 00                	add    al,BYTE PTR [rax]
 a1b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 88 02 00 00 12    	add    BYTE PTR [rax+0x12000002],cl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 61 02             	add    BYTE PTR [rcx+0x2],ah
 a4a:	00 00                	add    BYTE PTR [rax],al
 a4c:	12 00                	adc    al,BYTE PTR [rax]
	...
 a5e:	00 00                	add    BYTE PTR [rax],al
 a60:	fc                   	cld    
 a61:	00 00                	add    BYTE PTR [rax],al
 a63:	00 12                	add    BYTE PTR [rdx],dl
	...
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 bd 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bh
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 01                	add    BYTE PTR [rcx],al
 a91:	00 00                	add    BYTE PTR [rax],al
 a93:	00 20                	add    BYTE PTR [rax],ah
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 a7 02 00 00 12    	add    BYTE PTR [rdi+0x12000002],ah
	...
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 d3                	add    bl,dl
 ac1:	02 00                	add    al,BYTE PTR [rax]
 ac3:	00 12                	add    BYTE PTR [rdx],dl
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 3d 02 00 00 12    	add    BYTE PTR [rip+0x12000002],bh        # 12000adf <_end+0x11ec4ad7>
	...
 aed:	00 00                	add    BYTE PTR [rax],al
 aef:	00 4f 01             	add    BYTE PTR [rdi+0x1],cl
 af2:	00 00                	add    BYTE PTR [rax],al
 af4:	12 00                	adc    al,BYTE PTR [rax]
	...
 b06:	00 00                	add    BYTE PTR [rax],al
 b08:	1d 00 00 00 20       	sbb    eax,0x20000000
	...
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 b22:	00 00                	add    BYTE PTR [rax],al
 b24:	20 00                	and    BYTE PTR [rax],al
	...
 b36:	00 00                	add    BYTE PTR [rax],al
 b38:	b7 00                	mov    bh,0x0
 b3a:	00 00                	add    BYTE PTR [rax],al
 b3c:	12 00                	adc    al,BYTE PTR [rax]
	...
 b4e:	00 00                	add    BYTE PTR [rax],al
 b50:	3a 01                	cmp    al,BYTE PTR [rcx]
 b52:	00 00                	add    BYTE PTR [rax],al
 b54:	22 00                	and    al,BYTE PTR [rax]
	...
 b66:	00 00                	add    BYTE PTR [rax],al
 b68:	1f                   	(bad)  
 b69:	02 00                	add    al,BYTE PTR [rax]
 b6b:	00 11                	add    BYTE PTR [rcx],dl
 b6d:	00 1b                	add    BYTE PTR [rbx],bl
 b6f:	00 60 20             	add    BYTE PTR [rax+0x20],ah
 b72:	01 00                	add    DWORD PTR [rax],eax
 b74:	00 00                	add    BYTE PTR [rax],al
 b76:	00 00                	add    BYTE PTR [rax],al
 b78:	08 00                	or     BYTE PTR [rax],al
 b7a:	00 00                	add    BYTE PTR [rax],al
 b7c:	00 00                	add    BYTE PTR [rax],al
 b7e:	00 00                	add    BYTE PTR [rax],al
 b80:	2e 02 00             	cs add al,BYTE PTR [rax]
 b83:	00 12                	add    BYTE PTR [rdx],dl
 b85:	00 10                	add    BYTE PTR [rax],dl
 b87:	00 02                	add    BYTE PTR [rdx],al
 b89:	ac                   	lods   al,BYTE PTR ds:[rsi]
 b8a:	00 00                	add    BYTE PTR [rax],al
 b8c:	00 00                	add    BYTE PTR [rax],al
 b8e:	00 00                	add    BYTE PTR [rax],al
 b90:	3a 01                	cmp    al,BYTE PTR [rcx]
 b92:	00 00                	add    BYTE PTR [rax],al
 b94:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b98 <.dynstr>:
 b98:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b9b:	54                   	push   rsp
 b9c:	4d 5f                	rex.WRB pop r15
 b9e:	64 65 72 65          	fs gs jb c07 <message_buffer+0x787>
 ba2:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 ba9:	4d 
 baa:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 bac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bae:	65 54                	gs push rsp
 bb0:	61                   	(bad)  
 bb1:	62                   	(bad)  
 bb2:	6c                   	ins    BYTE PTR es:[rdi],dx
 bb3:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 bb7:	67 6d                	ins    DWORD PTR es:[edi],dx
 bb9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bbb:	5f                   	pop    rdi
 bbc:	73 74                	jae    c32 <message_buffer+0x7b2>
 bbe:	61                   	(bad)  
 bbf:	72 74                	jb     c35 <message_buffer+0x7b5>
 bc1:	5f                   	pop    rdi
 bc2:	5f                   	pop    rdi
 bc3:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 bc6:	54                   	push   rsp
 bc7:	4d 5f                	rex.WRB pop r15
 bc9:	72 65                	jb     c30 <message_buffer+0x7b0>
 bcb:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 bd2:	4d 
 bd3:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 bd5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bd6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bd7:	65 54                	gs push rsp
 bd9:	61                   	(bad)  
 bda:	62                   	(bad)  
 bdb:	6c                   	ins    BYTE PTR es:[rdi],dx
 bdc:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 be0:	61                   	(bad)  
 be1:	70 5f                	jo     c42 <message_buffer+0x7c2>
 be3:	6c                   	ins    BYTE PTR es:[rdi],dx
 be4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 be5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 be6:	70 00                	jo     be8 <message_buffer+0x768>
 be8:	70 63                	jo     c4d <message_buffer+0x7cd>
 bea:	61                   	(bad)  
 beb:	70 5f                	jo     c4c <message_buffer+0x7cc>
 bed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bee:	70 65                	jo     c55 <message_buffer+0x7d5>
 bf0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bf1:	5f                   	pop    rdi
 bf2:	6c                   	ins    BYTE PTR es:[rdi],dx
 bf3:	69 76 65 00 53 48 41 	imul   esi,DWORD PTR [rsi+0x65],0x41485300
 bfa:	35 31 32 5f 46       	xor    eax,0x465f3231
 bff:	69 6e 61 6c 00 53 48 	imul   ebp,DWORD PTR [rsi+0x61],0x4853006c
 c06:	41 35 31 32 5f 55    	rex.B xor eax,0x555f3231
 c0c:	70 64                	jo     c72 <message_buffer+0x7f2>
 c0e:	61                   	(bad)  
 c0f:	74 65                	je     c76 <message_buffer+0x7f6>
 c11:	00 53 48             	add    BYTE PTR [rbx+0x48],dl
 c14:	41 35 31 32 5f 49    	rex.B xor eax,0x495f3231
 c1a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c1b:	69 74 00 73 71 6c 69 	imul   esi,DWORD PTR [rax+rax*1+0x73],0x74696c71
 c22:	74 
 c23:	65 33 5f 65          	xor    ebx,DWORD PTR gs:[rdi+0x65]
 c27:	72 72                	jb     c9b <message_buffer+0x81b>
 c29:	6d                   	ins    DWORD PTR es:[rdi],dx
 c2a:	73 67                	jae    c93 <message_buffer+0x813>
 c2c:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c2f:	6c                   	ins    BYTE PTR es:[rdi],dx
 c30:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 c37:	65 
 c38:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 c3c:	6c                   	ins    BYTE PTR es:[rdi],dx
 c3d:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 c44:	65 
 c45:	63 00                	movsxd eax,DWORD PTR [rax]
 c47:	73 71                	jae    cba <message_buffer+0x83a>
 c49:	6c                   	ins    BYTE PTR es:[rdi],dx
 c4a:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 c51:	6f 
 c52:	73 65                	jae    cb9 <message_buffer+0x839>
 c54:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c57:	6c                   	ins    BYTE PTR es:[rdi],dx
 c58:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 c5f:	65 
 c60:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c61:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c65:	5f                   	pop    rdi
 c66:	73 65                	jae    ccd <message_buffer+0x84d>
 c68:	74 74                	je     cde <message_buffer+0x85e>
 c6a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c6b:	70 00                	jo     c6d <message_buffer+0x7ed>
 c6d:	6c                   	ins    BYTE PTR es:[rdi],dx
 c6e:	75 61                	jne    cd1 <message_buffer+0x851>
 c70:	4c 5f                	rex.WR pop rdi
 c72:	6c                   	ins    BYTE PTR es:[rdi],dx
 c73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c74:	61                   	(bad)  
 c75:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 c7c:	6c 
 c7d:	75 61                	jne    ce0 <message_buffer+0x860>
 c7f:	4c 5f                	rex.WR pop rdi
 c81:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c82:	65 77 73             	gs ja  cf8 <message_buffer+0x878>
 c85:	74 61                	je     ce8 <message_buffer+0x868>
 c87:	74 65                	je     cee <message_buffer+0x86e>
 c89:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c8d:	5f                   	pop    rdi
 c8e:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 c92:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 c97:	5f                   	pop    rdi
 c98:	70 63                	jo     cfd <message_buffer+0x87d>
 c9a:	61                   	(bad)  
 c9b:	6c                   	ins    BYTE PTR es:[rdi],dx
 c9c:	6c                   	ins    BYTE PTR es:[rdi],dx
 c9d:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 ca0:	75 61                	jne    d03 <message_buffer+0x883>
 ca2:	5f                   	pop    rdi
 ca3:	67 65 74 74          	addr32 gs je d1b <message_buffer+0x89b>
 ca7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ca8:	70 00                	jo     caa <message_buffer+0x82a>
 caa:	6c                   	ins    BYTE PTR es:[rdi],dx
 cab:	75 61                	jne    d0e <message_buffer+0x88e>
 cad:	4c 5f                	rex.WR pop rdi
 caf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cb0:	70 65                	jo     d17 <message_buffer+0x897>
 cb2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 cb3:	6c                   	ins    BYTE PTR es:[rdi],dx
 cb4:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 cbb:	6c                   	ins    BYTE PTR es:[rdi],dx
 cbc:	69 6e 65 00 69 6e 65 	imul   ebp,DWORD PTR [rsi+0x65],0x656e6900
 cc3:	74 5f                	je     d24 <message_buffer+0x8a4>
 cc5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 cc6:	74 6f                	je     d37 <message_buffer+0x8b7>
 cc8:	61                   	(bad)  
 cc9:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 ccc:	72 6e                	jb     d3c <message_buffer+0x8bc>
 cce:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 cd1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 cd4:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 cd7:	5f                   	pop    rdi
 cd8:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 cde:	7a 65                	jp     d45 <message_buffer+0x8c5>
 ce0:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 ce3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ce4:	68 6c 00 6e 74       	push   0x746e006c
 ce9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cea:	68 73 00 72 65       	push   0x65720073
 cef:	61                   	(bad)  
 cf0:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 cf4:	72 63                	jb     d59 <message_buffer+0x8d9>
 cf6:	68 72 00 6c 6f       	push   0x6f6c0072
 cfb:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 cfe:	74 69                	je     d69 <message_buffer+0x8e9>
 d00:	6d                   	ins    DWORD PTR es:[rdi],dx
 d01:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 d05:	6c                   	ins    BYTE PTR es:[rdi],dx
 d06:	6c                   	ins    BYTE PTR es:[rdi],dx
 d07:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d08:	63 00                	movsxd eax,DWORD PTR [rax]
 d0a:	70 74                	jo     d80 <message_buffer+0x900>
 d0c:	68 72 65 61 64       	push   0x64616572
 d11:	5f                   	pop    rdi
 d12:	6a 6f                	push   0x6f
 d14:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 d1b:	73 70                	jae    d8d <message_buffer+0x90d>
 d1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d1e:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 d21:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d24:	72 61                	jb     d87 <message_buffer+0x907>
 d26:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 d29:	73 79                	jae    da4 <message_buffer+0x924>
 d2b:	6d                   	ins    DWORD PTR es:[rdi],dx
 d2c:	62                   	(bad)  
 d2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d2e:	6c                   	ins    BYTE PTR es:[rdi],dx
 d2f:	73 00                	jae    d31 <message_buffer+0x8b1>
 d31:	72 65                	jb     d98 <message_buffer+0x918>
 d33:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 d37:	70 00                	jo     d39 <message_buffer+0x8b9>
 d39:	5f                   	pop    rdi
 d3a:	5f                   	pop    rdi
 d3b:	6c                   	ins    BYTE PTR es:[rdi],dx
 d3c:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 d43:	72 74                	jb     db9 <message_buffer+0x939>
 d45:	5f                   	pop    rdi
 d46:	6d                   	ins    DWORD PTR es:[rdi],dx
 d47:	61                   	(bad)  
 d48:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 d4f:	6d                   	ins    DWORD PTR es:[rdi],dx
 d50:	70 00                	jo     d52 <message_buffer+0x8d2>
 d52:	66 70 72             	data16 jo dc7 <message_buffer+0x947>
 d55:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 d5c:	75 74                	jne    dd2 <message_buffer+0x952>
 d5e:	73 00                	jae    d60 <message_buffer+0x8e0>
 d60:	73 6f                	jae    dd1 <message_buffer+0x951>
 d62:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 d65:	74 00                	je     d67 <message_buffer+0x8e7>
 d67:	73 69                	jae    dd2 <message_buffer+0x952>
 d69:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 d6b:	61                   	(bad)  
 d6c:	6c                   	ins    BYTE PTR es:[rdi],dx
 d6d:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 d70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d71:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 d77:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d78:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 d7b:	74 6f                	je     dec <message_buffer+0x96c>
 d7d:	70 74                	jo     df3 <message_buffer+0x973>
 d7f:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 d82:	6c                   	ins    BYTE PTR es:[rdi],dx
 d83:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d84:	73 65                	jae    deb <message_buffer+0x96b>
 d86:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d89:	72 63                	jb     dee <message_buffer+0x96e>
 d8b:	70 79                	jo     e06 <message_buffer+0x986>
 d8d:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 d90:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d93:	72 61                	jb     df6 <message_buffer+0x976>
 d95:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 d98:	67 65 74 72          	addr32 gs je e0e <message_buffer+0x98e>
 d9c:	75 73                	jne    e11 <message_buffer+0x991>
 d9e:	61                   	(bad)  
 d9f:	67 65 00 73 74       	add    BYTE PTR gs:[ebx+0x74],dh
 da4:	72 74                	jb     e1a <message_buffer+0x99a>
 da6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 da7:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 daa:	74 72                	je     e1e <message_buffer+0x99e>
 dac:	74 6f                	je     e1d <message_buffer+0x99d>
 dae:	6c                   	ins    BYTE PTR es:[rdi],dx
 daf:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 db2:	6d                   	ins    DWORD PTR es:[rdi],dx
 db3:	73 65                	jae    e1a <message_buffer+0x99a>
 db5:	74 00                	je     db7 <message_buffer+0x937>
 db7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 db8:	70 74                	jo     e2e <message_buffer+0x9ae>
 dba:	61                   	(bad)  
 dbb:	72 67                	jb     e24 <message_buffer+0x9a4>
 dbd:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 dc0:	72 6e                	jb     e30 <message_buffer+0x9b0>
 dc2:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 dc5:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 dc8:	64 69 67 69 74 00 73 	imul   esp,DWORD PTR fs:[rdi+0x69],0x74730074
 dcf:	74 
 dd0:	72 73                	jb     e45 <message_buffer+0x9c5>
 dd2:	74 72                	je     e46 <message_buffer+0x9c6>
 dd4:	00 70 74             	add    BYTE PTR [rax+0x74],dh
 dd7:	68 72 65 61 64       	push   0x64616572
 ddc:	5f                   	pop    rdi
 ddd:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 de0:	61                   	(bad)  
 de1:	74 65                	je     e48 <message_buffer+0x9c8>
 de3:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 de6:	72 6e                	jb     e56 <message_buffer+0x9d6>
 de8:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 deb:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 dee:	72 6c                	jb     e5c <message_buffer+0x9dc>
 df0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 df2:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 df5:	65 65 70 00          	gs gs jo df9 <message_buffer+0x979>
 df9:	67 65 74 64          	addr32 gs je e61 <message_buffer+0x9e1>
 dfd:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 dff:	69 6d 00 73 65 6e 64 	imul   ebp,DWORD PTR [rbp+0x0],0x646e6573
 e06:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
 e09:	72 69                	jb     e74 <message_buffer+0x9f4>
 e0b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 e0c:	74 66                	je     e74 <message_buffer+0x9f4>
 e0e:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 e11:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 e12:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 e16:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 e18:	6c                   	ins    BYTE PTR es:[rdi],dx
 e19:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 e1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 e1e:	73 00                	jae    e20 <message_buffer+0x9a0>
 e20:	73 6e                	jae    e90 <message_buffer+0xa10>
 e22:	70 72                	jo     e96 <message_buffer+0xa16>
 e24:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 e2b:	67 65 78 65          	addr32 gs js e94 <message_buffer+0xa14>
 e2f:	63 00                	movsxd eax,DWORD PTR [rax]
 e31:	6c                   	ins    BYTE PTR es:[rdi],dx
 e32:	69 73 74 65 6e 00 70 	imul   esi,DWORD PTR [rbx+0x74],0x70006e65
 e39:	65 72 72             	gs jb  eae <message_buffer+0xa2e>
 e3c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e3d:	72 00                	jb     e3f <message_buffer+0x9bf>
 e3f:	73 74                	jae    eb5 <message_buffer+0xa35>
 e41:	72 63                	jb     ea6 <message_buffer+0xa26>
 e43:	61                   	(bad)  
 e44:	74 00                	je     e46 <message_buffer+0x9c6>
 e46:	61                   	(bad)  
 e47:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 e4a:	70 74                	jo     ec0 <message_buffer+0xa40>
 e4c:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 e4f:	74 63                	je     eb4 <message_buffer+0xa34>
 e51:	68 61 72 00 65       	push   0x65007261
 e56:	78 69                	js     ec1 <message_buffer+0xa41>
 e58:	74 00                	je     e5a <message_buffer+0x9da>
 e5a:	5f                   	pop    rdi
 e5b:	5f                   	pop    rdi
 e5c:	73 74                	jae    ed2 <message_buffer+0xa52>
 e5e:	61                   	(bad)  
 e5f:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 e62:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 e65:	5f                   	pop    rdi
 e66:	66 61                	data16 (bad) 
 e68:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 e6f:	6f 
 e70:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 e73:	70 74                	jo     ee9 <message_buffer+0xa69>
 e75:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 e79:	70 63                	jo     ede <message_buffer+0xa5e>
 e7b:	61                   	(bad)  
 e7c:	70 2e                	jo     eac <message_buffer+0xa2c>
 e7e:	73 6f                	jae    eef <message_buffer+0xa6f>
 e80:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 e83:	38 00                	cmp    BYTE PTR [rax],al
 e85:	6c                   	ins    BYTE PTR es:[rdi],dx
 e86:	69 62 63 72 79 70 74 	imul   esp,DWORD PTR [rdx+0x63],0x74707972
 e8d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e8e:	2e 73 6f             	cs jae f00 <message_buffer+0xa80>
 e91:	2e 31 2e             	cs xor DWORD PTR [rsi],ebp
 e94:	31 00                	xor    DWORD PTR [rax],eax
 e96:	6c                   	ins    BYTE PTR es:[rdi],dx
 e97:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 e9e:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 ea1:	73 6f                	jae    f12 <message_buffer+0xa92>
 ea3:	2e 30 00             	cs xor BYTE PTR [rax],al
 ea6:	6c                   	ins    BYTE PTR es:[rdi],dx
 ea7:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 eae:	33 2e                	xor    ebp,DWORD PTR [rsi]
 eb0:	73 6f                	jae    f21 <message_buffer+0xaa1>
 eb2:	2e 30 00             	cs xor BYTE PTR [rax],al
 eb5:	6c                   	ins    BYTE PTR es:[rdi],dx
 eb6:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 ebd:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 ec2:	5f                   	pop    rdi
 ec3:	35 2e 33 00 4f       	xor    eax,0x4f00332e
 ec8:	50                   	push   rax
 ec9:	45                   	rex.RB
 eca:	4e 53                	rex.WRX push rbx
 ecc:	53                   	push   rbx
 ecd:	4c 5f                	rex.WR pop rdi
 ecf:	31 5f 31             	xor    DWORD PTR [rdi+0x31],ebx
 ed2:	5f                   	pop    rdi
 ed3:	30 00                	xor    BYTE PTR [rax],al
 ed5:	47                   	rex.RXB
 ed6:	4c                   	rex.WR
 ed7:	49                   	rex.WB
 ed8:	42                   	rex.X
 ed9:	43 5f                	rex.XB pop r15
 edb:	32 2e                	xor    ch,BYTE PTR [rsi]
 edd:	33 2e                	xor    ebp,DWORD PTR [rsi]
 edf:	34 00                	xor    al,0x0
 ee1:	47                   	rex.RXB
 ee2:	4c                   	rex.WR
 ee3:	49                   	rex.WB
 ee4:	42                   	rex.X
 ee5:	43 5f                	rex.XB pop r15
 ee7:	32 2e                	xor    ch,BYTE PTR [rsi]
 ee9:	34 00                	xor    al,0x0
 eeb:	47                   	rex.RXB
 eec:	4c                   	rex.WR
 eed:	49                   	rex.WB
 eee:	42                   	rex.X
 eef:	43 5f                	rex.XB pop r15
 ef1:	32 2e                	xor    ch,BYTE PTR [rsi]
 ef3:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 ef6:	47                   	rex.RXB
 ef7:	4c                   	rex.WR
 ef8:	49                   	rex.WB
 ef9:	42                   	rex.X
 efa:	43 5f                	rex.XB pop r15
 efc:	32 2e                	xor    ch,BYTE PTR [rsi]
 efe:	32 2e                	xor    ch,BYTE PTR [rsi]
 f00:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000000f02 <.gnu.version>:
 f02:	00 00                	add    BYTE PTR [rax],al
 f04:	00 00                	add    BYTE PTR [rax],al
 f06:	02 00                	add    al,BYTE PTR [rax]
 f08:	02 00                	add    al,BYTE PTR [rax]
 f0a:	02 00                	add    al,BYTE PTR [rax]
 f0c:	02 00                	add    al,BYTE PTR [rax]
 f0e:	02 00                	add    al,BYTE PTR [rax]
 f10:	02 00                	add    al,BYTE PTR [rax]
 f12:	03 00                	add    eax,DWORD PTR [rax]
 f14:	02 00                	add    al,BYTE PTR [rax]
 f16:	02 00                	add    al,BYTE PTR [rax]
 f18:	02 00                	add    al,BYTE PTR [rax]
 f1a:	04 00                	add    al,0x0
 f1c:	02 00                	add    al,BYTE PTR [rax]
 f1e:	00 00                	add    BYTE PTR [rax],al
 f20:	03 00                	add    eax,DWORD PTR [rax]
 f22:	02 00                	add    al,BYTE PTR [rax]
 f24:	02 00                	add    al,BYTE PTR [rax]
 f26:	02 00                	add    al,BYTE PTR [rax]
 f28:	02 00                	add    al,BYTE PTR [rax]
 f2a:	00 00                	add    BYTE PTR [rax],al
 f2c:	02 00                	add    al,BYTE PTR [rax]
 f2e:	04 00                	add    al,0x0
 f30:	02 00                	add    al,BYTE PTR [rax]
 f32:	02 00                	add    al,BYTE PTR [rax]
 f34:	02 00                	add    al,BYTE PTR [rax]
 f36:	02 00                	add    al,BYTE PTR [rax]
 f38:	05 00 02 00 02       	add    eax,0x2000200
 f3d:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 f40:	02 00                	add    al,BYTE PTR [rax]
 f42:	05 00 02 00 02       	add    eax,0x2000200
 f47:	00 00                	add    BYTE PTR [rax],al
 f49:	00 02                	add    BYTE PTR [rdx],al
 f4b:	00 06                	add    BYTE PTR [rsi],al
 f4d:	00 02                	add    BYTE PTR [rdx],al
 f4f:	00 02                	add    BYTE PTR [rdx],al
 f51:	00 02                	add    BYTE PTR [rdx],al
 f53:	00 02                	add    BYTE PTR [rdx],al
 f55:	00 02                	add    BYTE PTR [rdx],al
 f57:	00 02                	add    BYTE PTR [rdx],al
 f59:	00 02                	add    BYTE PTR [rdx],al
 f5b:	00 07                	add    BYTE PTR [rdi],al
 f5d:	00 00                	add    BYTE PTR [rax],al
 f5f:	00 02                	add    BYTE PTR [rdx],al
 f61:	00 02                	add    BYTE PTR [rdx],al
 f63:	00 02                	add    BYTE PTR [rdx],al
 f65:	00 00                	add    BYTE PTR [rax],al
 f67:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 f6a:	04 00                	add    al,0x0
 f6c:	02 00                	add    al,BYTE PTR [rax]
 f6e:	02 00                	add    al,BYTE PTR [rax]
 f70:	02 00                	add    al,BYTE PTR [rax]
 f72:	04 00                	add    al,0x0
 f74:	02 00                	add    al,BYTE PTR [rax]
 f76:	02 00                	add    al,BYTE PTR [rax]
 f78:	02 00                	add    al,BYTE PTR [rax]
 f7a:	02 00                	add    al,BYTE PTR [rax]
 f7c:	03 00                	add    eax,DWORD PTR [rax]
 f7e:	02 00                	add    al,BYTE PTR [rax]
 f80:	02 00                	add    al,BYTE PTR [rax]
 f82:	02 00                	add    al,BYTE PTR [rax]
 f84:	02 00                	add    al,BYTE PTR [rax]
 f86:	02 00                	add    al,BYTE PTR [rax]
 f88:	04 00                	add    al,0x0
 f8a:	00 00                	add    BYTE PTR [rax],al
 f8c:	00 00                	add    BYTE PTR [rax],al
 f8e:	02 00                	add    al,BYTE PTR [rax]
 f90:	02 00                	add    al,BYTE PTR [rax]
 f92:	05 00 02 00 00       	add    eax,0x200
 f97:	00 00                	add    BYTE PTR [rax],al
 f99:	00 02                	add    BYTE PTR [rdx],al
 f9b:	00 02                	add    BYTE PTR [rdx],al
 f9d:	00 02                	add    BYTE PTR [rdx],al
 f9f:	00 01                	add    BYTE PTR [rcx],al
	...

Disassembly of section .gnu.version_r:

0000000000000fa8 <.gnu.version_r>:
     fa8:	01 00                	add    DWORD PTR [rax],eax
     faa:	01 00                	add    DWORD PTR [rax],eax
     fac:	0e                   	(bad)  
     fad:	03 00                	add    eax,DWORD PTR [rax]
     faf:	00 10                	add    BYTE PTR [rax],dl
     fb1:	00 00                	add    BYTE PTR [rax],al
     fb3:	00 20                	add    BYTE PTR [rax],ah
     fb5:	00 00                	add    BYTE PTR [rax],al
     fb7:	00 43 28             	add    BYTE PTR [rbx+0x28],al
     fba:	97                   	xchg   edi,eax
     fbb:	01 00                	add    DWORD PTR [rax],eax
     fbd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     fc0:	27                   	(bad)  
     fc1:	03 00                	add    eax,DWORD PTR [rax]
     fc3:	00 00                	add    BYTE PTR [rax],al
     fc5:	00 00                	add    BYTE PTR [rax],al
     fc7:	00 01                	add    BYTE PTR [rcx],al
     fc9:	00 01                	add    BYTE PTR [rcx],al
     fcb:	00 ed                	add    ch,ch
     fcd:	02 00                	add    al,BYTE PTR [rax]
     fcf:	00 10                	add    BYTE PTR [rax],dl
     fd1:	00 00                	add    BYTE PTR [rax],al
     fd3:	00 20                	add    BYTE PTR [rax],ah
     fd5:	00 00                	add    BYTE PTR [rax],al
     fd7:	00 10                	add    BYTE PTR [rax],dl
     fd9:	1f                   	(bad)  
     fda:	6d                   	ins    DWORD PTR es:[rdi],dx
     fdb:	06                   	(bad)  
     fdc:	00 00                	add    BYTE PTR [rax],al
     fde:	03 00                	add    eax,DWORD PTR [rax]
     fe0:	2f                   	(bad)  
     fe1:	03 00                	add    eax,DWORD PTR [rax]
     fe3:	00 00                	add    BYTE PTR [rax],al
     fe5:	00 00                	add    BYTE PTR [rax],al
     fe7:	00 01                	add    BYTE PTR [rcx],al
     fe9:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     fec:	1d 03 00 00 10       	sbb    eax,0x10000003
     ff1:	00 00                	add    BYTE PTR [rax],al
     ff3:	00 00                	add    BYTE PTR [rax],al
     ff5:	00 00                	add    BYTE PTR [rax],al
     ff7:	00 74 19 69          	add    BYTE PTR [rcx+rbx*1+0x69],dh
     ffb:	09 00                	or     DWORD PTR [rax],eax
     ffd:	00 07                	add    BYTE PTR [rdi],al
     fff:	00 3d 03 00 00 10    	add    BYTE PTR [rip+0x10000003],bh        # 10001008 <_end+0xfec5000>
    1005:	00 00                	add    BYTE PTR [rax],al
    1007:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
    100a:	69 0d 00 00 06 00 49 	imul   ecx,DWORD PTR [rip+0x60000],0x349        # 61014 <rules+0x4ed34>
    1011:	03 00 00 
    1014:	10 00                	adc    BYTE PTR [rax],al
    1016:	00 00                	add    BYTE PTR [rax],al
    1018:	b4 91                	mov    ah,0x91
    101a:	96                   	xchg   esi,eax
    101b:	06                   	(bad)  
    101c:	00 00                	add    BYTE PTR [rax],al
    101e:	05 00 53 03 00       	add    eax,0x35300
    1023:	00 10                	add    BYTE PTR [rax],dl
    1025:	00 00                	add    BYTE PTR [rax],al
    1027:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
    102a:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
    1030:	5e                   	pop    rsi
    1031:	03 00                	add    eax,DWORD PTR [rax]
    1033:	00 00                	add    BYTE PTR [rax],al
    1035:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000001038 <.rela.dyn>:
    1038:	40 1b 01             	rex sbb eax,DWORD PTR [rcx]
    103b:	00 00                	add    BYTE PTR [rax],al
    103d:	00 00                	add    BYTE PTR [rax],al
    103f:	00 08                	add    BYTE PTR [rax],cl
    1041:	00 00                	add    BYTE PTR [rax],al
    1043:	00 00                	add    BYTE PTR [rax],al
    1045:	00 00                	add    BYTE PTR [rax],al
    1047:	00 20                	add    BYTE PTR [rax],ah
    1049:	2a 00                	sub    al,BYTE PTR [rax]
    104b:	00 00                	add    BYTE PTR [rax],al
    104d:	00 00                	add    BYTE PTR [rax],al
    104f:	00 48 1b             	add    BYTE PTR [rax+0x1b],cl
    1052:	01 00                	add    DWORD PTR [rax],eax
    1054:	00 00                	add    BYTE PTR [rax],al
    1056:	00 00                	add    BYTE PTR [rax],al
    1058:	08 00                	or     BYTE PTR [rax],al
    105a:	00 00                	add    BYTE PTR [rax],al
    105c:	00 00                	add    BYTE PTR [rax],al
    105e:	00 00                	add    BYTE PTR [rax],al
    1060:	e0 29                	loopne 108b <message_buffer+0xc0b>
    1062:	00 00                	add    BYTE PTR [rax],al
    1064:	00 00                	add    BYTE PTR [rax],al
    1066:	00 00                	add    BYTE PTR [rax],al
    1068:	08 20                	or     BYTE PTR [rax],ah
    106a:	01 00                	add    DWORD PTR [rax],eax
    106c:	00 00                	add    BYTE PTR [rax],al
    106e:	00 00                	add    BYTE PTR [rax],al
    1070:	08 00                	or     BYTE PTR [rax],al
    1072:	00 00                	add    BYTE PTR [rax],al
    1074:	00 00                	add    BYTE PTR [rax],al
    1076:	00 00                	add    BYTE PTR [rax],al
    1078:	08 20                	or     BYTE PTR [rax],ah
    107a:	01 00                	add    DWORD PTR [rax],eax
    107c:	00 00                	add    BYTE PTR [rax],al
    107e:	00 00                	add    BYTE PTR [rax],al
    1080:	30 20                	xor    BYTE PTR [rax],ah
    1082:	01 00                	add    DWORD PTR [rax],eax
    1084:	00 00                	add    BYTE PTR [rax],al
    1086:	00 00                	add    BYTE PTR [rax],al
    1088:	08 00                	or     BYTE PTR [rax],al
    108a:	00 00                	add    BYTE PTR [rax],al
    108c:	00 00                	add    BYTE PTR [rax],al
    108e:	00 00                	add    BYTE PTR [rax],al
    1090:	04 d0                	add    al,0xd0
    1092:	00 00                	add    BYTE PTR [rax],al
    1094:	00 00                	add    BYTE PTR [rax],al
    1096:	00 00                	add    BYTE PTR [rax],al
    1098:	38 20                	cmp    BYTE PTR [rax],ah
    109a:	01 00                	add    DWORD PTR [rax],eax
    109c:	00 00                	add    BYTE PTR [rax],al
    109e:	00 00                	add    BYTE PTR [rax],al
    10a0:	08 00                	or     BYTE PTR [rax],al
    10a2:	00 00                	add    BYTE PTR [rax],al
    10a4:	00 00                	add    BYTE PTR [rax],al
    10a6:	00 00                	add    BYTE PTR [rax],al
    10a8:	1a d0                	sbb    dl,al
    10aa:	00 00                	add    BYTE PTR [rax],al
    10ac:	00 00                	add    BYTE PTR [rax],al
    10ae:	00 00                	add    BYTE PTR [rax],al
    10b0:	40 20 01             	rex and BYTE PTR [rcx],al
    10b3:	00 00                	add    BYTE PTR [rax],al
    10b5:	00 00                	add    BYTE PTR [rax],al
    10b7:	00 08                	add    BYTE PTR [rax],cl
    10b9:	00 00                	add    BYTE PTR [rax],al
    10bb:	00 00                	add    BYTE PTR [rax],al
    10bd:	00 00                	add    BYTE PTR [rax],al
    10bf:	00 34 d0             	add    BYTE PTR [rax+rdx*8],dh
    10c2:	00 00                	add    BYTE PTR [rax],al
    10c4:	00 00                	add    BYTE PTR [rax],al
    10c6:	00 00                	add    BYTE PTR [rax],al
    10c8:	48 20 01             	rex.W and BYTE PTR [rcx],al
    10cb:	00 00                	add    BYTE PTR [rax],al
    10cd:	00 00                	add    BYTE PTR [rax],al
    10cf:	00 08                	add    BYTE PTR [rax],cl
    10d1:	00 00                	add    BYTE PTR [rax],al
    10d3:	00 00                	add    BYTE PTR [rax],al
    10d5:	00 00                	add    BYTE PTR [rax],al
    10d7:	00 10                	add    BYTE PTR [rax],dl
    10d9:	e6 00                	out    0x0,al
    10db:	00 00                	add    BYTE PTR [rax],al
    10dd:	00 00                	add    BYTE PTR [rax],al
    10df:	00 50 20             	add    BYTE PTR [rax+0x20],dl
    10e2:	01 00                	add    DWORD PTR [rax],eax
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	00 00                	add    BYTE PTR [rax],al
    10e8:	08 00                	or     BYTE PTR [rax],al
    10ea:	00 00                	add    BYTE PTR [rax],al
    10ec:	00 00                	add    BYTE PTR [rax],al
    10ee:	00 00                	add    BYTE PTR [rax],al
    10f0:	e8 e6 00 00 00       	call   11db <message_buffer+0xd5b>
    10f5:	00 00                	add    BYTE PTR [rax],al
    10f7:	00 d8                	add    al,bl
    10f9:	1f                   	(bad)  
    10fa:	01 00                	add    DWORD PTR [rax],eax
    10fc:	00 00                	add    BYTE PTR [rax],al
    10fe:	00 00                	add    BYTE PTR [rax],al
    1100:	06                   	(bad)  
    1101:	00 00                	add    BYTE PTR [rax],al
    1103:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
	...
    110e:	00 00                	add    BYTE PTR [rax],al
    1110:	e0 1f                	loopne 1131 <message_buffer+0xcb1>
    1112:	01 00                	add    DWORD PTR [rax],eax
    1114:	00 00                	add    BYTE PTR [rax],al
    1116:	00 00                	add    BYTE PTR [rax],al
    1118:	06                   	(bad)  
    1119:	00 00                	add    BYTE PTR [rax],al
    111b:	00 1b                	add    BYTE PTR [rbx],bl
	...
    1125:	00 00                	add    BYTE PTR [rax],al
    1127:	00 e8                	add    al,ch
    1129:	1f                   	(bad)  
    112a:	01 00                	add    DWORD PTR [rax],eax
    112c:	00 00                	add    BYTE PTR [rax],al
    112e:	00 00                	add    BYTE PTR [rax],al
    1130:	06                   	(bad)  
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	f0 1f                	lock (bad) 
    1142:	01 00                	add    DWORD PTR [rax],eax
    1144:	00 00                	add    BYTE PTR [rax],al
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	06                   	(bad)  
    1149:	00 00                	add    BYTE PTR [rax],al
    114b:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
	...
    1156:	00 00                	add    BYTE PTR [rax],al
    1158:	f8                   	clc    
    1159:	1f                   	(bad)  
    115a:	01 00                	add    DWORD PTR [rax],eax
    115c:	00 00                	add    BYTE PTR [rax],al
    115e:	00 00                	add    BYTE PTR [rax],al
    1160:	06                   	(bad)  
    1161:	00 00                	add    BYTE PTR [rax],al
    1163:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
	...
    116e:	00 00                	add    BYTE PTR [rax],al
    1170:	60                   	(bad)  
    1171:	20 01                	and    BYTE PTR [rcx],al
    1173:	00 00                	add    BYTE PTR [rax],al
    1175:	00 00                	add    BYTE PTR [rax],al
    1177:	00 05 00 00 00 4e    	add    BYTE PTR [rip+0x4e000000],al        # 4e00117d <_end+0x4dec5175>
	...

Disassembly of section .rela.plt:

0000000000001188 <.rela.plt>:
    1188:	98                   	cwde   
    1189:	1d 01 00 00 00       	sbb    eax,0x1
    118e:	00 00                	add    BYTE PTR [rax],al
    1190:	07                   	(bad)  
    1191:	00 00                	add    BYTE PTR [rax],al
    1193:	00 01                	add    BYTE PTR [rcx],al
	...
    119d:	00 00                	add    BYTE PTR [rax],al
    119f:	00 a0 1d 01 00 00    	add    BYTE PTR [rax+0x11d],ah
    11a5:	00 00                	add    BYTE PTR [rax],al
    11a7:	00 07                	add    BYTE PTR [rdi],al
    11a9:	00 00                	add    BYTE PTR [rax],al
    11ab:	00 02                	add    BYTE PTR [rdx],al
	...
    11b5:	00 00                	add    BYTE PTR [rax],al
    11b7:	00 a8 1d 01 00 00    	add    BYTE PTR [rax+0x11d],ch
    11bd:	00 00                	add    BYTE PTR [rax],al
    11bf:	00 07                	add    BYTE PTR [rdi],al
    11c1:	00 00                	add    BYTE PTR [rax],al
    11c3:	00 03                	add    BYTE PTR [rbx],al
	...
    11cd:	00 00                	add    BYTE PTR [rax],al
    11cf:	00 b0 1d 01 00 00    	add    BYTE PTR [rax+0x11d],dh
    11d5:	00 00                	add    BYTE PTR [rax],al
    11d7:	00 07                	add    BYTE PTR [rdi],al
    11d9:	00 00                	add    BYTE PTR [rax],al
    11db:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    11e6:	00 00                	add    BYTE PTR [rax],al
    11e8:	b8 1d 01 00 00       	mov    eax,0x11d
    11ed:	00 00                	add    BYTE PTR [rax],al
    11ef:	00 07                	add    BYTE PTR [rdi],al
    11f1:	00 00                	add    BYTE PTR [rax],al
    11f3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 11f9 <message_buffer+0xd79>
    11f9:	00 00                	add    BYTE PTR [rax],al
    11fb:	00 00                	add    BYTE PTR [rax],al
    11fd:	00 00                	add    BYTE PTR [rax],al
    11ff:	00 c0                	add    al,al
    1201:	1d 01 00 00 00       	sbb    eax,0x1
    1206:	00 00                	add    BYTE PTR [rax],al
    1208:	07                   	(bad)  
    1209:	00 00                	add    BYTE PTR [rax],al
    120b:	00 06                	add    BYTE PTR [rsi],al
	...
    1215:	00 00                	add    BYTE PTR [rax],al
    1217:	00 c8                	add    al,cl
    1219:	1d 01 00 00 00       	sbb    eax,0x1
    121e:	00 00                	add    BYTE PTR [rax],al
    1220:	07                   	(bad)  
    1221:	00 00                	add    BYTE PTR [rax],al
    1223:	00 07                	add    BYTE PTR [rdi],al
	...
    122d:	00 00                	add    BYTE PTR [rax],al
    122f:	00 d0                	add    al,dl
    1231:	1d 01 00 00 00       	sbb    eax,0x1
    1236:	00 00                	add    BYTE PTR [rax],al
    1238:	07                   	(bad)  
    1239:	00 00                	add    BYTE PTR [rax],al
    123b:	00 08                	add    BYTE PTR [rax],cl
	...
    1245:	00 00                	add    BYTE PTR [rax],al
    1247:	00 d8                	add    al,bl
    1249:	1d 01 00 00 00       	sbb    eax,0x1
    124e:	00 00                	add    BYTE PTR [rax],al
    1250:	07                   	(bad)  
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	00 09                	add    BYTE PTR [rcx],cl
	...
    125d:	00 00                	add    BYTE PTR [rax],al
    125f:	00 e0                	add    al,ah
    1261:	1d 01 00 00 00       	sbb    eax,0x1
    1266:	00 00                	add    BYTE PTR [rax],al
    1268:	07                   	(bad)  
    1269:	00 00                	add    BYTE PTR [rax],al
    126b:	00 0a                	add    BYTE PTR [rdx],cl
	...
    1275:	00 00                	add    BYTE PTR [rax],al
    1277:	00 e8                	add    al,ch
    1279:	1d 01 00 00 00       	sbb    eax,0x1
    127e:	00 00                	add    BYTE PTR [rax],al
    1280:	07                   	(bad)  
    1281:	00 00                	add    BYTE PTR [rax],al
    1283:	00 0b                	add    BYTE PTR [rbx],cl
	...
    128d:	00 00                	add    BYTE PTR [rax],al
    128f:	00 f0                	add    al,dh
    1291:	1d 01 00 00 00       	sbb    eax,0x1
    1296:	00 00                	add    BYTE PTR [rax],al
    1298:	07                   	(bad)  
    1299:	00 00                	add    BYTE PTR [rax],al
    129b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    12a6:	00 00                	add    BYTE PTR [rax],al
    12a8:	f8                   	clc    
    12a9:	1d 01 00 00 00       	sbb    eax,0x1
    12ae:	00 00                	add    BYTE PTR [rax],al
    12b0:	07                   	(bad)  
    12b1:	00 00                	add    BYTE PTR [rax],al
    12b3:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 12b9 <message_buffer+0xe39>
	...
    12c1:	1e                   	(bad)  
    12c2:	01 00                	add    DWORD PTR [rax],eax
    12c4:	00 00                	add    BYTE PTR [rax],al
    12c6:	00 00                	add    BYTE PTR [rax],al
    12c8:	07                   	(bad)  
    12c9:	00 00                	add    BYTE PTR [rax],al
    12cb:	00 0e                	add    BYTE PTR [rsi],cl
	...
    12d5:	00 00                	add    BYTE PTR [rax],al
    12d7:	00 08                	add    BYTE PTR [rax],cl
    12d9:	1e                   	(bad)  
    12da:	01 00                	add    DWORD PTR [rax],eax
    12dc:	00 00                	add    BYTE PTR [rax],al
    12de:	00 00                	add    BYTE PTR [rax],al
    12e0:	07                   	(bad)  
    12e1:	00 00                	add    BYTE PTR [rax],al
    12e3:	00 0f                	add    BYTE PTR [rdi],cl
	...
    12ed:	00 00                	add    BYTE PTR [rax],al
    12ef:	00 10                	add    BYTE PTR [rax],dl
    12f1:	1e                   	(bad)  
    12f2:	01 00                	add    DWORD PTR [rax],eax
    12f4:	00 00                	add    BYTE PTR [rax],al
    12f6:	00 00                	add    BYTE PTR [rax],al
    12f8:	07                   	(bad)  
    12f9:	00 00                	add    BYTE PTR [rax],al
    12fb:	00 10                	add    BYTE PTR [rax],dl
	...
    1305:	00 00                	add    BYTE PTR [rax],al
    1307:	00 18                	add    BYTE PTR [rax],bl
    1309:	1e                   	(bad)  
    130a:	01 00                	add    DWORD PTR [rax],eax
    130c:	00 00                	add    BYTE PTR [rax],al
    130e:	00 00                	add    BYTE PTR [rax],al
    1310:	07                   	(bad)  
    1311:	00 00                	add    BYTE PTR [rax],al
    1313:	00 11                	add    BYTE PTR [rcx],dl
	...
    131d:	00 00                	add    BYTE PTR [rax],al
    131f:	00 20                	add    BYTE PTR [rax],ah
    1321:	1e                   	(bad)  
    1322:	01 00                	add    DWORD PTR [rax],eax
    1324:	00 00                	add    BYTE PTR [rax],al
    1326:	00 00                	add    BYTE PTR [rax],al
    1328:	07                   	(bad)  
    1329:	00 00                	add    BYTE PTR [rax],al
    132b:	00 12                	add    BYTE PTR [rdx],dl
	...
    1335:	00 00                	add    BYTE PTR [rax],al
    1337:	00 28                	add    BYTE PTR [rax],ch
    1339:	1e                   	(bad)  
    133a:	01 00                	add    DWORD PTR [rax],eax
    133c:	00 00                	add    BYTE PTR [rax],al
    133e:	00 00                	add    BYTE PTR [rax],al
    1340:	07                   	(bad)  
    1341:	00 00                	add    BYTE PTR [rax],al
    1343:	00 13                	add    BYTE PTR [rbx],dl
	...
    134d:	00 00                	add    BYTE PTR [rax],al
    134f:	00 30                	add    BYTE PTR [rax],dh
    1351:	1e                   	(bad)  
    1352:	01 00                	add    DWORD PTR [rax],eax
    1354:	00 00                	add    BYTE PTR [rax],al
    1356:	00 00                	add    BYTE PTR [rax],al
    1358:	07                   	(bad)  
    1359:	00 00                	add    BYTE PTR [rax],al
    135b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    1366:	00 00                	add    BYTE PTR [rax],al
    1368:	38 1e                	cmp    BYTE PTR [rsi],bl
    136a:	01 00                	add    DWORD PTR [rax],eax
    136c:	00 00                	add    BYTE PTR [rax],al
    136e:	00 00                	add    BYTE PTR [rax],al
    1370:	07                   	(bad)  
    1371:	00 00                	add    BYTE PTR [rax],al
    1373:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 1379 <message_buffer+0xef9>
    1379:	00 00                	add    BYTE PTR [rax],al
    137b:	00 00                	add    BYTE PTR [rax],al
    137d:	00 00                	add    BYTE PTR [rax],al
    137f:	00 40 1e             	add    BYTE PTR [rax+0x1e],al
    1382:	01 00                	add    DWORD PTR [rax],eax
    1384:	00 00                	add    BYTE PTR [rax],al
    1386:	00 00                	add    BYTE PTR [rax],al
    1388:	07                   	(bad)  
    1389:	00 00                	add    BYTE PTR [rax],al
    138b:	00 16                	add    BYTE PTR [rsi],dl
	...
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	00 48 1e             	add    BYTE PTR [rax+0x1e],cl
    139a:	01 00                	add    DWORD PTR [rax],eax
    139c:	00 00                	add    BYTE PTR [rax],al
    139e:	00 00                	add    BYTE PTR [rax],al
    13a0:	07                   	(bad)  
    13a1:	00 00                	add    BYTE PTR [rax],al
    13a3:	00 17                	add    BYTE PTR [rdi],dl
	...
    13ad:	00 00                	add    BYTE PTR [rax],al
    13af:	00 50 1e             	add    BYTE PTR [rax+0x1e],dl
    13b2:	01 00                	add    DWORD PTR [rax],eax
    13b4:	00 00                	add    BYTE PTR [rax],al
    13b6:	00 00                	add    BYTE PTR [rax],al
    13b8:	07                   	(bad)  
    13b9:	00 00                	add    BYTE PTR [rax],al
    13bb:	00 18                	add    BYTE PTR [rax],bl
	...
    13c5:	00 00                	add    BYTE PTR [rax],al
    13c7:	00 58 1e             	add    BYTE PTR [rax+0x1e],bl
    13ca:	01 00                	add    DWORD PTR [rax],eax
    13cc:	00 00                	add    BYTE PTR [rax],al
    13ce:	00 00                	add    BYTE PTR [rax],al
    13d0:	07                   	(bad)  
    13d1:	00 00                	add    BYTE PTR [rax],al
    13d3:	00 19                	add    BYTE PTR [rcx],bl
	...
    13dd:	00 00                	add    BYTE PTR [rax],al
    13df:	00 60 1e             	add    BYTE PTR [rax+0x1e],ah
    13e2:	01 00                	add    DWORD PTR [rax],eax
    13e4:	00 00                	add    BYTE PTR [rax],al
    13e6:	00 00                	add    BYTE PTR [rax],al
    13e8:	07                   	(bad)  
    13e9:	00 00                	add    BYTE PTR [rax],al
    13eb:	00 1a                	add    BYTE PTR [rdx],bl
	...
    13f5:	00 00                	add    BYTE PTR [rax],al
    13f7:	00 68 1e             	add    BYTE PTR [rax+0x1e],ch
    13fa:	01 00                	add    DWORD PTR [rax],eax
    13fc:	00 00                	add    BYTE PTR [rax],al
    13fe:	00 00                	add    BYTE PTR [rax],al
    1400:	07                   	(bad)  
    1401:	00 00                	add    BYTE PTR [rax],al
    1403:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    140e:	00 00                	add    BYTE PTR [rax],al
    1410:	70 1e                	jo     1430 <message_buffer+0xfb0>
    1412:	01 00                	add    DWORD PTR [rax],eax
    1414:	00 00                	add    BYTE PTR [rax],al
    1416:	00 00                	add    BYTE PTR [rax],al
    1418:	07                   	(bad)  
    1419:	00 00                	add    BYTE PTR [rax],al
    141b:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 1421 <message_buffer+0xfa1>
    1421:	00 00                	add    BYTE PTR [rax],al
    1423:	00 00                	add    BYTE PTR [rax],al
    1425:	00 00                	add    BYTE PTR [rax],al
    1427:	00 78 1e             	add    BYTE PTR [rax+0x1e],bh
    142a:	01 00                	add    DWORD PTR [rax],eax
    142c:	00 00                	add    BYTE PTR [rax],al
    142e:	00 00                	add    BYTE PTR [rax],al
    1430:	07                   	(bad)  
    1431:	00 00                	add    BYTE PTR [rax],al
    1433:	00 1e                	add    BYTE PTR [rsi],bl
	...
    143d:	00 00                	add    BYTE PTR [rax],al
    143f:	00 80 1e 01 00 00    	add    BYTE PTR [rax+0x11e],al
    1445:	00 00                	add    BYTE PTR [rax],al
    1447:	00 07                	add    BYTE PTR [rdi],al
    1449:	00 00                	add    BYTE PTR [rax],al
    144b:	00 1f                	add    BYTE PTR [rdi],bl
	...
    1455:	00 00                	add    BYTE PTR [rax],al
    1457:	00 88 1e 01 00 00    	add    BYTE PTR [rax+0x11e],cl
    145d:	00 00                	add    BYTE PTR [rax],al
    145f:	00 07                	add    BYTE PTR [rdi],al
    1461:	00 00                	add    BYTE PTR [rax],al
    1463:	00 20                	add    BYTE PTR [rax],ah
	...
    146d:	00 00                	add    BYTE PTR [rax],al
    146f:	00 90 1e 01 00 00    	add    BYTE PTR [rax+0x11e],dl
    1475:	00 00                	add    BYTE PTR [rax],al
    1477:	00 07                	add    BYTE PTR [rdi],al
    1479:	00 00                	add    BYTE PTR [rax],al
    147b:	00 21                	add    BYTE PTR [rcx],ah
	...
    1485:	00 00                	add    BYTE PTR [rax],al
    1487:	00 98 1e 01 00 00    	add    BYTE PTR [rax+0x11e],bl
    148d:	00 00                	add    BYTE PTR [rax],al
    148f:	00 07                	add    BYTE PTR [rdi],al
    1491:	00 00                	add    BYTE PTR [rax],al
    1493:	00 22                	add    BYTE PTR [rdx],ah
	...
    149d:	00 00                	add    BYTE PTR [rax],al
    149f:	00 a0 1e 01 00 00    	add    BYTE PTR [rax+0x11e],ah
    14a5:	00 00                	add    BYTE PTR [rax],al
    14a7:	00 07                	add    BYTE PTR [rdi],al
    14a9:	00 00                	add    BYTE PTR [rax],al
    14ab:	00 23                	add    BYTE PTR [rbx],ah
	...
    14b5:	00 00                	add    BYTE PTR [rax],al
    14b7:	00 a8 1e 01 00 00    	add    BYTE PTR [rax+0x11e],ch
    14bd:	00 00                	add    BYTE PTR [rax],al
    14bf:	00 07                	add    BYTE PTR [rdi],al
    14c1:	00 00                	add    BYTE PTR [rax],al
    14c3:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    14ce:	00 00                	add    BYTE PTR [rax],al
    14d0:	b0 1e                	mov    al,0x1e
    14d2:	01 00                	add    DWORD PTR [rax],eax
    14d4:	00 00                	add    BYTE PTR [rax],al
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	07                   	(bad)  
    14d9:	00 00                	add    BYTE PTR [rax],al
    14db:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 14e1 <message_buffer+0x1061>
    14e1:	00 00                	add    BYTE PTR [rax],al
    14e3:	00 00                	add    BYTE PTR [rax],al
    14e5:	00 00                	add    BYTE PTR [rax],al
    14e7:	00 b8 1e 01 00 00    	add    BYTE PTR [rax+0x11e],bh
    14ed:	00 00                	add    BYTE PTR [rax],al
    14ef:	00 07                	add    BYTE PTR [rdi],al
    14f1:	00 00                	add    BYTE PTR [rax],al
    14f3:	00 26                	add    BYTE PTR [rsi],ah
	...
    14fd:	00 00                	add    BYTE PTR [rax],al
    14ff:	00 c0                	add    al,al
    1501:	1e                   	(bad)  
    1502:	01 00                	add    DWORD PTR [rax],eax
    1504:	00 00                	add    BYTE PTR [rax],al
    1506:	00 00                	add    BYTE PTR [rax],al
    1508:	07                   	(bad)  
    1509:	00 00                	add    BYTE PTR [rax],al
    150b:	00 27                	add    BYTE PTR [rdi],ah
	...
    1515:	00 00                	add    BYTE PTR [rax],al
    1517:	00 c8                	add    al,cl
    1519:	1e                   	(bad)  
    151a:	01 00                	add    DWORD PTR [rax],eax
    151c:	00 00                	add    BYTE PTR [rax],al
    151e:	00 00                	add    BYTE PTR [rax],al
    1520:	07                   	(bad)  
    1521:	00 00                	add    BYTE PTR [rax],al
    1523:	00 28                	add    BYTE PTR [rax],ch
	...
    152d:	00 00                	add    BYTE PTR [rax],al
    152f:	00 d0                	add    al,dl
    1531:	1e                   	(bad)  
    1532:	01 00                	add    DWORD PTR [rax],eax
    1534:	00 00                	add    BYTE PTR [rax],al
    1536:	00 00                	add    BYTE PTR [rax],al
    1538:	07                   	(bad)  
    1539:	00 00                	add    BYTE PTR [rax],al
    153b:	00 29                	add    BYTE PTR [rcx],ch
	...
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	00 d8                	add    al,bl
    1549:	1e                   	(bad)  
    154a:	01 00                	add    DWORD PTR [rax],eax
    154c:	00 00                	add    BYTE PTR [rax],al
    154e:	00 00                	add    BYTE PTR [rax],al
    1550:	07                   	(bad)  
    1551:	00 00                	add    BYTE PTR [rax],al
    1553:	00 2a                	add    BYTE PTR [rdx],ch
	...
    155d:	00 00                	add    BYTE PTR [rax],al
    155f:	00 e0                	add    al,ah
    1561:	1e                   	(bad)  
    1562:	01 00                	add    DWORD PTR [rax],eax
    1564:	00 00                	add    BYTE PTR [rax],al
    1566:	00 00                	add    BYTE PTR [rax],al
    1568:	07                   	(bad)  
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	00 2b                	add    BYTE PTR [rbx],ch
	...
    1575:	00 00                	add    BYTE PTR [rax],al
    1577:	00 e8                	add    al,ch
    1579:	1e                   	(bad)  
    157a:	01 00                	add    DWORD PTR [rax],eax
    157c:	00 00                	add    BYTE PTR [rax],al
    157e:	00 00                	add    BYTE PTR [rax],al
    1580:	07                   	(bad)  
    1581:	00 00                	add    BYTE PTR [rax],al
    1583:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    158e:	00 00                	add    BYTE PTR [rax],al
    1590:	f0 1e                	lock (bad) 
    1592:	01 00                	add    DWORD PTR [rax],eax
    1594:	00 00                	add    BYTE PTR [rax],al
    1596:	00 00                	add    BYTE PTR [rax],al
    1598:	07                   	(bad)  
    1599:	00 00                	add    BYTE PTR [rax],al
    159b:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 15a1 <message_buffer+0x1121>
    15a1:	00 00                	add    BYTE PTR [rax],al
    15a3:	00 00                	add    BYTE PTR [rax],al
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 f8                	add    al,bh
    15a9:	1e                   	(bad)  
    15aa:	01 00                	add    DWORD PTR [rax],eax
    15ac:	00 00                	add    BYTE PTR [rax],al
    15ae:	00 00                	add    BYTE PTR [rax],al
    15b0:	07                   	(bad)  
    15b1:	00 00                	add    BYTE PTR [rax],al
    15b3:	00 2e                	add    BYTE PTR [rsi],ch
	...
    15c1:	1f                   	(bad)  
    15c2:	01 00                	add    DWORD PTR [rax],eax
    15c4:	00 00                	add    BYTE PTR [rax],al
    15c6:	00 00                	add    BYTE PTR [rax],al
    15c8:	07                   	(bad)  
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	00 2f                	add    BYTE PTR [rdi],ch
	...
    15d5:	00 00                	add    BYTE PTR [rax],al
    15d7:	00 08                	add    BYTE PTR [rax],cl
    15d9:	1f                   	(bad)  
    15da:	01 00                	add    DWORD PTR [rax],eax
    15dc:	00 00                	add    BYTE PTR [rax],al
    15de:	00 00                	add    BYTE PTR [rax],al
    15e0:	07                   	(bad)  
    15e1:	00 00                	add    BYTE PTR [rax],al
    15e3:	00 30                	add    BYTE PTR [rax],dh
	...
    15ed:	00 00                	add    BYTE PTR [rax],al
    15ef:	00 10                	add    BYTE PTR [rax],dl
    15f1:	1f                   	(bad)  
    15f2:	01 00                	add    DWORD PTR [rax],eax
    15f4:	00 00                	add    BYTE PTR [rax],al
    15f6:	00 00                	add    BYTE PTR [rax],al
    15f8:	07                   	(bad)  
    15f9:	00 00                	add    BYTE PTR [rax],al
    15fb:	00 31                	add    BYTE PTR [rcx],dh
	...
    1605:	00 00                	add    BYTE PTR [rax],al
    1607:	00 18                	add    BYTE PTR [rax],bl
    1609:	1f                   	(bad)  
    160a:	01 00                	add    DWORD PTR [rax],eax
    160c:	00 00                	add    BYTE PTR [rax],al
    160e:	00 00                	add    BYTE PTR [rax],al
    1610:	07                   	(bad)  
    1611:	00 00                	add    BYTE PTR [rax],al
    1613:	00 32                	add    BYTE PTR [rdx],dh
	...
    161d:	00 00                	add    BYTE PTR [rax],al
    161f:	00 20                	add    BYTE PTR [rax],ah
    1621:	1f                   	(bad)  
    1622:	01 00                	add    DWORD PTR [rax],eax
    1624:	00 00                	add    BYTE PTR [rax],al
    1626:	00 00                	add    BYTE PTR [rax],al
    1628:	07                   	(bad)  
    1629:	00 00                	add    BYTE PTR [rax],al
    162b:	00 33                	add    BYTE PTR [rbx],dh
	...
    1635:	00 00                	add    BYTE PTR [rax],al
    1637:	00 28                	add    BYTE PTR [rax],ch
    1639:	1f                   	(bad)  
    163a:	01 00                	add    DWORD PTR [rax],eax
    163c:	00 00                	add    BYTE PTR [rax],al
    163e:	00 00                	add    BYTE PTR [rax],al
    1640:	07                   	(bad)  
    1641:	00 00                	add    BYTE PTR [rax],al
    1643:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    164e:	00 00                	add    BYTE PTR [rax],al
    1650:	30 1f                	xor    BYTE PTR [rdi],bl
    1652:	01 00                	add    DWORD PTR [rax],eax
    1654:	00 00                	add    BYTE PTR [rax],al
    1656:	00 00                	add    BYTE PTR [rax],al
    1658:	07                   	(bad)  
    1659:	00 00                	add    BYTE PTR [rax],al
    165b:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 1661 <message_buffer+0x11e1>
    1661:	00 00                	add    BYTE PTR [rax],al
    1663:	00 00                	add    BYTE PTR [rax],al
    1665:	00 00                	add    BYTE PTR [rax],al
    1667:	00 38                	add    BYTE PTR [rax],bh
    1669:	1f                   	(bad)  
    166a:	01 00                	add    DWORD PTR [rax],eax
    166c:	00 00                	add    BYTE PTR [rax],al
    166e:	00 00                	add    BYTE PTR [rax],al
    1670:	07                   	(bad)  
    1671:	00 00                	add    BYTE PTR [rax],al
    1673:	00 36                	add    BYTE PTR [rsi],dh
	...
    167d:	00 00                	add    BYTE PTR [rax],al
    167f:	00 40 1f             	add    BYTE PTR [rax+0x1f],al
    1682:	01 00                	add    DWORD PTR [rax],eax
    1684:	00 00                	add    BYTE PTR [rax],al
    1686:	00 00                	add    BYTE PTR [rax],al
    1688:	07                   	(bad)  
    1689:	00 00                	add    BYTE PTR [rax],al
    168b:	00 37                	add    BYTE PTR [rdi],dh
	...
    1695:	00 00                	add    BYTE PTR [rax],al
    1697:	00 48 1f             	add    BYTE PTR [rax+0x1f],cl
    169a:	01 00                	add    DWORD PTR [rax],eax
    169c:	00 00                	add    BYTE PTR [rax],al
    169e:	00 00                	add    BYTE PTR [rax],al
    16a0:	07                   	(bad)  
    16a1:	00 00                	add    BYTE PTR [rax],al
    16a3:	00 38                	add    BYTE PTR [rax],bh
	...
    16ad:	00 00                	add    BYTE PTR [rax],al
    16af:	00 50 1f             	add    BYTE PTR [rax+0x1f],dl
    16b2:	01 00                	add    DWORD PTR [rax],eax
    16b4:	00 00                	add    BYTE PTR [rax],al
    16b6:	00 00                	add    BYTE PTR [rax],al
    16b8:	07                   	(bad)  
    16b9:	00 00                	add    BYTE PTR [rax],al
    16bb:	00 39                	add    BYTE PTR [rcx],bh
	...
    16c5:	00 00                	add    BYTE PTR [rax],al
    16c7:	00 58 1f             	add    BYTE PTR [rax+0x1f],bl
    16ca:	01 00                	add    DWORD PTR [rax],eax
    16cc:	00 00                	add    BYTE PTR [rax],al
    16ce:	00 00                	add    BYTE PTR [rax],al
    16d0:	07                   	(bad)  
    16d1:	00 00                	add    BYTE PTR [rax],al
    16d3:	00 3a                	add    BYTE PTR [rdx],bh
	...
    16dd:	00 00                	add    BYTE PTR [rax],al
    16df:	00 60 1f             	add    BYTE PTR [rax+0x1f],ah
    16e2:	01 00                	add    DWORD PTR [rax],eax
    16e4:	00 00                	add    BYTE PTR [rax],al
    16e6:	00 00                	add    BYTE PTR [rax],al
    16e8:	07                   	(bad)  
    16e9:	00 00                	add    BYTE PTR [rax],al
    16eb:	00 3b                	add    BYTE PTR [rbx],bh
	...
    16f5:	00 00                	add    BYTE PTR [rax],al
    16f7:	00 68 1f             	add    BYTE PTR [rax+0x1f],ch
    16fa:	01 00                	add    DWORD PTR [rax],eax
    16fc:	00 00                	add    BYTE PTR [rax],al
    16fe:	00 00                	add    BYTE PTR [rax],al
    1700:	07                   	(bad)  
    1701:	00 00                	add    BYTE PTR [rax],al
    1703:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    170e:	00 00                	add    BYTE PTR [rax],al
    1710:	70 1f                	jo     1731 <message_buffer+0x12b1>
    1712:	01 00                	add    DWORD PTR [rax],eax
    1714:	00 00                	add    BYTE PTR [rax],al
    1716:	00 00                	add    BYTE PTR [rax],al
    1718:	07                   	(bad)  
    1719:	00 00                	add    BYTE PTR [rax],al
    171b:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 1721 <message_buffer+0x12a1>
    1721:	00 00                	add    BYTE PTR [rax],al
    1723:	00 00                	add    BYTE PTR [rax],al
    1725:	00 00                	add    BYTE PTR [rax],al
    1727:	00 78 1f             	add    BYTE PTR [rax+0x1f],bh
    172a:	01 00                	add    DWORD PTR [rax],eax
    172c:	00 00                	add    BYTE PTR [rax],al
    172e:	00 00                	add    BYTE PTR [rax],al
    1730:	07                   	(bad)  
    1731:	00 00                	add    BYTE PTR [rax],al
    1733:	00 3e                	add    BYTE PTR [rsi],bh
	...
    173d:	00 00                	add    BYTE PTR [rax],al
    173f:	00 80 1f 01 00 00    	add    BYTE PTR [rax+0x11f],al
    1745:	00 00                	add    BYTE PTR [rax],al
    1747:	00 07                	add    BYTE PTR [rdi],al
    1749:	00 00                	add    BYTE PTR [rax],al
    174b:	00 3f                	add    BYTE PTR [rdi],bh
	...
    1755:	00 00                	add    BYTE PTR [rax],al
    1757:	00 88 1f 01 00 00    	add    BYTE PTR [rax+0x11f],cl
    175d:	00 00                	add    BYTE PTR [rax],al
    175f:	00 07                	add    BYTE PTR [rdi],al
    1761:	00 00                	add    BYTE PTR [rax],al
    1763:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    176e:	00 00                	add    BYTE PTR [rax],al
    1770:	90                   	nop
    1771:	1f                   	(bad)  
    1772:	01 00                	add    DWORD PTR [rax],eax
    1774:	00 00                	add    BYTE PTR [rax],al
    1776:	00 00                	add    BYTE PTR [rax],al
    1778:	07                   	(bad)  
    1779:	00 00                	add    BYTE PTR [rax],al
    177b:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    1786:	00 00                	add    BYTE PTR [rax],al
    1788:	98                   	cwde   
    1789:	1f                   	(bad)  
    178a:	01 00                	add    DWORD PTR [rax],eax
    178c:	00 00                	add    BYTE PTR [rax],al
    178e:	00 00                	add    BYTE PTR [rax],al
    1790:	07                   	(bad)  
    1791:	00 00                	add    BYTE PTR [rax],al
    1793:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    179e:	00 00                	add    BYTE PTR [rax],al
    17a0:	a0 1f 01 00 00 00 00 	movabs al,ds:0x70000000000011f
    17a7:	00 07 
    17a9:	00 00                	add    BYTE PTR [rax],al
    17ab:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    17b6:	00 00                	add    BYTE PTR [rax],al
    17b8:	a8 1f                	test   al,0x1f
    17ba:	01 00                	add    DWORD PTR [rax],eax
    17bc:	00 00                	add    BYTE PTR [rax],al
    17be:	00 00                	add    BYTE PTR [rax],al
    17c0:	07                   	(bad)  
    17c1:	00 00                	add    BYTE PTR [rax],al
    17c3:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    17cf:	00 b0 1f 01 00 00    	add    BYTE PTR [rax+0x11f],dh
    17d5:	00 00                	add    BYTE PTR [rax],al
    17d7:	00 07                	add    BYTE PTR [rdi],al
    17d9:	00 00                	add    BYTE PTR [rax],al
    17db:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
    17e6:	00 00                	add    BYTE PTR [rax],al
    17e8:	b8 1f 01 00 00       	mov    eax,0x11f
    17ed:	00 00                	add    BYTE PTR [rax],al
    17ef:	00 07                	add    BYTE PTR [rdi],al
    17f1:	00 00                	add    BYTE PTR [rax],al
    17f3:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    17fe:	00 00                	add    BYTE PTR [rax],al
    1800:	c0 1f 01             	rcr    BYTE PTR [rdi],0x1
    1803:	00 00                	add    BYTE PTR [rax],al
    1805:	00 00                	add    BYTE PTR [rax],al
    1807:	00 07                	add    BYTE PTR [rdi],al
    1809:	00 00                	add    BYTE PTR [rax],al
    180b:	00 48 00             	add    BYTE PTR [rax+0x0],cl
	...
    1816:	00 00                	add    BYTE PTR [rax],al
    1818:	c8 1f 01 00          	enter  0x11f,0x0
    181c:	00 00                	add    BYTE PTR [rax],al
    181e:	00 00                	add    BYTE PTR [rax],al
    1820:	07                   	(bad)  
    1821:	00 00                	add    BYTE PTR [rax],al
    1823:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
	...
    182e:	00 00                	add    BYTE PTR [rax],al
    1830:	d0 1f                	rcr    BYTE PTR [rdi],1
    1832:	01 00                	add    DWORD PTR [rax],eax
    1834:	00 00                	add    BYTE PTR [rax],al
    1836:	00 00                	add    BYTE PTR [rax],al
    1838:	07                   	(bad)  
    1839:	00 00                	add    BYTE PTR [rax],al
    183b:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 e1 ff 00 00 	mov    rax,QWORD PTR [rip+0xffe1]        # 11ff0 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 62 fd 00 00    	push   QWORD PTR [rip+0xfd62]        # 11d88 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 63 fd 00 00 	bnd jmp QWORD PTR [rip+0xfd63]        # 11d90 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    245f:	90                   	nop
    2460:	f3 0f 1e fa          	endbr64 
    2464:	68 43 00 00 00       	push   0x43
    2469:	f2 e9 b1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    246f:	90                   	nop
    2470:	f3 0f 1e fa          	endbr64 
    2474:	68 44 00 00 00       	push   0x44
    2479:	f2 e9 a1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    247f:	90                   	nop
    2480:	f3 0f 1e fa          	endbr64 
    2484:	68 45 00 00 00       	push   0x45
    2489:	f2 e9 91 fb ff ff    	bnd jmp 2020 <_init+0x20>
    248f:	90                   	nop
    2490:	f3 0f 1e fa          	endbr64 
    2494:	68 46 00 00 00       	push   0x46
    2499:	f2 e9 81 fb ff ff    	bnd jmp 2020 <_init+0x20>
    249f:	90                   	nop
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	68 47 00 00 00       	push   0x47
    24a9:	f2 e9 71 fb ff ff    	bnd jmp 2020 <_init+0x20>
    24af:	90                   	nop

Disassembly of section .plt.got:

00000000000024b0 <__cxa_finalize@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 1d fb 00 00 	bnd jmp QWORD PTR [rip+0xfb1d]        # 11fd8 <__cxa_finalize@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000024c0 <pcap_loop@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 cd f8 00 00 	bnd jmp QWORD PTR [rip+0xf8cd]        # 11d98 <pcap_loop>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <printf@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 c5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8c5]        # 11da0 <printf@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <htons@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 bd f8 00 00 	bnd jmp QWORD PTR [rip+0xf8bd]        # 11da8 <htons@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <strcspn@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 b5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8b5]        # 11db0 <strcspn@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <bind@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 ad f8 00 00 	bnd jmp QWORD PTR [rip+0xf8ad]        # 11db8 <bind@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <sprintf@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 a5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8a5]        # 11dc0 <sprintf@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <strstr@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 9d f8 00 00 	bnd jmp QWORD PTR [rip+0xf89d]        # 11dc8 <strstr@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <SHA512_Update@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 95 f8 00 00 	bnd jmp QWORD PTR [rip+0xf895]        # 11dd0 <SHA512_Update@OPENSSL_1_1_0>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <getopt@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 8d f8 00 00 	bnd jmp QWORD PTR [rip+0xf88d]        # 11dd8 <getopt@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <socket@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 85 f8 00 00 	bnd jmp QWORD PTR [rip+0xf885]        # 11de0 <socket@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <accept@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 7d f8 00 00 	bnd jmp QWORD PTR [rip+0xf87d]        # 11de8 <accept@GLIBC_2.2.5>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <luaL_loadfilex@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 75 f8 00 00 	bnd jmp QWORD PTR [rip+0xf875]        # 11df0 <luaL_loadfilex@LUA_5.3>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <strchr@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 6d f8 00 00 	bnd jmp QWORD PTR [rip+0xf86d]        # 11df8 <strchr@GLIBC_2.2.5>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <pcap_open_live@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 65 f8 00 00 	bnd jmp QWORD PTR [rip+0xf865]        # 11e00 <pcap_open_live>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <SHA512_Final@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 5d f8 00 00 	bnd jmp QWORD PTR [rip+0xf85d]        # 11e08 <SHA512_Final@OPENSSL_1_1_0>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <strlen@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 55 f8 00 00 	bnd jmp QWORD PTR [rip+0xf855]        # 11e10 <strlen@GLIBC_2.2.5>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <inet_ntoa@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 4d f8 00 00 	bnd jmp QWORD PTR [rip+0xf84d]        # 11e18 <inet_ntoa@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <strncmp@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 45 f8 00 00 	bnd jmp QWORD PTR [rip+0xf845]        # 11e20 <strncmp@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <send@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 3d f8 00 00 	bnd jmp QWORD PTR [rip+0xf83d]        # 11e28 <send@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <sqlite3_close@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 35 f8 00 00 	bnd jmp QWORD PTR [rip+0xf835]        # 11e30 <sqlite3_close>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <strncpy@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 2d f8 00 00 	bnd jmp QWORD PTR [rip+0xf82d]        # 11e38 <strncpy@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <lua_close@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 25 f8 00 00 	bnd jmp QWORD PTR [rip+0xf825]        # 11e40 <lua_close@LUA_5.3>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <memset@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 1d f8 00 00 	bnd jmp QWORD PTR [rip+0xf81d]        # 11e48 <memset@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <getrusage@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 15 f8 00 00 	bnd jmp QWORD PTR [rip+0xf815]        # 11e50 <getrusage@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <strncat@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 0d f8 00 00 	bnd jmp QWORD PTR [rip+0xf80d]        # 11e58 <strncat@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <localtime@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 05 f8 00 00 	bnd jmp QWORD PTR [rip+0xf805]        # 11e60 <localtime@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <sleep@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 fd f7 00 00 	bnd jmp QWORD PTR [rip+0xf7fd]        # 11e68 <sleep@GLIBC_2.2.5>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <htonl@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 f5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7f5]        # 11e70 <htonl@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <luaL_openlibs@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 ed f7 00 00 	bnd jmp QWORD PTR [rip+0xf7ed]        # 11e78 <luaL_openlibs@LUA_5.3>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <perror@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 e5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7e5]        # 11e80 <perror@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <pthread_join@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 dd f7 00 00 	bnd jmp QWORD PTR [rip+0xf7dd]        # 11e88 <pthread_join@GLIBC_2.34>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <time@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 d5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7d5]        # 11e90 <time@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <strcpy@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 cd f7 00 00 	bnd jmp QWORD PTR [rip+0xf7cd]        # 11e98 <strcpy@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <sqlite3_errmsg@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 c5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7c5]        # 11ea0 <sqlite3_errmsg>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <fclose@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 bd f7 00 00 	bnd jmp QWORD PTR [rip+0xf7bd]        # 11ea8 <fclose@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <__stack_chk_fail@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 b5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7b5]        # 11eb0 <__stack_chk_fail@GLIBC_2.4>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <fputs@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 ad f7 00 00 	bnd jmp QWORD PTR [rip+0xf7ad]        # 11eb8 <fputs@GLIBC_2.2.5>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <listen@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 a5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7a5]        # 11ec0 <listen@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <regcomp@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 9d f7 00 00 	bnd jmp QWORD PTR [rip+0xf79d]        # 11ec8 <regcomp@GLIBC_2.2.5>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <fopen@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 95 f7 00 00 	bnd jmp QWORD PTR [rip+0xf795]        # 11ed0 <fopen@GLIBC_2.2.5>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <signal@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 8d f7 00 00 	bnd jmp QWORD PTR [rip+0xf78d]        # 11ed8 <signal@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <free@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 85 f7 00 00 	bnd jmp QWORD PTR [rip+0xf785]        # 11ee0 <free@GLIBC_2.2.5>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <exit@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 7d f7 00 00 	bnd jmp QWORD PTR [rip+0xf77d]        # 11ee8 <exit@GLIBC_2.2.5>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <regexec@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 75 f7 00 00 	bnd jmp QWORD PTR [rip+0xf775]        # 11ef0 <regexec@GLIBC_2.3.4>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <sqlite3_free@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 6d f7 00 00 	bnd jmp QWORD PTR [rip+0xf76d]        # 11ef8 <sqlite3_free>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <getline@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 65 f7 00 00 	bnd jmp QWORD PTR [rip+0xf765]        # 11f00 <getline@GLIBC_2.2.5>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <ntohl@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 5d f7 00 00 	bnd jmp QWORD PTR [rip+0xf75d]        # 11f08 <ntohl@GLIBC_2.2.5>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <malloc@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 55 f7 00 00 	bnd jmp QWORD PTR [rip+0xf755]        # 11f10 <malloc@GLIBC_2.2.5>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <sqlite3_exec@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 4d f7 00 00 	bnd jmp QWORD PTR [rip+0xf74d]        # 11f18 <sqlite3_exec>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <luaL_newstate@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 45 f7 00 00 	bnd jmp QWORD PTR [rip+0xf745]        # 11f20 <luaL_newstate@LUA_5.3>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <lua_gettop@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 3d f7 00 00 	bnd jmp QWORD PTR [rip+0xf73d]        # 11f28 <lua_gettop@LUA_5.3>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <putchar@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 35 f7 00 00 	bnd jmp QWORD PTR [rip+0xf735]        # 11f30 <putchar@GLIBC_2.2.5>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <strcmp@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 2d f7 00 00 	bnd jmp QWORD PTR [rip+0xf72d]        # 11f38 <strcmp@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <strtol@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 25 f7 00 00 	bnd jmp QWORD PTR [rip+0xf725]        # 11f40 <strtol@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <lua_settop@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 1d f7 00 00 	bnd jmp QWORD PTR [rip+0xf71d]        # 11f48 <lua_settop@LUA_5.3>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <fprintf@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 15 f7 00 00 	bnd jmp QWORD PTR [rip+0xf715]        # 11f50 <fprintf@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <read@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 0d f7 00 00 	bnd jmp QWORD PTR [rip+0xf70d]        # 11f58 <read@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <backtrace@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 05 f7 00 00 	bnd jmp QWORD PTR [rip+0xf705]        # 11f60 <backtrace@GLIBC_2.2.5>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <backtrace_symbols@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 fd f6 00 00 	bnd jmp QWORD PTR [rip+0xf6fd]        # 11f68 <backtrace_symbols@GLIBC_2.2.5>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <SHA512_Init@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 f5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6f5]        # 11f70 <SHA512_Init@OPENSSL_1_1_0>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <puts@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 ed f6 00 00 	bnd jmp QWORD PTR [rip+0xf6ed]        # 11f78 <puts@GLIBC_2.2.5>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <atoi@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 e5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6e5]        # 11f80 <atoi@GLIBC_2.2.5>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028a0 <strtok@plt>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	f2 ff 25 dd f6 00 00 	bnd jmp QWORD PTR [rip+0xf6dd]        # 11f88 <strtok@GLIBC_2.2.5>
    28ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028b0 <snprintf@plt>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	f2 ff 25 d5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6d5]        # 11f90 <snprintf@GLIBC_2.2.5>
    28bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028c0 <getdelim@plt>:
    28c0:	f3 0f 1e fa          	endbr64 
    28c4:	f2 ff 25 cd f6 00 00 	bnd jmp QWORD PTR [rip+0xf6cd]        # 11f98 <getdelim@GLIBC_2.2.5>
    28cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028d0 <lua_pcallk@plt>:
    28d0:	f3 0f 1e fa          	endbr64 
    28d4:	f2 ff 25 c5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6c5]        # 11fa0 <lua_pcallk@LUA_5.3>
    28db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028e0 <sqlite3_open@plt>:
    28e0:	f3 0f 1e fa          	endbr64 
    28e4:	f2 ff 25 bd f6 00 00 	bnd jmp QWORD PTR [rip+0xf6bd]        # 11fa8 <sqlite3_open>
    28eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028f0 <strcat@plt>:
    28f0:	f3 0f 1e fa          	endbr64 
    28f4:	f2 ff 25 b5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6b5]        # 11fb0 <strcat@GLIBC_2.2.5>
    28fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002900 <setsockopt@plt>:
    2900:	f3 0f 1e fa          	endbr64 
    2904:	f2 ff 25 ad f6 00 00 	bnd jmp QWORD PTR [rip+0xf6ad]        # 11fb8 <setsockopt@GLIBC_2.2.5>
    290b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002910 <pthread_create@plt>:
    2910:	f3 0f 1e fa          	endbr64 
    2914:	f2 ff 25 a5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6a5]        # 11fc0 <pthread_create@GLIBC_2.34>
    291b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002920 <ntohs@plt>:
    2920:	f3 0f 1e fa          	endbr64 
    2924:	f2 ff 25 9d f6 00 00 	bnd jmp QWORD PTR [rip+0xf69d]        # 11fc8 <ntohs@GLIBC_2.2.5>
    292b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002930 <close@plt>:
    2930:	f3 0f 1e fa          	endbr64 
    2934:	f2 ff 25 95 f6 00 00 	bnd jmp QWORD PTR [rip+0xf695]        # 11fd0 <close@GLIBC_2.2.5>
    293b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002940 <_start>:
    2940:	f3 0f 1e fa          	endbr64 
    2944:	31 ed                	xor    ebp,ebp
    2946:	49 89 d1             	mov    r9,rdx
    2949:	5e                   	pop    rsi
    294a:	48 89 e2             	mov    rdx,rsp
    294d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2951:	50                   	push   rax
    2952:	54                   	push   rsp
    2953:	45 31 c0             	xor    r8d,r8d
    2956:	31 c9                	xor    ecx,ecx
    2958:	48 8d 3d 8a 3f 00 00 	lea    rdi,[rip+0x3f8a]        # 68e9 <main>
    295f:	ff 15 7b f6 00 00    	call   QWORD PTR [rip+0xf67b]        # 11fe0 <__libc_start_main@GLIBC_2.34>
    2965:	f4                   	hlt    
    2966:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    296d:	00 00 00 

0000000000002970 <deregister_tm_clones>:
    2970:	48 8d 3d e1 f6 00 00 	lea    rdi,[rip+0xf6e1]        # 12058 <__TMC_END__>
    2977:	48 8d 05 da f6 00 00 	lea    rax,[rip+0xf6da]        # 12058 <__TMC_END__>
    297e:	48 39 f8             	cmp    rax,rdi
    2981:	74 15                	je     2998 <deregister_tm_clones+0x28>
    2983:	48 8b 05 5e f6 00 00 	mov    rax,QWORD PTR [rip+0xf65e]        # 11fe8 <_ITM_deregisterTMCloneTable>
    298a:	48 85 c0             	test   rax,rax
    298d:	74 09                	je     2998 <deregister_tm_clones+0x28>
    298f:	ff e0                	jmp    rax
    2991:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2998:	c3                   	ret    
    2999:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029a0 <register_tm_clones>:
    29a0:	48 8d 3d b1 f6 00 00 	lea    rdi,[rip+0xf6b1]        # 12058 <__TMC_END__>
    29a7:	48 8d 35 aa f6 00 00 	lea    rsi,[rip+0xf6aa]        # 12058 <__TMC_END__>
    29ae:	48 29 fe             	sub    rsi,rdi
    29b1:	48 89 f0             	mov    rax,rsi
    29b4:	48 c1 ee 3f          	shr    rsi,0x3f
    29b8:	48 c1 f8 03          	sar    rax,0x3
    29bc:	48 01 c6             	add    rsi,rax
    29bf:	48 d1 fe             	sar    rsi,1
    29c2:	74 14                	je     29d8 <register_tm_clones+0x38>
    29c4:	48 8b 05 2d f6 00 00 	mov    rax,QWORD PTR [rip+0xf62d]        # 11ff8 <_ITM_registerTMCloneTable>
    29cb:	48 85 c0             	test   rax,rax
    29ce:	74 08                	je     29d8 <register_tm_clones+0x38>
    29d0:	ff e0                	jmp    rax
    29d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    29d8:	c3                   	ret    
    29d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029e0 <__do_global_dtors_aux>:
    29e0:	f3 0f 1e fa          	endbr64 
    29e4:	80 3d 7d f6 00 00 00 	cmp    BYTE PTR [rip+0xf67d],0x0        # 12068 <completed.0>
    29eb:	75 2b                	jne    2a18 <__do_global_dtors_aux+0x38>
    29ed:	55                   	push   rbp
    29ee:	48 83 3d e2 f5 00 00 	cmp    QWORD PTR [rip+0xf5e2],0x0        # 11fd8 <__cxa_finalize@GLIBC_2.2.5>
    29f5:	00 
    29f6:	48 89 e5             	mov    rbp,rsp
    29f9:	74 0c                	je     2a07 <__do_global_dtors_aux+0x27>
    29fb:	48 8b 3d 06 f6 00 00 	mov    rdi,QWORD PTR [rip+0xf606]        # 12008 <__dso_handle>
    2a02:	e8 a9 fa ff ff       	call   24b0 <__cxa_finalize@plt>
    2a07:	e8 64 ff ff ff       	call   2970 <deregister_tm_clones>
    2a0c:	c6 05 55 f6 00 00 01 	mov    BYTE PTR [rip+0xf655],0x1        # 12068 <completed.0>
    2a13:	5d                   	pop    rbp
    2a14:	c3                   	ret    
    2a15:	0f 1f 00             	nop    DWORD PTR [rax]
    2a18:	c3                   	ret    
    2a19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002a20 <frame_dummy>:
    2a20:	f3 0f 1e fa          	endbr64 
    2a24:	e9 77 ff ff ff       	jmp    29a0 <register_tm_clones>

0000000000002a29 <add_thread>:
    2a29:	f3 0f 1e fa          	endbr64 
    2a2d:	55                   	push   rbp
    2a2e:	48 89 e5             	mov    rbp,rsp
    2a31:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2a35:	8b 05 65 f8 00 00    	mov    eax,DWORD PTR [rip+0xf865]        # 122a0 <thread_count>
    2a3b:	8d 50 01             	lea    edx,[rax+0x1]
    2a3e:	89 15 5c f8 00 00    	mov    DWORD PTR [rip+0xf85c],edx        # 122a0 <thread_count>
    2a44:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    2a48:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    2a4b:	48 98                	cdqe   
    2a4d:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2a54:	00 
    2a55:	48 8d 05 44 f6 00 00 	lea    rax,[rip+0xf644]        # 120a0 <threads>
    2a5c:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    2a60:	90                   	nop
    2a61:	5d                   	pop    rbp
    2a62:	c3                   	ret    

0000000000002a63 <pktmgr>:
    2a63:	f3 0f 1e fa          	endbr64 
    2a67:	55                   	push   rbp
    2a68:	48 89 e5             	mov    rbp,rsp
    2a6b:	53                   	push   rbx
    2a6c:	48 83 ec 38          	sub    rsp,0x38
    2a70:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    2a74:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    2a78:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    2a7c:	0f b6 05 e1 84 10 00 	movzx  eax,BYTE PTR [rip+0x1084e1]        # 10af64 <packet_print>
    2a83:	84 c0                	test   al,al
    2a85:	74 0c                	je     2a93 <pktmgr+0x30>
    2a87:	48 8d 3d c2 a5 00 00 	lea    rdi,[rip+0xa5c2]        # d050 <_IO_stdin_used+0x50>
    2a8e:	e8 ed fd ff ff       	call   2880 <puts@plt>
    2a93:	8b 05 0b f8 00 00    	mov    eax,DWORD PTR [rip+0xf80b]        # 122a4 <total_pkt_captured>
    2a99:	83 c0 01             	add    eax,0x1
    2a9c:	89 05 02 f8 00 00    	mov    DWORD PTR [rip+0xf802],eax        # 122a4 <total_pkt_captured>
    2aa2:	8b 05 18 f8 00 00    	mov    eax,DWORD PTR [rip+0xf818]        # 122c0 <pkt_counter>
    2aa8:	83 c0 01             	add    eax,0x1
    2aab:	89 05 0f f8 00 00    	mov    DWORD PTR [rip+0xf80f],eax        # 122c0 <pkt_counter>
    2ab1:	8b 15 09 f8 00 00    	mov    edx,DWORD PTR [rip+0xf809]        # 122c0 <pkt_counter>
    2ab7:	8b 05 a3 84 10 00    	mov    eax,DWORD PTR [rip+0x1084a3]        # 10af60 <clean_delay_pkts>
    2abd:	39 c2                	cmp    edx,eax
    2abf:	72 0a                	jb     2acb <pktmgr+0x68>
    2ac1:	c7 05 f5 f7 00 00 00 	mov    DWORD PTR [rip+0xf7f5],0x0        # 122c0 <pkt_counter>
    2ac8:	00 00 00 
    2acb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2acf:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2ad3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ad7:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2adb:	0f b7 c0             	movzx  eax,ax
    2ade:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2ae3:	74 46                	je     2b2b <pktmgr+0xc8>
    2ae5:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2aea:	7f 77                	jg     2b63 <pktmgr+0x100>
    2aec:	3d 80 35 00 00       	cmp    eax,0x3580
    2af1:	74 23                	je     2b16 <pktmgr+0xb3>
    2af3:	3d 80 35 00 00       	cmp    eax,0x3580
    2af8:	7f 69                	jg     2b63 <pktmgr+0x100>
    2afa:	3d 08 06 00 00       	cmp    eax,0x608
    2aff:	74 15                	je     2b16 <pktmgr+0xb3>
    2b01:	3d 08 06 00 00       	cmp    eax,0x608
    2b06:	7f 5b                	jg     2b63 <pktmgr+0x100>
    2b08:	83 f8 08             	cmp    eax,0x8
    2b0b:	74 33                	je     2b40 <pktmgr+0xdd>
    2b0d:	3d 90 00 00 00       	cmp    eax,0x90
    2b12:	74 41                	je     2b55 <pktmgr+0xf2>
    2b14:	eb 4d                	jmp    2b63 <pktmgr+0x100>
    2b16:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b1a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b1e:	48 89 d6             	mov    rsi,rdx
    2b21:	48 89 c7             	mov    rdi,rax
    2b24:	e8 86 00 00 00       	call   2baf <arpdecode>
    2b29:	eb 7d                	jmp    2ba8 <pktmgr+0x145>
    2b2b:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b2f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b33:	48 89 d6             	mov    rsi,rdx
    2b36:	48 89 c7             	mov    rdi,rax
    2b39:	e8 a0 9d 00 00       	call   c8de <ip6decode>
    2b3e:	eb 68                	jmp    2ba8 <pktmgr+0x145>
    2b40:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b44:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b48:	48 89 d6             	mov    rsi,rdx
    2b4b:	48 89 c7             	mov    rdi,rax
    2b4e:	e8 56 0b 00 00       	call   36a9 <ipv4pktmgr>
    2b53:	eb 53                	jmp    2ba8 <pktmgr+0x145>
    2b55:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b59:	48 89 c7             	mov    rdi,rax
    2b5c:	e8 42 03 00 00       	call   2ea3 <loopback_ctp_decode>
    2b61:	eb 45                	jmp    2ba8 <pktmgr+0x145>
    2b63:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b67:	48 89 c7             	mov    rdi,rax
    2b6a:	e8 f5 04 00 00       	call   3064 <uc_mac_ntoa>
    2b6f:	48 89 c3             	mov    rbx,rax
    2b72:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b76:	48 83 c0 06          	add    rax,0x6
    2b7a:	48 89 c7             	mov    rdi,rax
    2b7d:	e8 e2 04 00 00       	call   3064 <uc_mac_ntoa>
    2b82:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2b88:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2b8e:	48 89 d9             	mov    rcx,rbx
    2b91:	48 89 c2             	mov    rdx,rax
    2b94:	48 8d 35 fd a4 00 00 	lea    rsi,[rip+0xa4fd]        # d098 <_IO_stdin_used+0x98>
    2b9b:	48 8d 3d 28 a5 00 00 	lea    rdi,[rip+0xa528]        # d0ca <_IO_stdin_used+0xca>
    2ba2:	e8 e7 7d 00 00       	call   a98e <lfprintf>
    2ba7:	90                   	nop
    2ba8:	90                   	nop
    2ba9:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2bad:	c9                   	leave  
    2bae:	c3                   	ret    

0000000000002baf <arpdecode>:
    2baf:	f3 0f 1e fa          	endbr64 
    2bb3:	55                   	push   rbp
    2bb4:	48 89 e5             	mov    rbp,rsp
    2bb7:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2bbe:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2bc5:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2bcc:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2bd3:	00 00 
    2bd5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2bd9:	31 c0                	xor    eax,eax
    2bdb:	0f b6 05 82 83 10 00 	movzx  eax,BYTE PTR [rip+0x108382]        # 10af64 <packet_print>
    2be2:	84 c0                	test   al,al
    2be4:	74 18                	je     2bfe <arpdecode+0x4f>
    2be6:	48 8d 35 fb a4 00 00 	lea    rsi,[rip+0xa4fb]        # d0e8 <_IO_stdin_used+0xe8>
    2bed:	48 8d 3d fc a4 00 00 	lea    rdi,[rip+0xa4fc]        # d0f0 <_IO_stdin_used+0xf0>
    2bf4:	b8 00 00 00 00       	mov    eax,0x0
    2bf9:	e8 d2 f8 ff ff       	call   24d0 <printf@plt>
    2bfe:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2c05:	48 83 c0 0e          	add    rax,0xe
    2c09:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2c10:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c17:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2c1b:	0f b7 c0             	movzx  eax,ax
    2c1e:	3d 00 18 00 00       	cmp    eax,0x1800
    2c23:	74 35                	je     2c5a <arpdecode+0xab>
    2c25:	3d 00 18 00 00       	cmp    eax,0x1800
    2c2a:	0f 8f 1d 02 00 00    	jg     2e4d <arpdecode+0x29e>
    2c30:	3d 00 02 00 00       	cmp    eax,0x200
    2c35:	0f 84 eb 00 00 00    	je     2d26 <arpdecode+0x177>
    2c3b:	3d 00 02 00 00       	cmp    eax,0x200
    2c40:	0f 8f 07 02 00 00    	jg     2e4d <arpdecode+0x29e>
    2c46:	83 f8 02             	cmp    eax,0x2
    2c49:	0f 84 d7 00 00 00    	je     2d26 <arpdecode+0x177>
    2c4f:	3d 00 01 00 00       	cmp    eax,0x100
    2c54:	0f 85 f3 01 00 00    	jne    2e4d <arpdecode+0x29e>
    2c5a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c61:	48 83 c0 18          	add    rax,0x18
    2c65:	48 89 c7             	mov    rdi,rax
    2c68:	e8 9d 04 00 00       	call   310a <u8_ipv4_ntoa>
    2c6d:	48 89 c1             	mov    rcx,rax
    2c70:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c74:	ba 20 00 00 00       	mov    edx,0x20
    2c79:	48 89 ce             	mov    rsi,rcx
    2c7c:	48 89 c7             	mov    rdi,rax
    2c7f:	e8 7c f9 ff ff       	call   2600 <strncpy@plt>
    2c84:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c8b:	48 83 c0 0e          	add    rax,0xe
    2c8f:	48 89 c7             	mov    rdi,rax
    2c92:	e8 73 04 00 00       	call   310a <u8_ipv4_ntoa>
    2c97:	48 89 c1             	mov    rcx,rax
    2c9a:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c9e:	ba 20 00 00 00       	mov    edx,0x20
    2ca3:	48 89 ce             	mov    rsi,rcx
    2ca6:	48 89 c7             	mov    rdi,rax
    2ca9:	e8 52 f9 ff ff       	call   2600 <strncpy@plt>
    2cae:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2cb2:	ba 05 00 00 00       	mov    edx,0x5
    2cb7:	48 8d 35 35 a4 00 00 	lea    rsi,[rip+0xa435]        # d0f3 <_IO_stdin_used+0xf3>
    2cbe:	48 89 c7             	mov    rdi,rax
    2cc1:	e8 0a f9 ff ff       	call   25d0 <strncmp@plt>
    2cc6:	85 c0                	test   eax,eax
    2cc8:	75 2c                	jne    2cf6 <arpdecode+0x147>
    2cca:	0f b6 05 93 82 10 00 	movzx  eax,BYTE PTR [rip+0x108293]        # 10af64 <packet_print>
    2cd1:	84 c0                	test   al,al
    2cd3:	0f 84 97 01 00 00    	je     2e70 <arpdecode+0x2c1>
    2cd9:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cdd:	48 89 c6             	mov    rsi,rax
    2ce0:	48 8d 3d 19 a4 00 00 	lea    rdi,[rip+0xa419]        # d100 <_IO_stdin_used+0x100>
    2ce7:	b8 00 00 00 00       	mov    eax,0x0
    2cec:	e8 df f7 ff ff       	call   24d0 <printf@plt>
    2cf1:	e9 7a 01 00 00       	jmp    2e70 <arpdecode+0x2c1>
    2cf6:	0f b6 05 67 82 10 00 	movzx  eax,BYTE PTR [rip+0x108267]        # 10af64 <packet_print>
    2cfd:	84 c0                	test   al,al
    2cff:	0f 84 6b 01 00 00    	je     2e70 <arpdecode+0x2c1>
    2d05:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d09:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d0d:	48 89 c6             	mov    rsi,rax
    2d10:	48 8d 3d 09 a4 00 00 	lea    rdi,[rip+0xa409]        # d120 <_IO_stdin_used+0x120>
    2d17:	b8 00 00 00 00       	mov    eax,0x0
    2d1c:	e8 af f7 ff ff       	call   24d0 <printf@plt>
    2d21:	e9 4a 01 00 00       	jmp    2e70 <arpdecode+0x2c1>
    2d26:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d2d:	48 83 c0 08          	add    rax,0x8
    2d31:	48 89 c7             	mov    rdi,rax
    2d34:	e8 7d 02 00 00       	call   2fb6 <mac_ntoa>
    2d39:	48 89 c1             	mov    rcx,rax
    2d3c:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d40:	ba 40 00 00 00       	mov    edx,0x40
    2d45:	48 89 ce             	mov    rsi,rcx
    2d48:	48 89 c7             	mov    rdi,rax
    2d4b:	e8 b0 f8 ff ff       	call   2600 <strncpy@plt>
    2d50:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d57:	48 83 c0 0e          	add    rax,0xe
    2d5b:	48 89 c7             	mov    rdi,rax
    2d5e:	e8 a7 03 00 00       	call   310a <u8_ipv4_ntoa>
    2d63:	48 89 c1             	mov    rcx,rax
    2d66:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d6a:	ba 20 00 00 00       	mov    edx,0x20
    2d6f:	48 89 ce             	mov    rsi,rcx
    2d72:	48 89 c7             	mov    rdi,rax
    2d75:	e8 86 f8 ff ff       	call   2600 <strncpy@plt>
    2d7a:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d7e:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d82:	48 89 d6             	mov    rsi,rdx
    2d85:	48 89 c7             	mov    rdi,rax
    2d88:	e8 16 69 00 00       	call   96a3 <entry_exists>
    2d8d:	83 f8 ff             	cmp    eax,0xffffffff
    2d90:	74 15                	je     2da7 <arpdecode+0x1f8>
    2d92:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d96:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d9a:	48 89 d6             	mov    rsi,rdx
    2d9d:	48 89 c7             	mov    rdi,rax
    2da0:	e8 ab 67 00 00       	call   9550 <compare_entries>
    2da5:	eb 7d                	jmp    2e24 <arpdecode+0x275>
    2da7:	0f b6 05 73 81 10 00 	movzx  eax,BYTE PTR [rip+0x108173]        # 10af21 <use_sqlite>
    2dae:	84 c0                	test   al,al
    2db0:	74 5f                	je     2e11 <arpdecode+0x262>
    2db2:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2db9:	00 00 00 
    2dbc:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2dc0:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2dc7:	48 89 d6             	mov    rsi,rdx
    2dca:	48 89 c7             	mov    rdi,rax
    2dcd:	e8 ee f8 ff ff       	call   26c0 <strcpy@plt>
    2dd2:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2dd6:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2ddd:	48 83 c2 10          	add    rdx,0x10
    2de1:	48 89 c6             	mov    rsi,rax
    2de4:	48 89 d7             	mov    rdi,rdx
    2de7:	e8 d4 f8 ff ff       	call   26c0 <strcpy@plt>
    2dec:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2df3:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2dfa:	48 89 d1             	mov    rcx,rdx
    2dfd:	48 8d 15 fe 6a 00 00 	lea    rdx,[rip+0x6afe]        # 9902 <update_db>
    2e04:	be 00 00 00 00       	mov    esi,0x0
    2e09:	48 89 c7             	mov    rdi,rax
    2e0c:	e8 ff fa ff ff       	call   2910 <pthread_create@plt>
    2e11:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2e15:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2e19:	48 89 d6             	mov    rsi,rdx
    2e1c:	48 89 c7             	mov    rdi,rax
    2e1f:	e8 0b 68 00 00       	call   962f <add_entry>
    2e24:	0f b6 05 39 81 10 00 	movzx  eax,BYTE PTR [rip+0x108139]        # 10af64 <packet_print>
    2e2b:	84 c0                	test   al,al
    2e2d:	74 44                	je     2e73 <arpdecode+0x2c4>
    2e2f:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2e33:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2e37:	48 89 c6             	mov    rsi,rax
    2e3a:	48 8d 3d 07 a3 00 00 	lea    rdi,[rip+0xa307]        # d148 <_IO_stdin_used+0x148>
    2e41:	b8 00 00 00 00       	mov    eax,0x0
    2e46:	e8 85 f6 ff ff       	call   24d0 <printf@plt>
    2e4b:	eb 26                	jmp    2e73 <arpdecode+0x2c4>
    2e4d:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2e54:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2e58:	0f b7 c0             	movzx  eax,ax
    2e5b:	89 c6                	mov    esi,eax
    2e5d:	48 8d 3d 03 a3 00 00 	lea    rdi,[rip+0xa303]        # d167 <_IO_stdin_used+0x167>
    2e64:	b8 00 00 00 00       	mov    eax,0x0
    2e69:	e8 62 f6 ff ff       	call   24d0 <printf@plt>
    2e6e:	eb 04                	jmp    2e74 <arpdecode+0x2c5>
    2e70:	90                   	nop
    2e71:	eb 01                	jmp    2e74 <arpdecode+0x2c5>
    2e73:	90                   	nop
    2e74:	48 8d 35 04 a3 00 00 	lea    rsi,[rip+0xa304]        # d17f <_IO_stdin_used+0x17f>
    2e7b:	48 8d 3d 6e a2 00 00 	lea    rdi,[rip+0xa26e]        # d0f0 <_IO_stdin_used+0xf0>
    2e82:	b8 00 00 00 00       	mov    eax,0x0
    2e87:	e8 44 f6 ff ff       	call   24d0 <printf@plt>
    2e8c:	90                   	nop
    2e8d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e91:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2e98:	00 00 
    2e9a:	74 05                	je     2ea1 <arpdecode+0x2f2>
    2e9c:	e8 4f f8 ff ff       	call   26f0 <__stack_chk_fail@plt>
    2ea1:	c9                   	leave  
    2ea2:	c3                   	ret    

0000000000002ea3 <loopback_ctp_decode>:
    2ea3:	f3 0f 1e fa          	endbr64 
    2ea7:	55                   	push   rbp
    2ea8:	48 89 e5             	mov    rbp,rsp
    2eab:	48 83 ec 60          	sub    rsp,0x60
    2eaf:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2eb3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2eba:	00 00 
    2ebc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2ec0:	31 c0                	xor    eax,eax
    2ec2:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2ec6:	48 83 c0 0e          	add    rax,0xe
    2eca:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2ece:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2ed2:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2ed6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2eda:	48 83 c0 06          	add    rax,0x6
    2ede:	48 89 c7             	mov    rdi,rax
    2ee1:	e8 7e 01 00 00       	call   3064 <uc_mac_ntoa>
    2ee6:	48 89 c1             	mov    rcx,rax
    2ee9:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2eed:	ba 18 00 00 00       	mov    edx,0x18
    2ef2:	48 89 ce             	mov    rsi,rcx
    2ef5:	48 89 c7             	mov    rdi,rax
    2ef8:	e8 03 f7 ff ff       	call   2600 <strncpy@plt>
    2efd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2f01:	48 89 c7             	mov    rdi,rax
    2f04:	e8 5b 01 00 00       	call   3064 <uc_mac_ntoa>
    2f09:	48 89 c1             	mov    rcx,rax
    2f0c:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2f10:	ba 18 00 00 00       	mov    edx,0x18
    2f15:	48 89 ce             	mov    rsi,rcx
    2f18:	48 89 c7             	mov    rdi,rax
    2f1b:	e8 e0 f6 ff ff       	call   2600 <strncpy@plt>
    2f20:	0f b6 05 3d 80 10 00 	movzx  eax,BYTE PTR [rip+0x10803d]        # 10af64 <packet_print>
    2f27:	84 c0                	test   al,al
    2f29:	74 1c                	je     2f47 <loopback_ctp_decode+0xa4>
    2f2b:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2f2f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2f33:	48 89 c6             	mov    rsi,rax
    2f36:	48 8d 3d 47 a2 00 00 	lea    rdi,[rip+0xa247]        # d184 <_IO_stdin_used+0x184>
    2f3d:	b8 00 00 00 00       	mov    eax,0x0
    2f42:	e8 89 f5 ff ff       	call   24d0 <printf@plt>
    2f47:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f4b:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f4f:	0f b7 c0             	movzx  eax,ax
    2f52:	83 f8 01             	cmp    eax,0x1
    2f55:	75 19                	jne    2f70 <loopback_ctp_decode+0xcd>
    2f57:	0f b6 05 06 80 10 00 	movzx  eax,BYTE PTR [rip+0x108006]        # 10af64 <packet_print>
    2f5e:	84 c0                	test   al,al
    2f60:	74 39                	je     2f9b <loopback_ctp_decode+0xf8>
    2f62:	48 8d 3d 29 a2 00 00 	lea    rdi,[rip+0xa229]        # d192 <_IO_stdin_used+0x192>
    2f69:	e8 12 f9 ff ff       	call   2880 <puts@plt>
    2f6e:	eb 2b                	jmp    2f9b <loopback_ctp_decode+0xf8>
    2f70:	0f b6 05 ed 7f 10 00 	movzx  eax,BYTE PTR [rip+0x107fed]        # 10af64 <packet_print>
    2f77:	84 c0                	test   al,al
    2f79:	74 23                	je     2f9e <loopback_ctp_decode+0xfb>
    2f7b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f7f:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f83:	0f b7 c0             	movzx  eax,ax
    2f86:	89 c6                	mov    esi,eax
    2f88:	48 8d 3d 0b a2 00 00 	lea    rdi,[rip+0xa20b]        # d19a <_IO_stdin_used+0x19a>
    2f8f:	b8 00 00 00 00       	mov    eax,0x0
    2f94:	e8 37 f5 ff ff       	call   24d0 <printf@plt>
    2f99:	eb 03                	jmp    2f9e <loopback_ctp_decode+0xfb>
    2f9b:	90                   	nop
    2f9c:	eb 01                	jmp    2f9f <loopback_ctp_decode+0xfc>
    2f9e:	90                   	nop
    2f9f:	90                   	nop
    2fa0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fa4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2fab:	00 00 
    2fad:	74 05                	je     2fb4 <loopback_ctp_decode+0x111>
    2faf:	e8 3c f7 ff ff       	call   26f0 <__stack_chk_fail@plt>
    2fb4:	c9                   	leave  
    2fb5:	c3                   	ret    

0000000000002fb6 <mac_ntoa>:
    2fb6:	f3 0f 1e fa          	endbr64 
    2fba:	55                   	push   rbp
    2fbb:	48 89 e5             	mov    rbp,rsp
    2fbe:	48 83 ec 20          	sub    rsp,0x20
    2fc2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2fc6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2fca:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2fce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fd2:	48 83 c0 05          	add    rax,0x5
    2fd6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fd9:	0f b6 f0             	movzx  esi,al
    2fdc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fe0:	48 83 c0 04          	add    rax,0x4
    2fe4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fe7:	0f b6 c8             	movzx  ecx,al
    2fea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fee:	48 83 c0 03          	add    rax,0x3
    2ff2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ff5:	0f b6 d0             	movzx  edx,al
    2ff8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ffc:	48 83 c0 02          	add    rax,0x2
    3000:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3003:	44 0f b6 c8          	movzx  r9d,al
    3007:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    300b:	48 83 c0 01          	add    rax,0x1
    300f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3012:	44 0f b6 c0          	movzx  r8d,al
    3016:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    301a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    301d:	0f b6 c0             	movzx  eax,al
    3020:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    3027:	00 00 
    3029:	48 81 c7 80 6b fe ff 	add    rdi,0xfffffffffffe6b80
    3030:	48 83 ec 08          	sub    rsp,0x8
    3034:	56                   	push   rsi
    3035:	51                   	push   rcx
    3036:	52                   	push   rdx
    3037:	89 c1                	mov    ecx,eax
    3039:	48 8d 15 78 a1 00 00 	lea    rdx,[rip+0xa178]        # d1b8 <_IO_stdin_used+0x1b8>
    3040:	be 80 00 00 00       	mov    esi,0x80
    3045:	b8 00 00 00 00       	mov    eax,0x0
    304a:	e8 61 f8 ff ff       	call   28b0 <snprintf@plt>
    304f:	48 83 c4 20          	add    rsp,0x20
    3053:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    305a:	00 00 
    305c:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    3062:	c9                   	leave  
    3063:	c3                   	ret    

0000000000003064 <uc_mac_ntoa>:
    3064:	f3 0f 1e fa          	endbr64 
    3068:	55                   	push   rbp
    3069:	48 89 e5             	mov    rbp,rsp
    306c:	48 83 ec 10          	sub    rsp,0x10
    3070:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    3074:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3078:	48 83 c0 05          	add    rax,0x5
    307c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    307f:	0f b6 f0             	movzx  esi,al
    3082:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3086:	48 83 c0 04          	add    rax,0x4
    308a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    308d:	0f b6 c8             	movzx  ecx,al
    3090:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3094:	48 83 c0 03          	add    rax,0x3
    3098:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    309b:	0f b6 d0             	movzx  edx,al
    309e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30a2:	48 83 c0 02          	add    rax,0x2
    30a6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30a9:	44 0f b6 c8          	movzx  r9d,al
    30ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30b1:	48 83 c0 01          	add    rax,0x1
    30b5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30b8:	44 0f b6 c0          	movzx  r8d,al
    30bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30c0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30c3:	0f b6 c0             	movzx  eax,al
    30c6:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    30cd:	00 00 
    30cf:	48 81 c7 80 6b fe ff 	add    rdi,0xfffffffffffe6b80
    30d6:	48 83 ec 08          	sub    rsp,0x8
    30da:	56                   	push   rsi
    30db:	51                   	push   rcx
    30dc:	52                   	push   rdx
    30dd:	89 c1                	mov    ecx,eax
    30df:	48 8d 15 d2 a0 00 00 	lea    rdx,[rip+0xa0d2]        # d1b8 <_IO_stdin_used+0x1b8>
    30e6:	be 80 00 00 00       	mov    esi,0x80
    30eb:	b8 00 00 00 00       	mov    eax,0x0
    30f0:	e8 bb f7 ff ff       	call   28b0 <snprintf@plt>
    30f5:	48 83 c4 20          	add    rsp,0x20
    30f9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3100:	00 00 
    3102:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    3108:	c9                   	leave  
    3109:	c3                   	ret    

000000000000310a <u8_ipv4_ntoa>:
    310a:	f3 0f 1e fa          	endbr64 
    310e:	55                   	push   rbp
    310f:	48 89 e5             	mov    rbp,rsp
    3112:	48 83 ec 20          	sub    rsp,0x20
    3116:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    311a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    311e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3122:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3126:	48 83 c0 03          	add    rax,0x3
    312a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    312d:	0f b6 d0             	movzx  edx,al
    3130:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3134:	48 83 c0 02          	add    rax,0x2
    3138:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    313b:	44 0f b6 c0          	movzx  r8d,al
    313f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3143:	48 83 c0 01          	add    rax,0x1
    3147:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    314a:	0f b6 f0             	movzx  esi,al
    314d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3151:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3154:	0f b6 c0             	movzx  eax,al
    3157:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    315e:	00 00 
    3160:	48 8d b9 80 6b fe ff 	lea    rdi,[rcx-0x19480]
    3167:	48 83 ec 08          	sub    rsp,0x8
    316b:	52                   	push   rdx
    316c:	45 89 c1             	mov    r9d,r8d
    316f:	41 89 f0             	mov    r8d,esi
    3172:	89 c1                	mov    ecx,eax
    3174:	48 8d 15 5b a0 00 00 	lea    rdx,[rip+0xa05b]        # d1d6 <_IO_stdin_used+0x1d6>
    317b:	be 80 00 00 00       	mov    esi,0x80
    3180:	b8 00 00 00 00       	mov    eax,0x0
    3185:	e8 26 f7 ff ff       	call   28b0 <snprintf@plt>
    318a:	48 83 c4 10          	add    rsp,0x10
    318e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3195:	00 00 
    3197:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    319d:	c9                   	leave  
    319e:	c3                   	ret    

000000000000319f <ipv4_ntoa>:
    319f:	f3 0f 1e fa          	endbr64 
    31a3:	55                   	push   rbp
    31a4:	48 89 e5             	mov    rbp,rsp
    31a7:	48 83 ec 20          	sub    rsp,0x20
    31ab:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    31ae:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    31b2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    31b6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31ba:	48 83 c0 03          	add    rax,0x3
    31be:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31c1:	0f b6 d0             	movzx  edx,al
    31c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31c8:	48 83 c0 02          	add    rax,0x2
    31cc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31cf:	44 0f b6 c0          	movzx  r8d,al
    31d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31d7:	48 83 c0 01          	add    rax,0x1
    31db:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31de:	0f b6 f0             	movzx  esi,al
    31e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31e5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31e8:	0f b6 c0             	movzx  eax,al
    31eb:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    31f2:	00 00 
    31f4:	48 8d b9 80 6b fe ff 	lea    rdi,[rcx-0x19480]
    31fb:	48 83 ec 08          	sub    rsp,0x8
    31ff:	52                   	push   rdx
    3200:	45 89 c1             	mov    r9d,r8d
    3203:	41 89 f0             	mov    r8d,esi
    3206:	89 c1                	mov    ecx,eax
    3208:	48 8d 15 c7 9f 00 00 	lea    rdx,[rip+0x9fc7]        # d1d6 <_IO_stdin_used+0x1d6>
    320f:	be 80 00 00 00       	mov    esi,0x80
    3214:	b8 00 00 00 00       	mov    eax,0x0
    3219:	e8 92 f6 ff ff       	call   28b0 <snprintf@plt>
    321e:	48 83 c4 10          	add    rsp,0x10
    3222:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3229:	00 00 
    322b:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    3231:	c9                   	leave  
    3232:	c3                   	ret    

0000000000003233 <inet6_ntoa>:
    3233:	f3 0f 1e fa          	endbr64 
    3237:	55                   	push   rbp
    3238:	48 89 e5             	mov    rbp,rsp
    323b:	41 57                	push   r15
    323d:	41 56                	push   r14
    323f:	41 55                	push   r13
    3241:	41 54                	push   r12
    3243:	53                   	push   rbx
    3244:	48 83 ec 38          	sub    rsp,0x38
    3248:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    324c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3253:	00 00 
    3255:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3259:	31 c0                	xor    eax,eax
    325b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3262:	00 00 
    3264:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    326a:	ba 80 00 00 00       	mov    edx,0x80
    326f:	be 00 00 00 00       	mov    esi,0x0
    3274:	48 89 c7             	mov    rdi,rax
    3277:	e8 a4 f3 ff ff       	call   2620 <memset@plt>
    327c:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    3283:	00 
    3284:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3288:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    328c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3290:	48 83 c0 0f          	add    rax,0xf
    3294:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3297:	0f b6 c8             	movzx  ecx,al
    329a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    329e:	48 83 c0 0e          	add    rax,0xe
    32a2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32a5:	0f b6 f8             	movzx  edi,al
    32a8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32ac:	48 83 c0 0d          	add    rax,0xd
    32b0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32b3:	0f b6 c0             	movzx  eax,al
    32b6:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    32b9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32bd:	48 83 c0 0c          	add    rax,0xc
    32c1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32c4:	0f b6 d8             	movzx  ebx,al
    32c7:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    32ca:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32ce:	48 83 c0 0b          	add    rax,0xb
    32d2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32d5:	44 0f b6 f8          	movzx  r15d,al
    32d9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32dd:	48 83 c0 0a          	add    rax,0xa
    32e1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32e4:	44 0f b6 f0          	movzx  r14d,al
    32e8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32ec:	48 83 c0 09          	add    rax,0x9
    32f0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32f3:	44 0f b6 e8          	movzx  r13d,al
    32f7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32fb:	48 83 c0 08          	add    rax,0x8
    32ff:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3302:	44 0f b6 e0          	movzx  r12d,al
    3306:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    330a:	48 83 c0 07          	add    rax,0x7
    330e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3311:	0f b6 d8             	movzx  ebx,al
    3314:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3318:	48 83 c0 06          	add    rax,0x6
    331c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    331f:	44 0f b6 d8          	movzx  r11d,al
    3323:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3327:	48 83 c0 05          	add    rax,0x5
    332b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    332e:	44 0f b6 d0          	movzx  r10d,al
    3332:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3336:	48 83 c0 04          	add    rax,0x4
    333a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    333d:	44 0f b6 c8          	movzx  r9d,al
    3341:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3345:	48 83 c0 03          	add    rax,0x3
    3349:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    334c:	44 0f b6 c0          	movzx  r8d,al
    3350:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3354:	48 83 c0 02          	add    rax,0x2
    3358:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    335b:	0f b6 d0             	movzx  edx,al
    335e:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    3361:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3365:	48 83 c0 01          	add    rax,0x1
    3369:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    336c:	0f b6 f0             	movzx  esi,al
    336f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3373:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3376:	0f b6 d0             	movzx  edx,al
    3379:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3380:	00 00 
    3382:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    3388:	48 83 ec 08          	sub    rsp,0x8
    338c:	51                   	push   rcx
    338d:	57                   	push   rdi
    338e:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    3391:	51                   	push   rcx
    3392:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    3395:	51                   	push   rcx
    3396:	41 57                	push   r15
    3398:	41 56                	push   r14
    339a:	41 55                	push   r13
    339c:	41 54                	push   r12
    339e:	53                   	push   rbx
    339f:	41 53                	push   r11
    33a1:	41 52                	push   r10
    33a3:	41 51                	push   r9
    33a5:	41 50                	push   r8
    33a7:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    33ab:	41 89 f0             	mov    r8d,esi
    33ae:	89 d1                	mov    ecx,edx
    33b0:	48 8d 15 31 9e 00 00 	lea    rdx,[rip+0x9e31]        # d1e8 <_IO_stdin_used+0x1e8>
    33b7:	be 80 00 00 00       	mov    esi,0x80
    33bc:	48 89 c7             	mov    rdi,rax
    33bf:	b8 00 00 00 00       	mov    eax,0x0
    33c4:	e8 e7 f4 ff ff       	call   28b0 <snprintf@plt>
    33c9:	48 83 c4 70          	add    rsp,0x70
    33cd:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    33d4:	00 00 
    33d6:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    33dc:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    33e0:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    33e7:	00 00 
    33e9:	74 05                	je     33f0 <inet6_ntoa+0x1bd>
    33eb:	e8 00 f3 ff ff       	call   26f0 <__stack_chk_fail@plt>
    33f0:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    33f4:	5b                   	pop    rbx
    33f5:	41 5c                	pop    r12
    33f7:	41 5d                	pop    r13
    33f9:	41 5e                	pop    r14
    33fb:	41 5f                	pop    r15
    33fd:	5d                   	pop    rbp
    33fe:	c3                   	ret    

00000000000033ff <get_formated_time>:
    33ff:	f3 0f 1e fa          	endbr64 
    3403:	55                   	push   rbp
    3404:	48 89 e5             	mov    rbp,rsp
    3407:	53                   	push   rbx
    3408:	48 83 ec 58          	sub    rsp,0x58
    340c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3413:	00 00 
    3415:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3419:	31 c0                	xor    eax,eax
    341b:	bf ff 00 00 00       	mov    edi,0xff
    3420:	e8 8b f3 ff ff       	call   27b0 <malloc@plt>
    3425:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3429:	bf 00 00 00 00       	mov    edi,0x0
    342e:	e8 7d f2 ff ff       	call   26b0 <time@plt>
    3433:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3437:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    343b:	48 89 c7             	mov    rdi,rax
    343e:	e8 0d f2 ff ff       	call   2650 <localtime@plt>
    3443:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3446:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    344a:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    344e:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    3452:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3456:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    345a:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    345e:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    3462:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3466:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    346a:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    346e:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    3472:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3476:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    347a:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    347d:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    3480:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    3484:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3488:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    348b:	8d 48 01             	lea    ecx,[rax+0x1]
    348e:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    3491:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3497:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    349b:	57                   	push   rdi
    349c:	56                   	push   rsi
    349d:	48 8d 35 8c 9d 00 00 	lea    rsi,[rip+0x9d8c]        # d230 <_IO_stdin_used+0x230>
    34a4:	48 89 c7             	mov    rdi,rax
    34a7:	b8 00 00 00 00       	mov    eax,0x0
    34ac:	e8 5f f0 ff ff       	call   2510 <sprintf@plt>
    34b1:	48 83 c4 10          	add    rsp,0x10
    34b5:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    34b9:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    34bd:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    34c4:	00 00 
    34c6:	74 05                	je     34cd <get_formated_time+0xce>
    34c8:	e8 23 f2 ff ff       	call   26f0 <__stack_chk_fail@plt>
    34cd:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    34d1:	c9                   	leave  
    34d2:	c3                   	ret    

00000000000034d3 <cb_get_formatted_time>:
    34d3:	f3 0f 1e fa          	endbr64 
    34d7:	55                   	push   rbp
    34d8:	48 89 e5             	mov    rbp,rsp
    34db:	53                   	push   rbx
    34dc:	48 83 ec 68          	sub    rsp,0x68
    34e0:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    34e4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    34eb:	00 00 
    34ed:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    34f1:	31 c0                	xor    eax,eax
    34f3:	bf 00 00 00 00       	mov    edi,0x0
    34f8:	e8 b3 f1 ff ff       	call   26b0 <time@plt>
    34fd:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3501:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    3505:	48 89 c7             	mov    rdi,rax
    3508:	e8 43 f1 ff ff       	call   2650 <localtime@plt>
    350d:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3510:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    3514:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3518:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    351c:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3520:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3524:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3528:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    352c:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3530:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3534:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3538:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    353c:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3540:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3544:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3547:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    354a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    354e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3552:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3555:	8d 48 01             	lea    ecx,[rax+0x1]
    3558:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    355b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3561:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3565:	57                   	push   rdi
    3566:	56                   	push   rsi
    3567:	48 8d 35 c2 9c 00 00 	lea    rsi,[rip+0x9cc2]        # d230 <_IO_stdin_used+0x230>
    356e:	48 89 c7             	mov    rdi,rax
    3571:	b8 00 00 00 00       	mov    eax,0x0
    3576:	e8 95 ef ff ff       	call   2510 <sprintf@plt>
    357b:	48 83 c4 10          	add    rsp,0x10
    357f:	90                   	nop
    3580:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3584:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    358b:	00 00 
    358d:	74 05                	je     3594 <cb_get_formatted_time+0xc1>
    358f:	e8 5c f1 ff ff       	call   26f0 <__stack_chk_fail@plt>
    3594:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3598:	c9                   	leave  
    3599:	c3                   	ret    

000000000000359a <strloc>:
    359a:	f3 0f 1e fa          	endbr64 
    359e:	55                   	push   rbp
    359f:	48 89 e5             	mov    rbp,rsp
    35a2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    35a6:	89 f0                	mov    eax,esi
    35a8:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    35ab:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    35b2:	eb 1e                	jmp    35d2 <strloc+0x38>
    35b4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35b7:	48 63 d0             	movsxd rdx,eax
    35ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    35be:	48 01 d0             	add    rax,rdx
    35c1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35c4:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    35c7:	75 05                	jne    35ce <strloc+0x34>
    35c9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35cc:	eb 1d                	jmp    35eb <strloc+0x51>
    35ce:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    35d2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35d5:	48 63 d0             	movsxd rdx,eax
    35d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    35dc:	48 01 d0             	add    rax,rdx
    35df:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35e2:	84 c0                	test   al,al
    35e4:	75 ce                	jne    35b4 <strloc+0x1a>
    35e6:	b8 ff ff ff ff       	mov    eax,0xffffffff
    35eb:	5d                   	pop    rbp
    35ec:	c3                   	ret    

00000000000035ed <fail>:
    35ed:	f3 0f 1e fa          	endbr64 
    35f1:	55                   	push   rbp
    35f2:	48 89 e5             	mov    rbp,rsp
    35f5:	48 83 ec 10          	sub    rsp,0x10
    35f9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    35fd:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    3601:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    3605:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3609:	48 89 c6             	mov    rsi,rax
    360c:	48 8d 3d 39 9c 00 00 	lea    rdi,[rip+0x9c39]        # d24c <_IO_stdin_used+0x24c>
    3613:	b8 00 00 00 00       	mov    eax,0x0
    3618:	e8 b3 ee ff ff       	call   24d0 <printf@plt>
    361d:	90                   	nop
    361e:	c9                   	leave  
    361f:	c3                   	ret    

0000000000003620 <char_is_printable>:
    3620:	f3 0f 1e fa          	endbr64 
    3624:	55                   	push   rbp
    3625:	48 89 e5             	mov    rbp,rsp
    3628:	89 f8                	mov    eax,edi
    362a:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    362d:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    3631:	7f 07                	jg     363a <char_is_printable+0x1a>
    3633:	b8 00 00 00 00       	mov    eax,0x0
    3638:	eb 05                	jmp    363f <char_is_printable+0x1f>
    363a:	b8 01 00 00 00       	mov    eax,0x1
    363f:	5d                   	pop    rbp
    3640:	c3                   	ret    

0000000000003641 <test_string_arr_print>:
    3641:	f3 0f 1e fa          	endbr64 
    3645:	55                   	push   rbp
    3646:	48 89 e5             	mov    rbp,rsp
    3649:	53                   	push   rbx
    364a:	48 83 ec 28          	sub    rsp,0x28
    364e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    3652:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3659:	eb 2c                	jmp    3687 <test_string_arr_print+0x46>
    365b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    365e:	48 63 d0             	movsxd rdx,eax
    3661:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    3665:	48 01 d0             	add    rax,rdx
    3668:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    366b:	0f be c0             	movsx  eax,al
    366e:	89 c7                	mov    edi,eax
    3670:	e8 ab ff ff ff       	call   3620 <char_is_printable>
    3675:	83 f0 01             	xor    eax,0x1
    3678:	84 c0                	test   al,al
    367a:	74 07                	je     3683 <test_string_arr_print+0x42>
    367c:	b8 00 00 00 00       	mov    eax,0x0
    3681:	eb 20                	jmp    36a3 <test_string_arr_print+0x62>
    3683:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    3687:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    368a:	48 63 d8             	movsxd rbx,eax
    368d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    3691:	48 89 c7             	mov    rdi,rax
    3694:	e8 17 ef ff ff       	call   25b0 <strlen@plt>
    3699:	48 39 c3             	cmp    rbx,rax
    369c:	72 bd                	jb     365b <test_string_arr_print+0x1a>
    369e:	b8 01 00 00 00       	mov    eax,0x1
    36a3:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    36a7:	c9                   	leave  
    36a8:	c3                   	ret    

00000000000036a9 <ipv4pktmgr>:
    36a9:	f3 0f 1e fa          	endbr64 
    36ad:	55                   	push   rbp
    36ae:	48 89 e5             	mov    rbp,rsp
    36b1:	48 81 ec d0 04 00 00 	sub    rsp,0x4d0
    36b8:	48 89 bd 38 fb ff ff 	mov    QWORD PTR [rbp-0x4c8],rdi
    36bf:	48 89 b5 30 fb ff ff 	mov    QWORD PTR [rbp-0x4d0],rsi
    36c6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    36cd:	00 00 
    36cf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    36d3:	31 c0                	xor    eax,eax
    36d5:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    36dc:	48 83 c0 0e          	add    rax,0xe
    36e0:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    36e7:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    36ee:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    36f1:	89 c7                	mov    edi,eax
    36f3:	e8 a8 f0 ff ff       	call   27a0 <ntohl@plt>
    36f8:	89 85 7c fb ff ff    	mov    DWORD PTR [rbp-0x484],eax
    36fe:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3705:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    3708:	89 c7                	mov    edi,eax
    370a:	e8 91 f0 ff ff       	call   27a0 <ntohl@plt>
    370f:	89 85 78 fb ff ff    	mov    DWORD PTR [rbp-0x488],eax
    3715:	8b 95 78 fb ff ff    	mov    edx,DWORD PTR [rbp-0x488]
    371b:	8b 05 b7 58 13 00    	mov    eax,DWORD PTR [rip+0x1358b7]        # 138fd8 <homenetmask>
    3721:	21 d0                	and    eax,edx
    3723:	89 85 4c fb ff ff    	mov    DWORD PTR [rbp-0x4b4],eax
    3729:	8b 95 7c fb ff ff    	mov    edx,DWORD PTR [rbp-0x484]
    372f:	8b 05 a3 58 13 00    	mov    eax,DWORD PTR [rip+0x1358a3]        # 138fd8 <homenetmask>
    3735:	21 d0                	and    eax,edx
    3737:	89 85 50 fb ff ff    	mov    DWORD PTR [rbp-0x4b0],eax
    373d:	8b 05 91 58 13 00    	mov    eax,DWORD PTR [rip+0x135891]        # 138fd4 <homenet>
    3743:	39 85 4c fb ff ff    	cmp    DWORD PTR [rbp-0x4b4],eax
    3749:	75 0c                	jne    3757 <ipv4pktmgr+0xae>
    374b:	c7 85 80 fb ff ff 45 	mov    DWORD PTR [rbp-0x480],0x45
    3752:	00 00 00 
    3755:	eb 24                	jmp    377b <ipv4pktmgr+0xd2>
    3757:	8b 05 77 58 13 00    	mov    eax,DWORD PTR [rip+0x135877]        # 138fd4 <homenet>
    375d:	39 85 50 fb ff ff    	cmp    DWORD PTR [rbp-0x4b0],eax
    3763:	75 0c                	jne    3771 <ipv4pktmgr+0xc8>
    3765:	c7 85 80 fb ff ff 46 	mov    DWORD PTR [rbp-0x480],0x46
    376c:	00 00 00 
    376f:	eb 0a                	jmp    377b <ipv4pktmgr+0xd2>
    3771:	c7 85 80 fb ff ff 47 	mov    DWORD PTR [rbp-0x480],0x47
    3778:	00 00 00 
    377b:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    3782:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    3785:	89 85 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],eax
    378b:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3792:	48 89 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],rax
    3799:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    37a0:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    37a3:	48 8b 95 38 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4c8]
    37aa:	48 83 c2 0e          	add    rdx,0xe
    37ae:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    37b1:	83 e2 0f             	and    edx,0xf
    37b4:	0f b6 d2             	movzx  edx,dl
    37b7:	c1 e2 02             	shl    edx,0x2
    37ba:	29 d0                	sub    eax,edx
    37bc:	83 e8 0e             	sub    eax,0xe
    37bf:	89 85 54 fb ff ff    	mov    DWORD PTR [rbp-0x4ac],eax
    37c5:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    37cc:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    37cf:	89 c7                	mov    edi,eax
    37d1:	e8 c9 f9 ff ff       	call   319f <ipv4_ntoa>
    37d6:	48 89 c1             	mov    rcx,rax
    37d9:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37e0:	ba 10 00 00 00       	mov    edx,0x10
    37e5:	48 89 ce             	mov    rsi,rcx
    37e8:	48 89 c7             	mov    rdi,rax
    37eb:	e8 10 ee ff ff       	call   2600 <strncpy@plt>
    37f0:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    37f7:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    37fa:	89 c7                	mov    edi,eax
    37fc:	e8 9e f9 ff ff       	call   319f <ipv4_ntoa>
    3801:	48 89 c1             	mov    rcx,rax
    3804:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    380b:	ba 10 00 00 00       	mov    edx,0x10
    3810:	48 89 ce             	mov    rsi,rcx
    3813:	48 89 c7             	mov    rdi,rax
    3816:	e8 e5 ed ff ff       	call   2600 <strncpy@plt>
    381b:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3822:	48 89 c7             	mov    rdi,rax
    3825:	e8 f5 5a 00 00       	call   931f <init_member>
    382a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3831:	48 89 c7             	mov    rdi,rax
    3834:	e8 e6 5a 00 00       	call   931f <init_member>
    3839:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3840:	48 89 c7             	mov    rdi,rax
    3843:	e8 84 20 00 00       	call   58cc <is_blocked_ipv4>
    3848:	84 c0                	test   al,al
    384a:	74 44                	je     3890 <ipv4pktmgr+0x1e7>
    384c:	b8 00 00 00 00       	mov    eax,0x0
    3851:	e8 a9 fb ff ff       	call   33ff <get_formated_time>
    3856:	48 89 c6             	mov    rsi,rax
    3859:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3860:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3867:	48 89 d1             	mov    rcx,rdx
    386a:	48 89 f2             	mov    rdx,rsi
    386d:	48 8d 35 e4 99 00 00 	lea    rsi,[rip+0x99e4]        # d258 <_IO_stdin_used+0x258>
    3874:	48 89 c7             	mov    rdi,rax
    3877:	b8 00 00 00 00       	mov    eax,0x0
    387c:	e8 8f ec ff ff       	call   2510 <sprintf@plt>
    3881:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3888:	48 89 c7             	mov    rdi,rax
    388b:	e8 70 72 00 00       	call   ab00 <saprintf>
    3890:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3897:	48 89 c7             	mov    rdi,rax
    389a:	e8 2d 20 00 00       	call   58cc <is_blocked_ipv4>
    389f:	84 c0                	test   al,al
    38a1:	74 44                	je     38e7 <ipv4pktmgr+0x23e>
    38a3:	b8 00 00 00 00       	mov    eax,0x0
    38a8:	e8 52 fb ff ff       	call   33ff <get_formated_time>
    38ad:	48 89 c6             	mov    rsi,rax
    38b0:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    38b7:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    38be:	48 89 d1             	mov    rcx,rdx
    38c1:	48 89 f2             	mov    rdx,rsi
    38c4:	48 8d 35 bd 99 00 00 	lea    rsi,[rip+0x99bd]        # d288 <_IO_stdin_used+0x288>
    38cb:	48 89 c7             	mov    rdi,rax
    38ce:	b8 00 00 00 00       	mov    eax,0x0
    38d3:	e8 38 ec ff ff       	call   2510 <sprintf@plt>
    38d8:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    38df:	48 89 c7             	mov    rdi,rax
    38e2:	e8 19 72 00 00       	call   ab00 <saprintf>
    38e7:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38ee:	48 89 85 68 fb ff ff 	mov    QWORD PTR [rbp-0x498],rax
    38f5:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    38fc:	48 89 85 70 fb ff ff 	mov    QWORD PTR [rbp-0x490],rax
    3903:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    390a:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    390e:	66 83 f8 20          	cmp    ax,0x20
    3912:	74 11                	je     3925 <ipv4pktmgr+0x27c>
    3914:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    391b:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    391f:	66 3d 02 01          	cmp    ax,0x102
    3923:	75 66                	jne    398b <ipv4pktmgr+0x2e2>
    3925:	48 8d 35 84 99 00 00 	lea    rsi,[rip+0x9984]        # d2b0 <_IO_stdin_used+0x2b0>
    392c:	48 8d 3d 82 99 00 00 	lea    rdi,[rip+0x9982]        # d2b5 <_IO_stdin_used+0x2b5>
    3933:	b8 00 00 00 00       	mov    eax,0x0
    3938:	e8 93 eb ff ff       	call   24d0 <printf@plt>
    393d:	0f b6 05 20 76 10 00 	movzx  eax,BYTE PTR [rip+0x107620]        # 10af64 <packet_print>
    3944:	84 c0                	test   al,al
    3946:	74 1a                	je     3962 <ipv4pktmgr+0x2b9>
    3948:	48 8d 35 74 99 00 00 	lea    rsi,[rip+0x9974]        # d2c3 <_IO_stdin_used+0x2c3>
    394f:	48 8d 3d 72 99 00 00 	lea    rdi,[rip+0x9972]        # d2c8 <_IO_stdin_used+0x2c8>
    3956:	b8 00 00 00 00       	mov    eax,0x0
    395b:	e8 70 eb ff ff       	call   24d0 <printf@plt>
    3960:	eb 29                	jmp    398b <ipv4pktmgr+0x2e2>
    3962:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3969:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3970:	48 8d 0d 4c 99 00 00 	lea    rcx,[rip+0x994c]        # d2c3 <_IO_stdin_used+0x2c3>
    3977:	48 89 c6             	mov    rsi,rax
    397a:	48 8d 3d 4a 99 00 00 	lea    rdi,[rip+0x994a]        # d2cb <_IO_stdin_used+0x2cb>
    3981:	b8 00 00 00 00       	mov    eax,0x0
    3986:	e8 45 eb ff ff       	call   24d0 <printf@plt>
    398b:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3992:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3996:	0f b6 c0             	movzx  eax,al
    3999:	83 f8 11             	cmp    eax,0x11
    399c:	0f 84 b8 00 00 00    	je     3a5a <ipv4pktmgr+0x3b1>
    39a2:	83 f8 11             	cmp    eax,0x11
    39a5:	0f 8f db 00 00 00    	jg     3a86 <ipv4pktmgr+0x3dd>
    39ab:	83 f8 06             	cmp    eax,0x6
    39ae:	74 7e                	je     3a2e <ipv4pktmgr+0x385>
    39b0:	83 f8 06             	cmp    eax,0x6
    39b3:	0f 8f cd 00 00 00    	jg     3a86 <ipv4pktmgr+0x3dd>
    39b9:	83 f8 01             	cmp    eax,0x1
    39bc:	74 0a                	je     39c8 <ipv4pktmgr+0x31f>
    39be:	83 f8 02             	cmp    eax,0x2
    39c1:	74 2d                	je     39f0 <ipv4pktmgr+0x347>
    39c3:	e9 be 00 00 00       	jmp    3a86 <ipv4pktmgr+0x3dd>
    39c8:	c7 85 8c fb ff ff 80 	mov    DWORD PTR [rbp-0x474],0x80
    39cf:	00 00 00 
    39d2:	48 8d 95 60 fb ff ff 	lea    rdx,[rbp-0x4a0]
    39d9:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    39e0:	48 89 d6             	mov    rsi,rdx
    39e3:	48 89 c7             	mov    rdi,rax
    39e6:	e8 40 02 00 00       	call   3c2b <ip4_icmp_decode>
    39eb:	e9 c7 00 00 00       	jmp    3ab7 <ipv4pktmgr+0x40e>
    39f0:	c7 85 8c fb ff ff ff 	mov    DWORD PTR [rbp-0x474],0xffffffff
    39f7:	ff ff ff 
    39fa:	8b 05 24 e6 00 00    	mov    eax,DWORD PTR [rip+0xe624]        # 12024 <total_conversations>
    3a00:	83 e8 01             	sub    eax,0x1
    3a03:	89 05 1b e6 00 00    	mov    DWORD PTR [rip+0xe61b],eax        # 12024 <total_conversations>
    3a09:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    3a10:	48 8b 8d 68 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x498]
    3a17:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    3a1e:	48 89 ce             	mov    rsi,rcx
    3a21:	48 89 c7             	mov    rdi,rax
    3a24:	e8 1c 14 00 00       	call   4e45 <ip4_igmp_decode>
    3a29:	e9 89 00 00 00       	jmp    3ab7 <ipv4pktmgr+0x40e>
    3a2e:	c7 85 8c fb ff ff 7e 	mov    DWORD PTR [rbp-0x474],0x7e
    3a35:	00 00 00 
    3a38:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    3a3f:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    3a46:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    3a4d:	48 89 ce             	mov    rsi,rcx
    3a50:	48 89 c7             	mov    rdi,rax
    3a53:	e8 17 0a 00 00       	call   446f <ip4_tcp_decode>
    3a58:	eb 5d                	jmp    3ab7 <ipv4pktmgr+0x40e>
    3a5a:	c7 85 8c fb ff ff 7f 	mov    DWORD PTR [rbp-0x474],0x7f
    3a61:	00 00 00 
    3a64:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    3a6b:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    3a72:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    3a79:	48 89 ce             	mov    rsi,rcx
    3a7c:	48 89 c7             	mov    rdi,rax
    3a7f:	e8 6c 12 00 00       	call   4cf0 <ip4_udp_decode>
    3a84:	eb 31                	jmp    3ab7 <ipv4pktmgr+0x40e>
    3a86:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3a8d:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3a91:	0f b6 c8             	movzx  ecx,al
    3a94:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    3a9b:	48 8b 85 68 fb ff ff 	mov    rax,QWORD PTR [rbp-0x498]
    3aa2:	48 89 c6             	mov    rsi,rax
    3aa5:	48 8d 3d 2c 98 00 00 	lea    rdi,[rip+0x982c]        # d2d8 <_IO_stdin_used+0x2d8>
    3aac:	b8 00 00 00 00       	mov    eax,0x0
    3ab1:	e8 1a ea ff ff       	call   24d0 <printf@plt>
    3ab6:	90                   	nop
    3ab7:	90                   	nop
    3ab8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3abc:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3ac3:	00 00 
    3ac5:	74 05                	je     3acc <ipv4pktmgr+0x423>
    3ac7:	e8 24 ec ff ff       	call   26f0 <__stack_chk_fail@plt>
    3acc:	c9                   	leave  
    3acd:	c3                   	ret    

0000000000003ace <ip6_icmp_decode>:
    3ace:	f3 0f 1e fa          	endbr64 
    3ad2:	55                   	push   rbp
    3ad3:	48 89 e5             	mov    rbp,rsp
    3ad6:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3ada:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3ade:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3ae2:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3ae6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3aed:	00 00 
    3aef:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3af3:	31 c0                	xor    eax,eax
    3af5:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3af9:	48 83 c0 36          	add    rax,0x36
    3afd:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3b01:	0f b6 05 5c 74 10 00 	movzx  eax,BYTE PTR [rip+0x10745c]        # 10af64 <packet_print>
    3b08:	84 c0                	test   al,al
    3b0a:	0f 84 04 01 00 00    	je     3c14 <ip6_icmp_decode+0x146>
    3b10:	48 8d 35 e9 97 00 00 	lea    rsi,[rip+0x97e9]        # d300 <_IO_stdin_used+0x300>
    3b17:	48 8d 3d e8 97 00 00 	lea    rdi,[rip+0x97e8]        # d306 <_IO_stdin_used+0x306>
    3b1e:	b8 00 00 00 00       	mov    eax,0x0
    3b23:	e8 a8 e9 ff ff       	call   24d0 <printf@plt>
    3b28:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3b2c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3b30:	48 89 c6             	mov    rsi,rax
    3b33:	48 8d 3d cf 97 00 00 	lea    rdi,[rip+0x97cf]        # d309 <_IO_stdin_used+0x309>
    3b3a:	b8 00 00 00 00       	mov    eax,0x0
    3b3f:	e8 8c e9 ff ff       	call   24d0 <printf@plt>
    3b44:	48 8d 3d cd 97 00 00 	lea    rdi,[rip+0x97cd]        # d318 <_IO_stdin_used+0x318>
    3b4b:	b8 00 00 00 00       	mov    eax,0x0
    3b50:	e8 7b e9 ff ff       	call   24d0 <printf@plt>
    3b55:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b59:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3b5c:	0f b6 c0             	movzx  eax,al
    3b5f:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b64:	74 68                	je     3bce <ip6_icmp_decode+0x100>
    3b66:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b6b:	0f 8f 8b 00 00 00    	jg     3bfc <ip6_icmp_decode+0x12e>
    3b71:	3d 87 00 00 00       	cmp    eax,0x87
    3b76:	74 77                	je     3bef <ip6_icmp_decode+0x121>
    3b78:	3d 87 00 00 00       	cmp    eax,0x87
    3b7d:	7f 7d                	jg     3bfc <ip6_icmp_decode+0x12e>
    3b7f:	3d 82 00 00 00       	cmp    eax,0x82
    3b84:	74 56                	je     3bdc <ip6_icmp_decode+0x10e>
    3b86:	3d 85 00 00 00       	cmp    eax,0x85
    3b8b:	75 6f                	jne    3bfc <ip6_icmp_decode+0x12e>
    3b8d:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b91:	48 83 c0 0a          	add    rax,0xa
    3b95:	48 89 c7             	mov    rdi,rax
    3b98:	e8 19 f4 ff ff       	call   2fb6 <mac_ntoa>
    3b9d:	48 89 c1             	mov    rcx,rax
    3ba0:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3ba4:	ba 40 00 00 00       	mov    edx,0x40
    3ba9:	48 89 ce             	mov    rsi,rcx
    3bac:	48 89 c7             	mov    rdi,rax
    3baf:	e8 4c ea ff ff       	call   2600 <strncpy@plt>
    3bb4:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3bb8:	48 89 c6             	mov    rsi,rax
    3bbb:	48 8d 3d 5f 97 00 00 	lea    rdi,[rip+0x975f]        # d321 <_IO_stdin_used+0x321>
    3bc2:	b8 00 00 00 00       	mov    eax,0x0
    3bc7:	e8 04 e9 ff ff       	call   24d0 <printf@plt>
    3bcc:	eb 2e                	jmp    3bfc <ip6_icmp_decode+0x12e>
    3bce:	48 8d 3d 6b 97 00 00 	lea    rdi,[rip+0x976b]        # d340 <_IO_stdin_used+0x340>
    3bd5:	e8 a6 ec ff ff       	call   2880 <puts@plt>
    3bda:	eb 20                	jmp    3bfc <ip6_icmp_decode+0x12e>
    3bdc:	48 8d 3d 82 97 00 00 	lea    rdi,[rip+0x9782]        # d365 <_IO_stdin_used+0x365>
    3be3:	b8 00 00 00 00       	mov    eax,0x0
    3be8:	e8 e3 e8 ff ff       	call   24d0 <printf@plt>
    3bed:	eb 0d                	jmp    3bfc <ip6_icmp_decode+0x12e>
    3bef:	48 8d 3d 89 97 00 00 	lea    rdi,[rip+0x9789]        # d37f <_IO_stdin_used+0x37f>
    3bf6:	e8 85 ec ff ff       	call   2880 <puts@plt>
    3bfb:	90                   	nop
    3bfc:	48 8d 35 92 97 00 00 	lea    rsi,[rip+0x9792]        # d395 <_IO_stdin_used+0x395>
    3c03:	48 8d 3d fc 96 00 00 	lea    rdi,[rip+0x96fc]        # d306 <_IO_stdin_used+0x306>
    3c0a:	b8 00 00 00 00       	mov    eax,0x0
    3c0f:	e8 bc e8 ff ff       	call   24d0 <printf@plt>
    3c14:	90                   	nop
    3c15:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3c19:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3c20:	00 00 
    3c22:	74 05                	je     3c29 <ip6_icmp_decode+0x15b>
    3c24:	e8 c7 ea ff ff       	call   26f0 <__stack_chk_fail@plt>
    3c29:	c9                   	leave  
    3c2a:	c3                   	ret    

0000000000003c2b <ip4_icmp_decode>:
    3c2b:	f3 0f 1e fa          	endbr64 
    3c2f:	55                   	push   rbp
    3c30:	48 89 e5             	mov    rbp,rsp
    3c33:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3c3a:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3c41:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3c48:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3c4f:	00 00 
    3c51:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3c55:	31 c0                	xor    eax,eax
    3c57:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c5e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c62:	ba 5e 00 00 00       	mov    edx,0x5e
    3c67:	be 01 00 00 00       	mov    esi,0x1
    3c6c:	48 89 c7             	mov    rdi,rax
    3c6f:	e8 d0 12 00 00       	call   4f44 <add_ip_addr_or_inc_counter>
    3c74:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c7b:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c7f:	ba 5e 00 00 00       	mov    edx,0x5e
    3c84:	be 00 00 00 00       	mov    esi,0x0
    3c89:	48 89 c7             	mov    rdi,rax
    3c8c:	e8 b3 12 00 00       	call   4f44 <add_ip_addr_or_inc_counter>
    3c91:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c98:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c9c:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3ca3:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3caa:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3cae:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3cb5:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3cbc:	48 83 c0 22          	add    rax,0x22
    3cc0:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3cc7:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3cce:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3cd2:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cd9:	48 89 10             	mov    QWORD PTR [rax],rdx
    3cdc:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ce3:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3cea:	48 89 50 58          	mov    QWORD PTR [rax+0x58],rdx
    3cee:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cf5:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3cf8:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3cfe:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d05:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3d08:	8d 50 d6             	lea    edx,[rax-0x2a]
    3d0b:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d12:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3d15:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3d1c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3d1f:	3c 08                	cmp    al,0x8
    3d21:	0f 85 55 01 00 00    	jne    3e7c <ip4_icmp_decode+0x251>
    3d27:	8b 05 5b e3 00 00    	mov    eax,DWORD PTR [rip+0xe35b]        # 12088 <strict_nmap_host_alive_check>
    3d2d:	83 f8 01             	cmp    eax,0x1
    3d30:	0f 85 46 01 00 00    	jne    3e7c <ip4_icmp_decode+0x251>
    3d36:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d3d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3d41:	48 89 c7             	mov    rdi,rax
    3d44:	e8 64 55 00 00       	call   92ad <member_exists>
    3d49:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3d4f:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3d56:	0f 84 83 00 00 00    	je     3ddf <ip4_icmp_decode+0x1b4>
    3d5c:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3d62:	48 63 d0             	movsxd rdx,eax
    3d65:	48 89 d0             	mov    rax,rdx
    3d68:	48 c1 e0 02          	shl    rax,0x2
    3d6c:	48 01 d0             	add    rax,rdx
    3d6f:	48 c1 e0 03          	shl    rax,0x3
    3d73:	48 01 d0             	add    rax,rdx
    3d76:	48 c1 e0 04          	shl    rax,0x4
    3d7a:	48 8d 15 9f 07 0f 00 	lea    rdx,[rip+0xf079f]        # f4520 <watchlist>
    3d81:	48 01 d0             	add    rax,rdx
    3d84:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3d8b:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d92:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d95:	85 c0                	test   eax,eax
    3d97:	0f 85 a8 02 00 00    	jne    4045 <ip4_icmp_decode+0x41a>
    3d9d:	bf 00 00 00 00       	mov    edi,0x0
    3da2:	e8 09 e9 ff ff       	call   26b0 <time@plt>
    3da7:	48 89 c2             	mov    rdx,rax
    3daa:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3db1:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3db5:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3dbc:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3dc3:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3dca:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3dcd:	8d 50 01             	lea    edx,[rax+0x1]
    3dd0:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3dd7:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3dda:	e9 66 02 00 00       	jmp    4045 <ip4_icmp_decode+0x41a>
    3ddf:	8b 05 33 e2 00 00    	mov    eax,DWORD PTR [rip+0xe233]        # 12018 <watchlist_num>
    3de5:	83 c0 01             	add    eax,0x1
    3de8:	89 05 2a e2 00 00    	mov    DWORD PTR [rip+0xe22a],eax        # 12018 <watchlist_num>
    3dee:	8b 05 24 e2 00 00    	mov    eax,DWORD PTR [rip+0xe224]        # 12018 <watchlist_num>
    3df4:	48 63 d0             	movsxd rdx,eax
    3df7:	48 89 d0             	mov    rax,rdx
    3dfa:	48 c1 e0 02          	shl    rax,0x2
    3dfe:	48 01 d0             	add    rax,rdx
    3e01:	48 c1 e0 03          	shl    rax,0x3
    3e05:	48 01 d0             	add    rax,rdx
    3e08:	48 c1 e0 04          	shl    rax,0x4
    3e0c:	48 8d 15 0d 07 0f 00 	lea    rdx,[rip+0xf070d]        # f4520 <watchlist>
    3e13:	48 01 d0             	add    rax,rdx
    3e16:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3e1d:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e24:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3e28:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e2f:	48 89 c6             	mov    rsi,rax
    3e32:	48 89 d7             	mov    rdi,rdx
    3e35:	e8 86 e8 ff ff       	call   26c0 <strcpy@plt>
    3e3a:	bf 00 00 00 00       	mov    edi,0x0
    3e3f:	e8 6c e8 ff ff       	call   26b0 <time@plt>
    3e44:	48 89 c2             	mov    rdx,rax
    3e47:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e4e:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3e52:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e59:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3e60:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e67:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e6a:	8d 50 01             	lea    edx,[rax+0x1]
    3e6d:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e74:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3e77:	e9 c9 01 00 00       	jmp    4045 <ip4_icmp_decode+0x41a>
    3e7c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3e83:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3e86:	3c 0d                	cmp    al,0xd
    3e88:	0f 85 ba 01 00 00    	jne    4048 <ip4_icmp_decode+0x41d>
    3e8e:	8b 05 f0 e1 00 00    	mov    eax,DWORD PTR [rip+0xe1f0]        # 12084 <strict_icmp_timestamp_req>
    3e94:	83 f8 01             	cmp    eax,0x1
    3e97:	74 0f                	je     3ea8 <ip4_icmp_decode+0x27d>
    3e99:	8b 05 e9 e1 00 00    	mov    eax,DWORD PTR [rip+0xe1e9]        # 12088 <strict_nmap_host_alive_check>
    3e9f:	83 f8 01             	cmp    eax,0x1
    3ea2:	0f 85 a0 01 00 00    	jne    4048 <ip4_icmp_decode+0x41d>
    3ea8:	8b 05 d6 e1 00 00    	mov    eax,DWORD PTR [rip+0xe1d6]        # 12084 <strict_icmp_timestamp_req>
    3eae:	85 c0                	test   eax,eax
    3eb0:	74 22                	je     3ed4 <ip4_icmp_decode+0x2a9>
    3eb2:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3eb9:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ec0:	48 89 c6             	mov    rsi,rax
    3ec3:	48 8d 3d d6 94 00 00 	lea    rdi,[rip+0x94d6]        # d3a0 <_IO_stdin_used+0x3a0>
    3eca:	b8 00 00 00 00       	mov    eax,0x0
    3ecf:	e8 fc e5 ff ff       	call   24d0 <printf@plt>
    3ed4:	8b 05 ae e1 00 00    	mov    eax,DWORD PTR [rip+0xe1ae]        # 12088 <strict_nmap_host_alive_check>
    3eda:	85 c0                	test   eax,eax
    3edc:	0f 84 66 01 00 00    	je     4048 <ip4_icmp_decode+0x41d>
    3ee2:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ee9:	48 89 c7             	mov    rdi,rax
    3eec:	e8 bc 53 00 00       	call   92ad <member_exists>
    3ef1:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3ef7:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3efe:	0f 84 44 01 00 00    	je     4048 <ip4_icmp_decode+0x41d>
    3f04:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3f0a:	48 63 d0             	movsxd rdx,eax
    3f0d:	48 89 d0             	mov    rax,rdx
    3f10:	48 c1 e0 02          	shl    rax,0x2
    3f14:	48 01 d0             	add    rax,rdx
    3f17:	48 c1 e0 03          	shl    rax,0x3
    3f1b:	48 01 d0             	add    rax,rdx
    3f1e:	48 c1 e0 04          	shl    rax,0x4
    3f22:	48 8d 15 f7 05 0f 00 	lea    rdx,[rip+0xf05f7]        # f4520 <watchlist>
    3f29:	48 01 d0             	add    rax,rdx
    3f2c:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3f33:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f3a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3f3d:	83 f8 03             	cmp    eax,0x3
    3f40:	0f 85 05 01 00 00    	jne    404b <ip4_icmp_decode+0x420>
    3f46:	bf 00 00 00 00       	mov    edi,0x0
    3f4b:	e8 60 e7 ff ff       	call   26b0 <time@plt>
    3f50:	48 89 c2             	mov    rdx,rax
    3f53:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f5a:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3f5e:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f65:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3f69:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f70:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3f74:	48 89 d0             	mov    rax,rdx
    3f77:	48 29 c8             	sub    rax,rcx
    3f7a:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3f80:	0f 87 c2 00 00 00    	ja     4048 <ip4_icmp_decode+0x41d>
    3f86:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3f8d:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3f94:	48 89 c6             	mov    rsi,rax
    3f97:	48 8d 3d 4a 94 00 00 	lea    rdi,[rip+0x944a]        # d3e8 <_IO_stdin_used+0x3e8>
    3f9e:	b8 00 00 00 00       	mov    eax,0x0
    3fa3:	e8 28 e5 ff ff       	call   24d0 <printf@plt>
    3fa8:	48 8b 05 89 e0 00 00 	mov    rax,QWORD PTR [rip+0xe089]        # 12038 <def_log_file>
    3faf:	48 8d 35 9c 94 00 00 	lea    rsi,[rip+0x949c]        # d452 <_IO_stdin_used+0x452>
    3fb6:	48 89 c7             	mov    rdi,rax
    3fb9:	e8 72 e7 ff ff       	call   2730 <fopen@plt>
    3fbe:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3fc5:	b8 00 00 00 00       	mov    eax,0x0
    3fca:	e8 30 f4 ff ff       	call   33ff <get_formated_time>
    3fcf:	48 89 c6             	mov    rsi,rax
    3fd2:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3fd9:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3fe0:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3fe7:	49 89 f0             	mov    r8,rsi
    3fea:	48 8d 35 67 94 00 00 	lea    rsi,[rip+0x9467]        # d458 <_IO_stdin_used+0x458>
    3ff1:	48 89 c7             	mov    rdi,rax
    3ff4:	b8 00 00 00 00       	mov    eax,0x0
    3ff9:	e8 12 e5 ff ff       	call   2510 <sprintf@plt>
    3ffe:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    4005:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    400c:	48 89 d6             	mov    rsi,rdx
    400f:	48 89 c7             	mov    rdi,rax
    4012:	e8 e9 e6 ff ff       	call   2700 <fputs@plt>
    4017:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    401e:	48 89 c7             	mov    rdi,rax
    4021:	e8 ba e6 ff ff       	call   26e0 <fclose@plt>
    4026:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    402d:	48 83 c0 28          	add    rax,0x28
    4031:	ba 28 00 00 00       	mov    edx,0x28
    4036:	be 00 00 00 00       	mov    esi,0x0
    403b:	48 89 c7             	mov    rdi,rax
    403e:	e8 dd e5 ff ff       	call   2620 <memset@plt>
    4043:	eb 07                	jmp    404c <ip4_icmp_decode+0x421>
    4045:	90                   	nop
    4046:	eb 04                	jmp    404c <ip4_icmp_decode+0x421>
    4048:	90                   	nop
    4049:	eb 01                	jmp    404c <ip4_icmp_decode+0x421>
    404b:	90                   	nop
    404c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    4053:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    405a:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    4061:	48 89 c7             	mov    rdi,rax
    4064:	e8 dc 23 00 00       	call   6445 <rulemgr>
    4069:	0f b6 05 f4 6e 10 00 	movzx  eax,BYTE PTR [rip+0x106ef4]        # 10af64 <packet_print>
    4070:	84 c0                	test   al,al
    4072:	0f 84 e0 03 00 00    	je     4458 <ip4_icmp_decode+0x82d>
    4078:	48 8d 35 81 92 00 00 	lea    rsi,[rip+0x9281]        # d300 <_IO_stdin_used+0x300>
    407f:	48 8d 3d 80 92 00 00 	lea    rdi,[rip+0x9280]        # d306 <_IO_stdin_used+0x306>
    4086:	b8 00 00 00 00       	mov    eax,0x0
    408b:	e8 40 e4 ff ff       	call   24d0 <printf@plt>
    4090:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    4097:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    409e:	48 89 c6             	mov    rsi,rax
    40a1:	48 8d 3d 20 94 00 00 	lea    rdi,[rip+0x9420]        # d4c8 <_IO_stdin_used+0x4c8>
    40a8:	b8 00 00 00 00       	mov    eax,0x0
    40ad:	e8 1e e4 ff ff       	call   24d0 <printf@plt>
    40b2:	48 8d 3d 1e 94 00 00 	lea    rdi,[rip+0x941e]        # d4d7 <_IO_stdin_used+0x4d7>
    40b9:	b8 00 00 00 00       	mov    eax,0x0
    40be:	e8 0d e4 ff ff       	call   24d0 <printf@plt>
    40c3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    40ca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    40cd:	0f b6 c0             	movzx  eax,al
    40d0:	83 f8 0e             	cmp    eax,0xe
    40d3:	0f 87 46 03 00 00    	ja     441f <ip4_icmp_decode+0x7f4>
    40d9:	89 c0                	mov    eax,eax
    40db:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    40e2:	00 
    40e3:	48 8d 05 f6 97 00 00 	lea    rax,[rip+0x97f6]        # d8e0 <_IO_stdin_used+0x8e0>
    40ea:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    40ed:	48 98                	cdqe   
    40ef:	48 8d 15 ea 97 00 00 	lea    rdx,[rip+0x97ea]        # d8e0 <_IO_stdin_used+0x8e0>
    40f6:	48 01 d0             	add    rax,rdx
    40f9:	3e ff e0             	notrack jmp rax
    40fc:	48 8d 3d db 93 00 00 	lea    rdi,[rip+0x93db]        # d4de <_IO_stdin_used+0x4de>
    4103:	e8 78 e7 ff ff       	call   2880 <puts@plt>
    4108:	e9 33 03 00 00       	jmp    4440 <ip4_icmp_decode+0x815>
    410d:	48 8d 3d d6 93 00 00 	lea    rdi,[rip+0x93d6]        # d4ea <_IO_stdin_used+0x4ea>
    4114:	b8 00 00 00 00       	mov    eax,0x0
    4119:	e8 b2 e3 ff ff       	call   24d0 <printf@plt>
    411e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4125:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4129:	0f b6 c0             	movzx  eax,al
    412c:	83 f8 0f             	cmp    eax,0xf
    412f:	0f 87 1e 01 00 00    	ja     4253 <ip4_icmp_decode+0x628>
    4135:	89 c0                	mov    eax,eax
    4137:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    413e:	00 
    413f:	48 8d 05 d6 97 00 00 	lea    rax,[rip+0x97d6]        # d91c <_IO_stdin_used+0x91c>
    4146:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4149:	48 98                	cdqe   
    414b:	48 8d 15 ca 97 00 00 	lea    rdx,[rip+0x97ca]        # d91c <_IO_stdin_used+0x91c>
    4152:	48 01 d0             	add    rax,rdx
    4155:	3e ff e0             	notrack jmp rax
    4158:	48 8d 3d a5 93 00 00 	lea    rdi,[rip+0x93a5]        # d504 <_IO_stdin_used+0x504>
    415f:	e8 1c e7 ff ff       	call   2880 <puts@plt>
    4164:	e9 0c 01 00 00       	jmp    4275 <ip4_icmp_decode+0x64a>
    4169:	48 8d 3d ab 93 00 00 	lea    rdi,[rip+0x93ab]        # d51b <_IO_stdin_used+0x51b>
    4170:	e8 0b e7 ff ff       	call   2880 <puts@plt>
    4175:	e9 fb 00 00 00       	jmp    4275 <ip4_icmp_decode+0x64a>
    417a:	48 8d 3d ae 93 00 00 	lea    rdi,[rip+0x93ae]        # d52f <_IO_stdin_used+0x52f>
    4181:	e8 fa e6 ff ff       	call   2880 <puts@plt>
    4186:	e9 ea 00 00 00       	jmp    4275 <ip4_icmp_decode+0x64a>
    418b:	48 8d 3d b5 93 00 00 	lea    rdi,[rip+0x93b5]        # d547 <_IO_stdin_used+0x547>
    4192:	e8 e9 e6 ff ff       	call   2880 <puts@plt>
    4197:	e9 d9 00 00 00       	jmp    4275 <ip4_icmp_decode+0x64a>
    419c:	48 8d 3d b8 93 00 00 	lea    rdi,[rip+0x93b8]        # d55b <_IO_stdin_used+0x55b>
    41a3:	e8 d8 e6 ff ff       	call   2880 <puts@plt>
    41a8:	e9 c8 00 00 00       	jmp    4275 <ip4_icmp_decode+0x64a>
    41ad:	48 8d 3d bf 93 00 00 	lea    rdi,[rip+0x93bf]        # d573 <_IO_stdin_used+0x573>
    41b4:	e8 c7 e6 ff ff       	call   2880 <puts@plt>
    41b9:	e9 b7 00 00 00       	jmp    4275 <ip4_icmp_decode+0x64a>
    41be:	48 8d 3d cb 93 00 00 	lea    rdi,[rip+0x93cb]        # d590 <_IO_stdin_used+0x590>
    41c5:	e8 b6 e6 ff ff       	call   2880 <puts@plt>
    41ca:	e9 a6 00 00 00       	jmp    4275 <ip4_icmp_decode+0x64a>
    41cf:	48 8d 3d e2 93 00 00 	lea    rdi,[rip+0x93e2]        # d5b8 <_IO_stdin_used+0x5b8>
    41d6:	e8 a5 e6 ff ff       	call   2880 <puts@plt>
    41db:	e9 95 00 00 00       	jmp    4275 <ip4_icmp_decode+0x64a>
    41e0:	48 8d 3d f1 93 00 00 	lea    rdi,[rip+0x93f1]        # d5d8 <_IO_stdin_used+0x5d8>
    41e7:	e8 94 e6 ff ff       	call   2880 <puts@plt>
    41ec:	e9 84 00 00 00       	jmp    4275 <ip4_icmp_decode+0x64a>
    41f1:	48 8d 3d f8 93 00 00 	lea    rdi,[rip+0x93f8]        # d5f0 <_IO_stdin_used+0x5f0>
    41f8:	e8 83 e6 ff ff       	call   2880 <puts@plt>
    41fd:	eb 76                	jmp    4275 <ip4_icmp_decode+0x64a>
    41ff:	48 8d 3d 12 94 00 00 	lea    rdi,[rip+0x9412]        # d618 <_IO_stdin_used+0x618>
    4206:	e8 75 e6 ff ff       	call   2880 <puts@plt>
    420b:	eb 68                	jmp    4275 <ip4_icmp_decode+0x64a>
    420d:	48 8d 3d 2c 94 00 00 	lea    rdi,[rip+0x942c]        # d640 <_IO_stdin_used+0x640>
    4214:	e8 67 e6 ff ff       	call   2880 <puts@plt>
    4219:	eb 5a                	jmp    4275 <ip4_icmp_decode+0x64a>
    421b:	48 8d 3d 3d 94 00 00 	lea    rdi,[rip+0x943d]        # d65f <_IO_stdin_used+0x65f>
    4222:	e8 59 e6 ff ff       	call   2880 <puts@plt>
    4227:	eb 4c                	jmp    4275 <ip4_icmp_decode+0x64a>
    4229:	48 8d 3d 50 94 00 00 	lea    rdi,[rip+0x9450]        # d680 <_IO_stdin_used+0x680>
    4230:	e8 4b e6 ff ff       	call   2880 <puts@plt>
    4235:	eb 3e                	jmp    4275 <ip4_icmp_decode+0x64a>
    4237:	48 8d 3d 6f 94 00 00 	lea    rdi,[rip+0x946f]        # d6ad <_IO_stdin_used+0x6ad>
    423e:	e8 3d e6 ff ff       	call   2880 <puts@plt>
    4243:	eb 30                	jmp    4275 <ip4_icmp_decode+0x64a>
    4245:	48 8d 3d 84 94 00 00 	lea    rdi,[rip+0x9484]        # d6d0 <_IO_stdin_used+0x6d0>
    424c:	e8 2f e6 ff ff       	call   2880 <puts@plt>
    4251:	eb 22                	jmp    4275 <ip4_icmp_decode+0x64a>
    4253:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    425a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    425e:	0f b6 c0             	movzx  eax,al
    4261:	89 c6                	mov    esi,eax
    4263:	48 8d 3d 85 94 00 00 	lea    rdi,[rip+0x9485]        # d6ef <_IO_stdin_used+0x6ef>
    426a:	b8 00 00 00 00       	mov    eax,0x0
    426f:	e8 5c e2 ff ff       	call   24d0 <printf@plt>
    4274:	90                   	nop
    4275:	e9 c6 01 00 00       	jmp    4440 <ip4_icmp_decode+0x815>
    427a:	48 8d 3d 87 94 00 00 	lea    rdi,[rip+0x9487]        # d708 <_IO_stdin_used+0x708>
    4281:	e8 fa e5 ff ff       	call   2880 <puts@plt>
    4286:	e9 b5 01 00 00       	jmp    4440 <ip4_icmp_decode+0x815>
    428b:	48 8d 3d 95 94 00 00 	lea    rdi,[rip+0x9495]        # d727 <_IO_stdin_used+0x727>
    4292:	b8 00 00 00 00       	mov    eax,0x0
    4297:	e8 34 e2 ff ff       	call   24d0 <printf@plt>
    429c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42a3:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42a7:	0f b6 c0             	movzx  eax,al
    42aa:	83 f8 03             	cmp    eax,0x3
    42ad:	74 44                	je     42f3 <ip4_icmp_decode+0x6c8>
    42af:	83 f8 03             	cmp    eax,0x3
    42b2:	7f 4d                	jg     4301 <ip4_icmp_decode+0x6d6>
    42b4:	83 f8 02             	cmp    eax,0x2
    42b7:	74 2c                	je     42e5 <ip4_icmp_decode+0x6ba>
    42b9:	83 f8 02             	cmp    eax,0x2
    42bc:	7f 43                	jg     4301 <ip4_icmp_decode+0x6d6>
    42be:	85 c0                	test   eax,eax
    42c0:	74 07                	je     42c9 <ip4_icmp_decode+0x69e>
    42c2:	83 f8 01             	cmp    eax,0x1
    42c5:	74 10                	je     42d7 <ip4_icmp_decode+0x6ac>
    42c7:	eb 38                	jmp    4301 <ip4_icmp_decode+0x6d6>
    42c9:	48 8d 3d 63 94 00 00 	lea    rdi,[rip+0x9463]        # d733 <_IO_stdin_used+0x733>
    42d0:	e8 ab e5 ff ff       	call   2880 <puts@plt>
    42d5:	eb 4c                	jmp    4323 <ip4_icmp_decode+0x6f8>
    42d7:	48 8d 3d 6d 94 00 00 	lea    rdi,[rip+0x946d]        # d74b <_IO_stdin_used+0x74b>
    42de:	e8 9d e5 ff ff       	call   2880 <puts@plt>
    42e3:	eb 3e                	jmp    4323 <ip4_icmp_decode+0x6f8>
    42e5:	48 8d 3d 74 94 00 00 	lea    rdi,[rip+0x9474]        # d760 <_IO_stdin_used+0x760>
    42ec:	e8 8f e5 ff ff       	call   2880 <puts@plt>
    42f1:	eb 30                	jmp    4323 <ip4_icmp_decode+0x6f8>
    42f3:	48 8d 3d 86 94 00 00 	lea    rdi,[rip+0x9486]        # d780 <_IO_stdin_used+0x780>
    42fa:	e8 81 e5 ff ff       	call   2880 <puts@plt>
    42ff:	eb 22                	jmp    4323 <ip4_icmp_decode+0x6f8>
    4301:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4308:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    430c:	0f b6 c0             	movzx  eax,al
    430f:	89 c6                	mov    esi,eax
    4311:	48 8d 3d d7 93 00 00 	lea    rdi,[rip+0x93d7]        # d6ef <_IO_stdin_used+0x6ef>
    4318:	b8 00 00 00 00       	mov    eax,0x0
    431d:	e8 ae e1 ff ff       	call   24d0 <printf@plt>
    4322:	90                   	nop
    4323:	e9 18 01 00 00       	jmp    4440 <ip4_icmp_decode+0x815>
    4328:	48 8d 3d 6e 94 00 00 	lea    rdi,[rip+0x946e]        # d79d <_IO_stdin_used+0x79d>
    432f:	e8 4c e5 ff ff       	call   2880 <puts@plt>
    4334:	e9 07 01 00 00       	jmp    4440 <ip4_icmp_decode+0x815>
    4339:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4340:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4344:	84 c0                	test   al,al
    4346:	75 16                	jne    435e <ip4_icmp_decode+0x733>
    4348:	48 8d 3d 61 94 00 00 	lea    rdi,[rip+0x9461]        # d7b0 <_IO_stdin_used+0x7b0>
    434f:	b8 00 00 00 00       	mov    eax,0x0
    4354:	e8 77 e1 ff ff       	call   24d0 <printf@plt>
    4359:	e9 e2 00 00 00       	jmp    4440 <ip4_icmp_decode+0x815>
    435e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4365:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4369:	0f b6 c0             	movzx  eax,al
    436c:	89 c6                	mov    esi,eax
    436e:	48 8d 3d 7b 94 00 00 	lea    rdi,[rip+0x947b]        # d7f0 <_IO_stdin_used+0x7f0>
    4375:	b8 00 00 00 00       	mov    eax,0x0
    437a:	e8 51 e1 ff ff       	call   24d0 <printf@plt>
    437f:	e9 bc 00 00 00       	jmp    4440 <ip4_icmp_decode+0x815>
    4384:	48 8d 3d 92 94 00 00 	lea    rdi,[rip+0x9492]        # d81d <_IO_stdin_used+0x81d>
    438b:	e8 f0 e4 ff ff       	call   2880 <puts@plt>
    4390:	e9 ab 00 00 00       	jmp    4440 <ip4_icmp_decode+0x815>
    4395:	48 8d 3d 98 94 00 00 	lea    rdi,[rip+0x9498]        # d834 <_IO_stdin_used+0x834>
    439c:	b8 00 00 00 00       	mov    eax,0x0
    43a1:	e8 2a e1 ff ff       	call   24d0 <printf@plt>
    43a6:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43ad:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43b1:	84 c0                	test   al,al
    43b3:	75 0e                	jne    43c3 <ip4_icmp_decode+0x798>
    43b5:	48 8d 3d 8f 94 00 00 	lea    rdi,[rip+0x948f]        # d84b <_IO_stdin_used+0x84b>
    43bc:	e8 bf e4 ff ff       	call   2880 <puts@plt>
    43c1:	eb 7d                	jmp    4440 <ip4_icmp_decode+0x815>
    43c3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43ca:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43ce:	3c 01                	cmp    al,0x1
    43d0:	75 0e                	jne    43e0 <ip4_icmp_decode+0x7b5>
    43d2:	48 8d 3d 8f 94 00 00 	lea    rdi,[rip+0x948f]        # d868 <_IO_stdin_used+0x868>
    43d9:	e8 a2 e4 ff ff       	call   2880 <puts@plt>
    43de:	eb 60                	jmp    4440 <ip4_icmp_decode+0x815>
    43e0:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43e7:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43eb:	0f b6 c0             	movzx  eax,al
    43ee:	89 c6                	mov    esi,eax
    43f0:	48 8d 3d 98 94 00 00 	lea    rdi,[rip+0x9498]        # d88f <_IO_stdin_used+0x88f>
    43f7:	b8 00 00 00 00       	mov    eax,0x0
    43fc:	e8 cf e0 ff ff       	call   24d0 <printf@plt>
    4401:	eb 3d                	jmp    4440 <ip4_icmp_decode+0x815>
    4403:	48 8d 3d 9b 94 00 00 	lea    rdi,[rip+0x949b]        # d8a5 <_IO_stdin_used+0x8a5>
    440a:	e8 71 e4 ff ff       	call   2880 <puts@plt>
    440f:	eb 2f                	jmp    4440 <ip4_icmp_decode+0x815>
    4411:	48 8d 3d a0 94 00 00 	lea    rdi,[rip+0x94a0]        # d8b8 <_IO_stdin_used+0x8b8>
    4418:	e8 63 e4 ff ff       	call   2880 <puts@plt>
    441d:	eb 21                	jmp    4440 <ip4_icmp_decode+0x815>
    441f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4426:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4429:	0f b6 c0             	movzx  eax,al
    442c:	89 c6                	mov    esi,eax
    442e:	48 8d 3d 94 94 00 00 	lea    rdi,[rip+0x9494]        # d8c9 <_IO_stdin_used+0x8c9>
    4435:	b8 00 00 00 00       	mov    eax,0x0
    443a:	e8 91 e0 ff ff       	call   24d0 <printf@plt>
    443f:	90                   	nop
    4440:	48 8d 35 4e 8f 00 00 	lea    rsi,[rip+0x8f4e]        # d395 <_IO_stdin_used+0x395>
    4447:	48 8d 3d b8 8e 00 00 	lea    rdi,[rip+0x8eb8]        # d306 <_IO_stdin_used+0x306>
    444e:	b8 00 00 00 00       	mov    eax,0x0
    4453:	e8 78 e0 ff ff       	call   24d0 <printf@plt>
    4458:	90                   	nop
    4459:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    445d:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4464:	00 00 
    4466:	74 05                	je     446d <ip4_icmp_decode+0x842>
    4468:	e8 83 e2 ff ff       	call   26f0 <__stack_chk_fail@plt>
    446d:	c9                   	leave  
    446e:	c3                   	ret    

000000000000446f <ip4_tcp_decode>:
    446f:	f3 0f 1e fa          	endbr64 
    4473:	55                   	push   rbp
    4474:	48 89 e5             	mov    rbp,rsp
    4477:	53                   	push   rbx
    4478:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    447f:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    4483:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    4487:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    448e:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4492:	48 83 c0 22          	add    rax,0x22
    4496:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    449a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    449e:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    44a2:	c0 e8 04             	shr    al,0x4
    44a5:	0f b6 c0             	movzx  eax,al
    44a8:	c1 e0 02             	shl    eax,0x2
    44ab:	48 98                	cdqe   
    44ad:	48 8d 50 22          	lea    rdx,[rax+0x22]
    44b1:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    44b5:	48 01 c2             	add    rdx,rax
    44b8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44bc:	48 89 10             	mov    QWORD PTR [rax],rdx
    44bf:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44c3:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    44c6:	89 c2                	mov    edx,eax
    44c8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44cc:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    44d0:	c0 e8 04             	shr    al,0x4
    44d3:	0f b6 c0             	movzx  eax,al
    44d6:	c1 e0 02             	shl    eax,0x2
    44d9:	89 c1                	mov    ecx,eax
    44db:	89 d0                	mov    eax,edx
    44dd:	29 c8                	sub    eax,ecx
    44df:	83 e8 22             	sub    eax,0x22
    44e2:	89 c2                	mov    edx,eax
    44e4:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44e8:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    44eb:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44ef:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    44f3:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    44f7:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44fb:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    44ff:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    4503:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4507:	ba 5c 00 00 00       	mov    edx,0x5c
    450c:	be 01 00 00 00       	mov    esi,0x1
    4511:	48 89 c7             	mov    rdi,rax
    4514:	e8 2b 0a 00 00       	call   4f44 <add_ip_addr_or_inc_counter>
    4519:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    451d:	ba 5c 00 00 00       	mov    edx,0x5c
    4522:	be 00 00 00 00       	mov    esi,0x0
    4527:	48 89 c7             	mov    rdi,rax
    452a:	e8 15 0a 00 00       	call   4f44 <add_ip_addr_or_inc_counter>
    452f:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
    4536:	c6 45 9f 00          	mov    BYTE PTR [rbp-0x61],0x0
    453a:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
    453e:	c6 45 a1 00          	mov    BYTE PTR [rbp-0x5f],0x0
    4542:	c6 45 a2 00          	mov    BYTE PTR [rbp-0x5e],0x0
    4546:	c6 45 a3 00          	mov    BYTE PTR [rbp-0x5d],0x0
    454a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    454e:	48 83 c0 60          	add    rax,0x60
    4552:	ba 08 00 00 00       	mov    edx,0x8
    4557:	be 00 00 00 00       	mov    esi,0x0
    455c:	48 89 c7             	mov    rdi,rax
    455f:	e8 bc e0 ff ff       	call   2620 <memset@plt>
    4564:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4568:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    456c:	0f b7 c0             	movzx  eax,ax
    456f:	89 c7                	mov    edi,eax
    4571:	e8 aa e3 ff ff       	call   2920 <ntohs@plt>
    4576:	0f b7 c0             	movzx  eax,ax
    4579:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    457c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4580:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4583:	0f b7 c0             	movzx  eax,ax
    4586:	89 c7                	mov    edi,eax
    4588:	e8 93 e3 ff ff       	call   2920 <ntohs@plt>
    458d:	0f b7 c0             	movzx  eax,ax
    4590:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    4593:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4597:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    459b:	0f b7 c0             	movzx  eax,ax
    459e:	89 c7                	mov    edi,eax
    45a0:	e8 7b e3 ff ff       	call   2920 <ntohs@plt>
    45a5:	0f b7 d0             	movzx  edx,ax
    45a8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45ac:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    45af:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45b3:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    45b6:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    45b9:	0f b6 05 a4 69 10 00 	movzx  eax,BYTE PTR [rip+0x1069a4]        # 10af64 <packet_print>
    45c0:	84 c0                	test   al,al
    45c2:	74 4e                	je     4612 <ip4_tcp_decode+0x1a3>
    45c4:	48 8d 35 95 93 00 00 	lea    rsi,[rip+0x9395]        # d960 <_IO_stdin_used+0x960>
    45cb:	48 8d 3d 94 93 00 00 	lea    rdi,[rip+0x9394]        # d966 <_IO_stdin_used+0x966>
    45d2:	b8 00 00 00 00       	mov    eax,0x0
    45d7:	e8 f4 de ff ff       	call   24d0 <printf@plt>
    45dc:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
    45df:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    45e3:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    45e6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    45ea:	41 89 f0             	mov    r8d,esi
    45ed:	48 89 c6             	mov    rsi,rax
    45f0:	48 8d 3d 72 93 00 00 	lea    rdi,[rip+0x9372]        # d969 <_IO_stdin_used+0x969>
    45f7:	b8 00 00 00 00       	mov    eax,0x0
    45fc:	e8 cf de ff ff       	call   24d0 <printf@plt>
    4601:	48 8d 3d 76 93 00 00 	lea    rdi,[rip+0x9376]        # d97e <_IO_stdin_used+0x97e>
    4608:	b8 00 00 00 00       	mov    eax,0x0
    460d:	e8 be de ff ff       	call   24d0 <printf@plt>
    4612:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4616:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    461a:	c0 e8 04             	shr    al,0x4
    461d:	83 e0 01             	and    eax,0x1
    4620:	0f b6 c0             	movzx  eax,al
    4623:	89 c7                	mov    edi,eax
    4625:	e8 f6 e2 ff ff       	call   2920 <ntohs@plt>
    462a:	66 85 c0             	test   ax,ax
    462d:	74 43                	je     4672 <ip4_tcp_decode+0x203>
    462f:	0f b6 05 2e 69 10 00 	movzx  eax,BYTE PTR [rip+0x10692e]        # 10af64 <packet_print>
    4636:	84 c0                	test   al,al
    4638:	74 18                	je     4652 <ip4_tcp_decode+0x1e3>
    463a:	48 8d 35 44 93 00 00 	lea    rsi,[rip+0x9344]        # d985 <_IO_stdin_used+0x985>
    4641:	48 8d 3d 43 93 00 00 	lea    rdi,[rip+0x9343]        # d98b <_IO_stdin_used+0x98b>
    4648:	b8 00 00 00 00       	mov    eax,0x0
    464d:	e8 7e de ff ff       	call   24d0 <printf@plt>
    4652:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
    4656:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    465a:	48 8d 58 60          	lea    rbx,[rax+0x60]
    465e:	48 89 df             	mov    rdi,rbx
    4661:	e8 4a df ff ff       	call   25b0 <strlen@plt>
    4666:	48 01 d8             	add    rax,rbx
    4669:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    466e:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4672:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4676:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    467a:	83 e0 01             	and    eax,0x1
    467d:	0f b6 c0             	movzx  eax,al
    4680:	89 c7                	mov    edi,eax
    4682:	e8 99 e2 ff ff       	call   2920 <ntohs@plt>
    4687:	66 85 c0             	test   ax,ax
    468a:	74 43                	je     46cf <ip4_tcp_decode+0x260>
    468c:	0f b6 05 d1 68 10 00 	movzx  eax,BYTE PTR [rip+0x1068d1]        # 10af64 <packet_print>
    4693:	84 c0                	test   al,al
    4695:	74 18                	je     46af <ip4_tcp_decode+0x240>
    4697:	48 8d 35 f5 92 00 00 	lea    rsi,[rip+0x92f5]        # d993 <_IO_stdin_used+0x993>
    469e:	48 8d 3d f4 92 00 00 	lea    rdi,[rip+0x92f4]        # d999 <_IO_stdin_used+0x999>
    46a5:	b8 00 00 00 00       	mov    eax,0x0
    46aa:	e8 21 de ff ff       	call   24d0 <printf@plt>
    46af:	c6 45 a2 01          	mov    BYTE PTR [rbp-0x5e],0x1
    46b3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46b7:	48 8d 58 60          	lea    rbx,[rax+0x60]
    46bb:	48 89 df             	mov    rdi,rbx
    46be:	e8 ed de ff ff       	call   25b0 <strlen@plt>
    46c3:	48 01 d8             	add    rax,rbx
    46c6:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    46cb:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    46cf:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46d3:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46d7:	c0 e8 03             	shr    al,0x3
    46da:	83 e0 01             	and    eax,0x1
    46dd:	0f b6 c0             	movzx  eax,al
    46e0:	89 c7                	mov    edi,eax
    46e2:	e8 39 e2 ff ff       	call   2920 <ntohs@plt>
    46e7:	66 85 c0             	test   ax,ax
    46ea:	74 43                	je     472f <ip4_tcp_decode+0x2c0>
    46ec:	0f b6 05 71 68 10 00 	movzx  eax,BYTE PTR [rip+0x106871]        # 10af64 <packet_print>
    46f3:	84 c0                	test   al,al
    46f5:	74 18                	je     470f <ip4_tcp_decode+0x2a0>
    46f7:	48 8d 35 a3 92 00 00 	lea    rsi,[rip+0x92a3]        # d9a1 <_IO_stdin_used+0x9a1>
    46fe:	48 8d 3d a2 92 00 00 	lea    rdi,[rip+0x92a2]        # d9a7 <_IO_stdin_used+0x9a7>
    4705:	b8 00 00 00 00       	mov    eax,0x0
    470a:	e8 c1 dd ff ff       	call   24d0 <printf@plt>
    470f:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4713:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4717:	48 8d 58 60          	lea    rbx,[rax+0x60]
    471b:	48 89 df             	mov    rdi,rbx
    471e:	e8 8d de ff ff       	call   25b0 <strlen@plt>
    4723:	48 01 d8             	add    rax,rbx
    4726:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    472b:	c6 45 a3 01          	mov    BYTE PTR [rbp-0x5d],0x1
    472f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4733:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4737:	c0 e8 02             	shr    al,0x2
    473a:	83 e0 01             	and    eax,0x1
    473d:	0f b6 c0             	movzx  eax,al
    4740:	89 c7                	mov    edi,eax
    4742:	e8 d9 e1 ff ff       	call   2920 <ntohs@plt>
    4747:	66 85 c0             	test   ax,ax
    474a:	74 43                	je     478f <ip4_tcp_decode+0x320>
    474c:	0f b6 05 11 68 10 00 	movzx  eax,BYTE PTR [rip+0x106811]        # 10af64 <packet_print>
    4753:	84 c0                	test   al,al
    4755:	74 18                	je     476f <ip4_tcp_decode+0x300>
    4757:	48 8d 35 51 92 00 00 	lea    rsi,[rip+0x9251]        # d9af <_IO_stdin_used+0x9af>
    475e:	48 8d 3d 50 92 00 00 	lea    rdi,[rip+0x9250]        # d9b5 <_IO_stdin_used+0x9b5>
    4765:	b8 00 00 00 00       	mov    eax,0x0
    476a:	e8 61 dd ff ff       	call   24d0 <printf@plt>
    476f:	c6 45 9f 01          	mov    BYTE PTR [rbp-0x61],0x1
    4773:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4777:	48 8d 58 60          	lea    rbx,[rax+0x60]
    477b:	48 89 df             	mov    rdi,rbx
    477e:	e8 2d de ff ff       	call   25b0 <strlen@plt>
    4783:	48 01 d8             	add    rax,rbx
    4786:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    478b:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    478f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4793:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4797:	d0 e8                	shr    al,1
    4799:	83 e0 01             	and    eax,0x1
    479c:	0f b6 c0             	movzx  eax,al
    479f:	89 c7                	mov    edi,eax
    47a1:	e8 7a e1 ff ff       	call   2920 <ntohs@plt>
    47a6:	66 85 c0             	test   ax,ax
    47a9:	74 43                	je     47ee <ip4_tcp_decode+0x37f>
    47ab:	0f b6 05 b2 67 10 00 	movzx  eax,BYTE PTR [rip+0x1067b2]        # 10af64 <packet_print>
    47b2:	84 c0                	test   al,al
    47b4:	74 18                	je     47ce <ip4_tcp_decode+0x35f>
    47b6:	48 8d 35 00 92 00 00 	lea    rsi,[rip+0x9200]        # d9bd <_IO_stdin_used+0x9bd>
    47bd:	48 8d 3d ff 91 00 00 	lea    rdi,[rip+0x91ff]        # d9c3 <_IO_stdin_used+0x9c3>
    47c4:	b8 00 00 00 00       	mov    eax,0x0
    47c9:	e8 02 dd ff ff       	call   24d0 <printf@plt>
    47ce:	c6 45 a1 01          	mov    BYTE PTR [rbp-0x5f],0x1
    47d2:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    47d6:	48 8d 58 60          	lea    rbx,[rax+0x60]
    47da:	48 89 df             	mov    rdi,rbx
    47dd:	e8 ce dd ff ff       	call   25b0 <strlen@plt>
    47e2:	48 01 d8             	add    rax,rbx
    47e5:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    47ea:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    47ee:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    47f2:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    47f6:	c0 e8 05             	shr    al,0x5
    47f9:	83 e0 01             	and    eax,0x1
    47fc:	0f b6 c0             	movzx  eax,al
    47ff:	89 c7                	mov    edi,eax
    4801:	e8 1a e1 ff ff       	call   2920 <ntohs@plt>
    4806:	66 85 c0             	test   ax,ax
    4809:	74 3f                	je     484a <ip4_tcp_decode+0x3db>
    480b:	0f b6 05 52 67 10 00 	movzx  eax,BYTE PTR [rip+0x106752]        # 10af64 <packet_print>
    4812:	84 c0                	test   al,al
    4814:	74 18                	je     482e <ip4_tcp_decode+0x3bf>
    4816:	48 8d 35 ae 91 00 00 	lea    rsi,[rip+0x91ae]        # d9cb <_IO_stdin_used+0x9cb>
    481d:	48 8d 3d ad 91 00 00 	lea    rdi,[rip+0x91ad]        # d9d1 <_IO_stdin_used+0x9d1>
    4824:	b8 00 00 00 00       	mov    eax,0x0
    4829:	e8 a2 dc ff ff       	call   24d0 <printf@plt>
    482e:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4832:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4836:	48 8d 58 60          	lea    rbx,[rax+0x60]
    483a:	48 89 df             	mov    rdi,rbx
    483d:	e8 6e dd ff ff       	call   25b0 <strlen@plt>
    4842:	48 01 d8             	add    rax,rbx
    4845:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    484a:	0f b6 05 13 67 10 00 	movzx  eax,BYTE PTR [rip+0x106713]        # 10af64 <packet_print>
    4851:	84 c0                	test   al,al
    4853:	74 3c                	je     4891 <ip4_tcp_decode+0x422>
    4855:	48 8d 35 04 91 00 00 	lea    rsi,[rip+0x9104]        # d960 <_IO_stdin_used+0x960>
    485c:	48 8d 3d 03 91 00 00 	lea    rdi,[rip+0x9103]        # d966 <_IO_stdin_used+0x966>
    4863:	b8 00 00 00 00       	mov    eax,0x0
    4868:	e8 63 dc ff ff       	call   24d0 <printf@plt>
    486d:	48 8d 3d 65 91 00 00 	lea    rdi,[rip+0x9165]        # d9d9 <_IO_stdin_used+0x9d9>
    4874:	e8 07 e0 ff ff       	call   2880 <puts@plt>
    4879:	48 8d 35 5b 91 00 00 	lea    rsi,[rip+0x915b]        # d9db <_IO_stdin_used+0x9db>
    4880:	48 8d 3d df 90 00 00 	lea    rdi,[rip+0x90df]        # d966 <_IO_stdin_used+0x966>
    4887:	b8 00 00 00 00       	mov    eax,0x0
    488c:	e8 3f dc ff ff       	call   24d0 <printf@plt>
    4891:	83 7d a4 03          	cmp    DWORD PTR [rbp-0x5c],0x3
    4895:	7f 06                	jg     489d <ip4_tcp_decode+0x42e>
    4897:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
    489b:	75 41                	jne    48de <ip4_tcp_decode+0x46f>
    489d:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
    48a0:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    48a4:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    48a7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    48ab:	48 8d 0d 29 91 00 00 	lea    rcx,[rip+0x9129]        # d9db <_IO_stdin_used+0x9db>
    48b2:	51                   	push   rcx
    48b3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
    48b6:	51                   	push   rcx
    48b7:	41 89 f9             	mov    r9d,edi
    48ba:	49 89 f0             	mov    r8,rsi
    48bd:	89 d1                	mov    ecx,edx
    48bf:	48 89 c2             	mov    rdx,rax
    48c2:	48 8d 35 e6 90 00 00 	lea    rsi,[rip+0x90e6]        # d9af <_IO_stdin_used+0x9af>
    48c9:	48 8d 3d 10 91 00 00 	lea    rdi,[rip+0x9110]        # d9e0 <_IO_stdin_used+0x9e0>
    48d0:	b8 00 00 00 00       	mov    eax,0x0
    48d5:	e8 f6 db ff ff       	call   24d0 <printf@plt>
    48da:	48 83 c4 10          	add    rsp,0x10
    48de:	0f b6 05 ed 46 13 00 	movzx  eax,BYTE PTR [rip+0x1346ed]        # 138fd2 <use_spi>
    48e5:	84 c0                	test   al,al
    48e7:	0f 84 8c 00 00 00    	je     4979 <ip4_tcp_decode+0x50a>
    48ed:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    48f1:	74 1a                	je     490d <ip4_tcp_decode+0x49e>
    48f3:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48f7:	74 14                	je     490d <ip4_tcp_decode+0x49e>
    48f9:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    48fd:	75 0e                	jne    490d <ip4_tcp_decode+0x49e>
    48ff:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4903:	48 89 c7             	mov    rdi,rax
    4906:	e8 cd 5e 00 00       	call   a7d8 <handle_data_pkt>
    490b:	eb 6c                	jmp    4979 <ip4_tcp_decode+0x50a>
    490d:	80 7d a2 00          	cmp    BYTE PTR [rbp-0x5e],0x0
    4911:	74 14                	je     4927 <ip4_tcp_decode+0x4b8>
    4913:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4917:	74 0e                	je     4927 <ip4_tcp_decode+0x4b8>
    4919:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    491d:	48 89 c7             	mov    rdi,rax
    4920:	e8 a6 5d 00 00       	call   a6cb <polite_end>
    4925:	eb 52                	jmp    4979 <ip4_tcp_decode+0x50a>
    4927:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    492b:	74 14                	je     4941 <ip4_tcp_decode+0x4d2>
    492d:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    4931:	75 0e                	jne    4941 <ip4_tcp_decode+0x4d2>
    4933:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4937:	48 89 c7             	mov    rdi,rax
    493a:	e8 04 59 00 00       	call   a243 <add_new_conversation>
    493f:	eb 38                	jmp    4979 <ip4_tcp_decode+0x50a>
    4941:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4945:	74 1a                	je     4961 <ip4_tcp_decode+0x4f2>
    4947:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    494b:	74 14                	je     4961 <ip4_tcp_decode+0x4f2>
    494d:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4951:	75 0e                	jne    4961 <ip4_tcp_decode+0x4f2>
    4953:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4957:	48 89 c7             	mov    rdi,rax
    495a:	e8 0e 5b 00 00       	call   a46d <spi_ud_thw>
    495f:	eb 18                	jmp    4979 <ip4_tcp_decode+0x50a>
    4961:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4965:	74 12                	je     4979 <ip4_tcp_decode+0x50a>
    4967:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    496b:	75 0c                	jne    4979 <ip4_tcp_decode+0x50a>
    496d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4971:	48 89 c7             	mov    rdi,rax
    4974:	e8 b7 5b 00 00       	call   a530 <update_table>
    4979:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    497d:	74 17                	je     4996 <ip4_tcp_decode+0x527>
    497f:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4983:	74 11                	je     4996 <ip4_tcp_decode+0x527>
    4985:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4989:	75 0b                	jne    4996 <ip4_tcp_decode+0x527>
    498b:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    498f:	c7 40 68 01 00 00 00 	mov    DWORD PTR [rax+0x68],0x1
    4996:	80 7d 9f 00          	cmp    BYTE PTR [rbp-0x61],0x0
    499a:	0f 84 8f 01 00 00    	je     4b2f <ip4_tcp_decode+0x6c0>
    49a0:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    49a4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49a8:	48 89 c7             	mov    rdi,rax
    49ab:	e8 fd 48 00 00       	call   92ad <member_exists>
    49b0:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    49b3:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    49b7:	0f 84 db 00 00 00    	je     4a98 <ip4_tcp_decode+0x629>
    49bd:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    49c0:	48 63 d0             	movsxd rdx,eax
    49c3:	48 89 d0             	mov    rax,rdx
    49c6:	48 c1 e0 02          	shl    rax,0x2
    49ca:	48 01 d0             	add    rax,rdx
    49cd:	48 c1 e0 03          	shl    rax,0x3
    49d1:	48 01 d0             	add    rax,rdx
    49d4:	48 c1 e0 04          	shl    rax,0x4
    49d8:	48 8d 15 41 fb 0e 00 	lea    rdx,[rip+0xefb41]        # f4520 <watchlist>
    49df:	48 01 d0             	add    rax,rdx
    49e2:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    49e6:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    49ea:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49ee:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    49f2:	48 83 c2 08          	add    rdx,0x8
    49f6:	48 89 c6             	mov    rsi,rax
    49f9:	48 89 d7             	mov    rdi,rdx
    49fc:	e8 bf dc ff ff       	call   26c0 <strcpy@plt>
    4a01:	bf 00 00 00 00       	mov    edi,0x0
    4a06:	e8 a5 dc ff ff       	call   26b0 <time@plt>
    4a0b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    4a0f:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4a15:	8d 72 01             	lea    esi,[rdx+0x1]
    4a18:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    4a1c:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a22:	48 89 c1             	mov    rcx,rax
    4a25:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a29:	89 d2                	mov    edx,edx
    4a2b:	48 83 c2 28          	add    rdx,0x28
    4a2f:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4a34:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a38:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a3e:	83 f8 1d             	cmp    eax,0x1d
    4a41:	0f 86 e8 00 00 00    	jbe    4b2f <ip4_tcp_decode+0x6c0>
    4a47:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a4b:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4a52:	00 00 00 
    4a55:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a59:	48 89 c7             	mov    rdi,rax
    4a5c:	e8 0a 44 00 00       	call   8e6b <tcp_rst_portscan_detect>
    4a61:	84 c0                	test   al,al
    4a63:	0f 84 c6 00 00 00    	je     4b2f <ip4_tcp_decode+0x6c0>
    4a69:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a6d:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a74:	00 00 00 
    4a77:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a7b:	48 05 50 01 00 00    	add    rax,0x150
    4a81:	ba f0 00 00 00       	mov    edx,0xf0
    4a86:	be 00 00 00 00       	mov    esi,0x0
    4a8b:	48 89 c7             	mov    rdi,rax
    4a8e:	e8 8d db ff ff       	call   2620 <memset@plt>
    4a93:	e9 97 00 00 00       	jmp    4b2f <ip4_tcp_decode+0x6c0>
    4a98:	8b 05 7a d5 00 00    	mov    eax,DWORD PTR [rip+0xd57a]        # 12018 <watchlist_num>
    4a9e:	83 c0 01             	add    eax,0x1
    4aa1:	89 05 71 d5 00 00    	mov    DWORD PTR [rip+0xd571],eax        # 12018 <watchlist_num>
    4aa7:	8b 05 6b d5 00 00    	mov    eax,DWORD PTR [rip+0xd56b]        # 12018 <watchlist_num>
    4aad:	48 63 d0             	movsxd rdx,eax
    4ab0:	48 89 d0             	mov    rax,rdx
    4ab3:	48 c1 e0 02          	shl    rax,0x2
    4ab7:	48 01 d0             	add    rax,rdx
    4aba:	48 c1 e0 03          	shl    rax,0x3
    4abe:	48 01 d0             	add    rax,rdx
    4ac1:	48 c1 e0 04          	shl    rax,0x4
    4ac5:	48 8d 15 54 fa 0e 00 	lea    rdx,[rip+0xefa54]        # f4520 <watchlist>
    4acc:	48 01 d0             	add    rax,rdx
    4acf:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4ad3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4ad7:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4adb:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4adf:	48 83 c2 08          	add    rdx,0x8
    4ae3:	48 89 c6             	mov    rsi,rax
    4ae6:	48 89 d7             	mov    rdi,rdx
    4ae9:	e8 d2 db ff ff       	call   26c0 <strcpy@plt>
    4aee:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4af2:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4af9:	00 00 00 
    4afc:	bf 00 00 00 00       	mov    edi,0x0
    4b01:	e8 aa db ff ff       	call   26b0 <time@plt>
    4b06:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4b0a:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4b10:	8d 72 01             	lea    esi,[rdx+0x1]
    4b13:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4b17:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4b1d:	48 89 c1             	mov    rcx,rax
    4b20:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4b24:	89 d2                	mov    edx,edx
    4b26:	48 83 c2 28          	add    rdx,0x28
    4b2a:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4b2f:	8b 05 53 d5 00 00    	mov    eax,DWORD PTR [rip+0xd553]        # 12088 <strict_nmap_host_alive_check>
    4b35:	83 f8 01             	cmp    eax,0x1
    4b38:	0f 85 f6 00 00 00    	jne    4c34 <ip4_tcp_decode+0x7c5>
    4b3e:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4b42:	74 0c                	je     4b50 <ip4_tcp_decode+0x6e1>
    4b44:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4b48:	74 26                	je     4b70 <ip4_tcp_decode+0x701>
    4b4a:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4b4e:	74 20                	je     4b70 <ip4_tcp_decode+0x701>
    4b50:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4b54:	0f 84 da 00 00 00    	je     4c34 <ip4_tcp_decode+0x7c5>
    4b5a:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4b61:	74 0d                	je     4b70 <ip4_tcp_decode+0x701>
    4b63:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4b6a:	0f 85 c4 00 00 00    	jne    4c34 <ip4_tcp_decode+0x7c5>
    4b70:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    4b73:	3b 45 ac             	cmp    eax,DWORD PTR [rbp-0x54]
    4b76:	76 0a                	jbe    4b82 <ip4_tcp_decode+0x713>
    4b78:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4b7c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b80:	eb 08                	jmp    4b8a <ip4_tcp_decode+0x71b>
    4b82:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4b86:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b8a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4b8e:	48 89 c7             	mov    rdi,rax
    4b91:	e8 17 47 00 00       	call   92ad <member_exists>
    4b96:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4b99:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    4b9d:	0f 84 91 00 00 00    	je     4c34 <ip4_tcp_decode+0x7c5>
    4ba3:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4ba6:	48 63 d0             	movsxd rdx,eax
    4ba9:	48 89 d0             	mov    rax,rdx
    4bac:	48 c1 e0 02          	shl    rax,0x2
    4bb0:	48 01 d0             	add    rax,rdx
    4bb3:	48 c1 e0 03          	shl    rax,0x3
    4bb7:	48 01 d0             	add    rax,rdx
    4bba:	48 c1 e0 04          	shl    rax,0x4
    4bbe:	48 8d 15 5b f9 0e 00 	lea    rdx,[rip+0xef95b]        # f4520 <watchlist>
    4bc5:	48 01 d0             	add    rax,rdx
    4bc8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4bcc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bd0:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4bd3:	85 c0                	test   eax,eax
    4bd5:	75 2a                	jne    4c01 <ip4_tcp_decode+0x792>
    4bd7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bdb:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bde:	83 f8 01             	cmp    eax,0x1
    4be1:	75 1e                	jne    4c01 <ip4_tcp_decode+0x792>
    4be3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4be7:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4bee:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bf2:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bf5:	8d 50 01             	lea    edx,[rax+0x1]
    4bf8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bfc:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4bff:	eb 33                	jmp    4c34 <ip4_tcp_decode+0x7c5>
    4c01:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c05:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4c08:	85 c0                	test   eax,eax
    4c0a:	75 28                	jne    4c34 <ip4_tcp_decode+0x7c5>
    4c0c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c10:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c13:	83 f8 02             	cmp    eax,0x2
    4c16:	75 1c                	jne    4c34 <ip4_tcp_decode+0x7c5>
    4c18:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c1c:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4c23:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c27:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c2a:	8d 50 01             	lea    edx,[rax+0x1]
    4c2d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c31:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c34:	0f b6 05 29 63 10 00 	movzx  eax,BYTE PTR [rip+0x106329]        # 10af64 <packet_print>
    4c3b:	84 c0                	test   al,al
    4c3d:	74 3a                	je     4c79 <ip4_tcp_decode+0x80a>
    4c3f:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4c43:	74 34                	je     4c79 <ip4_tcp_decode+0x80a>
    4c45:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4c49:	74 2e                	je     4c79 <ip4_tcp_decode+0x80a>
    4c4b:	0f b6 45 a2          	movzx  eax,BYTE PTR [rbp-0x5e]
    4c4f:	83 f0 01             	xor    eax,0x1
    4c52:	84 c0                	test   al,al
    4c54:	74 23                	je     4c79 <ip4_tcp_decode+0x80a>
    4c56:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4c5a:	74 06                	je     4c62 <ip4_tcp_decode+0x7f3>
    4c5c:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4c60:	75 17                	jne    4c79 <ip4_tcp_decode+0x80a>
    4c62:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4c66:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4c6a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c6e:	48 89 c6             	mov    rsi,rax
    4c71:	48 89 d7             	mov    rdi,rdx
    4c74:	e8 fa 4f 00 00       	call   9c73 <http_disect>
    4c79:	83 7d a8 15          	cmp    DWORD PTR [rbp-0x58],0x15
    4c7d:	74 06                	je     4c85 <ip4_tcp_decode+0x816>
    4c7f:	83 7d ac 15          	cmp    DWORD PTR [rbp-0x54],0x15
    4c83:	75 2d                	jne    4cb2 <ip4_tcp_decode+0x843>
    4c85:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4c89:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c8d:	c0 e8 04             	shr    al,0x4
    4c90:	0f b6 c0             	movzx  eax,al
    4c93:	c1 e0 02             	shl    eax,0x2
    4c96:	48 98                	cdqe   
    4c98:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4c9c:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4ca0:	48 01 c2             	add    rdx,rax
    4ca3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4ca7:	48 89 c6             	mov    rsi,rax
    4caa:	48 89 d7             	mov    rdi,rdx
    4cad:	e8 ac 51 00 00       	call   9e5e <ftp_disect>
    4cb2:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4cb9:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4cbc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4cc0:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4cc4:	c0 e8 04             	shr    al,0x4
    4cc7:	0f b6 c0             	movzx  eax,al
    4cca:	c1 e0 02             	shl    eax,0x2
    4ccd:	89 c1                	mov    ecx,eax
    4ccf:	89 d0                	mov    eax,edx
    4cd1:	29 c8                	sub    eax,ecx
    4cd3:	8d 50 de             	lea    edx,[rax-0x22]
    4cd6:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4cda:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4cdd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4ce1:	48 89 c7             	mov    rdi,rax
    4ce4:	e8 5c 17 00 00       	call   6445 <rulemgr>
    4ce9:	90                   	nop
    4cea:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4cee:	c9                   	leave  
    4cef:	c3                   	ret    

0000000000004cf0 <ip4_udp_decode>:
    4cf0:	f3 0f 1e fa          	endbr64 
    4cf4:	55                   	push   rbp
    4cf5:	48 89 e5             	mov    rbp,rsp
    4cf8:	48 83 ec 30          	sub    rsp,0x30
    4cfc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4d00:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4d04:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4d08:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d0c:	48 83 c0 22          	add    rax,0x22
    4d10:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4d14:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d18:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4d1c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d20:	48 89 10             	mov    QWORD PTR [rax],rdx
    4d23:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d27:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d2b:	ba 5d 00 00 00       	mov    edx,0x5d
    4d30:	be 01 00 00 00       	mov    esi,0x1
    4d35:	48 89 c7             	mov    rdi,rax
    4d38:	e8 07 02 00 00       	call   4f44 <add_ip_addr_or_inc_counter>
    4d3d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d41:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4d45:	ba 5d 00 00 00       	mov    edx,0x5d
    4d4a:	be 00 00 00 00       	mov    esi,0x0
    4d4f:	48 89 c7             	mov    rdi,rax
    4d52:	e8 ed 01 00 00       	call   4f44 <add_ip_addr_or_inc_counter>
    4d57:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d5b:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4d5e:	0f b7 c0             	movzx  eax,ax
    4d61:	89 c7                	mov    edi,eax
    4d63:	e8 b8 db ff ff       	call   2920 <ntohs@plt>
    4d68:	0f b7 c0             	movzx  eax,ax
    4d6b:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4d6e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d72:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4d76:	0f b7 c0             	movzx  eax,ax
    4d79:	89 c7                	mov    edi,eax
    4d7b:	e8 a0 db ff ff       	call   2920 <ntohs@plt>
    4d80:	0f b7 c0             	movzx  eax,ax
    4d83:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4d86:	0f b6 05 d7 61 10 00 	movzx  eax,BYTE PTR [rip+0x1061d7]        # 10af64 <packet_print>
    4d8d:	84 c0                	test   al,al
    4d8f:	74 5d                	je     4dee <ip4_udp_decode+0xfe>
    4d91:	48 8d 35 88 8c 00 00 	lea    rsi,[rip+0x8c88]        # da20 <_IO_stdin_used+0xa20>
    4d98:	48 8d 3d 87 8c 00 00 	lea    rdi,[rip+0x8c87]        # da26 <_IO_stdin_used+0xa26>
    4d9f:	b8 00 00 00 00       	mov    eax,0x0
    4da4:	e8 27 d7 ff ff       	call   24d0 <printf@plt>
    4da9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dad:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4db1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4db5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4db9:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4dbc:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4dbf:	41 89 f0             	mov    r8d,esi
    4dc2:	48 89 c6             	mov    rsi,rax
    4dc5:	48 8d 3d 5d 8c 00 00 	lea    rdi,[rip+0x8c5d]        # da29 <_IO_stdin_used+0xa29>
    4dcc:	b8 00 00 00 00       	mov    eax,0x0
    4dd1:	e8 fa d6 ff ff       	call   24d0 <printf@plt>
    4dd6:	48 8d 35 65 8c 00 00 	lea    rsi,[rip+0x8c65]        # da42 <_IO_stdin_used+0xa42>
    4ddd:	48 8d 3d 42 8c 00 00 	lea    rdi,[rip+0x8c42]        # da26 <_IO_stdin_used+0xa26>
    4de4:	b8 00 00 00 00       	mov    eax,0x0
    4de9:	e8 e2 d6 ff ff       	call   24d0 <printf@plt>
    4dee:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4df2:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4df5:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4df8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dfc:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4dff:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4e02:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4e06:	74 06                	je     4e0e <ip4_udp_decode+0x11e>
    4e08:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4e0c:	75 17                	jne    4e25 <ip4_udp_decode+0x135>
    4e0e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4e12:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4e16:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e1a:	48 89 c6             	mov    rsi,rax
    4e1d:	48 89 d7             	mov    rdi,rdx
    4e20:	e8 00 4f 00 00       	call   9d25 <dns_disect>
    4e25:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4e29:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4e2c:	8d 50 d6             	lea    edx,[rax-0x2a]
    4e2f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e33:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4e36:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e3a:	48 89 c7             	mov    rdi,rax
    4e3d:	e8 03 16 00 00       	call   6445 <rulemgr>
    4e42:	90                   	nop
    4e43:	c9                   	leave  
    4e44:	c3                   	ret    

0000000000004e45 <ip4_igmp_decode>:
    4e45:	f3 0f 1e fa          	endbr64 
    4e49:	55                   	push   rbp
    4e4a:	48 89 e5             	mov    rbp,rsp
    4e4d:	48 83 ec 60          	sub    rsp,0x60
    4e51:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4e55:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4e59:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4e5d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4e64:	00 00 
    4e66:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4e6a:	31 c0                	xor    eax,eax
    4e6c:	0f b6 05 f1 60 10 00 	movzx  eax,BYTE PTR [rip+0x1060f1]        # 10af64 <packet_print>
    4e73:	84 c0                	test   al,al
    4e75:	0f 84 b1 00 00 00    	je     4f2c <ip4_igmp_decode+0xe7>
    4e7b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4e7f:	48 83 c0 26          	add    rax,0x26
    4e83:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4e87:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4e8b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4e8f:	48 89 c6             	mov    rsi,rax
    4e92:	48 8d 3d af 8b 00 00 	lea    rdi,[rip+0x8baf]        # da48 <_IO_stdin_used+0xa48>
    4e99:	b8 00 00 00 00       	mov    eax,0x0
    4e9e:	e8 2d d6 ff ff       	call   24d0 <printf@plt>
    4ea3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4ea7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4eaa:	0f b6 c0             	movzx  eax,al
    4ead:	83 f8 11             	cmp    eax,0x11
    4eb0:	74 07                	je     4eb9 <ip4_igmp_decode+0x74>
    4eb2:	83 f8 22             	cmp    eax,0x22
    4eb5:	74 10                	je     4ec7 <ip4_igmp_decode+0x82>
    4eb7:	eb 54                	jmp    4f0d <ip4_igmp_decode+0xc8>
    4eb9:	48 8d 3d 9d 8b 00 00 	lea    rdi,[rip+0x8b9d]        # da5d <_IO_stdin_used+0xa5d>
    4ec0:	e8 bb d9 ff ff       	call   2880 <puts@plt>
    4ec5:	eb 66                	jmp    4f2d <ip4_igmp_decode+0xe8>
    4ec7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4ecb:	48 83 c0 26          	add    rax,0x26
    4ecf:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4ed3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4ed7:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4eda:	89 c7                	mov    edi,eax
    4edc:	e8 be e2 ff ff       	call   319f <ipv4_ntoa>
    4ee1:	48 89 c2             	mov    rdx,rax
    4ee4:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4ee8:	48 89 d6             	mov    rsi,rdx
    4eeb:	48 89 c7             	mov    rdi,rax
    4eee:	e8 cd d7 ff ff       	call   26c0 <strcpy@plt>
    4ef3:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4ef7:	48 89 c6             	mov    rsi,rax
    4efa:	48 8d 3d 77 8b 00 00 	lea    rdi,[rip+0x8b77]        # da78 <_IO_stdin_used+0xa78>
    4f01:	b8 00 00 00 00       	mov    eax,0x0
    4f06:	e8 c5 d5 ff ff       	call   24d0 <printf@plt>
    4f0b:	eb 20                	jmp    4f2d <ip4_igmp_decode+0xe8>
    4f0d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f11:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4f14:	0f b6 c0             	movzx  eax,al
    4f17:	89 c6                	mov    esi,eax
    4f19:	48 8d 3d 8e 8b 00 00 	lea    rdi,[rip+0x8b8e]        # daae <_IO_stdin_used+0xaae>
    4f20:	b8 00 00 00 00       	mov    eax,0x0
    4f25:	e8 a6 d5 ff ff       	call   24d0 <printf@plt>
    4f2a:	eb 01                	jmp    4f2d <ip4_igmp_decode+0xe8>
    4f2c:	90                   	nop
    4f2d:	90                   	nop
    4f2e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f32:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4f39:	00 00 
    4f3b:	74 05                	je     4f42 <ip4_igmp_decode+0xfd>
    4f3d:	e8 ae d7 ff ff       	call   26f0 <__stack_chk_fail@plt>
    4f42:	c9                   	leave  
    4f43:	c3                   	ret    

0000000000004f44 <add_ip_addr_or_inc_counter>:
    4f44:	f3 0f 1e fa          	endbr64 
    4f48:	55                   	push   rbp
    4f49:	48 89 e5             	mov    rbp,rsp
    4f4c:	48 83 ec 60          	sub    rsp,0x60
    4f50:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4f54:	89 f0                	mov    eax,esi
    4f56:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4f59:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4f5c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4f63:	00 00 
    4f65:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4f69:	31 c0                	xor    eax,eax
    4f6b:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f6f:	ba 08 00 00 00       	mov    edx,0x8
    4f74:	be 00 00 00 00       	mov    esi,0x0
    4f79:	48 89 c7             	mov    rdi,rax
    4f7c:	e8 9f d6 ff ff       	call   2620 <memset@plt>
    4f81:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4f85:	ba 1c 00 00 00       	mov    edx,0x1c
    4f8a:	be 00 00 00 00       	mov    esi,0x0
    4f8f:	48 89 c7             	mov    rdi,rax
    4f92:	e8 89 d6 ff ff       	call   2620 <memset@plt>
    4f97:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4f9b:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f9f:	ba 18 00 00 00       	mov    edx,0x18
    4fa4:	48 89 ce             	mov    rsi,rcx
    4fa7:	48 89 c7             	mov    rdi,rax
    4faa:	e8 51 d6 ff ff       	call   2600 <strncpy@plt>
    4faf:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4fb3:	ba 1c 00 00 00       	mov    edx,0x1c
    4fb8:	be 00 00 00 00       	mov    esi,0x0
    4fbd:	48 89 c7             	mov    rdi,rax
    4fc0:	e8 5b d6 ff ff       	call   2620 <memset@plt>
    4fc5:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fc9:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4fcd:	48 83 c2 08          	add    rdx,0x8
    4fd1:	48 89 c6             	mov    rsi,rax
    4fd4:	48 89 d7             	mov    rdi,rdx
    4fd7:	e8 e4 d6 ff ff       	call   26c0 <strcpy@plt>
    4fdc:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    4fe0:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    4fe3:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    4fe6:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4fe9:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4fed:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    4ff1:	48 89 d1             	mov    rcx,rdx
    4ff4:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 5030 <verify_ip_addr>
    4ffb:	be 00 00 00 00       	mov    esi,0x0
    5000:	48 89 c7             	mov    rdi,rax
    5003:	e8 08 d9 ff ff       	call   2910 <pthread_create@plt>
    5008:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    500c:	be 00 00 00 00       	mov    esi,0x0
    5011:	48 89 c7             	mov    rdi,rax
    5014:	e8 87 d6 ff ff       	call   26a0 <pthread_join@plt>
    5019:	90                   	nop
    501a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    501e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5025:	00 00 
    5027:	74 05                	je     502e <add_ip_addr_or_inc_counter+0xea>
    5029:	e8 c2 d6 ff ff       	call   26f0 <__stack_chk_fail@plt>
    502e:	c9                   	leave  
    502f:	c3                   	ret    

0000000000005030 <verify_ip_addr>:
    5030:	f3 0f 1e fa          	endbr64 
    5034:	55                   	push   rbp
    5035:	48 89 e5             	mov    rbp,rsp
    5038:	48 83 ec 30          	sub    rsp,0x30
    503c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    5040:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    5044:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    5048:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    504f:	e9 c9 00 00 00       	jmp    511d <verify_ip_addr+0xed>
    5054:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5057:	48 63 d0             	movsxd rdx,eax
    505a:	48 89 d0             	mov    rax,rdx
    505d:	48 c1 e0 02          	shl    rax,0x2
    5061:	48 01 d0             	add    rax,rdx
    5064:	48 c1 e0 03          	shl    rax,0x3
    5068:	48 01 d0             	add    rax,rdx
    506b:	48 c1 e0 04          	shl    rax,0x4
    506f:	48 8d 15 aa f4 0e 00 	lea    rdx,[rip+0xef4aa]        # f4520 <watchlist>
    5076:	48 01 d0             	add    rax,rdx
    5079:	48 8d 50 08          	lea    rdx,[rax+0x8]
    507d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5081:	48 83 c0 08          	add    rax,0x8
    5085:	48 89 d6             	mov    rsi,rdx
    5088:	48 89 c7             	mov    rdi,rax
    508b:	e8 70 d7 ff ff       	call   2800 <strcmp@plt>
    5090:	85 c0                	test   eax,eax
    5092:	0f 85 81 00 00 00    	jne    5119 <verify_ip_addr+0xe9>
    5098:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    509b:	48 63 d0             	movsxd rdx,eax
    509e:	48 89 d0             	mov    rax,rdx
    50a1:	48 c1 e0 02          	shl    rax,0x2
    50a5:	48 01 d0             	add    rax,rdx
    50a8:	48 c1 e0 03          	shl    rax,0x3
    50ac:	48 01 d0             	add    rax,rdx
    50af:	48 c1 e0 04          	shl    rax,0x4
    50b3:	48 89 c2             	mov    rdx,rax
    50b6:	48 8d 05 bb f6 0e 00 	lea    rax,[rip+0xef6bb]        # f4778 <watchlist+0x258>
    50bd:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    50c0:	8d 48 01             	lea    ecx,[rax+0x1]
    50c3:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50c6:	48 63 d0             	movsxd rdx,eax
    50c9:	48 89 d0             	mov    rax,rdx
    50cc:	48 c1 e0 02          	shl    rax,0x2
    50d0:	48 01 d0             	add    rax,rdx
    50d3:	48 c1 e0 03          	shl    rax,0x3
    50d7:	48 01 d0             	add    rax,rdx
    50da:	48 c1 e0 04          	shl    rax,0x4
    50de:	48 89 c2             	mov    rdx,rax
    50e1:	48 8d 05 90 f6 0e 00 	lea    rax,[rip+0xef690]        # f4778 <watchlist+0x258>
    50e8:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    50eb:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50ee:	48 63 d0             	movsxd rdx,eax
    50f1:	48 89 d0             	mov    rax,rdx
    50f4:	48 c1 e0 02          	shl    rax,0x2
    50f8:	48 01 d0             	add    rax,rdx
    50fb:	48 c1 e0 03          	shl    rax,0x3
    50ff:	48 01 d0             	add    rax,rdx
    5102:	48 c1 e0 04          	shl    rax,0x4
    5106:	48 8d 15 13 f4 0e 00 	lea    rdx,[rip+0xef413]        # f4520 <watchlist>
    510d:	48 01 d0             	add    rax,rdx
    5110:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5114:	e9 f5 00 00 00       	jmp    520e <verify_ip_addr+0x1de>
    5119:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    511d:	8b 05 f5 ce 00 00    	mov    eax,DWORD PTR [rip+0xcef5]        # 12018 <watchlist_num>
    5123:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    5126:	0f 8e 28 ff ff ff    	jle    5054 <verify_ip_addr+0x24>
    512c:	bf 90 02 00 00       	mov    edi,0x290
    5131:	e8 7a d6 ff ff       	call   27b0 <malloc@plt>
    5136:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    513a:	8b 05 d8 ce 00 00    	mov    eax,DWORD PTR [rip+0xced8]        # 12018 <watchlist_num>
    5140:	83 c0 01             	add    eax,0x1
    5143:	89 05 cf ce 00 00    	mov    DWORD PTR [rip+0xcecf],eax        # 12018 <watchlist_num>
    5149:	8b 05 c9 ce 00 00    	mov    eax,DWORD PTR [rip+0xcec9]        # 12018 <watchlist_num>
    514f:	48 63 d0             	movsxd rdx,eax
    5152:	48 89 d0             	mov    rax,rdx
    5155:	48 c1 e0 02          	shl    rax,0x2
    5159:	48 01 d0             	add    rax,rdx
    515c:	48 c1 e0 03          	shl    rax,0x3
    5160:	48 01 d0             	add    rax,rdx
    5163:	48 c1 e0 04          	shl    rax,0x4
    5167:	48 89 c1             	mov    rcx,rax
    516a:	48 8d 05 af f3 0e 00 	lea    rax,[rip+0xef3af]        # f4520 <watchlist>
    5171:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5175:	48 01 c8             	add    rax,rcx
    5178:	48 89 d6             	mov    rsi,rdx
    517b:	ba 52 00 00 00       	mov    edx,0x52
    5180:	48 89 c7             	mov    rdi,rax
    5183:	48 89 d1             	mov    rcx,rdx
    5186:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    5189:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    518d:	48 83 c0 08          	add    rax,0x8
    5191:	ba 0f 00 00 00       	mov    edx,0xf
    5196:	be 00 00 00 00       	mov    esi,0x0
    519b:	48 89 c7             	mov    rdi,rax
    519e:	e8 7d d4 ff ff       	call   2620 <memset@plt>
    51a3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51a7:	48 8d 48 08          	lea    rcx,[rax+0x8]
    51ab:	8b 05 67 ce 00 00    	mov    eax,DWORD PTR [rip+0xce67]        # 12018 <watchlist_num>
    51b1:	48 63 d0             	movsxd rdx,eax
    51b4:	48 89 d0             	mov    rax,rdx
    51b7:	48 c1 e0 02          	shl    rax,0x2
    51bb:	48 01 d0             	add    rax,rdx
    51be:	48 c1 e0 03          	shl    rax,0x3
    51c2:	48 01 d0             	add    rax,rdx
    51c5:	48 c1 e0 04          	shl    rax,0x4
    51c9:	48 8d 15 50 f3 0e 00 	lea    rdx,[rip+0xef350]        # f4520 <watchlist>
    51d0:	48 01 d0             	add    rax,rdx
    51d3:	48 83 c0 08          	add    rax,0x8
    51d7:	48 89 ce             	mov    rsi,rcx
    51da:	48 89 c7             	mov    rdi,rax
    51dd:	e8 de d4 ff ff       	call   26c0 <strcpy@plt>
    51e2:	8b 05 30 ce 00 00    	mov    eax,DWORD PTR [rip+0xce30]        # 12018 <watchlist_num>
    51e8:	48 63 d0             	movsxd rdx,eax
    51eb:	48 89 d0             	mov    rax,rdx
    51ee:	48 c1 e0 02          	shl    rax,0x2
    51f2:	48 01 d0             	add    rax,rdx
    51f5:	48 c1 e0 03          	shl    rax,0x3
    51f9:	48 01 d0             	add    rax,rdx
    51fc:	48 c1 e0 04          	shl    rax,0x4
    5200:	48 8d 15 19 f3 0e 00 	lea    rdx,[rip+0xef319]        # f4520 <watchlist>
    5207:	48 01 d0             	add    rax,rdx
    520a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    520e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5212:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5215:	84 c0                	test   al,al
    5217:	74 36                	je     524f <verify_ip_addr+0x21f>
    5219:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    521d:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5223:	8d 50 01             	lea    edx,[rax+0x1]
    5226:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    522a:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5230:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5234:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    523a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    523e:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5241:	01 c2                	add    edx,eax
    5243:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5247:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    524d:	eb 34                	jmp    5283 <verify_ip_addr+0x253>
    524f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5253:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    5259:	8d 50 01             	lea    edx,[rax+0x1]
    525c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5260:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    5266:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    526a:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    5270:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5274:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5277:	01 c2                	add    edx,eax
    5279:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    527d:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    5283:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5287:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    528d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5291:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5294:	01 c2                	add    edx,eax
    5296:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    529a:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    52a0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52a4:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    52aa:	8d 14 00             	lea    edx,[rax+rax*1]
    52ad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52b1:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    52b7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52bb:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    52be:	83 f8 5e             	cmp    eax,0x5e
    52c1:	0f 84 9b 00 00 00    	je     5362 <verify_ip_addr+0x332>
    52c7:	83 f8 5e             	cmp    eax,0x5e
    52ca:	0f 8f cf 00 00 00    	jg     539f <verify_ip_addr+0x36f>
    52d0:	83 f8 5c             	cmp    eax,0x5c
    52d3:	74 0a                	je     52df <verify_ip_addr+0x2af>
    52d5:	83 f8 5d             	cmp    eax,0x5d
    52d8:	74 48                	je     5322 <verify_ip_addr+0x2f2>
    52da:	e9 c0 00 00 00       	jmp    539f <verify_ip_addr+0x36f>
    52df:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52e3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52e6:	84 c0                	test   al,al
    52e8:	74 1c                	je     5306 <verify_ip_addr+0x2d6>
    52ea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ee:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    52f4:	8d 50 01             	lea    edx,[rax+0x1]
    52f7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52fb:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    5301:	e9 d5 00 00 00       	jmp    53db <verify_ip_addr+0x3ab>
    5306:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    530a:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    5310:	8d 50 01             	lea    edx,[rax+0x1]
    5313:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5317:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    531d:	e9 b9 00 00 00       	jmp    53db <verify_ip_addr+0x3ab>
    5322:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5326:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5329:	84 c0                	test   al,al
    532b:	74 1c                	je     5349 <verify_ip_addr+0x319>
    532d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5331:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    5337:	8d 50 01             	lea    edx,[rax+0x1]
    533a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    533e:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5344:	e9 92 00 00 00       	jmp    53db <verify_ip_addr+0x3ab>
    5349:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    534d:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5353:	8d 50 01             	lea    edx,[rax+0x1]
    5356:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    535a:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    5360:	eb 79                	jmp    53db <verify_ip_addr+0x3ab>
    5362:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5366:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5369:	84 c0                	test   al,al
    536b:	74 19                	je     5386 <verify_ip_addr+0x356>
    536d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5371:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    5377:	8d 50 01             	lea    edx,[rax+0x1]
    537a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    537e:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    5384:	eb 55                	jmp    53db <verify_ip_addr+0x3ab>
    5386:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    538a:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    5390:	8d 50 01             	lea    edx,[rax+0x1]
    5393:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5397:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    539d:	eb 3c                	jmp    53db <verify_ip_addr+0x3ab>
    539f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    53a3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53a6:	84 c0                	test   al,al
    53a8:	74 19                	je     53c3 <verify_ip_addr+0x393>
    53aa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53ae:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    53b4:	8d 50 01             	lea    edx,[rax+0x1]
    53b7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53bb:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    53c1:	eb 17                	jmp    53da <verify_ip_addr+0x3aa>
    53c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53c7:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    53cd:	8d 50 01             	lea    edx,[rax+0x1]
    53d0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53d4:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    53da:	90                   	nop
    53db:	b8 01 00 00 00       	mov    eax,0x1
    53e0:	c9                   	leave  
    53e1:	c3                   	ret    

00000000000053e2 <ascii_hexdump>:
    53e2:	f3 0f 1e fa          	endbr64 
    53e6:	55                   	push   rbp
    53e7:	48 89 e5             	mov    rbp,rsp
    53ea:	48 83 ec 20          	sub    rsp,0x20
    53ee:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    53f2:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    53f5:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    53fc:	eb 52                	jmp    5450 <ascii_hexdump+0x6e>
    53fe:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5401:	48 63 d0             	movsxd rdx,eax
    5404:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5408:	48 01 d0             	add    rax,rdx
    540b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    540e:	3c 20                	cmp    al,0x20
    5410:	76 30                	jbe    5442 <ascii_hexdump+0x60>
    5412:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5415:	48 63 d0             	movsxd rdx,eax
    5418:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    541c:	48 01 d0             	add    rax,rdx
    541f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5422:	3c 7e                	cmp    al,0x7e
    5424:	77 1c                	ja     5442 <ascii_hexdump+0x60>
    5426:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5429:	48 63 d0             	movsxd rdx,eax
    542c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5430:	48 01 d0             	add    rax,rdx
    5433:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5436:	0f b6 c0             	movzx  eax,al
    5439:	89 c7                	mov    edi,eax
    543b:	e8 b0 d3 ff ff       	call   27f0 <putchar@plt>
    5440:	eb 0a                	jmp    544c <ascii_hexdump+0x6a>
    5442:	bf 2e 00 00 00       	mov    edi,0x2e
    5447:	e8 a4 d3 ff ff       	call   27f0 <putchar@plt>
    544c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5450:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5453:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    5456:	7c a6                	jl     53fe <ascii_hexdump+0x1c>
    5458:	bf 0a 00 00 00       	mov    edi,0xa
    545d:	e8 8e d3 ff ff       	call   27f0 <putchar@plt>
    5462:	90                   	nop
    5463:	c9                   	leave  
    5464:	c3                   	ret    

0000000000005465 <stdout_alert>:
    5465:	f3 0f 1e fa          	endbr64 
    5469:	55                   	push   rbp
    546a:	48 89 e5             	mov    rbp,rsp
    546d:	53                   	push   rbx
    546e:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    5475:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    547c:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    5483:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    5489:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5490:	00 00 
    5492:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5496:	31 c0                	xor    eax,eax
    5498:	bf 00 00 00 00       	mov    edi,0x0
    549d:	e8 0e d2 ff ff       	call   26b0 <time@plt>
    54a2:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    54a9:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    54b0:	48 89 c7             	mov    rdi,rax
    54b3:	e8 98 d1 ff ff       	call   2650 <localtime@plt>
    54b8:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    54bb:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    54bf:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    54c6:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    54cd:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    54d1:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    54d5:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    54dc:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    54e3:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    54e7:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    54eb:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    54f2:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    54f9:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    54fd:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5504:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    550a:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    5510:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    5517:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    551e:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5524:	8d 48 01             	lea    ecx,[rax+0x1]
    5527:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    552d:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5533:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    553a:	57                   	push   rdi
    553b:	56                   	push   rsi
    553c:	48 8d 35 83 85 00 00 	lea    rsi,[rip+0x8583]        # dac6 <_IO_stdin_used+0xac6>
    5543:	48 89 c7             	mov    rdi,rax
    5546:	b8 00 00 00 00       	mov    eax,0x0
    554b:	e8 c0 cf ff ff       	call   2510 <sprintf@plt>
    5550:	48 83 c4 10          	add    rsp,0x10
    5554:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    555b:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    555e:	3d 80 00 00 00       	cmp    eax,0x80
    5563:	75 4e                	jne    55b3 <stdout_alert+0x14e>
    5565:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    556c:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    5570:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5577:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    557b:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5582:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    5589:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5590:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5597:	49 89 f9             	mov    r9,rdi
    559a:	49 89 f0             	mov    r8,rsi
    559d:	48 8d 35 3e 85 00 00 	lea    rsi,[rip+0x853e]        # dae2 <_IO_stdin_used+0xae2>
    55a4:	48 89 c7             	mov    rdi,rax
    55a7:	b8 00 00 00 00       	mov    eax,0x0
    55ac:	e8 5f cf ff ff       	call   2510 <sprintf@plt>
    55b1:	eb 61                	jmp    5614 <stdout_alert+0x1af>
    55b3:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55ba:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    55bd:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55c4:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    55c8:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55cf:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    55d3:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55da:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    55de:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    55e5:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    55ec:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    55f3:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55fa:	57                   	push   rdi
    55fb:	56                   	push   rsi
    55fc:	48 8d 35 ef 84 00 00 	lea    rsi,[rip+0x84ef]        # daf2 <_IO_stdin_used+0xaf2>
    5603:	48 89 c7             	mov    rdi,rax
    5606:	b8 00 00 00 00       	mov    eax,0x0
    560b:	e8 00 cf ff ff       	call   2510 <sprintf@plt>
    5610:	48 83 c4 10          	add    rsp,0x10
    5614:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    561b:	48 89 c6             	mov    rsi,rax
    561e:	48 8d 3d e3 84 00 00 	lea    rdi,[rip+0x84e3]        # db08 <_IO_stdin_used+0xb08>
    5625:	b8 00 00 00 00       	mov    eax,0x0
    562a:	e8 a1 ce ff ff       	call   24d0 <printf@plt>
    562f:	48 8b 05 02 ca 00 00 	mov    rax,QWORD PTR [rip+0xca02]        # 12038 <def_log_file>
    5636:	48 8d 35 ce 84 00 00 	lea    rsi,[rip+0x84ce]        # db0b <_IO_stdin_used+0xb0b>
    563d:	48 89 c7             	mov    rdi,rax
    5640:	e8 eb d0 ff ff       	call   2730 <fopen@plt>
    5645:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    564c:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5653:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    565a:	48 89 d6             	mov    rsi,rdx
    565d:	48 89 c7             	mov    rdi,rax
    5660:	e8 9b d0 ff ff       	call   2700 <fputs@plt>
    5665:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    566c:	48 89 c7             	mov    rdi,rax
    566f:	e8 6c d0 ff ff       	call   26e0 <fclose@plt>
    5674:	90                   	nop
    5675:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5679:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5680:	00 00 
    5682:	74 05                	je     5689 <stdout_alert+0x224>
    5684:	e8 67 d0 ff ff       	call   26f0 <__stack_chk_fail@plt>
    5689:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    568d:	c9                   	leave  
    568e:	c3                   	ret    

000000000000568f <str_match_parser>:
    568f:	f3 0f 1e fa          	endbr64 
    5693:	55                   	push   rbp
    5694:	48 89 e5             	mov    rbp,rsp
    5697:	53                   	push   rbx
    5698:	48 83 ec 48          	sub    rsp,0x48
    569c:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    56a0:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    56a4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    56ab:	00 00 
    56ad:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    56b1:	31 c0                	xor    eax,eax
    56b3:	48 89 e0             	mov    rax,rsp
    56b6:	48 89 c3             	mov    rbx,rax
    56b9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56bd:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56c0:	85 c0                	test   eax,eax
    56c2:	75 0a                	jne    56ce <str_match_parser+0x3f>
    56c4:	b8 00 00 00 00       	mov    eax,0x0
    56c9:	e9 e1 01 00 00       	jmp    58af <str_match_parser+0x220>
    56ce:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56d2:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56d5:	83 c0 01             	add    eax,0x1
    56d8:	01 c0                	add    eax,eax
    56da:	48 98                	cdqe   
    56dc:	48 83 e8 01          	sub    rax,0x1
    56e0:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    56e4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56e8:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56eb:	83 c0 01             	add    eax,0x1
    56ee:	01 c0                	add    eax,eax
    56f0:	48 98                	cdqe   
    56f2:	49 89 c2             	mov    r10,rax
    56f5:	41 bb 00 00 00 00    	mov    r11d,0x0
    56fb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56ff:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5702:	83 c0 01             	add    eax,0x1
    5705:	01 c0                	add    eax,eax
    5707:	48 98                	cdqe   
    5709:	49 89 c0             	mov    r8,rax
    570c:	41 b9 00 00 00 00    	mov    r9d,0x0
    5712:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5716:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5719:	83 c0 01             	add    eax,0x1
    571c:	01 c0                	add    eax,eax
    571e:	48 98                	cdqe   
    5720:	ba 10 00 00 00       	mov    edx,0x10
    5725:	48 83 ea 01          	sub    rdx,0x1
    5729:	48 01 d0             	add    rax,rdx
    572c:	be 10 00 00 00       	mov    esi,0x10
    5731:	ba 00 00 00 00       	mov    edx,0x0
    5736:	48 f7 f6             	div    rsi
    5739:	48 6b c0 10          	imul   rax,rax,0x10
    573d:	48 89 c1             	mov    rcx,rax
    5740:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    5747:	48 89 e2             	mov    rdx,rsp
    574a:	48 29 ca             	sub    rdx,rcx
    574d:	48 39 d4             	cmp    rsp,rdx
    5750:	74 12                	je     5764 <str_match_parser+0xd5>
    5752:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    5759:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    5760:	00 00 
    5762:	eb e9                	jmp    574d <str_match_parser+0xbe>
    5764:	48 89 c2             	mov    rdx,rax
    5767:	81 e2 ff 0f 00 00    	and    edx,0xfff
    576d:	48 29 d4             	sub    rsp,rdx
    5770:	48 89 c2             	mov    rdx,rax
    5773:	81 e2 ff 0f 00 00    	and    edx,0xfff
    5779:	48 85 d2             	test   rdx,rdx
    577c:	74 10                	je     578e <str_match_parser+0xff>
    577e:	25 ff 0f 00 00       	and    eax,0xfff
    5783:	48 83 e8 08          	sub    rax,0x8
    5787:	48 01 e0             	add    rax,rsp
    578a:	48 83 08 00          	or     QWORD PTR [rax],0x0
    578e:	48 89 e0             	mov    rax,rsp
    5791:	48 83 c0 00          	add    rax,0x0
    5795:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5799:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    579d:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    57a0:	83 c0 01             	add    eax,0x1
    57a3:	01 c0                	add    eax,eax
    57a5:	48 63 d0             	movsxd rdx,eax
    57a8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57ac:	be 00 00 00 00       	mov    esi,0x0
    57b1:	48 89 c7             	mov    rdi,rax
    57b4:	e8 67 ce ff ff       	call   2620 <memset@plt>
    57b9:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    57c0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57c4:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    57ca:	85 c0                	test   eax,eax
    57cc:	74 5f                	je     582d <str_match_parser+0x19e>
    57ce:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57d2:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    57d5:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    57d8:	eb 42                	jmp    581c <str_match_parser+0x18d>
    57da:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57de:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    57e1:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    57e4:	48 98                	cdqe   
    57e6:	48 01 d0             	add    rax,rdx
    57e9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    57ec:	0f b6 d0             	movzx  edx,al
    57ef:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    57f2:	8d 48 01             	lea    ecx,[rax+0x1]
    57f5:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    57f8:	01 c0                	add    eax,eax
    57fa:	48 63 c8             	movsxd rcx,eax
    57fd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5801:	48 01 c8             	add    rax,rcx
    5804:	48 8d 35 02 83 00 00 	lea    rsi,[rip+0x8302]        # db0d <_IO_stdin_used+0xb0d>
    580b:	48 89 c7             	mov    rdi,rax
    580e:	b8 00 00 00 00       	mov    eax,0x0
    5813:	e8 f8 cc ff ff       	call   2510 <sprintf@plt>
    5818:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    581c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5820:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    5826:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    5829:	7c af                	jl     57da <str_match_parser+0x14b>
    582b:	eb 5a                	jmp    5887 <str_match_parser+0x1f8>
    582d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5831:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5834:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    5837:	eb 42                	jmp    587b <str_match_parser+0x1ec>
    5839:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    583d:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5840:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    5843:	48 98                	cdqe   
    5845:	48 01 d0             	add    rax,rdx
    5848:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    584b:	0f b6 d0             	movzx  edx,al
    584e:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5851:	8d 48 01             	lea    ecx,[rax+0x1]
    5854:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    5857:	01 c0                	add    eax,eax
    5859:	48 63 c8             	movsxd rcx,eax
    585c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5860:	48 01 c8             	add    rax,rcx
    5863:	48 8d 35 a3 82 00 00 	lea    rsi,[rip+0x82a3]        # db0d <_IO_stdin_used+0xb0d>
    586a:	48 89 c7             	mov    rdi,rax
    586d:	b8 00 00 00 00       	mov    eax,0x0
    5872:	e8 99 cc ff ff       	call   2510 <sprintf@plt>
    5877:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    587b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    587f:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5882:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    5885:	7c b2                	jl     5839 <str_match_parser+0x1aa>
    5887:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    588b:	48 8d 50 40          	lea    rdx,[rax+0x40]
    588f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5893:	48 89 d6             	mov    rsi,rdx
    5896:	48 89 c7             	mov    rdi,rax
    5899:	e8 82 cc ff ff       	call   2520 <strstr@plt>
    589e:	48 85 c0             	test   rax,rax
    58a1:	74 07                	je     58aa <str_match_parser+0x21b>
    58a3:	b8 01 00 00 00       	mov    eax,0x1
    58a8:	eb 05                	jmp    58af <str_match_parser+0x220>
    58aa:	b8 00 00 00 00       	mov    eax,0x0
    58af:	48 89 dc             	mov    rsp,rbx
    58b2:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    58b6:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    58bd:	00 00 
    58bf:	74 05                	je     58c6 <str_match_parser+0x237>
    58c1:	e8 2a ce ff ff       	call   26f0 <__stack_chk_fail@plt>
    58c6:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    58ca:	c9                   	leave  
    58cb:	c3                   	ret    

00000000000058cc <is_blocked_ipv4>:
    58cc:	f3 0f 1e fa          	endbr64 
    58d0:	55                   	push   rbp
    58d1:	48 89 e5             	mov    rbp,rsp
    58d4:	48 83 ec 20          	sub    rsp,0x20
    58d8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    58dc:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    58e3:	eb 3b                	jmp    5920 <is_blocked_ipv4+0x54>
    58e5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    58e8:	48 63 d0             	movsxd rdx,eax
    58eb:	48 89 d0             	mov    rax,rdx
    58ee:	48 c1 e0 03          	shl    rax,0x3
    58f2:	48 01 d0             	add    rax,rdx
    58f5:	48 01 c0             	add    rax,rax
    58f8:	48 8d 15 e1 e9 0e 00 	lea    rdx,[rip+0xee9e1]        # f42e0 <blocked_ipv4_addrs>
    58ff:	48 01 c2             	add    rdx,rax
    5902:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5906:	48 89 d6             	mov    rsi,rdx
    5909:	48 89 c7             	mov    rdi,rax
    590c:	e8 ef ce ff ff       	call   2800 <strcmp@plt>
    5911:	85 c0                	test   eax,eax
    5913:	75 07                	jne    591c <is_blocked_ipv4+0x50>
    5915:	b8 01 00 00 00       	mov    eax,0x1
    591a:	eb 14                	jmp    5930 <is_blocked_ipv4+0x64>
    591c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5920:	8b 05 ea c6 00 00    	mov    eax,DWORD PTR [rip+0xc6ea]        # 12010 <blk_ipv4_len>
    5926:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    5929:	7e ba                	jle    58e5 <is_blocked_ipv4+0x19>
    592b:	b8 00 00 00 00       	mov    eax,0x0
    5930:	c9                   	leave  
    5931:	c3                   	ret    

0000000000005932 <none>:
    5932:	f3 0f 1e fa          	endbr64 
    5936:	55                   	push   rbp
    5937:	48 89 e5             	mov    rbp,rsp
    593a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    593e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5942:	b8 01 00 00 00       	mov    eax,0x1
    5947:	5d                   	pop    rbp
    5948:	c3                   	ret    

0000000000005949 <pcre_match>:
    5949:	f3 0f 1e fa          	endbr64 
    594d:	55                   	push   rbp
    594e:	48 89 e5             	mov    rbp,rsp
    5951:	48 83 ec 10          	sub    rsp,0x10
    5955:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5959:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    595d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5961:	48 8b 00             	mov    rax,QWORD PTR [rax]
    5964:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    5968:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    596f:	41 b8 00 00 00 00    	mov    r8d,0x0
    5975:	b9 00 00 00 00       	mov    ecx,0x0
    597a:	ba 00 00 00 00       	mov    edx,0x0
    597f:	48 89 c6             	mov    rsi,rax
    5982:	e8 e9 cd ff ff       	call   2770 <regexec@plt>
    5987:	83 f8 01             	cmp    eax,0x1
    598a:	75 07                	jne    5993 <pcre_match+0x4a>
    598c:	b8 00 00 00 00       	mov    eax,0x0
    5991:	eb 05                	jmp    5998 <pcre_match+0x4f>
    5993:	b8 01 00 00 00       	mov    eax,0x1
    5998:	c9                   	leave  
    5999:	c3                   	ret    

000000000000599a <rule_library_parser>:
    599a:	f3 0f 1e fa          	endbr64 
    599e:	55                   	push   rbp
    599f:	48 89 e5             	mov    rbp,rsp
    59a2:	53                   	push   rbx
    59a3:	48 83 ec 48          	sub    rsp,0x48
    59a7:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    59ab:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    59b2:	00 00 
    59b4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    59b8:	31 c0                	xor    eax,eax
    59ba:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    59be:	48 8d 35 53 81 00 00 	lea    rsi,[rip+0x8153]        # db18 <_IO_stdin_used+0xb18>
    59c5:	48 89 c7             	mov    rdi,rax
    59c8:	e8 63 cd ff ff       	call   2730 <fopen@plt>
    59cd:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    59d1:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    59d6:	75 22                	jne    59fa <rule_library_parser+0x60>
    59d8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    59dc:	48 89 c6             	mov    rsi,rax
    59df:	48 8d 3d 3a 81 00 00 	lea    rdi,[rip+0x813a]        # db20 <_IO_stdin_used+0xb20>
    59e6:	b8 00 00 00 00       	mov    eax,0x0
    59eb:	e8 e0 ca ff ff       	call   24d0 <printf@plt>
    59f0:	bf 01 00 00 00       	mov    edi,0x1
    59f5:	e8 66 cd ff ff       	call   2760 <exit@plt>
    59fa:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5a01:	00 
    5a02:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5a09:	00 
    5a0a:	e9 70 05 00 00       	jmp    5f7f <rule_library_parser+0x5e5>
    5a0f:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5a13:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a17:	48 8d 35 28 81 00 00 	lea    rsi,[rip+0x8128]        # db46 <_IO_stdin_used+0xb46>
    5a1e:	48 89 c7             	mov    rdi,rax
    5a21:	e8 ca ca ff ff       	call   24f0 <strcspn@plt>
    5a26:	48 01 d8             	add    rax,rbx
    5a29:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5a2c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a30:	48 89 c7             	mov    rdi,rax
    5a33:	e8 b9 05 00 00       	call   5ff1 <is_comment>
    5a38:	84 c0                	test   al,al
    5a3a:	74 05                	je     5a41 <rule_library_parser+0xa7>
    5a3c:	e9 3e 05 00 00       	jmp    5f7f <rule_library_parser+0x5e5>
    5a41:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a45:	ba 1a 00 00 00       	mov    edx,0x1a
    5a4a:	48 8d 35 f7 80 00 00 	lea    rsi,[rip+0x80f7]        # db48 <_IO_stdin_used+0xb48>
    5a51:	48 89 c7             	mov    rdi,rax
    5a54:	e8 77 cb ff ff       	call   25d0 <strncmp@plt>
    5a59:	85 c0                	test   eax,eax
    5a5b:	75 39                	jne    5a96 <rule_library_parser+0xfc>
    5a5d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a61:	48 83 c0 1a          	add    rax,0x1a
    5a65:	48 8d 35 f7 80 00 00 	lea    rsi,[rip+0x80f7]        # db63 <_IO_stdin_used+0xb63>
    5a6c:	48 89 c7             	mov    rdi,rax
    5a6f:	e8 8c cd ff ff       	call   2800 <strcmp@plt>
    5a74:	85 c0                	test   eax,eax
    5a76:	75 0f                	jne    5a87 <rule_library_parser+0xed>
    5a78:	c7 05 02 c6 00 00 01 	mov    DWORD PTR [rip+0xc602],0x1        # 12084 <strict_icmp_timestamp_req>
    5a7f:	00 00 00 
    5a82:	e9 e2 04 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5a87:	c7 05 f3 c5 00 00 00 	mov    DWORD PTR [rip+0xc5f3],0x0        # 12084 <strict_icmp_timestamp_req>
    5a8e:	00 00 00 
    5a91:	e9 d3 04 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5a96:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a9a:	ba 1d 00 00 00       	mov    edx,0x1d
    5a9f:	48 8d 35 c1 80 00 00 	lea    rsi,[rip+0x80c1]        # db67 <_IO_stdin_used+0xb67>
    5aa6:	48 89 c7             	mov    rdi,rax
    5aa9:	e8 22 cb ff ff       	call   25d0 <strncmp@plt>
    5aae:	85 c0                	test   eax,eax
    5ab0:	75 39                	jne    5aeb <rule_library_parser+0x151>
    5ab2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ab6:	48 83 c0 1d          	add    rax,0x1d
    5aba:	48 8d 35 a2 80 00 00 	lea    rsi,[rip+0x80a2]        # db63 <_IO_stdin_used+0xb63>
    5ac1:	48 89 c7             	mov    rdi,rax
    5ac4:	e8 37 cd ff ff       	call   2800 <strcmp@plt>
    5ac9:	85 c0                	test   eax,eax
    5acb:	75 0f                	jne    5adc <rule_library_parser+0x142>
    5acd:	c7 05 b1 c5 00 00 01 	mov    DWORD PTR [rip+0xc5b1],0x1        # 12088 <strict_nmap_host_alive_check>
    5ad4:	00 00 00 
    5ad7:	e9 8d 04 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5adc:	c7 05 a2 c5 00 00 00 	mov    DWORD PTR [rip+0xc5a2],0x0        # 12088 <strict_nmap_host_alive_check>
    5ae3:	00 00 00 
    5ae6:	e9 7e 04 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5aeb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5aef:	ba 17 00 00 00       	mov    edx,0x17
    5af4:	48 8d 35 8a 80 00 00 	lea    rsi,[rip+0x808a]        # db85 <_IO_stdin_used+0xb85>
    5afb:	48 89 c7             	mov    rdi,rax
    5afe:	e8 cd ca ff ff       	call   25d0 <strncmp@plt>
    5b03:	85 c0                	test   eax,eax
    5b05:	75 43                	jne    5b4a <rule_library_parser+0x1b0>
    5b07:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b0b:	48 89 c7             	mov    rdi,rax
    5b0e:	e8 9d ca ff ff       	call   25b0 <strlen@plt>
    5b13:	48 83 f8 17          	cmp    rax,0x17
    5b17:	77 16                	ja     5b2f <rule_library_parser+0x195>
    5b19:	48 8d 3d 7d 80 00 00 	lea    rdi,[rip+0x807d]        # db9d <_IO_stdin_used+0xb9d>
    5b20:	e8 5b cd ff ff       	call   2880 <puts@plt>
    5b25:	bf 01 00 00 00       	mov    edi,0x1
    5b2a:	e8 31 cc ff ff       	call   2760 <exit@plt>
    5b2f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b33:	48 83 c0 17          	add    rax,0x17
    5b37:	48 89 c7             	mov    rdi,rax
    5b3a:	e8 51 cd ff ff       	call   2890 <atoi@plt>
    5b3f:	89 05 1b 54 10 00    	mov    DWORD PTR [rip+0x10541b],eax        # 10af60 <clean_delay_pkts>
    5b45:	e9 1f 04 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5b4a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b4e:	ba 18 00 00 00       	mov    edx,0x18
    5b53:	48 8d 35 5d 80 00 00 	lea    rsi,[rip+0x805d]        # dbb7 <_IO_stdin_used+0xbb7>
    5b5a:	48 89 c7             	mov    rdi,rax
    5b5d:	e8 6e ca ff ff       	call   25d0 <strncmp@plt>
    5b62:	85 c0                	test   eax,eax
    5b64:	75 46                	jne    5bac <rule_library_parser+0x212>
    5b66:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b6a:	48 89 c7             	mov    rdi,rax
    5b6d:	e8 3e ca ff ff       	call   25b0 <strlen@plt>
    5b72:	48 83 f8 18          	cmp    rax,0x18
    5b76:	75 16                	jne    5b8e <rule_library_parser+0x1f4>
    5b78:	48 8d 3d 1e 80 00 00 	lea    rdi,[rip+0x801e]        # db9d <_IO_stdin_used+0xb9d>
    5b7f:	e8 fc cc ff ff       	call   2880 <puts@plt>
    5b84:	bf 01 00 00 00       	mov    edi,0x1
    5b89:	e8 d2 cb ff ff       	call   2760 <exit@plt>
    5b8e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b92:	48 83 c0 18          	add    rax,0x18
    5b96:	48 89 c7             	mov    rdi,rax
    5b99:	e8 f2 cc ff ff       	call   2890 <atoi@plt>
    5b9e:	48 98                	cdqe   
    5ba0:	48 89 05 11 c7 00 00 	mov    QWORD PTR [rip+0xc711],rax        # 122b8 <clean_delay>
    5ba7:	e9 bd 03 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5bac:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bb0:	ba 0b 00 00 00       	mov    edx,0xb
    5bb5:	48 8d 35 14 80 00 00 	lea    rsi,[rip+0x8014]        # dbd0 <_IO_stdin_used+0xbd0>
    5bbc:	48 89 c7             	mov    rdi,rax
    5bbf:	e8 0c ca ff ff       	call   25d0 <strncmp@plt>
    5bc4:	85 c0                	test   eax,eax
    5bc6:	75 33                	jne    5bfb <rule_library_parser+0x261>
    5bc8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bcc:	48 83 c0 0b          	add    rax,0xb
    5bd0:	48 8d 35 8c 7f 00 00 	lea    rsi,[rip+0x7f8c]        # db63 <_IO_stdin_used+0xb63>
    5bd7:	48 89 c7             	mov    rdi,rax
    5bda:	e8 21 cc ff ff       	call   2800 <strcmp@plt>
    5bdf:	85 c0                	test   eax,eax
    5be1:	75 0c                	jne    5bef <rule_library_parser+0x255>
    5be3:	c6 05 37 53 10 00 01 	mov    BYTE PTR [rip+0x105337],0x1        # 10af21 <use_sqlite>
    5bea:	e9 7a 03 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5bef:	c6 05 2b 53 10 00 00 	mov    BYTE PTR [rip+0x10532b],0x0        # 10af21 <use_sqlite>
    5bf6:	e9 6e 03 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5bfb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bff:	ba 15 00 00 00       	mov    edx,0x15
    5c04:	48 8d 35 d1 7f 00 00 	lea    rsi,[rip+0x7fd1]        # dbdc <_IO_stdin_used+0xbdc>
    5c0b:	48 89 c7             	mov    rdi,rax
    5c0e:	e8 bd c9 ff ff       	call   25d0 <strncmp@plt>
    5c13:	85 c0                	test   eax,eax
    5c15:	75 34                	jne    5c4b <rule_library_parser+0x2b1>
    5c17:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c1b:	48 83 c0 15          	add    rax,0x15
    5c1f:	48 89 c6             	mov    rsi,rax
    5c22:	48 8d 3d 17 53 10 00 	lea    rdi,[rip+0x105317]        # 10af40 <sqlite_db_path>
    5c29:	e8 92 ca ff ff       	call   26c0 <strcpy@plt>
    5c2e:	48 8d 35 0b 53 10 00 	lea    rsi,[rip+0x10530b]        # 10af40 <sqlite_db_path>
    5c35:	48 8d 3d b6 7f 00 00 	lea    rdi,[rip+0x7fb6]        # dbf2 <_IO_stdin_used+0xbf2>
    5c3c:	b8 00 00 00 00       	mov    eax,0x0
    5c41:	e8 ed 42 00 00       	call   9f33 <livedebug>
    5c46:	e9 1e 03 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5c4b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c4f:	ba 0b 00 00 00       	mov    edx,0xb
    5c54:	48 8d 35 b0 7f 00 00 	lea    rsi,[rip+0x7fb0]        # dc0b <_IO_stdin_used+0xc0b>
    5c5b:	48 89 c7             	mov    rdi,rax
    5c5e:	e8 6d c9 ff ff       	call   25d0 <strncmp@plt>
    5c63:	85 c0                	test   eax,eax
    5c65:	75 34                	jne    5c9b <rule_library_parser+0x301>
    5c67:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c6b:	48 83 c0 0b          	add    rax,0xb
    5c6f:	48 89 c6             	mov    rsi,rax
    5c72:	48 8d 3d 07 33 13 00 	lea    rdi,[rip+0x133307]        # 138f80 <input_adapter>
    5c79:	e8 42 ca ff ff       	call   26c0 <strcpy@plt>
    5c7e:	48 8d 35 fb 32 13 00 	lea    rsi,[rip+0x1332fb]        # 138f80 <input_adapter>
    5c85:	48 8d 3d 8c 7f 00 00 	lea    rdi,[rip+0x7f8c]        # dc18 <_IO_stdin_used+0xc18>
    5c8c:	b8 00 00 00 00       	mov    eax,0x0
    5c91:	e8 9d 42 00 00       	call   9f33 <livedebug>
    5c96:	e9 ce 02 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5c9b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c9f:	ba 0c 00 00 00       	mov    edx,0xc
    5ca4:	48 8d 35 a0 7f 00 00 	lea    rsi,[rip+0x7fa0]        # dc4b <_IO_stdin_used+0xc4b>
    5cab:	48 89 c7             	mov    rdi,rax
    5cae:	e8 1d c9 ff ff       	call   25d0 <strncmp@plt>
    5cb3:	85 c0                	test   eax,eax
    5cb5:	75 34                	jne    5ceb <rule_library_parser+0x351>
    5cb7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cbb:	48 83 c0 0c          	add    rax,0xc
    5cbf:	48 89 c6             	mov    rsi,rax
    5cc2:	48 8d 3d c7 32 13 00 	lea    rdi,[rip+0x1332c7]        # 138f90 <output_adapter>
    5cc9:	e8 f2 c9 ff ff       	call   26c0 <strcpy@plt>
    5cce:	48 8d 35 bb 32 13 00 	lea    rsi,[rip+0x1332bb]        # 138f90 <output_adapter>
    5cd5:	48 8d 3d 7c 7f 00 00 	lea    rdi,[rip+0x7f7c]        # dc58 <_IO_stdin_used+0xc58>
    5cdc:	b8 00 00 00 00       	mov    eax,0x0
    5ce1:	e8 4d 42 00 00       	call   9f33 <livedebug>
    5ce6:	e9 7e 02 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5ceb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cef:	ba 05 00 00 00       	mov    edx,0x5
    5cf4:	48 8d 35 91 7f 00 00 	lea    rsi,[rip+0x7f91]        # dc8c <_IO_stdin_used+0xc8c>
    5cfb:	48 89 c7             	mov    rdi,rax
    5cfe:	e8 cd c8 ff ff       	call   25d0 <strncmp@plt>
    5d03:	85 c0                	test   eax,eax
    5d05:	0f 85 81 00 00 00    	jne    5d8c <rule_library_parser+0x3f2>
    5d0b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d0f:	48 83 c0 05          	add    rax,0x5
    5d13:	48 89 c6             	mov    rsi,rax
    5d16:	48 8d 3d 75 7f 00 00 	lea    rdi,[rip+0x7f75]        # dc92 <_IO_stdin_used+0xc92>
    5d1d:	b8 00 00 00 00       	mov    eax,0x0
    5d22:	e8 0c 42 00 00       	call   9f33 <livedebug>
    5d27:	48 8d 3d 6d 7f 00 00 	lea    rdi,[rip+0x7f6d]        # dc9b <_IO_stdin_used+0xc9b>
    5d2e:	b8 00 00 00 00       	mov    eax,0x0
    5d33:	e8 98 c7 ff ff       	call   24d0 <printf@plt>
    5d38:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d3c:	48 83 c0 05          	add    rax,0x5
    5d40:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5d43:	0f b6 15 5d 7f 00 00 	movzx  edx,BYTE PTR [rip+0x7f5d]        # dca7 <_IO_stdin_used+0xca7>
    5d4a:	0f b6 c0             	movzx  eax,al
    5d4d:	0f b6 d2             	movzx  edx,dl
    5d50:	29 d0                	sub    eax,edx
    5d52:	85 c0                	test   eax,eax
    5d54:	75 1b                	jne    5d71 <rule_library_parser+0x3d7>
    5d56:	c7 05 c8 c2 00 00 02 	mov    DWORD PTR [rip+0xc2c8],0x2        # 12028 <VIGIL_MODE>
    5d5d:	00 00 00 
    5d60:	48 8d 3d 42 7f 00 00 	lea    rdi,[rip+0x7f42]        # dca9 <_IO_stdin_used+0xca9>
    5d67:	e8 14 cb ff ff       	call   2880 <puts@plt>
    5d6c:	e9 f8 01 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5d71:	c7 05 ad c2 00 00 01 	mov    DWORD PTR [rip+0xc2ad],0x1        # 12028 <VIGIL_MODE>
    5d78:	00 00 00 
    5d7b:	48 8d 3d 3e 7f 00 00 	lea    rdi,[rip+0x7f3e]        # dcc0 <_IO_stdin_used+0xcc0>
    5d82:	e8 f9 ca ff ff       	call   2880 <puts@plt>
    5d87:	e9 dd 01 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5d8c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d90:	ba 08 00 00 00       	mov    edx,0x8
    5d95:	48 8d 35 3b 7f 00 00 	lea    rsi,[rip+0x7f3b]        # dcd7 <_IO_stdin_used+0xcd7>
    5d9c:	48 89 c7             	mov    rdi,rax
    5d9f:	e8 2c c8 ff ff       	call   25d0 <strncmp@plt>
    5da4:	85 c0                	test   eax,eax
    5da6:	75 34                	jne    5ddc <rule_library_parser+0x442>
    5da8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dac:	48 83 c0 08          	add    rax,0x8
    5db0:	48 89 c6             	mov    rsi,rax
    5db3:	48 8d 3d e6 31 13 00 	lea    rdi,[rip+0x1331e6]        # 138fa0 <local_ip>
    5dba:	e8 01 c9 ff ff       	call   26c0 <strcpy@plt>
    5dbf:	48 8d 35 da 31 13 00 	lea    rsi,[rip+0x1331da]        # 138fa0 <local_ip>
    5dc6:	48 8d 3d 13 7f 00 00 	lea    rdi,[rip+0x7f13]        # dce0 <_IO_stdin_used+0xce0>
    5dcd:	b8 00 00 00 00       	mov    eax,0x0
    5dd2:	e8 5c 41 00 00       	call   9f33 <livedebug>
    5dd7:	e9 8d 01 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5ddc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5de0:	ba 06 00 00 00       	mov    edx,0x6
    5de5:	48 8d 35 0f 7f 00 00 	lea    rsi,[rip+0x7f0f]        # dcfb <_IO_stdin_used+0xcfb>
    5dec:	48 89 c7             	mov    rdi,rax
    5def:	e8 dc c7 ff ff       	call   25d0 <strncmp@plt>
    5df4:	85 c0                	test   eax,eax
    5df6:	75 1c                	jne    5e14 <rule_library_parser+0x47a>
    5df8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dfc:	48 83 c0 06          	add    rax,0x6
    5e00:	48 89 c6             	mov    rsi,rax
    5e03:	48 8d 3d b6 31 13 00 	lea    rdi,[rip+0x1331b6]        # 138fc0 <def_gw>
    5e0a:	e8 b1 c8 ff ff       	call   26c0 <strcpy@plt>
    5e0f:	e9 55 01 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5e14:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e18:	ba 08 00 00 00       	mov    edx,0x8
    5e1d:	48 8d 35 de 7e 00 00 	lea    rsi,[rip+0x7ede]        # dd02 <_IO_stdin_used+0xd02>
    5e24:	48 89 c7             	mov    rdi,rax
    5e27:	e8 a4 c7 ff ff       	call   25d0 <strncmp@plt>
    5e2c:	85 c0                	test   eax,eax
    5e2e:	75 3f                	jne    5e6f <rule_library_parser+0x4d5>
    5e30:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e34:	48 83 c0 08          	add    rax,0x8
    5e38:	48 8d 35 24 7d 00 00 	lea    rsi,[rip+0x7d24]        # db63 <_IO_stdin_used+0xb63>
    5e3f:	48 89 c7             	mov    rdi,rax
    5e42:	e8 b9 c9 ff ff       	call   2800 <strcmp@plt>
    5e47:	85 c0                	test   eax,eax
    5e49:	75 18                	jne    5e63 <rule_library_parser+0x4c9>
    5e4b:	c6 05 80 31 13 00 01 	mov    BYTE PTR [rip+0x133180],0x1        # 138fd2 <use_spi>
    5e52:	48 8d 3d b2 7e 00 00 	lea    rdi,[rip+0x7eb2]        # dd0b <_IO_stdin_used+0xd0b>
    5e59:	e8 22 ca ff ff       	call   2880 <puts@plt>
    5e5e:	e9 06 01 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5e63:	c6 05 68 31 13 00 00 	mov    BYTE PTR [rip+0x133168],0x0        # 138fd2 <use_spi>
    5e6a:	e9 fa 00 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5e6f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e73:	ba 09 00 00 00       	mov    edx,0x9
    5e78:	48 8d 35 a5 7e 00 00 	lea    rsi,[rip+0x7ea5]        # dd24 <_IO_stdin_used+0xd24>
    5e7f:	48 89 c7             	mov    rdi,rax
    5e82:	e8 49 c7 ff ff       	call   25d0 <strncmp@plt>
    5e87:	85 c0                	test   eax,eax
    5e89:	75 27                	jne    5eb2 <rule_library_parser+0x518>
    5e8b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e8f:	48 89 c7             	mov    rdi,rax
    5e92:	e8 83 01 00 00       	call   601a <rstrip>
    5e97:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e9b:	48 83 c0 09          	add    rax,0x9
    5e9f:	48 89 c7             	mov    rdi,rax
    5ea2:	e8 f8 65 00 00       	call   c49f <homenet_toi>
    5ea7:	89 05 27 31 13 00    	mov    DWORD PTR [rip+0x133127],eax        # 138fd4 <homenet>
    5ead:	e9 b7 00 00 00       	jmp    5f69 <rule_library_parser+0x5cf>
    5eb2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5eb6:	ba 0e 00 00 00       	mov    edx,0xe
    5ebb:	48 8d 35 6c 7e 00 00 	lea    rsi,[rip+0x7e6c]        # dd2e <_IO_stdin_used+0xd2e>
    5ec2:	48 89 c7             	mov    rdi,rax
    5ec5:	e8 06 c7 ff ff       	call   25d0 <strncmp@plt>
    5eca:	85 c0                	test   eax,eax
    5ecc:	75 24                	jne    5ef2 <rule_library_parser+0x558>
    5ece:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ed2:	48 89 c7             	mov    rdi,rax
    5ed5:	e8 40 01 00 00       	call   601a <rstrip>
    5eda:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ede:	48 83 c0 0e          	add    rax,0xe
    5ee2:	48 89 c7             	mov    rdi,rax
    5ee5:	e8 b5 65 00 00       	call   c49f <homenet_toi>
    5eea:	89 05 e8 30 13 00    	mov    DWORD PTR [rip+0x1330e8],eax        # 138fd8 <homenetmask>
    5ef0:	eb 77                	jmp    5f69 <rule_library_parser+0x5cf>
    5ef2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ef6:	ba 09 00 00 00       	mov    edx,0x9
    5efb:	48 8d 35 3b 7e 00 00 	lea    rsi,[rip+0x7e3b]        # dd3d <_IO_stdin_used+0xd3d>
    5f02:	48 89 c7             	mov    rdi,rax
    5f05:	e8 c6 c6 ff ff       	call   25d0 <strncmp@plt>
    5f0a:	85 c0                	test   eax,eax
    5f0c:	75 3f                	jne    5f4d <rule_library_parser+0x5b3>
    5f0e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f12:	48 89 c7             	mov    rdi,rax
    5f15:	e8 00 01 00 00       	call   601a <rstrip>
    5f1a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f1e:	48 83 c0 09          	add    rax,0x9
    5f22:	48 8d 35 1e 7e 00 00 	lea    rsi,[rip+0x7e1e]        # dd47 <_IO_stdin_used+0xd47>
    5f29:	48 89 c7             	mov    rdi,rax
    5f2c:	e8 cf c8 ff ff       	call   2800 <strcmp@plt>
    5f31:	85 c0                	test   eax,eax
    5f33:	75 0c                	jne    5f41 <rule_library_parser+0x5a7>
    5f35:	c7 05 29 50 10 00 04 	mov    DWORD PTR [rip+0x105029],0x4        # 10af68 <vigil_location>
    5f3c:	00 00 00 
    5f3f:	eb 28                	jmp    5f69 <rule_library_parser+0x5cf>
    5f41:	c7 05 1d 50 10 00 03 	mov    DWORD PTR [rip+0x10501d],0x3        # 10af68 <vigil_location>
    5f48:	00 00 00 
    5f4b:	eb 1c                	jmp    5f69 <rule_library_parser+0x5cf>
    5f4d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f51:	48 89 c7             	mov    rdi,rax
    5f54:	e8 7e 00 00 00       	call   5fd7 <is_rule>
    5f59:	84 c0                	test   al,al
    5f5b:	74 0c                	je     5f69 <rule_library_parser+0x5cf>
    5f5d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f61:	48 89 c7             	mov    rdi,rax
    5f64:	e8 18 01 00 00       	call   6081 <rule_parser>
    5f69:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f6d:	ba 08 00 00 00       	mov    edx,0x8
    5f72:	be 00 00 00 00       	mov    esi,0x0
    5f77:	48 89 c7             	mov    rdi,rax
    5f7a:	e8 a1 c6 ff ff       	call   2620 <memset@plt>
    5f7f:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5f83:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5f87:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5f8b:	48 89 ce             	mov    rsi,rcx
    5f8e:	48 89 c7             	mov    rdi,rax
    5f91:	e8 fa c7 ff ff       	call   2790 <getline@plt>
    5f96:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5f9a:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5f9f:	0f 85 6a fa ff ff    	jne    5a0f <rule_library_parser+0x75>
    5fa5:	8b 05 7d c0 00 00    	mov    eax,DWORD PTR [rip+0xc07d]        # 12028 <VIGIL_MODE>
    5fab:	3d ff ff 00 00       	cmp    eax,0xffff
    5fb0:	75 0a                	jne    5fbc <rule_library_parser+0x622>
    5fb2:	c7 05 6c c0 00 00 01 	mov    DWORD PTR [rip+0xc06c],0x1        # 12028 <VIGIL_MODE>
    5fb9:	00 00 00 
    5fbc:	90                   	nop
    5fbd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5fc1:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5fc8:	00 00 
    5fca:	74 05                	je     5fd1 <rule_library_parser+0x637>
    5fcc:	e8 1f c7 ff ff       	call   26f0 <__stack_chk_fail@plt>
    5fd1:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5fd5:	c9                   	leave  
    5fd6:	c3                   	ret    

0000000000005fd7 <is_rule>:
    5fd7:	f3 0f 1e fa          	endbr64 
    5fdb:	55                   	push   rbp
    5fdc:	48 89 e5             	mov    rbp,rsp
    5fdf:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5fe3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5fe7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5fea:	3c 24                	cmp    al,0x24
    5fec:	0f 94 c0             	sete   al
    5fef:	5d                   	pop    rbp
    5ff0:	c3                   	ret    

0000000000005ff1 <is_comment>:
    5ff1:	f3 0f 1e fa          	endbr64 
    5ff5:	55                   	push   rbp
    5ff6:	48 89 e5             	mov    rbp,rsp
    5ff9:	48 83 ec 10          	sub    rsp,0x10
    5ffd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6001:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6005:	be 23 00 00 00       	mov    esi,0x23
    600a:	48 89 c7             	mov    rdi,rax
    600d:	e8 6e c5 ff ff       	call   2580 <strchr@plt>
    6012:	48 85 c0             	test   rax,rax
    6015:	0f 95 c0             	setne  al
    6018:	c9                   	leave  
    6019:	c3                   	ret    

000000000000601a <rstrip>:
    601a:	f3 0f 1e fa          	endbr64 
    601e:	55                   	push   rbp
    601f:	48 89 e5             	mov    rbp,rsp
    6022:	48 83 ec 10          	sub    rsp,0x10
    6026:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    602a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    602e:	48 8d 35 11 7b 00 00 	lea    rsi,[rip+0x7b11]        # db46 <_IO_stdin_used+0xb46>
    6035:	48 89 c7             	mov    rdi,rax
    6038:	e8 b3 c4 ff ff       	call   24f0 <strcspn@plt>
    603d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6041:	48 01 d0             	add    rax,rdx
    6044:	c6 00 00             	mov    BYTE PTR [rax],0x0
    6047:	90                   	nop
    6048:	c9                   	leave  
    6049:	c3                   	ret    

000000000000604a <syntax_error>:
    604a:	f3 0f 1e fa          	endbr64 
    604e:	55                   	push   rbp
    604f:	48 89 e5             	mov    rbp,rsp
    6052:	48 83 ec 10          	sub    rsp,0x10
    6056:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    605a:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    605d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6061:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6064:	89 c6                	mov    esi,eax
    6066:	48 8d 3d e3 7c 00 00 	lea    rdi,[rip+0x7ce3]        # dd50 <_IO_stdin_used+0xd50>
    606d:	b8 00 00 00 00       	mov    eax,0x0
    6072:	e8 59 c4 ff ff       	call   24d0 <printf@plt>
    6077:	bf 01 00 00 00       	mov    edi,0x1
    607c:	e8 df c6 ff ff       	call   2760 <exit@plt>

0000000000006081 <rule_parser>:
    6081:	f3 0f 1e fa          	endbr64 
    6085:	55                   	push   rbp
    6086:	48 89 e5             	mov    rbp,rsp
    6089:	48 83 ec 40          	sub    rsp,0x40
    608d:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    6091:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6098:	00 00 
    609a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    609e:	31 c0                	xor    eax,eax
    60a0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    60a4:	48 83 c0 01          	add    rax,0x1
    60a8:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    60ac:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60b0:	48 8d 35 61 7a 00 00 	lea    rsi,[rip+0x7a61]        # db18 <_IO_stdin_used+0xb18>
    60b7:	48 89 c7             	mov    rdi,rax
    60ba:	e8 71 c6 ff ff       	call   2730 <fopen@plt>
    60bf:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    60c3:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    60c8:	75 22                	jne    60ec <rule_parser+0x6b>
    60ca:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60ce:	48 89 c6             	mov    rsi,rax
    60d1:	48 8d 3d 98 7c 00 00 	lea    rdi,[rip+0x7c98]        # dd70 <_IO_stdin_used+0xd70>
    60d8:	b8 00 00 00 00       	mov    eax,0x0
    60dd:	e8 ee c3 ff ff       	call   24d0 <printf@plt>
    60e2:	bf 01 00 00 00       	mov    edi,0x1
    60e7:	e8 74 c6 ff ff       	call   2760 <exit@plt>
    60ec:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60f0:	48 89 c6             	mov    rsi,rax
    60f3:	48 8d 3d a9 7c 00 00 	lea    rdi,[rip+0x7ca9]        # dda3 <_IO_stdin_used+0xda3>
    60fa:	b8 00 00 00 00       	mov    eax,0x0
    60ff:	e8 cc c3 ff ff       	call   24d0 <printf@plt>
    6104:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    610b:	00 
    610c:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    6113:	00 
    6114:	eb 54                	jmp    616a <rule_parser+0xe9>
    6116:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    611a:	48 89 c7             	mov    rdi,rax
    611d:	e8 cf fe ff ff       	call   5ff1 <is_comment>
    6122:	84 c0                	test   al,al
    6124:	74 02                	je     6128 <rule_parser+0xa7>
    6126:	eb 42                	jmp    616a <rule_parser+0xe9>
    6128:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    612c:	48 89 c7             	mov    rdi,rax
    612f:	e8 e6 fe ff ff       	call   601a <rstrip>
    6134:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6138:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    613b:	0f b6 c0             	movzx  eax,al
    613e:	f7 d8                	neg    eax
    6140:	85 c0                	test   eax,eax
    6142:	75 02                	jne    6146 <rule_parser+0xc5>
    6144:	eb 24                	jmp    616a <rule_parser+0xe9>
    6146:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    614a:	48 8d 35 63 7c 00 00 	lea    rsi,[rip+0x7c63]        # ddb4 <_IO_stdin_used+0xdb4>
    6151:	48 89 c7             	mov    rdi,rax
    6154:	e8 c7 c3 ff ff       	call   2520 <strstr@plt>
    6159:	48 85 c0             	test   rax,rax
    615c:	74 0c                	je     616a <rule_parser+0xe9>
    615e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6162:	48 89 c7             	mov    rdi,rax
    6165:	e8 f1 4e 00 00       	call   b05b <line_parser>
    616a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    616e:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6172:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    6176:	48 89 ce             	mov    rsi,rcx
    6179:	48 89 c7             	mov    rdi,rax
    617c:	e8 0f c6 ff ff       	call   2790 <getline@plt>
    6181:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6185:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    618a:	75 8a                	jne    6116 <rule_parser+0x95>
    618c:	0f b6 05 8d 4d 10 00 	movzx  eax,BYTE PTR [rip+0x104d8d]        # 10af20 <debug_mode>
    6193:	84 c0                	test   al,al
    6195:	74 18                	je     61af <rule_parser+0x12e>
    6197:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    619b:	48 89 c6             	mov    rsi,rax
    619e:	48 8d 3d 15 7c 00 00 	lea    rdi,[rip+0x7c15]        # ddba <_IO_stdin_used+0xdba>
    61a5:	b8 00 00 00 00       	mov    eax,0x0
    61aa:	e8 21 c3 ff ff       	call   24d0 <printf@plt>
    61af:	90                   	nop
    61b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    61b4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    61bb:	00 00 
    61bd:	74 05                	je     61c4 <rule_parser+0x143>
    61bf:	e8 2c c5 ff ff       	call   26f0 <__stack_chk_fail@plt>
    61c4:	c9                   	leave  
    61c5:	c3                   	ret    

00000000000061c6 <deny_conf_parser>:
    61c6:	f3 0f 1e fa          	endbr64 
    61ca:	55                   	push   rbp
    61cb:	48 89 e5             	mov    rbp,rsp
    61ce:	48 83 ec 50          	sub    rsp,0x50
    61d2:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    61d6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    61dd:	00 00 
    61df:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    61e3:	31 c0                	xor    eax,eax
    61e5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    61e9:	48 8d 35 28 79 00 00 	lea    rsi,[rip+0x7928]        # db18 <_IO_stdin_used+0xb18>
    61f0:	48 89 c7             	mov    rdi,rax
    61f3:	e8 38 c5 ff ff       	call   2730 <fopen@plt>
    61f8:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    61fc:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    6201:	75 22                	jne    6225 <deny_conf_parser+0x5f>
    6203:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6207:	48 89 c6             	mov    rsi,rax
    620a:	48 8d 3d bf 7b 00 00 	lea    rdi,[rip+0x7bbf]        # ddd0 <_IO_stdin_used+0xdd0>
    6211:	b8 00 00 00 00       	mov    eax,0x0
    6216:	e8 b5 c2 ff ff       	call   24d0 <printf@plt>
    621b:	bf 01 00 00 00       	mov    edi,0x1
    6220:	e8 3b c5 ff ff       	call   2760 <exit@plt>
    6225:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    622c:	00 
    622d:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6234:	00 
    6235:	e9 9a 00 00 00       	jmp    62d4 <deny_conf_parser+0x10e>
    623a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    623e:	48 89 c7             	mov    rdi,rax
    6241:	e8 d4 fd ff ff       	call   601a <rstrip>
    6246:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    624a:	48 89 c7             	mov    rdi,rax
    624d:	e8 9f fd ff ff       	call   5ff1 <is_comment>
    6252:	84 c0                	test   al,al
    6254:	74 02                	je     6258 <deny_conf_parser+0x92>
    6256:	eb 7c                	jmp    62d4 <deny_conf_parser+0x10e>
    6258:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    625c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    625f:	0f b6 c0             	movzx  eax,al
    6262:	f7 d8                	neg    eax
    6264:	85 c0                	test   eax,eax
    6266:	75 02                	jne    626a <deny_conf_parser+0xa4>
    6268:	eb 6a                	jmp    62d4 <deny_conf_parser+0x10e>
    626a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    626e:	48 8d 35 8c 7b 00 00 	lea    rsi,[rip+0x7b8c]        # de01 <_IO_stdin_used+0xe01>
    6275:	48 89 c7             	mov    rdi,rax
    6278:	e8 a3 c2 ff ff       	call   2520 <strstr@plt>
    627d:	48 85 c0             	test   rax,rax
    6280:	74 52                	je     62d4 <deny_conf_parser+0x10e>
    6282:	8b 05 88 bd 00 00    	mov    eax,DWORD PTR [rip+0xbd88]        # 12010 <blk_ipv4_len>
    6288:	83 c0 01             	add    eax,0x1
    628b:	89 05 7f bd 00 00    	mov    DWORD PTR [rip+0xbd7f],eax        # 12010 <blk_ipv4_len>
    6291:	8b 05 79 bd 00 00    	mov    eax,DWORD PTR [rip+0xbd79]        # 12010 <blk_ipv4_len>
    6297:	48 63 d0             	movsxd rdx,eax
    629a:	48 89 d0             	mov    rax,rdx
    629d:	48 c1 e0 03          	shl    rax,0x3
    62a1:	48 01 d0             	add    rax,rdx
    62a4:	48 01 c0             	add    rax,rax
    62a7:	48 8d 15 32 e0 0e 00 	lea    rdx,[rip+0xee032]        # f42e0 <blocked_ipv4_addrs>
    62ae:	48 01 d0             	add    rax,rdx
    62b1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    62b5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62b9:	48 83 c0 05          	add    rax,0x5
    62bd:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    62c1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62c5:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    62c9:	48 89 d6             	mov    rsi,rdx
    62cc:	48 89 c7             	mov    rdi,rax
    62cf:	e8 ec c3 ff ff       	call   26c0 <strcpy@plt>
    62d4:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    62d8:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    62dc:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    62e0:	48 89 ce             	mov    rsi,rcx
    62e3:	48 89 c7             	mov    rdi,rax
    62e6:	e8 a5 c4 ff ff       	call   2790 <getline@plt>
    62eb:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    62ef:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    62f4:	0f 85 40 ff ff ff    	jne    623a <deny_conf_parser+0x74>
    62fa:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62fe:	48 85 c0             	test   rax,rax
    6301:	74 0c                	je     630f <deny_conf_parser+0x149>
    6303:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6307:	48 89 c7             	mov    rdi,rax
    630a:	e8 41 c4 ff ff       	call   2750 <free@plt>
    630f:	90                   	nop
    6310:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6314:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    631b:	00 00 
    631d:	74 05                	je     6324 <deny_conf_parser+0x15e>
    631f:	e8 cc c3 ff ff       	call   26f0 <__stack_chk_fail@plt>
    6324:	c9                   	leave  
    6325:	c3                   	ret    

0000000000006326 <host_mon_parser>:
    6326:	f3 0f 1e fa          	endbr64 
    632a:	55                   	push   rbp
    632b:	48 89 e5             	mov    rbp,rsp
    632e:	48 83 ec 10          	sub    rsp,0x10
    6332:	48 8b 05 07 bd 00 00 	mov    rax,QWORD PTR [rip+0xbd07]        # 12040 <default_host_conf>
    6339:	48 8d 35 d8 77 00 00 	lea    rsi,[rip+0x77d8]        # db18 <_IO_stdin_used+0xb18>
    6340:	48 89 c7             	mov    rdi,rax
    6343:	e8 e8 c3 ff ff       	call   2730 <fopen@plt>
    6348:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    634c:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    6351:	75 25                	jne    6378 <host_mon_parser+0x52>
    6353:	48 8b 05 e6 bc 00 00 	mov    rax,QWORD PTR [rip+0xbce6]        # 12040 <default_host_conf>
    635a:	48 89 c6             	mov    rsi,rax
    635d:	48 8d 3d a2 7a 00 00 	lea    rdi,[rip+0x7aa2]        # de06 <_IO_stdin_used+0xe06>
    6364:	b8 00 00 00 00       	mov    eax,0x0
    6369:	e8 62 c1 ff ff       	call   24d0 <printf@plt>
    636e:	bf 01 00 00 00       	mov    edi,0x1
    6373:	e8 e8 c3 ff ff       	call   2760 <exit@plt>
    6378:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    637c:	48 89 c7             	mov    rdi,rax
    637f:	e8 5c c3 ff ff       	call   26e0 <fclose@plt>
    6384:	90                   	nop
    6385:	c9                   	leave  
    6386:	c3                   	ret    

0000000000006387 <rule_app>:
    6387:	f3 0f 1e fa          	endbr64 
    638b:	55                   	push   rbp
    638c:	48 89 e5             	mov    rbp,rsp
    638f:	48 83 ec 20          	sub    rsp,0x20
    6393:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6397:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    639b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    639f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63a3:	48 89 d6             	mov    rsi,rdx
    63a6:	48 89 c7             	mov    rdi,rax
    63a9:	e8 e9 02 00 00       	call   6697 <r_engine>
    63ae:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    63b1:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    63b5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63b9:	48 89 d6             	mov    rsi,rdx
    63bc:	48 89 c7             	mov    rdi,rax
    63bf:	e8 c9 5f 00 00       	call   c38d <d_engine>
    63c4:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    63c7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63cb:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    63d2:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    63d6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    63da:	48 89 d6             	mov    rsi,rdx
    63dd:	48 89 c7             	mov    rdi,rax
    63e0:	ff d1                	call   rcx
    63e2:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    63e5:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    63e9:	74 40                	je     642b <rule_app+0xa4>
    63eb:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    63ef:	74 3a                	je     642b <rule_app+0xa4>
    63f1:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    63f5:	74 34                	je     642b <rule_app+0xa4>
    63f7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63fb:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    6402:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6406:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    640a:	ba 00 00 00 00       	mov    edx,0x0
    640f:	48 89 ce             	mov    rsi,rcx
    6412:	48 89 c7             	mov    rdi,rax
    6415:	41 ff d0             	call   r8
    6418:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    641c:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    641f:	8d 50 01             	lea    edx,[rax+0x1]
    6422:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6426:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    6429:	eb 17                	jmp    6442 <rule_app+0xbb>
    642b:	8b 05 f7 bb 00 00    	mov    eax,DWORD PTR [rip+0xbbf7]        # 12028 <VIGIL_MODE>
    6431:	83 f8 02             	cmp    eax,0x2
    6434:	75 0c                	jne    6442 <rule_app+0xbb>
    6436:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    643a:	48 89 c7             	mov    rdi,rax
    643d:	e8 d0 3b 00 00       	call   a012 <forward_packet>
    6442:	90                   	nop
    6443:	c9                   	leave  
    6444:	c3                   	ret    

0000000000006445 <rulemgr>:
    6445:	f3 0f 1e fa          	endbr64 
    6449:	55                   	push   rbp
    644a:	48 89 e5             	mov    rbp,rsp
    644d:	48 83 ec 20          	sub    rsp,0x20
    6451:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6455:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    645c:	e9 23 02 00 00       	jmp    6684 <rulemgr+0x23f>
    6461:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6464:	8d 50 01             	lea    edx,[rax+0x1]
    6467:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    646a:	48 98                	cdqe   
    646c:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    6473:	48 8d 15 66 be 00 00 	lea    rdx,[rip+0xbe66]        # 122e0 <rules>
    647a:	48 01 d0             	add    rax,rdx
    647d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6481:	0f b6 05 54 2b 13 00 	movzx  eax,BYTE PTR [rip+0x132b54]        # 138fdc <in_test_mode>
    6488:	84 c0                	test   al,al
    648a:	74 30                	je     64bc <rulemgr+0x77>
    648c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6490:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6493:	83 f8 46             	cmp    eax,0x46
    6496:	75 0d                	jne    64a5 <rulemgr+0x60>
    6498:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    649c:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    64a3:	eb 17                	jmp    64bc <rulemgr+0x77>
    64a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64a9:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64ac:	83 f8 45             	cmp    eax,0x45
    64af:	75 0b                	jne    64bc <rulemgr+0x77>
    64b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64b5:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    64bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64c0:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    64c6:	83 f8 ff             	cmp    eax,0xffffffff
    64c9:	74 19                	je     64e4 <rulemgr+0x9f>
    64cb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64cf:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    64d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64d6:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    64dc:	39 c2                	cmp    edx,eax
    64de:	0f 85 a0 01 00 00    	jne    6684 <rulemgr+0x23f>
    64e4:	0f b6 05 95 bb 00 00 	movzx  eax,BYTE PTR [rip+0xbb95]        # 12080 <demo_mode>
    64eb:	84 c0                	test   al,al
    64ed:	75 0b                	jne    64fa <rulemgr+0xb5>
    64ef:	8b 05 73 4a 10 00    	mov    eax,DWORD PTR [rip+0x104a73]        # 10af68 <vigil_location>
    64f5:	83 f8 03             	cmp    eax,0x3
    64f8:	75 6b                	jne    6565 <rulemgr+0x120>
    64fa:	8b 05 68 4a 10 00    	mov    eax,DWORD PTR [rip+0x104a68]        # 10af68 <vigil_location>
    6500:	83 f8 03             	cmp    eax,0x3
    6503:	0f 85 7b 01 00 00    	jne    6684 <rulemgr+0x23f>
    6509:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    650d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6510:	83 f8 ff             	cmp    eax,0xffffffff
    6513:	74 16                	je     652b <rulemgr+0xe6>
    6515:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6519:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    651c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6520:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6523:	39 c2                	cmp    edx,eax
    6525:	0f 85 59 01 00 00    	jne    6684 <rulemgr+0x23f>
    652b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    652f:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6532:	83 f8 ff             	cmp    eax,0xffffffff
    6535:	74 16                	je     654d <rulemgr+0x108>
    6537:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    653b:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    653e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6542:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6545:	39 c2                	cmp    edx,eax
    6547:	0f 85 37 01 00 00    	jne    6684 <rulemgr+0x23f>
    654d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6551:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6555:	48 89 d6             	mov    rsi,rdx
    6558:	48 89 c7             	mov    rdi,rax
    655b:	e8 27 fe ff ff       	call   6387 <rule_app>
    6560:	e9 1f 01 00 00       	jmp    6684 <rulemgr+0x23f>
    6565:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6569:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    656c:	83 f8 47             	cmp    eax,0x47
    656f:	74 16                	je     6587 <rulemgr+0x142>
    6571:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6575:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    6578:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    657c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    657f:	39 c2                	cmp    edx,eax
    6581:	0f 85 fd 00 00 00    	jne    6684 <rulemgr+0x23f>
    6587:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    658b:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6591:	3d 80 00 00 00       	cmp    eax,0x80
    6596:	75 18                	jne    65b0 <rulemgr+0x16b>
    6598:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    659c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65a0:	48 89 d6             	mov    rsi,rdx
    65a3:	48 89 c7             	mov    rdi,rax
    65a6:	e8 dc fd ff ff       	call   6387 <rule_app>
    65ab:	e9 d4 00 00 00       	jmp    6684 <rulemgr+0x23f>
    65b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65b4:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    65b7:	83 f8 47             	cmp    eax,0x47
    65ba:	75 79                	jne    6635 <rulemgr+0x1f0>
    65bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65c0:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65c3:	83 f8 ff             	cmp    eax,0xffffffff
    65c6:	74 28                	je     65f0 <rulemgr+0x1ab>
    65c8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65cc:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    65cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65d3:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65d6:	39 c2                	cmp    edx,eax
    65d8:	74 16                	je     65f0 <rulemgr+0x1ab>
    65da:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65de:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    65e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65e5:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65e8:	39 c2                	cmp    edx,eax
    65ea:	0f 85 94 00 00 00    	jne    6684 <rulemgr+0x23f>
    65f0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65f4:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65f7:	83 f8 ff             	cmp    eax,0xffffffff
    65fa:	74 24                	je     6620 <rulemgr+0x1db>
    65fc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6600:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    6603:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6607:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    660a:	39 c2                	cmp    edx,eax
    660c:	74 12                	je     6620 <rulemgr+0x1db>
    660e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6612:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    6615:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6619:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    661c:	39 c2                	cmp    edx,eax
    661e:	75 64                	jne    6684 <rulemgr+0x23f>
    6620:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6624:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6628:	48 89 d6             	mov    rsi,rdx
    662b:	48 89 c7             	mov    rdi,rax
    662e:	e8 54 fd ff ff       	call   6387 <rule_app>
    6633:	eb 4f                	jmp    6684 <rulemgr+0x23f>
    6635:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6639:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    663c:	83 f8 ff             	cmp    eax,0xffffffff
    663f:	74 12                	je     6653 <rulemgr+0x20e>
    6641:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6645:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6648:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    664c:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    664f:	39 c2                	cmp    edx,eax
    6651:	75 31                	jne    6684 <rulemgr+0x23f>
    6653:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6657:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    665a:	83 f8 ff             	cmp    eax,0xffffffff
    665d:	74 12                	je     6671 <rulemgr+0x22c>
    665f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6663:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6666:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    666a:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    666d:	39 c2                	cmp    edx,eax
    666f:	75 13                	jne    6684 <rulemgr+0x23f>
    6671:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6675:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6679:	48 89 d6             	mov    rsi,rdx
    667c:	48 89 c7             	mov    rdi,rax
    667f:	e8 03 fd ff ff       	call   6387 <rule_app>
    6684:	8b 05 8a b9 00 00    	mov    eax,DWORD PTR [rip+0xb98a]        # 12014 <num_rules>
    668a:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    668d:	0f 8e ce fd ff ff    	jle    6461 <rulemgr+0x1c>
    6693:	90                   	nop
    6694:	90                   	nop
    6695:	c9                   	leave  
    6696:	c3                   	ret    

0000000000006697 <r_engine>:
    6697:	f3 0f 1e fa          	endbr64 
    669b:	55                   	push   rbp
    669c:	48 89 e5             	mov    rbp,rsp
    669f:	48 83 ec 10          	sub    rsp,0x10
    66a3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    66a7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    66ab:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66af:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    66b2:	3d 80 00 00 00       	cmp    eax,0x80
    66b7:	0f 85 d9 00 00 00    	jne    6796 <r_engine+0xff>
    66bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66c1:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    66c8:	84 c0                	test   al,al
    66ca:	74 25                	je     66f1 <r_engine+0x5a>
    66cc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66d0:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    66d4:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    66d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66dc:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    66e3:	38 c2                	cmp    dl,al
    66e5:	74 0a                	je     66f1 <r_engine+0x5a>
    66e7:	b8 00 00 00 00       	mov    eax,0x0
    66ec:	e9 9c 01 00 00       	jmp    688d <r_engine+0x1f6>
    66f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66f5:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    66fc:	84 c0                	test   al,al
    66fe:	74 26                	je     6726 <r_engine+0x8f>
    6700:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6704:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6708:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    670c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6710:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    6717:	66 39 c2             	cmp    dx,ax
    671a:	74 0a                	je     6726 <r_engine+0x8f>
    671c:	b8 00 00 00 00       	mov    eax,0x0
    6721:	e9 67 01 00 00       	jmp    688d <r_engine+0x1f6>
    6726:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    672a:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    6731:	84 c0                	test   al,al
    6733:	74 26                	je     675b <r_engine+0xc4>
    6735:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6739:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    673d:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    6741:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6745:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    674c:	66 39 c2             	cmp    dx,ax
    674f:	74 0a                	je     675b <r_engine+0xc4>
    6751:	b8 00 00 00 00       	mov    eax,0x0
    6756:	e9 32 01 00 00       	jmp    688d <r_engine+0x1f6>
    675b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    675f:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    6766:	84 c0                	test   al,al
    6768:	0f 84 dc 00 00 00    	je     684a <r_engine+0x1b3>
    676e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6772:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6776:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6779:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    677d:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    6784:	38 c2                	cmp    dl,al
    6786:	0f 84 be 00 00 00    	je     684a <r_engine+0x1b3>
    678c:	b8 00 00 00 00       	mov    eax,0x0
    6791:	e9 f7 00 00 00       	jmp    688d <r_engine+0x1f6>
    6796:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    679a:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    679d:	83 f8 7e             	cmp    eax,0x7e
    67a0:	0f 85 a4 00 00 00    	jne    684a <r_engine+0x1b3>
    67a6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67aa:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    67b1:	84 c0                	test   al,al
    67b3:	74 2e                	je     67e3 <r_engine+0x14c>
    67b5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67b9:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    67bd:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    67c0:	89 c7                	mov    edi,eax
    67c2:	e8 d9 bf ff ff       	call   27a0 <ntohl@plt>
    67c7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    67cb:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    67d2:	0f b7 d2             	movzx  edx,dx
    67d5:	39 d0                	cmp    eax,edx
    67d7:	74 0a                	je     67e3 <r_engine+0x14c>
    67d9:	b8 00 00 00 00       	mov    eax,0x0
    67de:	e9 aa 00 00 00       	jmp    688d <r_engine+0x1f6>
    67e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67e7:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    67ee:	84 c0                	test   al,al
    67f0:	74 29                	je     681b <r_engine+0x184>
    67f2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67f6:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    67fd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6801:	48 83 c0 60          	add    rax,0x60
    6805:	48 89 d6             	mov    rsi,rdx
    6808:	48 89 c7             	mov    rdi,rax
    680b:	e8 f0 bf ff ff       	call   2800 <strcmp@plt>
    6810:	85 c0                	test   eax,eax
    6812:	74 07                	je     681b <r_engine+0x184>
    6814:	b8 00 00 00 00       	mov    eax,0x0
    6819:	eb 72                	jmp    688d <r_engine+0x1f6>
    681b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    681f:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    6826:	84 c0                	test   al,al
    6828:	74 20                	je     684a <r_engine+0x1b3>
    682a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    682e:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6832:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    6835:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6839:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    683f:	39 c2                	cmp    edx,eax
    6841:	74 07                	je     684a <r_engine+0x1b3>
    6843:	b8 00 00 00 00       	mov    eax,0x0
    6848:	eb 43                	jmp    688d <r_engine+0x1f6>
    684a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    684e:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    6852:	48 85 c0             	test   rax,rax
    6855:	74 31                	je     6888 <r_engine+0x1f1>
    6857:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    685b:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    6862:	84 c0                	test   al,al
    6864:	74 22                	je     6888 <r_engine+0x1f1>
    6866:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    686a:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    686e:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    6872:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6876:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    687d:	38 c2                	cmp    dl,al
    687f:	74 07                	je     6888 <r_engine+0x1f1>
    6881:	b8 00 00 00 00       	mov    eax,0x0
    6886:	eb 05                	jmp    688d <r_engine+0x1f6>
    6888:	b8 01 00 00 00       	mov    eax,0x1
    688d:	c9                   	leave  
    688e:	c3                   	ret    

000000000000688f <test_tcp_session_status>:
    688f:	f3 0f 1e fa          	endbr64 
    6893:	55                   	push   rbp
    6894:	48 89 e5             	mov    rbp,rsp
    6897:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    689b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    689f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68a3:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    68a9:	83 f8 7e             	cmp    eax,0x7e
    68ac:	75 34                	jne    68e2 <test_tcp_session_status+0x53>
    68ae:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68b2:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    68b5:	83 f8 7e             	cmp    eax,0x7e
    68b8:	75 28                	jne    68e2 <test_tcp_session_status+0x53>
    68ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68be:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    68c4:	83 f8 01             	cmp    eax,0x1
    68c7:	75 12                	jne    68db <test_tcp_session_status+0x4c>
    68c9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68cd:	8b 40 68             	mov    eax,DWORD PTR [rax+0x68]
    68d0:	85 c0                	test   eax,eax
    68d2:	75 07                	jne    68db <test_tcp_session_status+0x4c>
    68d4:	b8 00 00 00 00       	mov    eax,0x0
    68d9:	eb 0c                	jmp    68e7 <test_tcp_session_status+0x58>
    68db:	b8 01 00 00 00       	mov    eax,0x1
    68e0:	eb 05                	jmp    68e7 <test_tcp_session_status+0x58>
    68e2:	b8 01 00 00 00       	mov    eax,0x1
    68e7:	5d                   	pop    rbp
    68e8:	c3                   	ret    

00000000000068e9 <main>:
    68e9:	f3 0f 1e fa          	endbr64 
    68ed:	55                   	push   rbp
    68ee:	48 89 e5             	mov    rbp,rsp
    68f1:	48 81 ec d0 08 00 00 	sub    rsp,0x8d0
    68f8:	89 bd 3c f7 ff ff    	mov    DWORD PTR [rbp-0x8c4],edi
    68fe:	48 89 b5 30 f7 ff ff 	mov    QWORD PTR [rbp-0x8d0],rsi
    6905:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    690c:	00 00 
    690e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6912:	31 c0                	xor    eax,eax
    6914:	b8 00 00 00 00       	mov    eax,0x0
    6919:	e8 89 64 00 00       	call   cda7 <load_fn_mem_map>
    691e:	48 8d 35 02 03 00 00 	lea    rsi,[rip+0x302]        # 6c27 <sigint_processor>
    6925:	bf 02 00 00 00       	mov    edi,0x2
    692a:	e8 11 be ff ff       	call   2740 <signal@plt>
    692f:	48 8d 05 9b 60 00 00 	lea    rax,[rip+0x609b]        # c9d1 <crash_handler>
    6936:	48 89 c6             	mov    rsi,rax
    6939:	bf 0b 00 00 00       	mov    edi,0xb
    693e:	e8 fd bd ff ff       	call   2740 <signal@plt>
    6943:	48 8d 85 60 f7 ff ff 	lea    rax,[rbp-0x8a0]
    694a:	48 89 c6             	mov    rsi,rax
    694d:	bf 00 00 00 00       	mov    edi,0x0
    6952:	e8 d9 bc ff ff       	call   2630 <getrusage@plt>
    6957:	48 8b 85 80 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x880]
    695e:	48 89 c6             	mov    rsi,rax
    6961:	48 8d 3d b8 74 00 00 	lea    rdi,[rip+0x74b8]        # de20 <_IO_stdin_used+0xe20>
    6968:	b8 00 00 00 00       	mov    eax,0x0
    696d:	e8 5e bb ff ff       	call   24d0 <printf@plt>
    6972:	b8 00 00 00 00       	mov    eax,0x0
    6977:	e8 d8 08 00 00       	call   7254 <print_logo>
    697c:	b8 00 00 00 00       	mov    eax,0x0
    6981:	e8 1c 07 00 00       	call   70a2 <print_cpu_info>
    6986:	c7 05 18 b9 00 00 01 	mov    DWORD PTR [rip+0xb918],0x1        # 122a8 <is_running>
    698d:	00 00 00 
    6990:	bf 00 00 00 00       	mov    edi,0x0
    6995:	e8 16 bd ff ff       	call   26b0 <time@plt>
    699a:	48 89 05 0f b9 00 00 	mov    QWORD PTR [rip+0xb90f],rax        # 122b0 <last_clean_time>
    69a1:	83 bd 3c f7 ff ff 01 	cmp    DWORD PTR [rbp-0x8c4],0x1
    69a8:	0f 85 e3 00 00 00    	jne    6a91 <main+0x1a8>
    69ae:	b8 00 00 00 00       	mov    eax,0x0
    69b3:	e8 c0 06 00 00       	call   7078 <print_help_and_exit>
    69b8:	e9 d4 00 00 00       	jmp    6a91 <main+0x1a8>
    69bd:	8b 85 4c f7 ff ff    	mov    eax,DWORD PTR [rbp-0x8b4]
    69c3:	83 e8 64             	sub    eax,0x64
    69c6:	83 f8 10             	cmp    eax,0x10
    69c9:	0f 87 9e 00 00 00    	ja     6a6d <main+0x184>
    69cf:	89 c0                	mov    eax,eax
    69d1:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    69d8:	00 
    69d9:	48 8d 05 24 76 00 00 	lea    rax,[rip+0x7624]        # e004 <_IO_stdin_used+0x1004>
    69e0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    69e3:	48 98                	cdqe   
    69e5:	48 8d 15 18 76 00 00 	lea    rdx,[rip+0x7618]        # e004 <_IO_stdin_used+0x1004>
    69ec:	48 01 d0             	add    rax,rdx
    69ef:	3e ff e0             	notrack jmp rax
    69f2:	c6 05 27 45 10 00 01 	mov    BYTE PTR [rip+0x104527],0x1        # 10af20 <debug_mode>
    69f9:	e9 93 00 00 00       	jmp    6a91 <main+0x1a8>
    69fe:	b8 00 00 00 00       	mov    eax,0x0
    6a03:	e8 70 06 00 00       	call   7078 <print_help_and_exit>
    6a08:	e9 84 00 00 00       	jmp    6a91 <main+0x1a8>
    6a0d:	48 8b 05 4c b6 00 00 	mov    rax,QWORD PTR [rip+0xb64c]        # 12060 <optarg@@GLIBC_2.2.5>
    6a14:	48 89 85 50 f7 ff ff 	mov    QWORD PTR [rbp-0x8b0],rax
    6a1b:	eb 74                	jmp    6a91 <main+0x1a8>
    6a1d:	c6 05 40 45 10 00 01 	mov    BYTE PTR [rip+0x104540],0x1        # 10af64 <packet_print>
    6a24:	eb 6b                	jmp    6a91 <main+0x1a8>
    6a26:	c6 05 38 45 10 00 01 	mov    BYTE PTR [rip+0x104538],0x1        # 10af65 <quiet_exit>
    6a2d:	eb 62                	jmp    6a91 <main+0x1a8>
    6a2f:	48 8d 3d f2 73 00 00 	lea    rdi,[rip+0x73f2]        # de28 <_IO_stdin_used+0xe28>
    6a36:	e8 45 be ff ff       	call   2880 <puts@plt>
    6a3b:	bf 0a 00 00 00       	mov    edi,0xa
    6a40:	e8 1b bc ff ff       	call   2660 <sleep@plt>
    6a45:	c6 05 34 b6 00 00 01 	mov    BYTE PTR [rip+0xb634],0x1        # 12080 <demo_mode>
    6a4c:	eb 43                	jmp    6a91 <main+0x1a8>
    6a4e:	48 8d 3d 13 74 00 00 	lea    rdi,[rip+0x7413]        # de68 <_IO_stdin_used+0xe68>
    6a55:	e8 26 be ff ff       	call   2880 <puts@plt>
    6a5a:	bf 0a 00 00 00       	mov    edi,0xa
    6a5f:	e8 fc bb ff ff       	call   2660 <sleep@plt>
    6a64:	c6 05 71 25 13 00 01 	mov    BYTE PTR [rip+0x132571],0x1        # 138fdc <in_test_mode>
    6a6b:	eb 24                	jmp    6a91 <main+0x1a8>
    6a6d:	8b 85 4c f7 ff ff    	mov    eax,DWORD PTR [rbp-0x8b4]
    6a73:	89 c6                	mov    esi,eax
    6a75:	48 8d 3d 20 74 00 00 	lea    rdi,[rip+0x7420]        # de9c <_IO_stdin_used+0xe9c>
    6a7c:	b8 00 00 00 00       	mov    eax,0x0
    6a81:	e8 4a ba ff ff       	call   24d0 <printf@plt>
    6a86:	b8 00 00 00 00       	mov    eax,0x0
    6a8b:	e8 e8 05 00 00       	call   7078 <print_help_and_exit>
    6a90:	90                   	nop
    6a91:	48 8b 8d 30 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x8d0]
    6a98:	8b 85 3c f7 ff ff    	mov    eax,DWORD PTR [rbp-0x8c4]
    6a9e:	48 8d 15 0d 74 00 00 	lea    rdx,[rip+0x740d]        # deb2 <_IO_stdin_used+0xeb2>
    6aa5:	48 89 ce             	mov    rsi,rcx
    6aa8:	89 c7                	mov    edi,eax
    6aaa:	e8 91 ba ff ff       	call   2540 <getopt@plt>
    6aaf:	89 85 4c f7 ff ff    	mov    DWORD PTR [rbp-0x8b4],eax
    6ab5:	83 bd 4c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x8b4],0xffffffff
    6abc:	0f 85 fb fe ff ff    	jne    69bd <main+0xd4>
    6ac2:	48 8d 3d f2 73 00 00 	lea    rdi,[rip+0x73f2]        # debb <_IO_stdin_used+0xebb>
    6ac9:	e8 f8 f6 ff ff       	call   61c6 <deny_conf_parser>
    6ace:	48 8d 3d fb 73 00 00 	lea    rdi,[rip+0x73fb]        # ded0 <_IO_stdin_used+0xed0>
    6ad5:	e8 a6 bd ff ff       	call   2880 <puts@plt>
    6ada:	b8 00 00 00 00       	mov    eax,0x0
    6adf:	e8 ad 2c 00 00       	call   9791 <load_csv_arp_cache>
    6ae4:	83 f8 ff             	cmp    eax,0xffffffff
    6ae7:	74 0e                	je     6af7 <main+0x20e>
    6ae9:	48 8d 3d 20 74 00 00 	lea    rdi,[rip+0x7420]        # df10 <_IO_stdin_used+0xf10>
    6af0:	e8 8b bd ff ff       	call   2880 <puts@plt>
    6af5:	eb 0c                	jmp    6b03 <main+0x21a>
    6af7:	48 8d 3d 32 74 00 00 	lea    rdi,[rip+0x7432]        # df30 <_IO_stdin_used+0xf30>
    6afe:	e8 7d bd ff ff       	call   2880 <puts@plt>
    6b03:	48 8d 3d 57 74 00 00 	lea    rdi,[rip+0x7457]        # df61 <_IO_stdin_used+0xf61>
    6b0a:	e8 8b ee ff ff       	call   599a <rule_library_parser>
    6b0f:	48 8d 3d 61 74 00 00 	lea    rdi,[rip+0x7461]        # df77 <_IO_stdin_used+0xf77>
    6b16:	e8 65 bd ff ff       	call   2880 <puts@plt>
    6b1b:	b8 00 00 00 00       	mov    eax,0x0
    6b20:	e8 42 54 00 00       	call   bf67 <rule_processor>
    6b25:	48 8b 85 50 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x8b0]
    6b2c:	48 89 c6             	mov    rsi,rax
    6b2f:	48 8d 3d 5a 74 00 00 	lea    rdi,[rip+0x745a]        # df90 <_IO_stdin_used+0xf90>
    6b36:	b8 00 00 00 00       	mov    eax,0x0
    6b3b:	e8 90 b9 ff ff       	call   24d0 <printf@plt>
    6b40:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6b47:	00 00 00 00 
    6b4b:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6b52:	00 00 00 00 
    6b56:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6b5d:	b8 00 00 00 00       	mov    eax,0x0
    6b62:	b9 fd 00 00 00       	mov    ecx,0xfd
    6b67:	48 89 d7             	mov    rdi,rdx
    6b6a:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6b6d:	48 89 fa             	mov    rdx,rdi
    6b70:	89 02                	mov    DWORD PTR [rdx],eax
    6b72:	48 83 c2 04          	add    rdx,0x4
    6b76:	66 89 02             	mov    WORD PTR [rdx],ax
    6b79:	48 83 c2 02          	add    rdx,0x2
    6b7d:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6b84:	48 8b 85 50 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x8b0]
    6b8b:	49 89 d0             	mov    r8,rdx
    6b8e:	b9 64 00 00 00       	mov    ecx,0x64
    6b93:	ba 01 00 00 00       	mov    edx,0x1
    6b98:	be 00 04 00 00       	mov    esi,0x400
    6b9d:	48 89 c7             	mov    rdi,rax
    6ba0:	e8 eb b9 ff ff       	call   2590 <pcap_open_live@plt>
    6ba5:	48 89 85 58 f7 ff ff 	mov    QWORD PTR [rbp-0x8a8],rax
    6bac:	48 83 bd 58 f7 ff ff 	cmp    QWORD PTR [rbp-0x8a8],0x0
    6bb3:	00 
    6bb4:	75 16                	jne    6bcc <main+0x2e3>
    6bb6:	48 8d 3d f4 73 00 00 	lea    rdi,[rip+0x73f4]        # dfb1 <_IO_stdin_used+0xfb1>
    6bbd:	e8 ce ba ff ff       	call   2690 <perror@plt>
    6bc2:	bf 01 00 00 00       	mov    edi,0x1
    6bc7:	e8 94 bb ff ff       	call   2760 <exit@plt>
    6bcc:	b8 00 00 00 00       	mov    eax,0x0
    6bd1:	e8 c5 5b 00 00       	call   c79b <collect_scripts>
    6bd6:	b8 00 00 00 00       	mov    eax,0x0
    6bdb:	e8 8b 06 00 00       	call   726b <start_nsh_server>
    6be0:	48 8d 3d e9 73 00 00 	lea    rdi,[rip+0x73e9]        # dfd0 <_IO_stdin_used+0xfd0>
    6be7:	e8 94 bc ff ff       	call   2880 <puts@plt>
    6bec:	48 8b 85 58 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x8a8]
    6bf3:	b9 00 00 00 00       	mov    ecx,0x0
    6bf8:	48 8d 15 64 be ff ff 	lea    rdx,[rip+0xffffffffffffbe64]        # 2a63 <pktmgr>
    6bff:	be ff ff ff ff       	mov    esi,0xffffffff
    6c04:	48 89 c7             	mov    rdi,rax
    6c07:	e8 b4 b8 ff ff       	call   24c0 <pcap_loop@plt>
    6c0c:	b8 00 00 00 00       	mov    eax,0x0
    6c11:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6c15:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6c1c:	00 00 
    6c1e:	74 05                	je     6c25 <main+0x33c>
    6c20:	e8 cb ba ff ff       	call   26f0 <__stack_chk_fail@plt>
    6c25:	c9                   	leave  
    6c26:	c3                   	ret    

0000000000006c27 <sigint_processor>:
    6c27:	f3 0f 1e fa          	endbr64 
    6c2b:	55                   	push   rbp
    6c2c:	48 89 e5             	mov    rbp,rsp
    6c2f:	41 54                	push   r12
    6c31:	53                   	push   rbx
    6c32:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6c39:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6c3f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6c46:	00 00 
    6c48:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6c4c:	31 c0                	xor    eax,eax
    6c4e:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6c55:	00 00 00 
    6c58:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6c5f:	48 89 c7             	mov    rdi,rax
    6c62:	e8 6c c8 ff ff       	call   34d3 <cb_get_formatted_time>
    6c67:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6c6e:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6c74:	89 c6                	mov    esi,eax
    6c76:	48 8d 3d cb 73 00 00 	lea    rdi,[rip+0x73cb]        # e048 <_IO_stdin_used+0x1048>
    6c7d:	b8 00 00 00 00       	mov    eax,0x0
    6c82:	e8 49 b8 ff ff       	call   24d0 <printf@plt>
    6c87:	48 8d 3d df 73 00 00 	lea    rdi,[rip+0x73df]        # e06d <_IO_stdin_used+0x106d>
    6c8e:	e8 fd b9 ff ff       	call   2690 <perror@plt>
    6c93:	0f b6 05 cb 42 10 00 	movzx  eax,BYTE PTR [rip+0x1042cb]        # 10af65 <quiet_exit>
    6c9a:	83 f0 01             	xor    eax,0x1
    6c9d:	84 c0                	test   al,al
    6c9f:	0f 84 2e 02 00 00    	je     6ed3 <sigint_processor+0x2ac>
    6ca5:	8b 05 f9 b5 00 00    	mov    eax,DWORD PTR [rip+0xb5f9]        # 122a4 <total_pkt_captured>
    6cab:	89 c6                	mov    esi,eax
    6cad:	48 8d 3d ba 73 00 00 	lea    rdi,[rip+0x73ba]        # e06e <_IO_stdin_used+0x106e>
    6cb4:	b8 00 00 00 00       	mov    eax,0x0
    6cb9:	e8 12 b8 ff ff       	call   24d0 <printf@plt>
    6cbe:	48 8d 3d c3 73 00 00 	lea    rdi,[rip+0x73c3]        # e088 <_IO_stdin_used+0x1088>
    6cc5:	e8 b6 bb ff ff       	call   2880 <puts@plt>
    6cca:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6cd1:	00 00 00 
    6cd4:	e9 e8 01 00 00       	jmp    6ec1 <sigint_processor+0x29a>
    6cd9:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cdf:	48 63 d0             	movsxd rdx,eax
    6ce2:	48 89 d0             	mov    rax,rdx
    6ce5:	48 c1 e0 02          	shl    rax,0x2
    6ce9:	48 01 d0             	add    rax,rdx
    6cec:	48 c1 e0 03          	shl    rax,0x3
    6cf0:	48 01 d0             	add    rax,rdx
    6cf3:	48 c1 e0 04          	shl    rax,0x4
    6cf7:	48 89 c2             	mov    rdx,rax
    6cfa:	48 8d 05 8f da 0e 00 	lea    rax,[rip+0xeda8f]        # f4790 <watchlist+0x270>
    6d01:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6d05:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d0b:	48 63 d0             	movsxd rdx,eax
    6d0e:	48 89 d0             	mov    rax,rdx
    6d11:	48 c1 e0 02          	shl    rax,0x2
    6d15:	48 01 d0             	add    rax,rdx
    6d18:	48 c1 e0 03          	shl    rax,0x3
    6d1c:	48 01 d0             	add    rax,rdx
    6d1f:	48 c1 e0 04          	shl    rax,0x4
    6d23:	48 89 c2             	mov    rdx,rax
    6d26:	48 8d 05 57 da 0e 00 	lea    rax,[rip+0xeda57]        # f4784 <watchlist+0x264>
    6d2d:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6d31:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d37:	48 63 d0             	movsxd rdx,eax
    6d3a:	48 89 d0             	mov    rax,rdx
    6d3d:	48 c1 e0 02          	shl    rax,0x2
    6d41:	48 01 d0             	add    rax,rdx
    6d44:	48 c1 e0 03          	shl    rax,0x3
    6d48:	48 01 d0             	add    rax,rdx
    6d4b:	48 c1 e0 04          	shl    rax,0x4
    6d4f:	48 89 c2             	mov    rdx,rax
    6d52:	48 8d 05 33 da 0e 00 	lea    rax,[rip+0xeda33]        # f478c <watchlist+0x26c>
    6d59:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6d5d:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d63:	48 63 d0             	movsxd rdx,eax
    6d66:	48 89 d0             	mov    rax,rdx
    6d69:	48 c1 e0 02          	shl    rax,0x2
    6d6d:	48 01 d0             	add    rax,rdx
    6d70:	48 c1 e0 03          	shl    rax,0x3
    6d74:	48 01 d0             	add    rax,rdx
    6d77:	48 c1 e0 04          	shl    rax,0x4
    6d7b:	48 89 c2             	mov    rdx,rax
    6d7e:	48 8d 05 fb d9 0e 00 	lea    rax,[rip+0xed9fb]        # f4780 <watchlist+0x260>
    6d85:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6d89:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d8f:	48 63 d0             	movsxd rdx,eax
    6d92:	48 89 d0             	mov    rax,rdx
    6d95:	48 c1 e0 02          	shl    rax,0x2
    6d99:	48 01 d0             	add    rax,rdx
    6d9c:	48 c1 e0 03          	shl    rax,0x3
    6da0:	48 01 d0             	add    rax,rdx
    6da3:	48 c1 e0 04          	shl    rax,0x4
    6da7:	48 89 c2             	mov    rdx,rax
    6daa:	48 8d 05 d7 d9 0e 00 	lea    rax,[rip+0xed9d7]        # f4788 <watchlist+0x268>
    6db1:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6db4:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dba:	48 63 d0             	movsxd rdx,eax
    6dbd:	48 89 d0             	mov    rax,rdx
    6dc0:	48 c1 e0 02          	shl    rax,0x2
    6dc4:	48 01 d0             	add    rax,rdx
    6dc7:	48 c1 e0 03          	shl    rax,0x3
    6dcb:	48 01 d0             	add    rax,rdx
    6dce:	48 c1 e0 04          	shl    rax,0x4
    6dd2:	48 89 c2             	mov    rdx,rax
    6dd5:	48 8d 05 a0 d9 0e 00 	lea    rax,[rip+0xed9a0]        # f477c <watchlist+0x25c>
    6ddc:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6de0:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6de6:	48 63 d0             	movsxd rdx,eax
    6de9:	48 89 d0             	mov    rax,rdx
    6dec:	48 c1 e0 02          	shl    rax,0x2
    6df0:	48 01 d0             	add    rax,rdx
    6df3:	48 c1 e0 03          	shl    rax,0x3
    6df7:	48 01 d0             	add    rax,rdx
    6dfa:	48 c1 e0 04          	shl    rax,0x4
    6dfe:	48 89 c2             	mov    rdx,rax
    6e01:	48 8d 05 94 d9 0e 00 	lea    rax,[rip+0xed994]        # f479c <watchlist+0x27c>
    6e08:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6e0b:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e11:	48 63 d0             	movsxd rdx,eax
    6e14:	48 89 d0             	mov    rax,rdx
    6e17:	48 c1 e0 02          	shl    rax,0x2
    6e1b:	48 01 d0             	add    rax,rdx
    6e1e:	48 c1 e0 03          	shl    rax,0x3
    6e22:	48 01 d0             	add    rax,rdx
    6e25:	48 c1 e0 04          	shl    rax,0x4
    6e29:	48 89 c2             	mov    rdx,rax
    6e2c:	48 8d 05 6d d9 0e 00 	lea    rax,[rip+0xed96d]        # f47a0 <watchlist+0x280>
    6e33:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6e36:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e3c:	48 63 d0             	movsxd rdx,eax
    6e3f:	48 89 d0             	mov    rax,rdx
    6e42:	48 c1 e0 02          	shl    rax,0x2
    6e46:	48 01 d0             	add    rax,rdx
    6e49:	48 c1 e0 03          	shl    rax,0x3
    6e4d:	48 01 d0             	add    rax,rdx
    6e50:	48 c1 e0 04          	shl    rax,0x4
    6e54:	48 89 c2             	mov    rdx,rax
    6e57:	48 8d 05 1a d9 0e 00 	lea    rax,[rip+0xed91a]        # f4778 <watchlist+0x258>
    6e5e:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6e61:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e67:	48 63 d0             	movsxd rdx,eax
    6e6a:	48 89 d0             	mov    rax,rdx
    6e6d:	48 c1 e0 02          	shl    rax,0x2
    6e71:	48 01 d0             	add    rax,rdx
    6e74:	48 c1 e0 03          	shl    rax,0x3
    6e78:	48 01 d0             	add    rax,rdx
    6e7b:	48 c1 e0 04          	shl    rax,0x4
    6e7f:	48 8d 15 9a d6 0e 00 	lea    rdx,[rip+0xed69a]        # f4520 <watchlist>
    6e86:	48 01 d0             	add    rax,rdx
    6e89:	48 83 c0 08          	add    rax,0x8
    6e8d:	48 83 ec 08          	sub    rsp,0x8
    6e91:	41 53                	push   r11
    6e93:	41 52                	push   r10
    6e95:	41 51                	push   r9
    6e97:	41 50                	push   r8
    6e99:	57                   	push   rdi
    6e9a:	45 89 e1             	mov    r9d,r12d
    6e9d:	41 89 d8             	mov    r8d,ebx
    6ea0:	89 f2                	mov    edx,esi
    6ea2:	48 89 c6             	mov    rsi,rax
    6ea5:	48 8d 3d 14 72 00 00 	lea    rdi,[rip+0x7214]        # e0c0 <_IO_stdin_used+0x10c0>
    6eac:	b8 00 00 00 00       	mov    eax,0x0
    6eb1:	e8 1a b6 ff ff       	call   24d0 <printf@plt>
    6eb6:	48 83 c4 30          	add    rsp,0x30
    6eba:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6ec1:	8b 05 51 b1 00 00    	mov    eax,DWORD PTR [rip+0xb151]        # 12018 <watchlist_num>
    6ec7:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6ecd:	0f 8e 06 fe ff ff    	jle    6cd9 <sigint_processor+0xb2>
    6ed3:	48 8d 35 86 72 00 00 	lea    rsi,[rip+0x7286]        # e160 <_IO_stdin_used+0x1160>
    6eda:	48 8d 3d 81 72 00 00 	lea    rdi,[rip+0x7281]        # e162 <_IO_stdin_used+0x1162>
    6ee1:	e8 4a b8 ff ff       	call   2730 <fopen@plt>
    6ee6:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6eed:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6ef4:	00 
    6ef5:	0f 85 99 00 00 00    	jne    6f94 <sigint_processor+0x36d>
    6efb:	48 8d 3d 7e 72 00 00 	lea    rdi,[rip+0x727e]        # e180 <_IO_stdin_used+0x1180>
    6f02:	e8 79 b9 ff ff       	call   2880 <puts@plt>
    6f07:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6f0e:	48 89 c7             	mov    rdi,rax
    6f11:	e8 ca b7 ff ff       	call   26e0 <fclose@plt>
    6f16:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6f1d:	00 00 00 
    6f20:	eb 5f                	jmp    6f81 <sigint_processor+0x35a>
    6f22:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6f28:	48 63 d0             	movsxd rdx,eax
    6f2b:	48 89 d0             	mov    rax,rdx
    6f2e:	48 c1 e0 04          	shl    rax,0x4
    6f32:	48 01 d0             	add    rax,rdx
    6f35:	48 01 c0             	add    rax,rax
    6f38:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6f3c:	48 8d 05 dd 1d 10 00 	lea    rax,[rip+0x101ddd]        # 108d20 <arpcache>
    6f43:	48 01 c2             	add    rdx,rax
    6f46:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6f4c:	48 63 c8             	movsxd rcx,eax
    6f4f:	48 89 c8             	mov    rax,rcx
    6f52:	48 c1 e0 04          	shl    rax,0x4
    6f56:	48 01 c8             	add    rax,rcx
    6f59:	48 01 c0             	add    rax,rax
    6f5c:	48 8d 0d bd 1d 10 00 	lea    rcx,[rip+0x101dbd]        # 108d20 <arpcache>
    6f63:	48 01 c8             	add    rax,rcx
    6f66:	48 89 c6             	mov    rsi,rax
    6f69:	48 8d 3d 57 72 00 00 	lea    rdi,[rip+0x7257]        # e1c7 <_IO_stdin_used+0x11c7>
    6f70:	b8 00 00 00 00       	mov    eax,0x0
    6f75:	e8 56 b5 ff ff       	call   24d0 <printf@plt>
    6f7a:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    6f81:	8b 05 95 b0 00 00    	mov    eax,DWORD PTR [rip+0xb095]        # 1201c <arp_entries>
    6f87:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    6f8d:	7e 93                	jle    6f22 <sigint_processor+0x2fb>
    6f8f:	e9 da 00 00 00       	jmp    706e <sigint_processor+0x447>
    6f94:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    6f9b:	00 00 00 
    6f9e:	eb 67                	jmp    7007 <sigint_processor+0x3e0>
    6fa0:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6fa6:	48 63 d0             	movsxd rdx,eax
    6fa9:	48 89 d0             	mov    rax,rdx
    6fac:	48 c1 e0 04          	shl    rax,0x4
    6fb0:	48 01 d0             	add    rax,rdx
    6fb3:	48 01 c0             	add    rax,rax
    6fb6:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6fba:	48 8d 05 5f 1d 10 00 	lea    rax,[rip+0x101d5f]        # 108d20 <arpcache>
    6fc1:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    6fc5:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6fcb:	48 63 d0             	movsxd rdx,eax
    6fce:	48 89 d0             	mov    rax,rdx
    6fd1:	48 c1 e0 04          	shl    rax,0x4
    6fd5:	48 01 d0             	add    rax,rdx
    6fd8:	48 01 c0             	add    rax,rax
    6fdb:	48 8d 15 3e 1d 10 00 	lea    rdx,[rip+0x101d3e]        # 108d20 <arpcache>
    6fe2:	48 01 c2             	add    rdx,rax
    6fe5:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6fec:	48 8d 35 de 71 00 00 	lea    rsi,[rip+0x71de]        # e1d1 <_IO_stdin_used+0x11d1>
    6ff3:	48 89 c7             	mov    rdi,rax
    6ff6:	b8 00 00 00 00       	mov    eax,0x0
    6ffb:	e8 30 b8 ff ff       	call   2830 <fprintf@plt>
    7000:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    7007:	8b 05 0f b0 00 00    	mov    eax,DWORD PTR [rip+0xb00f]        # 1201c <arp_entries>
    700d:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    7013:	7e 8b                	jle    6fa0 <sigint_processor+0x379>
    7015:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    701c:	48 89 c7             	mov    rdi,rax
    701f:	e8 bc b6 ff ff       	call   26e0 <fclose@plt>
    7024:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    702b:	00 00 00 
    702e:	eb 2f                	jmp    705f <sigint_processor+0x438>
    7030:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    7036:	48 98                	cdqe   
    7038:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    703f:	00 
    7040:	48 8d 05 59 b0 00 00 	lea    rax,[rip+0xb059]        # 120a0 <threads>
    7047:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    704b:	be 00 00 00 00       	mov    esi,0x0
    7050:	48 89 c7             	mov    rdi,rax
    7053:	e8 48 b6 ff ff       	call   26a0 <pthread_join@plt>
    7058:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    705f:	8b 05 3b b2 00 00    	mov    eax,DWORD PTR [rip+0xb23b]        # 122a0 <thread_count>
    7065:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    706b:	7c c3                	jl     7030 <sigint_processor+0x409>
    706d:	90                   	nop
    706e:	bf 00 00 00 00       	mov    edi,0x0
    7073:	e8 e8 b6 ff ff       	call   2760 <exit@plt>

0000000000007078 <print_help_and_exit>:
    7078:	f3 0f 1e fa          	endbr64 
    707c:	55                   	push   rbp
    707d:	48 89 e5             	mov    rbp,rsp
    7080:	48 8d 35 51 71 00 00 	lea    rsi,[rip+0x7151]        # e1d8 <_IO_stdin_used+0x11d8>
    7087:	48 8d 3d 52 71 00 00 	lea    rdi,[rip+0x7152]        # e1e0 <_IO_stdin_used+0x11e0>
    708e:	b8 00 00 00 00       	mov    eax,0x0
    7093:	e8 38 b4 ff ff       	call   24d0 <printf@plt>
    7098:	bf 00 00 00 00       	mov    edi,0x0
    709d:	e8 be b6 ff ff       	call   2760 <exit@plt>

00000000000070a2 <print_cpu_info>:
    70a2:	f3 0f 1e fa          	endbr64 
    70a6:	55                   	push   rbp
    70a7:	48 89 e5             	mov    rbp,rsp
    70aa:	53                   	push   rbx
    70ab:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    70b2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    70b9:	00 00 
    70bb:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    70bf:	31 c0                	xor    eax,eax
    70c1:	48 8d 35 9f 71 00 00 	lea    rsi,[rip+0x719f]        # e267 <_IO_stdin_used+0x1267>
    70c8:	48 8d 3d 9b 71 00 00 	lea    rdi,[rip+0x719b]        # e26a <_IO_stdin_used+0x126a>
    70cf:	e8 5c b6 ff ff       	call   2730 <fopen@plt>
    70d4:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    70db:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    70e2:	00 00 00 00 
    70e6:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    70ed:	00 00 00 00 
    70f1:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    70f8:	00 00 00 
    70fb:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7102:	ba 00 02 00 00       	mov    edx,0x200
    7107:	be 00 00 00 00       	mov    esi,0x0
    710c:	48 89 c7             	mov    rdi,rax
    710f:	e8 0c b5 ff ff       	call   2620 <memset@plt>
    7114:	e9 b3 00 00 00       	jmp    71cc <print_cpu_info+0x12a>
    7119:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7120:	ba 0a 00 00 00       	mov    edx,0xa
    7125:	48 89 c6             	mov    rsi,rax
    7128:	48 8d 3d 49 71 00 00 	lea    rdi,[rip+0x7149]        # e278 <_IO_stdin_used+0x1278>
    712f:	e8 9c b4 ff ff       	call   25d0 <strncmp@plt>
    7134:	85 c0                	test   eax,eax
    7136:	0f 85 90 00 00 00    	jne    71cc <print_cpu_info+0x12a>
    713c:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    7143:	00 00 00 
    7146:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    714d:	00 00 00 
    7150:	eb 2e                	jmp    7180 <print_cpu_info+0xde>
    7152:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    7159:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    715f:	48 98                	cdqe   
    7161:	48 01 d0             	add    rax,rdx
    7164:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7167:	3c 3a                	cmp    al,0x3a
    7169:	75 0e                	jne    7179 <print_cpu_info+0xd7>
    716b:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7171:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    7177:	eb 24                	jmp    719d <print_cpu_info+0xfb>
    7179:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    7180:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7186:	48 63 d8             	movsxd rbx,eax
    7189:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7190:	48 89 c7             	mov    rdi,rax
    7193:	e8 18 b4 ff ff       	call   25b0 <strlen@plt>
    7198:	48 39 c3             	cmp    rbx,rax
    719b:	72 b5                	jb     7152 <print_cpu_info+0xb0>
    719d:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    71a4:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    71ab:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    71b1:	48 98                	cdqe   
    71b3:	48 83 c0 02          	add    rax,0x2
    71b7:	48 01 c2             	add    rdx,rax
    71ba:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    71c1:	48 89 d6             	mov    rsi,rdx
    71c4:	48 89 c7             	mov    rdi,rax
    71c7:	e8 24 b7 ff ff       	call   28f0 <strcat@plt>
    71cc:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    71d3:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    71da:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    71e1:	48 89 d1             	mov    rcx,rdx
    71e4:	ba 0a 00 00 00       	mov    edx,0xa
    71e9:	48 89 c7             	mov    rdi,rax
    71ec:	e8 cf b6 ff ff       	call   28c0 <getdelim@plt>
    71f1:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    71f5:	0f 85 1e ff ff ff    	jne    7119 <print_cpu_info+0x77>
    71fb:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    7202:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    7208:	89 c6                	mov    esi,eax
    720a:	48 8d 3d 72 70 00 00 	lea    rdi,[rip+0x7072]        # e283 <_IO_stdin_used+0x1283>
    7211:	b8 00 00 00 00       	mov    eax,0x0
    7216:	e8 b5 b2 ff ff       	call   24d0 <printf@plt>
    721b:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7222:	48 89 c7             	mov    rdi,rax
    7225:	e8 26 b5 ff ff       	call   2750 <free@plt>
    722a:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7231:	48 89 c7             	mov    rdi,rax
    7234:	e8 a7 b4 ff ff       	call   26e0 <fclose@plt>
    7239:	90                   	nop
    723a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    723e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    7245:	00 00 
    7247:	74 05                	je     724e <print_cpu_info+0x1ac>
    7249:	e8 a2 b4 ff ff       	call   26f0 <__stack_chk_fail@plt>
    724e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7252:	c9                   	leave  
    7253:	c3                   	ret    

0000000000007254 <print_logo>:
    7254:	f3 0f 1e fa          	endbr64 
    7258:	55                   	push   rbp
    7259:	48 89 e5             	mov    rbp,rsp
    725c:	48 8d 3d 35 70 00 00 	lea    rdi,[rip+0x7035]        # e298 <_IO_stdin_used+0x1298>
    7263:	e8 18 b6 ff ff       	call   2880 <puts@plt>
    7268:	90                   	nop
    7269:	5d                   	pop    rbp
    726a:	c3                   	ret    

000000000000726b <start_nsh_server>:
    726b:	f3 0f 1e fa          	endbr64 
    726f:	55                   	push   rbp
    7270:	48 89 e5             	mov    rbp,rsp
    7273:	48 83 ec 10          	sub    rsp,0x10
    7277:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    727e:	00 00 
    7280:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7284:	31 c0                	xor    eax,eax
    7286:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    728a:	b9 00 00 00 00       	mov    ecx,0x0
    728f:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 7307 <actually_start_nsh_server>
    7296:	be 00 00 00 00       	mov    esi,0x0
    729b:	48 89 c7             	mov    rdi,rax
    729e:	e8 6d b6 ff ff       	call   2910 <pthread_create@plt>
    72a3:	90                   	nop
    72a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    72a8:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    72af:	00 00 
    72b1:	74 05                	je     72b8 <start_nsh_server+0x4d>
    72b3:	e8 38 b4 ff ff       	call   26f0 <__stack_chk_fail@plt>
    72b8:	c9                   	leave  
    72b9:	c3                   	ret    

00000000000072ba <rnstrip>:
    72ba:	f3 0f 1e fa          	endbr64 
    72be:	55                   	push   rbp
    72bf:	48 89 e5             	mov    rbp,rsp
    72c2:	48 83 ec 10          	sub    rsp,0x10
    72c6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    72ca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    72ce:	48 8d 35 3b 71 00 00 	lea    rsi,[rip+0x713b]        # e410 <_IO_stdin_used+0x1410>
    72d5:	48 89 c7             	mov    rdi,rax
    72d8:	e8 13 b2 ff ff       	call   24f0 <strcspn@plt>
    72dd:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    72e1:	48 01 d0             	add    rax,rdx
    72e4:	c6 00 00             	mov    BYTE PTR [rax],0x0
    72e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    72eb:	48 8d 35 20 71 00 00 	lea    rsi,[rip+0x7120]        # e412 <_IO_stdin_used+0x1412>
    72f2:	48 89 c7             	mov    rdi,rax
    72f5:	e8 f6 b1 ff ff       	call   24f0 <strcspn@plt>
    72fa:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    72fe:	48 01 d0             	add    rax,rdx
    7301:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7304:	90                   	nop
    7305:	c9                   	leave  
    7306:	c3                   	ret    

0000000000007307 <actually_start_nsh_server>:
    7307:	f3 0f 1e fa          	endbr64 
    730b:	55                   	push   rbp
    730c:	48 89 e5             	mov    rbp,rsp
    730f:	48 83 ec 50          	sub    rsp,0x50
    7313:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    731a:	00 00 
    731c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7320:	31 c0                	xor    eax,eax
    7322:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    7329:	ba 00 00 00 00       	mov    edx,0x0
    732e:	be 01 00 00 00       	mov    esi,0x1
    7333:	bf 02 00 00 00       	mov    edi,0x2
    7338:	e8 13 b2 ff ff       	call   2550 <socket@plt>
    733d:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    7340:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    7344:	75 16                	jne    735c <actually_start_nsh_server+0x55>
    7346:	48 8d 3d cb 70 00 00 	lea    rdi,[rip+0x70cb]        # e418 <_IO_stdin_used+0x1418>
    734d:	e8 2e b5 ff ff       	call   2880 <puts@plt>
    7352:	bf 01 00 00 00       	mov    edi,0x1
    7357:	e8 04 b4 ff ff       	call   2760 <exit@plt>
    735c:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7360:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7363:	41 b8 04 00 00 00    	mov    r8d,0x4
    7369:	48 89 d1             	mov    rcx,rdx
    736c:	ba 02 00 00 00       	mov    edx,0x2
    7371:	be 01 00 00 00       	mov    esi,0x1
    7376:	89 c7                	mov    edi,eax
    7378:	e8 83 b5 ff ff       	call   2900 <setsockopt@plt>
    737d:	85 c0                	test   eax,eax
    737f:	74 16                	je     7397 <actually_start_nsh_server+0x90>
    7381:	48 8d 3d b8 70 00 00 	lea    rdi,[rip+0x70b8]        # e440 <_IO_stdin_used+0x1440>
    7388:	e8 f3 b4 ff ff       	call   2880 <puts@plt>
    738d:	bf 01 00 00 00       	mov    edi,0x1
    7392:	e8 c9 b3 ff ff       	call   2760 <exit@plt>
    7397:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    739d:	bf 00 00 00 00       	mov    edi,0x0
    73a2:	e8 c9 b2 ff ff       	call   2670 <htonl@plt>
    73a7:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    73aa:	bf 17 00 00 00       	mov    edi,0x17
    73af:	e8 2c b1 ff ff       	call   24e0 <htons@plt>
    73b4:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    73b8:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    73bc:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    73bf:	ba 10 00 00 00       	mov    edx,0x10
    73c4:	48 89 ce             	mov    rsi,rcx
    73c7:	89 c7                	mov    edi,eax
    73c9:	e8 32 b1 ff ff       	call   2500 <bind@plt>
    73ce:	85 c0                	test   eax,eax
    73d0:	79 16                	jns    73e8 <actually_start_nsh_server+0xe1>
    73d2:	48 8d 3d 8f 70 00 00 	lea    rdi,[rip+0x708f]        # e468 <_IO_stdin_used+0x1468>
    73d9:	e8 a2 b4 ff ff       	call   2880 <puts@plt>
    73de:	bf 01 00 00 00       	mov    edi,0x1
    73e3:	e8 78 b3 ff ff       	call   2760 <exit@plt>
    73e8:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    73eb:	be 05 00 00 00       	mov    esi,0x5
    73f0:	89 c7                	mov    edi,eax
    73f2:	e8 19 b3 ff ff       	call   2710 <listen@plt>
    73f7:	85 c0                	test   eax,eax
    73f9:	79 16                	jns    7411 <actually_start_nsh_server+0x10a>
    73fb:	48 8d 3d 9e 70 00 00 	lea    rdi,[rip+0x709e]        # e4a0 <_IO_stdin_used+0x14a0>
    7402:	e8 79 b4 ff ff       	call   2880 <puts@plt>
    7407:	bf 01 00 00 00       	mov    edi,0x1
    740c:	e8 4f b3 ff ff       	call   2760 <exit@plt>
    7411:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7415:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    7419:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    741c:	48 89 ce             	mov    rsi,rcx
    741f:	89 c7                	mov    edi,eax
    7421:	e8 3a b1 ff ff       	call   2560 <accept@plt>
    7426:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    7429:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    742d:	79 20                	jns    744f <actually_start_nsh_server+0x148>
    742f:	b8 00 00 00 00       	mov    eax,0x0
    7434:	e8 c6 bf ff ff       	call   33ff <get_formated_time>
    7439:	48 89 c6             	mov    rsi,rax
    743c:	48 8d 3d 8d 70 00 00 	lea    rdi,[rip+0x708d]        # e4d0 <_IO_stdin_used+0x14d0>
    7443:	b8 00 00 00 00       	mov    eax,0x0
    7448:	e8 83 b0 ff ff       	call   24d0 <printf@plt>
    744d:	eb c2                	jmp    7411 <actually_start_nsh_server+0x10a>
    744f:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    7452:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    7455:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    7459:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    745d:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    7461:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    7465:	48 89 d1             	mov    rcx,rdx
    7468:	48 8d 15 8d 05 00 00 	lea    rdx,[rip+0x58d]        # 79fc <nsh_shell>
    746f:	be 00 00 00 00       	mov    esi,0x0
    7474:	48 89 c7             	mov    rdi,rax
    7477:	e8 94 b4 ff ff       	call   2910 <pthread_create@plt>
    747c:	eb 93                	jmp    7411 <actually_start_nsh_server+0x10a>

000000000000747e <nsh_do_login>:
    747e:	f3 0f 1e fa          	endbr64 
    7482:	55                   	push   rbp
    7483:	48 89 e5             	mov    rbp,rsp
    7486:	53                   	push   rbx
    7487:	48 81 ec c8 03 00 00 	sub    rsp,0x3c8
    748e:	89 bd 3c fc ff ff    	mov    DWORD PTR [rbp-0x3c4],edi
    7494:	48 89 b5 30 fc ff ff 	mov    QWORD PTR [rbp-0x3d0],rsi
    749b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    74a2:	00 00 
    74a4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    74a8:	31 c0                	xor    eax,eax
    74aa:	48 8d 05 41 70 00 00 	lea    rax,[rip+0x7041]        # e4f2 <_IO_stdin_used+0x14f2>
    74b1:	48 89 85 68 fc ff ff 	mov    QWORD PTR [rbp-0x398],rax
    74b8:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    74be:	b9 00 00 00 00       	mov    ecx,0x0
    74c3:	ba 13 00 00 00       	mov    edx,0x13
    74c8:	48 8d 35 25 70 00 00 	lea    rsi,[rip+0x7025]        # e4f4 <_IO_stdin_used+0x14f4>
    74cf:	89 c7                	mov    edi,eax
    74d1:	e8 0a b1 ff ff       	call   25e0 <send@plt>
    74d6:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    74dc:	b9 00 00 00 00       	mov    ecx,0x0
    74e1:	ba 0b 00 00 00       	mov    edx,0xb
    74e6:	48 8d 35 1b 70 00 00 	lea    rsi,[rip+0x701b]        # e508 <_IO_stdin_used+0x1508>
    74ed:	89 c7                	mov    edi,eax
    74ef:	e8 ec b0 ff ff       	call   25e0 <send@plt>
    74f4:	48 8d 8d d0 fd ff ff 	lea    rcx,[rbp-0x230]
    74fb:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    7501:	ba 10 00 00 00       	mov    edx,0x10
    7506:	48 89 ce             	mov    rsi,rcx
    7509:	89 c7                	mov    edi,eax
    750b:	e8 30 b3 ff ff       	call   2840 <read@plt>
    7510:	89 85 4c fc ff ff    	mov    DWORD PTR [rbp-0x3b4],eax
    7516:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    751c:	b9 00 00 00 00       	mov    ecx,0x0
    7521:	ba 0b 00 00 00       	mov    edx,0xb
    7526:	48 8d 35 e6 6f 00 00 	lea    rsi,[rip+0x6fe6]        # e513 <_IO_stdin_used+0x1513>
    752d:	89 c7                	mov    edi,eax
    752f:	e8 ac b0 ff ff       	call   25e0 <send@plt>
    7534:	48 8d 85 d0 fd ff ff 	lea    rax,[rbp-0x230]
    753b:	48 89 c7             	mov    rdi,rax
    753e:	e8 77 fd ff ff       	call   72ba <rnstrip>
    7543:	48 8d 8d f0 fd ff ff 	lea    rcx,[rbp-0x210]
    754a:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    7550:	ba 10 00 00 00       	mov    edx,0x10
    7555:	48 89 ce             	mov    rsi,rcx
    7558:	89 c7                	mov    edi,eax
    755a:	e8 e1 b2 ff ff       	call   2840 <read@plt>
    755f:	89 85 4c fc ff ff    	mov    DWORD PTR [rbp-0x3b4],eax
    7565:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    756c:	48 89 c7             	mov    rdi,rax
    756f:	e8 46 fd ff ff       	call   72ba <rnstrip>
    7574:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    757b:	48 89 85 70 fc ff ff 	mov    QWORD PTR [rbp-0x390],rax
    7582:	48 8d 35 95 6f 00 00 	lea    rsi,[rip+0x6f95]        # e51e <_IO_stdin_used+0x151e>
    7589:	48 8d 3d 90 6f 00 00 	lea    rdi,[rip+0x6f90]        # e520 <_IO_stdin_used+0x1520>
    7590:	e8 9b b1 ff ff       	call   2730 <fopen@plt>
    7595:	48 89 85 78 fc ff ff 	mov    QWORD PTR [rbp-0x388],rax
    759c:	48 83 bd 78 fc ff ff 	cmp    QWORD PTR [rbp-0x388],0x0
    75a3:	00 
    75a4:	75 16                	jne    75bc <nsh_do_login+0x13e>
    75a6:	48 8d 3d 85 6f 00 00 	lea    rdi,[rip+0x6f85]        # e532 <_IO_stdin_used+0x1532>
    75ad:	e8 ce b2 ff ff       	call   2880 <puts@plt>
    75b2:	b8 00 00 00 00       	mov    eax,0x0
    75b7:	e9 26 04 00 00       	jmp    79e2 <nsh_do_login+0x564>
    75bc:	48 c7 85 50 fc ff ff 	mov    QWORD PTR [rbp-0x3b0],0x0
    75c3:	00 00 00 00 
    75c7:	48 c7 85 58 fc ff ff 	mov    QWORD PTR [rbp-0x3a8],0x0
    75ce:	00 00 00 00 
    75d2:	bf 00 00 00 00       	mov    edi,0x0
    75d7:	e8 d4 b0 ff ff       	call   26b0 <time@plt>
    75dc:	48 89 85 60 fc ff ff 	mov    QWORD PTR [rbp-0x3a0],rax
    75e3:	48 8d 85 60 fc ff ff 	lea    rax,[rbp-0x3a0]
    75ea:	48 89 c7             	mov    rdi,rax
    75ed:	e8 5e b0 ff ff       	call   2650 <localtime@plt>
    75f2:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    75f5:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    75f9:	48 89 8d a0 fc ff ff 	mov    QWORD PTR [rbp-0x360],rcx
    7600:	48 89 9d a8 fc ff ff 	mov    QWORD PTR [rbp-0x358],rbx
    7607:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    760b:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    760f:	48 89 8d b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rcx
    7616:	48 89 9d b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rbx
    761d:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    7621:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    7625:	48 89 8d c0 fc ff ff 	mov    QWORD PTR [rbp-0x340],rcx
    762c:	48 89 9d c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rbx
    7633:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    7637:	48 89 85 d0 fc ff ff 	mov    QWORD PTR [rbp-0x330],rax
    763e:	8b bd a0 fc ff ff    	mov    edi,DWORD PTR [rbp-0x360]
    7644:	8b b5 a4 fc ff ff    	mov    esi,DWORD PTR [rbp-0x35c]
    764a:	44 8b 8d a8 fc ff ff 	mov    r9d,DWORD PTR [rbp-0x358]
    7651:	44 8b 85 ac fc ff ff 	mov    r8d,DWORD PTR [rbp-0x354]
    7658:	8b 85 b0 fc ff ff    	mov    eax,DWORD PTR [rbp-0x350]
    765e:	8d 48 01             	lea    ecx,[rax+0x1]
    7661:	8b 85 b4 fc ff ff    	mov    eax,DWORD PTR [rbp-0x34c]
    7667:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    766d:	48 8d 85 10 fe ff ff 	lea    rax,[rbp-0x1f0]
    7674:	57                   	push   rdi
    7675:	56                   	push   rsi
    7676:	48 8d 35 d2 6e 00 00 	lea    rsi,[rip+0x6ed2]        # e54f <_IO_stdin_used+0x154f>
    767d:	48 89 c7             	mov    rdi,rax
    7680:	b8 00 00 00 00       	mov    eax,0x0
    7685:	e8 86 ae ff ff       	call   2510 <sprintf@plt>
    768a:	48 83 c4 10          	add    rsp,0x10
    768e:	e9 76 02 00 00       	jmp    7909 <nsh_do_login+0x48b>
    7693:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    769a:	ba 40 00 00 00       	mov    edx,0x40
    769f:	be 00 00 00 00       	mov    esi,0x0
    76a4:	48 89 c7             	mov    rdi,rax
    76a7:	e8 74 af ff ff       	call   2620 <memset@plt>
    76ac:	48 8d 85 e0 fc ff ff 	lea    rax,[rbp-0x320]
    76b3:	ba d8 00 00 00       	mov    edx,0xd8
    76b8:	be 00 00 00 00       	mov    esi,0x0
    76bd:	48 89 c7             	mov    rdi,rax
    76c0:	e8 5b af ff ff       	call   2620 <memset@plt>
    76c5:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    76cc:	ba 80 00 00 00       	mov    edx,0x80
    76d1:	be 00 00 00 00       	mov    esi,0x0
    76d6:	48 89 c7             	mov    rdi,rax
    76d9:	e8 42 af ff ff       	call   2620 <memset@plt>
    76de:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    76e5:	48 89 c7             	mov    rdi,rax
    76e8:	e8 cd fb ff ff       	call   72ba <rnstrip>
    76ed:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    76f4:	48 8b 95 68 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x398]
    76fb:	48 89 d6             	mov    rsi,rdx
    76fe:	48 89 c7             	mov    rdi,rax
    7701:	e8 9a b1 ff ff       	call   28a0 <strtok@plt>
    7706:	48 89 85 90 fc ff ff 	mov    QWORD PTR [rbp-0x370],rax
    770d:	48 8b 95 90 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x370]
    7714:	48 8d 85 c0 fd ff ff 	lea    rax,[rbp-0x240]
    771b:	48 89 d6             	mov    rsi,rdx
    771e:	48 89 c7             	mov    rdi,rax
    7721:	e8 9a af ff ff       	call   26c0 <strcpy@plt>
    7726:	48 8d 95 c0 fd ff ff 	lea    rdx,[rbp-0x240]
    772d:	48 8d 85 d0 fd ff ff 	lea    rax,[rbp-0x230]
    7734:	48 89 d6             	mov    rsi,rdx
    7737:	48 89 c7             	mov    rdi,rax
    773a:	e8 c1 b0 ff ff       	call   2800 <strcmp@plt>
    773f:	85 c0                	test   eax,eax
    7741:	74 05                	je     7748 <nsh_do_login+0x2ca>
    7743:	e9 c1 01 00 00       	jmp    7909 <nsh_do_login+0x48b>
    7748:	48 8b 85 68 fc ff ff 	mov    rax,QWORD PTR [rbp-0x398]
    774f:	48 89 c6             	mov    rsi,rax
    7752:	bf 00 00 00 00       	mov    edi,0x0
    7757:	e8 44 b1 ff ff       	call   28a0 <strtok@plt>
    775c:	48 89 85 90 fc ff ff 	mov    QWORD PTR [rbp-0x370],rax
    7763:	48 8b 95 90 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x370]
    776a:	48 8d 85 90 fe ff ff 	lea    rax,[rbp-0x170]
    7771:	48 89 d6             	mov    rsi,rdx
    7774:	48 89 c7             	mov    rdi,rax
    7777:	e8 44 af ff ff       	call   26c0 <strcpy@plt>
    777c:	48 8d 85 90 fe ff ff 	lea    rax,[rbp-0x170]
    7783:	48 89 c7             	mov    rdi,rax
    7786:	e8 f5 b0 ff ff       	call   2880 <puts@plt>
    778b:	48 8d 85 e0 fc ff ff 	lea    rax,[rbp-0x320]
    7792:	48 89 c7             	mov    rdi,rax
    7795:	e8 d6 b0 ff ff       	call   2870 <SHA512_Init@plt>
    779a:	48 8b 8d 70 fc ff ff 	mov    rcx,QWORD PTR [rbp-0x390]
    77a1:	48 8d 85 e0 fc ff ff 	lea    rax,[rbp-0x320]
    77a8:	ba 08 00 00 00       	mov    edx,0x8
    77ad:	48 89 ce             	mov    rsi,rcx
    77b0:	48 89 c7             	mov    rdi,rax
    77b3:	e8 78 ad ff ff       	call   2530 <SHA512_Update@plt>
    77b8:	48 8d 95 e0 fc ff ff 	lea    rdx,[rbp-0x320]
    77bf:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    77c6:	48 89 d6             	mov    rsi,rdx
    77c9:	48 89 c7             	mov    rdi,rax
    77cc:	e8 cf ad ff ff       	call   25a0 <SHA512_Final@plt>
    77d1:	c7 85 48 fc ff ff 00 	mov    DWORD PTR [rbp-0x3b8],0x0
    77d8:	00 00 00 
    77db:	eb 45                	jmp    7822 <nsh_do_login+0x3a4>
    77dd:	8b 85 48 fc ff ff    	mov    eax,DWORD PTR [rbp-0x3b8]
    77e3:	48 98                	cdqe   
    77e5:	0f b6 84 05 50 fe ff 	movzx  eax,BYTE PTR [rbp+rax*1-0x1b0]
    77ec:	ff 
    77ed:	0f b6 c0             	movzx  eax,al
    77f0:	8b 95 48 fc ff ff    	mov    edx,DWORD PTR [rbp-0x3b8]
    77f6:	01 d2                	add    edx,edx
    77f8:	48 63 d2             	movsxd rdx,edx
    77fb:	48 8d 8d e0 fe ff ff 	lea    rcx,[rbp-0x120]
    7802:	48 01 d1             	add    rcx,rdx
    7805:	89 c2                	mov    edx,eax
    7807:	48 8d 35 5d 6d 00 00 	lea    rsi,[rip+0x6d5d]        # e56b <_IO_stdin_used+0x156b>
    780e:	48 89 cf             	mov    rdi,rcx
    7811:	b8 00 00 00 00       	mov    eax,0x0
    7816:	e8 f5 ac ff ff       	call   2510 <sprintf@plt>
    781b:	83 85 48 fc ff ff 01 	add    DWORD PTR [rbp-0x3b8],0x1
    7822:	83 bd 48 fc ff ff 7f 	cmp    DWORD PTR [rbp-0x3b8],0x7f
    7829:	7e b2                	jle    77dd <nsh_do_login+0x35f>
    782b:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    7832:	48 89 c7             	mov    rdi,rax
    7835:	e8 46 b0 ff ff       	call   2880 <puts@plt>
    783a:	48 8d 8d 90 fe ff ff 	lea    rcx,[rbp-0x170]
    7841:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    7848:	ba 40 00 00 00       	mov    edx,0x40
    784d:	48 89 ce             	mov    rsi,rcx
    7850:	48 89 c7             	mov    rdi,rax
    7853:	e8 78 ad ff ff       	call   25d0 <strncmp@plt>
    7858:	85 c0                	test   eax,eax
    785a:	0f 85 a9 00 00 00    	jne    7909 <nsh_do_login+0x48b>
    7860:	48 8d 35 09 6d 00 00 	lea    rsi,[rip+0x6d09]        # e570 <_IO_stdin_used+0x1570>
    7867:	48 8d 3d 04 6d 00 00 	lea    rdi,[rip+0x6d04]        # e572 <_IO_stdin_used+0x1572>
    786e:	e8 bd ae ff ff       	call   2730 <fopen@plt>
    7873:	48 89 85 98 fc ff ff 	mov    QWORD PTR [rbp-0x368],rax
    787a:	48 8b b5 30 fc ff ff 	mov    rsi,QWORD PTR [rbp-0x3d0]
    7881:	48 8d 8d 10 fe ff ff 	lea    rcx,[rbp-0x1f0]
    7888:	48 8d 95 d0 fd ff ff 	lea    rdx,[rbp-0x230]
    788f:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
    7896:	49 89 f0             	mov    r8,rsi
    7899:	48 8d 35 f0 6c 00 00 	lea    rsi,[rip+0x6cf0]        # e590 <_IO_stdin_used+0x1590>
    78a0:	48 89 c7             	mov    rdi,rax
    78a3:	b8 00 00 00 00       	mov    eax,0x0
    78a8:	e8 63 ac ff ff       	call   2510 <sprintf@plt>
    78ad:	48 8b 95 98 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x368]
    78b4:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
    78bb:	48 89 d6             	mov    rsi,rdx
    78be:	48 89 c7             	mov    rdi,rax
    78c1:	e8 3a ae ff ff       	call   2700 <fputs@plt>
    78c6:	48 8b 85 98 fc ff ff 	mov    rax,QWORD PTR [rbp-0x368]
    78cd:	48 89 c7             	mov    rdi,rax
    78d0:	e8 0b ae ff ff       	call   26e0 <fclose@plt>
    78d5:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    78dc:	48 85 c0             	test   rax,rax
    78df:	74 0f                	je     78f0 <nsh_do_login+0x472>
    78e1:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    78e8:	48 89 c7             	mov    rdi,rax
    78eb:	e8 60 ae ff ff       	call   2750 <free@plt>
    78f0:	48 8b 85 78 fc ff ff 	mov    rax,QWORD PTR [rbp-0x388]
    78f7:	48 89 c7             	mov    rdi,rax
    78fa:	e8 e1 ad ff ff       	call   26e0 <fclose@plt>
    78ff:	b8 01 00 00 00       	mov    eax,0x1
    7904:	e9 d9 00 00 00       	jmp    79e2 <nsh_do_login+0x564>
    7909:	48 8b 95 78 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x388]
    7910:	48 8d 8d 58 fc ff ff 	lea    rcx,[rbp-0x3a8]
    7917:	48 8d 85 50 fc ff ff 	lea    rax,[rbp-0x3b0]
    791e:	48 89 ce             	mov    rsi,rcx
    7921:	48 89 c7             	mov    rdi,rax
    7924:	e8 67 ae ff ff       	call   2790 <getline@plt>
    7929:	48 89 85 80 fc ff ff 	mov    QWORD PTR [rbp-0x380],rax
    7930:	48 83 bd 80 fc ff ff 	cmp    QWORD PTR [rbp-0x380],0xffffffffffffffff
    7937:	ff 
    7938:	0f 85 55 fd ff ff    	jne    7693 <nsh_do_login+0x215>
    793e:	48 8d 35 2b 6c 00 00 	lea    rsi,[rip+0x6c2b]        # e570 <_IO_stdin_used+0x1570>
    7945:	48 8d 3d 26 6c 00 00 	lea    rdi,[rip+0x6c26]        # e572 <_IO_stdin_used+0x1572>
    794c:	e8 df ad ff ff       	call   2730 <fopen@plt>
    7951:	48 89 85 88 fc ff ff 	mov    QWORD PTR [rbp-0x378],rax
    7958:	48 8b b5 30 fc ff ff 	mov    rsi,QWORD PTR [rbp-0x3d0]
    795f:	48 8d 8d 10 fe ff ff 	lea    rcx,[rbp-0x1f0]
    7966:	48 8d 95 d0 fd ff ff 	lea    rdx,[rbp-0x230]
    796d:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
    7974:	49 89 f0             	mov    r8,rsi
    7977:	48 8d 35 3a 6c 00 00 	lea    rsi,[rip+0x6c3a]        # e5b8 <_IO_stdin_used+0x15b8>
    797e:	48 89 c7             	mov    rdi,rax
    7981:	b8 00 00 00 00       	mov    eax,0x0
    7986:	e8 85 ab ff ff       	call   2510 <sprintf@plt>
    798b:	48 8b 95 88 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x378]
    7992:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
    7999:	48 89 d6             	mov    rsi,rdx
    799c:	48 89 c7             	mov    rdi,rax
    799f:	e8 5c ad ff ff       	call   2700 <fputs@plt>
    79a4:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    79ab:	48 85 c0             	test   rax,rax
    79ae:	74 0f                	je     79bf <nsh_do_login+0x541>
    79b0:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    79b7:	48 89 c7             	mov    rdi,rax
    79ba:	e8 91 ad ff ff       	call   2750 <free@plt>
    79bf:	48 8b 85 78 fc ff ff 	mov    rax,QWORD PTR [rbp-0x388]
    79c6:	48 89 c7             	mov    rdi,rax
    79c9:	e8 12 ad ff ff       	call   26e0 <fclose@plt>
    79ce:	48 8b 85 88 fc ff ff 	mov    rax,QWORD PTR [rbp-0x378]
    79d5:	48 89 c7             	mov    rdi,rax
    79d8:	e8 03 ad ff ff       	call   26e0 <fclose@plt>
    79dd:	b8 00 00 00 00       	mov    eax,0x0
    79e2:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    79e6:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    79ed:	00 00 
    79ef:	74 05                	je     79f6 <nsh_do_login+0x578>
    79f1:	e8 fa ac ff ff       	call   26f0 <__stack_chk_fail@plt>
    79f6:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    79fa:	c9                   	leave  
    79fb:	c3                   	ret    

00000000000079fc <nsh_shell>:
    79fc:	f3 0f 1e fa          	endbr64 
    7a00:	55                   	push   rbp
    7a01:	48 89 e5             	mov    rbp,rsp
    7a04:	53                   	push   rbx
    7a05:	48 83 ec 38          	sub    rsp,0x38
    7a09:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    7a0d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    7a11:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    7a15:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a19:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    7a1d:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    7a21:	0f b7 c0             	movzx  eax,ax
    7a24:	89 c7                	mov    edi,eax
    7a26:	e8 b5 aa ff ff       	call   24e0 <htons@plt>
    7a2b:	0f b7 d8             	movzx  ebx,ax
    7a2e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a32:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    7a36:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    7a39:	89 c7                	mov    edi,eax
    7a3b:	e8 80 ab ff ff       	call   25c0 <inet_ntoa@plt>
    7a40:	89 da                	mov    edx,ebx
    7a42:	48 89 c6             	mov    rsi,rax
    7a45:	48 8d 3d 8f 6b 00 00 	lea    rdi,[rip+0x6b8f]        # e5db <_IO_stdin_used+0x15db>
    7a4c:	b8 00 00 00 00       	mov    eax,0x0
    7a51:	e8 7a aa ff ff       	call   24d0 <printf@plt>
    7a56:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a5a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    7a5e:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    7a61:	89 c7                	mov    edi,eax
    7a63:	e8 58 ab ff ff       	call   25c0 <inet_ntoa@plt>
    7a68:	48 89 c2             	mov    rdx,rax
    7a6b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a6f:	8b 00                	mov    eax,DWORD PTR [rax]
    7a71:	48 89 d6             	mov    rsi,rdx
    7a74:	89 c7                	mov    edi,eax
    7a76:	e8 03 fa ff ff       	call   747e <nsh_do_login>
    7a7b:	83 f0 01             	xor    eax,0x1
    7a7e:	84 c0                	test   al,al
    7a80:	74 30                	je     7ab2 <nsh_shell+0xb6>
    7a82:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a86:	8b 00                	mov    eax,DWORD PTR [rax]
    7a88:	b9 00 00 00 00       	mov    ecx,0x0
    7a8d:	ba 10 00 00 00       	mov    edx,0x10
    7a92:	48 8d 35 5b 6b 00 00 	lea    rsi,[rip+0x6b5b]        # e5f4 <_IO_stdin_used+0x15f4>
    7a99:	89 c7                	mov    edi,eax
    7a9b:	e8 40 ab ff ff       	call   25e0 <send@plt>
    7aa0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7aa4:	8b 00                	mov    eax,DWORD PTR [rax]
    7aa6:	89 c7                	mov    edi,eax
    7aa8:	e8 83 ae ff ff       	call   2930 <close@plt>
    7aad:	e9 ed 00 00 00       	jmp    7b9f <nsh_shell+0x1a3>
    7ab2:	48 8d 05 4b 6b 00 00 	lea    rax,[rip+0x6b4b]        # e604 <_IO_stdin_used+0x1604>
    7ab9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7abd:	e9 a5 00 00 00       	jmp    7b67 <nsh_shell+0x16b>
    7ac2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7ac6:	48 89 c7             	mov    rdi,rax
    7ac9:	e8 e2 aa ff ff       	call   25b0 <strlen@plt>
    7ace:	48 89 c2             	mov    rdx,rax
    7ad1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7ad5:	8b 00                	mov    eax,DWORD PTR [rax]
    7ad7:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    7adb:	b9 00 00 00 00       	mov    ecx,0x0
    7ae0:	89 c7                	mov    edi,eax
    7ae2:	e8 f9 aa ff ff       	call   25e0 <send@plt>
    7ae7:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7aee:	00 00 
    7af0:	48 05 00 6c fe ff    	add    rax,0xfffffffffffe6c00
    7af6:	ba 00 04 00 00       	mov    edx,0x400
    7afb:	be 00 00 00 00       	mov    esi,0x0
    7b00:	48 89 c7             	mov    rdi,rax
    7b03:	e8 18 ab ff ff       	call   2620 <memset@plt>
    7b08:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7b0c:	8b 00                	mov    eax,DWORD PTR [rax]
    7b0e:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    7b15:	00 00 
    7b17:	48 8d 8a 00 6c fe ff 	lea    rcx,[rdx-0x19400]
    7b1e:	ba 00 04 00 00       	mov    edx,0x400
    7b23:	48 89 ce             	mov    rsi,rcx
    7b26:	89 c7                	mov    edi,eax
    7b28:	e8 13 ad ff ff       	call   2840 <read@plt>
    7b2d:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
    7b30:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7b37:	00 00 
    7b39:	48 05 00 6c fe ff    	add    rax,0xfffffffffffe6c00
    7b3f:	48 89 c7             	mov    rdi,rax
    7b42:	e8 73 f7 ff ff       	call   72ba <rnstrip>
    7b47:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7b4b:	8b 00                	mov    eax,DWORD PTR [rax]
    7b4d:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    7b54:	00 00 
    7b56:	48 81 c2 00 6c fe ff 	add    rdx,0xfffffffffffe6c00
    7b5d:	89 c6                	mov    esi,eax
    7b5f:	48 89 d7             	mov    rdi,rdx
    7b62:	e8 8a 00 00 00       	call   7bf1 <nsh_cmd_interpret>
    7b67:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7b6e:	00 00 
    7b70:	48 05 00 6c fe ff    	add    rax,0xfffffffffffe6c00
    7b76:	ba 04 00 00 00       	mov    edx,0x4
    7b7b:	48 8d 35 88 6a 00 00 	lea    rsi,[rip+0x6a88]        # e60a <_IO_stdin_used+0x160a>
    7b82:	48 89 c7             	mov    rdi,rax
    7b85:	e8 46 aa ff ff       	call   25d0 <strncmp@plt>
    7b8a:	85 c0                	test   eax,eax
    7b8c:	0f 85 30 ff ff ff    	jne    7ac2 <nsh_shell+0xc6>
    7b92:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7b96:	8b 00                	mov    eax,DWORD PTR [rax]
    7b98:	89 c7                	mov    edi,eax
    7b9a:	e8 91 ad ff ff       	call   2930 <close@plt>
    7b9f:	b8 01 00 00 00       	mov    eax,0x1
    7ba4:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7ba8:	c9                   	leave  
    7ba9:	c3                   	ret    

0000000000007baa <vsh_set_int>:
    7baa:	f3 0f 1e fa          	endbr64 
    7bae:	55                   	push   rbp
    7baf:	48 89 e5             	mov    rbp,rsp
    7bb2:	48 83 ec 10          	sub    rsp,0x10
    7bb6:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    7bb9:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7bbd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7bc1:	ba 06 00 00 00       	mov    edx,0x6
    7bc6:	48 8d 35 6f 6b 00 00 	lea    rsi,[rip+0x6b6f]        # e73c <_IO_stdin_used+0x173c>
    7bcd:	48 89 c7             	mov    rdi,rax
    7bd0:	e8 fb a9 ff ff       	call   25d0 <strncmp@plt>
    7bd5:	85 c0                	test   eax,eax
    7bd7:	75 15                	jne    7bee <vsh_set_int+0x44>
    7bd9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7bdd:	48 8d 50 06          	lea    rdx,[rax+0x6]
    7be1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7be4:	48 89 d6             	mov    rsi,rdx
    7be7:	89 c7                	mov    edi,eax
    7be9:	e8 f9 10 00 00       	call   8ce7 <set_spi_max>
    7bee:	90                   	nop
    7bef:	c9                   	leave  
    7bf0:	c3                   	ret    

0000000000007bf1 <nsh_cmd_interpret>:
    7bf1:	f3 0f 1e fa          	endbr64 
    7bf5:	55                   	push   rbp
    7bf6:	48 89 e5             	mov    rbp,rsp
    7bf9:	41 57                	push   r15
    7bfb:	41 56                	push   r14
    7bfd:	41 55                	push   r13
    7bff:	41 54                	push   r12
    7c01:	53                   	push   rbx
    7c02:	48 83 ec 68          	sub    rsp,0x68
    7c06:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    7c0d:	89 b5 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],esi
    7c13:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7c1a:	00 00 
    7c1c:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    7c20:	31 c0                	xor    eax,eax
    7c22:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7c29:	48 8d 35 13 6b 00 00 	lea    rsi,[rip+0x6b13]        # e743 <_IO_stdin_used+0x1743>
    7c30:	48 89 c7             	mov    rdi,rax
    7c33:	e8 c8 ab ff ff       	call   2800 <strcmp@plt>
    7c38:	85 c0                	test   eax,eax
    7c3a:	75 23                	jne    7c5f <nsh_cmd_interpret+0x6e>
    7c3c:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7c42:	b9 00 00 00 00       	mov    ecx,0x0
    7c47:	ba 07 00 00 00       	mov    edx,0x7
    7c4c:	48 8d 35 fa 6a 00 00 	lea    rsi,[rip+0x6afa]        # e74d <_IO_stdin_used+0x174d>
    7c53:	89 c7                	mov    edi,eax
    7c55:	e8 86 a9 ff ff       	call   25e0 <send@plt>
    7c5a:	e9 85 04 00 00       	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    7c5f:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7c66:	ba 08 00 00 00       	mov    edx,0x8
    7c6b:	48 8d 35 e3 6a 00 00 	lea    rsi,[rip+0x6ae3]        # e755 <_IO_stdin_used+0x1755>
    7c72:	48 89 c7             	mov    rdi,rax
    7c75:	e8 56 a9 ff ff       	call   25d0 <strncmp@plt>
    7c7a:	85 c0                	test   eax,eax
    7c7c:	75 0a                	jne    7c88 <nsh_cmd_interpret+0x97>
    7c7e:	bf 01 00 00 00       	mov    edi,0x1
    7c83:	e8 d8 aa ff ff       	call   2760 <exit@plt>
    7c88:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7c8f:	ba 04 00 00 00       	mov    edx,0x4
    7c94:	48 8d 35 c3 6a 00 00 	lea    rsi,[rip+0x6ac3]        # e75e <_IO_stdin_used+0x175e>
    7c9b:	48 89 c7             	mov    rdi,rax
    7c9e:	e8 2d a9 ff ff       	call   25d0 <strncmp@plt>
    7ca3:	85 c0                	test   eax,eax
    7ca5:	0f 84 38 04 00 00    	je     80e3 <nsh_cmd_interpret+0x4f2>
    7cab:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7cb2:	ba 03 00 00 00       	mov    edx,0x3
    7cb7:	48 8d 35 a5 6a 00 00 	lea    rsi,[rip+0x6aa5]        # e763 <_IO_stdin_used+0x1763>
    7cbe:	48 89 c7             	mov    rdi,rax
    7cc1:	e8 0a a9 ff ff       	call   25d0 <strncmp@plt>
    7cc6:	85 c0                	test   eax,eax
    7cc8:	0f 85 e1 01 00 00    	jne    7eaf <nsh_cmd_interpret+0x2be>
    7cce:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7cd5:	48 89 c7             	mov    rdi,rax
    7cd8:	e8 d3 a8 ff ff       	call   25b0 <strlen@plt>
    7cdd:	48 83 f8 02          	cmp    rax,0x2
    7ce1:	77 30                	ja     7d13 <nsh_cmd_interpret+0x122>
    7ce3:	48 8b 05 5e a3 00 00 	mov    rax,QWORD PTR [rip+0xa35e]        # 12048 <get_cmd_help>
    7cea:	48 89 c7             	mov    rdi,rax
    7ced:	e8 be a8 ff ff       	call   25b0 <strlen@plt>
    7cf2:	48 89 c2             	mov    rdx,rax
    7cf5:	48 8b 35 4c a3 00 00 	mov    rsi,QWORD PTR [rip+0xa34c]        # 12048 <get_cmd_help>
    7cfc:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7d02:	b9 00 00 00 00       	mov    ecx,0x0
    7d07:	89 c7                	mov    edi,eax
    7d09:	e8 d2 a8 ff ff       	call   25e0 <send@plt>
    7d0e:	e9 d1 03 00 00       	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    7d13:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7d1a:	48 83 c0 04          	add    rax,0x4
    7d1e:	ba 09 00 00 00       	mov    edx,0x9
    7d23:	48 8d 35 3d 6a 00 00 	lea    rsi,[rip+0x6a3d]        # e767 <_IO_stdin_used+0x1767>
    7d2a:	48 89 c7             	mov    rdi,rax
    7d2d:	e8 9e a8 ff ff       	call   25d0 <strncmp@plt>
    7d32:	85 c0                	test   eax,eax
    7d34:	75 14                	jne    7d4a <nsh_cmd_interpret+0x159>
    7d36:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7d3d:	48 89 c7             	mov    rdi,rax
    7d40:	e8 c2 03 00 00       	call   8107 <send_blacklist>
    7d45:	e9 9a 03 00 00       	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    7d4a:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7d51:	48 83 c0 04          	add    rax,0x4
    7d55:	48 8d 35 15 6a 00 00 	lea    rsi,[rip+0x6a15]        # e771 <_IO_stdin_used+0x1771>
    7d5c:	48 89 c7             	mov    rdi,rax
    7d5f:	e8 9c aa ff ff       	call   2800 <strcmp@plt>
    7d64:	85 c0                	test   eax,eax
    7d66:	75 14                	jne    7d7c <nsh_cmd_interpret+0x18b>
    7d68:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7d6f:	48 89 c7             	mov    rdi,rax
    7d72:	e8 46 06 00 00       	call   83bd <get_loaded_rules>
    7d77:	e9 68 03 00 00       	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    7d7c:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7d83:	48 83 c0 04          	add    rax,0x4
    7d87:	48 89 c2             	mov    rdx,rax
    7d8a:	48 8d 05 e6 69 00 00 	lea    rax,[rip+0x69e6]        # e777 <_IO_stdin_used+0x1777>
    7d91:	b9 08 00 00 00       	mov    ecx,0x8
    7d96:	48 89 d6             	mov    rsi,rdx
    7d99:	48 89 c7             	mov    rdi,rax
    7d9c:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7d9e:	0f 97 c0             	seta   al
    7da1:	0f 92 c2             	setb   dl
    7da4:	29 d0                	sub    eax,edx
    7da6:	0f be c0             	movsx  eax,al
    7da9:	85 c0                	test   eax,eax
    7dab:	75 22                	jne    7dcf <nsh_cmd_interpret+0x1de>
    7dad:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7db4:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    7db8:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7dbf:	48 89 d6             	mov    rsi,rdx
    7dc2:	48 89 c7             	mov    rdi,rax
    7dc5:	e8 01 0a 00 00       	call   87cb <get_rule_matches>
    7dca:	e9 15 03 00 00       	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    7dcf:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7dd6:	48 83 c0 04          	add    rax,0x4
    7dda:	48 89 c2             	mov    rdx,rax
    7ddd:	48 8d 05 9b 69 00 00 	lea    rax,[rip+0x699b]        # e77f <_IO_stdin_used+0x177f>
    7de4:	b9 08 00 00 00       	mov    ecx,0x8
    7de9:	48 89 d6             	mov    rsi,rdx
    7dec:	48 89 c7             	mov    rdi,rax
    7def:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7df1:	0f 97 c0             	seta   al
    7df4:	0f 92 c2             	setb   dl
    7df7:	29 d0                	sub    eax,edx
    7df9:	0f be c0             	movsx  eax,al
    7dfc:	85 c0                	test   eax,eax
    7dfe:	75 48                	jne    7e48 <nsh_cmd_interpret+0x257>
    7e00:	8b 15 9e a4 00 00    	mov    edx,DWORD PTR [rip+0xa49e]        # 122a4 <total_pkt_captured>
    7e06:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    7e0a:	48 8d 35 76 69 00 00 	lea    rsi,[rip+0x6976]        # e787 <_IO_stdin_used+0x1787>
    7e11:	48 89 c7             	mov    rdi,rax
    7e14:	b8 00 00 00 00       	mov    eax,0x0
    7e19:	e8 f2 a6 ff ff       	call   2510 <sprintf@plt>
    7e1e:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    7e22:	48 89 c7             	mov    rdi,rax
    7e25:	e8 86 a7 ff ff       	call   25b0 <strlen@plt>
    7e2a:	48 89 c2             	mov    rdx,rax
    7e2d:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7e33:	48 8d 75 a0          	lea    rsi,[rbp-0x60]
    7e37:	b9 00 00 00 00       	mov    ecx,0x0
    7e3c:	89 c7                	mov    edi,eax
    7e3e:	e8 9d a7 ff ff       	call   25e0 <send@plt>
    7e43:	e9 9c 02 00 00       	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    7e48:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7e4f:	48 83 c0 04          	add    rax,0x4
    7e53:	ba 03 00 00 00       	mov    edx,0x3
    7e58:	48 8d 35 43 69 00 00 	lea    rsi,[rip+0x6943]        # e7a2 <_IO_stdin_used+0x17a2>
    7e5f:	48 89 c7             	mov    rdi,rax
    7e62:	e8 69 a7 ff ff       	call   25d0 <strncmp@plt>
    7e67:	85 c0                	test   eax,eax
    7e69:	75 14                	jne    7e7f <nsh_cmd_interpret+0x28e>
    7e6b:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7e72:	48 89 c7             	mov    rdi,rax
    7e75:	e8 c2 0c 00 00       	call   8b3c <get_arp_cache>
    7e7a:	e9 65 02 00 00       	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    7e7f:	48 8b 05 c2 a1 00 00 	mov    rax,QWORD PTR [rip+0xa1c2]        # 12048 <get_cmd_help>
    7e86:	48 89 c7             	mov    rdi,rax
    7e89:	e8 22 a7 ff ff       	call   25b0 <strlen@plt>
    7e8e:	48 89 c2             	mov    rdx,rax
    7e91:	48 8b 35 b0 a1 00 00 	mov    rsi,QWORD PTR [rip+0xa1b0]        # 12048 <get_cmd_help>
    7e98:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7e9e:	b9 00 00 00 00       	mov    ecx,0x0
    7ea3:	89 c7                	mov    edi,eax
    7ea5:	e8 36 a7 ff ff       	call   25e0 <send@plt>
    7eaa:	e9 35 02 00 00       	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    7eaf:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7eb6:	ba 03 00 00 00       	mov    edx,0x3
    7ebb:	48 8d 35 e4 68 00 00 	lea    rsi,[rip+0x68e4]        # e7a6 <_IO_stdin_used+0x17a6>
    7ec2:	48 89 c7             	mov    rdi,rax
    7ec5:	e8 06 a7 ff ff       	call   25d0 <strncmp@plt>
    7eca:	85 c0                	test   eax,eax
    7ecc:	0f 85 d3 00 00 00    	jne    7fa5 <nsh_cmd_interpret+0x3b4>
    7ed2:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7ed9:	48 89 c7             	mov    rdi,rax
    7edc:	e8 cf a6 ff ff       	call   25b0 <strlen@plt>
    7ee1:	48 83 f8 03          	cmp    rax,0x3
    7ee5:	77 30                	ja     7f17 <nsh_cmd_interpret+0x326>
    7ee7:	48 8b 05 62 a1 00 00 	mov    rax,QWORD PTR [rip+0xa162]        # 12050 <add_cmd_help>
    7eee:	48 89 c7             	mov    rdi,rax
    7ef1:	e8 ba a6 ff ff       	call   25b0 <strlen@plt>
    7ef6:	48 89 c2             	mov    rdx,rax
    7ef9:	48 8b 35 50 a1 00 00 	mov    rsi,QWORD PTR [rip+0xa150]        # 12050 <add_cmd_help>
    7f00:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7f06:	b9 00 00 00 00       	mov    ecx,0x0
    7f0b:	89 c7                	mov    edi,eax
    7f0d:	e8 ce a6 ff ff       	call   25e0 <send@plt>
    7f12:	e9 cd 01 00 00       	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    7f17:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f1e:	48 83 c0 04          	add    rax,0x4
    7f22:	ba 09 00 00 00       	mov    edx,0x9
    7f27:	48 8d 35 39 68 00 00 	lea    rsi,[rip+0x6839]        # e767 <_IO_stdin_used+0x1767>
    7f2e:	48 89 c7             	mov    rdi,rax
    7f31:	e8 9a a6 ff ff       	call   25d0 <strncmp@plt>
    7f36:	85 c0                	test   eax,eax
    7f38:	75 22                	jne    7f5c <nsh_cmd_interpret+0x36b>
    7f3a:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f41:	48 8d 50 04          	lea    rdx,[rax+0x4]
    7f45:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7f4c:	48 89 d6             	mov    rsi,rdx
    7f4f:	48 89 c7             	mov    rdi,rax
    7f52:	e8 54 03 00 00       	call   82ab <add_to_blacklist>
    7f57:	e9 88 01 00 00       	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    7f5c:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f63:	48 83 c0 04          	add    rax,0x4
    7f67:	ba 04 00 00 00       	mov    edx,0x4
    7f6c:	48 8d 35 37 68 00 00 	lea    rsi,[rip+0x6837]        # e7aa <_IO_stdin_used+0x17aa>
    7f73:	48 89 c7             	mov    rdi,rax
    7f76:	e8 55 a6 ff ff       	call   25d0 <strncmp@plt>
    7f7b:	85 c0                	test   eax,eax
    7f7d:	0f 85 61 01 00 00    	jne    80e4 <nsh_cmd_interpret+0x4f3>
    7f83:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f8a:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7f8e:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7f95:	48 89 d6             	mov    rsi,rdx
    7f98:	48 89 c7             	mov    rdi,rax
    7f9b:	e8 f6 06 00 00       	call   8696 <load_new_rule>
    7fa0:	e9 3f 01 00 00       	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    7fa5:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7fac:	ba 03 00 00 00       	mov    edx,0x3
    7fb1:	48 8d 35 f7 67 00 00 	lea    rsi,[rip+0x67f7]        # e7af <_IO_stdin_used+0x17af>
    7fb8:	48 89 c7             	mov    rdi,rax
    7fbb:	e8 10 a6 ff ff       	call   25d0 <strncmp@plt>
    7fc0:	85 c0                	test   eax,eax
    7fc2:	75 20                	jne    7fe4 <nsh_cmd_interpret+0x3f3>
    7fc4:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7fcb:	48 8d 50 04          	lea    rdx,[rax+0x4]
    7fcf:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7fd5:	48 89 d6             	mov    rsi,rdx
    7fd8:	89 c7                	mov    edi,eax
    7fda:	e8 cb fb ff ff       	call   7baa <vsh_set_int>
    7fdf:	e9 00 01 00 00       	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    7fe4:	48 89 e0             	mov    rax,rsp
    7fe7:	48 89 c3             	mov    rbx,rax
    7fea:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7ff1:	48 89 c7             	mov    rdi,rax
    7ff4:	e8 b7 a5 ff ff       	call   25b0 <strlen@plt>
    7ff9:	83 c0 1c             	add    eax,0x1c
    7ffc:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    7fff:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    8002:	83 c0 02             	add    eax,0x2
    8005:	48 63 d0             	movsxd rdx,eax
    8008:	48 83 ea 01          	sub    rdx,0x1
    800c:	48 89 55 90          	mov    QWORD PTR [rbp-0x70],rdx
    8010:	48 63 d0             	movsxd rdx,eax
    8013:	49 89 d6             	mov    r14,rdx
    8016:	41 bf 00 00 00 00    	mov    r15d,0x0
    801c:	48 63 d0             	movsxd rdx,eax
    801f:	49 89 d4             	mov    r12,rdx
    8022:	41 bd 00 00 00 00    	mov    r13d,0x0
    8028:	48 98                	cdqe   
    802a:	ba 10 00 00 00       	mov    edx,0x10
    802f:	48 83 ea 01          	sub    rdx,0x1
    8033:	48 01 d0             	add    rax,rdx
    8036:	b9 10 00 00 00       	mov    ecx,0x10
    803b:	ba 00 00 00 00       	mov    edx,0x0
    8040:	48 f7 f1             	div    rcx
    8043:	48 6b c0 10          	imul   rax,rax,0x10
    8047:	48 89 c1             	mov    rcx,rax
    804a:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    8051:	48 89 e2             	mov    rdx,rsp
    8054:	48 29 ca             	sub    rdx,rcx
    8057:	48 39 d4             	cmp    rsp,rdx
    805a:	74 12                	je     806e <nsh_cmd_interpret+0x47d>
    805c:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    8063:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    806a:	00 00 
    806c:	eb e9                	jmp    8057 <nsh_cmd_interpret+0x466>
    806e:	48 89 c2             	mov    rdx,rax
    8071:	81 e2 ff 0f 00 00    	and    edx,0xfff
    8077:	48 29 d4             	sub    rsp,rdx
    807a:	48 89 c2             	mov    rdx,rax
    807d:	81 e2 ff 0f 00 00    	and    edx,0xfff
    8083:	48 85 d2             	test   rdx,rdx
    8086:	74 10                	je     8098 <nsh_cmd_interpret+0x4a7>
    8088:	25 ff 0f 00 00       	and    eax,0xfff
    808d:	48 83 e8 08          	sub    rax,0x8
    8091:	48 01 e0             	add    rax,rsp
    8094:	48 83 08 00          	or     QWORD PTR [rax],0x0
    8098:	48 89 e0             	mov    rax,rsp
    809b:	48 83 c0 00          	add    rax,0x0
    809f:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    80a3:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
    80aa:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    80ae:	48 8d 35 03 67 00 00 	lea    rsi,[rip+0x6703]        # e7b8 <_IO_stdin_used+0x17b8>
    80b5:	48 89 c7             	mov    rdi,rax
    80b8:	b8 00 00 00 00       	mov    eax,0x0
    80bd:	e8 4e a4 ff ff       	call   2510 <sprintf@plt>
    80c2:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    80c5:	48 63 d0             	movsxd rdx,eax
    80c8:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    80ce:	48 8b 75 98          	mov    rsi,QWORD PTR [rbp-0x68]
    80d2:	b9 00 00 00 00       	mov    ecx,0x0
    80d7:	89 c7                	mov    edi,eax
    80d9:	e8 02 a5 ff ff       	call   25e0 <send@plt>
    80de:	48 89 dc             	mov    rsp,rbx
    80e1:	eb 01                	jmp    80e4 <nsh_cmd_interpret+0x4f3>
    80e3:	90                   	nop
    80e4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    80e8:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    80ef:	00 00 
    80f1:	74 05                	je     80f8 <nsh_cmd_interpret+0x507>
    80f3:	e8 f8 a5 ff ff       	call   26f0 <__stack_chk_fail@plt>
    80f8:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    80fc:	5b                   	pop    rbx
    80fd:	41 5c                	pop    r12
    80ff:	41 5d                	pop    r13
    8101:	41 5e                	pop    r14
    8103:	41 5f                	pop    r15
    8105:	5d                   	pop    rbp
    8106:	c3                   	ret    

0000000000008107 <send_blacklist>:
    8107:	f3 0f 1e fa          	endbr64 
    810b:	55                   	push   rbp
    810c:	48 89 e5             	mov    rbp,rsp
    810f:	48 83 ec 20          	sub    rsp,0x20
    8113:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8117:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    811e:	00 00 
    8120:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8126:	ba 00 90 01 00       	mov    edx,0x19000
    812b:	be 00 00 00 00       	mov    esi,0x0
    8130:	48 89 c7             	mov    rdi,rax
    8133:	e8 e8 a4 ff ff       	call   2620 <memset@plt>
    8138:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    813f:	00 00 
    8141:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8147:	48 89 c7             	mov    rdi,rax
    814a:	e8 61 a4 ff ff       	call   25b0 <strlen@plt>
    814f:	48 89 c2             	mov    rdx,rax
    8152:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8159:	00 00 
    815b:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8161:	48 01 d0             	add    rax,rdx
    8164:	48 be 42 6c 61 63 6b 	movabs rsi,0x73696c6b63616c42
    816b:	6c 69 73 
    816e:	48 bf 74 20 66 6f 72 	movabs rdi,0x736e20726f662074
    8175:	20 6e 73 
    8178:	48 89 30             	mov    QWORD PTR [rax],rsi
    817b:	48 89 78 08          	mov    QWORD PTR [rax+0x8],rdi
    817f:	48 b9 68 20 73 65 72 	movabs rcx,0x7265767265732068
    8186:	76 65 72 
    8189:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    818d:	c7 40 18 3a 0a 09 00 	mov    DWORD PTR [rax+0x18],0x90a3a
    8194:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    819b:	e9 88 00 00 00       	jmp    8228 <send_blacklist+0x121>
    81a0:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    81a3:	48 63 d0             	movsxd rdx,eax
    81a6:	48 89 d0             	mov    rax,rdx
    81a9:	48 c1 e0 03          	shl    rax,0x3
    81ad:	48 01 d0             	add    rax,rdx
    81b0:	48 01 c0             	add    rax,rax
    81b3:	48 8d 15 26 c1 0e 00 	lea    rdx,[rip+0xec126]        # f42e0 <blocked_ipv4_addrs>
    81ba:	48 01 d0             	add    rax,rdx
    81bd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    81c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    81c5:	48 89 c7             	mov    rdi,rax
    81c8:	e8 e3 a3 ff ff       	call   25b0 <strlen@plt>
    81cd:	48 89 c2             	mov    rdx,rax
    81d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    81d4:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    81db:	00 00 
    81dd:	48 81 c1 00 70 fe ff 	add    rcx,0xfffffffffffe7000
    81e4:	48 89 c6             	mov    rsi,rax
    81e7:	48 89 cf             	mov    rdi,rcx
    81ea:	e8 51 a4 ff ff       	call   2640 <strncat@plt>
    81ef:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    81f6:	00 00 
    81f8:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    81fe:	48 89 c7             	mov    rdi,rax
    8201:	e8 aa a3 ff ff       	call   25b0 <strlen@plt>
    8206:	48 89 c2             	mov    rdx,rax
    8209:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8210:	00 00 
    8212:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8218:	48 01 d0             	add    rax,rdx
    821b:	66 c7 00 0a 09       	mov    WORD PTR [rax],0x90a
    8220:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    8224:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8228:	8b 05 e2 9d 00 00    	mov    eax,DWORD PTR [rip+0x9de2]        # 12010 <blk_ipv4_len>
    822e:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    8231:	0f 8e 69 ff ff ff    	jle    81a0 <send_blacklist+0x99>
    8237:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    823e:	00 00 
    8240:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8246:	48 89 c7             	mov    rdi,rax
    8249:	e8 62 a3 ff ff       	call   25b0 <strlen@plt>
    824e:	48 89 c2             	mov    rdx,rax
    8251:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8258:	00 00 
    825a:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8260:	48 01 d0             	add    rax,rdx
    8263:	66 c7 00 0d 0a       	mov    WORD PTR [rax],0xa0d
    8268:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    826c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8273:	00 00 
    8275:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    827b:	48 89 c7             	mov    rdi,rax
    827e:	e8 2d a3 ff ff       	call   25b0 <strlen@plt>
    8283:	48 89 c2             	mov    rdx,rax
    8286:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    828a:	8b 00                	mov    eax,DWORD PTR [rax]
    828c:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8293:	00 00 
    8295:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    829c:	b9 00 00 00 00       	mov    ecx,0x0
    82a1:	89 c7                	mov    edi,eax
    82a3:	e8 38 a3 ff ff       	call   25e0 <send@plt>
    82a8:	90                   	nop
    82a9:	c9                   	leave  
    82aa:	c3                   	ret    

00000000000082ab <add_to_blacklist>:
    82ab:	f3 0f 1e fa          	endbr64 
    82af:	55                   	push   rbp
    82b0:	48 89 e5             	mov    rbp,rsp
    82b3:	48 83 ec 50          	sub    rsp,0x50
    82b7:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    82bb:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    82bf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    82c6:	00 00 
    82c8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    82cc:	31 c0                	xor    eax,eax
    82ce:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    82d5:	00 00 
    82d7:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    82dd:	ba 00 90 01 00       	mov    edx,0x19000
    82e2:	be 00 00 00 00       	mov    esi,0x0
    82e7:	48 89 c7             	mov    rdi,rax
    82ea:	e8 31 a3 ff ff       	call   2620 <memset@plt>
    82ef:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    82f3:	48 83 c0 0a          	add    rax,0xa
    82f7:	ba 04 00 00 00       	mov    edx,0x4
    82fc:	48 8d 35 d4 64 00 00 	lea    rsi,[rip+0x64d4]        # e7d7 <_IO_stdin_used+0x17d7>
    8303:	48 89 c7             	mov    rdi,rax
    8306:	e8 c5 a2 ff ff       	call   25d0 <strncmp@plt>
    830b:	85 c0                	test   eax,eax
    830d:	0f 85 93 00 00 00    	jne    83a6 <add_to_blacklist+0xfb>
    8313:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    8317:	48 83 c0 0f          	add    rax,0xf
    831b:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    831f:	8b 05 eb 9c 00 00    	mov    eax,DWORD PTR [rip+0x9ceb]        # 12010 <blk_ipv4_len>
    8325:	83 c0 01             	add    eax,0x1
    8328:	89 05 e2 9c 00 00    	mov    DWORD PTR [rip+0x9ce2],eax        # 12010 <blk_ipv4_len>
    832e:	8b 05 dc 9c 00 00    	mov    eax,DWORD PTR [rip+0x9cdc]        # 12010 <blk_ipv4_len>
    8334:	48 63 d0             	movsxd rdx,eax
    8337:	48 89 d0             	mov    rax,rdx
    833a:	48 c1 e0 03          	shl    rax,0x3
    833e:	48 01 d0             	add    rax,rdx
    8341:	48 01 c0             	add    rax,rax
    8344:	48 8d 15 95 bf 0e 00 	lea    rdx,[rip+0xebf95]        # f42e0 <blocked_ipv4_addrs>
    834b:	48 01 d0             	add    rax,rdx
    834e:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    8352:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    8356:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    835a:	48 89 d6             	mov    rsi,rdx
    835d:	48 89 c7             	mov    rdi,rax
    8360:	e8 5b a3 ff ff       	call   26c0 <strcpy@plt>
    8365:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    8369:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    836d:	48 8d 35 68 64 00 00 	lea    rsi,[rip+0x6468]        # e7dc <_IO_stdin_used+0x17dc>
    8374:	48 89 c7             	mov    rdi,rax
    8377:	b8 00 00 00 00       	mov    eax,0x0
    837c:	e8 8f a1 ff ff       	call   2510 <sprintf@plt>
    8381:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    8385:	48 89 c7             	mov    rdi,rax
    8388:	e8 23 a2 ff ff       	call   25b0 <strlen@plt>
    838d:	48 89 c2             	mov    rdx,rax
    8390:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    8394:	8b 00                	mov    eax,DWORD PTR [rax]
    8396:	48 8d 75 d0          	lea    rsi,[rbp-0x30]
    839a:	b9 00 00 00 00       	mov    ecx,0x0
    839f:	89 c7                	mov    edi,eax
    83a1:	e8 3a a2 ff ff       	call   25e0 <send@plt>
    83a6:	90                   	nop
    83a7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    83ab:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    83b2:	00 00 
    83b4:	74 05                	je     83bb <add_to_blacklist+0x110>
    83b6:	e8 35 a3 ff ff       	call   26f0 <__stack_chk_fail@plt>
    83bb:	c9                   	leave  
    83bc:	c3                   	ret    

00000000000083bd <get_loaded_rules>:
    83bd:	f3 0f 1e fa          	endbr64 
    83c1:	55                   	push   rbp
    83c2:	48 89 e5             	mov    rbp,rsp
    83c5:	53                   	push   rbx
    83c6:	48 81 ec f8 00 00 00 	sub    rsp,0xf8
    83cd:	48 89 bd 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rdi
    83d4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    83db:	00 00 
    83dd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    83e1:	31 c0                	xor    eax,eax
    83e3:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    83ea:	00 00 
    83ec:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    83f2:	ba 00 90 01 00       	mov    edx,0x19000
    83f7:	be 00 00 00 00       	mov    esi,0x0
    83fc:	48 89 c7             	mov    rdi,rax
    83ff:	e8 1c a2 ff ff       	call   2620 <memset@plt>
    8404:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    840b:	00 00 
    840d:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8413:	48 89 c7             	mov    rdi,rax
    8416:	e8 95 a1 ff ff       	call   25b0 <strlen@plt>
    841b:	48 89 c2             	mov    rdx,rax
    841e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8425:	00 00 
    8427:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    842d:	48 01 d0             	add    rax,rdx
    8430:	48 bb 4c 6f 61 64 65 	movabs rbx,0x7220646564616f4c
    8437:	64 20 72 
    843a:	48 be 75 6c 65 73 20 	movabs rsi,0x726f662073656c75
    8441:	66 6f 72 
    8444:	48 89 18             	mov    QWORD PTR [rax],rbx
    8447:	48 89 70 08          	mov    QWORD PTR [rax+0x8],rsi
    844b:	48 bb 20 56 49 47 49 	movabs rbx,0x49204c4947495620
    8452:	4c 20 49 
    8455:	48 89 58 10          	mov    QWORD PTR [rax+0x10],rbx
    8459:	c7 40 18 44 53 3a 0a 	mov    DWORD PTR [rax+0x18],0xa3a5344
    8460:	66 c7 40 1c 09 00    	mov    WORD PTR [rax+0x1c],0x9
    8466:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    846d:	00 00 00 
    8470:	e9 80 01 00 00       	jmp    85f5 <get_loaded_rules+0x238>
    8475:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    847b:	8d 50 01             	lea    edx,[rax+0x1]
    847e:	89 95 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],edx
    8484:	48 98                	cdqe   
    8486:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    848d:	48 8d 15 4c 9e 00 00 	lea    rdx,[rip+0x9e4c]        # 122e0 <rules>
    8494:	48 01 d0             	add    rax,rdx
    8497:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    849e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    84a5:	48 83 c0 20          	add    rax,0x20
    84a9:	48 89 c7             	mov    rdi,rax
    84ac:	e8 ff a0 ff ff       	call   25b0 <strlen@plt>
    84b1:	48 89 c2             	mov    rdx,rax
    84b4:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    84bb:	48 8d 48 20          	lea    rcx,[rax+0x20]
    84bf:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    84c6:	00 00 
    84c8:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    84ce:	48 89 ce             	mov    rsi,rcx
    84d1:	48 89 c7             	mov    rdi,rax
    84d4:	e8 67 a1 ff ff       	call   2640 <strncat@plt>
    84d9:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    84e0:	8b 88 40 01 00 00    	mov    ecx,DWORD PTR [rax+0x140]
    84e6:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    84ed:	8b 90 44 01 00 00    	mov    edx,DWORD PTR [rax+0x144]
    84f3:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    84fa:	48 8d 35 f3 62 00 00 	lea    rsi,[rip+0x62f3]        # e7f4 <_IO_stdin_used+0x17f4>
    8501:	48 89 c7             	mov    rdi,rax
    8504:	b8 00 00 00 00       	mov    eax,0x0
    8509:	e8 02 a0 ff ff       	call   2510 <sprintf@plt>
    850e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    8515:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    851c:	84 c0                	test   al,al
    851e:	74 40                	je     8560 <get_loaded_rules+0x1a3>
    8520:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    8527:	48 8d 98 10 02 00 00 	lea    rbx,[rax+0x210]
    852e:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    8535:	48 89 c7             	mov    rdi,rax
    8538:	e8 73 a0 ff ff       	call   25b0 <strlen@plt>
    853d:	48 8d 95 20 ff ff ff 	lea    rdx,[rbp-0xe0]
    8544:	48 01 d0             	add    rax,rdx
    8547:	48 89 da             	mov    rdx,rbx
    854a:	48 8d 35 b5 62 00 00 	lea    rsi,[rip+0x62b5]        # e806 <_IO_stdin_used+0x1806>
    8551:	48 89 c7             	mov    rdi,rax
    8554:	b8 00 00 00 00       	mov    eax,0x0
    8559:	e8 b2 9f ff ff       	call   2510 <sprintf@plt>
    855e:	eb 3e                	jmp    859e <get_loaded_rules+0x1e1>
    8560:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    8567:	48 8d 98 c8 02 00 00 	lea    rbx,[rax+0x2c8]
    856e:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    8575:	48 89 c7             	mov    rdi,rax
    8578:	e8 33 a0 ff ff       	call   25b0 <strlen@plt>
    857d:	48 8d 95 20 ff ff ff 	lea    rdx,[rbp-0xe0]
    8584:	48 01 d0             	add    rax,rdx
    8587:	48 89 da             	mov    rdx,rbx
    858a:	48 8d 35 75 62 00 00 	lea    rsi,[rip+0x6275]        # e806 <_IO_stdin_used+0x1806>
    8591:	48 89 c7             	mov    rdi,rax
    8594:	b8 00 00 00 00       	mov    eax,0x0
    8599:	e8 72 9f ff ff       	call   2510 <sprintf@plt>
    859e:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    85a5:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    85ac:	00 00 
    85ae:	48 81 c2 00 70 fe ff 	add    rdx,0xfffffffffffe7000
    85b5:	48 89 c6             	mov    rsi,rax
    85b8:	48 89 d7             	mov    rdi,rdx
    85bb:	e8 30 a3 ff ff       	call   28f0 <strcat@plt>
    85c0:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    85c7:	00 00 
    85c9:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    85cf:	48 89 c7             	mov    rdi,rax
    85d2:	e8 d9 9f ff ff       	call   25b0 <strlen@plt>
    85d7:	48 89 c2             	mov    rdx,rax
    85da:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    85e1:	00 00 
    85e3:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    85e9:	48 01 d0             	add    rax,rdx
    85ec:	66 c7 00 0a 09       	mov    WORD PTR [rax],0x90a
    85f1:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    85f5:	8b 05 19 9a 00 00    	mov    eax,DWORD PTR [rip+0x9a19]        # 12014 <num_rules>
    85fb:	39 85 14 ff ff ff    	cmp    DWORD PTR [rbp-0xec],eax
    8601:	0f 8e 6e fe ff ff    	jle    8475 <get_loaded_rules+0xb8>
    8607:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    860e:	00 00 
    8610:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8616:	48 89 c7             	mov    rdi,rax
    8619:	e8 92 9f ff ff       	call   25b0 <strlen@plt>
    861e:	48 89 c2             	mov    rdx,rax
    8621:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8628:	00 00 
    862a:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8630:	48 01 d0             	add    rax,rdx
    8633:	66 c7 00 0d 0a       	mov    WORD PTR [rax],0xa0d
    8638:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    863c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8643:	00 00 
    8645:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    864b:	48 89 c7             	mov    rdi,rax
    864e:	e8 5d 9f ff ff       	call   25b0 <strlen@plt>
    8653:	48 89 c2             	mov    rdx,rax
    8656:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    865d:	8b 00                	mov    eax,DWORD PTR [rax]
    865f:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8666:	00 00 
    8668:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    866f:	b9 00 00 00 00       	mov    ecx,0x0
    8674:	89 c7                	mov    edi,eax
    8676:	e8 65 9f ff ff       	call   25e0 <send@plt>
    867b:	90                   	nop
    867c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8680:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8687:	00 00 
    8689:	74 05                	je     8690 <get_loaded_rules+0x2d3>
    868b:	e8 60 a0 ff ff       	call   26f0 <__stack_chk_fail@plt>
    8690:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    8694:	c9                   	leave  
    8695:	c3                   	ret    

0000000000008696 <load_new_rule>:
    8696:	f3 0f 1e fa          	endbr64 
    869a:	55                   	push   rbp
    869b:	48 89 e5             	mov    rbp,rsp
    869e:	48 83 ec 20          	sub    rsp,0x20
    86a2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    86a6:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    86aa:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    86b1:	00 00 
    86b3:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    86b9:	ba 00 90 01 00       	mov    edx,0x19000
    86be:	be 00 00 00 00       	mov    esi,0x0
    86c3:	48 89 c7             	mov    rdi,rax
    86c6:	e8 55 9f ff ff       	call   2620 <memset@plt>
    86cb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    86cf:	48 83 c0 01          	add    rax,0x1
    86d3:	48 8d 35 32 61 00 00 	lea    rsi,[rip+0x6132]        # e80c <_IO_stdin_used+0x180c>
    86da:	48 89 c7             	mov    rdi,rax
    86dd:	e8 4e a0 ff ff       	call   2730 <fopen@plt>
    86e2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    86e6:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    86eb:	75 69                	jne    8756 <load_new_rule+0xc0>
    86ed:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    86f1:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    86f8:	00 00 
    86fa:	48 8d 8a 00 70 fe ff 	lea    rcx,[rdx-0x19000]
    8701:	48 89 c2             	mov    rdx,rax
    8704:	48 8d 35 03 61 00 00 	lea    rsi,[rip+0x6103]        # e80e <_IO_stdin_used+0x180e>
    870b:	48 89 cf             	mov    rdi,rcx
    870e:	b8 00 00 00 00       	mov    eax,0x0
    8713:	e8 f8 9d ff ff       	call   2510 <sprintf@plt>
    8718:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    871f:	00 00 
    8721:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8727:	48 89 c7             	mov    rdi,rax
    872a:	e8 81 9e ff ff       	call   25b0 <strlen@plt>
    872f:	48 89 c2             	mov    rdx,rax
    8732:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8736:	8b 00                	mov    eax,DWORD PTR [rax]
    8738:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    873f:	00 00 
    8741:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    8748:	b9 00 00 00 00       	mov    ecx,0x0
    874d:	89 c7                	mov    edi,eax
    874f:	e8 8c 9e ff ff       	call   25e0 <send@plt>
    8754:	eb 73                	jmp    87c9 <load_new_rule+0x133>
    8756:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    875a:	48 89 c7             	mov    rdi,rax
    875d:	e8 1f d9 ff ff       	call   6081 <rule_parser>
    8762:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8766:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    876d:	00 00 
    876f:	48 8d 8a 00 70 fe ff 	lea    rcx,[rdx-0x19000]
    8776:	48 89 c2             	mov    rdx,rax
    8779:	48 8d 35 a8 60 00 00 	lea    rsi,[rip+0x60a8]        # e828 <_IO_stdin_used+0x1828>
    8780:	48 89 cf             	mov    rdi,rcx
    8783:	b8 00 00 00 00       	mov    eax,0x0
    8788:	e8 83 9d ff ff       	call   2510 <sprintf@plt>
    878d:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8794:	00 00 
    8796:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    879c:	48 89 c7             	mov    rdi,rax
    879f:	e8 0c 9e ff ff       	call   25b0 <strlen@plt>
    87a4:	48 89 c2             	mov    rdx,rax
    87a7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    87ab:	8b 00                	mov    eax,DWORD PTR [rax]
    87ad:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    87b4:	00 00 
    87b6:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    87bd:	b9 00 00 00 00       	mov    ecx,0x0
    87c2:	89 c7                	mov    edi,eax
    87c4:	e8 17 9e ff ff       	call   25e0 <send@plt>
    87c9:	c9                   	leave  
    87ca:	c3                   	ret    

00000000000087cb <get_rule_matches>:
    87cb:	f3 0f 1e fa          	endbr64 
    87cf:	55                   	push   rbp
    87d0:	48 89 e5             	mov    rbp,rsp
    87d3:	48 81 ec 30 01 00 00 	sub    rsp,0x130
    87da:	48 89 bd d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rdi
    87e1:	48 89 b5 d0 fe ff ff 	mov    QWORD PTR [rbp-0x130],rsi
    87e8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    87ef:	00 00 
    87f1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    87f5:	31 c0                	xor    eax,eax
    87f7:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    87fe:	00 00 
    8800:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8806:	ba 00 90 01 00       	mov    edx,0x19000
    880b:	be 00 00 00 00       	mov    esi,0x0
    8810:	48 89 c7             	mov    rdi,rax
    8813:	e8 08 9e ff ff       	call   2620 <memset@plt>
    8818:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    881f:	48 89 c7             	mov    rdi,rax
    8822:	e8 89 9d ff ff       	call   25b0 <strlen@plt>
    8827:	48 83 f8 02          	cmp    rax,0x2
    882b:	0f 86 5b 01 00 00    	jbe    898c <get_rule_matches+0x1c1>
    8831:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    8838:	00 00 00 
    883b:	e9 c8 00 00 00       	jmp    8908 <get_rule_matches+0x13d>
    8840:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    8846:	48 98                	cdqe   
    8848:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    884f:	48 8d 50 20          	lea    rdx,[rax+0x20]
    8853:	48 8d 05 86 9a 00 00 	lea    rax,[rip+0x9a86]        # 122e0 <rules>
    885a:	48 01 c2             	add    rdx,rax
    885d:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    8864:	48 89 c6             	mov    rsi,rax
    8867:	48 89 d7             	mov    rdi,rdx
    886a:	e8 91 9f ff ff       	call   2800 <strcmp@plt>
    886f:	85 c0                	test   eax,eax
    8871:	0f 85 8a 00 00 00    	jne    8901 <get_rule_matches+0x136>
    8877:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    887d:	48 98                	cdqe   
    887f:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    8886:	48 8d 15 8f 9a 00 00 	lea    rdx,[rip+0x9a8f]        # 1231c <rules+0x3c>
    888d:	8b 14 10             	mov    edx,DWORD PTR [rax+rdx*1]
    8890:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    8897:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    889e:	00 00 
    88a0:	48 8d b9 00 70 fe ff 	lea    rdi,[rcx-0x19000]
    88a7:	89 d1                	mov    ecx,edx
    88a9:	48 89 c2             	mov    rdx,rax
    88ac:	48 8d 35 8b 5f 00 00 	lea    rsi,[rip+0x5f8b]        # e83e <_IO_stdin_used+0x183e>
    88b3:	b8 00 00 00 00       	mov    eax,0x0
    88b8:	e8 53 9c ff ff       	call   2510 <sprintf@plt>
    88bd:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    88c4:	00 00 
    88c6:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    88cc:	48 89 c7             	mov    rdi,rax
    88cf:	e8 dc 9c ff ff       	call   25b0 <strlen@plt>
    88d4:	48 89 c2             	mov    rdx,rax
    88d7:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    88de:	8b 00                	mov    eax,DWORD PTR [rax]
    88e0:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    88e7:	00 00 
    88e9:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    88f0:	b9 00 00 00 00       	mov    ecx,0x0
    88f5:	89 c7                	mov    edi,eax
    88f7:	e8 e4 9c ff ff       	call   25e0 <send@plt>
    88fc:	e9 25 02 00 00       	jmp    8b26 <get_rule_matches+0x35b>
    8901:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    8908:	8b 05 06 97 00 00    	mov    eax,DWORD PTR [rip+0x9706]        # 12014 <num_rules>
    890e:	39 85 e0 fe ff ff    	cmp    DWORD PTR [rbp-0x120],eax
    8914:	0f 8e 26 ff ff ff    	jle    8840 <get_rule_matches+0x75>
    891a:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    8921:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    8928:	00 00 
    892a:	48 8d 8a 00 70 fe ff 	lea    rcx,[rdx-0x19000]
    8931:	48 89 c2             	mov    rdx,rax
    8934:	48 8d 35 1d 5f 00 00 	lea    rsi,[rip+0x5f1d]        # e858 <_IO_stdin_used+0x1858>
    893b:	48 89 cf             	mov    rdi,rcx
    893e:	b8 00 00 00 00       	mov    eax,0x0
    8943:	e8 c8 9b ff ff       	call   2510 <sprintf@plt>
    8948:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    894f:	00 00 
    8951:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8957:	48 89 c7             	mov    rdi,rax
    895a:	e8 51 9c ff ff       	call   25b0 <strlen@plt>
    895f:	48 89 c2             	mov    rdx,rax
    8962:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    8969:	8b 00                	mov    eax,DWORD PTR [rax]
    896b:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8972:	00 00 
    8974:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    897b:	b9 00 00 00 00       	mov    ecx,0x0
    8980:	89 c7                	mov    edi,eax
    8982:	e8 59 9c ff ff       	call   25e0 <send@plt>
    8987:	e9 9a 01 00 00       	jmp    8b26 <get_rule_matches+0x35b>
    898c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8993:	00 00 
    8995:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    899b:	48 89 c7             	mov    rdi,rax
    899e:	e8 0d 9c ff ff       	call   25b0 <strlen@plt>
    89a3:	48 89 c2             	mov    rdx,rax
    89a6:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    89ad:	00 00 
    89af:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    89b5:	48 01 d0             	add    rax,rdx
    89b8:	48 be 52 75 6c 65 73 	movabs rsi,0x6e612073656c7552
    89bf:	20 61 6e 
    89c2:	48 bf 64 20 74 68 65 	movabs rdi,0x756e206568742064
    89c9:	20 6e 75 
    89cc:	48 89 30             	mov    QWORD PTR [rax],rsi
    89cf:	48 89 78 08          	mov    QWORD PTR [rax+0x8],rdi
    89d3:	48 be 6d 62 65 72 20 	movabs rsi,0x20666f207265626d
    89da:	6f 66 20 
    89dd:	48 bf 74 69 6d 65 73 	movabs rdi,0x68742073656d6974
    89e4:	20 74 68 
    89e7:	48 89 70 10          	mov    QWORD PTR [rax+0x10],rsi
    89eb:	48 89 78 18          	mov    QWORD PTR [rax+0x18],rdi
    89ef:	48 be 65 79 20 77 65 	movabs rsi,0x2065726577207965
    89f6:	72 65 20 
    89f9:	48 bf 6d 61 74 63 68 	movabs rdi,0x3a6465686374616d
    8a00:	65 64 3a 
    8a03:	48 89 70 20          	mov    QWORD PTR [rax+0x20],rsi
    8a07:	48 89 78 28          	mov    QWORD PTR [rax+0x28],rdi
    8a0b:	66 c7 40 30 0a 00    	mov    WORD PTR [rax+0x30],0xa
    8a11:	c7 85 e4 fe ff ff 00 	mov    DWORD PTR [rbp-0x11c],0x0
    8a18:	00 00 00 
    8a1b:	e9 80 00 00 00       	jmp    8aa0 <get_rule_matches+0x2d5>
    8a20:	8b 85 e4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x11c]
    8a26:	8d 50 01             	lea    edx,[rax+0x1]
    8a29:	89 95 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],edx
    8a2f:	48 98                	cdqe   
    8a31:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    8a38:	48 8d 15 a1 98 00 00 	lea    rdx,[rip+0x98a1]        # 122e0 <rules>
    8a3f:	48 01 d0             	add    rax,rdx
    8a42:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    8a49:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    8a50:	8b 50 3c             	mov    edx,DWORD PTR [rax+0x3c]
    8a53:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    8a5a:	48 8d 70 20          	lea    rsi,[rax+0x20]
    8a5e:	48 8d 85 f0 fe ff ff 	lea    rax,[rbp-0x110]
    8a65:	89 d1                	mov    ecx,edx
    8a67:	48 89 f2             	mov    rdx,rsi
    8a6a:	48 8d 35 fc 5d 00 00 	lea    rsi,[rip+0x5dfc]        # e86d <_IO_stdin_used+0x186d>
    8a71:	48 89 c7             	mov    rdi,rax
    8a74:	b8 00 00 00 00       	mov    eax,0x0
    8a79:	e8 92 9a ff ff       	call   2510 <sprintf@plt>
    8a7e:	48 8d 85 f0 fe ff ff 	lea    rax,[rbp-0x110]
    8a85:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    8a8c:	00 00 
    8a8e:	48 81 c2 00 70 fe ff 	add    rdx,0xfffffffffffe7000
    8a95:	48 89 c6             	mov    rsi,rax
    8a98:	48 89 d7             	mov    rdi,rdx
    8a9b:	e8 50 9e ff ff       	call   28f0 <strcat@plt>
    8aa0:	8b 05 6e 95 00 00    	mov    eax,DWORD PTR [rip+0x956e]        # 12014 <num_rules>
    8aa6:	39 85 e4 fe ff ff    	cmp    DWORD PTR [rbp-0x11c],eax
    8aac:	0f 8e 6e ff ff ff    	jle    8a20 <get_rule_matches+0x255>
    8ab2:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8ab9:	00 00 
    8abb:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8ac1:	48 89 c7             	mov    rdi,rax
    8ac4:	e8 e7 9a ff ff       	call   25b0 <strlen@plt>
    8ac9:	48 89 c2             	mov    rdx,rax
    8acc:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8ad3:	00 00 
    8ad5:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8adb:	48 01 d0             	add    rax,rdx
    8ade:	66 c7 00 0d 0a       	mov    WORD PTR [rax],0xa0d
    8ae3:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    8ae7:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8aee:	00 00 
    8af0:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8af6:	48 89 c7             	mov    rdi,rax
    8af9:	e8 b2 9a ff ff       	call   25b0 <strlen@plt>
    8afe:	48 89 c2             	mov    rdx,rax
    8b01:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    8b08:	8b 00                	mov    eax,DWORD PTR [rax]
    8b0a:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8b11:	00 00 
    8b13:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    8b1a:	b9 00 00 00 00       	mov    ecx,0x0
    8b1f:	89 c7                	mov    edi,eax
    8b21:	e8 ba 9a ff ff       	call   25e0 <send@plt>
    8b26:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b2a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8b31:	00 00 
    8b33:	74 05                	je     8b3a <get_rule_matches+0x36f>
    8b35:	e8 b6 9b ff ff       	call   26f0 <__stack_chk_fail@plt>
    8b3a:	c9                   	leave  
    8b3b:	c3                   	ret    

0000000000008b3c <get_arp_cache>:
    8b3c:	f3 0f 1e fa          	endbr64 
    8b40:	55                   	push   rbp
    8b41:	48 89 e5             	mov    rbp,rsp
    8b44:	48 83 ec 70          	sub    rsp,0x70
    8b48:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    8b4c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8b53:	00 00 
    8b55:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8b59:	31 c0                	xor    eax,eax
    8b5b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8b62:	00 00 
    8b64:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8b6a:	ba 00 90 01 00       	mov    edx,0x19000
    8b6f:	be 00 00 00 00       	mov    esi,0x0
    8b74:	48 89 c7             	mov    rdi,rax
    8b77:	e8 a4 9a ff ff       	call   2620 <memset@plt>
    8b7c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8b83:	00 00 
    8b85:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8b8b:	48 89 c7             	mov    rdi,rax
    8b8e:	e8 1d 9a ff ff       	call   25b0 <strlen@plt>
    8b93:	48 89 c2             	mov    rdx,rax
    8b96:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8b9d:	00 00 
    8b9f:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8ba5:	48 01 d0             	add    rax,rdx
    8ba8:	48 be 43 75 72 72 65 	movabs rsi,0x20746e6572727543
    8baf:	6e 74 20 
    8bb2:	48 bf 41 52 50 20 63 	movabs rdi,0x6863616320505241
    8bb9:	61 63 68 
    8bbc:	48 89 30             	mov    QWORD PTR [rax],rsi
    8bbf:	48 89 78 08          	mov    QWORD PTR [rax+0x8],rdi
    8bc3:	66 c7 40 10 65 3a    	mov    WORD PTR [rax+0x10],0x3a65
    8bc9:	c6 40 12 00          	mov    BYTE PTR [rax+0x12],0x0
    8bcd:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
    8bd4:	eb 7a                	jmp    8c50 <get_arp_cache+0x114>
    8bd6:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
    8bd9:	48 63 d0             	movsxd rdx,eax
    8bdc:	48 89 d0             	mov    rax,rdx
    8bdf:	48 c1 e0 04          	shl    rax,0x4
    8be3:	48 01 d0             	add    rax,rdx
    8be6:	48 01 c0             	add    rax,rax
    8be9:	48 8d 50 10          	lea    rdx,[rax+0x10]
    8bed:	48 8d 05 2c 01 10 00 	lea    rax,[rip+0x10012c]        # 108d20 <arpcache>
    8bf4:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    8bf8:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
    8bfb:	48 63 d0             	movsxd rdx,eax
    8bfe:	48 89 d0             	mov    rax,rdx
    8c01:	48 c1 e0 04          	shl    rax,0x4
    8c05:	48 01 d0             	add    rax,rdx
    8c08:	48 01 c0             	add    rax,rax
    8c0b:	48 8d 15 0e 01 10 00 	lea    rdx,[rip+0x10010e]        # 108d20 <arpcache>
    8c12:	48 01 c2             	add    rdx,rax
    8c15:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    8c19:	48 8d 35 63 5c 00 00 	lea    rsi,[rip+0x5c63]        # e883 <_IO_stdin_used+0x1883>
    8c20:	48 89 c7             	mov    rdi,rax
    8c23:	b8 00 00 00 00       	mov    eax,0x0
    8c28:	e8 e3 98 ff ff       	call   2510 <sprintf@plt>
    8c2d:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    8c31:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    8c38:	00 00 
    8c3a:	48 81 c2 00 70 fe ff 	add    rdx,0xfffffffffffe7000
    8c41:	48 89 c6             	mov    rsi,rax
    8c44:	48 89 d7             	mov    rdi,rdx
    8c47:	e8 a4 9c ff ff       	call   28f0 <strcat@plt>
    8c4c:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
    8c50:	8b 05 c6 93 00 00    	mov    eax,DWORD PTR [rip+0x93c6]        # 1201c <arp_entries>
    8c56:	39 45 ac             	cmp    DWORD PTR [rbp-0x54],eax
    8c59:	0f 8e 77 ff ff ff    	jle    8bd6 <get_arp_cache+0x9a>
    8c5f:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8c66:	00 00 
    8c68:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8c6e:	48 89 c7             	mov    rdi,rax
    8c71:	e8 3a 99 ff ff       	call   25b0 <strlen@plt>
    8c76:	48 89 c2             	mov    rdx,rax
    8c79:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8c80:	00 00 
    8c82:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8c88:	48 01 d0             	add    rax,rdx
    8c8b:	66 c7 00 0d 0a       	mov    WORD PTR [rax],0xa0d
    8c90:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    8c94:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8c9b:	00 00 
    8c9d:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8ca3:	48 89 c7             	mov    rdi,rax
    8ca6:	e8 05 99 ff ff       	call   25b0 <strlen@plt>
    8cab:	48 89 c2             	mov    rdx,rax
    8cae:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    8cb2:	8b 00                	mov    eax,DWORD PTR [rax]
    8cb4:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8cbb:	00 00 
    8cbd:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    8cc4:	b9 00 00 00 00       	mov    ecx,0x0
    8cc9:	89 c7                	mov    edi,eax
    8ccb:	e8 10 99 ff ff       	call   25e0 <send@plt>
    8cd0:	90                   	nop
    8cd1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cd5:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8cdc:	00 00 
    8cde:	74 05                	je     8ce5 <get_arp_cache+0x1a9>
    8ce0:	e8 0b 9a ff ff       	call   26f0 <__stack_chk_fail@plt>
    8ce5:	c9                   	leave  
    8ce6:	c3                   	ret    

0000000000008ce7 <set_spi_max>:
    8ce7:	f3 0f 1e fa          	endbr64 
    8ceb:	55                   	push   rbp
    8cec:	48 89 e5             	mov    rbp,rsp
    8cef:	53                   	push   rbx
    8cf0:	48 83 ec 18          	sub    rsp,0x18
    8cf4:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    8cf7:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8cfb:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8d02:	00 00 
    8d04:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8d0a:	ba 00 90 01 00       	mov    edx,0x19000
    8d0f:	be 00 00 00 00       	mov    esi,0x0
    8d14:	48 89 c7             	mov    rdi,rax
    8d17:	e8 04 99 ff ff       	call   2620 <memset@plt>
    8d1c:	8b 05 fe 92 00 00    	mov    eax,DWORD PTR [rip+0x92fe]        # 12020 <spi_max>
    8d22:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    8d29:	00 00 
    8d2b:	48 8d 8a 00 70 fe ff 	lea    rcx,[rdx-0x19000]
    8d32:	89 c2                	mov    edx,eax
    8d34:	48 8d 35 53 5b 00 00 	lea    rsi,[rip+0x5b53]        # e88e <_IO_stdin_used+0x188e>
    8d3b:	48 89 cf             	mov    rdi,rcx
    8d3e:	b8 00 00 00 00       	mov    eax,0x0
    8d43:	e8 c8 97 ff ff       	call   2510 <sprintf@plt>
    8d48:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8d4c:	48 89 c7             	mov    rdi,rax
    8d4f:	e8 5c 98 ff ff       	call   25b0 <strlen@plt>
    8d54:	48 83 f8 01          	cmp    rax,0x1
    8d58:	77 77                	ja     8dd1 <set_spi_max+0xea>
    8d5a:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8d61:	00 00 
    8d63:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8d69:	48 89 c7             	mov    rdi,rax
    8d6c:	e8 3f 98 ff ff       	call   25b0 <strlen@plt>
    8d71:	48 89 c2             	mov    rdx,rax
    8d74:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8d7b:	00 00 
    8d7d:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8d83:	48 01 d0             	add    rax,rdx
    8d86:	48 bb 53 50 49 20 4e 	movabs rbx,0x626d754e20495053
    8d8d:	75 6d 62 
    8d90:	48 be 65 72 20 74 6f 	movabs rsi,0x73206f6f74207265
    8d97:	6f 20 73 
    8d9a:	48 89 18             	mov    QWORD PTR [rax],rbx
    8d9d:	48 89 70 08          	mov    QWORD PTR [rax+0x8],rsi
    8da1:	48 b9 68 6f 72 74 20 	movabs rcx,0x20726f2074726f68
    8da8:	6f 72 20 
    8dab:	48 bb 69 73 20 6e 6f 	movabs rbx,0x6120746f6e207369
    8db2:	74 20 61 
    8db5:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    8db9:	48 89 58 18          	mov    QWORD PTR [rax+0x18],rbx
    8dbd:	48 b9 20 6e 75 6d 62 	movabs rcx,0xa7265626d756e20
    8dc4:	65 72 0a 
    8dc7:	48 89 48 20          	mov    QWORD PTR [rax+0x20],rcx
    8dcb:	c6 40 28 00          	mov    BYTE PTR [rax+0x28],0x0
    8dcf:	eb 5a                	jmp    8e2b <set_spi_max+0x144>
    8dd1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8dd5:	48 89 c7             	mov    rdi,rax
    8dd8:	e8 b3 9a ff ff       	call   2890 <atoi@plt>
    8ddd:	89 05 3d 92 00 00    	mov    DWORD PTR [rip+0x923d],eax        # 12020 <spi_max>
    8de3:	8b 1d 37 92 00 00    	mov    ebx,DWORD PTR [rip+0x9237]        # 12020 <spi_max>
    8de9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8df0:	00 00 
    8df2:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8df8:	48 89 c7             	mov    rdi,rax
    8dfb:	e8 b0 97 ff ff       	call   25b0 <strlen@plt>
    8e00:	48 89 c2             	mov    rdx,rax
    8e03:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8e0a:	00 00 
    8e0c:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8e12:	48 01 d0             	add    rax,rdx
    8e15:	89 da                	mov    edx,ebx
    8e17:	48 8d 35 85 5a 00 00 	lea    rsi,[rip+0x5a85]        # e8a3 <_IO_stdin_used+0x18a3>
    8e1e:	48 89 c7             	mov    rdi,rax
    8e21:	b8 00 00 00 00       	mov    eax,0x0
    8e26:	e8 e5 96 ff ff       	call   2510 <sprintf@plt>
    8e2b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8e32:	00 00 
    8e34:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8e3a:	48 89 c7             	mov    rdi,rax
    8e3d:	e8 6e 97 ff ff       	call   25b0 <strlen@plt>
    8e42:	48 89 c2             	mov    rdx,rax
    8e45:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8e4c:	00 00 
    8e4e:	48 8d b0 00 70 fe ff 	lea    rsi,[rax-0x19000]
    8e55:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8e58:	b9 00 00 00 00       	mov    ecx,0x0
    8e5d:	89 c7                	mov    edi,eax
    8e5f:	e8 7c 97 ff ff       	call   25e0 <send@plt>
    8e64:	90                   	nop
    8e65:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    8e69:	c9                   	leave  
    8e6a:	c3                   	ret    

0000000000008e6b <tcp_rst_portscan_detect>:
    8e6b:	f3 0f 1e fa          	endbr64 
    8e6f:	55                   	push   rbp
    8e70:	48 89 e5             	mov    rbp,rsp
    8e73:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    8e7a:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    8e81:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8e88:	00 00 
    8e8a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8e8e:	31 c0                	xor    eax,eax
    8e90:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    8e97:	00 00 00 
    8e9a:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8ea1:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    8ea7:	83 f8 1e             	cmp    eax,0x1e
    8eaa:	74 0a                	je     8eb6 <tcp_rst_portscan_detect+0x4b>
    8eac:	b8 00 00 00 00       	mov    eax,0x0
    8eb1:	e9 8d 01 00 00       	jmp    9043 <tcp_rst_portscan_detect+0x1d8>
    8eb6:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8ebd:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    8ec3:	83 e8 01             	sub    eax,0x1
    8ec6:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    8ecc:	eb 6c                	jmp    8f3a <tcp_rst_portscan_detect+0xcf>
    8ece:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    8ed4:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    8eda:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8ee1:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    8ee7:	48 63 d2             	movsxd rdx,edx
    8eea:	48 83 c2 28          	add    rdx,0x28
    8eee:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    8ef3:	89 c1                	mov    ecx,eax
    8ef5:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    8efc:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8f03:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    8f09:	48 63 d2             	movsxd rdx,edx
    8f0c:	48 83 c2 28          	add    rdx,0x28
    8f10:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    8f15:	29 c1                	sub    ecx,eax
    8f17:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    8f1d:	8d 50 01             	lea    edx,[rax+0x1]
    8f20:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    8f26:	89 ca                	mov    edx,ecx
    8f28:	48 98                	cdqe   
    8f2a:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    8f31:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    8f38:	74 0b                	je     8f45 <tcp_rst_portscan_detect+0xda>
    8f3a:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    8f41:	75 8b                	jne    8ece <tcp_rst_portscan_detect+0x63>
    8f43:	eb 01                	jmp    8f46 <tcp_rst_portscan_detect+0xdb>
    8f45:	90                   	nop
    8f46:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    8f4d:	00 00 00 
    8f50:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    8f57:	00 00 00 
    8f5a:	eb 24                	jmp    8f80 <tcp_rst_portscan_detect+0x115>
    8f5c:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    8f62:	48 98                	cdqe   
    8f64:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    8f6b:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    8f70:	7f 07                	jg     8f79 <tcp_rst_portscan_detect+0x10e>
    8f72:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    8f79:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    8f80:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    8f86:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    8f8c:	7c ce                	jl     8f5c <tcp_rst_portscan_detect+0xf1>
    8f8e:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    8f94:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    8f9a:	0f 85 9e 00 00 00    	jne    903e <tcp_rst_portscan_detect+0x1d3>
    8fa0:	48 8b 05 91 90 00 00 	mov    rax,QWORD PTR [rip+0x9091]        # 12038 <def_log_file>
    8fa7:	48 8d 35 0a 59 00 00 	lea    rsi,[rip+0x590a]        # e8b8 <_IO_stdin_used+0x18b8>
    8fae:	48 89 c7             	mov    rdi,rax
    8fb1:	e8 7a 97 ff ff       	call   2730 <fopen@plt>
    8fb6:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    8fbd:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8fc4:	48 83 c0 08          	add    rax,0x8
    8fc8:	48 89 c6             	mov    rsi,rax
    8fcb:	48 8d 3d ee 58 00 00 	lea    rdi,[rip+0x58ee]        # e8c0 <_IO_stdin_used+0x18c0>
    8fd2:	b8 00 00 00 00       	mov    eax,0x0
    8fd7:	e8 f4 94 ff ff       	call   24d0 <printf@plt>
    8fdc:	b8 00 00 00 00       	mov    eax,0x0
    8fe1:	e8 19 a4 ff ff       	call   33ff <get_formated_time>
    8fe6:	48 89 c1             	mov    rcx,rax
    8fe9:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8ff0:	48 8d 50 08          	lea    rdx,[rax+0x8]
    8ff4:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    8ffb:	48 8d 35 ee 58 00 00 	lea    rsi,[rip+0x58ee]        # e8f0 <_IO_stdin_used+0x18f0>
    9002:	48 89 c7             	mov    rdi,rax
    9005:	b8 00 00 00 00       	mov    eax,0x0
    900a:	e8 01 95 ff ff       	call   2510 <sprintf@plt>
    900f:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    9016:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    901d:	48 89 d6             	mov    rsi,rdx
    9020:	48 89 c7             	mov    rdi,rax
    9023:	e8 d8 96 ff ff       	call   2700 <fputs@plt>
    9028:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    902f:	48 89 c7             	mov    rdi,rax
    9032:	e8 a9 96 ff ff       	call   26e0 <fclose@plt>
    9037:	b8 01 00 00 00       	mov    eax,0x1
    903c:	eb 05                	jmp    9043 <tcp_rst_portscan_detect+0x1d8>
    903e:	b8 00 00 00 00       	mov    eax,0x0
    9043:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    9047:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    904e:	00 00 
    9050:	74 05                	je     9057 <tcp_rst_portscan_detect+0x1ec>
    9052:	e8 99 96 ff ff       	call   26f0 <__stack_chk_fail@plt>
    9057:	c9                   	leave  
    9058:	c3                   	ret    

0000000000009059 <fin_rst_portscan_detect>:
    9059:	f3 0f 1e fa          	endbr64 
    905d:	55                   	push   rbp
    905e:	48 89 e5             	mov    rbp,rsp
    9061:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    9068:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    906f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9076:	00 00 
    9078:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    907c:	31 c0                	xor    eax,eax
    907e:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    9085:	00 00 00 
    9088:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    908f:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    9092:	83 f8 1e             	cmp    eax,0x1e
    9095:	74 0a                	je     90a1 <fin_rst_portscan_detect+0x48>
    9097:	b8 00 00 00 00       	mov    eax,0x0
    909c:	e9 8a 01 00 00       	jmp    922b <fin_rst_portscan_detect+0x1d2>
    90a1:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    90a8:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    90ab:	83 e8 01             	sub    eax,0x1
    90ae:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    90b4:	eb 6c                	jmp    9122 <fin_rst_portscan_detect+0xc9>
    90b6:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    90bc:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    90c2:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    90c9:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    90cf:	48 63 d2             	movsxd rdx,edx
    90d2:	48 83 c2 0a          	add    rdx,0xa
    90d6:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    90db:	89 c1                	mov    ecx,eax
    90dd:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    90e4:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    90eb:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    90f1:	48 63 d2             	movsxd rdx,edx
    90f4:	48 83 c2 0a          	add    rdx,0xa
    90f8:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    90fd:	29 c1                	sub    ecx,eax
    90ff:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    9105:	8d 50 01             	lea    edx,[rax+0x1]
    9108:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    910e:	89 ca                	mov    edx,ecx
    9110:	48 98                	cdqe   
    9112:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    9119:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    9120:	74 0b                	je     912d <fin_rst_portscan_detect+0xd4>
    9122:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    9129:	75 8b                	jne    90b6 <fin_rst_portscan_detect+0x5d>
    912b:	eb 01                	jmp    912e <fin_rst_portscan_detect+0xd5>
    912d:	90                   	nop
    912e:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    9135:	00 00 00 
    9138:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    913f:	00 00 00 
    9142:	eb 24                	jmp    9168 <fin_rst_portscan_detect+0x10f>
    9144:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    914a:	48 98                	cdqe   
    914c:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    9153:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    9158:	7f 07                	jg     9161 <fin_rst_portscan_detect+0x108>
    915a:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    9161:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    9168:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    916e:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    9174:	7c ce                	jl     9144 <fin_rst_portscan_detect+0xeb>
    9176:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    917c:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    9182:	0f 85 9e 00 00 00    	jne    9226 <fin_rst_portscan_detect+0x1cd>
    9188:	48 8b 05 a9 8e 00 00 	mov    rax,QWORD PTR [rip+0x8ea9]        # 12038 <def_log_file>
    918f:	48 8d 35 22 57 00 00 	lea    rsi,[rip+0x5722]        # e8b8 <_IO_stdin_used+0x18b8>
    9196:	48 89 c7             	mov    rdi,rax
    9199:	e8 92 95 ff ff       	call   2730 <fopen@plt>
    919e:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    91a5:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    91ac:	48 83 c0 08          	add    rax,0x8
    91b0:	48 89 c6             	mov    rsi,rax
    91b3:	48 8d 3d 5e 57 00 00 	lea    rdi,[rip+0x575e]        # e918 <_IO_stdin_used+0x1918>
    91ba:	b8 00 00 00 00       	mov    eax,0x0
    91bf:	e8 0c 93 ff ff       	call   24d0 <printf@plt>
    91c4:	b8 00 00 00 00       	mov    eax,0x0
    91c9:	e8 31 a2 ff ff       	call   33ff <get_formated_time>
    91ce:	48 89 c1             	mov    rcx,rax
    91d1:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    91d8:	48 8d 50 08          	lea    rdx,[rax+0x8]
    91dc:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    91e3:	48 8d 35 5e 57 00 00 	lea    rsi,[rip+0x575e]        # e948 <_IO_stdin_used+0x1948>
    91ea:	48 89 c7             	mov    rdi,rax
    91ed:	b8 00 00 00 00       	mov    eax,0x0
    91f2:	e8 19 93 ff ff       	call   2510 <sprintf@plt>
    91f7:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    91fe:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    9205:	48 89 d6             	mov    rsi,rdx
    9208:	48 89 c7             	mov    rdi,rax
    920b:	e8 f0 94 ff ff       	call   2700 <fputs@plt>
    9210:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    9217:	48 89 c7             	mov    rdi,rax
    921a:	e8 c1 94 ff ff       	call   26e0 <fclose@plt>
    921f:	b8 01 00 00 00       	mov    eax,0x1
    9224:	eb 05                	jmp    922b <fin_rst_portscan_detect+0x1d2>
    9226:	b8 00 00 00 00       	mov    eax,0x0
    922b:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    922f:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    9236:	00 00 
    9238:	74 05                	je     923f <fin_rst_portscan_detect+0x1e6>
    923a:	e8 b1 94 ff ff       	call   26f0 <__stack_chk_fail@plt>
    923f:	c9                   	leave  
    9240:	c3                   	ret    

0000000000009241 <member_ready_for_scan>:
    9241:	f3 0f 1e fa          	endbr64 
    9245:	55                   	push   rbp
    9246:	48 89 e5             	mov    rbp,rsp
    9249:	48 83 ec 10          	sub    rsp,0x10
    924d:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    9254:	eb 48                	jmp    929e <member_ready_for_scan+0x5d>
    9256:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9259:	48 63 d0             	movsxd rdx,eax
    925c:	48 89 d0             	mov    rax,rdx
    925f:	48 c1 e0 02          	shl    rax,0x2
    9263:	48 01 d0             	add    rax,rdx
    9266:	48 c1 e0 03          	shl    rax,0x3
    926a:	48 01 d0             	add    rax,rdx
    926d:	48 c1 e0 04          	shl    rax,0x4
    9271:	48 8d 15 a8 b2 0e 00 	lea    rdx,[rip+0xeb2a8]        # f4520 <watchlist>
    9278:	48 01 d0             	add    rax,rdx
    927b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    927f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9283:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    9289:	83 f8 1d             	cmp    eax,0x1d
    928c:	76 0c                	jbe    929a <member_ready_for_scan+0x59>
    928e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9292:	48 89 c7             	mov    rdi,rax
    9295:	e8 d1 fb ff ff       	call   8e6b <tcp_rst_portscan_detect>
    929a:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    929e:	8b 05 74 8d 00 00    	mov    eax,DWORD PTR [rip+0x8d74]        # 12018 <watchlist_num>
    92a4:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    92a7:	7e ad                	jle    9256 <member_ready_for_scan+0x15>
    92a9:	90                   	nop
    92aa:	90                   	nop
    92ab:	c9                   	leave  
    92ac:	c3                   	ret    

00000000000092ad <member_exists>:
    92ad:	f3 0f 1e fa          	endbr64 
    92b1:	55                   	push   rbp
    92b2:	48 89 e5             	mov    rbp,rsp
    92b5:	48 83 ec 20          	sub    rsp,0x20
    92b9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    92bd:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    92c4:	eb 47                	jmp    930d <member_exists+0x60>
    92c6:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    92c9:	8d 50 01             	lea    edx,[rax+0x1]
    92cc:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    92cf:	48 63 d0             	movsxd rdx,eax
    92d2:	48 89 d0             	mov    rax,rdx
    92d5:	48 c1 e0 02          	shl    rax,0x2
    92d9:	48 01 d0             	add    rax,rdx
    92dc:	48 c1 e0 03          	shl    rax,0x3
    92e0:	48 01 d0             	add    rax,rdx
    92e3:	48 c1 e0 04          	shl    rax,0x4
    92e7:	48 8d 15 32 b2 0e 00 	lea    rdx,[rip+0xeb232]        # f4520 <watchlist>
    92ee:	48 01 d0             	add    rax,rdx
    92f1:	48 8d 50 08          	lea    rdx,[rax+0x8]
    92f5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    92f9:	48 89 c6             	mov    rsi,rax
    92fc:	48 89 d7             	mov    rdi,rdx
    92ff:	e8 fc 94 ff ff       	call   2800 <strcmp@plt>
    9304:	85 c0                	test   eax,eax
    9306:	75 05                	jne    930d <member_exists+0x60>
    9308:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    930b:	eb 10                	jmp    931d <member_exists+0x70>
    930d:	8b 05 05 8d 00 00    	mov    eax,DWORD PTR [rip+0x8d05]        # 12018 <watchlist_num>
    9313:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    9316:	7e ae                	jle    92c6 <member_exists+0x19>
    9318:	b8 ff ff ff ff       	mov    eax,0xffffffff
    931d:	c9                   	leave  
    931e:	c3                   	ret    

000000000000931f <init_member>:
    931f:	f3 0f 1e fa          	endbr64 
    9323:	55                   	push   rbp
    9324:	48 89 e5             	mov    rbp,rsp
    9327:	48 83 ec 20          	sub    rsp,0x20
    932b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    932f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9333:	48 89 c7             	mov    rdi,rax
    9336:	e8 72 ff ff ff       	call   92ad <member_exists>
    933b:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    933e:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    9342:	74 42                	je     9386 <init_member+0x67>
    9344:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9347:	48 63 d0             	movsxd rdx,eax
    934a:	48 89 d0             	mov    rax,rdx
    934d:	48 c1 e0 02          	shl    rax,0x2
    9351:	48 01 d0             	add    rax,rdx
    9354:	48 c1 e0 03          	shl    rax,0x3
    9358:	48 01 d0             	add    rax,rdx
    935b:	48 c1 e0 04          	shl    rax,0x4
    935f:	48 8d 15 ba b1 0e 00 	lea    rdx,[rip+0xeb1ba]        # f4520 <watchlist>
    9366:	48 01 d0             	add    rax,rdx
    9369:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    936d:	bf 00 00 00 00       	mov    edi,0x0
    9372:	e8 39 93 ff ff       	call   26b0 <time@plt>
    9377:	48 89 c2             	mov    rdx,rax
    937a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    937e:	48 89 10             	mov    QWORD PTR [rax],rdx
    9381:	e9 a8 00 00 00       	jmp    942e <init_member+0x10f>
    9386:	48 8d 3d e0 55 00 00 	lea    rdi,[rip+0x55e0]        # e96d <_IO_stdin_used+0x196d>
    938d:	e8 1b ff ff ff       	call   92ad <member_exists>
    9392:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9395:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    9399:	74 2b                	je     93c6 <init_member+0xa7>
    939b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    939e:	48 63 d0             	movsxd rdx,eax
    93a1:	48 89 d0             	mov    rax,rdx
    93a4:	48 c1 e0 02          	shl    rax,0x2
    93a8:	48 01 d0             	add    rax,rdx
    93ab:	48 c1 e0 03          	shl    rax,0x3
    93af:	48 01 d0             	add    rax,rdx
    93b2:	48 c1 e0 04          	shl    rax,0x4
    93b6:	48 8d 15 63 b1 0e 00 	lea    rdx,[rip+0xeb163]        # f4520 <watchlist>
    93bd:	48 01 d0             	add    rax,rdx
    93c0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    93c4:	eb 3b                	jmp    9401 <init_member+0xe2>
    93c6:	8b 05 4c 8c 00 00    	mov    eax,DWORD PTR [rip+0x8c4c]        # 12018 <watchlist_num>
    93cc:	83 c0 01             	add    eax,0x1
    93cf:	89 05 43 8c 00 00    	mov    DWORD PTR [rip+0x8c43],eax        # 12018 <watchlist_num>
    93d5:	8b 05 3d 8c 00 00    	mov    eax,DWORD PTR [rip+0x8c3d]        # 12018 <watchlist_num>
    93db:	48 63 d0             	movsxd rdx,eax
    93de:	48 89 d0             	mov    rax,rdx
    93e1:	48 c1 e0 02          	shl    rax,0x2
    93e5:	48 01 d0             	add    rax,rdx
    93e8:	48 c1 e0 03          	shl    rax,0x3
    93ec:	48 01 d0             	add    rax,rdx
    93ef:	48 c1 e0 04          	shl    rax,0x4
    93f3:	48 8d 15 26 b1 0e 00 	lea    rdx,[rip+0xeb126]        # f4520 <watchlist>
    93fa:	48 01 d0             	add    rax,rdx
    93fd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9401:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9405:	ba 08 00 00 00       	mov    edx,0x8
    940a:	be 00 00 00 00       	mov    esi,0x0
    940f:	48 89 c7             	mov    rdi,rax
    9412:	e8 09 92 ff ff       	call   2620 <memset@plt>
    9417:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    941b:	48 8d 50 08          	lea    rdx,[rax+0x8]
    941f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9423:	48 89 c6             	mov    rsi,rax
    9426:	48 89 d7             	mov    rdi,rdx
    9429:	e8 92 92 ff ff       	call   26c0 <strcpy@plt>
    942e:	c9                   	leave  
    942f:	c3                   	ret    

0000000000009430 <ready_for_clean>:
    9430:	f3 0f 1e fa          	endbr64 
    9434:	55                   	push   rbp
    9435:	48 89 e5             	mov    rbp,rsp
    9438:	48 83 ec 10          	sub    rsp,0x10
    943c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9440:	bf 00 00 00 00       	mov    edi,0x0
    9445:	e8 66 92 ff ff       	call   26b0 <time@plt>
    944a:	48 89 c2             	mov    rdx,rax
    944d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9451:	48 8b 00             	mov    rax,QWORD PTR [rax]
    9454:	48 29 c2             	sub    rdx,rax
    9457:	48 8b 05 5a 8e 00 00 	mov    rax,QWORD PTR [rip+0x8e5a]        # 122b8 <clean_delay>
    945e:	48 39 c2             	cmp    rdx,rax
    9461:	72 22                	jb     9485 <ready_for_clean+0x55>
    9463:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9467:	48 83 c0 08          	add    rax,0x8
    946b:	48 8d 35 03 55 00 00 	lea    rsi,[rip+0x5503]        # e975 <_IO_stdin_used+0x1975>
    9472:	48 89 c7             	mov    rdi,rax
    9475:	e8 86 93 ff ff       	call   2800 <strcmp@plt>
    947a:	85 c0                	test   eax,eax
    947c:	74 07                	je     9485 <ready_for_clean+0x55>
    947e:	b8 01 00 00 00       	mov    eax,0x1
    9483:	eb 05                	jmp    948a <ready_for_clean+0x5a>
    9485:	b8 ff ff ff ff       	mov    eax,0xffffffff
    948a:	c9                   	leave  
    948b:	c3                   	ret    

000000000000948c <clean>:
    948c:	f3 0f 1e fa          	endbr64 
    9490:	55                   	push   rbp
    9491:	48 89 e5             	mov    rbp,rsp
    9494:	48 83 ec 10          	sub    rsp,0x10
    9498:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    949c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    94a0:	ba 08 00 00 00       	mov    edx,0x8
    94a5:	be 00 00 00 00       	mov    esi,0x0
    94aa:	48 89 c7             	mov    rdi,rax
    94ad:	e8 6e 91 ff ff       	call   2620 <memset@plt>
    94b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    94b6:	48 83 c0 08          	add    rax,0x8
    94ba:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    94c1:	2e 31 00 
    94c4:	48 89 08             	mov    QWORD PTR [rax],rcx
    94c7:	90                   	nop
    94c8:	c9                   	leave  
    94c9:	c3                   	ret    

00000000000094ca <scan_for_clean>:
    94ca:	f3 0f 1e fa          	endbr64 
    94ce:	55                   	push   rbp
    94cf:	48 89 e5             	mov    rbp,rsp
    94d2:	48 83 ec 10          	sub    rsp,0x10
    94d6:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    94dd:	eb 62                	jmp    9541 <scan_for_clean+0x77>
    94df:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    94e2:	48 63 d0             	movsxd rdx,eax
    94e5:	48 89 d0             	mov    rax,rdx
    94e8:	48 c1 e0 02          	shl    rax,0x2
    94ec:	48 01 d0             	add    rax,rdx
    94ef:	48 c1 e0 03          	shl    rax,0x3
    94f3:	48 01 d0             	add    rax,rdx
    94f6:	48 c1 e0 04          	shl    rax,0x4
    94fa:	48 8d 15 1f b0 0e 00 	lea    rdx,[rip+0xeb01f]        # f4520 <watchlist>
    9501:	48 01 d0             	add    rax,rdx
    9504:	48 89 c7             	mov    rdi,rax
    9507:	e8 24 ff ff ff       	call   9430 <ready_for_clean>
    950c:	85 c0                	test   eax,eax
    950e:	7e 2d                	jle    953d <scan_for_clean+0x73>
    9510:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9513:	48 63 d0             	movsxd rdx,eax
    9516:	48 89 d0             	mov    rax,rdx
    9519:	48 c1 e0 02          	shl    rax,0x2
    951d:	48 01 d0             	add    rax,rdx
    9520:	48 c1 e0 03          	shl    rax,0x3
    9524:	48 01 d0             	add    rax,rdx
    9527:	48 c1 e0 04          	shl    rax,0x4
    952b:	48 8d 15 ee af 0e 00 	lea    rdx,[rip+0xeafee]        # f4520 <watchlist>
    9532:	48 01 d0             	add    rax,rdx
    9535:	48 89 c7             	mov    rdi,rax
    9538:	e8 4f ff ff ff       	call   948c <clean>
    953d:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    9541:	8b 05 d1 8a 00 00    	mov    eax,DWORD PTR [rip+0x8ad1]        # 12018 <watchlist_num>
    9547:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    954a:	7e 93                	jle    94df <scan_for_clean+0x15>
    954c:	90                   	nop
    954d:	90                   	nop
    954e:	c9                   	leave  
    954f:	c3                   	ret    

0000000000009550 <compare_entries>:
    9550:	f3 0f 1e fa          	endbr64 
    9554:	55                   	push   rbp
    9555:	48 89 e5             	mov    rbp,rsp
    9558:	48 83 ec 20          	sub    rsp,0x20
    955c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9560:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    9564:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    956b:	e9 ac 00 00 00       	jmp    961c <compare_entries+0xcc>
    9570:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9573:	48 63 d0             	movsxd rdx,eax
    9576:	48 89 d0             	mov    rax,rdx
    9579:	48 c1 e0 04          	shl    rax,0x4
    957d:	48 01 d0             	add    rax,rdx
    9580:	48 01 c0             	add    rax,rax
    9583:	48 8d 15 96 f7 0f 00 	lea    rdx,[rip+0xff796]        # 108d20 <arpcache>
    958a:	48 01 c2             	add    rdx,rax
    958d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9591:	48 89 c6             	mov    rsi,rax
    9594:	48 89 d7             	mov    rdi,rdx
    9597:	e8 a3 01 00 00       	call   973f <compare_ip_entry>
    959c:	85 c0                	test   eax,eax
    959e:	74 78                	je     9618 <compare_entries+0xc8>
    95a0:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    95a3:	48 63 d0             	movsxd rdx,eax
    95a6:	48 89 d0             	mov    rax,rdx
    95a9:	48 c1 e0 04          	shl    rax,0x4
    95ad:	48 01 d0             	add    rax,rdx
    95b0:	48 01 c0             	add    rax,rax
    95b3:	48 8d 50 10          	lea    rdx,[rax+0x10]
    95b7:	48 8d 05 62 f7 0f 00 	lea    rax,[rip+0xff762]        # 108d20 <arpcache>
    95be:	48 01 c2             	add    rdx,rax
    95c1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    95c5:	48 89 c6             	mov    rsi,rax
    95c8:	48 89 d7             	mov    rdi,rdx
    95cb:	e8 98 01 00 00       	call   9768 <compare_mac_entry>
    95d0:	85 c0                	test   eax,eax
    95d2:	75 44                	jne    9618 <compare_entries+0xc8>
    95d4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    95d7:	48 63 d0             	movsxd rdx,eax
    95da:	48 89 d0             	mov    rax,rdx
    95dd:	48 c1 e0 04          	shl    rax,0x4
    95e1:	48 01 d0             	add    rax,rdx
    95e4:	48 01 c0             	add    rax,rax
    95e7:	48 8d 50 10          	lea    rdx,[rax+0x10]
    95eb:	48 8d 05 2e f7 0f 00 	lea    rax,[rip+0xff72e]        # 108d20 <arpcache>
    95f2:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    95f6:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    95fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    95fe:	48 89 d1             	mov    rcx,rdx
    9601:	48 89 f2             	mov    rdx,rsi
    9604:	48 89 c6             	mov    rsi,rax
    9607:	48 8d 3d 72 53 00 00 	lea    rdi,[rip+0x5372]        # e980 <_IO_stdin_used+0x1980>
    960e:	b8 00 00 00 00       	mov    eax,0x0
    9613:	e8 b8 8e ff ff       	call   24d0 <printf@plt>
    9618:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    961c:	8b 05 fa 89 00 00    	mov    eax,DWORD PTR [rip+0x89fa]        # 1201c <arp_entries>
    9622:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    9625:	0f 8e 45 ff ff ff    	jle    9570 <compare_entries+0x20>
    962b:	90                   	nop
    962c:	90                   	nop
    962d:	c9                   	leave  
    962e:	c3                   	ret    

000000000000962f <add_entry>:
    962f:	f3 0f 1e fa          	endbr64 
    9633:	55                   	push   rbp
    9634:	48 89 e5             	mov    rbp,rsp
    9637:	48 83 ec 20          	sub    rsp,0x20
    963b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    963f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    9643:	8b 05 d3 89 00 00    	mov    eax,DWORD PTR [rip+0x89d3]        # 1201c <arp_entries>
    9649:	83 c0 01             	add    eax,0x1
    964c:	89 05 ca 89 00 00    	mov    DWORD PTR [rip+0x89ca],eax        # 1201c <arp_entries>
    9652:	8b 05 c4 89 00 00    	mov    eax,DWORD PTR [rip+0x89c4]        # 1201c <arp_entries>
    9658:	48 63 d0             	movsxd rdx,eax
    965b:	48 89 d0             	mov    rax,rdx
    965e:	48 c1 e0 04          	shl    rax,0x4
    9662:	48 01 d0             	add    rax,rdx
    9665:	48 01 c0             	add    rax,rax
    9668:	48 8d 15 b1 f6 0f 00 	lea    rdx,[rip+0xff6b1]        # 108d20 <arpcache>
    966f:	48 01 d0             	add    rax,rdx
    9672:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9676:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    967a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    967e:	48 89 d6             	mov    rsi,rdx
    9681:	48 89 c7             	mov    rdi,rax
    9684:	e8 37 90 ff ff       	call   26c0 <strcpy@plt>
    9689:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    968d:	48 8d 50 10          	lea    rdx,[rax+0x10]
    9691:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9695:	48 89 c6             	mov    rsi,rax
    9698:	48 89 d7             	mov    rdi,rdx
    969b:	e8 20 90 ff ff       	call   26c0 <strcpy@plt>
    96a0:	90                   	nop
    96a1:	c9                   	leave  
    96a2:	c3                   	ret    

00000000000096a3 <entry_exists>:
    96a3:	f3 0f 1e fa          	endbr64 
    96a7:	55                   	push   rbp
    96a8:	48 89 e5             	mov    rbp,rsp
    96ab:	48 83 ec 20          	sub    rsp,0x20
    96af:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    96b3:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    96b7:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    96be:	eb 6d                	jmp    972d <entry_exists+0x8a>
    96c0:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    96c3:	48 63 d0             	movsxd rdx,eax
    96c6:	48 89 d0             	mov    rax,rdx
    96c9:	48 c1 e0 04          	shl    rax,0x4
    96cd:	48 01 d0             	add    rax,rdx
    96d0:	48 01 c0             	add    rax,rax
    96d3:	48 8d 15 46 f6 0f 00 	lea    rdx,[rip+0xff646]        # 108d20 <arpcache>
    96da:	48 01 c2             	add    rdx,rax
    96dd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    96e1:	48 89 c6             	mov    rsi,rax
    96e4:	48 89 d7             	mov    rdi,rdx
    96e7:	e8 53 00 00 00       	call   973f <compare_ip_entry>
    96ec:	85 c0                	test   eax,eax
    96ee:	75 39                	jne    9729 <entry_exists+0x86>
    96f0:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    96f3:	48 63 d0             	movsxd rdx,eax
    96f6:	48 89 d0             	mov    rax,rdx
    96f9:	48 c1 e0 04          	shl    rax,0x4
    96fd:	48 01 d0             	add    rax,rdx
    9700:	48 01 c0             	add    rax,rax
    9703:	48 8d 50 10          	lea    rdx,[rax+0x10]
    9707:	48 8d 05 12 f6 0f 00 	lea    rax,[rip+0xff612]        # 108d20 <arpcache>
    970e:	48 01 c2             	add    rdx,rax
    9711:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9715:	48 89 c6             	mov    rsi,rax
    9718:	48 89 d7             	mov    rdi,rdx
    971b:	e8 48 00 00 00       	call   9768 <compare_mac_entry>
    9720:	85 c0                	test   eax,eax
    9722:	75 05                	jne    9729 <entry_exists+0x86>
    9724:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9727:	eb 14                	jmp    973d <entry_exists+0x9a>
    9729:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    972d:	8b 05 e9 88 00 00    	mov    eax,DWORD PTR [rip+0x88e9]        # 1201c <arp_entries>
    9733:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    9736:	7e 88                	jle    96c0 <entry_exists+0x1d>
    9738:	b8 ff ff ff ff       	mov    eax,0xffffffff
    973d:	c9                   	leave  
    973e:	c3                   	ret    

000000000000973f <compare_ip_entry>:
    973f:	f3 0f 1e fa          	endbr64 
    9743:	55                   	push   rbp
    9744:	48 89 e5             	mov    rbp,rsp
    9747:	48 83 ec 10          	sub    rsp,0x10
    974b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    974f:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9753:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    9757:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    975b:	48 89 d6             	mov    rsi,rdx
    975e:	48 89 c7             	mov    rdi,rax
    9761:	e8 9a 90 ff ff       	call   2800 <strcmp@plt>
    9766:	c9                   	leave  
    9767:	c3                   	ret    

0000000000009768 <compare_mac_entry>:
    9768:	f3 0f 1e fa          	endbr64 
    976c:	55                   	push   rbp
    976d:	48 89 e5             	mov    rbp,rsp
    9770:	48 83 ec 10          	sub    rsp,0x10
    9774:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9778:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    977c:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    9780:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9784:	48 89 d6             	mov    rsi,rdx
    9787:	48 89 c7             	mov    rdi,rax
    978a:	e8 71 90 ff ff       	call   2800 <strcmp@plt>
    978f:	c9                   	leave  
    9790:	c3                   	ret    

0000000000009791 <load_csv_arp_cache>:
    9791:	f3 0f 1e fa          	endbr64 
    9795:	55                   	push   rbp
    9796:	48 89 e5             	mov    rbp,rsp
    9799:	53                   	push   rbx
    979a:	48 83 ec 68          	sub    rsp,0x68
    979e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    97a5:	00 00 
    97a7:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    97ab:	31 c0                	xor    eax,eax
    97ad:	48 8d 35 02 52 00 00 	lea    rsi,[rip+0x5202]        # e9b6 <_IO_stdin_used+0x19b6>
    97b4:	48 8d 3d fd 51 00 00 	lea    rdi,[rip+0x51fd]        # e9b8 <_IO_stdin_used+0x19b8>
    97bb:	e8 70 8f ff ff       	call   2730 <fopen@plt>
    97c0:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    97c4:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    97c9:	75 22                	jne    97ed <load_csv_arp_cache+0x5c>
    97cb:	48 8d 3d 06 52 00 00 	lea    rdi,[rip+0x5206]        # e9d8 <_IO_stdin_used+0x19d8>
    97d2:	e8 a9 90 ff ff       	call   2880 <puts@plt>
    97d7:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    97db:	48 89 c7             	mov    rdi,rax
    97de:	e8 fd 8e ff ff       	call   26e0 <fclose@plt>
    97e3:	b8 ff ff ff ff       	mov    eax,0xffffffff
    97e8:	e9 dd 00 00 00       	jmp    98ca <load_csv_arp_cache+0x139>
    97ed:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    97f4:	00 
    97f5:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    97fc:	00 
    97fd:	eb 7c                	jmp    987b <load_csv_arp_cache+0xea>
    97ff:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    9803:	48 85 c0             	test   rax,rax
    9806:	0f 84 97 00 00 00    	je     98a3 <load_csv_arp_cache+0x112>
    980c:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    9810:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    9814:	48 8d 35 f6 51 00 00 	lea    rsi,[rip+0x51f6]        # ea11 <_IO_stdin_used+0x1a11>
    981b:	48 89 c7             	mov    rdi,rax
    981e:	e8 cd 8c ff ff       	call   24f0 <strcspn@plt>
    9823:	48 01 d8             	add    rax,rbx
    9826:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9829:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    982d:	48 8d 35 df 51 00 00 	lea    rsi,[rip+0x51df]        # ea13 <_IO_stdin_used+0x1a13>
    9834:	48 89 c7             	mov    rdi,rax
    9837:	e8 64 90 ff ff       	call   28a0 <strtok@plt>
    983c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    9840:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9844:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    9848:	48 89 d6             	mov    rsi,rdx
    984b:	48 89 c7             	mov    rdi,rax
    984e:	e8 6d 8e ff ff       	call   26c0 <strcpy@plt>
    9853:	48 8d 35 b9 51 00 00 	lea    rsi,[rip+0x51b9]        # ea13 <_IO_stdin_used+0x1a13>
    985a:	bf 00 00 00 00       	mov    edi,0x0
    985f:	e8 3c 90 ff ff       	call   28a0 <strtok@plt>
    9864:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    9868:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    986c:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    9870:	48 89 d6             	mov    rsi,rdx
    9873:	48 89 c7             	mov    rdi,rax
    9876:	e8 45 8e ff ff       	call   26c0 <strcpy@plt>
    987b:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    987f:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    9883:	48 8d 45 98          	lea    rax,[rbp-0x68]
    9887:	48 89 ce             	mov    rsi,rcx
    988a:	48 89 c7             	mov    rdi,rax
    988d:	e8 fe 8e ff ff       	call   2790 <getline@plt>
    9892:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9896:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    989b:	0f 85 5e ff ff ff    	jne    97ff <load_csv_arp_cache+0x6e>
    98a1:	eb 01                	jmp    98a4 <load_csv_arp_cache+0x113>
    98a3:	90                   	nop
    98a4:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    98a8:	48 85 c0             	test   rax,rax
    98ab:	74 0c                	je     98b9 <load_csv_arp_cache+0x128>
    98ad:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    98b1:	48 89 c7             	mov    rdi,rax
    98b4:	e8 97 8e ff ff       	call   2750 <free@plt>
    98b9:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    98bd:	48 89 c7             	mov    rdi,rax
    98c0:	e8 1b 8e ff ff       	call   26e0 <fclose@plt>
    98c5:	b8 01 00 00 00       	mov    eax,0x1
    98ca:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    98ce:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    98d5:	00 00 
    98d7:	74 05                	je     98de <load_csv_arp_cache+0x14d>
    98d9:	e8 12 8e ff ff       	call   26f0 <__stack_chk_fail@plt>
    98de:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    98e2:	c9                   	leave  
    98e3:	c3                   	ret    

00000000000098e4 <callback>:
    98e4:	f3 0f 1e fa          	endbr64 
    98e8:	55                   	push   rbp
    98e9:	48 89 e5             	mov    rbp,rsp
    98ec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    98f0:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    98f3:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    98f7:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    98fb:	b8 00 00 00 00       	mov    eax,0x0
    9900:	5d                   	pop    rbp
    9901:	c3                   	ret    

0000000000009902 <update_db>:
    9902:	f3 0f 1e fa          	endbr64 
    9906:	55                   	push   rbp
    9907:	48 89 e5             	mov    rbp,rsp
    990a:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    9911:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    9918:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    991f:	00 00 
    9921:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9925:	31 c0                	xor    eax,eax
    9927:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    992e:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    9935:	48 8d 3d dc 50 00 00 	lea    rdi,[rip+0x50dc]        # ea18 <_IO_stdin_used+0x1a18>
    993c:	e8 3f 8f ff ff       	call   2880 <puts@plt>
    9941:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    9948:	00 00 00 00 
    994c:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    9953:	48 89 c6             	mov    rsi,rax
    9956:	48 8d 3d e3 15 10 00 	lea    rdi,[rip+0x1015e3]        # 10af40 <sqlite_db_path>
    995d:	e8 7e 8f ff ff       	call   28e0 <sqlite3_open@plt>
    9962:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    9968:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    996f:	74 28                	je     9999 <update_db+0x97>
    9971:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    9978:	48 89 c7             	mov    rdi,rax
    997b:	e8 50 8d ff ff       	call   26d0 <sqlite3_errmsg@plt>
    9980:	48 89 c6             	mov    rsi,rax
    9983:	48 8d 3d 9a 50 00 00 	lea    rdi,[rip+0x509a]        # ea24 <_IO_stdin_used+0x1a24>
    998a:	b8 00 00 00 00       	mov    eax,0x0
    998f:	e8 3c 8b ff ff       	call   24d0 <printf@plt>
    9994:	e9 a2 00 00 00       	jmp    9a3b <update_db+0x139>
    9999:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    99a0:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    99a3:	85 c0                	test   eax,eax
    99a5:	75 2e                	jne    99d5 <update_db+0xd3>
    99a7:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    99ae:	48 8d 48 10          	lea    rcx,[rax+0x10]
    99b2:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    99b9:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    99c0:	48 8d 35 71 50 00 00 	lea    rsi,[rip+0x5071]        # ea38 <_IO_stdin_used+0x1a38>
    99c7:	48 89 c7             	mov    rdi,rax
    99ca:	b8 00 00 00 00       	mov    eax,0x0
    99cf:	e8 3c 8b ff ff       	call   2510 <sprintf@plt>
    99d4:	90                   	nop
    99d5:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    99dc:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    99e3:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    99ea:	49 89 d0             	mov    r8,rdx
    99ed:	b9 00 00 00 00       	mov    ecx,0x0
    99f2:	ba 00 00 00 00       	mov    edx,0x0
    99f7:	48 89 c7             	mov    rdi,rax
    99fa:	e8 c1 8d ff ff       	call   27c0 <sqlite3_exec@plt>
    99ff:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    9a05:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    9a0c:	74 2c                	je     9a3a <update_db+0x138>
    9a0e:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    9a15:	48 89 c6             	mov    rsi,rax
    9a18:	48 8d 3d 5e 50 00 00 	lea    rdi,[rip+0x505e]        # ea7d <_IO_stdin_used+0x1a7d>
    9a1f:	b8 00 00 00 00       	mov    eax,0x0
    9a24:	e8 a7 8a ff ff       	call   24d0 <printf@plt>
    9a29:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    9a30:	48 89 c7             	mov    rdi,rax
    9a33:	e8 48 8d ff ff       	call   2780 <sqlite3_free@plt>
    9a38:	eb 01                	jmp    9a3b <update_db+0x139>
    9a3a:	90                   	nop
    9a3b:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    9a42:	48 89 c7             	mov    rdi,rax
    9a45:	e8 a6 8b ff ff       	call   25f0 <sqlite3_close@plt>
    9a4a:	b8 01 00 00 00       	mov    eax,0x1
    9a4f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    9a53:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    9a5a:	00 00 
    9a5c:	74 05                	je     9a63 <update_db+0x161>
    9a5e:	e8 8d 8c ff ff       	call   26f0 <__stack_chk_fail@plt>
    9a63:	c9                   	leave  
    9a64:	c3                   	ret    

0000000000009a65 <update_spi_db>:
    9a65:	f3 0f 1e fa          	endbr64 
    9a69:	55                   	push   rbp
    9a6a:	48 89 e5             	mov    rbp,rsp
    9a6d:	41 57                	push   r15
    9a6f:	41 56                	push   r14
    9a71:	41 55                	push   r13
    9a73:	41 54                	push   r12
    9a75:	53                   	push   rbx
    9a76:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    9a7d:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    9a84:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9a8b:	00 00 
    9a8d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9a91:	31 c0                	xor    eax,eax
    9a93:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    9a9a:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    9aa1:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    9aa8:	48 89 c6             	mov    rsi,rax
    9aab:	48 8d 3d e9 4f 00 00 	lea    rdi,[rip+0x4fe9]        # ea9b <_IO_stdin_used+0x1a9b>
    9ab2:	e8 29 8e ff ff       	call   28e0 <sqlite3_open@plt>
    9ab7:	85 c0                	test   eax,eax
    9ab9:	74 3c                	je     9af7 <update_spi_db+0x92>
    9abb:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    9ac2:	48 89 c7             	mov    rdi,rax
    9ac5:	e8 06 8c ff ff       	call   26d0 <sqlite3_errmsg@plt>
    9aca:	48 89 c6             	mov    rsi,rax
    9acd:	48 8d 3d df 4f 00 00 	lea    rdi,[rip+0x4fdf]        # eab3 <_IO_stdin_used+0x1ab3>
    9ad4:	b8 00 00 00 00       	mov    eax,0x0
    9ad9:	e8 f2 89 ff ff       	call   24d0 <printf@plt>
    9ade:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    9ae5:	48 89 c7             	mov    rdi,rax
    9ae8:	e8 03 8b ff ff       	call   25f0 <sqlite3_close@plt>
    9aed:	b8 00 00 00 00       	mov    eax,0x0
    9af2:	e9 59 01 00 00       	jmp    9c50 <update_spi_db+0x1eb>
    9af7:	48 8d 05 ca 4f 00 00 	lea    rax,[rip+0x4fca]        # eac8 <_IO_stdin_used+0x1ac8>
    9afe:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    9b05:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b0c:	8b 50 7c             	mov    edx,DWORD PTR [rax+0x7c]
    9b0f:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b16:	44 8b 78 78          	mov    r15d,DWORD PTR [rax+0x78]
    9b1a:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b21:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    9b28:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b2f:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    9b36:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b3d:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    9b44:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b4b:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    9b51:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b58:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    9b5c:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    9b5f:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b66:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    9b6a:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b71:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    9b75:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    9b78:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b7f:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    9b83:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b8a:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    9b8d:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    9b93:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b9a:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    9b9d:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    9ba3:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9baa:	48 8d 48 29          	lea    rcx,[rax+0x29]
    9bae:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    9bb5:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    9bbc:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    9bc3:	52                   	push   rdx
    9bc4:	41 57                	push   r15
    9bc6:	41 56                	push   r14
    9bc8:	41 55                	push   r13
    9bca:	41 54                	push   r12
    9bcc:	53                   	push   rbx
    9bcd:	41 53                	push   r11
    9bcf:	41 52                	push   r10
    9bd1:	41 51                	push   r9
    9bd3:	41 50                	push   r8
    9bd5:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    9bdc:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    9be3:	48 89 fa             	mov    rdx,rdi
    9be6:	48 89 c7             	mov    rdi,rax
    9be9:	b8 00 00 00 00       	mov    eax,0x0
    9bee:	e8 1d 89 ff ff       	call   2510 <sprintf@plt>
    9bf3:	48 83 c4 50          	add    rsp,0x50
    9bf7:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    9bfe:	00 00 00 00 
    9c02:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    9c09:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    9c10:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    9c17:	49 89 d0             	mov    r8,rdx
    9c1a:	b9 00 00 00 00       	mov    ecx,0x0
    9c1f:	ba 00 00 00 00       	mov    edx,0x0
    9c24:	48 89 c7             	mov    rdi,rax
    9c27:	e8 94 8b ff ff       	call   27c0 <sqlite3_exec@plt>
    9c2c:	85 c0                	test   eax,eax
    9c2e:	74 1b                	je     9c4b <update_spi_db+0x1e6>
    9c30:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    9c37:	48 89 c6             	mov    rsi,rax
    9c3a:	48 8d 3d 74 4f 00 00 	lea    rdi,[rip+0x4f74]        # ebb5 <_IO_stdin_used+0x1bb5>
    9c41:	b8 00 00 00 00       	mov    eax,0x0
    9c46:	e8 85 88 ff ff       	call   24d0 <printf@plt>
    9c4b:	b8 00 00 00 00       	mov    eax,0x0
    9c50:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    9c54:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    9c5b:	00 00 
    9c5d:	74 05                	je     9c64 <update_spi_db+0x1ff>
    9c5f:	e8 8c 8a ff ff       	call   26f0 <__stack_chk_fail@plt>
    9c64:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    9c68:	5b                   	pop    rbx
    9c69:	41 5c                	pop    r12
    9c6b:	41 5d                	pop    r13
    9c6d:	41 5e                	pop    r14
    9c6f:	41 5f                	pop    r15
    9c71:	5d                   	pop    rbp
    9c72:	c3                   	ret    

0000000000009c73 <http_disect>:
    9c73:	f3 0f 1e fa          	endbr64 
    9c77:	55                   	push   rbp
    9c78:	48 89 e5             	mov    rbp,rsp
    9c7b:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    9c82:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    9c89:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    9c90:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9c97:	00 00 
    9c99:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9c9d:	31 c0                	xor    eax,eax
    9c9f:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    9ca6:	be 0d 00 00 00       	mov    esi,0xd
    9cab:	48 89 c7             	mov    rdi,rax
    9cae:	e8 e7 98 ff ff       	call   359a <strloc>
    9cb3:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    9cb9:	48 8d 3d 13 4f 00 00 	lea    rdi,[rip+0x4f13]        # ebd3 <_IO_stdin_used+0x1bd3>
    9cc0:	e8 bb 8b ff ff       	call   2880 <puts@plt>
    9cc5:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    9ccc:	48 89 c7             	mov    rdi,rax
    9ccf:	e8 6d 99 ff ff       	call   3641 <test_string_arr_print>
    9cd4:	83 f0 01             	xor    eax,0x1
    9cd7:	84 c0                	test   al,al
    9cd9:	75 33                	jne    9d0e <http_disect+0x9b>
    9cdb:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    9ce1:	48 63 d0             	movsxd rdx,eax
    9ce4:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    9ceb:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    9cf2:	48 89 ce             	mov    rsi,rcx
    9cf5:	48 89 c7             	mov    rdi,rax
    9cf8:	e8 03 89 ff ff       	call   2600 <strncpy@plt>
    9cfd:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    9d04:	48 89 c7             	mov    rdi,rax
    9d07:	e8 74 8b ff ff       	call   2880 <puts@plt>
    9d0c:	eb 01                	jmp    9d0f <http_disect+0x9c>
    9d0e:	90                   	nop
    9d0f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9d13:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9d1a:	00 00 
    9d1c:	74 05                	je     9d23 <http_disect+0xb0>
    9d1e:	e8 cd 89 ff ff       	call   26f0 <__stack_chk_fail@plt>
    9d23:	c9                   	leave  
    9d24:	c3                   	ret    

0000000000009d25 <dns_disect>:
    9d25:	f3 0f 1e fa          	endbr64 
    9d29:	55                   	push   rbp
    9d2a:	48 89 e5             	mov    rbp,rsp
    9d2d:	48 83 ec 30          	sub    rsp,0x30
    9d31:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9d35:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    9d39:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9d3d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    9d41:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9d45:	48 83 c0 0c          	add    rax,0xc
    9d49:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    9d4d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9d51:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    9d55:	66 85 c0             	test   ax,ax
    9d58:	75 6d                	jne    9dc7 <dns_disect+0xa2>
    9d5a:	bf 00 04 00 00       	mov    edi,0x400
    9d5f:	e8 4c 8a ff ff       	call   27b0 <malloc@plt>
    9d64:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9d68:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9d6c:	ba 08 00 00 00       	mov    edx,0x8
    9d71:	be 00 00 00 00       	mov    esi,0x0
    9d76:	48 89 c7             	mov    rdi,rax
    9d79:	e8 a2 88 ff ff       	call   2620 <memset@plt>
    9d7e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9d82:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9d86:	48 89 d6             	mov    rsi,rdx
    9d89:	48 89 c7             	mov    rdi,rax
    9d8c:	e8 39 00 00 00       	call   9dca <get_dns_name>
    9d91:	0f b6 05 cc 11 10 00 	movzx  eax,BYTE PTR [rip+0x1011cc]        # 10af64 <packet_print>
    9d98:	84 c0                	test   al,al
    9d9a:	74 18                	je     9db4 <dns_disect+0x8f>
    9d9c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9da0:	48 89 c6             	mov    rsi,rax
    9da3:	48 8d 3d 3b 4e 00 00 	lea    rdi,[rip+0x4e3b]        # ebe5 <_IO_stdin_used+0x1be5>
    9daa:	b8 00 00 00 00       	mov    eax,0x0
    9daf:	e8 1c 87 ff ff       	call   24d0 <printf@plt>
    9db4:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    9db9:	74 0c                	je     9dc7 <dns_disect+0xa2>
    9dbb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9dbf:	48 89 c7             	mov    rdi,rax
    9dc2:	e8 89 89 ff ff       	call   2750 <free@plt>
    9dc7:	90                   	nop
    9dc8:	c9                   	leave  
    9dc9:	c3                   	ret    

0000000000009dca <get_dns_name>:
    9dca:	f3 0f 1e fa          	endbr64 
    9dce:	55                   	push   rbp
    9dcf:	48 89 e5             	mov    rbp,rsp
    9dd2:	53                   	push   rbx
    9dd3:	48 83 ec 28          	sub    rsp,0x28
    9dd7:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9ddb:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    9ddf:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    9de6:	eb 57                	jmp    9e3f <get_dns_name+0x75>
    9de8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9deb:	48 63 d0             	movsxd rdx,eax
    9dee:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9df2:	48 01 d0             	add    rax,rdx
    9df5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9df8:	3c 20                	cmp    al,0x20
    9dfa:	7e 24                	jle    9e20 <get_dns_name+0x56>
    9dfc:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9dff:	48 63 d0             	movsxd rdx,eax
    9e02:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9e06:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    9e0a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9e0e:	ba 01 00 00 00       	mov    edx,0x1
    9e13:	48 89 ce             	mov    rsi,rcx
    9e16:	48 89 c7             	mov    rdi,rax
    9e19:	e8 22 88 ff ff       	call   2640 <strncat@plt>
    9e1e:	eb 1b                	jmp    9e3b <get_dns_name+0x71>
    9e20:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9e24:	48 89 c7             	mov    rdi,rax
    9e27:	e8 84 87 ff ff       	call   25b0 <strlen@plt>
    9e2c:	48 89 c2             	mov    rdx,rax
    9e2f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9e33:	48 01 d0             	add    rax,rdx
    9e36:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    9e3b:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    9e3f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9e42:	48 63 d8             	movsxd rbx,eax
    9e45:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9e49:	48 89 c7             	mov    rdi,rax
    9e4c:	e8 5f 87 ff ff       	call   25b0 <strlen@plt>
    9e51:	48 39 c3             	cmp    rbx,rax
    9e54:	72 92                	jb     9de8 <get_dns_name+0x1e>
    9e56:	90                   	nop
    9e57:	90                   	nop
    9e58:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    9e5c:	c9                   	leave  
    9e5d:	c3                   	ret    

0000000000009e5e <ftp_disect>:
    9e5e:	f3 0f 1e fa          	endbr64 
    9e62:	55                   	push   rbp
    9e63:	48 89 e5             	mov    rbp,rsp
    9e66:	48 83 ec 20          	sub    rsp,0x20
    9e6a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9e6e:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    9e72:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9e76:	48 8d 35 73 4d 00 00 	lea    rsi,[rip+0x4d73]        # ebf0 <_IO_stdin_used+0x1bf0>
    9e7d:	48 89 c7             	mov    rdi,rax
    9e80:	e8 9b 86 ff ff       	call   2520 <strstr@plt>
    9e85:	48 85 c0             	test   rax,rax
    9e88:	75 1c                	jne    9ea6 <ftp_disect+0x48>
    9e8a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9e8e:	48 8d 35 6b 4d 00 00 	lea    rsi,[rip+0x4d6b]        # ec00 <_IO_stdin_used+0x1c00>
    9e95:	48 89 c7             	mov    rdi,rax
    9e98:	e8 83 86 ff ff       	call   2520 <strstr@plt>
    9e9d:	48 85 c0             	test   rax,rax
    9ea0:	0f 84 8a 00 00 00    	je     9f30 <ftp_disect+0xd2>
    9ea6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9eaa:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    9eae:	48 89 c7             	mov    rdi,rax
    9eb1:	e8 f7 f3 ff ff       	call   92ad <member_exists>
    9eb6:	48 63 d0             	movsxd rdx,eax
    9eb9:	48 89 d0             	mov    rax,rdx
    9ebc:	48 c1 e0 02          	shl    rax,0x2
    9ec0:	48 01 d0             	add    rax,rdx
    9ec3:	48 c1 e0 03          	shl    rax,0x3
    9ec7:	48 01 d0             	add    rax,rdx
    9eca:	48 c1 e0 04          	shl    rax,0x4
    9ece:	48 8d 15 4b a6 0e 00 	lea    rdx,[rip+0xea64b]        # f4520 <watchlist>
    9ed5:	48 01 d0             	add    rax,rdx
    9ed8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9edc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9ee0:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    9ee6:	8d 50 01             	lea    edx,[rax+0x1]
    9ee9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9eed:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    9ef3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9ef7:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    9efd:	83 f8 04             	cmp    eax,0x4
    9f00:	7e 2e                	jle    9f30 <ftp_disect+0xd2>
    9f02:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9f06:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    9f0c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9f10:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9f14:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9f18:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    9f1c:	48 89 c6             	mov    rsi,rax
    9f1f:	48 8d 3d ea 4c 00 00 	lea    rdi,[rip+0x4cea]        # ec10 <_IO_stdin_used+0x1c10>
    9f26:	b8 00 00 00 00       	mov    eax,0x0
    9f2b:	e8 a0 85 ff ff       	call   24d0 <printf@plt>
    9f30:	90                   	nop
    9f31:	c9                   	leave  
    9f32:	c3                   	ret    

0000000000009f33 <livedebug>:
    9f33:	f3 0f 1e fa          	endbr64 
    9f37:	55                   	push   rbp
    9f38:	48 89 e5             	mov    rbp,rsp
    9f3b:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    9f42:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    9f49:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    9f50:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    9f57:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    9f5e:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    9f65:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    9f6c:	84 c0                	test   al,al
    9f6e:	74 20                	je     9f90 <livedebug+0x5d>
    9f70:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    9f74:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    9f78:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    9f7c:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    9f80:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    9f84:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    9f88:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    9f8c:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    9f90:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9f97:	00 00 
    9f99:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    9fa0:	31 c0                	xor    eax,eax
    9fa2:	0f b6 05 77 0f 10 00 	movzx  eax,BYTE PTR [rip+0x100f77]        # 10af20 <debug_mode>
    9fa9:	84 c0                	test   al,al
    9fab:	74 4b                	je     9ff8 <livedebug+0xc5>
    9fad:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    9fb4:	00 00 00 
    9fb7:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    9fbe:	00 00 00 
    9fc1:	48 8d 45 10          	lea    rax,[rbp+0x10]
    9fc5:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    9fcc:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    9fd3:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    9fda:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    9fe1:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    9fe8:	48 89 d6             	mov    rsi,rdx
    9feb:	48 89 c7             	mov    rdi,rax
    9fee:	b8 00 00 00 00       	mov    eax,0x0
    9ff3:	e8 d8 84 ff ff       	call   24d0 <printf@plt>
    9ff8:	90                   	nop
    9ff9:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    a000:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a007:	00 00 
    a009:	74 05                	je     a010 <livedebug+0xdd>
    a00b:	e8 e0 86 ff ff       	call   26f0 <__stack_chk_fail@plt>
    a010:	c9                   	leave  
    a011:	c3                   	ret    

000000000000a012 <forward_packet>:
    a012:	f3 0f 1e fa          	endbr64 
    a016:	55                   	push   rbp
    a017:	48 89 e5             	mov    rbp,rsp
    a01a:	48 83 ec 20          	sub    rsp,0x20
    a01e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a022:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a026:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a02a:	48 8d 35 6f ef 12 00 	lea    rsi,[rip+0x12ef6f]        # 138fa0 <local_ip>
    a031:	48 89 c7             	mov    rdi,rax
    a034:	e8 c7 87 ff ff       	call   2800 <strcmp@plt>
    a039:	85 c0                	test   eax,eax
    a03b:	74 4f                	je     a08c <forward_packet+0x7a>
    a03d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a041:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    a045:	48 8d 35 54 ef 12 00 	lea    rsi,[rip+0x12ef54]        # 138fa0 <local_ip>
    a04c:	48 89 c7             	mov    rdi,rax
    a04f:	e8 ac 87 ff ff       	call   2800 <strcmp@plt>
    a054:	85 c0                	test   eax,eax
    a056:	74 34                	je     a08c <forward_packet+0x7a>
    a058:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a05c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    a05f:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    a063:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a067:	48 89 d6             	mov    rsi,rdx
    a06a:	48 89 c7             	mov    rdi,rax
    a06d:	e8 4e 86 ff ff       	call   26c0 <strcpy@plt>
    a072:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a076:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    a079:	83 e8 0e             	sub    eax,0xe
    a07c:	89 c2                	mov    edx,eax
    a07e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a082:	89 d6                	mov    esi,edx
    a084:	48 89 c7             	mov    rdi,rax
    a087:	e8 56 b3 ff ff       	call   53e2 <ascii_hexdump>
    a08c:	90                   	nop
    a08d:	c9                   	leave  
    a08e:	c3                   	ret    

000000000000a08f <conversation_exists>:
    a08f:	f3 0f 1e fa          	endbr64 
    a093:	55                   	push   rbp
    a094:	48 89 e5             	mov    rbp,rsp
    a097:	48 83 ec 20          	sub    rsp,0x20
    a09b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a09f:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    a0a6:	e9 ff 00 00 00       	jmp    a1aa <conversation_exists+0x11b>
    a0ab:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a0ae:	48 98                	cdqe   
    a0b0:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a0b7:	48 8d 15 c2 0e 10 00 	lea    rdx,[rip+0x100ec2]        # 10af80 <spi_table>
    a0be:	48 01 d0             	add    rax,rdx
    a0c1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a0c5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a0c9:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    a0d0:	84 c0                	test   al,al
    a0d2:	0f 84 ce 00 00 00    	je     a1a6 <conversation_exists+0x117>
    a0d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a0dc:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    a0df:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a0e3:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    a0e6:	39 c2                	cmp    edx,eax
    a0e8:	75 58                	jne    a142 <conversation_exists+0xb3>
    a0ea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a0ee:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    a0f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a0f5:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    a0f8:	39 c2                	cmp    edx,eax
    a0fa:	75 46                	jne    a142 <conversation_exists+0xb3>
    a0fc:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a100:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a104:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a108:	48 89 d6             	mov    rsi,rdx
    a10b:	48 89 c7             	mov    rdi,rax
    a10e:	e8 ed 86 ff ff       	call   2800 <strcmp@plt>
    a113:	85 c0                	test   eax,eax
    a115:	0f 85 8a 00 00 00    	jne    a1a5 <conversation_exists+0x116>
    a11b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a11f:	48 8d 50 29          	lea    rdx,[rax+0x29]
    a123:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a127:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    a12b:	48 89 d6             	mov    rsi,rdx
    a12e:	48 89 c7             	mov    rdi,rax
    a131:	e8 ca 86 ff ff       	call   2800 <strcmp@plt>
    a136:	85 c0                	test   eax,eax
    a138:	75 6b                	jne    a1a5 <conversation_exists+0x116>
    a13a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a13d:	e9 81 00 00 00       	jmp    a1c3 <conversation_exists+0x134>
    a142:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a146:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    a149:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a14d:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    a150:	39 c2                	cmp    edx,eax
    a152:	75 52                	jne    a1a6 <conversation_exists+0x117>
    a154:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a158:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    a15b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a15f:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    a162:	39 c2                	cmp    edx,eax
    a164:	75 40                	jne    a1a6 <conversation_exists+0x117>
    a166:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a16a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a16e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    a172:	48 89 d6             	mov    rsi,rdx
    a175:	48 89 c7             	mov    rdi,rax
    a178:	e8 83 86 ff ff       	call   2800 <strcmp@plt>
    a17d:	85 c0                	test   eax,eax
    a17f:	75 25                	jne    a1a6 <conversation_exists+0x117>
    a181:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a185:	48 8d 50 29          	lea    rdx,[rax+0x29]
    a189:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a18d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a191:	48 89 d6             	mov    rsi,rdx
    a194:	48 89 c7             	mov    rdi,rax
    a197:	e8 64 86 ff ff       	call   2800 <strcmp@plt>
    a19c:	85 c0                	test   eax,eax
    a19e:	75 06                	jne    a1a6 <conversation_exists+0x117>
    a1a0:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a1a3:	eb 1e                	jmp    a1c3 <conversation_exists+0x134>
    a1a5:	90                   	nop
    a1a6:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    a1aa:	8b 05 74 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e74]        # 12024 <total_conversations>
    a1b0:	8d 50 01             	lea    edx,[rax+0x1]
    a1b3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a1b6:	39 c2                	cmp    edx,eax
    a1b8:	0f 87 ed fe ff ff    	ja     a0ab <conversation_exists+0x1c>
    a1be:	b8 ff ff ff ff       	mov    eax,0xffffffff
    a1c3:	c9                   	leave  
    a1c4:	c3                   	ret    

000000000000a1c5 <get_new_spi_location>:
    a1c5:	f3 0f 1e fa          	endbr64 
    a1c9:	55                   	push   rbp
    a1ca:	48 89 e5             	mov    rbp,rsp
    a1cd:	8b 05 51 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e51]        # 12024 <total_conversations>
    a1d3:	83 f8 ff             	cmp    eax,0xffffffff
    a1d6:	75 17                	jne    a1ef <get_new_spi_location+0x2a>
    a1d8:	8b 05 46 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e46]        # 12024 <total_conversations>
    a1de:	83 c0 01             	add    eax,0x1
    a1e1:	89 05 3d 7e 00 00    	mov    DWORD PTR [rip+0x7e3d],eax        # 12024 <total_conversations>
    a1e7:	8b 05 37 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e37]        # 12024 <total_conversations>
    a1ed:	eb 52                	jmp    a241 <get_new_spi_location+0x7c>
    a1ef:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    a1f6:	eb 27                	jmp    a21f <get_new_spi_location+0x5a>
    a1f8:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a1fb:	48 98                	cdqe   
    a1fd:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a204:	48 8d 15 25 0e 10 00 	lea    rdx,[rip+0x100e25]        # 10b030 <spi_table+0xb0>
    a20b:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    a20f:	83 f0 01             	xor    eax,0x1
    a212:	84 c0                	test   al,al
    a214:	74 05                	je     a21b <get_new_spi_location+0x56>
    a216:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a219:	eb 26                	jmp    a241 <get_new_spi_location+0x7c>
    a21b:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    a21f:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    a222:	8b 05 fc 7d 00 00    	mov    eax,DWORD PTR [rip+0x7dfc]        # 12024 <total_conversations>
    a228:	39 c2                	cmp    edx,eax
    a22a:	72 cc                	jb     a1f8 <get_new_spi_location+0x33>
    a22c:	8b 05 f2 7d 00 00    	mov    eax,DWORD PTR [rip+0x7df2]        # 12024 <total_conversations>
    a232:	83 c0 01             	add    eax,0x1
    a235:	89 05 e9 7d 00 00    	mov    DWORD PTR [rip+0x7de9],eax        # 12024 <total_conversations>
    a23b:	8b 05 e3 7d 00 00    	mov    eax,DWORD PTR [rip+0x7de3]        # 12024 <total_conversations>
    a241:	5d                   	pop    rbp
    a242:	c3                   	ret    

000000000000a243 <add_new_conversation>:
    a243:	f3 0f 1e fa          	endbr64 
    a247:	55                   	push   rbp
    a248:	48 89 e5             	mov    rbp,rsp
    a24b:	48 83 ec 20          	sub    rsp,0x20
    a24f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a253:	0f b6 05 78 ed 12 00 	movzx  eax,BYTE PTR [rip+0x12ed78]        # 138fd2 <use_spi>
    a25a:	84 c0                	test   al,al
    a25c:	0f 84 08 02 00 00    	je     a46a <add_new_conversation+0x227>
    a262:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a266:	48 89 c7             	mov    rdi,rax
    a269:	e8 21 fe ff ff       	call   a08f <conversation_exists>
    a26e:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a271:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    a275:	0f 84 82 00 00 00    	je     a2fd <add_new_conversation+0xba>
    a27b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a27e:	48 98                	cdqe   
    a280:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a287:	48 8d 15 f2 0c 10 00 	lea    rdx,[rip+0x100cf2]        # 10af80 <spi_table>
    a28e:	48 01 d0             	add    rax,rdx
    a291:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a295:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a299:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    a29f:	8d 50 01             	lea    edx,[rax+0x1]
    a2a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a2a6:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    a2ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a2b0:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a2b3:	8d 50 01             	lea    edx,[rax+0x1]
    a2b6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a2ba:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a2bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a2c1:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    a2c4:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a2c8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a2cc:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    a2cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a2d3:	48 8d 70 29          	lea    rsi,[rax+0x29]
    a2d7:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a2da:	41 89 f9             	mov    r9d,edi
    a2dd:	49 89 c8             	mov    r8,rcx
    a2e0:	89 d1                	mov    ecx,edx
    a2e2:	48 89 f2             	mov    rdx,rsi
    a2e5:	89 c6                	mov    esi,eax
    a2e7:	48 8d 3d 6a 49 00 00 	lea    rdi,[rip+0x496a]        # ec58 <_IO_stdin_used+0x1c58>
    a2ee:	b8 00 00 00 00       	mov    eax,0x0
    a2f3:	e8 d8 81 ff ff       	call   24d0 <printf@plt>
    a2f8:	e9 6d 01 00 00       	jmp    a46a <add_new_conversation+0x227>
    a2fd:	b8 00 00 00 00       	mov    eax,0x0
    a302:	e8 be fe ff ff       	call   a1c5 <get_new_spi_location>
    a307:	48 98                	cdqe   
    a309:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a310:	48 8d 15 69 0c 10 00 	lea    rdx,[rip+0x100c69]        # 10af80 <spi_table>
    a317:	48 01 d0             	add    rax,rdx
    a31a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a31e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a322:	ba 08 00 00 00       	mov    edx,0x8
    a327:	be 00 00 00 00       	mov    esi,0x0
    a32c:	48 89 c7             	mov    rdi,rax
    a32f:	e8 ec 82 ff ff       	call   2620 <memset@plt>
    a334:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a338:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    a33f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a343:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a347:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a34b:	48 83 c2 29          	add    rdx,0x29
    a34f:	48 89 c6             	mov    rsi,rax
    a352:	48 89 d7             	mov    rdi,rdx
    a355:	e8 66 83 ff ff       	call   26c0 <strcpy@plt>
    a35a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a35e:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    a362:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a366:	48 89 d6             	mov    rsi,rdx
    a369:	48 89 c7             	mov    rdi,rax
    a36c:	e8 4f 83 ff ff       	call   26c0 <strcpy@plt>
    a371:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a375:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    a378:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a37c:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    a37f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a383:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    a386:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a38a:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    a38d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a391:	c7 40 78 00 00 00 00 	mov    DWORD PTR [rax+0x78],0x0
    a398:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a39c:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    a3a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3a4:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    a3a8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3ac:	48 8d 50 60          	lea    rdx,[rax+0x60]
    a3b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3b4:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    a3b8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a3bc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a3c0:	48 89 d6             	mov    rsi,rdx
    a3c3:	48 89 c7             	mov    rdi,rax
    a3c6:	e8 73 04 00 00       	call   a83e <increment_stats>
    a3cb:	bf 00 00 00 00       	mov    edi,0x0
    a3d0:	e8 db 82 ff ff       	call   26b0 <time@plt>
    a3d5:	48 89 c2             	mov    rdx,rax
    a3d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3dc:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    a3e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3e7:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    a3ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3f2:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a3f5:	8d 50 01             	lea    edx,[rax+0x1]
    a3f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3fc:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a3ff:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a403:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    a406:	89 c2                	mov    edx,eax
    a408:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a40c:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    a412:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a416:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    a419:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a41d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a421:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    a424:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a428:	48 8d 70 29          	lea    rsi,[rax+0x29]
    a42c:	8b 05 f2 7b 00 00    	mov    eax,DWORD PTR [rip+0x7bf2]        # 12024 <total_conversations>
    a432:	41 89 f9             	mov    r9d,edi
    a435:	49 89 c8             	mov    r8,rcx
    a438:	89 d1                	mov    ecx,edx
    a43a:	48 89 f2             	mov    rdx,rsi
    a43d:	89 c6                	mov    esi,eax
    a43f:	48 8d 3d 3a 48 00 00 	lea    rdi,[rip+0x483a]        # ec80 <_IO_stdin_used+0x1c80>
    a446:	b8 00 00 00 00       	mov    eax,0x0
    a44b:	e8 80 80 ff ff       	call   24d0 <printf@plt>
    a450:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a454:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    a457:	83 f8 7e             	cmp    eax,0x7e
    a45a:	75 0e                	jne    a46a <add_new_conversation+0x227>
    a45c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a460:	c7 80 88 00 00 00 f3 	mov    DWORD PTR [rax+0x88],0xf3
    a467:	00 00 00 
    a46a:	90                   	nop
    a46b:	c9                   	leave  
    a46c:	c3                   	ret    

000000000000a46d <spi_ud_thw>:
    a46d:	f3 0f 1e fa          	endbr64 
    a471:	55                   	push   rbp
    a472:	48 89 e5             	mov    rbp,rsp
    a475:	48 83 ec 20          	sub    rsp,0x20
    a479:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a47d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a481:	48 89 c7             	mov    rdi,rax
    a484:	e8 06 fc ff ff       	call   a08f <conversation_exists>
    a489:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a48c:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    a490:	0f 84 97 00 00 00    	je     a52d <spi_ud_thw+0xc0>
    a496:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a499:	48 98                	cdqe   
    a49b:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a4a2:	48 8d 15 d7 0a 10 00 	lea    rdx,[rip+0x100ad7]        # 10af80 <spi_table>
    a4a9:	48 01 d0             	add    rax,rdx
    a4ac:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a4b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a4b4:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a4b7:	8d 50 01             	lea    edx,[rax+0x1]
    a4ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a4be:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a4c1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a4c5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a4c9:	48 89 d6             	mov    rsi,rdx
    a4cc:	48 89 c7             	mov    rdi,rax
    a4cf:	e8 6a 03 00 00       	call   a83e <increment_stats>
    a4d4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a4d8:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a4db:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a4df:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a4e3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a4e7:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a4ea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a4ee:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a4f2:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a4f5:	41 89 f9             	mov    r9d,edi
    a4f8:	49 89 f0             	mov    r8,rsi
    a4fb:	89 c6                	mov    esi,eax
    a4fd:	48 8d 3d a4 47 00 00 	lea    rdi,[rip+0x47a4]        # eca8 <_IO_stdin_used+0x1ca8>
    a504:	b8 00 00 00 00       	mov    eax,0x0
    a509:	e8 c2 7f ff ff       	call   24d0 <printf@plt>
    a50e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a512:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    a518:	3d f3 00 00 00       	cmp    eax,0xf3
    a51d:	75 0e                	jne    a52d <spi_ud_thw+0xc0>
    a51f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a523:	c7 80 88 00 00 00 f4 	mov    DWORD PTR [rax+0x88],0xf4
    a52a:	00 00 00 
    a52d:	90                   	nop
    a52e:	c9                   	leave  
    a52f:	c3                   	ret    

000000000000a530 <update_table>:
    a530:	f3 0f 1e fa          	endbr64 
    a534:	55                   	push   rbp
    a535:	48 89 e5             	mov    rbp,rsp
    a538:	48 83 ec 30          	sub    rsp,0x30
    a53c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    a540:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a547:	00 00 
    a549:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a54d:	31 c0                	xor    eax,eax
    a54f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a553:	48 89 c7             	mov    rdi,rax
    a556:	e8 34 fb ff ff       	call   a08f <conversation_exists>
    a55b:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    a55e:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    a562:	0f 84 4c 01 00 00    	je     a6b4 <update_table+0x184>
    a568:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    a56b:	48 98                	cdqe   
    a56d:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a574:	48 8d 15 05 0a 10 00 	lea    rdx,[rip+0x100a05]        # 10af80 <spi_table>
    a57b:	48 01 d0             	add    rax,rdx
    a57e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    a582:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a586:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a589:	8d 50 01             	lea    edx,[rax+0x1]
    a58c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a590:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a593:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    a597:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a59b:	48 89 d6             	mov    rsi,rdx
    a59e:	48 89 c7             	mov    rdi,rax
    a5a1:	e8 98 02 00 00       	call   a83e <increment_stats>
    a5a6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a5aa:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    a5b0:	3d f4 00 00 00       	cmp    eax,0xf4
    a5b5:	75 4d                	jne    a604 <update_table+0xd4>
    a5b7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a5bb:	c7 80 88 00 00 00 f1 	mov    DWORD PTR [rax+0x88],0xf1
    a5c2:	00 00 00 
    a5c5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a5c9:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a5cc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a5d0:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a5d4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a5d8:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a5db:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a5df:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a5e3:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    a5e6:	41 89 f9             	mov    r9d,edi
    a5e9:	49 89 f0             	mov    r8,rsi
    a5ec:	89 c6                	mov    esi,eax
    a5ee:	48 8d 3d db 46 00 00 	lea    rdi,[rip+0x46db]        # ecd0 <_IO_stdin_used+0x1cd0>
    a5f5:	b8 00 00 00 00       	mov    eax,0x0
    a5fa:	e8 d1 7e ff ff       	call   24d0 <printf@plt>
    a5ff:	e9 b0 00 00 00       	jmp    a6b4 <update_table+0x184>
    a604:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a608:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    a60e:	3d f6 00 00 00       	cmp    eax,0xf6
    a613:	0f 85 9b 00 00 00    	jne    a6b4 <update_table+0x184>
    a619:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a61d:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a620:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a624:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a628:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a62c:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a62f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a633:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a637:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    a63a:	41 89 f9             	mov    r9d,edi
    a63d:	49 89 f0             	mov    r8,rsi
    a640:	89 c6                	mov    esi,eax
    a642:	48 8d 3d b7 46 00 00 	lea    rdi,[rip+0x46b7]        # ed00 <_IO_stdin_used+0x1d00>
    a649:	b8 00 00 00 00       	mov    eax,0x0
    a64e:	e8 7d 7e ff ff       	call   24d0 <printf@plt>
    a653:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a657:	c7 80 88 00 00 00 fa 	mov    DWORD PTR [rax+0x88],0xfa
    a65e:	00 00 00 
    a661:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a665:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    a66c:	bf 00 00 00 00       	mov    edi,0x0
    a671:	e8 3a 80 ff ff       	call   26b0 <time@plt>
    a676:	48 89 c2             	mov    rdx,rax
    a679:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a67d:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    a684:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    a688:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    a68c:	48 89 d1             	mov    rcx,rdx
    a68f:	48 8d 15 cf f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3cf]        # 9a65 <update_spi_db>
    a696:	be 00 00 00 00       	mov    esi,0x0
    a69b:	48 89 c7             	mov    rdi,rax
    a69e:	e8 6d 82 ff ff       	call   2910 <pthread_create@plt>
    a6a3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a6a7:	be 00 00 00 00       	mov    esi,0x0
    a6ac:	48 89 c7             	mov    rdi,rax
    a6af:	e8 ec 7f ff ff       	call   26a0 <pthread_join@plt>
    a6b4:	90                   	nop
    a6b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a6b9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a6c0:	00 00 
    a6c2:	74 05                	je     a6c9 <update_table+0x199>
    a6c4:	e8 27 80 ff ff       	call   26f0 <__stack_chk_fail@plt>
    a6c9:	c9                   	leave  
    a6ca:	c3                   	ret    

000000000000a6cb <polite_end>:
    a6cb:	f3 0f 1e fa          	endbr64 
    a6cf:	55                   	push   rbp
    a6d0:	48 89 e5             	mov    rbp,rsp
    a6d3:	48 83 ec 20          	sub    rsp,0x20
    a6d7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a6db:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a6df:	48 89 c7             	mov    rdi,rax
    a6e2:	e8 a8 f9 ff ff       	call   a08f <conversation_exists>
    a6e7:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a6ea:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    a6ee:	0f 84 e1 00 00 00    	je     a7d5 <polite_end+0x10a>
    a6f4:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a6f7:	48 98                	cdqe   
    a6f9:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a700:	48 8d 15 79 08 10 00 	lea    rdx,[rip+0x100879]        # 10af80 <spi_table>
    a707:	48 01 d0             	add    rax,rdx
    a70a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a70e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a712:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a715:	8d 50 01             	lea    edx,[rax+0x1]
    a718:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a71c:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a71f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a723:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    a729:	3d f5 00 00 00       	cmp    eax,0xf5
    a72e:	75 4a                	jne    a77a <polite_end+0xaf>
    a730:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a734:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a737:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a73b:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a73f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a743:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a746:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a74a:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a74e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a751:	41 89 f9             	mov    r9d,edi
    a754:	49 89 f0             	mov    r8,rsi
    a757:	89 c6                	mov    esi,eax
    a759:	48 8d 3d d8 45 00 00 	lea    rdi,[rip+0x45d8]        # ed38 <_IO_stdin_used+0x1d38>
    a760:	b8 00 00 00 00       	mov    eax,0x0
    a765:	e8 66 7d ff ff       	call   24d0 <printf@plt>
    a76a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a76e:	c7 80 88 00 00 00 f6 	mov    DWORD PTR [rax+0x88],0xf6
    a775:	00 00 00 
    a778:	eb 48                	jmp    a7c2 <polite_end+0xf7>
    a77a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a77e:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a781:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a785:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a789:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a78d:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a790:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a794:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a798:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a79b:	41 89 f9             	mov    r9d,edi
    a79e:	49 89 f0             	mov    r8,rsi
    a7a1:	89 c6                	mov    esi,eax
    a7a3:	48 8d 3d c6 45 00 00 	lea    rdi,[rip+0x45c6]        # ed70 <_IO_stdin_used+0x1d70>
    a7aa:	b8 00 00 00 00       	mov    eax,0x0
    a7af:	e8 1c 7d ff ff       	call   24d0 <printf@plt>
    a7b4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a7b8:	c7 80 88 00 00 00 f5 	mov    DWORD PTR [rax+0x88],0xf5
    a7bf:	00 00 00 
    a7c2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a7c6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a7ca:	48 89 d6             	mov    rsi,rdx
    a7cd:	48 89 c7             	mov    rdi,rax
    a7d0:	e8 69 00 00 00       	call   a83e <increment_stats>
    a7d5:	90                   	nop
    a7d6:	c9                   	leave  
    a7d7:	c3                   	ret    

000000000000a7d8 <handle_data_pkt>:
    a7d8:	f3 0f 1e fa          	endbr64 
    a7dc:	55                   	push   rbp
    a7dd:	48 89 e5             	mov    rbp,rsp
    a7e0:	48 83 ec 20          	sub    rsp,0x20
    a7e4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a7e8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a7ec:	48 89 c7             	mov    rdi,rax
    a7ef:	e8 9b f8 ff ff       	call   a08f <conversation_exists>
    a7f4:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a7f7:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    a7fb:	74 3e                	je     a83b <handle_data_pkt+0x63>
    a7fd:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a800:	48 98                	cdqe   
    a802:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a809:	48 8d 15 70 07 10 00 	lea    rdx,[rip+0x100770]        # 10af80 <spi_table>
    a810:	48 01 d0             	add    rax,rdx
    a813:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a817:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a81b:	8b 40 78             	mov    eax,DWORD PTR [rax+0x78]
    a81e:	8d 50 01             	lea    edx,[rax+0x1]
    a821:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a825:	89 50 78             	mov    DWORD PTR [rax+0x78],edx
    a828:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a82c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a830:	48 89 d6             	mov    rsi,rdx
    a833:	48 89 c7             	mov    rdi,rax
    a836:	e8 03 00 00 00       	call   a83e <increment_stats>
    a83b:	90                   	nop
    a83c:	c9                   	leave  
    a83d:	c3                   	ret    

000000000000a83e <increment_stats>:
    a83e:	f3 0f 1e fa          	endbr64 
    a842:	55                   	push   rbp
    a843:	48 89 e5             	mov    rbp,rsp
    a846:	48 83 ec 10          	sub    rsp,0x10
    a84a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a84e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    a852:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a856:	48 8d 50 29          	lea    rdx,[rax+0x29]
    a85a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a85e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a862:	48 89 d6             	mov    rsi,rdx
    a865:	48 89 c7             	mov    rdi,rax
    a868:	e8 93 7f ff ff       	call   2800 <strcmp@plt>
    a86d:	85 c0                	test   eax,eax
    a86f:	75 13                	jne    a884 <increment_stats+0x46>
    a871:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a875:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    a878:	8d 50 01             	lea    edx,[rax+0x1]
    a87b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a87f:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    a882:	eb 2c                	jmp    a8b0 <increment_stats+0x72>
    a884:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    a888:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a88c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a890:	48 89 d6             	mov    rsi,rdx
    a893:	48 89 c7             	mov    rdi,rax
    a896:	e8 65 7f ff ff       	call   2800 <strcmp@plt>
    a89b:	85 c0                	test   eax,eax
    a89d:	75 11                	jne    a8b0 <increment_stats+0x72>
    a89f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a8a3:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    a8a6:	8d 50 01             	lea    edx,[rax+0x1]
    a8a9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a8ad:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    a8b0:	90                   	nop
    a8b1:	c9                   	leave  
    a8b2:	c3                   	ret    

000000000000a8b3 <lprintf>:
    a8b3:	f3 0f 1e fa          	endbr64 
    a8b7:	55                   	push   rbp
    a8b8:	48 89 e5             	mov    rbp,rsp
    a8bb:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    a8c2:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    a8c9:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    a8d0:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    a8d7:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    a8de:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    a8e5:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    a8ec:	84 c0                	test   al,al
    a8ee:	74 20                	je     a910 <lprintf+0x5d>
    a8f0:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    a8f4:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    a8f8:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    a8fc:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    a900:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    a904:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    a908:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    a90c:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    a910:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a917:	00 00 
    a919:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    a920:	31 c0                	xor    eax,eax
    a922:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    a929:	00 00 00 
    a92c:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    a933:	00 00 00 
    a936:	48 8d 45 10          	lea    rax,[rbp+0x10]
    a93a:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    a941:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    a948:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    a94f:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    a956:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    a95d:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    a964:	48 89 ce             	mov    rsi,rcx
    a967:	48 89 c7             	mov    rdi,rax
    a96a:	b8 00 00 00 00       	mov    eax,0x0
    a96f:	e8 bc 7e ff ff       	call   2830 <fprintf@plt>
    a974:	90                   	nop
    a975:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    a97c:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a983:	00 00 
    a985:	74 05                	je     a98c <lprintf+0xd9>
    a987:	e8 64 7d ff ff       	call   26f0 <__stack_chk_fail@plt>
    a98c:	c9                   	leave  
    a98d:	c3                   	ret    

000000000000a98e <lfprintf>:
    a98e:	f3 0f 1e fa          	endbr64 
    a992:	55                   	push   rbp
    a993:	48 89 e5             	mov    rbp,rsp
    a996:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    a99d:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    a9a4:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    a9ab:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    a9b2:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    a9b9:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    a9c0:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    a9c7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a9ce:	00 00 
    a9d0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a9d4:	31 c0                	xor    eax,eax
    a9d6:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    a9dd:	48 8d 35 c4 43 00 00 	lea    rsi,[rip+0x43c4]        # eda8 <_IO_stdin_used+0x1da8>
    a9e4:	48 89 c7             	mov    rdi,rax
    a9e7:	e8 44 7d ff ff       	call   2730 <fopen@plt>
    a9ec:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    a9f3:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    a9fa:	00 
    a9fb:	75 20                	jne    aa1d <lfprintf+0x8f>
    a9fd:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    aa04:	48 89 c6             	mov    rsi,rax
    aa07:	48 8d 3d a2 43 00 00 	lea    rdi,[rip+0x43a2]        # edb0 <_IO_stdin_used+0x1db0>
    aa0e:	b8 00 00 00 00       	mov    eax,0x0
    aa13:	e8 b8 7a ff ff       	call   24d0 <printf@plt>
    aa18:	e9 cd 00 00 00       	jmp    aaea <lfprintf+0x15c>
    aa1d:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    aa24:	48 89 c7             	mov    rdi,rax
    aa27:	e8 a7 8a ff ff       	call   34d3 <cb_get_formatted_time>
    aa2c:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    aa33:	75 3f                	jne    aa74 <lfprintf+0xe6>
    aa35:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    aa3c:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    aa43:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    aa4a:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    aa51:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    aa58:	49 89 f9             	mov    r9,rdi
    aa5b:	49 89 f0             	mov    r8,rsi
    aa5e:	48 8d 35 79 43 00 00 	lea    rsi,[rip+0x4379]        # edde <_IO_stdin_used+0x1dde>
    aa65:	48 89 c7             	mov    rdi,rax
    aa68:	b8 00 00 00 00       	mov    eax,0x0
    aa6d:	e8 9e 7a ff ff       	call   2510 <sprintf@plt>
    aa72:	eb 4e                	jmp    aac2 <lfprintf+0x134>
    aa74:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    aa7b:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    aa82:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    aa89:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    aa90:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    aa97:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    aa9d:	56                   	push   rsi
    aa9e:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    aaa4:	45 89 c1             	mov    r9d,r8d
    aaa7:	49 89 f8             	mov    r8,rdi
    aaaa:	48 8d 35 3d 43 00 00 	lea    rsi,[rip+0x433d]        # edee <_IO_stdin_used+0x1dee>
    aab1:	48 89 c7             	mov    rdi,rax
    aab4:	b8 00 00 00 00       	mov    eax,0x0
    aab9:	e8 52 7a ff ff       	call   2510 <sprintf@plt>
    aabe:	48 83 c4 10          	add    rsp,0x10
    aac2:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    aac9:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    aad0:	48 89 d6             	mov    rsi,rdx
    aad3:	48 89 c7             	mov    rdi,rax
    aad6:	e8 25 7c ff ff       	call   2700 <fputs@plt>
    aadb:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    aae2:	48 89 c7             	mov    rdi,rax
    aae5:	e8 f6 7b ff ff       	call   26e0 <fclose@plt>
    aaea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aaee:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    aaf5:	00 00 
    aaf7:	74 05                	je     aafe <lfprintf+0x170>
    aaf9:	e8 f2 7b ff ff       	call   26f0 <__stack_chk_fail@plt>
    aafe:	c9                   	leave  
    aaff:	c3                   	ret    

000000000000ab00 <saprintf>:
    ab00:	f3 0f 1e fa          	endbr64 
    ab04:	55                   	push   rbp
    ab05:	48 89 e5             	mov    rbp,rsp
    ab08:	48 83 ec 20          	sub    rsp,0x20
    ab0c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    ab10:	48 8b 05 21 75 00 00 	mov    rax,QWORD PTR [rip+0x7521]        # 12038 <def_log_file>
    ab17:	48 8d 35 8a 42 00 00 	lea    rsi,[rip+0x428a]        # eda8 <_IO_stdin_used+0x1da8>
    ab1e:	48 89 c7             	mov    rdi,rax
    ab21:	e8 0a 7c ff ff       	call   2730 <fopen@plt>
    ab26:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ab2a:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    ab2f:	75 1a                	jne    ab4b <saprintf+0x4b>
    ab31:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ab35:	48 89 c6             	mov    rsi,rax
    ab38:	48 8d 3d 71 42 00 00 	lea    rdi,[rip+0x4271]        # edb0 <_IO_stdin_used+0x1db0>
    ab3f:	b8 00 00 00 00       	mov    eax,0x0
    ab44:	e8 87 79 ff ff       	call   24d0 <printf@plt>
    ab49:	eb 1f                	jmp    ab6a <saprintf+0x6a>
    ab4b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ab4f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ab53:	48 89 d6             	mov    rsi,rdx
    ab56:	48 89 c7             	mov    rdi,rax
    ab59:	e8 a2 7b ff ff       	call   2700 <fputs@plt>
    ab5e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab62:	48 89 c7             	mov    rdi,rax
    ab65:	e8 76 7b ff ff       	call   26e0 <fclose@plt>
    ab6a:	c9                   	leave  
    ab6b:	c3                   	ret    

000000000000ab6c <substr>:
    ab6c:	f3 0f 1e fa          	endbr64 
    ab70:	55                   	push   rbp
    ab71:	48 89 e5             	mov    rbp,rsp
    ab74:	48 83 ec 20          	sub    rsp,0x20
    ab78:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    ab7c:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    ab7f:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    ab82:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    ab85:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    ab88:	83 c0 02             	add    eax,0x2
    ab8b:	48 98                	cdqe   
    ab8d:	48 89 c7             	mov    rdi,rax
    ab90:	e8 1b 7c ff ff       	call   27b0 <malloc@plt>
    ab95:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ab99:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    ab9c:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ab9f:	eb 27                	jmp    abc8 <substr+0x5c>
    aba1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    aba4:	48 63 d0             	movsxd rdx,eax
    aba7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    abab:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    abaf:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    abb2:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    abb5:	48 63 d0             	movsxd rdx,eax
    abb8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    abbc:	48 01 c2             	add    rdx,rax
    abbf:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    abc2:	88 02                	mov    BYTE PTR [rdx],al
    abc4:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    abc8:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    abcb:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    abce:	7e d1                	jle    aba1 <substr+0x35>
    abd0:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    abd3:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    abd6:	48 98                	cdqe   
    abd8:	48 8d 50 01          	lea    rdx,[rax+0x1]
    abdc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    abe0:	48 01 d0             	add    rax,rdx
    abe3:	c6 00 00             	mov    BYTE PTR [rax],0x0
    abe6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    abea:	c9                   	leave  
    abeb:	c3                   	ret    

000000000000abec <delimit>:
    abec:	f3 0f 1e fa          	endbr64 
    abf0:	55                   	push   rbp
    abf1:	48 89 e5             	mov    rbp,rsp
    abf4:	89 f8                	mov    eax,edi
    abf6:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    abf9:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    abfd:	0f 94 c0             	sete   al
    ac00:	5d                   	pop    rbp
    ac01:	c3                   	ret    

000000000000ac02 <isdigit>:
    ac02:	f3 0f 1e fa          	endbr64 
    ac06:	55                   	push   rbp
    ac07:	48 89 e5             	mov    rbp,rsp
    ac0a:	53                   	push   rbx
    ac0b:	48 83 ec 28          	sub    rsp,0x28
    ac0f:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    ac13:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    ac1a:	e9 f7 00 00 00       	jmp    ad16 <isdigit+0x114>
    ac1f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac22:	48 63 d0             	movsxd rdx,eax
    ac25:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac29:	48 01 d0             	add    rax,rdx
    ac2c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac2f:	3c 30                	cmp    al,0x30
    ac31:	0f 84 db 00 00 00    	je     ad12 <isdigit+0x110>
    ac37:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac3a:	48 63 d0             	movsxd rdx,eax
    ac3d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac41:	48 01 d0             	add    rax,rdx
    ac44:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac47:	3c 31                	cmp    al,0x31
    ac49:	0f 84 c3 00 00 00    	je     ad12 <isdigit+0x110>
    ac4f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac52:	48 63 d0             	movsxd rdx,eax
    ac55:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac59:	48 01 d0             	add    rax,rdx
    ac5c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac5f:	3c 32                	cmp    al,0x32
    ac61:	0f 84 ab 00 00 00    	je     ad12 <isdigit+0x110>
    ac67:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac6a:	48 63 d0             	movsxd rdx,eax
    ac6d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac71:	48 01 d0             	add    rax,rdx
    ac74:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac77:	3c 33                	cmp    al,0x33
    ac79:	0f 84 93 00 00 00    	je     ad12 <isdigit+0x110>
    ac7f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac82:	48 63 d0             	movsxd rdx,eax
    ac85:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac89:	48 01 d0             	add    rax,rdx
    ac8c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac8f:	3c 34                	cmp    al,0x34
    ac91:	74 7f                	je     ad12 <isdigit+0x110>
    ac93:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac96:	48 63 d0             	movsxd rdx,eax
    ac99:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac9d:	48 01 d0             	add    rax,rdx
    aca0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    aca3:	3c 34                	cmp    al,0x34
    aca5:	74 6b                	je     ad12 <isdigit+0x110>
    aca7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    acaa:	48 63 d0             	movsxd rdx,eax
    acad:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    acb1:	48 01 d0             	add    rax,rdx
    acb4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    acb7:	3c 35                	cmp    al,0x35
    acb9:	74 57                	je     ad12 <isdigit+0x110>
    acbb:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    acbe:	48 63 d0             	movsxd rdx,eax
    acc1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    acc5:	48 01 d0             	add    rax,rdx
    acc8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    accb:	3c 36                	cmp    al,0x36
    accd:	74 43                	je     ad12 <isdigit+0x110>
    accf:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    acd2:	48 63 d0             	movsxd rdx,eax
    acd5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    acd9:	48 01 d0             	add    rax,rdx
    acdc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    acdf:	3c 37                	cmp    al,0x37
    ace1:	74 2f                	je     ad12 <isdigit+0x110>
    ace3:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ace6:	48 63 d0             	movsxd rdx,eax
    ace9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    aced:	48 01 d0             	add    rax,rdx
    acf0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    acf3:	3c 38                	cmp    al,0x38
    acf5:	74 1b                	je     ad12 <isdigit+0x110>
    acf7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    acfa:	48 63 d0             	movsxd rdx,eax
    acfd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ad01:	48 01 d0             	add    rax,rdx
    ad04:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ad07:	3c 39                	cmp    al,0x39
    ad09:	74 07                	je     ad12 <isdigit+0x110>
    ad0b:	b8 00 00 00 00       	mov    eax,0x0
    ad10:	eb 24                	jmp    ad36 <isdigit+0x134>
    ad12:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    ad16:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ad19:	48 63 d8             	movsxd rbx,eax
    ad1c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ad20:	48 89 c7             	mov    rdi,rax
    ad23:	e8 88 78 ff ff       	call   25b0 <strlen@plt>
    ad28:	48 39 c3             	cmp    rbx,rax
    ad2b:	0f 82 ee fe ff ff    	jb     ac1f <isdigit+0x1d>
    ad31:	b8 01 00 00 00       	mov    eax,0x1
    ad36:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    ad3a:	c9                   	leave  
    ad3b:	c3                   	ret    

000000000000ad3c <assign_port_number>:
    ad3c:	f3 0f 1e fa          	endbr64 
    ad40:	55                   	push   rbp
    ad41:	48 89 e5             	mov    rbp,rsp
    ad44:	48 83 ec 10          	sub    rsp,0x10
    ad48:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ad4c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ad50:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad54:	48 89 c7             	mov    rdi,rax
    ad57:	e8 a6 fe ff ff       	call   ac02 <isdigit>
    ad5c:	84 c0                	test   al,al
    ad5e:	74 18                	je     ad78 <assign_port_number+0x3c>
    ad60:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad64:	48 89 c7             	mov    rdi,rax
    ad67:	e8 24 7b ff ff       	call   2890 <atoi@plt>
    ad6c:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    ad70:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    ad76:	eb 25                	jmp    ad9d <assign_port_number+0x61>
    ad78:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad7c:	48 8d 35 85 40 00 00 	lea    rsi,[rip+0x4085]        # ee08 <_IO_stdin_used+0x1e08>
    ad83:	48 89 c7             	mov    rdi,rax
    ad86:	e8 75 7a ff ff       	call   2800 <strcmp@plt>
    ad8b:	85 c0                	test   eax,eax
    ad8d:	75 0e                	jne    ad9d <assign_port_number+0x61>
    ad8f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad93:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    ad9a:	ff ff ff 
    ad9d:	90                   	nop
    ad9e:	c9                   	leave  
    ad9f:	c3                   	ret    

000000000000ada0 <check_port_number>:
    ada0:	f3 0f 1e fa          	endbr64 
    ada4:	55                   	push   rbp
    ada5:	48 89 e5             	mov    rbp,rsp
    ada8:	48 83 ec 10          	sub    rsp,0x10
    adac:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    adb0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adb4:	48 89 c7             	mov    rdi,rax
    adb7:	e8 46 fe ff ff       	call   ac02 <isdigit>
    adbc:	84 c0                	test   al,al
    adbe:	74 0e                	je     adce <check_port_number+0x2e>
    adc0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adc4:	48 89 c7             	mov    rdi,rax
    adc7:	e8 c4 7a ff ff       	call   2890 <atoi@plt>
    adcc:	eb 23                	jmp    adf1 <check_port_number+0x51>
    adce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    add2:	48 8d 35 2f 40 00 00 	lea    rsi,[rip+0x402f]        # ee08 <_IO_stdin_used+0x1e08>
    add9:	48 89 c7             	mov    rdi,rax
    addc:	e8 1f 7a ff ff       	call   2800 <strcmp@plt>
    ade1:	85 c0                	test   eax,eax
    ade3:	75 07                	jne    adec <check_port_number+0x4c>
    ade5:	b8 ff ff ff ff       	mov    eax,0xffffffff
    adea:	eb 05                	jmp    adf1 <check_port_number+0x51>
    adec:	b8 ff ff ff ff       	mov    eax,0xffffffff
    adf1:	c9                   	leave  
    adf2:	c3                   	ret    

000000000000adf3 <assign_protocol>:
    adf3:	f3 0f 1e fa          	endbr64 
    adf7:	55                   	push   rbp
    adf8:	48 89 e5             	mov    rbp,rsp
    adfb:	48 83 ec 10          	sub    rsp,0x10
    adff:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ae03:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ae07:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae0b:	48 8d 35 fa 3f 00 00 	lea    rsi,[rip+0x3ffa]        # ee0c <_IO_stdin_used+0x1e0c>
    ae12:	48 89 c7             	mov    rdi,rax
    ae15:	e8 e6 79 ff ff       	call   2800 <strcmp@plt>
    ae1a:	85 c0                	test   eax,eax
    ae1c:	75 10                	jne    ae2e <assign_protocol+0x3b>
    ae1e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae22:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    ae29:	ff ff ff 
    ae2c:	eb 73                	jmp    aea1 <assign_protocol+0xae>
    ae2e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae32:	48 8d 35 d7 3f 00 00 	lea    rsi,[rip+0x3fd7]        # ee10 <_IO_stdin_used+0x1e10>
    ae39:	48 89 c7             	mov    rdi,rax
    ae3c:	e8 bf 79 ff ff       	call   2800 <strcmp@plt>
    ae41:	85 c0                	test   eax,eax
    ae43:	75 10                	jne    ae55 <assign_protocol+0x62>
    ae45:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae49:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    ae50:	00 00 00 
    ae53:	eb 4c                	jmp    aea1 <assign_protocol+0xae>
    ae55:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae59:	48 8d 35 b5 3f 00 00 	lea    rsi,[rip+0x3fb5]        # ee15 <_IO_stdin_used+0x1e15>
    ae60:	48 89 c7             	mov    rdi,rax
    ae63:	e8 98 79 ff ff       	call   2800 <strcmp@plt>
    ae68:	85 c0                	test   eax,eax
    ae6a:	75 10                	jne    ae7c <assign_protocol+0x89>
    ae6c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae70:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    ae77:	00 00 00 
    ae7a:	eb 25                	jmp    aea1 <assign_protocol+0xae>
    ae7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae80:	48 8d 35 92 3f 00 00 	lea    rsi,[rip+0x3f92]        # ee19 <_IO_stdin_used+0x1e19>
    ae87:	48 89 c7             	mov    rdi,rax
    ae8a:	e8 71 79 ff ff       	call   2800 <strcmp@plt>
    ae8f:	85 c0                	test   eax,eax
    ae91:	75 0e                	jne    aea1 <assign_protocol+0xae>
    ae93:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae97:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    ae9e:	00 00 00 
    aea1:	90                   	nop
    aea2:	c9                   	leave  
    aea3:	c3                   	ret    

000000000000aea4 <get_ruletype>:
    aea4:	f3 0f 1e fa          	endbr64 
    aea8:	55                   	push   rbp
    aea9:	48 89 e5             	mov    rbp,rsp
    aeac:	48 83 ec 10          	sub    rsp,0x10
    aeb0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    aeb4:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    aeb8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aebc:	ba 09 00 00 00       	mov    edx,0x9
    aec1:	48 8d 35 55 3f 00 00 	lea    rsi,[rip+0x3f55]        # ee1d <_IO_stdin_used+0x1e1d>
    aec8:	48 89 c7             	mov    rdi,rax
    aecb:	e8 00 77 ff ff       	call   25d0 <strncmp@plt>
    aed0:	85 c0                	test   eax,eax
    aed2:	75 17                	jne    aeeb <get_ruletype+0x47>
    aed4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aed8:	48 8d 15 b0 a7 ff ff 	lea    rdx,[rip+0xffffffffffffa7b0]        # 568f <str_match_parser>
    aedf:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    aee6:	e9 82 00 00 00       	jmp    af6d <get_ruletype+0xc9>
    aeeb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aeef:	ba 04 00 00 00       	mov    edx,0x4
    aef4:	48 8d 35 2c 3f 00 00 	lea    rsi,[rip+0x3f2c]        # ee27 <_IO_stdin_used+0x1e27>
    aefb:	48 89 c7             	mov    rdi,rax
    aefe:	e8 cd 76 ff ff       	call   25d0 <strncmp@plt>
    af03:	85 c0                	test   eax,eax
    af05:	75 14                	jne    af1b <get_ruletype+0x77>
    af07:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    af0b:	48 8d 15 20 aa ff ff 	lea    rdx,[rip+0xffffffffffffaa20]        # 5932 <none>
    af12:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    af19:	eb 52                	jmp    af6d <get_ruletype+0xc9>
    af1b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af1f:	ba 04 00 00 00       	mov    edx,0x4
    af24:	48 8d 35 01 3f 00 00 	lea    rsi,[rip+0x3f01]        # ee2c <_IO_stdin_used+0x1e2c>
    af2b:	48 89 c7             	mov    rdi,rax
    af2e:	e8 9d 76 ff ff       	call   25d0 <strncmp@plt>
    af33:	85 c0                	test   eax,eax
    af35:	75 14                	jne    af4b <get_ruletype+0xa7>
    af37:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    af3b:	48 8d 15 07 aa ff ff 	lea    rdx,[rip+0xffffffffffffaa07]        # 5949 <pcre_match>
    af42:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    af49:	eb 22                	jmp    af6d <get_ruletype+0xc9>
    af4b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af4f:	48 89 c6             	mov    rsi,rax
    af52:	48 8d 3d d8 3e 00 00 	lea    rdi,[rip+0x3ed8]        # ee31 <_IO_stdin_used+0x1e31>
    af59:	b8 00 00 00 00       	mov    eax,0x0
    af5e:	e8 6d 75 ff ff       	call   24d0 <printf@plt>
    af63:	bf 01 00 00 00       	mov    edi,0x1
    af68:	e8 f3 77 ff ff       	call   2760 <exit@plt>
    af6d:	c9                   	leave  
    af6e:	c3                   	ret    

000000000000af6f <numeric_check>:
    af6f:	f3 0f 1e fa          	endbr64 
    af73:	55                   	push   rbp
    af74:	48 89 e5             	mov    rbp,rsp
    af77:	48 83 ec 30          	sub    rsp,0x30
    af7b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    af7f:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    af82:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    af86:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    af8a:	48 89 c7             	mov    rdi,rax
    af8d:	e8 70 fc ff ff       	call   ac02 <isdigit>
    af92:	84 c0                	test   al,al
    af94:	74 27                	je     afbd <numeric_check+0x4e>
    af96:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    af9a:	48 89 c7             	mov    rdi,rax
    af9d:	e8 ee 78 ff ff       	call   2890 <atoi@plt>
    afa2:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    afa5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    afa8:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    afab:	77 10                	ja     afbd <numeric_check+0x4e>
    afad:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    afb0:	48 98                	cdqe   
    afb2:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    afb6:	72 05                	jb     afbd <numeric_check+0x4e>
    afb8:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    afbb:	eb 05                	jmp    afc2 <numeric_check+0x53>
    afbd:	b8 ff ff ff ff       	mov    eax,0xffffffff
    afc2:	c9                   	leave  
    afc3:	c3                   	ret    

000000000000afc4 <sc_strip>:
    afc4:	f3 0f 1e fa          	endbr64 
    afc8:	55                   	push   rbp
    afc9:	48 89 e5             	mov    rbp,rsp
    afcc:	48 83 ec 10          	sub    rsp,0x10
    afd0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    afd4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afd8:	48 8d 35 69 3e 00 00 	lea    rsi,[rip+0x3e69]        # ee48 <_IO_stdin_used+0x1e48>
    afdf:	48 89 c7             	mov    rdi,rax
    afe2:	e8 09 75 ff ff       	call   24f0 <strcspn@plt>
    afe7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    afeb:	48 01 d0             	add    rax,rdx
    afee:	c6 00 00             	mov    BYTE PTR [rax],0x0
    aff1:	90                   	nop
    aff2:	c9                   	leave  
    aff3:	c3                   	ret    

000000000000aff4 <void_rule>:
    aff4:	f3 0f 1e fa          	endbr64 
    aff8:	55                   	push   rbp
    aff9:	48 89 e5             	mov    rbp,rsp
    affc:	48 83 ec 10          	sub    rsp,0x10
    b000:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    b004:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b008:	48 05 6e 03 00 00    	add    rax,0x36e
    b00e:	ba 0a 00 00 00       	mov    edx,0xa
    b013:	be 00 00 00 00       	mov    esi,0x0
    b018:	48 89 c7             	mov    rdi,rax
    b01b:	e8 00 76 ff ff       	call   2620 <memset@plt>
    b020:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b024:	48 05 68 03 00 00    	add    rax,0x368
    b02a:	ba 06 00 00 00       	mov    edx,0x6
    b02f:	be 00 00 00 00       	mov    esi,0x0
    b034:	48 89 c7             	mov    rdi,rax
    b037:	e8 e4 75 ff ff       	call   2620 <memset@plt>
    b03c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b040:	48 05 50 03 00 00    	add    rax,0x350
    b046:	ba 18 00 00 00       	mov    edx,0x18
    b04b:	be 00 00 00 00       	mov    esi,0x0
    b050:	48 89 c7             	mov    rdi,rax
    b053:	e8 c8 75 ff ff       	call   2620 <memset@plt>
    b058:	90                   	nop
    b059:	c9                   	leave  
    b05a:	c3                   	ret    

000000000000b05b <line_parser>:
    b05b:	f3 0f 1e fa          	endbr64 
    b05f:	55                   	push   rbp
    b060:	48 89 e5             	mov    rbp,rsp
    b063:	53                   	push   rbx
    b064:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    b06b:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    b072:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b079:	00 00 
    b07b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b07f:	31 c0                	xor    eax,eax
    b081:	8b 05 8d 6f 00 00    	mov    eax,DWORD PTR [rip+0x6f8d]        # 12014 <num_rules>
    b087:	83 c0 01             	add    eax,0x1
    b08a:	89 05 84 6f 00 00    	mov    DWORD PTR [rip+0x6f84],eax        # 12014 <num_rules>
    b090:	8b 05 7e 6f 00 00    	mov    eax,DWORD PTR [rip+0x6f7e]        # 12014 <num_rules>
    b096:	48 98                	cdqe   
    b098:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    b09f:	48 8d 15 3a 72 00 00 	lea    rdx,[rip+0x723a]        # 122e0 <rules>
    b0a6:	48 01 d0             	add    rax,rdx
    b0a9:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b0ad:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0b1:	ba 08 00 00 00       	mov    edx,0x8
    b0b6:	be 00 00 00 00       	mov    esi,0x0
    b0bb:	48 89 c7             	mov    rdi,rax
    b0be:	e8 5d 75 ff ff       	call   2620 <memset@plt>
    b0c3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0c7:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    b0ce:	ff ff ff 
    b0d1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0d5:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    b0dc:	ff ff ff 
    b0df:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0e3:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    b0ea:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0ee:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    b0f5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0f9:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    b100:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b104:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    b10b:	00 00 00 
    b10e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b112:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    b118:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b11c:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    b123:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b127:	48 89 c7             	mov    rdi,rax
    b12a:	e8 c5 fe ff ff       	call   aff4 <void_rule>
    b12f:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    b136:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    b13d:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    b144:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    b14b:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b152:	48 89 c7             	mov    rdi,rax
    b155:	e8 56 74 ff ff       	call   25b0 <strlen@plt>
    b15a:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b15d:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    b164:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    b16b:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    b172:	e9 98 0d 00 00       	jmp    bf0f <line_parser+0xeb4>
    b177:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b17a:	48 63 d0             	movsxd rdx,eax
    b17d:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b184:	48 01 d0             	add    rax,rdx
    b187:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b18a:	0f be c0             	movsx  eax,al
    b18d:	89 c7                	mov    edi,eax
    b18f:	e8 58 fa ff ff       	call   abec <delimit>
    b194:	83 f0 01             	xor    eax,0x1
    b197:	84 c0                	test   al,al
    b199:	74 04                	je     b19f <line_parser+0x144>
    b19b:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    b19f:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b1a2:	48 63 d0             	movsxd rdx,eax
    b1a5:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b1ac:	48 01 d0             	add    rax,rdx
    b1af:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b1b2:	0f be c0             	movsx  eax,al
    b1b5:	89 c7                	mov    edi,eax
    b1b7:	e8 30 fa ff ff       	call   abec <delimit>
    b1bc:	84 c0                	test   al,al
    b1be:	74 3f                	je     b1ff <line_parser+0x1a4>
    b1c0:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b1c3:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    b1c6:	75 37                	jne    b1ff <line_parser+0x1a4>
    b1c8:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b1cb:	48 63 d0             	movsxd rdx,eax
    b1ce:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b1d5:	48 01 d0             	add    rax,rdx
    b1d8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b1db:	3c 3a                	cmp    al,0x3a
    b1dd:	75 11                	jne    b1f0 <line_parser+0x195>
    b1df:	48 8d 3d 64 3c 00 00 	lea    rdi,[rip+0x3c64]        # ee4a <_IO_stdin_used+0x1e4a>
    b1e6:	b8 00 00 00 00       	mov    eax,0x0
    b1eb:	e8 e0 72 ff ff       	call   24d0 <printf@plt>
    b1f0:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    b1f4:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b1f7:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    b1fa:	e9 10 0d 00 00       	jmp    bf0f <line_parser+0xeb4>
    b1ff:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b202:	48 63 d0             	movsxd rdx,eax
    b205:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b20c:	48 01 d0             	add    rax,rdx
    b20f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b212:	0f be c0             	movsx  eax,al
    b215:	89 c7                	mov    edi,eax
    b217:	e8 d0 f9 ff ff       	call   abec <delimit>
    b21c:	84 c0                	test   al,al
    b21e:	74 08                	je     b228 <line_parser+0x1cd>
    b220:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    b223:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    b226:	75 18                	jne    b240 <line_parser+0x1e5>
    b228:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b22b:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    b22e:	0f 85 db 0c 00 00    	jne    bf0f <line_parser+0xeb4>
    b234:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    b237:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    b23a:	0f 84 cf 0c 00 00    	je     bf0f <line_parser+0xeb4>
    b240:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b243:	8d 50 ff             	lea    edx,[rax-0x1]
    b246:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    b249:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b250:	89 ce                	mov    esi,ecx
    b252:	48 89 c7             	mov    rdi,rax
    b255:	e8 12 f9 ff ff       	call   ab6c <substr>
    b25a:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    b25e:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    b265:	83 f0 01             	xor    eax,0x1
    b268:	84 c0                	test   al,al
    b26a:	0f 84 ea 02 00 00    	je     b55a <line_parser+0x4ff>
    b270:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b274:	48 8d 35 de 3b 00 00 	lea    rsi,[rip+0x3bde]        # ee59 <_IO_stdin_used+0x1e59>
    b27b:	48 89 c7             	mov    rdi,rax
    b27e:	e8 7d 75 ff ff       	call   2800 <strcmp@plt>
    b283:	85 c0                	test   eax,eax
    b285:	75 33                	jne    b2ba <line_parser+0x25f>
    b287:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    b28e:	83 f0 01             	xor    eax,0x1
    b291:	84 c0                	test   al,al
    b293:	74 25                	je     b2ba <line_parser+0x25f>
    b295:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    b29c:	83 f0 01             	xor    eax,0x1
    b29f:	84 c0                	test   al,al
    b2a1:	74 17                	je     b2ba <line_parser+0x25f>
    b2a3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b2a7:	48 8d 15 b7 a1 ff ff 	lea    rdx,[rip+0xffffffffffffa1b7]        # 5465 <stdout_alert>
    b2ae:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    b2b5:	e9 31 0c 00 00       	jmp    beeb <line_parser+0xe90>
    b2ba:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b2be:	48 8d 35 4b 3b 00 00 	lea    rsi,[rip+0x3b4b]        # ee10 <_IO_stdin_used+0x1e10>
    b2c5:	48 89 c7             	mov    rdi,rax
    b2c8:	e8 33 75 ff ff       	call   2800 <strcmp@plt>
    b2cd:	85 c0                	test   eax,eax
    b2cf:	74 45                	je     b316 <line_parser+0x2bb>
    b2d1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b2d5:	48 8d 35 30 3b 00 00 	lea    rsi,[rip+0x3b30]        # ee0c <_IO_stdin_used+0x1e0c>
    b2dc:	48 89 c7             	mov    rdi,rax
    b2df:	e8 1c 75 ff ff       	call   2800 <strcmp@plt>
    b2e4:	85 c0                	test   eax,eax
    b2e6:	74 2e                	je     b316 <line_parser+0x2bb>
    b2e8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b2ec:	48 8d 35 22 3b 00 00 	lea    rsi,[rip+0x3b22]        # ee15 <_IO_stdin_used+0x1e15>
    b2f3:	48 89 c7             	mov    rdi,rax
    b2f6:	e8 05 75 ff ff       	call   2800 <strcmp@plt>
    b2fb:	85 c0                	test   eax,eax
    b2fd:	74 17                	je     b316 <line_parser+0x2bb>
    b2ff:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b303:	48 8d 35 0f 3b 00 00 	lea    rsi,[rip+0x3b0f]        # ee19 <_IO_stdin_used+0x1e19>
    b30a:	48 89 c7             	mov    rdi,rax
    b30d:	e8 ee 74 ff ff       	call   2800 <strcmp@plt>
    b312:	85 c0                	test   eax,eax
    b314:	75 34                	jne    b34a <line_parser+0x2ef>
    b316:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    b31d:	83 f0 01             	xor    eax,0x1
    b320:	84 c0                	test   al,al
    b322:	74 26                	je     b34a <line_parser+0x2ef>
    b324:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    b32b:	83 f0 01             	xor    eax,0x1
    b32e:	84 c0                	test   al,al
    b330:	74 18                	je     b34a <line_parser+0x2ef>
    b332:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b336:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b33a:	48 89 d6             	mov    rsi,rdx
    b33d:	48 89 c7             	mov    rdi,rax
    b340:	e8 ae fa ff ff       	call   adf3 <assign_protocol>
    b345:	e9 a1 0b 00 00       	jmp    beeb <line_parser+0xe90>
    b34a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b34e:	48 89 c7             	mov    rdi,rax
    b351:	e8 ac f8 ff ff       	call   ac02 <isdigit>
    b356:	84 c0                	test   al,al
    b358:	75 17                	jne    b371 <line_parser+0x316>
    b35a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b35e:	48 8d 35 a3 3a 00 00 	lea    rsi,[rip+0x3aa3]        # ee08 <_IO_stdin_used+0x1e08>
    b365:	48 89 c7             	mov    rdi,rax
    b368:	e8 93 74 ff ff       	call   2800 <strcmp@plt>
    b36d:	85 c0                	test   eax,eax
    b36f:	75 34                	jne    b3a5 <line_parser+0x34a>
    b371:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    b378:	83 f0 01             	xor    eax,0x1
    b37b:	84 c0                	test   al,al
    b37d:	74 26                	je     b3a5 <line_parser+0x34a>
    b37f:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    b386:	83 f0 01             	xor    eax,0x1
    b389:	84 c0                	test   al,al
    b38b:	74 18                	je     b3a5 <line_parser+0x34a>
    b38d:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b391:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b395:	48 89 d6             	mov    rsi,rdx
    b398:	48 89 c7             	mov    rdi,rax
    b39b:	e8 9c f9 ff ff       	call   ad3c <assign_port_number>
    b3a0:	e9 46 0b 00 00       	jmp    beeb <line_parser+0xe90>
    b3a5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b3a9:	ba 08 00 00 00       	mov    edx,0x8
    b3ae:	48 8d 35 aa 3a 00 00 	lea    rsi,[rip+0x3aaa]        # ee5f <_IO_stdin_used+0x1e5f>
    b3b5:	48 89 c7             	mov    rdi,rax
    b3b8:	e8 13 72 ff ff       	call   25d0 <strncmp@plt>
    b3bd:	85 c0                	test   eax,eax
    b3bf:	75 75                	jne    b436 <line_parser+0x3db>
    b3c1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b3c5:	48 8d 50 09          	lea    rdx,[rax+0x9]
    b3c9:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b3cd:	48 89 d6             	mov    rsi,rdx
    b3d0:	48 89 c7             	mov    rdi,rax
    b3d3:	e8 e8 72 ff ff       	call   26c0 <strcpy@plt>
    b3d8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b3dc:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    b3df:	85 c0                	test   eax,eax
    b3e1:	75 2e                	jne    b411 <line_parser+0x3b6>
    b3e3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b3e7:	8b 00                	mov    eax,DWORD PTR [rax]
    b3e9:	85 c0                	test   eax,eax
    b3eb:	75 24                	jne    b411 <line_parser+0x3b6>
    b3ed:	8b 15 e1 db 12 00    	mov    edx,DWORD PTR [rip+0x12dbe1]        # 138fd4 <homenet>
    b3f3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b3f7:	89 10                	mov    DWORD PTR [rax],edx
    b3f9:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b3fd:	48 89 c7             	mov    rdi,rax
    b400:	e8 9b f9 ff ff       	call   ada0 <check_port_number>
    b405:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b409:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    b40c:	e9 da 0a 00 00       	jmp    beeb <line_parser+0xe90>
    b411:	8b 15 bd db 12 00    	mov    edx,DWORD PTR [rip+0x12dbbd]        # 138fd4 <homenet>
    b417:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b41b:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    b41e:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b422:	48 89 c7             	mov    rdi,rax
    b425:	e8 76 f9 ff ff       	call   ada0 <check_port_number>
    b42a:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b42e:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    b431:	e9 b5 0a 00 00       	jmp    beeb <line_parser+0xe90>
    b436:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b43a:	48 8d 35 27 3a 00 00 	lea    rsi,[rip+0x3a27]        # ee68 <_IO_stdin_used+0x1e68>
    b441:	48 89 c7             	mov    rdi,rax
    b444:	e8 b7 73 ff ff       	call   2800 <strcmp@plt>
    b449:	85 c0                	test   eax,eax
    b44b:	75 30                	jne    b47d <line_parser+0x422>
    b44d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b451:	8b 10                	mov    edx,DWORD PTR [rax]
    b453:	8b 05 7b db 12 00    	mov    eax,DWORD PTR [rip+0x12db7b]        # 138fd4 <homenet>
    b459:	39 c2                	cmp    edx,eax
    b45b:	75 10                	jne    b46d <line_parser+0x412>
    b45d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b461:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    b468:	e9 7e 0a 00 00       	jmp    beeb <line_parser+0xe90>
    b46d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b471:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    b478:	e9 6e 0a 00 00       	jmp    beeb <line_parser+0xe90>
    b47d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b481:	48 8d 35 e3 39 00 00 	lea    rsi,[rip+0x39e3]        # ee6b <_IO_stdin_used+0x1e6b>
    b488:	48 89 c7             	mov    rdi,rax
    b48b:	e8 70 73 ff ff       	call   2800 <strcmp@plt>
    b490:	85 c0                	test   eax,eax
    b492:	75 10                	jne    b4a4 <line_parser+0x449>
    b494:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b498:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    b49f:	e9 47 0a 00 00       	jmp    beeb <line_parser+0xe90>
    b4a4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b4a8:	ba 0c 00 00 00       	mov    edx,0xc
    b4ad:	48 8d 35 ba 39 00 00 	lea    rsi,[rip+0x39ba]        # ee6e <_IO_stdin_used+0x1e6e>
    b4b4:	48 89 c7             	mov    rdi,rax
    b4b7:	e8 14 71 ff ff       	call   25d0 <strncmp@plt>
    b4bc:	85 c0                	test   eax,eax
    b4be:	75 7f                	jne    b53f <line_parser+0x4e4>
    b4c0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b4c4:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    b4c8:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b4cc:	48 89 d6             	mov    rsi,rdx
    b4cf:	48 89 c7             	mov    rdi,rax
    b4d2:	e8 e9 71 ff ff       	call   26c0 <strcpy@plt>
    b4d7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b4db:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    b4de:	85 c0                	test   eax,eax
    b4e0:	75 37                	jne    b519 <line_parser+0x4be>
    b4e2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b4e6:	8b 10                	mov    edx,DWORD PTR [rax]
    b4e8:	8b 05 e6 da 12 00    	mov    eax,DWORD PTR [rip+0x12dae6]        # 138fd4 <homenet>
    b4ee:	39 c2                	cmp    edx,eax
    b4f0:	75 27                	jne    b519 <line_parser+0x4be>
    b4f2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b4f6:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    b4fd:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b501:	48 83 c0 01          	add    rax,0x1
    b505:	48 89 c7             	mov    rdi,rax
    b508:	e8 93 f8 ff ff       	call   ada0 <check_port_number>
    b50d:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b511:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    b514:	e9 d2 09 00 00       	jmp    beeb <line_parser+0xe90>
    b519:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b51d:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    b523:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b527:	48 83 c0 01          	add    rax,0x1
    b52b:	48 89 c7             	mov    rdi,rax
    b52e:	e8 6d f8 ff ff       	call   ada0 <check_port_number>
    b533:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b537:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    b53a:	e9 ac 09 00 00       	jmp    beeb <line_parser+0xe90>
    b53f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b543:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b546:	3c 28                	cmp    al,0x28
    b548:	0f 85 9d 09 00 00    	jne    beeb <line_parser+0xe90>
    b54e:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    b555:	e9 b5 09 00 00       	jmp    bf0f <line_parser+0xeb4>
    b55a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b55e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b561:	3c 28                	cmp    al,0x28
    b563:	75 0e                	jne    b573 <line_parser+0x518>
    b565:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b569:	48 83 c0 01          	add    rax,0x1
    b56d:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b571:	eb 08                	jmp    b57b <line_parser+0x520>
    b573:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b577:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b57b:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    b582:	0f 84 8e 00 00 00    	je     b616 <line_parser+0x5bb>
    b588:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b58c:	48 89 c7             	mov    rdi,rax
    b58f:	e8 1c 70 ff ff       	call   25b0 <strlen@plt>
    b594:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    b598:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b59c:	48 01 d0             	add    rax,rdx
    b59f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b5a2:	3c 3b                	cmp    al,0x3b
    b5a4:	75 36                	jne    b5dc <line_parser+0x581>
    b5a6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b5aa:	48 89 c7             	mov    rdi,rax
    b5ad:	e8 fe 6f ff ff       	call   25b0 <strlen@plt>
    b5b2:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    b5b6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b5ba:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    b5c1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b5c5:	48 89 c6             	mov    rsi,rax
    b5c8:	48 89 cf             	mov    rdi,rcx
    b5cb:	e8 70 70 ff ff       	call   2640 <strncat@plt>
    b5d0:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    b5d7:	e9 33 09 00 00       	jmp    bf0f <line_parser+0xeb4>
    b5dc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b5e0:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    b5e7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b5eb:	48 89 c6             	mov    rsi,rax
    b5ee:	48 89 d7             	mov    rdi,rdx
    b5f1:	e8 fa 72 ff ff       	call   28f0 <strcat@plt>
    b5f6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b5fa:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    b601:	48 89 df             	mov    rdi,rbx
    b604:	e8 a7 6f ff ff       	call   25b0 <strlen@plt>
    b609:	48 01 d8             	add    rax,rbx
    b60c:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    b611:	e9 d5 08 00 00       	jmp    beeb <line_parser+0xe90>
    b616:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    b61d:	74 7f                	je     b69e <line_parser+0x643>
    b61f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b623:	48 8d 35 51 38 00 00 	lea    rsi,[rip+0x3851]        # ee7b <_IO_stdin_used+0x1e7b>
    b62a:	48 89 c7             	mov    rdi,rax
    b62d:	e8 ee 6e ff ff       	call   2520 <strstr@plt>
    b632:	48 85 c0             	test   rax,rax
    b635:	74 33                	je     b66a <line_parser+0x60f>
    b637:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b63b:	48 89 c7             	mov    rdi,rax
    b63e:	e8 6d 6f ff ff       	call   25b0 <strlen@plt>
    b643:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    b647:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b64b:	48 8d 48 40          	lea    rcx,[rax+0x40]
    b64f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b653:	48 89 c6             	mov    rsi,rax
    b656:	48 89 cf             	mov    rdi,rcx
    b659:	e8 e2 6f ff ff       	call   2640 <strncat@plt>
    b65e:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    b665:	e9 a5 08 00 00       	jmp    bf0f <line_parser+0xeb4>
    b66a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b66e:	48 8d 50 40          	lea    rdx,[rax+0x40]
    b672:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b676:	48 89 c6             	mov    rsi,rax
    b679:	48 89 d7             	mov    rdi,rdx
    b67c:	e8 6f 72 ff ff       	call   28f0 <strcat@plt>
    b681:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b685:	48 8d 58 40          	lea    rbx,[rax+0x40]
    b689:	48 89 df             	mov    rdi,rbx
    b68c:	e8 1f 6f ff ff       	call   25b0 <strlen@plt>
    b691:	48 01 d8             	add    rax,rbx
    b694:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    b699:	e9 4d 08 00 00       	jmp    beeb <line_parser+0xe90>
    b69e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b6a2:	ba 06 00 00 00       	mov    edx,0x6
    b6a7:	48 8d 35 d0 37 00 00 	lea    rsi,[rip+0x37d0]        # ee7e <_IO_stdin_used+0x1e7e>
    b6ae:	48 89 c7             	mov    rdi,rax
    b6b1:	e8 1a 6f ff ff       	call   25d0 <strncmp@plt>
    b6b6:	85 c0                	test   eax,eax
    b6b8:	75 37                	jne    b6f1 <line_parser+0x696>
    b6ba:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b6be:	48 89 c7             	mov    rdi,rax
    b6c1:	e8 ea 6e ff ff       	call   25b0 <strlen@plt>
    b6c6:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    b6ca:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b6ce:	48 8d 48 06          	lea    rcx,[rax+0x6]
    b6d2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b6d6:	48 83 c0 20          	add    rax,0x20
    b6da:	48 89 ce             	mov    rsi,rcx
    b6dd:	48 89 c7             	mov    rdi,rax
    b6e0:	e8 1b 6f ff ff       	call   2600 <strncpy@plt>
    b6e5:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    b6ec:	e9 fa 07 00 00       	jmp    beeb <line_parser+0xe90>
    b6f1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b6f5:	ba 05 00 00 00       	mov    edx,0x5
    b6fa:	48 8d 35 84 37 00 00 	lea    rsi,[rip+0x3784]        # ee85 <_IO_stdin_used+0x1e85>
    b701:	48 89 c7             	mov    rdi,rax
    b704:	e8 c7 6e ff ff       	call   25d0 <strncmp@plt>
    b709:	85 c0                	test   eax,eax
    b70b:	75 4d                	jne    b75a <line_parser+0x6ff>
    b70d:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    b714:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b718:	48 83 c0 05          	add    rax,0x5
    b71c:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    b720:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b724:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    b72b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b72f:	48 89 c6             	mov    rsi,rax
    b732:	48 89 d7             	mov    rdi,rdx
    b735:	e8 b6 71 ff ff       	call   28f0 <strcat@plt>
    b73a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b73e:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    b745:	48 89 df             	mov    rdi,rbx
    b748:	e8 63 6e ff ff       	call   25b0 <strlen@plt>
    b74d:	48 01 d8             	add    rax,rbx
    b750:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    b755:	e9 91 07 00 00       	jmp    beeb <line_parser+0xe90>
    b75a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b75e:	ba 06 00 00 00       	mov    edx,0x6
    b763:	48 8d 35 21 37 00 00 	lea    rsi,[rip+0x3721]        # ee8b <_IO_stdin_used+0x1e8b>
    b76a:	48 89 c7             	mov    rdi,rax
    b76d:	e8 5e 6e ff ff       	call   25d0 <strncmp@plt>
    b772:	85 c0                	test   eax,eax
    b774:	75 31                	jne    b7a7 <line_parser+0x74c>
    b776:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b77a:	48 89 c7             	mov    rdi,rax
    b77d:	e8 42 f8 ff ff       	call   afc4 <sc_strip>
    b782:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b786:	48 83 c0 06          	add    rax,0x6
    b78a:	48 89 c7             	mov    rdi,rax
    b78d:	e8 fe 70 ff ff       	call   2890 <atoi@plt>
    b792:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    b795:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b799:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    b79c:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    b7a2:	e9 44 07 00 00       	jmp    beeb <line_parser+0xe90>
    b7a7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b7ab:	ba 05 00 00 00       	mov    edx,0x5
    b7b0:	48 8d 35 db 36 00 00 	lea    rsi,[rip+0x36db]        # ee92 <_IO_stdin_used+0x1e92>
    b7b7:	48 89 c7             	mov    rdi,rax
    b7ba:	e8 11 6e ff ff       	call   25d0 <strncmp@plt>
    b7bf:	85 c0                	test   eax,eax
    b7c1:	75 3f                	jne    b802 <line_parser+0x7a7>
    b7c3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b7c7:	48 89 c7             	mov    rdi,rax
    b7ca:	e8 e1 6d ff ff       	call   25b0 <strlen@plt>
    b7cf:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    b7d3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b7d7:	48 8d 48 05          	lea    rcx,[rax+0x5]
    b7db:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b7df:	48 89 ce             	mov    rsi,rcx
    b7e2:	48 89 c7             	mov    rdi,rax
    b7e5:	e8 16 6e ff ff       	call   2600 <strncpy@plt>
    b7ea:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b7ee:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b7f2:	48 89 d6             	mov    rsi,rdx
    b7f5:	48 89 c7             	mov    rdi,rax
    b7f8:	e8 a7 f6 ff ff       	call   aea4 <get_ruletype>
    b7fd:	e9 e9 06 00 00       	jmp    beeb <line_parser+0xe90>
    b802:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b806:	ba 08 00 00 00       	mov    edx,0x8
    b80b:	48 8d 35 86 36 00 00 	lea    rsi,[rip+0x3686]        # ee98 <_IO_stdin_used+0x1e98>
    b812:	48 89 c7             	mov    rdi,rax
    b815:	e8 b6 6d ff ff       	call   25d0 <strncmp@plt>
    b81a:	85 c0                	test   eax,eax
    b81c:	0f 85 8f 00 00 00    	jne    b8b1 <line_parser+0x856>
    b822:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b826:	48 83 c0 08          	add    rax,0x8
    b82a:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    b82e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b832:	48 8d 35 42 36 00 00 	lea    rsi,[rip+0x3642]        # ee7b <_IO_stdin_used+0x1e7b>
    b839:	48 89 c7             	mov    rdi,rax
    b83c:	e8 df 6c ff ff       	call   2520 <strstr@plt>
    b841:	48 85 c0             	test   rax,rax
    b844:	74 30                	je     b876 <line_parser+0x81b>
    b846:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b84a:	48 89 c7             	mov    rdi,rax
    b84d:	e8 5e 6d ff ff       	call   25b0 <strlen@plt>
    b852:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    b856:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b85a:	48 8d 48 08          	lea    rcx,[rax+0x8]
    b85e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b862:	48 83 c0 40          	add    rax,0x40
    b866:	48 89 ce             	mov    rsi,rcx
    b869:	48 89 c7             	mov    rdi,rax
    b86c:	e8 8f 6d ff ff       	call   2600 <strncpy@plt>
    b871:	e9 75 06 00 00       	jmp    beeb <line_parser+0xe90>
    b876:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    b87d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b881:	48 8d 50 40          	lea    rdx,[rax+0x40]
    b885:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b889:	48 89 c6             	mov    rsi,rax
    b88c:	48 89 d7             	mov    rdi,rdx
    b88f:	e8 5c 70 ff ff       	call   28f0 <strcat@plt>
    b894:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b898:	48 8d 58 40          	lea    rbx,[rax+0x40]
    b89c:	48 89 df             	mov    rdi,rbx
    b89f:	e8 0c 6d ff ff       	call   25b0 <strlen@plt>
    b8a4:	48 01 d8             	add    rax,rbx
    b8a7:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    b8ac:	e9 3a 06 00 00       	jmp    beeb <line_parser+0xe90>
    b8b1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b8b5:	ba 04 00 00 00       	mov    edx,0x4
    b8ba:	48 8d 35 e0 35 00 00 	lea    rsi,[rip+0x35e0]        # eea1 <_IO_stdin_used+0x1ea1>
    b8c1:	48 89 c7             	mov    rdi,rax
    b8c4:	e8 07 6d ff ff       	call   25d0 <strncmp@plt>
    b8c9:	85 c0                	test   eax,eax
    b8cb:	0f 85 8e 00 00 00    	jne    b95f <line_parser+0x904>
    b8d1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b8d5:	48 8d 35 6c 35 00 00 	lea    rsi,[rip+0x356c]        # ee48 <_IO_stdin_used+0x1e48>
    b8dc:	48 89 c7             	mov    rdi,rax
    b8df:	e8 0c 6c ff ff       	call   24f0 <strcspn@plt>
    b8e4:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b8e8:	48 01 d0             	add    rax,rdx
    b8eb:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b8ee:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b8f2:	48 83 c0 04          	add    rax,0x4
    b8f6:	48 89 c7             	mov    rdi,rax
    b8f9:	e8 04 f3 ff ff       	call   ac02 <isdigit>
    b8fe:	84 c0                	test   al,al
    b900:	74 47                	je     b949 <line_parser+0x8ee>
    b902:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b906:	48 83 c0 04          	add    rax,0x4
    b90a:	48 89 c7             	mov    rdi,rax
    b90d:	e8 7e 6f ff ff       	call   2890 <atoi@plt>
    b912:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    b915:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    b919:	7e 18                	jle    b933 <line_parser+0x8d8>
    b91b:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    b91f:	7f 12                	jg     b933 <line_parser+0x8d8>
    b921:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b925:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    b928:	89 90 48 01 00 00    	mov    DWORD PTR [rax+0x148],edx
    b92e:	e9 b8 05 00 00       	jmp    beeb <line_parser+0xe90>
    b933:	48 8d 3d 6e 35 00 00 	lea    rdi,[rip+0x356e]        # eea8 <_IO_stdin_used+0x1ea8>
    b93a:	e8 41 6f ff ff       	call   2880 <puts@plt>
    b93f:	bf ff ff ff ff       	mov    edi,0xffffffff
    b944:	e8 17 6e ff ff       	call   2760 <exit@plt>
    b949:	48 8d 3d 80 35 00 00 	lea    rdi,[rip+0x3580]        # eed0 <_IO_stdin_used+0x1ed0>
    b950:	e8 2b 6f ff ff       	call   2880 <puts@plt>
    b955:	bf ff ff ff ff       	mov    edi,0xffffffff
    b95a:	e8 01 6e ff ff       	call   2760 <exit@plt>
    b95f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b963:	ba 06 00 00 00       	mov    edx,0x6
    b968:	48 8d 35 89 35 00 00 	lea    rsi,[rip+0x3589]        # eef8 <_IO_stdin_used+0x1ef8>
    b96f:	48 89 c7             	mov    rdi,rax
    b972:	e8 59 6c ff ff       	call   25d0 <strncmp@plt>
    b977:	85 c0                	test   eax,eax
    b979:	0f 85 9b 00 00 00    	jne    ba1a <line_parser+0x9bf>
    b97f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b983:	48 89 c7             	mov    rdi,rax
    b986:	e8 39 f6 ff ff       	call   afc4 <sc_strip>
    b98b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b98f:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    b995:	3d 80 00 00 00       	cmp    eax,0x80
    b99a:	75 58                	jne    b9f4 <line_parser+0x999>
    b99c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b9a0:	48 83 c0 06          	add    rax,0x6
    b9a4:	ba ff 00 00 00       	mov    edx,0xff
    b9a9:	be 00 00 00 00       	mov    esi,0x0
    b9ae:	48 89 c7             	mov    rdi,rax
    b9b1:	e8 b9 f5 ff ff       	call   af6f <numeric_check>
    b9b6:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    b9b9:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    b9bd:	75 16                	jne    b9d5 <line_parser+0x97a>
    b9bf:	48 8d 3d 39 35 00 00 	lea    rdi,[rip+0x3539]        # eeff <_IO_stdin_used+0x1eff>
    b9c6:	e8 b5 6e ff ff       	call   2880 <puts@plt>
    b9cb:	bf ff ff ff ff       	mov    edi,0xffffffff
    b9d0:	e8 8b 6d ff ff       	call   2760 <exit@plt>
    b9d5:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    b9d8:	89 c2                	mov    edx,eax
    b9da:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b9de:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    b9e4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b9e8:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    b9ef:	e9 f7 04 00 00       	jmp    beeb <line_parser+0xe90>
    b9f4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b9f8:	48 83 c0 20          	add    rax,0x20
    b9fc:	48 89 c6             	mov    rsi,rax
    b9ff:	48 8d 3d 12 35 00 00 	lea    rdi,[rip+0x3512]        # ef18 <_IO_stdin_used+0x1f18>
    ba06:	b8 00 00 00 00       	mov    eax,0x0
    ba0b:	e8 c0 6a ff ff       	call   24d0 <printf@plt>
    ba10:	bf ff ff ff ff       	mov    edi,0xffffffff
    ba15:	e8 46 6d ff ff       	call   2760 <exit@plt>
    ba1a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ba1e:	ba 06 00 00 00       	mov    edx,0x6
    ba23:	48 8d 35 25 35 00 00 	lea    rsi,[rip+0x3525]        # ef4f <_IO_stdin_used+0x1f4f>
    ba2a:	48 89 c7             	mov    rdi,rax
    ba2d:	e8 9e 6b ff ff       	call   25d0 <strncmp@plt>
    ba32:	85 c0                	test   eax,eax
    ba34:	0f 85 86 00 00 00    	jne    bac0 <line_parser+0xa65>
    ba3a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ba3e:	48 89 c7             	mov    rdi,rax
    ba41:	e8 7e f5 ff ff       	call   afc4 <sc_strip>
    ba46:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ba4a:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    ba50:	3d 80 00 00 00       	cmp    eax,0x80
    ba55:	75 58                	jne    baaf <line_parser+0xa54>
    ba57:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ba5b:	48 83 c0 06          	add    rax,0x6
    ba5f:	ba ff 00 00 00       	mov    edx,0xff
    ba64:	be 00 00 00 00       	mov    esi,0x0
    ba69:	48 89 c7             	mov    rdi,rax
    ba6c:	e8 fe f4 ff ff       	call   af6f <numeric_check>
    ba71:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    ba74:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    ba78:	75 16                	jne    ba90 <line_parser+0xa35>
    ba7a:	48 8d 3d d5 34 00 00 	lea    rdi,[rip+0x34d5]        # ef56 <_IO_stdin_used+0x1f56>
    ba81:	e8 fa 6d ff ff       	call   2880 <puts@plt>
    ba86:	bf ff ff ff ff       	mov    edi,0xffffffff
    ba8b:	e8 d0 6c ff ff       	call   2760 <exit@plt>
    ba90:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    ba93:	89 c2                	mov    edx,eax
    ba95:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ba99:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    ba9f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    baa3:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    baaa:	e9 3c 04 00 00       	jmp    beeb <line_parser+0xe90>
    baaf:	48 8d 3d ba 34 00 00 	lea    rdi,[rip+0x34ba]        # ef70 <_IO_stdin_used+0x1f70>
    bab6:	e8 c5 6d ff ff       	call   2880 <puts@plt>
    babb:	e9 2b 04 00 00       	jmp    beeb <line_parser+0xe90>
    bac0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bac4:	ba 08 00 00 00       	mov    edx,0x8
    bac9:	48 8d 35 d2 34 00 00 	lea    rsi,[rip+0x34d2]        # efa2 <_IO_stdin_used+0x1fa2>
    bad0:	48 89 c7             	mov    rdi,rax
    bad3:	e8 f8 6a ff ff       	call   25d0 <strncmp@plt>
    bad8:	85 c0                	test   eax,eax
    bada:	0f 85 8c 00 00 00    	jne    bb6c <line_parser+0xb11>
    bae0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bae4:	48 89 c7             	mov    rdi,rax
    bae7:	e8 d8 f4 ff ff       	call   afc4 <sc_strip>
    baec:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    baf0:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    baf6:	3d 80 00 00 00       	cmp    eax,0x80
    bafb:	75 59                	jne    bb56 <line_parser+0xafb>
    bafd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bb01:	48 83 c0 08          	add    rax,0x8
    bb05:	ba ff ff 00 00       	mov    edx,0xffff
    bb0a:	be 00 00 00 00       	mov    esi,0x0
    bb0f:	48 89 c7             	mov    rdi,rax
    bb12:	e8 58 f4 ff ff       	call   af6f <numeric_check>
    bb17:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    bb1a:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    bb1e:	75 16                	jne    bb36 <line_parser+0xadb>
    bb20:	48 8d 3d 84 34 00 00 	lea    rdi,[rip+0x3484]        # efab <_IO_stdin_used+0x1fab>
    bb27:	e8 54 6d ff ff       	call   2880 <puts@plt>
    bb2c:	bf ff ff ff ff       	mov    edi,0xffffffff
    bb31:	e8 2a 6c ff ff       	call   2760 <exit@plt>
    bb36:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    bb39:	89 c2                	mov    edx,eax
    bb3b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bb3f:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    bb46:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bb4a:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    bb51:	e9 95 03 00 00       	jmp    beeb <line_parser+0xe90>
    bb56:	48 8d 3d 6b 34 00 00 	lea    rdi,[rip+0x346b]        # efc8 <_IO_stdin_used+0x1fc8>
    bb5d:	e8 1e 6d ff ff       	call   2880 <puts@plt>
    bb62:	bf ff ff ff ff       	mov    edi,0xffffffff
    bb67:	e8 f4 6b ff ff       	call   2760 <exit@plt>
    bb6c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bb70:	ba 09 00 00 00       	mov    edx,0x9
    bb75:	48 8d 35 80 34 00 00 	lea    rsi,[rip+0x3480]        # effc <_IO_stdin_used+0x1ffc>
    bb7c:	48 89 c7             	mov    rdi,rax
    bb7f:	e8 4c 6a ff ff       	call   25d0 <strncmp@plt>
    bb84:	85 c0                	test   eax,eax
    bb86:	75 7a                	jne    bc02 <line_parser+0xba7>
    bb88:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bb8c:	48 89 c7             	mov    rdi,rax
    bb8f:	e8 30 f4 ff ff       	call   afc4 <sc_strip>
    bb94:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bb98:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    bb9e:	3d 80 00 00 00       	cmp    eax,0x80
    bba3:	0f 85 42 03 00 00    	jne    beeb <line_parser+0xe90>
    bba9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bbad:	48 83 c0 09          	add    rax,0x9
    bbb1:	ba ff ff 00 00       	mov    edx,0xffff
    bbb6:	be 00 00 00 00       	mov    esi,0x0
    bbbb:	48 89 c7             	mov    rdi,rax
    bbbe:	e8 ac f3 ff ff       	call   af6f <numeric_check>
    bbc3:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    bbc6:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    bbca:	75 16                	jne    bbe2 <line_parser+0xb87>
    bbcc:	48 8d 3d 33 34 00 00 	lea    rdi,[rip+0x3433]        # f006 <_IO_stdin_used+0x2006>
    bbd3:	e8 a8 6c ff ff       	call   2880 <puts@plt>
    bbd8:	bf ff ff ff ff       	mov    edi,0xffffffff
    bbdd:	e8 7e 6b ff ff       	call   2760 <exit@plt>
    bbe2:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    bbe5:	89 c2                	mov    edx,eax
    bbe7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bbeb:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    bbf2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bbf6:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    bbfd:	e9 e9 02 00 00       	jmp    beeb <line_parser+0xe90>
    bc02:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bc06:	ba 04 00 00 00       	mov    edx,0x4
    bc0b:	48 8d 35 10 34 00 00 	lea    rsi,[rip+0x3410]        # f022 <_IO_stdin_used+0x2022>
    bc12:	48 89 c7             	mov    rdi,rax
    bc15:	e8 b6 69 ff ff       	call   25d0 <strncmp@plt>
    bc1a:	85 c0                	test   eax,eax
    bc1c:	75 64                	jne    bc82 <line_parser+0xc27>
    bc1e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bc22:	48 89 c7             	mov    rdi,rax
    bc25:	e8 9a f3 ff ff       	call   afc4 <sc_strip>
    bc2a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bc2e:	48 83 c0 04          	add    rax,0x4
    bc32:	ba ff 00 00 00       	mov    edx,0xff
    bc37:	be 00 00 00 00       	mov    esi,0x0
    bc3c:	48 89 c7             	mov    rdi,rax
    bc3f:	e8 2b f3 ff ff       	call   af6f <numeric_check>
    bc44:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    bc47:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    bc4b:	75 16                	jne    bc63 <line_parser+0xc08>
    bc4d:	48 8d 3d d3 33 00 00 	lea    rdi,[rip+0x33d3]        # f027 <_IO_stdin_used+0x2027>
    bc54:	e8 27 6c ff ff       	call   2880 <puts@plt>
    bc59:	bf ff ff ff ff       	mov    edi,0xffffffff
    bc5e:	e8 fd 6a ff ff       	call   2760 <exit@plt>
    bc63:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    bc66:	89 c2                	mov    edx,eax
    bc68:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bc6c:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    bc72:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bc76:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    bc7d:	e9 69 02 00 00       	jmp    beeb <line_parser+0xe90>
    bc82:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bc86:	ba 07 00 00 00       	mov    edx,0x7
    bc8b:	48 8d 35 a7 33 00 00 	lea    rsi,[rip+0x33a7]        # f039 <_IO_stdin_used+0x2039>
    bc92:	48 89 c7             	mov    rdi,rax
    bc95:	e8 36 69 ff ff       	call   25d0 <strncmp@plt>
    bc9a:	85 c0                	test   eax,eax
    bc9c:	75 6e                	jne    bd0c <line_parser+0xcb1>
    bc9e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bca2:	48 89 c7             	mov    rdi,rax
    bca5:	e8 1a f3 ff ff       	call   afc4 <sc_strip>
    bcaa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bcae:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    bcb4:	83 f8 7e             	cmp    eax,0x7e
    bcb7:	75 3d                	jne    bcf6 <line_parser+0xc9b>
    bcb9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bcbd:	48 89 c7             	mov    rdi,rax
    bcc0:	e8 eb 68 ff ff       	call   25b0 <strlen@plt>
    bcc5:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    bcc9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bccd:	48 8d 48 07          	lea    rcx,[rax+0x7]
    bcd1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bcd5:	48 05 53 03 00 00    	add    rax,0x353
    bcdb:	48 89 ce             	mov    rsi,rcx
    bcde:	48 89 c7             	mov    rdi,rax
    bce1:	e8 1a 69 ff ff       	call   2600 <strncpy@plt>
    bce6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bcea:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    bcf1:	e9 f5 01 00 00       	jmp    beeb <line_parser+0xe90>
    bcf6:	48 8d 3d 4b 33 00 00 	lea    rdi,[rip+0x334b]        # f048 <_IO_stdin_used+0x2048>
    bcfd:	e8 7e 6b ff ff       	call   2880 <puts@plt>
    bd02:	bf ff ff ff ff       	mov    edi,0xffffffff
    bd07:	e8 54 6a ff ff       	call   2760 <exit@plt>
    bd0c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bd10:	ba 04 00 00 00       	mov    edx,0x4
    bd15:	48 8d 35 5d 33 00 00 	lea    rsi,[rip+0x335d]        # f079 <_IO_stdin_used+0x2079>
    bd1c:	48 89 c7             	mov    rdi,rax
    bd1f:	e8 ac 68 ff ff       	call   25d0 <strncmp@plt>
    bd24:	85 c0                	test   eax,eax
    bd26:	75 78                	jne    bda0 <line_parser+0xd45>
    bd28:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bd2c:	48 89 c7             	mov    rdi,rax
    bd2f:	e8 90 f2 ff ff       	call   afc4 <sc_strip>
    bd34:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bd38:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    bd3e:	83 f8 7e             	cmp    eax,0x7e
    bd41:	0f 85 a4 01 00 00    	jne    beeb <line_parser+0xe90>
    bd47:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bd4b:	48 83 c0 04          	add    rax,0x4
    bd4f:	ba ff ff ff ff       	mov    edx,0xffffffff
    bd54:	be 00 00 00 00       	mov    esi,0x0
    bd59:	48 89 c7             	mov    rdi,rax
    bd5c:	e8 0e f2 ff ff       	call   af6f <numeric_check>
    bd61:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    bd64:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    bd68:	75 16                	jne    bd80 <line_parser+0xd25>
    bd6a:	48 8d 3d 0d 33 00 00 	lea    rdi,[rip+0x330d]        # f07e <_IO_stdin_used+0x207e>
    bd71:	e8 0a 6b ff ff       	call   2880 <puts@plt>
    bd76:	bf ff ff ff ff       	mov    edi,0xffffffff
    bd7b:	e8 e0 69 ff ff       	call   2760 <exit@plt>
    bd80:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    bd83:	89 c2                	mov    edx,eax
    bd85:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bd89:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    bd90:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bd94:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    bd9b:	e9 4b 01 00 00       	jmp    beeb <line_parser+0xe90>
    bda0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bda4:	ba 06 00 00 00       	mov    edx,0x6
    bda9:	48 8d 35 e0 32 00 00 	lea    rsi,[rip+0x32e0]        # f090 <_IO_stdin_used+0x2090>
    bdb0:	48 89 c7             	mov    rdi,rax
    bdb3:	e8 18 68 ff ff       	call   25d0 <strncmp@plt>
    bdb8:	85 c0                	test   eax,eax
    bdba:	75 7c                	jne    be38 <line_parser+0xddd>
    bdbc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bdc0:	48 89 c7             	mov    rdi,rax
    bdc3:	e8 e8 67 ff ff       	call   25b0 <strlen@plt>
    bdc8:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    bdcc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bdd0:	48 8d 48 06          	lea    rcx,[rax+0x6]
    bdd4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bdd8:	48 05 10 02 00 00    	add    rax,0x210
    bdde:	48 89 ce             	mov    rsi,rcx
    bde1:	48 89 c7             	mov    rdi,rax
    bde4:	e8 17 68 ff ff       	call   2600 <strncpy@plt>
    bde9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bded:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    bdf4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bdf8:	48 05 d0 01 00 00    	add    rax,0x1d0
    bdfe:	ba 00 00 00 00       	mov    edx,0x0
    be03:	48 89 ce             	mov    rsi,rcx
    be06:	48 89 c7             	mov    rdi,rax
    be09:	e8 12 69 ff ff       	call   2720 <regcomp@plt>
    be0e:	85 c0                	test   eax,eax
    be10:	74 16                	je     be28 <line_parser+0xdcd>
    be12:	48 8d 3d 7f 32 00 00 	lea    rdi,[rip+0x327f]        # f098 <_IO_stdin_used+0x2098>
    be19:	e8 62 6a ff ff       	call   2880 <puts@plt>
    be1e:	bf ff ff ff ff       	mov    edi,0xffffffff
    be23:	e8 38 69 ff ff       	call   2760 <exit@plt>
    be28:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    be2c:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    be33:	e9 b3 00 00 00       	jmp    beeb <line_parser+0xe90>
    be38:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be3c:	ba 06 00 00 00       	mov    edx,0x6
    be41:	48 8d 35 75 32 00 00 	lea    rsi,[rip+0x3275]        # f0bd <_IO_stdin_used+0x20bd>
    be48:	48 89 c7             	mov    rdi,rax
    be4b:	e8 80 67 ff ff       	call   25d0 <strncmp@plt>
    be50:	85 c0                	test   eax,eax
    be52:	75 2a                	jne    be7e <line_parser+0xe23>
    be54:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be58:	48 89 c7             	mov    rdi,rax
    be5b:	e8 64 f1 ff ff       	call   afc4 <sc_strip>
    be60:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be64:	48 8d 48 06          	lea    rcx,[rax+0x6]
    be68:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    be6c:	ba 01 00 00 00       	mov    edx,0x1
    be71:	48 89 ce             	mov    rsi,rcx
    be74:	48 89 c7             	mov    rdi,rax
    be77:	e8 6c 03 00 00       	call   c1e8 <d_op_parser>
    be7c:	eb 6d                	jmp    beeb <line_parser+0xe90>
    be7e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be82:	ba 07 00 00 00       	mov    edx,0x7
    be87:	48 8d 35 36 32 00 00 	lea    rsi,[rip+0x3236]        # f0c4 <_IO_stdin_used+0x20c4>
    be8e:	48 89 c7             	mov    rdi,rax
    be91:	e8 3a 67 ff ff       	call   25d0 <strncmp@plt>
    be96:	85 c0                	test   eax,eax
    be98:	75 27                	jne    bec1 <line_parser+0xe66>
    be9a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be9e:	48 89 c7             	mov    rdi,rax
    bea1:	e8 1e f1 ff ff       	call   afc4 <sc_strip>
    bea6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    beaa:	48 83 c0 07          	add    rax,0x7
    beae:	48 89 c7             	mov    rdi,rax
    beb1:	e8 da 69 ff ff       	call   2890 <atoi@plt>
    beb6:	89 c2                	mov    edx,eax
    beb8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bebc:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    bebf:	eb 2a                	jmp    beeb <line_parser+0xe90>
    bec1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bec5:	ba 0b 00 00 00       	mov    edx,0xb
    beca:	48 8d 35 fb 31 00 00 	lea    rsi,[rip+0x31fb]        # f0cc <_IO_stdin_used+0x20cc>
    bed1:	48 89 c7             	mov    rdi,rax
    bed4:	e8 f7 66 ff ff       	call   25d0 <strncmp@plt>
    bed9:	85 c0                	test   eax,eax
    bedb:	75 0e                	jne    beeb <line_parser+0xe90>
    bedd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bee1:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    bee8:	00 00 00 
    beeb:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    beee:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    bef1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    bef5:	48 89 c7             	mov    rdi,rax
    bef8:	e8 b3 66 ff ff       	call   25b0 <strlen@plt>
    befd:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    bf01:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    bf05:	48 01 d0             	add    rax,rdx
    bf08:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    bf0b:	3c 29                	cmp    al,0x29
    bf0d:	74 3d                	je     bf4c <line_parser+0xef1>
    bf0f:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    bf12:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    bf15:	7f 0c                	jg     bf23 <line_parser+0xec8>
    bf17:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    bf1a:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    bf1d:	0f 8e 54 f2 ff ff    	jle    b177 <line_parser+0x11c>
    bf23:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    bf2a:	83 f0 01             	xor    eax,0x1
    bf2d:	84 c0                	test   al,al
    bf2f:	74 1c                	je     bf4d <line_parser+0xef2>
    bf31:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bf35:	48 83 c0 20          	add    rax,0x20
    bf39:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    bf40:	6c 65 64 
    bf43:	48 89 18             	mov    QWORD PTR [rax],rbx
    bf46:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    bf4a:	eb 01                	jmp    bf4d <line_parser+0xef2>
    bf4c:	90                   	nop
    bf4d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    bf51:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    bf58:	00 00 
    bf5a:	74 05                	je     bf61 <line_parser+0xf06>
    bf5c:	e8 8f 67 ff ff       	call   26f0 <__stack_chk_fail@plt>
    bf61:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    bf65:	c9                   	leave  
    bf66:	c3                   	ret    

000000000000bf67 <rule_processor>:
    bf67:	f3 0f 1e fa          	endbr64 
    bf6b:	55                   	push   rbp
    bf6c:	48 89 e5             	mov    rbp,rsp
    bf6f:	48 83 ec 10          	sub    rsp,0x10
    bf73:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    bf7a:	eb 22                	jmp    bf9e <rule_processor+0x37>
    bf7c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    bf7f:	48 98                	cdqe   
    bf81:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    bf88:	48 8d 15 51 63 00 00 	lea    rdx,[rip+0x6351]        # 122e0 <rules>
    bf8f:	48 01 d0             	add    rax,rdx
    bf92:	48 89 c7             	mov    rdi,rax
    bf95:	e8 13 00 00 00       	call   bfad <process_rule>
    bf9a:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    bf9e:	8b 05 70 60 00 00    	mov    eax,DWORD PTR [rip+0x6070]        # 12014 <num_rules>
    bfa4:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    bfa7:	7e d3                	jle    bf7c <rule_processor+0x15>
    bfa9:	90                   	nop
    bfaa:	90                   	nop
    bfab:	c9                   	leave  
    bfac:	c3                   	ret    

000000000000bfad <process_rule>:
    bfad:	f3 0f 1e fa          	endbr64 
    bfb1:	55                   	push   rbp
    bfb2:	48 89 e5             	mov    rbp,rsp
    bfb5:	41 57                	push   r15
    bfb7:	41 56                	push   r14
    bfb9:	41 54                	push   r12
    bfbb:	53                   	push   rbx
    bfbc:	48 83 ec 40          	sub    rsp,0x40
    bfc0:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    bfc4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    bfcb:	00 00 
    bfcd:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    bfd1:	31 c0                	xor    eax,eax
    bfd3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bfd7:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    bfde:	83 f0 01             	xor    eax,0x1
    bfe1:	84 c0                	test   al,al
    bfe3:	0f 84 dd 01 00 00    	je     c1c6 <process_rule+0x219>
    bfe9:	48 89 e0             	mov    rax,rsp
    bfec:	49 89 c4             	mov    r12,rax
    bfef:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bff3:	48 83 c0 40          	add    rax,0x40
    bff7:	48 89 c7             	mov    rdi,rax
    bffa:	e8 b1 65 ff ff       	call   25b0 <strlen@plt>
    bfff:	48 83 c0 01          	add    rax,0x1
    c003:	48 01 c0             	add    rax,rax
    c006:	48 89 c2             	mov    rdx,rax
    c009:	48 83 ea 01          	sub    rdx,0x1
    c00d:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    c011:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    c015:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    c01c:	00 
    c01d:	49 89 c6             	mov    r14,rax
    c020:	41 bf 00 00 00 00    	mov    r15d,0x0
    c026:	ba 10 00 00 00       	mov    edx,0x10
    c02b:	48 83 ea 01          	sub    rdx,0x1
    c02f:	48 01 d0             	add    rax,rdx
    c032:	bb 10 00 00 00       	mov    ebx,0x10
    c037:	ba 00 00 00 00       	mov    edx,0x0
    c03c:	48 f7 f3             	div    rbx
    c03f:	48 6b c0 10          	imul   rax,rax,0x10
    c043:	48 89 c1             	mov    rcx,rax
    c046:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    c04d:	48 89 e2             	mov    rdx,rsp
    c050:	48 29 ca             	sub    rdx,rcx
    c053:	48 39 d4             	cmp    rsp,rdx
    c056:	74 12                	je     c06a <process_rule+0xbd>
    c058:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    c05f:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    c066:	00 00 
    c068:	eb e9                	jmp    c053 <process_rule+0xa6>
    c06a:	48 89 c2             	mov    rdx,rax
    c06d:	81 e2 ff 0f 00 00    	and    edx,0xfff
    c073:	48 29 d4             	sub    rsp,rdx
    c076:	48 89 c2             	mov    rdx,rax
    c079:	81 e2 ff 0f 00 00    	and    edx,0xfff
    c07f:	48 85 d2             	test   rdx,rdx
    c082:	74 10                	je     c094 <process_rule+0xe7>
    c084:	25 ff 0f 00 00       	and    eax,0xfff
    c089:	48 83 e8 08          	sub    rax,0x8
    c08d:	48 01 e0             	add    rax,rsp
    c090:	48 83 08 00          	or     QWORD PTR [rax],0x0
    c094:	48 89 e0             	mov    rax,rsp
    c097:	48 83 c0 00          	add    rax,0x0
    c09b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    c09f:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    c0a6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c0aa:	48 8d 50 40          	lea    rdx,[rax+0x40]
    c0ae:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c0b2:	48 05 c8 02 00 00    	add    rax,0x2c8
    c0b8:	48 89 d6             	mov    rsi,rdx
    c0bb:	48 89 c7             	mov    rdi,rax
    c0be:	e8 fd 65 ff ff       	call   26c0 <strcpy@plt>
    c0c3:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    c0ca:	e9 a4 00 00 00       	jmp    c173 <process_rule+0x1c6>
    c0cf:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    c0d3:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    c0d6:	48 98                	cdqe   
    c0d8:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    c0dd:	3c 7c                	cmp    al,0x7c
    c0df:	75 18                	jne    c0f9 <process_rule+0x14c>
    c0e1:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    c0e5:	74 09                	je     c0f0 <process_rule+0x143>
    c0e7:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    c0ee:	eb 7f                	jmp    c16f <process_rule+0x1c2>
    c0f0:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    c0f7:	eb 76                	jmp    c16f <process_rule+0x1c2>
    c0f9:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    c0fd:	75 3a                	jne    c139 <process_rule+0x18c>
    c0ff:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    c103:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    c106:	48 98                	cdqe   
    c108:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    c10d:	0f be c0             	movsx  eax,al
    c110:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    c113:	48 63 d2             	movsxd rdx,edx
    c116:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    c11a:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    c11e:	48 01 d1             	add    rcx,rdx
    c121:	89 c2                	mov    edx,eax
    c123:	48 8d 35 ae 2f 00 00 	lea    rsi,[rip+0x2fae]        # f0d8 <_IO_stdin_used+0x20d8>
    c12a:	48 89 cf             	mov    rdi,rcx
    c12d:	b8 00 00 00 00       	mov    eax,0x0
    c132:	e8 d9 63 ff ff       	call   2510 <sprintf@plt>
    c137:	eb 36                	jmp    c16f <process_rule+0x1c2>
    c139:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    c13d:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    c140:	48 98                	cdqe   
    c142:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    c147:	0f be c0             	movsx  eax,al
    c14a:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    c14d:	01 d2                	add    edx,edx
    c14f:	48 63 ca             	movsxd rcx,edx
    c152:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    c156:	48 01 d1             	add    rcx,rdx
    c159:	89 c2                	mov    edx,eax
    c15b:	48 8d 35 79 2f 00 00 	lea    rsi,[rip+0x2f79]        # f0db <_IO_stdin_used+0x20db>
    c162:	48 89 cf             	mov    rdi,rcx
    c165:	b8 00 00 00 00       	mov    eax,0x0
    c16a:	e8 a1 63 ff ff       	call   2510 <sprintf@plt>
    c16f:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    c173:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    c176:	48 63 d8             	movsxd rbx,eax
    c179:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c17d:	48 83 c0 40          	add    rax,0x40
    c181:	48 89 c7             	mov    rdi,rax
    c184:	e8 27 64 ff ff       	call   25b0 <strlen@plt>
    c189:	48 39 c3             	cmp    rbx,rax
    c18c:	0f 82 3d ff ff ff    	jb     c0cf <process_rule+0x122>
    c192:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c196:	48 83 c0 40          	add    rax,0x40
    c19a:	ba ff 00 00 00       	mov    edx,0xff
    c19f:	be 00 00 00 00       	mov    esi,0x0
    c1a4:	48 89 c7             	mov    rdi,rax
    c1a7:	e8 74 64 ff ff       	call   2620 <memset@plt>
    c1ac:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c1b0:	48 8d 50 40          	lea    rdx,[rax+0x40]
    c1b4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    c1b8:	48 89 c6             	mov    rsi,rax
    c1bb:	48 89 d7             	mov    rdi,rdx
    c1be:	e8 fd 64 ff ff       	call   26c0 <strcpy@plt>
    c1c3:	4c 89 e4             	mov    rsp,r12
    c1c6:	90                   	nop
    c1c7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c1cb:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    c1d2:	00 00 
    c1d4:	74 05                	je     c1db <process_rule+0x22e>
    c1d6:	e8 15 65 ff ff       	call   26f0 <__stack_chk_fail@plt>
    c1db:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    c1df:	5b                   	pop    rbx
    c1e0:	41 5c                	pop    r12
    c1e2:	41 5e                	pop    r14
    c1e4:	41 5f                	pop    r15
    c1e6:	5d                   	pop    rbp
    c1e7:	c3                   	ret    

000000000000c1e8 <d_op_parser>:
    c1e8:	f3 0f 1e fa          	endbr64 
    c1ec:	55                   	push   rbp
    c1ed:	48 89 e5             	mov    rbp,rsp
    c1f0:	48 83 ec 20          	sub    rsp,0x20
    c1f4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    c1f8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    c1fc:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    c1ff:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c203:	48 89 c7             	mov    rdi,rax
    c206:	e8 f7 e9 ff ff       	call   ac02 <isdigit>
    c20b:	84 c0                	test   al,al
    c20d:	74 23                	je     c232 <d_op_parser+0x4a>
    c20f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c213:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    c21a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c21e:	48 89 c7             	mov    rdi,rax
    c221:	e8 6a 66 ff ff       	call   2890 <atoi@plt>
    c226:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c22a:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c22d:	e9 59 01 00 00       	jmp    c38b <d_op_parser+0x1a3>
    c232:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c236:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c239:	0f b6 15 a0 2e 00 00 	movzx  edx,BYTE PTR [rip+0x2ea0]        # f0e0 <_IO_stdin_used+0x20e0>
    c240:	0f b6 c0             	movzx  eax,al
    c243:	0f b6 d2             	movzx  edx,dl
    c246:	29 d0                	sub    eax,edx
    c248:	85 c0                	test   eax,eax
    c24a:	75 27                	jne    c273 <d_op_parser+0x8b>
    c24c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c250:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    c257:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c25b:	48 83 c0 01          	add    rax,0x1
    c25f:	48 89 c7             	mov    rdi,rax
    c262:	e8 29 66 ff ff       	call   2890 <atoi@plt>
    c267:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c26b:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c26e:	e9 18 01 00 00       	jmp    c38b <d_op_parser+0x1a3>
    c273:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c277:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c27a:	0f b6 15 61 2e 00 00 	movzx  edx,BYTE PTR [rip+0x2e61]        # f0e2 <_IO_stdin_used+0x20e2>
    c281:	0f b6 c0             	movzx  eax,al
    c284:	0f b6 d2             	movzx  edx,dl
    c287:	29 d0                	sub    eax,edx
    c289:	85 c0                	test   eax,eax
    c28b:	75 27                	jne    c2b4 <d_op_parser+0xcc>
    c28d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c291:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    c298:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c29c:	48 83 c0 01          	add    rax,0x1
    c2a0:	48 89 c7             	mov    rdi,rax
    c2a3:	e8 e8 65 ff ff       	call   2890 <atoi@plt>
    c2a8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c2ac:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c2af:	e9 d7 00 00 00       	jmp    c38b <d_op_parser+0x1a3>
    c2b4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c2b8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c2bb:	0f b6 15 22 2e 00 00 	movzx  edx,BYTE PTR [rip+0x2e22]        # f0e4 <_IO_stdin_used+0x20e4>
    c2c2:	0f b6 c0             	movzx  eax,al
    c2c5:	0f b6 d2             	movzx  edx,dl
    c2c8:	29 d0                	sub    eax,edx
    c2ca:	85 c0                	test   eax,eax
    c2cc:	75 27                	jne    c2f5 <d_op_parser+0x10d>
    c2ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c2d2:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    c2d9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c2dd:	48 83 c0 01          	add    rax,0x1
    c2e1:	48 89 c7             	mov    rdi,rax
    c2e4:	e8 a7 65 ff ff       	call   2890 <atoi@plt>
    c2e9:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c2ed:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c2f0:	e9 96 00 00 00       	jmp    c38b <d_op_parser+0x1a3>
    c2f5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c2f9:	ba 02 00 00 00       	mov    edx,0x2
    c2fe:	48 8d 35 e1 2d 00 00 	lea    rsi,[rip+0x2de1]        # f0e6 <_IO_stdin_used+0x20e6>
    c305:	48 89 c7             	mov    rdi,rax
    c308:	e8 c3 62 ff ff       	call   25d0 <strncmp@plt>
    c30d:	85 c0                	test   eax,eax
    c30f:	75 24                	jne    c335 <d_op_parser+0x14d>
    c311:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c315:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    c31c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c320:	48 83 c0 02          	add    rax,0x2
    c324:	48 89 c7             	mov    rdi,rax
    c327:	e8 64 65 ff ff       	call   2890 <atoi@plt>
    c32c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c330:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c333:	eb 56                	jmp    c38b <d_op_parser+0x1a3>
    c335:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c339:	ba 02 00 00 00       	mov    edx,0x2
    c33e:	48 8d 35 a4 2d 00 00 	lea    rsi,[rip+0x2da4]        # f0e9 <_IO_stdin_used+0x20e9>
    c345:	48 89 c7             	mov    rdi,rax
    c348:	e8 83 62 ff ff       	call   25d0 <strncmp@plt>
    c34d:	85 c0                	test   eax,eax
    c34f:	75 24                	jne    c375 <d_op_parser+0x18d>
    c351:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c355:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    c35c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c360:	48 83 c0 02          	add    rax,0x2
    c364:	48 89 c7             	mov    rdi,rax
    c367:	e8 24 65 ff ff       	call   2890 <atoi@plt>
    c36c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c370:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c373:	eb 16                	jmp    c38b <d_op_parser+0x1a3>
    c375:	48 8d 3d 70 2d 00 00 	lea    rdi,[rip+0x2d70]        # f0ec <_IO_stdin_used+0x20ec>
    c37c:	e8 ff 64 ff ff       	call   2880 <puts@plt>
    c381:	bf ff ff ff ff       	mov    edi,0xffffffff
    c386:	e8 d5 63 ff ff       	call   2760 <exit@plt>
    c38b:	c9                   	leave  
    c38c:	c3                   	ret    

000000000000c38d <d_engine>:
    c38d:	f3 0f 1e fa          	endbr64 
    c391:	55                   	push   rbp
    c392:	48 89 e5             	mov    rbp,rsp
    c395:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    c399:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    c39d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c3a1:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    c3a4:	83 f8 ff             	cmp    eax,0xffffffff
    c3a7:	75 0a                	jne    c3b3 <d_engine+0x26>
    c3a9:	b8 01 00 00 00       	mov    eax,0x1
    c3ae:	e9 ea 00 00 00       	jmp    c49d <d_engine+0x110>
    c3b3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c3b7:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    c3ba:	2d a1 00 00 00       	sub    eax,0xa1
    c3bf:	83 f8 05             	cmp    eax,0x5
    c3c2:	0f 87 d0 00 00 00    	ja     c498 <d_engine+0x10b>
    c3c8:	89 c0                	mov    eax,eax
    c3ca:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    c3d1:	00 
    c3d2:	48 8d 05 2b 2d 00 00 	lea    rax,[rip+0x2d2b]        # f104 <_IO_stdin_used+0x2104>
    c3d9:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    c3dc:	48 98                	cdqe   
    c3de:	48 8d 15 1f 2d 00 00 	lea    rdx,[rip+0x2d1f]        # f104 <_IO_stdin_used+0x2104>
    c3e5:	48 01 d0             	add    rax,rdx
    c3e8:	3e ff e0             	notrack jmp rax
    c3eb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c3ef:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    c3f2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c3f6:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    c3f9:	39 c2                	cmp    edx,eax
    c3fb:	0f 85 87 00 00 00    	jne    c488 <d_engine+0xfb>
    c401:	b8 01 00 00 00       	mov    eax,0x1
    c406:	e9 92 00 00 00       	jmp    c49d <d_engine+0x110>
    c40b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c40f:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c412:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c416:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c419:	39 c2                	cmp    edx,eax
    c41b:	76 6e                	jbe    c48b <d_engine+0xfe>
    c41d:	b8 01 00 00 00       	mov    eax,0x1
    c422:	eb 79                	jmp    c49d <d_engine+0x110>
    c424:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c428:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c42b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c42f:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c432:	39 c2                	cmp    edx,eax
    c434:	72 58                	jb     c48e <d_engine+0x101>
    c436:	b8 01 00 00 00       	mov    eax,0x1
    c43b:	eb 60                	jmp    c49d <d_engine+0x110>
    c43d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c441:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c444:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c448:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c44b:	39 c2                	cmp    edx,eax
    c44d:	73 42                	jae    c491 <d_engine+0x104>
    c44f:	b8 01 00 00 00       	mov    eax,0x1
    c454:	eb 47                	jmp    c49d <d_engine+0x110>
    c456:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c45a:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c45d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c461:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c464:	39 c2                	cmp    edx,eax
    c466:	77 2c                	ja     c494 <d_engine+0x107>
    c468:	b8 01 00 00 00       	mov    eax,0x1
    c46d:	eb 2e                	jmp    c49d <d_engine+0x110>
    c46f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c473:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c476:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c47a:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c47d:	39 c2                	cmp    edx,eax
    c47f:	74 16                	je     c497 <d_engine+0x10a>
    c481:	b8 01 00 00 00       	mov    eax,0x1
    c486:	eb 15                	jmp    c49d <d_engine+0x110>
    c488:	90                   	nop
    c489:	eb 0d                	jmp    c498 <d_engine+0x10b>
    c48b:	90                   	nop
    c48c:	eb 0a                	jmp    c498 <d_engine+0x10b>
    c48e:	90                   	nop
    c48f:	eb 07                	jmp    c498 <d_engine+0x10b>
    c491:	90                   	nop
    c492:	eb 04                	jmp    c498 <d_engine+0x10b>
    c494:	90                   	nop
    c495:	eb 01                	jmp    c498 <d_engine+0x10b>
    c497:	90                   	nop
    c498:	b8 00 00 00 00       	mov    eax,0x0
    c49d:	5d                   	pop    rbp
    c49e:	c3                   	ret    

000000000000c49f <homenet_toi>:
    c49f:	f3 0f 1e fa          	endbr64 
    c4a3:	55                   	push   rbp
    c4a4:	48 89 e5             	mov    rbp,rsp
    c4a7:	53                   	push   rbx
    c4a8:	48 83 ec 38          	sub    rsp,0x38
    c4ac:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    c4b0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c4b7:	00 00 
    c4b9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    c4bd:	31 c0                	xor    eax,eax
    c4bf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c4c3:	48 8d 35 52 2c 00 00 	lea    rsi,[rip+0x2c52]        # f11c <_IO_stdin_used+0x211c>
    c4ca:	48 89 c7             	mov    rdi,rax
    c4cd:	e8 ce 63 ff ff       	call   28a0 <strtok@plt>
    c4d2:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    c4d6:	eb 4c                	jmp    c524 <homenet_toi+0x85>
    c4d8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    c4dc:	48 89 c7             	mov    rdi,rax
    c4df:	e8 ac 63 ff ff       	call   2890 <atoi@plt>
    c4e4:	89 c3                	mov    ebx,eax
    c4e6:	48 8d 45 df          	lea    rax,[rbp-0x21]
    c4ea:	48 89 c7             	mov    rdi,rax
    c4ed:	e8 be 60 ff ff       	call   25b0 <strlen@plt>
    c4f2:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    c4f6:	48 01 d0             	add    rax,rdx
    c4f9:	89 da                	mov    edx,ebx
    c4fb:	48 8d 35 1c 2c 00 00 	lea    rsi,[rip+0x2c1c]        # f11e <_IO_stdin_used+0x211e>
    c502:	48 89 c7             	mov    rdi,rax
    c505:	b8 00 00 00 00       	mov    eax,0x0
    c50a:	e8 01 60 ff ff       	call   2510 <sprintf@plt>
    c50f:	48 8d 35 06 2c 00 00 	lea    rsi,[rip+0x2c06]        # f11c <_IO_stdin_used+0x211c>
    c516:	bf 00 00 00 00       	mov    edi,0x0
    c51b:	e8 80 63 ff ff       	call   28a0 <strtok@plt>
    c520:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    c524:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    c529:	75 ad                	jne    c4d8 <homenet_toi+0x39>
    c52b:	48 8d 45 df          	lea    rax,[rbp-0x21]
    c52f:	ba 10 00 00 00       	mov    edx,0x10
    c534:	be 00 00 00 00       	mov    esi,0x0
    c539:	48 89 c7             	mov    rdi,rax
    c53c:	e8 cf 62 ff ff       	call   2810 <strtol@plt>
    c541:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    c545:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    c54c:	00 00 
    c54e:	74 05                	je     c555 <homenet_toi+0xb6>
    c550:	e8 9b 61 ff ff       	call   26f0 <__stack_chk_fail@plt>
    c555:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    c559:	c9                   	leave  
    c55a:	c3                   	ret    

000000000000c55b <tcp_check_sum_passed>:
    c55b:	f3 0f 1e fa          	endbr64 
    c55f:	55                   	push   rbp
    c560:	48 89 e5             	mov    rbp,rsp
    c563:	41 54                	push   r12
    c565:	53                   	push   rbx
    c566:	48 83 ec 30          	sub    rsp,0x30
    c56a:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    c56e:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    c572:	bb 00 00 00 00       	mov    ebx,0x0
    c577:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c57b:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    c57f:	0f b7 c0             	movzx  eax,ax
    c582:	89 c7                	mov    edi,eax
    c584:	e8 97 63 ff ff       	call   2920 <ntohs@plt>
    c589:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    c58d:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    c590:	83 e2 0f             	and    edx,0xf
    c593:	0f b6 d2             	movzx  edx,dl
    c596:	c1 e2 02             	shl    edx,0x2
    c599:	29 d0                	sub    eax,edx
    c59b:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    c59f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c5a3:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    c5a7:	0f b7 c0             	movzx  eax,ax
    c5aa:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    c5ae:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    c5b2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    c5b6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c5ba:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    c5c0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c5c4:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    c5c7:	c1 e8 10             	shr    eax,0x10
    c5ca:	89 c0                	mov    eax,eax
    c5cc:	0f b7 c0             	movzx  eax,ax
    c5cf:	48 01 c3             	add    rbx,rax
    c5d2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c5d6:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    c5d9:	89 c0                	mov    eax,eax
    c5db:	0f b7 c0             	movzx  eax,ax
    c5de:	48 01 c3             	add    rbx,rax
    c5e1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c5e5:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    c5e8:	c1 e8 10             	shr    eax,0x10
    c5eb:	89 c0                	mov    eax,eax
    c5ed:	0f b7 c0             	movzx  eax,ax
    c5f0:	48 01 c3             	add    rbx,rax
    c5f3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c5f7:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    c5fa:	89 c0                	mov    eax,eax
    c5fc:	0f b7 c0             	movzx  eax,ax
    c5ff:	48 01 c3             	add    rbx,rax
    c602:	bf 06 00 00 00       	mov    edi,0x6
    c607:	e8 d4 5e ff ff       	call   24e0 <htons@plt>
    c60c:	0f b7 c0             	movzx  eax,ax
    c60f:	48 01 c3             	add    rbx,rax
    c612:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    c616:	89 c7                	mov    edi,eax
    c618:	e8 c3 5e ff ff       	call   24e0 <htons@plt>
    c61d:	0f b7 c0             	movzx  eax,ax
    c620:	48 01 c3             	add    rbx,rax
    c623:	eb 1a                	jmp    c63f <tcp_check_sum_passed+0xe4>
    c625:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c629:	48 8d 50 14          	lea    rdx,[rax+0x14]
    c62d:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    c631:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c634:	0f b6 c0             	movzx  eax,al
    c637:	48 01 c3             	add    rbx,rax
    c63a:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    c63f:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    c644:	77 df                	ja     c625 <tcp_check_sum_passed+0xca>
    c646:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    c64b:	74 1d                	je     c66a <tcp_check_sum_passed+0x10f>
    c64d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c651:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c654:	0f b6 c0             	movzx  eax,al
    c657:	48 01 c3             	add    rbx,rax
    c65a:	eb 0e                	jmp    c66a <tcp_check_sum_passed+0x10f>
    c65c:	0f b7 c3             	movzx  eax,bx
    c65f:	48 c1 eb 10          	shr    rbx,0x10
    c663:	48 89 da             	mov    rdx,rbx
    c666:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    c66a:	48 89 d8             	mov    rax,rbx
    c66d:	48 c1 e8 10          	shr    rax,0x10
    c671:	48 85 c0             	test   rax,rax
    c674:	75 e6                	jne    c65c <tcp_check_sum_passed+0x101>
    c676:	48 f7 d3             	not    rbx
    c679:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c67d:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    c681:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    c685:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c689:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    c68d:	0f b7 c0             	movzx  eax,ax
    c690:	89 c7                	mov    edi,eax
    c692:	e8 89 62 ff ff       	call   2920 <ntohs@plt>
    c697:	44 0f b7 e0          	movzx  r12d,ax
    c69b:	89 d8                	mov    eax,ebx
    c69d:	0f b7 c0             	movzx  eax,ax
    c6a0:	89 c7                	mov    edi,eax
    c6a2:	e8 79 62 ff ff       	call   2920 <ntohs@plt>
    c6a7:	0f b7 c0             	movzx  eax,ax
    c6aa:	44 89 e2             	mov    edx,r12d
    c6ad:	89 c6                	mov    esi,eax
    c6af:	48 8d 3d 6d 2a 00 00 	lea    rdi,[rip+0x2a6d]        # f123 <_IO_stdin_used+0x2123>
    c6b6:	b8 00 00 00 00       	mov    eax,0x0
    c6bb:	e8 10 5e ff ff       	call   24d0 <printf@plt>
    c6c0:	89 d8                	mov    eax,ebx
    c6c2:	0f b7 c0             	movzx  eax,ax
    c6c5:	89 c7                	mov    edi,eax
    c6c7:	e8 54 62 ff ff       	call   2920 <ntohs@plt>
    c6cc:	89 c3                	mov    ebx,eax
    c6ce:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    c6d2:	0f b7 c0             	movzx  eax,ax
    c6d5:	89 c7                	mov    edi,eax
    c6d7:	e8 44 62 ff ff       	call   2920 <ntohs@plt>
    c6dc:	66 39 c3             	cmp    bx,ax
    c6df:	75 07                	jne    c6e8 <tcp_check_sum_passed+0x18d>
    c6e1:	b8 01 00 00 00       	mov    eax,0x1
    c6e6:	eb 05                	jmp    c6ed <tcp_check_sum_passed+0x192>
    c6e8:	b8 00 00 00 00       	mov    eax,0x0
    c6ed:	48 83 c4 30          	add    rsp,0x30
    c6f1:	5b                   	pop    rbx
    c6f2:	41 5c                	pop    r12
    c6f4:	5d                   	pop    rbp
    c6f5:	c3                   	ret    

000000000000c6f6 <run_hello_script>:
    c6f6:	f3 0f 1e fa          	endbr64 
    c6fa:	55                   	push   rbp
    c6fb:	48 89 e5             	mov    rbp,rsp
    c6fe:	48 83 ec 10          	sub    rsp,0x10
    c702:	e8 c9 60 ff ff       	call   27d0 <luaL_newstate@plt>
    c707:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c70b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c70f:	48 89 c7             	mov    rdi,rax
    c712:	e8 69 5f ff ff       	call   2680 <luaL_openlibs@plt>
    c717:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c71b:	ba 00 00 00 00       	mov    edx,0x0
    c720:	48 8d 35 11 2a 00 00 	lea    rsi,[rip+0x2a11]        # f138 <_IO_stdin_used+0x2138>
    c727:	48 89 c7             	mov    rdi,rax
    c72a:	e8 41 5e ff ff       	call   2570 <luaL_loadfilex@plt>
    c72f:	85 c0                	test   eax,eax
    c731:	75 2b                	jne    c75e <run_hello_script+0x68>
    c733:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c737:	41 b9 00 00 00 00    	mov    r9d,0x0
    c73d:	41 b8 00 00 00 00    	mov    r8d,0x0
    c743:	b9 00 00 00 00       	mov    ecx,0x0
    c748:	ba ff ff ff ff       	mov    edx,0xffffffff
    c74d:	be 00 00 00 00       	mov    esi,0x0
    c752:	48 89 c7             	mov    rdi,rax
    c755:	e8 76 61 ff ff       	call   28d0 <lua_pcallk@plt>
    c75a:	85 c0                	test   eax,eax
    c75c:	74 07                	je     c765 <run_hello_script+0x6f>
    c75e:	b8 01 00 00 00       	mov    eax,0x1
    c763:	eb 05                	jmp    c76a <run_hello_script+0x74>
    c765:	b8 00 00 00 00       	mov    eax,0x0
    c76a:	85 c0                	test   eax,eax
    c76c:	75 1e                	jne    c78c <run_hello_script+0x96>
    c76e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c772:	48 89 c7             	mov    rdi,rax
    c775:	e8 66 60 ff ff       	call   27e0 <lua_gettop@plt>
    c77a:	f7 d0                	not    eax
    c77c:	89 c2                	mov    edx,eax
    c77e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c782:	89 d6                	mov    esi,edx
    c784:	48 89 c7             	mov    rdi,rax
    c787:	e8 94 60 ff ff       	call   2820 <lua_settop@plt>
    c78c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c790:	48 89 c7             	mov    rdi,rax
    c793:	e8 78 5e ff ff       	call   2610 <lua_close@plt>
    c798:	90                   	nop
    c799:	c9                   	leave  
    c79a:	c3                   	ret    

000000000000c79b <collect_scripts>:
    c79b:	f3 0f 1e fa          	endbr64 
    c79f:	55                   	push   rbp
    c7a0:	48 89 e5             	mov    rbp,rsp
    c7a3:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    c7aa:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c7b1:	00 00 
    c7b3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c7b7:	31 c0                	xor    eax,eax
    c7b9:	48 8d 35 96 29 00 00 	lea    rsi,[rip+0x2996]        # f156 <_IO_stdin_used+0x2156>
    c7c0:	48 8d 3d 91 29 00 00 	lea    rdi,[rip+0x2991]        # f158 <_IO_stdin_used+0x2158>
    c7c7:	e8 64 5f ff ff       	call   2730 <fopen@plt>
    c7cc:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    c7d0:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    c7d5:	75 16                	jne    c7ed <collect_scripts+0x52>
    c7d7:	48 8d 3d 92 29 00 00 	lea    rdi,[rip+0x2992]        # f170 <_IO_stdin_used+0x2170>
    c7de:	e8 9d 60 ff ff       	call   2880 <puts@plt>
    c7e3:	bf ff ff ff ff       	mov    edi,0xffffffff
    c7e8:	e8 73 5f ff ff       	call   2760 <exit@plt>
    c7ed:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    c7f4:	00 00 00 00 
    c7f8:	48 8d 45 90          	lea    rax,[rbp-0x70]
    c7fc:	ba 00 00 00 00       	mov    edx,0x0
    c801:	48 8d 35 aa 29 00 00 	lea    rsi,[rip+0x29aa]        # f1b2 <_IO_stdin_used+0x21b2>
    c808:	48 89 c7             	mov    rdi,rax
    c80b:	e8 10 5f ff ff       	call   2720 <regcomp@plt>
    c810:	e9 86 00 00 00       	jmp    c89b <collect_scripts+0x100>
    c815:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c81c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c81f:	3c 23                	cmp    al,0x23
    c821:	75 02                	jne    c825 <collect_scripts+0x8a>
    c823:	eb 76                	jmp    c89b <collect_scripts+0x100>
    c825:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c82c:	ba 0e 00 00 00       	mov    edx,0xe
    c831:	48 8d 35 84 29 00 00 	lea    rsi,[rip+0x2984]        # f1bc <_IO_stdin_used+0x21bc>
    c838:	48 89 c7             	mov    rdi,rax
    c83b:	e8 90 5d ff ff       	call   25d0 <strncmp@plt>
    c840:	85 c0                	test   eax,eax
    c842:	75 34                	jne    c878 <collect_scripts+0xdd>
    c844:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c84b:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    c84f:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    c853:	48 89 d6             	mov    rsi,rdx
    c856:	48 89 c7             	mov    rdi,rax
    c859:	e8 62 5e ff ff       	call   26c0 <strcpy@plt>
    c85e:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    c862:	48 8d 35 62 29 00 00 	lea    rsi,[rip+0x2962]        # f1cb <_IO_stdin_used+0x21cb>
    c869:	48 89 c7             	mov    rdi,rax
    c86c:	e8 7f 5c ff ff       	call   24f0 <strcspn@plt>
    c871:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    c876:	eb 23                	jmp    c89b <collect_scripts+0x100>
    c878:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    c87f:	48 8d 45 90          	lea    rax,[rbp-0x70]
    c883:	41 b8 00 00 00 00    	mov    r8d,0x0
    c889:	b9 00 00 00 00       	mov    ecx,0x0
    c88e:	ba 00 00 00 00       	mov    edx,0x0
    c893:	48 89 c7             	mov    rdi,rax
    c896:	e8 d5 5e ff ff       	call   2770 <regexec@plt>
    c89b:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    c89f:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    c8a6:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    c8ad:	48 89 ce             	mov    rsi,rcx
    c8b0:	48 89 c7             	mov    rdi,rax
    c8b3:	e8 d8 5e ff ff       	call   2790 <getline@plt>
    c8b8:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    c8bc:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    c8c1:	0f 85 4e ff ff ff    	jne    c815 <collect_scripts+0x7a>
    c8c7:	90                   	nop
    c8c8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c8cc:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    c8d3:	00 00 
    c8d5:	74 05                	je     c8dc <collect_scripts+0x141>
    c8d7:	e8 14 5e ff ff       	call   26f0 <__stack_chk_fail@plt>
    c8dc:	c9                   	leave  
    c8dd:	c3                   	ret    

000000000000c8de <ip6decode>:
    c8de:	f3 0f 1e fa          	endbr64 
    c8e2:	55                   	push   rbp
    c8e3:	48 89 e5             	mov    rbp,rsp
    c8e6:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    c8ed:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    c8f4:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    c8fb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c902:	00 00 
    c904:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c908:	31 c0                	xor    eax,eax
    c90a:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c911:	48 83 c0 0e          	add    rax,0xe
    c915:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    c919:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    c91d:	48 83 c0 08          	add    rax,0x8
    c921:	48 89 c7             	mov    rdi,rax
    c924:	e8 0a 69 ff ff       	call   3233 <inet6_ntoa>
    c929:	48 89 c1             	mov    rcx,rax
    c92c:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    c930:	ba 29 00 00 00       	mov    edx,0x29
    c935:	48 89 ce             	mov    rsi,rcx
    c938:	48 89 c7             	mov    rdi,rax
    c93b:	e8 c0 5c ff ff       	call   2600 <strncpy@plt>
    c940:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    c944:	48 83 c0 18          	add    rax,0x18
    c948:	48 89 c7             	mov    rdi,rax
    c94b:	e8 e3 68 ff ff       	call   3233 <inet6_ntoa>
    c950:	48 89 c1             	mov    rcx,rax
    c953:	48 8d 45 90          	lea    rax,[rbp-0x70]
    c957:	ba 29 00 00 00       	mov    edx,0x29
    c95c:	48 89 ce             	mov    rsi,rcx
    c95f:	48 89 c7             	mov    rdi,rax
    c962:	e8 99 5c ff ff       	call   2600 <strncpy@plt>
    c967:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    c96b:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    c96f:	0f b6 c0             	movzx  eax,al
    c972:	85 c0                	test   eax,eax
    c974:	75 1c                	jne    c992 <ip6decode+0xb4>
    c976:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    c97a:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    c97e:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c985:	48 89 ce             	mov    rsi,rcx
    c988:	48 89 c7             	mov    rdi,rax
    c98b:	e8 3e 71 ff ff       	call   3ace <ip6_icmp_decode>
    c990:	eb 28                	jmp    c9ba <ip6decode+0xdc>
    c992:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    c996:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    c99a:	0f b6 c8             	movzx  ecx,al
    c99d:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    c9a1:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    c9a5:	48 89 c6             	mov    rsi,rax
    c9a8:	48 8d 3d 21 28 00 00 	lea    rdi,[rip+0x2821]        # f1d0 <_IO_stdin_used+0x21d0>
    c9af:	b8 00 00 00 00       	mov    eax,0x0
    c9b4:	e8 17 5b ff ff       	call   24d0 <printf@plt>
    c9b9:	90                   	nop
    c9ba:	90                   	nop
    c9bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c9bf:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    c9c6:	00 00 
    c9c8:	74 05                	je     c9cf <ip6decode+0xf1>
    c9ca:	e8 21 5d ff ff       	call   26f0 <__stack_chk_fail@plt>
    c9cf:	c9                   	leave  
    c9d0:	c3                   	ret    

000000000000c9d1 <crash_handler>:
    c9d1:	f3 0f 1e fa          	endbr64 
    c9d5:	55                   	push   rbp
    c9d6:	48 89 e5             	mov    rbp,rsp
    c9d9:	41 54                	push   r12
    c9db:	53                   	push   rbx
    c9dc:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    c9e3:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    c9e9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c9f0:	00 00 
    c9f2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    c9f6:	31 c0                	xor    eax,eax
    c9f8:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    c9ff:	be 14 00 00 00       	mov    esi,0x14
    ca04:	48 89 c7             	mov    rdi,rax
    ca07:	e8 44 5e ff ff       	call   2850 <backtrace@plt>
    ca0c:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    ca12:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    ca18:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    ca1f:	89 d6                	mov    esi,edx
    ca21:	48 89 c7             	mov    rdi,rax
    ca24:	e8 37 5e ff ff       	call   2860 <backtrace_symbols@plt>
    ca29:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    ca30:	b8 00 00 00 00       	mov    eax,0x0
    ca35:	e8 c5 69 ff ff       	call   33ff <get_formated_time>
    ca3a:	48 89 c6             	mov    rsi,rax
    ca3d:	48 8d 3d b4 27 00 00 	lea    rdi,[rip+0x27b4]        # f1f8 <_IO_stdin_used+0x21f8>
    ca44:	b8 00 00 00 00       	mov    eax,0x0
    ca49:	e8 82 5a ff ff       	call   24d0 <printf@plt>
    ca4e:	48 8d 3d d2 27 00 00 	lea    rdi,[rip+0x27d2]        # f227 <_IO_stdin_used+0x2227>
    ca55:	e8 26 5e ff ff       	call   2880 <puts@plt>
    ca5a:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    ca61:	00 
    ca62:	0f 84 56 01 00 00    	je     cbbe <crash_handler+0x1ed>
    ca68:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    ca6f:	00 00 00 
    ca72:	e9 35 01 00 00       	jmp    cbac <crash_handler+0x1db>
    ca77:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    ca7d:	48 98                	cdqe   
    ca7f:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    ca86:	00 
    ca87:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    ca8e:	48 01 d0             	add    rax,rdx
    ca91:	48 8b 00             	mov    rax,QWORD PTR [rax]
    ca94:	48 8d 35 a0 27 00 00 	lea    rsi,[rip+0x27a0]        # f23b <_IO_stdin_used+0x223b>
    ca9b:	48 89 c7             	mov    rdi,rax
    ca9e:	e8 7d 5a ff ff       	call   2520 <strstr@plt>
    caa3:	48 85 c0             	test   rax,rax
    caa6:	0f 85 f8 00 00 00    	jne    cba4 <crash_handler+0x1d3>
    caac:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    cab2:	48 98                	cdqe   
    cab4:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    cabb:	00 
    cabc:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    cac3:	48 01 d0             	add    rax,rdx
    cac6:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    cac9:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    cacf:	48 98                	cdqe   
    cad1:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    cad8:	00 
    cad9:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    cae0:	48 01 d0             	add    rax,rdx
    cae3:	48 8b 00             	mov    rax,QWORD PTR [rax]
    cae6:	be 2b 00 00 00       	mov    esi,0x2b
    caeb:	48 89 c7             	mov    rdi,rax
    caee:	e8 a7 6a ff ff       	call   359a <strloc>
    caf3:	48 98                	cdqe   
    caf5:	48 83 c0 01          	add    rax,0x1
    caf9:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    cafd:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    cb01:	48 8d 35 37 27 00 00 	lea    rsi,[rip+0x2737]        # f23f <_IO_stdin_used+0x223f>
    cb08:	48 89 c7             	mov    rdi,rax
    cb0b:	b8 00 00 00 00       	mov    eax,0x0
    cb10:	e8 fb 59 ff ff       	call   2510 <sprintf@plt>
    cb15:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    cb19:	be 29 00 00 00       	mov    esi,0x29
    cb1e:	48 89 c7             	mov    rdi,rax
    cb21:	e8 74 6a ff ff       	call   359a <strloc>
    cb26:	48 98                	cdqe   
    cb28:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    cb2d:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    cb31:	ba 10 00 00 00       	mov    edx,0x10
    cb36:	be 00 00 00 00       	mov    esi,0x0
    cb3b:	48 89 c7             	mov    rdi,rax
    cb3e:	e8 cd 5c ff ff       	call   2810 <strtol@plt>
    cb43:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    cb49:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    cb4f:	89 c7                	mov    edi,eax
    cb51:	e8 09 01 00 00       	call   cc5f <offset_search>
    cb56:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    cb5d:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    cb64:	74 23                	je     cb89 <crash_handler+0x1b8>
    cb66:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    cb6d:	8b 95 1c ff ff ff    	mov    edx,DWORD PTR [rbp-0xe4]
    cb73:	48 89 c6             	mov    rsi,rax
    cb76:	48 8d 3d c6 26 00 00 	lea    rdi,[rip+0x26c6]        # f243 <_IO_stdin_used+0x2243>
    cb7d:	b8 00 00 00 00       	mov    eax,0x0
    cb82:	e8 49 59 ff ff       	call   24d0 <printf@plt>
    cb87:	eb 1c                	jmp    cba5 <crash_handler+0x1d4>
    cb89:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    cb8f:	89 c6                	mov    esi,eax
    cb91:	48 8d 3d c8 26 00 00 	lea    rdi,[rip+0x26c8]        # f260 <_IO_stdin_used+0x2260>
    cb98:	b8 00 00 00 00       	mov    eax,0x0
    cb9d:	e8 2e 59 ff ff       	call   24d0 <printf@plt>
    cba2:	eb 01                	jmp    cba5 <crash_handler+0x1d4>
    cba4:	90                   	nop
    cba5:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    cbac:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    cbb2:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    cbb8:	0f 8c b9 fe ff ff    	jl     ca77 <crash_handler+0xa6>
    cbbe:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    cbc5:	48 89 c7             	mov    rdi,rax
    cbc8:	e8 83 5b ff ff       	call   2750 <free@plt>
    cbcd:	48 8d 3d b6 26 00 00 	lea    rdi,[rip+0x26b6]        # f28a <_IO_stdin_used+0x228a>
    cbd4:	e8 a7 5c ff ff       	call   2880 <puts@plt>
    cbd9:	89 c6                	mov    esi,eax
    cbdb:	48 8d 3d b7 26 00 00 	lea    rdi,[rip+0x26b7]        # f299 <_IO_stdin_used+0x2299>
    cbe2:	b8 00 00 00 00       	mov    eax,0x0
    cbe7:	e8 e4 58 ff ff       	call   24d0 <printf@plt>
    cbec:	89 d8                	mov    eax,ebx
    cbee:	89 c6                	mov    esi,eax
    cbf0:	48 8d 3d b2 26 00 00 	lea    rdi,[rip+0x26b2]        # f2a9 <_IO_stdin_used+0x22a9>
    cbf7:	b8 00 00 00 00       	mov    eax,0x0
    cbfc:	e8 cf 58 ff ff       	call   24d0 <printf@plt>
    cc01:	89 d8                	mov    eax,ebx
    cc03:	89 c6                	mov    esi,eax
    cc05:	48 8d 3d ad 26 00 00 	lea    rdi,[rip+0x26ad]        # f2b9 <_IO_stdin_used+0x22b9>
    cc0c:	b8 00 00 00 00       	mov    eax,0x0
    cc11:	e8 ba 58 ff ff       	call   24d0 <printf@plt>
    cc16:	89 c8                	mov    eax,ecx
    cc18:	89 c6                	mov    esi,eax
    cc1a:	48 8d 3d a8 26 00 00 	lea    rdi,[rip+0x26a8]        # f2c9 <_IO_stdin_used+0x22c9>
    cc21:	b8 00 00 00 00       	mov    eax,0x0
    cc26:	e8 a5 58 ff ff       	call   24d0 <printf@plt>
    cc2b:	89 e0                	mov    eax,esp
    cc2d:	89 c6                	mov    esi,eax
    cc2f:	48 8d 3d a3 26 00 00 	lea    rdi,[rip+0x26a3]        # f2d9 <_IO_stdin_used+0x22d9>
    cc36:	b8 00 00 00 00       	mov    eax,0x0
    cc3b:	e8 90 58 ff ff       	call   24d0 <printf@plt>
    cc40:	89 e8                	mov    eax,ebp
    cc42:	89 c6                	mov    esi,eax
    cc44:	48 8d 3d 9e 26 00 00 	lea    rdi,[rip+0x269e]        # f2e9 <_IO_stdin_used+0x22e9>
    cc4b:	b8 00 00 00 00       	mov    eax,0x0
    cc50:	e8 7b 58 ff ff       	call   24d0 <printf@plt>
    cc55:	bf 01 00 00 00       	mov    edi,0x1
    cc5a:	e8 01 5b ff ff       	call   2760 <exit@plt>

000000000000cc5f <offset_search>:
    cc5f:	f3 0f 1e fa          	endbr64 
    cc63:	55                   	push   rbp
    cc64:	48 89 e5             	mov    rbp,rsp
    cc67:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    cc6a:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    cc71:	eb 44                	jmp    ccb7 <offset_search+0x58>
    cc73:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    cc76:	48 63 d0             	movsxd rdx,eax
    cc79:	48 89 d0             	mov    rax,rdx
    cc7c:	48 c1 e0 02          	shl    rax,0x2
    cc80:	48 01 d0             	add    rax,rdx
    cc83:	48 c1 e0 03          	shl    rax,0x3
    cc87:	48 8d 15 72 cb 12 00 	lea    rdx,[rip+0x12cb72]        # 139800 <fn_mem_map>
    cc8e:	48 01 d0             	add    rax,rdx
    cc91:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cc95:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cc99:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    cc9c:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    cc9f:	76 12                	jbe    ccb3 <offset_search+0x54>
    cca1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cca5:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    cca8:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    ccab:	73 06                	jae    ccb3 <offset_search+0x54>
    ccad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ccb1:	eb 14                	jmp    ccc7 <offset_search+0x68>
    ccb3:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    ccb7:	8b 05 43 f3 12 00    	mov    eax,DWORD PTR [rip+0x12f343]        # 13c000 <fn_num>
    ccbd:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    ccc0:	7c b1                	jl     cc73 <offset_search+0x14>
    ccc2:	b8 00 00 00 00       	mov    eax,0x0
    ccc7:	5d                   	pop    rbp
    ccc8:	c3                   	ret    

000000000000ccc9 <add_fn>:
    ccc9:	f3 0f 1e fa          	endbr64 
    cccd:	55                   	push   rbp
    ccce:	48 89 e5             	mov    rbp,rsp
    ccd1:	48 83 ec 20          	sub    rsp,0x20
    ccd5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    ccd9:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    ccdc:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    ccdf:	8b 05 1b f3 12 00    	mov    eax,DWORD PTR [rip+0x12f31b]        # 13c000 <fn_num>
    cce5:	8d 50 01             	lea    edx,[rax+0x1]
    cce8:	89 15 12 f3 12 00    	mov    DWORD PTR [rip+0x12f312],edx        # 13c000 <fn_num>
    ccee:	48 63 d0             	movsxd rdx,eax
    ccf1:	48 89 d0             	mov    rax,rdx
    ccf4:	48 c1 e0 02          	shl    rax,0x2
    ccf8:	48 01 d0             	add    rax,rdx
    ccfb:	48 c1 e0 03          	shl    rax,0x3
    ccff:	48 8d 15 fa ca 12 00 	lea    rdx,[rip+0x12cafa]        # 139800 <fn_mem_map>
    cd06:	48 01 d0             	add    rax,rdx
    cd09:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cd0d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cd11:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    cd15:	48 89 d6             	mov    rsi,rdx
    cd18:	48 89 c7             	mov    rdi,rax
    cd1b:	e8 a0 59 ff ff       	call   26c0 <strcpy@plt>
    cd20:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cd24:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    cd27:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    cd2a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cd2e:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    cd31:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    cd34:	90                   	nop
    cd35:	c9                   	leave  
    cd36:	c3                   	ret    

000000000000cd37 <print_mem_map>:
    cd37:	f3 0f 1e fa          	endbr64 
    cd3b:	55                   	push   rbp
    cd3c:	48 89 e5             	mov    rbp,rsp
    cd3f:	48 83 ec 10          	sub    rsp,0x10
    cd43:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    cd4a:	eb 4c                	jmp    cd98 <print_mem_map+0x61>
    cd4c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    cd4f:	48 63 d0             	movsxd rdx,eax
    cd52:	48 89 d0             	mov    rax,rdx
    cd55:	48 c1 e0 02          	shl    rax,0x2
    cd59:	48 01 d0             	add    rax,rdx
    cd5c:	48 c1 e0 03          	shl    rax,0x3
    cd60:	48 8d 15 99 ca 12 00 	lea    rdx,[rip+0x12ca99]        # 139800 <fn_mem_map>
    cd67:	48 01 d0             	add    rax,rdx
    cd6a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cd6e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cd72:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    cd75:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cd79:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    cd7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cd80:	48 89 c6             	mov    rsi,rax
    cd83:	48 8d 3d 76 25 00 00 	lea    rdi,[rip+0x2576]        # f300 <_IO_stdin_used+0x2300>
    cd8a:	b8 00 00 00 00       	mov    eax,0x0
    cd8f:	e8 3c 57 ff ff       	call   24d0 <printf@plt>
    cd94:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    cd98:	8b 05 62 f2 12 00    	mov    eax,DWORD PTR [rip+0x12f262]        # 13c000 <fn_num>
    cd9e:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    cda1:	7c a9                	jl     cd4c <print_mem_map+0x15>
    cda3:	90                   	nop
    cda4:	90                   	nop
    cda5:	c9                   	leave  
    cda6:	c3                   	ret    

000000000000cda7 <load_fn_mem_map>:
    cda7:	f3 0f 1e fa          	endbr64 
    cdab:	55                   	push   rbp
    cdac:	48 89 e5             	mov    rbp,rsp
    cdaf:	53                   	push   rbx
    cdb0:	48 83 ec 78          	sub    rsp,0x78
    cdb4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    cdbb:	00 00 
    cdbd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    cdc1:	31 c0                	xor    eax,eax
    cdc3:	48 8d 35 4e 25 00 00 	lea    rsi,[rip+0x254e]        # f318 <_IO_stdin_used+0x2318>
    cdca:	48 8d 3d 49 25 00 00 	lea    rdi,[rip+0x2549]        # f31a <_IO_stdin_used+0x231a>
    cdd1:	e8 5a 59 ff ff       	call   2730 <fopen@plt>
    cdd6:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    cdda:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    cddf:	75 16                	jne    cdf7 <load_fn_mem_map+0x50>
    cde1:	48 8d 3d 50 25 00 00 	lea    rdi,[rip+0x2550]        # f338 <_IO_stdin_used+0x2338>
    cde8:	e8 93 5a ff ff       	call   2880 <puts@plt>
    cded:	bf ff ff ff ff       	mov    edi,0xffffffff
    cdf2:	e8 69 59 ff ff       	call   2760 <exit@plt>
    cdf7:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    cdfe:	00 
    cdff:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    ce06:	00 
    ce07:	e9 db 00 00 00       	jmp    cee7 <load_fn_mem_map+0x140>
    ce0c:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    ce10:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    ce14:	48 8d 35 84 25 00 00 	lea    rsi,[rip+0x2584]        # f39f <_IO_stdin_used+0x239f>
    ce1b:	48 89 c7             	mov    rdi,rax
    ce1e:	e8 cd 56 ff ff       	call   24f0 <strcspn@plt>
    ce23:	48 01 d8             	add    rax,rbx
    ce26:	c6 00 00             	mov    BYTE PTR [rax],0x0
    ce29:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    ce30:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    ce34:	48 8d 35 66 25 00 00 	lea    rsi,[rip+0x2566]        # f3a1 <_IO_stdin_used+0x23a1>
    ce3b:	48 89 c7             	mov    rdi,rax
    ce3e:	e8 5d 5a ff ff       	call   28a0 <strtok@plt>
    ce43:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    ce47:	eb 7f                	jmp    cec8 <load_fn_mem_map+0x121>
    ce49:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    ce4d:	74 44                	je     ce93 <load_fn_mem_map+0xec>
    ce4f:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    ce53:	7f 59                	jg     ceae <load_fn_mem_map+0x107>
    ce55:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    ce59:	74 08                	je     ce63 <load_fn_mem_map+0xbc>
    ce5b:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    ce5f:	74 17                	je     ce78 <load_fn_mem_map+0xd1>
    ce61:	eb 4b                	jmp    ceae <load_fn_mem_map+0x107>
    ce63:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    ce67:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    ce6b:	48 89 d6             	mov    rsi,rdx
    ce6e:	48 89 c7             	mov    rdi,rax
    ce71:	e8 4a 58 ff ff       	call   26c0 <strcpy@plt>
    ce76:	eb 37                	jmp    ceaf <load_fn_mem_map+0x108>
    ce78:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    ce7c:	ba 10 00 00 00       	mov    edx,0x10
    ce81:	be 00 00 00 00       	mov    esi,0x0
    ce86:	48 89 c7             	mov    rdi,rax
    ce89:	e8 82 59 ff ff       	call   2810 <strtol@plt>
    ce8e:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    ce91:	eb 1c                	jmp    ceaf <load_fn_mem_map+0x108>
    ce93:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    ce97:	ba 10 00 00 00       	mov    edx,0x10
    ce9c:	be 00 00 00 00       	mov    esi,0x0
    cea1:	48 89 c7             	mov    rdi,rax
    cea4:	e8 67 59 ff ff       	call   2810 <strtol@plt>
    cea9:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    ceac:	eb 01                	jmp    ceaf <load_fn_mem_map+0x108>
    ceae:	90                   	nop
    ceaf:	48 8d 35 eb 24 00 00 	lea    rsi,[rip+0x24eb]        # f3a1 <_IO_stdin_used+0x23a1>
    ceb6:	bf 00 00 00 00       	mov    edi,0x0
    cebb:	e8 e0 59 ff ff       	call   28a0 <strtok@plt>
    cec0:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    cec4:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    cec8:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    cecd:	0f 85 76 ff ff ff    	jne    ce49 <load_fn_mem_map+0xa2>
    ced3:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    ced6:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    ced9:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    cedd:	89 ce                	mov    esi,ecx
    cedf:	48 89 c7             	mov    rdi,rax
    cee2:	e8 e2 fd ff ff       	call   ccc9 <add_fn>
    cee7:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    ceeb:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    ceef:	48 8d 45 98          	lea    rax,[rbp-0x68]
    cef3:	48 89 ce             	mov    rsi,rcx
    cef6:	48 89 c7             	mov    rdi,rax
    cef9:	e8 92 58 ff ff       	call   2790 <getline@plt>
    cefe:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    cf02:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    cf07:	0f 85 ff fe ff ff    	jne    ce0c <load_fn_mem_map+0x65>
    cf0d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    cf11:	48 89 c7             	mov    rdi,rax
    cf14:	e8 c7 57 ff ff       	call   26e0 <fclose@plt>
    cf19:	90                   	nop
    cf1a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    cf1e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    cf25:	00 00 
    cf27:	74 05                	je     cf2e <load_fn_mem_map+0x187>
    cf29:	e8 c2 57 ff ff       	call   26f0 <__stack_chk_fail@plt>
    cf2e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    cf32:	c9                   	leave  
    cf33:	c3                   	ret    

Disassembly of section .fini:

000000000000cf34 <_fini>:
    cf34:	f3 0f 1e fa          	endbr64 
    cf38:	48 83 ec 08          	sub    rsp,0x8
    cf3c:	48 83 c4 08          	add    rsp,0x8
    cf40:	c3                   	ret    

Disassembly of section .rodata:

000000000000d000 <_IO_stdin_used>:
    d000:	01 00                	add    DWORD PTR [rax],eax
    d002:	02 00                	add    al,BYTE PTR [rax]
    d004:	2f                   	(bad)  
    d005:	65 74 63             	gs je  d06b <_IO_stdin_used+0x6b>
    d008:	2f                   	(bad)  
    d009:	76 69                	jbe    d074 <_IO_stdin_used+0x74>
    d00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    d012:	69 6c 
    d014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    d018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    d01b:	76 61                	jbe    d07e <_IO_stdin_used+0x7e>
    d01d:	72 2f                	jb     d04e <_IO_stdin_used+0x4e>
    d01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    d020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d021:	67 2f                	addr32 (bad) 
    d023:	76 69                	jbe    d08e <_IO_stdin_used+0x8e>
    d025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    d02c:	6c 6f 
    d02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    d031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d032:	67 00 2f             	add    BYTE PTR [edi],ch
    d035:	65 74 63             	gs je  d09b <_IO_stdin_used+0x9b>
    d038:	2f                   	(bad)  
    d039:	76 69                	jbe    d0a4 <_IO_stdin_used+0xa4>
    d03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    d042:	74 73 
    d044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    d048:	66 00 00             	data16 add BYTE PTR [rax],al
    d04b:	00 00                	add    BYTE PTR [rax],al
    d04d:	00 00                	add    BYTE PTR [rax],al
    d04f:	00 1b                	add    BYTE PTR [rbx],bl
    d051:	5b                   	pop    rbx
    d052:	39 30                	cmp    DWORD PTR [rax],esi
    d054:	6d                   	ins    DWORD PTR es:[rdi],dx
    d055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    d096:	00 00                	add    BYTE PTR [rax],al
    d098:	42                   	rex.X
    d099:	41                   	rex.B
    d09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    d0a0:	46                   	rex.RX
    d0a1:	49                   	rex.WB
    d0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    d0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    d0ae:	68 65 72 6e 74       	push   0x746e7265
    d0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    d0b6:	61                   	(bad)  
    d0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    d0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    d0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d0bd:	74 6f                	je     d12e <_IO_stdin_used+0x12e>
    d0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    d0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    d0c6:	62                   	(bad)  
    d0c7:	65 72 00             	gs jb  d0ca <_IO_stdin_used+0xca>
    d0ca:	2f                   	(bad)  
    d0cb:	76 61                	jbe    d12e <_IO_stdin_used+0x12e>
    d0cd:	72 2f                	jb     d0fe <_IO_stdin_used+0xfe>
    d0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d0d1:	67 2f                	addr32 (bad) 
    d0d3:	76 69                	jbe    d13e <_IO_stdin_used+0x13e>
    d0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    d0dc:	6c 6f 
    d0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    d0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d0e2:	67 00 00             	add    BYTE PTR [eax],al
    d0e5:	00 00                	add    BYTE PTR [rax],al
    d0e7:	00 1b                	add    BYTE PTR [rbx],bl
    d0e9:	5b                   	pop    rbx
    d0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    d0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    d0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    d0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30d168 <_end+0x2e1d1160>
    d0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    d0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    d0f9:	30 00                	xor    BYTE PTR [rax],al
    d0fb:	00 00                	add    BYTE PTR [rax],al
    d0fd:	00 00                	add    BYTE PTR [rax],al
    d0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    d102:	4f 54                	rex.WRXB push r12
    d104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    d108:	50                   	push   rax
    d109:	3a 20                	cmp    ah,BYTE PTR [rax]
    d10b:	50                   	push   rax
    d10c:	52                   	push   rdx
    d10d:	4f                   	rex.WRXB
    d10e:	42                   	rex.X
    d10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    d112:	57                   	push   rdi
    d113:	68 6f 20 68 61       	push   0x6168206f
    d118:	73 20                	jae    d13a <_IO_stdin_used+0x13a>
    d11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    d11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    d122:	4f 54                	rex.WRXB push r12
    d124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    d128:	50                   	push   rax
    d129:	3a 20                	cmp    ah,BYTE PTR [rax]
    d12b:	57                   	push   rdi
    d12c:	68 6f 20 69 73       	push   0x7369206f
    d131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    d134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542110ad <_end+0x540d50a5>
    d13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dbb6 <_IO_stdin_used+0xbb6>
    d143:	00 00                	add    BYTE PTR [rax],al
    d145:	00 00                	add    BYTE PTR [rax],al
    d147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    d14a:	4f 54                	rex.WRXB push r12
    d14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    d150:	50                   	push   rax
    d151:	3a 20                	cmp    ah,BYTE PTR [rax]
    d153:	52                   	push   rdx
    d154:	45 50                	rex.RB push r8
    d156:	4c 59                	rex.WR pop rcx
    d158:	3a 20                	cmp    ah,BYTE PTR [rax]
    d15a:	25 73 20 69 73       	and    eax,0x73692073
    d15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    d162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500dbdb <_end+0x54ed1bd3>
    d168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    d171:	50                   	push   rax
    d172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    d175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    d178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    d17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    d180:	5b                   	pop    rbx
    d181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    d184:	4c                   	rex.WR
    d185:	4f                   	rex.WRXB
    d186:	4f 50                	rex.WRXB push r8
    d188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df201 <_end+0x3e1a31f9>
    d18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220d207 <_end+0x520d11ff>
    d194:	45 50                	rex.RB push r8
    d196:	4c 59                	rex.WR pop rcx
    d198:	20 00                	and    BYTE PTR [rax],al
    d19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    d19d:	4b                   	rex.WXB
    d19e:	4e                   	rex.WRX
    d19f:	4f 57                	rex.WRXB push r15
    d1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    d1a6:	50                   	push   rax
    d1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    d1aa:	4e                   	rex.WRX
    d1ab:	43 54                	rex.XB push r12
    d1ad:	49                   	rex.WB
    d1ae:	4f                   	rex.WRXB
    d1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # af21a <rules+0x9cf3a>
    d1b6:	00 00                	add    BYTE PTR [rax],al
    d1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    d1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    d1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    d1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    d1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    d1d1:	25 30 32 78 00       	and    eax,0x783230
    d1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    d1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    d1e1:	00 00                	add    BYTE PTR [rax],al
    d1e3:	00 00                	add    BYTE PTR [rax],al
    d1e5:	00 00                	add    BYTE PTR [rax],al
    d1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2579041d <_end+0x25654415>
    d1ed:	30 32                	xor    BYTE PTR [rdx],dh
    d1ef:	78 3a                	js     d22b <_IO_stdin_used+0x22b>
    d1f1:	25 30 32 78 25       	and    eax,0x25783230
    d1f6:	30 32                	xor    BYTE PTR [rdx],dh
    d1f8:	78 3a                	js     d234 <_IO_stdin_used+0x234>
    d1fa:	25 30 32 78 25       	and    eax,0x25783230
    d1ff:	30 32                	xor    BYTE PTR [rdx],dh
    d201:	78 3a                	js     d23d <_IO_stdin_used+0x23d>
    d203:	25 30 32 78 25       	and    eax,0x25783230
    d208:	30 32                	xor    BYTE PTR [rdx],dh
    d20a:	78 3a                	js     d246 <_IO_stdin_used+0x246>
    d20c:	25 30 32 78 25       	and    eax,0x25783230
    d211:	30 32                	xor    BYTE PTR [rdx],dh
    d213:	78 3a                	js     d24f <_IO_stdin_used+0x24f>
    d215:	25 30 32 78 25       	and    eax,0x25783230
    d21a:	30 32                	xor    BYTE PTR [rdx],dh
    d21c:	78 3a                	js     d258 <_IO_stdin_used+0x258>
    d21e:	25 30 32 78 25       	and    eax,0x25783230
    d223:	30 32                	xor    BYTE PTR [rdx],dh
    d225:	78 3a                	js     d261 <_IO_stdin_used+0x261>
    d227:	25 30 32 78 25       	and    eax,0x25783230
    d22c:	30 32                	xor    BYTE PTR [rdx],dh
    d22e:	78 00                	js     d230 <_IO_stdin_used+0x230>
    d230:	25 64 2d 25 30       	and    eax,0x30252d64
    d235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    d239:	30 32                	xor    BYTE PTR [rdx],dh
    d23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a650472 <_end+0x3a51446a>
    d242:	25 30 32 64 3a       	and    eax,0x3a643230
    d247:	25 30 32 64 00       	and    eax,0x643230
    d24c:	25 73 3a 20 25       	and    eax,0x25203a73
    d251:	73 0a                	jae    d25d <_IO_stdin_used+0x25d>
    d253:	00 00                	add    BYTE PTR [rax],al
    d255:	00 00                	add    BYTE PTR [rax],al
    d257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46f2d0 <_end+0x6f3332c8>
    d25d:	75 6e                	jne    d2cd <_IO_stdin_used+0x2cd>
    d25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    d263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    d26b:	76 34                	jbe    d2a1 <_IO_stdin_used+0x2a1>
    d26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    d270:	64 72 65             	fs jb  d2d8 <_IO_stdin_used+0x2d8>
    d273:	73 73                	jae    d2e8 <_IO_stdin_used+0x2e8>
    d275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    d279:	74 29                	je     d2a4 <_IO_stdin_used+0x2a4>
    d27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    d27d:	25 73 0a 00 00       	and    eax,0xa73
    d282:	00 00                	add    BYTE PTR [rax],al
    d284:	00 00                	add    BYTE PTR [rax],al
    d286:	00 00                	add    BYTE PTR [rax],al
    d288:	25 73 20 46 6f       	and    eax,0x6f462073
    d28d:	75 6e                	jne    d2fd <_IO_stdin_used+0x2fd>
    d28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    d293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    d29b:	76 34                	jbe    d2d1 <_IO_stdin_used+0x2d1>
    d29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    d2a0:	64 72 65             	fs jb  d308 <_IO_stdin_used+0x308>
    d2a3:	73 73                	jae    d318 <_IO_stdin_used+0x318>
    d2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    d2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    d2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    d2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    d2b1:	5b                   	pop    rbx
    d2b2:	34 6d                	xor    al,0x6d
    d2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173192d <_end+0x615f5925>
    d2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    d2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d2be:	74 65                	je     d325 <_IO_stdin_used+0x325>
    d2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    d2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    d2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    d2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520d340 <_end+0x250d1338>
    d2cd:	73 20                	jae    d2ef <_IO_stdin_used+0x2ef>
    d2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    d2d9:	50                   	push   rax
    d2da:	76 34                	jbe    d310 <_IO_stdin_used+0x310>
    d2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df355 <_end+0x3e1a334d>
    d2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250f35b <_end+0x723d3353>
    d2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d2e9:	74 6f                	je     d35a <_IO_stdin_used+0x35a>
    d2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    d2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    d2f2:	62                   	(bad)  
    d2f3:	65 72 20             	gs jb  d316 <_IO_stdin_used+0x316>
    d2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d2fb:	00 00                	add    BYTE PTR [rax],al
    d2fd:	00 00                	add    BYTE PTR [rax],al
    d2ff:	00 1b                	add    BYTE PTR [rbx],bl
    d301:	5b                   	pop    rbx
    d302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325d375 <_end+0x7312136d>
    d308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    d30b:	76 36                	jbe    d343 <_IO_stdin_used+0x343>
    d30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df386 <_end+0x3e1a337e>
    d313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900dd8c <_end+0x8ed1d84>
    d319:	49                   	rex.WB
    d31a:	43                   	rex.XB
    d31b:	4d 50                	rex.WRB push r8
    d31d:	76 36                	jbe    d355 <_IO_stdin_used+0x355>
    d31f:	20 00                	and    BYTE PTR [rax],al
    d321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    d324:	75 74                	jne    d39a <_IO_stdin_used+0x39a>
    d326:	65 72 20             	gs jb  d349 <_IO_stdin_used+0x349>
    d329:	53                   	push   rbx
    d32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    d32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    d333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d339:	6d                   	ins    DWORD PTR es:[rdi],dx
    d33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # ddb3 <_IO_stdin_used+0xdb3>
    d340:	4d 75 6c             	rex.WRB jne d3af <_IO_stdin_used+0x3af>
    d343:	74 69                	je     d3ae <_IO_stdin_used+0x3ae>
    d345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    d348:	74 20                	je     d36a <_IO_stdin_used+0x36a>
    d34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    d351:	72 
    d352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    d355:	70 6f                	jo     d3c6 <_IO_stdin_used+0x3c6>
    d357:	72 74                	jb     d3cd <_IO_stdin_used+0x3cd>
    d359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    d35c:	73 73                	jae    d3d1 <_IO_stdin_used+0x3d1>
    d35e:	61                   	(bad)  
    d35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    d364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    d367:	6c                   	ins    BYTE PTR es:[rdi],dx
    d368:	74 69                	je     d3d3 <_IO_stdin_used+0x3d3>
    d36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    d36d:	74 20                	je     d38f <_IO_stdin_used+0x38f>
    d36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    d373:	74 65                	je     d3da <_IO_stdin_used+0x3da>
    d375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d376:	65 72 20             	gs jb  d399 <_IO_stdin_used+0x399>
    d379:	51                   	push   rcx
    d37a:	75 65                	jne    d3e1 <_IO_stdin_used+0x3e1>
    d37c:	72 79                	jb     d3f7 <_IO_stdin_used+0x3f7>
    d37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    d388:	53                   	push   rbx
    d389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    d392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d394:	00 1b                	add    BYTE PTR [rbx],bl
    d396:	5b                   	pop    rbx
    d397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    d39a:	00 00                	add    BYTE PTR [rax],al
    d39c:	00 00                	add    BYTE PTR [rax],al
    d39e:	00 00                	add    BYTE PTR [rax],al
    d3a0:	54                   	push   rsp
    d3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    d3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    d3a9:	70 20                	jo     d3cb <_IO_stdin_used+0x3cb>
    d3ab:	72 65                	jb     d412 <_IO_stdin_used+0x412>
    d3ad:	71 75                	jno    d424 <_IO_stdin_used+0x424>
    d3af:	65 73 74             	gs jae d426 <_IO_stdin_used+0x426>
    d3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    d3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63fc32 <_end+0x6f503c2a>
    d3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    d3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    d3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    d3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    d3d8:	65 73 74             	gs jae d44f <_IO_stdin_used+0x44f>
    d3db:	61                   	(bad)  
    d3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    d3dd:	70 20                	jo     d3ff <_IO_stdin_used+0x3ff>
    d3df:	61                   	(bad)  
    d3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    d3e1:	65 72 74             	gs jb  d458 <_IO_stdin_used+0x458>
    d3e4:	73 29                	jae    d40f <_IO_stdin_used+0x40f>
    d3e6:	0a 00                	or     al,BYTE PTR [rax]
    d3e8:	50                   	push   rax
    d3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d3ea:	73 73                	jae    d45f <_IO_stdin_used+0x45f>
    d3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    d3f3:	61                   	(bad)  
    d3f4:	70 20                	jo     d416 <_IO_stdin_used+0x416>
    d3f6:	68 6f 73 74 20       	push   0x2074736f
    d3fb:	61                   	(bad)  
    d3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    d3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    d404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    d407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    d40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d210f85 <_end+0x6d0d4f7d>
    d412:	61                   	(bad)  
    d413:	74 63                	je     d478 <_IO_stdin_used+0x478>
    d415:	68 65 64 20 49       	push   0x49206465
    d41a:	43                   	rex.XB
    d41b:	4d 50                	rex.WRB push r8
    d41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    d420:	68 6f 2c 20 54       	push   0x54202c6f
    d425:	43 50                	rex.XB push r8
    d427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    d42a:	4e 2c 20             	rex.WRX sub al,0x20
    d42d:	54                   	push   rsp
    d42e:	43 50                	rex.XB push r8
    d430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    d433:	4b 2c 20             	rex.WXB sub al,0x20
    d436:	61                   	(bad)  
    d437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    d43c:	4d 50                	rex.WRB push r8
    d43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    d442:	65 73 74             	gs jae d4b9 <_IO_stdin_used+0x4b9>
    d445:	61                   	(bad)  
    d446:	6d                   	ins    DWORD PTR es:[rdi],dx
    d447:	70 20                	jo     d469 <_IO_stdin_used+0x469>
    d449:	72 65                	jb     d4b0 <_IO_stdin_used+0x4b0>
    d44b:	71 75                	jno    d4c2 <_IO_stdin_used+0x4c2>
    d44d:	65 73 74             	gs jae d4c4 <_IO_stdin_used+0x4c4>
    d450:	0a 00                	or     al,BYTE PTR [rax]
    d452:	61                   	(bad)  
    d453:	00 00                	add    BYTE PTR [rax],al
    d455:	00 00                	add    BYTE PTR [rax],al
    d457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d45a:	73 73                	jae    d4cf <_IO_stdin_used+0x4cf>
    d45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    d463:	61                   	(bad)  
    d464:	70 20                	jo     d486 <_IO_stdin_used+0x486>
    d466:	68 6f 73 74 20       	push   0x2074736f
    d46b:	61                   	(bad)  
    d46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    d474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    d477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    d47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f4f5 <_end+0x744e34ed>
    d482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d210ffb <_end+0x6d0d4ff3>
    d488:	61                   	(bad)  
    d489:	74 63                	je     d4ee <_IO_stdin_used+0x4ee>
    d48b:	68 65 64 20 49       	push   0x49206465
    d490:	43                   	rex.XB
    d491:	4d 50                	rex.WRB push r8
    d493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    d496:	68 6f 2c 20 54       	push   0x54202c6f
    d49b:	43 50                	rex.XB push r8
    d49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    d4a0:	4e 2c 20             	rex.WRX sub al,0x20
    d4a3:	54                   	push   rsp
    d4a4:	43 50                	rex.XB push r8
    d4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    d4a9:	4b 2c 20             	rex.WXB sub al,0x20
    d4ac:	61                   	(bad)  
    d4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    d4b2:	4d 50                	rex.WRB push r8
    d4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    d4b8:	65 73 74             	gs jae d52f <_IO_stdin_used+0x52f>
    d4bb:	61                   	(bad)  
    d4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4bd:	70 20                	jo     d4df <_IO_stdin_used+0x4df>
    d4bf:	72 65                	jb     d526 <_IO_stdin_used+0x526>
    d4c1:	71 75                	jno    d538 <_IO_stdin_used+0x538>
    d4c3:	65 73 74             	gs jae d53a <_IO_stdin_used+0x53a>
    d4c6:	0a 00                	or     al,BYTE PTR [rax]
    d4c8:	49 50                	rex.WB push r8
    d4ca:	76 34                	jbe    d500 <_IO_stdin_used+0x500>
    d4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df545 <_end+0x3e1a353d>
    d4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900df4b <_end+0x8ed1f43>
    d4d8:	49                   	rex.WB
    d4d9:	43                   	rex.XB
    d4da:	4d 50                	rex.WRB push r8
    d4dc:	20 00                	and    BYTE PTR [rax],al
    d4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    d4e1:	68 6f 20 72 65       	push   0x6572206f
    d4e6:	70 6c                	jo     d554 <_IO_stdin_used+0x554>
    d4e8:	79 00                	jns    d4ea <_IO_stdin_used+0x4ea>
    d4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    d4ee:	74 69                	je     d559 <_IO_stdin_used+0x559>
    d4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4f1:	61                   	(bad)  
    d4f2:	74 69                	je     d55d <_IO_stdin_used+0x55d>
    d4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    d4f9:	72 65                	jb     d560 <_IO_stdin_used+0x560>
    d4fb:	61                   	(bad)  
    d4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d4ff:	62                   	(bad)  
    d500:	6c                   	ins    BYTE PTR es:[rdi],dx
    d501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    d504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    d507:	74 77                	je     d580 <_IO_stdin_used+0x580>
    d509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d50a:	72 6b                	jb     d577 <_IO_stdin_used+0x577>
    d50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d50f:	72 65                	jb     d576 <_IO_stdin_used+0x576>
    d511:	61                   	(bad)  
    d512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d515:	62                   	(bad)  
    d516:	6c                   	ins    BYTE PTR es:[rdi],dx
    d517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d51a:	00 20                	add    BYTE PTR [rax],ah
    d51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d51e:	73 74                	jae    d594 <_IO_stdin_used+0x594>
    d520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d523:	72 65                	jb     d58a <_IO_stdin_used+0x58a>
    d525:	61                   	(bad)  
    d526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d529:	62                   	(bad)  
    d52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d52e:	00 20                	add    BYTE PTR [rax],ah
    d530:	50                   	push   rax
    d531:	72 6f                	jb     d5a2 <_IO_stdin_used+0x5a2>
    d533:	74 6f                	je     d5a4 <_IO_stdin_used+0x5a4>
    d535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d53b:	72 65                	jb     d5a2 <_IO_stdin_used+0x5a2>
    d53d:	61                   	(bad)  
    d53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d541:	62                   	(bad)  
    d542:	6c                   	ins    BYTE PTR es:[rdi],dx
    d543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d546:	00 20                	add    BYTE PTR [rax],ah
    d548:	50                   	push   rax
    d549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d54a:	72 74                	jb     d5c0 <_IO_stdin_used+0x5c0>
    d54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d54f:	72 65                	jb     d5b6 <_IO_stdin_used+0x5b6>
    d551:	61                   	(bad)  
    d552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d555:	62                   	(bad)  
    d556:	6c                   	ins    BYTE PTR es:[rdi],dx
    d557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d55a:	00 20                	add    BYTE PTR [rax],ah
    d55c:	46 72 61             	rex.RX jb d5c0 <_IO_stdin_used+0x5c0>
    d55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    d561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d563:	74 61                	je     d5c6 <_IO_stdin_used+0x5c6>
    d565:	74 69                	je     d5d0 <_IO_stdin_used+0x5d0>
    d567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    d56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    d572:	00 20                	add    BYTE PTR [rax],ah
    d574:	53                   	push   rbx
    d575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d576:	75 72                	jne    d5ea <_IO_stdin_used+0x5ea>
    d578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d57b:	52                   	push   rdx
    d57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d57d:	75 74                	jne    d5f3 <_IO_stdin_used+0x5f3>
    d57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    d583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    d58a:	00 
    d58b:	00 00                	add    BYTE PTR [rax],al
    d58d:	00 00                	add    BYTE PTR [rax],al
    d58f:	00 20                	add    BYTE PTR [rax],ah
    d591:	44                   	rex.R
    d592:	65 73 74             	gs jae d609 <_IO_stdin_used+0x609>
    d595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    d59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    d59f:	74 77                	je     d618 <_IO_stdin_used+0x618>
    d5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5a2:	72 6b                	jb     d60f <_IO_stdin_used+0x60f>
    d5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d5a7:	72 65                	jb     d60e <_IO_stdin_used+0x60e>
    d5a9:	61                   	(bad)  
    d5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d5ad:	62                   	(bad)  
    d5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d5b2:	00 00                	add    BYTE PTR [rax],al
    d5b4:	00 00                	add    BYTE PTR [rax],al
    d5b6:	00 00                	add    BYTE PTR [rax],al
    d5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    d5bc:	74 69                	je     d627 <_IO_stdin_used+0x627>
    d5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5bf:	61                   	(bad)  
    d5c0:	74 69                	je     d62b <_IO_stdin_used+0x62b>
    d5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    d5c7:	73 74                	jae    d63d <_IO_stdin_used+0x63d>
    d5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d5cc:	72 65                	jb     d633 <_IO_stdin_used+0x633>
    d5ce:	61                   	(bad)  
    d5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d5d2:	62                   	(bad)  
    d5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d5d7:	00 20                	add    BYTE PTR [rax],ah
    d5d9:	53                   	push   rbx
    d5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5db:	75 72                	jne    d64f <_IO_stdin_used+0x64f>
    d5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d5e2:	73 74                	jae    d658 <_IO_stdin_used+0x658>
    d5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    d5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5e9:	61                   	(bad)  
    d5ea:	74 65                	je     d651 <_IO_stdin_used+0x651>
    d5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    d5ef:	00 20                	add    BYTE PTR [rax],ah
    d5f1:	4e                   	rex.WRX
    d5f2:	65 74 77             	gs je  d66c <_IO_stdin_used+0x66c>
    d5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5f6:	72 6b                	jb     d663 <_IO_stdin_used+0x663>
    d5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    d603:	74 69                	je     d66e <_IO_stdin_used+0x66e>
    d605:	76 65                	jbe    d66c <_IO_stdin_used+0x66c>
    d607:	6c                   	ins    BYTE PTR es:[rdi],dx
    d608:	79 20                	jns    d62a <_IO_stdin_used+0x62a>
    d60a:	50                   	push   rax
    d60b:	72 6f                	jb     d67c <_IO_stdin_used+0x67c>
    d60d:	68 69 62 69 74       	push   0x74696269
    d612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    d616:	00 00                	add    BYTE PTR [rax],al
    d618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    d61b:	73 74                	jae    d691 <_IO_stdin_used+0x691>
    d61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d620:	6d                   	ins    DWORD PTR es:[rdi],dx
    d621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    d628:	74 69                	je     d693 <_IO_stdin_used+0x693>
    d62a:	76 65                	jbe    d691 <_IO_stdin_used+0x691>
    d62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d62d:	79 20                	jns    d64f <_IO_stdin_used+0x64f>
    d62f:	50                   	push   rax
    d630:	72 6f                	jb     d6a1 <_IO_stdin_used+0x6a1>
    d632:	68 69 62 69 74       	push   0x74696269
    d637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    d63b:	00 00                	add    BYTE PTR [rax],al
    d63d:	00 00                	add    BYTE PTR [rax],al
    d63f:	00 20                	add    BYTE PTR [rax],ah
    d641:	4e                   	rex.WRX
    d642:	65 74 77             	gs je  d6bc <_IO_stdin_used+0x6bc>
    d645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d646:	72 6b                	jb     d6b3 <_IO_stdin_used+0x6b3>
    d648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d64b:	72 65                	jb     d6b2 <_IO_stdin_used+0x6b2>
    d64d:	61                   	(bad)  
    d64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d651:	62                   	(bad)  
    d652:	6c                   	ins    BYTE PTR es:[rdi],dx
    d653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d657:	72 20                	jb     d679 <_IO_stdin_used+0x679>
    d659:	54                   	push   rsp
    d65a:	4f 53                	rex.WRXB push r11
    d65c:	20 29                	and    BYTE PTR [rcx],ch
    d65e:	00 20                	add    BYTE PTR [rax],ah
    d660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d662:	73 74                	jae    d6d8 <_IO_stdin_used+0x6d8>
    d664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d667:	72 65                	jb     d6ce <_IO_stdin_used+0x6ce>
    d669:	61                   	(bad)  
    d66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d66d:	62                   	(bad)  
    d66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d673:	72 20                	jb     d695 <_IO_stdin_used+0x695>
    d675:	54                   	push   rsp
    d676:	4f 53                	rex.WRXB push r11
    d678:	20 29                	and    BYTE PTR [rcx],ch
    d67a:	00 00                	add    BYTE PTR [rax],al
    d67c:	00 00                	add    BYTE PTR [rax],al
    d67e:	00 00                	add    BYTE PTR [rax],al
    d680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    d683:	6d                   	ins    DWORD PTR es:[rdi],dx
    d684:	6d                   	ins    DWORD PTR es:[rdi],dx
    d685:	75 6e                	jne    d6f5 <_IO_stdin_used+0x6f5>
    d687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    d68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d691:	6d                   	ins    DWORD PTR es:[rdi],dx
    d692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    d699:	74 69                	je     d704 <_IO_stdin_used+0x704>
    d69b:	76 65                	jbe    d702 <_IO_stdin_used+0x702>
    d69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    d69e:	79 20                	jns    d6c0 <_IO_stdin_used+0x6c0>
    d6a0:	50                   	push   rax
    d6a1:	72 6f                	jb     d712 <_IO_stdin_used+0x712>
    d6a3:	68 69 62 69 74       	push   0x74696269
    d6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    d6ac:	00 20                	add    BYTE PTR [rax],ah
    d6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d6b0:	73 74                	jae    d726 <_IO_stdin_used+0x726>
    d6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    d6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    d6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d6be:	56                   	push   rsi
    d6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    d6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6c7:	20 29                	and    BYTE PTR [rcx],ch
    d6c9:	00 00                	add    BYTE PTR [rax],al
    d6cb:	00 00                	add    BYTE PTR [rax],al
    d6cd:	00 00                	add    BYTE PTR [rax],al
    d6cf:	00 20                	add    BYTE PTR [rax],ah
    d6d1:	50                   	push   rax
    d6d2:	72 65                	jb     d739 <_IO_stdin_used+0x739>
    d6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    d6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d6dc:	43 75 74             	rex.XB jne d753 <_IO_stdin_used+0x753>
    d6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    d6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    d6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    d6ee:	00 20                	add    BYTE PTR [rax],ah
    d6f0:	55                   	push   rbp
    d6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    d6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    d701:	0a 00                	or     al,BYTE PTR [rax]
    d703:	00 00                	add    BYTE PTR [rax],al
    d705:	00 00                	add    BYTE PTR [rax],al
    d707:	00 20                	add    BYTE PTR [rax],ah
    d709:	53                   	push   rbx
    d70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d70b:	75 72                	jne    d77f <_IO_stdin_used+0x77f>
    d70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d710:	51                   	push   rcx
    d711:	75 65                	jne    d778 <_IO_stdin_used+0x778>
    d713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    d717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    d71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d71b:	77 20                	ja     d73d <_IO_stdin_used+0x73d>
    d71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    d720:	74 72                	je     d794 <_IO_stdin_used+0x794>
    d722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d723:	6c                   	ins    BYTE PTR es:[rdi],dx
    d724:	20 29                	and    BYTE PTR [rcx],ch
    d726:	00 20                	add    BYTE PTR [rax],ah
    d728:	52                   	push   rdx
    d729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    d730:	20 28 
    d732:	00 20                	add    BYTE PTR [rax],ah
    d734:	52                   	push   rdx
    d735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    d73c:	20 66 
    d73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d73f:	72 20                	jb     d761 <_IO_stdin_used+0x761>
    d741:	4e                   	rex.WRX
    d742:	65 74 77             	gs je  d7bc <_IO_stdin_used+0x7bc>
    d745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d746:	72 6b                	jb     d7b3 <_IO_stdin_used+0x7b3>
    d748:	20 29                	and    BYTE PTR [rcx],ch
    d74a:	00 20                	add    BYTE PTR [rax],ah
    d74c:	52                   	push   rdx
    d74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    d754:	20 66 
    d756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d757:	72 20                	jb     d779 <_IO_stdin_used+0x779>
    d759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d75b:	73 74                	jae    d7d1 <_IO_stdin_used+0x7d1>
    d75d:	20 29                	and    BYTE PTR [rcx],ch
    d75f:	00 20                	add    BYTE PTR [rax],ah
    d761:	52                   	push   rdx
    d762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    d769:	20 66 
    d76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d76c:	72 20                	jb     d78e <_IO_stdin_used+0x78e>
    d76e:	54                   	push   rsp
    d76f:	4f 53                	rex.WRXB push r11
    d771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    d774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    d778:	74 77                	je     d7f1 <_IO_stdin_used+0x7f1>
    d77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d77b:	72 6b                	jb     d7e8 <_IO_stdin_used+0x7e8>
    d77d:	20 29                	and    BYTE PTR [rcx],ch
    d77f:	00 20                	add    BYTE PTR [rax],ah
    d781:	52                   	push   rdx
    d782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    d789:	20 66 
    d78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d78c:	72 20                	jb     d7ae <_IO_stdin_used+0x7ae>
    d78e:	54                   	push   rsp
    d78f:	4f 53                	rex.WRXB push r11
    d791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    d794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    d798:	73 74                	jae    d80e <_IO_stdin_used+0x80e>
    d79a:	20 29                	and    BYTE PTR [rcx],ch
    d79c:	00 20                	add    BYTE PTR [rax],ah
    d79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    d7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d7a5:	71 75                	jno    d81c <_IO_stdin_used+0x81c>
    d7a7:	65 73 74             	gs jae d81e <_IO_stdin_used+0x81e>
    d7aa:	00 00                	add    BYTE PTR [rax],al
    d7ac:	00 00                	add    BYTE PTR [rax],al
    d7ae:	00 00                	add    BYTE PTR [rax],al
    d7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    d7b3:	62                   	(bad)  
    d7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    d7bb:	41 
    d7bc:	64 76 65             	fs jbe d824 <_IO_stdin_used+0x824>
    d7bf:	72 74                	jb     d835 <_IO_stdin_used+0x835>
    d7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    d7c8:	20 28                	and    BYTE PTR [rax],ch
    d7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    d7cc:	72 6d                	jb     d83b <_IO_stdin_used+0x83b>
    d7ce:	61                   	(bad)  
    d7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    d7d3:	75 74                	jne    d849 <_IO_stdin_used+0x849>
    d7d5:	65 72 20             	gs jb  d7f8 <_IO_stdin_used+0x7f8>
    d7d8:	41                   	rex.B
    d7d9:	64 76 65             	fs jbe d841 <_IO_stdin_used+0x841>
    d7dc:	72 74                	jb     d852 <_IO_stdin_used+0x852>
    d7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    d7e5:	20 29                	and    BYTE PTR [rcx],ch
    d7e7:	20 29                	and    BYTE PTR [rcx],ch
    d7e9:	0a 20                	or     ah,BYTE PTR [rax]
    d7eb:	00 00                	add    BYTE PTR [rax],al
    d7ed:	00 00                	add    BYTE PTR [rax],al
    d7ef:	00 20                	add    BYTE PTR [rax],ah
    d7f1:	52                   	push   rdx
    d7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7f3:	75 74                	jne    d869 <_IO_stdin_used+0x869>
    d7f5:	65 72 20             	gs jb  d818 <_IO_stdin_used+0x818>
    d7f8:	41                   	rex.B
    d7f9:	64 76 65             	fs jbe d861 <_IO_stdin_used+0x861>
    d7fc:	72 74                	jb     d872 <_IO_stdin_used+0x872>
    d7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    d805:	20 28                	and    BYTE PTR [rax],ch
    d807:	55                   	push   rbp
    d808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    d811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    d815:	25 64 20 29 20       	and    eax,0x20292064
    d81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    d81c:	00 20                	add    BYTE PTR [rax],ah
    d81e:	52                   	push   rdx
    d81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d820:	75 74                	jne    d896 <_IO_stdin_used+0x896>
    d822:	65 72 20             	gs jb  d845 <_IO_stdin_used+0x845>
    d825:	53                   	push   rbx
    d826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d827:	6c                   	ins    BYTE PTR es:[rdi],dx
    d828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    d82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d831:	20 29                	and    BYTE PTR [rcx],ch
    d833:	00 20                	add    BYTE PTR [rax],ah
    d835:	54                   	push   rsp
    d836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    d83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    d844:	63 
    d845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    d84c:	28 20                	sub    BYTE PTR [rax],ah
    d84e:	74 74                	je     d8c4 <_IO_stdin_used+0x8c4>
    d850:	6c                   	ins    BYTE PTR es:[rdi],dx
    d851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    d854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    d857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    d85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    d861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d862:	73 69                	jae    d8cd <_IO_stdin_used+0x8cd>
    d864:	74 20                	je     d886 <_IO_stdin_used+0x886>
    d866:	29 00                	sub    DWORD PTR [rax],eax
    d868:	20 28                	and    BYTE PTR [rax],ch
    d86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    d86d:	61                   	(bad)  
    d86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    d870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d872:	74 20                	je     d894 <_IO_stdin_used+0x894>
    d874:	52                   	push   rdx
    d875:	65 61                	gs (bad) 
    d877:	73 73                	jae    d8ec <_IO_stdin_used+0x8ec>
    d879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    d87b:	62                   	(bad)  
    d87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d87d:	79 20                	jns    d89f <_IO_stdin_used+0x89f>
    d87f:	74 69                	je     d8ea <_IO_stdin_used+0x8ea>
    d881:	6d                   	ins    DWORD PTR es:[rdi],dx
    d882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    d886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    d889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    d88e:	00 20                	add    BYTE PTR [rax],ah
    d890:	28 20                	sub    BYTE PTR [rax],ah
    d892:	55                   	push   rbp
    d893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    d89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    d8a0:	25 64 29 0a 00       	and    eax,0xa2964
    d8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    d8a9:	65 73 74             	gs jae d920 <_IO_stdin_used+0x920>
    d8ac:	61                   	(bad)  
    d8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8ae:	70 20                	jo     d8d0 <_IO_stdin_used+0x8d0>
    d8b0:	72 65                	jb     d917 <_IO_stdin_used+0x917>
    d8b2:	71 75                	jno    d929 <_IO_stdin_used+0x929>
    d8b4:	65 73 74             	gs jae d92b <_IO_stdin_used+0x92b>
    d8b7:	00 20                	add    BYTE PTR [rax],ah
    d8b9:	74 69                	je     d924 <_IO_stdin_used+0x924>
    d8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8bc:	65 73 74             	gs jae d933 <_IO_stdin_used+0x933>
    d8bf:	61                   	(bad)  
    d8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8c1:	70 20                	jo     d8e3 <_IO_stdin_used+0x8e3>
    d8c3:	72 65                	jb     d92a <_IO_stdin_used+0x92a>
    d8c5:	70 6c                	jo     d933 <_IO_stdin_used+0x933>
    d8c7:	79 00                	jns    d8c9 <_IO_stdin_used+0x8c9>
    d8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    d8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    d8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8d5:	70 20                	jo     d8f7 <_IO_stdin_used+0x8f7>
    d8d7:	74 79                	je     d952 <_IO_stdin_used+0x952>
    d8d9:	70 65                	jo     d940 <_IO_stdin_used+0x940>
    d8db:	3d 25 64 00 00       	cmp    eax,0x6425
    d8e0:	1c 68                	sbb    al,0x68
    d8e2:	ff                   	(bad)  
    d8e3:	ff                   	(bad)  
    d8e4:	3f                   	(bad)  
    d8e5:	6b ff ff             	imul   edi,edi,0xffffffff
    d8e8:	3f                   	(bad)  
    d8e9:	6b ff ff             	imul   edi,edi,0xffffffff
    d8ec:	2d 68 ff ff 9a       	sub    eax,0x9affff68
    d8f1:	69 ff ff ab 69 ff    	imul   edi,edi,0xff69abff
    d8f7:	ff                   	(bad)  
    d8f8:	3f                   	(bad)  
    d8f9:	6b ff ff             	imul   edi,edi,0xffffffff
    d8fc:	3f                   	(bad)  
    d8fd:	6b ff ff             	imul   edi,edi,0xffffffff
    d900:	48 6a ff             	rex.W push 0xffffffffffffffff
    d903:	ff 59 6a             	call   FWORD PTR [rcx+0x6a]
    d906:	ff                   	(bad)  
    d907:	ff a4 6a ff ff b5 6a 	jmp    QWORD PTR [rdx+rbp*2+0x6ab5ffff]
    d90e:	ff                   	(bad)  
    d90f:	ff                   	(bad)  
    d910:	3f                   	(bad)  
    d911:	6b ff ff             	imul   edi,edi,0xffffffff
    d914:	23 6b ff             	and    ebp,DWORD PTR [rbx-0x1]
    d917:	ff 31                	push   QWORD PTR [rcx]
    d919:	6b ff ff             	imul   edi,edi,0xffffffff
    d91c:	3c 68                	cmp    al,0x68
    d91e:	ff                   	(bad)  
    d91f:	ff 4d 68             	dec    DWORD PTR [rbp+0x68]
    d922:	ff                   	(bad)  
    d923:	ff 5e 68             	call   FWORD PTR [rsi+0x68]
    d926:	ff                   	(bad)  
    d927:	ff 6f 68             	jmp    FWORD PTR [rdi+0x68]
    d92a:	ff                   	(bad)  
    d92b:	ff 80 68 ff ff 91    	inc    DWORD PTR [rax-0x6e000098]
    d931:	68 ff ff a2 68       	push   0x68a2ffff
    d936:	ff                   	(bad)  
    d937:	ff b3 68 ff ff c4    	push   QWORD PTR [rbx-0x3b000098]
    d93d:	68 ff ff d5 68       	push   0x68d5ffff
    d942:	ff                   	(bad)  
    d943:	ff e3                	jmp    rbx
    d945:	68 ff ff f1 68       	push   0x68f1ffff
    d94a:	ff                   	(bad)  
    d94b:	ff                   	(bad)  
    d94c:	ff 68 ff             	jmp    FWORD PTR [rax-0x1]
    d94f:	ff 0d 69 ff ff 1b    	dec    DWORD PTR [rip+0x1bffff69]        # 1c00d8be <_end+0x1bed18b6>
    d955:	69 ff ff 29 69 ff    	imul   edi,edi,0xff6929ff
    d95b:	ff 00                	inc    DWORD PTR [rax]
    d95d:	00 00                	add    BYTE PTR [rax],al
    d95f:	00 1b                	add    BYTE PTR [rbx],bl
    d961:	5b                   	pop    rbx
    d962:	33 32                	xor    esi,DWORD PTR [rdx]
    d964:	6d                   	ins    DWORD PTR es:[rdi],dx
    d965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049d9de <_end+0x503619d6>
    d96b:	76 34                	jbe    d9a1 <_IO_stdin_used+0x9a1>
    d96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613e6 <_end+0x641253de>
    d973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9b7 <_end+0x731239af>
    d979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900e3e3 <_end+0x8ed23db>
    d97f:	54                   	push   rsp
    d980:	43 50                	rex.XB push r8
    d982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    d985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    d98b:	25 73 20 41 43       	and    eax,0x43412073
    d990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    d993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d996:	37                   	(bad)  
    d997:	6d                   	ins    DWORD PTR es:[rdi],dx
    d998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946fa11 <_end+0x49333a09>
    d99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    d9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d9a4:	34 6d                	xor    al,0x6d
    d9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350fa1f <_end+0x533d3a17>
    d9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    d9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    d9b5:	25 73 20 52 53       	and    eax,0x53522073
    d9ba:	54                   	push   rsp
    d9bb:	20 00                	and    BYTE PTR [rax],al
    d9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    d9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    d9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    d9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    d9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255fa49 <_end+0x52423a41>
    d9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    d9d9:	5d                   	pop    rbp
    d9da:	00 1b                	add    BYTE PTR [rbx],bl
    d9dc:	5b                   	pop    rbx
    d9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    d9e0:	25 73 53 75 73       	and    eax,0x73755373
    d9e5:	70 69                	jo     da50 <_IO_stdin_used+0xa50>
    d9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    d9ea:	75 73                	jne    da5f <_IO_stdin_used+0xa5f>
    d9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    d9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d9f6:	74 20                	je     da18 <_IO_stdin_used+0xa18>
    d9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d9fd:	74 65                	je     da64 <_IO_stdin_used+0xa64>
    d9ff:	72 65                	jb     da66 <_IO_stdin_used+0xa66>
    da01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    da04:	25 73 3a 25 64       	and    eax,0x64253a73
    da09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa4d <_end+0x73123a45>
    da0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 25210679 <_end+0x250d4671>
    da15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    da19:	61                   	(bad)  
    da1a:	67 73 25             	addr32 jae da42 <_IO_stdin_used+0xa42>
    da1d:	73 0a                	jae    da29 <_IO_stdin_used+0xa29>
    da1f:	00 1b                	add    BYTE PTR [rbx],bl
    da21:	5b                   	pop    rbx
    da22:	39 36                	cmp    DWORD PTR [rsi],esi
    da24:	6d                   	ins    DWORD PTR es:[rdi],dx
    da25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049da9e <_end+0x50361a96>
    da2b:	76 34                	jbe    da61 <_IO_stdin_used+0xa61>
    da2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614a6 <_end+0x6412549e>
    da33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa77 <_end+0x73123a6f>
    da39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455faa3 <_end+0x44423a9b>
    da3f:	50                   	push   rax
    da40:	0a 00                	or     al,BYTE PTR [rax]
    da42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    da45:	6d                   	ins    DWORD PTR es:[rdi],dx
    da46:	00 00                	add    BYTE PTR [rax],al
    da48:	49 50                	rex.WB push r8
    da4a:	76 34                	jbe    da80 <_IO_stdin_used+0xa80>
    da4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    da4f:	4d 50                	rex.WRB push r8
    da51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfaca <_end+0x3e1a3ac2>
    da57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bfad0 <_end+0x483ac8>
    da5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    da60:	6d                   	ins    DWORD PTR es:[rdi],dx
    da61:	62                   	(bad)  
    da62:	65 72 73             	gs jb  dad8 <_IO_stdin_used+0xad8>
    da65:	68 69 70 20 51       	push   0x51207069
    da6a:	75 65                	jne    dad1 <_IO_stdin_used+0xad1>
    da6c:	72 79                	jb     dae7 <_IO_stdin_used+0xae7>
    da6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    da71:	00 00                	add    BYTE PTR [rax],al
    da73:	00 00                	add    BYTE PTR [rax],al
    da75:	00 00                	add    BYTE PTR [rax],al
    da77:	00 20                	add    BYTE PTR [rax],ah
    da79:	4d                   	rex.WRB
    da7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    da7c:	62                   	(bad)  
    da7d:	65 72 73             	gs jb  daf3 <_IO_stdin_used+0xaf3>
    da80:	68 69 70 20 52       	push   0x52207069
    da85:	65 70 6f             	gs jo  daf7 <_IO_stdin_used+0xaf7>
    da88:	72 74                	jb     dafe <_IO_stdin_used+0xafe>
    da8a:	20 2f                	and    BYTE PTR [rdi],ch
    da8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    da8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    da96:	70 20                	jo     dab8 <_IO_stdin_used+0xab8>
    da98:	25 73 20 66 6f       	and    eax,0x6f662073
    da9d:	72 20                	jb     dabf <_IO_stdin_used+0xabf>
    da9f:	61                   	(bad)  
    daa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    daa1:	79 20                	jns    dac3 <_IO_stdin_used+0xac3>
    daa3:	73 6f                	jae    db14 <_IO_stdin_used+0xb14>
    daa5:	75 72                	jne    db19 <_IO_stdin_used+0xb19>
    daa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    daaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    daad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    dab8:	4d 50                	rex.WRB push r8
    daba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    dabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    dac4:	0a 00                	or     al,BYTE PTR [rax]
    dac6:	25 64 2d 25 30       	and    eax,0x30252d64
    dacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    dacf:	30 32                	xor    BYTE PTR [rdx],dh
    dad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a650d08 <_end+0x3a514d00>
    dad8:	25 30 32 64 3a       	and    eax,0x3a643230
    dadd:	25 30 32 64 00       	and    eax,0x643230
    dae2:	25 73 20 25 73       	and    eax,0x73252073
    dae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfb60 <_end+0x3e1a3b58>
    daed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500e566 <_end+0x24ed255e>
    daf3:	73 20                	jae    db15 <_IO_stdin_used+0xb15>
    daf5:	25 73 20 25 73       	and    eax,0x73252073
    dafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2dfb64 <_end+0x3e1a3b5c>
    db00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261579 <_end+0x64125571>
    db06:	0a 00                	or     al,BYTE PTR [rax]
    db08:	25 73 00 61 00       	and    eax,0x610073
    db0d:	25 30 32 78 00       	and    eax,0x783230
    db12:	00 00                	add    BYTE PTR [rax],al
    db14:	00 00                	add    BYTE PTR [rax],al
    db16:	00 00                	add    BYTE PTR [rax],al
    db18:	72 00                	jb     db1a <_IO_stdin_used+0xb1a>
    db1a:	00 00                	add    BYTE PTR [rax],al
    db1c:	00 00                	add    BYTE PTR [rax],al
    db1e:	00 00                	add    BYTE PTR [rax],al
    db20:	45 72 72             	rex.RB jb db95 <_IO_stdin_used+0xb95>
    db23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db24:	72 20                	jb     db46 <_IO_stdin_used+0xb46>
    db26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db27:	70 65                	jo     db8e <_IO_stdin_used+0xb8e>
    db29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    db31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    db37:	74 69                	je     dba2 <_IO_stdin_used+0xba2>
    db39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    db3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    db3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    db42:	25 73 0a 00 0a       	and    eax,0xa000a73
    db47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    db4a:	72 69                	jb     dbb5 <_IO_stdin_used+0xbb5>
    db4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    db50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    db53:	5f                   	pop    rdi
    db54:	74 69                	je     dbbf <_IO_stdin_used+0xbbf>
    db56:	6d                   	ins    DWORD PTR es:[rdi],dx
    db57:	65 73 74             	gs jae dbce <_IO_stdin_used+0xbce>
    db5a:	61                   	(bad)  
    db5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    db5c:	70 5f                	jo     dbbd <_IO_stdin_used+0xbbd>
    db5e:	72 65                	jb     dbc5 <_IO_stdin_used+0xbc5>
    db60:	71 3d                	jno    db9f <_IO_stdin_used+0xb9f>
    db62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    db65:	53                   	push   rbx
    db66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    db69:	72 69                	jb     dbd4 <_IO_stdin_used+0xbd4>
    db6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    db6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    db70:	61                   	(bad)  
    db71:	70 5f                	jo     dbd2 <_IO_stdin_used+0xbd2>
    db73:	68 6f 73 74 5f       	push   0x5f74736f
    db78:	61                   	(bad)  
    db79:	6c                   	ins    BYTE PTR es:[rdi],dx
    db7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    db81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    db84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    db87:	65 61                	gs (bad) 
    db89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db8a:	5f                   	pop    rdi
    db8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    db8e:	61                   	(bad)  
    db8f:	79 5f                	jns    dbf0 <_IO_stdin_used+0xbf0>
    db91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    db98:	65 74 73             	gs je  dc0e <_IO_stdin_used+0xc0e>
    db9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    dba0:	61                   	(bad)  
    dba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    dba6:	61                   	(bad)  
    dba7:	79 20                	jns    dbc9 <_IO_stdin_used+0xbc9>
    dba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbaa:	65 65 64 73 20       	gs gs fs jae dbcf <_IO_stdin_used+0xbcf>
    dbaf:	61                   	(bad)  
    dbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb4:	75 65                	jne    dc1b <_IO_stdin_used+0xc1b>
    dbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    dbb9:	65 61                	gs (bad) 
    dbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbbc:	5f                   	pop    rdi
    dbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    dbc0:	61                   	(bad)  
    dbc1:	79 5f                	jns    dc22 <_IO_stdin_used+0xc22>
    dbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    dbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbcc:	64 73 3d             	fs jae dc0c <_IO_stdin_used+0xc0c>
    dbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    dbd2:	65 5f                	gs pop rdi
    dbd4:	73 71                	jae    dc47 <_IO_stdin_used+0xc47>
    dbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    dbde:	6c 
    dbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    dbe6:	61 
    dbe7:	62 61                	(bad)  
    dbe9:	73 65                	jae    dc50 <_IO_stdin_used+0xc50>
    dbeb:	5f                   	pop    rdi
    dbec:	70 61                	jo     dc4f <_IO_stdin_used+0xc4f>
    dbee:	74 68                	je     dc58 <_IO_stdin_used+0xc58>
    dbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    dbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    dbfc:	61 
    dbfd:	62 61                	(bad)  
    dbff:	73 65                	jae    dc66 <_IO_stdin_used+0xc66>
    dc01:	5f                   	pop    rdi
    dc02:	70 61                	jo     dc65 <_IO_stdin_used+0xc65>
    dc04:	74 68                	je     dc6e <_IO_stdin_used+0xc6e>
    dc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    dc08:	25 73 00 69 6e       	and    eax,0x6e690073
    dc0d:	5f                   	pop    rdi
    dc0e:	61                   	(bad)  
    dc0f:	64 61                	fs (bad) 
    dc11:	70 74                	jo     dc87 <_IO_stdin_used+0xc87>
    dc13:	65 72 3d             	gs jb  dc53 <_IO_stdin_used+0xc53>
    dc16:	00 00                	add    BYTE PTR [rax],al
    dc18:	72 75                	jb     dc8f <_IO_stdin_used+0xc8f>
    dc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc1b:	65 5f                	gs pop rdi
    dc1d:	70 61                	jo     dc80 <_IO_stdin_used+0xc80>
    dc1f:	72 73                	jb     dc94 <_IO_stdin_used+0xc94>
    dc21:	65 72 2e             	gs jb  dc52 <_IO_stdin_used+0xc52>
    dc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    dc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc2a:	65 5f                	gs pop rdi
    dc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    dc34:	70 61                	jo     dc97 <_IO_stdin_used+0xc97>
    dc36:	72 73                	jb     dcab <_IO_stdin_used+0xcab>
    dc38:	65 72 3a             	gs jb  dc75 <_IO_stdin_used+0xc75>
    dc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    dc3e:	5f                   	pop    rdi
    dc3f:	61                   	(bad)  
    dc40:	64 61                	fs (bad) 
    dc42:	70 74                	jo     dcb8 <_IO_stdin_used+0xcb8>
    dc44:	65 72 3a             	gs jb  dc81 <_IO_stdin_used+0xc81>
    dc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fdcc0 <_end+0x755c1cb8>
    dc4d:	74 5f                	je     dcae <_IO_stdin_used+0xcae>
    dc4f:	61                   	(bad)  
    dc50:	64 61                	fs (bad) 
    dc52:	70 74                	jo     dcc8 <_IO_stdin_used+0xcc8>
    dc54:	65 72 3d             	gs jb  dc94 <_IO_stdin_used+0xc94>
    dc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    dc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc5b:	65 5f                	gs pop rdi
    dc5d:	70 61                	jo     dcc0 <_IO_stdin_used+0xcc0>
    dc5f:	72 73                	jb     dcd4 <_IO_stdin_used+0xcd4>
    dc61:	65 72 2e             	gs jb  dc92 <_IO_stdin_used+0xc92>
    dc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    dc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc6a:	65 5f                	gs pop rdi
    dc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    dc74:	70 61                	jo     dcd7 <_IO_stdin_used+0xcd7>
    dc76:	72 73                	jb     dceb <_IO_stdin_used+0xceb>
    dc78:	65 72 3a             	gs jb  dcb5 <_IO_stdin_used+0xcb5>
    dc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    dc7e:	74 5f                	je     dcdf <_IO_stdin_used+0xcdf>
    dc80:	61                   	(bad)  
    dc81:	64 61                	fs (bad) 
    dc83:	70 74                	jo     dcf9 <_IO_stdin_used+0xcf9>
    dc85:	65 72 3a             	gs jb  dcc2 <_IO_stdin_used+0xcc2>
    dc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6ddd01 <_end+0x6f5a1cf9>
    dc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    dc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    dc98:	25 73 00 52 75       	and    eax,0x75520073
    dc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    dca6:	00 32                	add    BYTE PTR [rdx],dh
    dca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    dcab:	53                   	push   rbx
    dcac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    dcaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    dcb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    dcb7:	72 20                	jb     dcd9 <_IO_stdin_used+0xcd9>
    dcb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dcbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    dcc2:	53                   	push   rbx
    dcc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    dcc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    dccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    dcce:	72 20                	jb     dcf0 <_IO_stdin_used+0xcf0>
    dcd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dcd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    dcd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    dcdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    dce3:	61                   	(bad)  
    dce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce5:	5f                   	pop    rdi
    dce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    dced:	65 72 20             	gs jb  dd10 <_IO_stdin_used+0xd10>
    dcf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dcf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    dcf9:	73 00                	jae    dcfb <_IO_stdin_used+0xcfb>
    dcfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja dd3e <_IO_stdin_used+0xd3e>
    dd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    dd04:	65 5f                	gs pop rdi
    dd06:	73 70                	jae    dd78 <_IO_stdin_used+0xd78>
    dd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a3312 <_end+0x4736730a>
    dd0f:	4c 20 53 
    dd12:	50                   	push   rax
    dd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    dd17:	72 76                	jb     dd8f <_IO_stdin_used+0xd8f>
    dd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    dd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    dd27:	45 5f                	rex.RB pop r15
    dd29:	4e                   	rex.WRX
    dd2a:	45 54                	rex.RB push r12
    dd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    dd31:	45 5f                	rex.RB pop r15
    dd33:	4e                   	rex.WRX
    dd34:	45 54                	rex.RB push r12
    dd36:	5f                   	pop    rdi
    dd37:	4d                   	rex.WRB
    dd38:	41 53                	push   r11
    dd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    dd40:	61                   	(bad)  
    dd41:	74 69                	je     ddac <_IO_stdin_used+0xdac>
    dd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    dd4a:	65 72 6e             	gs jb  ddbb <_IO_stdin_used+0xdbb>
    dd4d:	61                   	(bad)  
    dd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    dd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd53:	74 61                	je     ddb6 <_IO_stdin_used+0xdb6>
    dd55:	78 20                	js     dd77 <_IO_stdin_used+0xd77>
    dd57:	65 72 72             	gs jb  ddcc <_IO_stdin_used+0xdcc>
    dd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd5b:	72 20                	jb     dd7d <_IO_stdin_used+0xd7d>
    dd5d:	61                   	(bad)  
    dd5e:	74 20                	je     dd80 <_IO_stdin_used+0xd80>
    dd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    dd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e7e1 <_IO_stdin_used+0x17e1>
    dd6e:	00 00                	add    BYTE PTR [rax],al
    dd70:	45 72 72             	rex.RB jb dde5 <_IO_stdin_used+0xde5>
    dd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd74:	72 20                	jb     dd96 <_IO_stdin_used+0xd96>
    dd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd77:	70 65                	jo     ddde <_IO_stdin_used+0xdde>
    dd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    dd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    dd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    dd89:	25 73 2e 20 52       	and    eax,0x52202e73
    dd8e:	65 66 75 73          	gs data16 jne de05 <_IO_stdin_used+0xe05>
    dd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    dd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dd9c:	74 69                	je     de07 <_IO_stdin_used+0xe07>
    dd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd9f:	75 65                	jne    de06 <_IO_stdin_used+0xe06>
    dda1:	0a 00                	or     al,BYTE PTR [rax]
    dda3:	50                   	push   rax
    dda4:	61                   	(bad)  
    dda5:	72 73                	jb     de1a <_IO_stdin_used+0xe1a>
    dda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    ddae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100e828 <_end+0x60ed2820>
    ddb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddb6:	65 72 74             	gs jb  de2d <_IO_stdin_used+0xe2d>
    ddb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    ddbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ddbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    ddc4:	61                   	(bad)  
    ddc5:	72 73                	jb     de3a <_IO_stdin_used+0xe3a>
    ddc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    ddce:	00 00                	add    BYTE PTR [rax],al
    ddd0:	45 72 72             	rex.RB jb de45 <_IO_stdin_used+0xe45>
    ddd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ddd4:	72 20                	jb     ddf6 <_IO_stdin_used+0xdf6>
    ddd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ddd7:	70 65                	jo     de3e <_IO_stdin_used+0xe3e>
    ddd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ddda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    dde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    dde3:	72 20                	jb     de05 <_IO_stdin_used+0xe05>
    dde5:	65 78 70             	gs js  de58 <_IO_stdin_used+0xe58>
    dde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    dde9:	2f                   	(bad)  
    ddea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    ddf1:	74 20                	je     de13 <_IO_stdin_used+0xe13>
    ddf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    ddf6:	79 20                	jns    de18 <_IO_stdin_used+0xe18>
    ddf8:	70 61                	jo     de5b <_IO_stdin_used+0xe5b>
    ddfa:	72 73                	jb     de6f <_IO_stdin_used+0xe6f>
    ddfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    de03:	76 34                	jbe    de39 <_IO_stdin_used+0xe39>
    de05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    de08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de0f:	20 
    de10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de11:	70 65                	jo     de78 <_IO_stdin_used+0xe78>
    de13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e88d <_IO_stdin_used+0x188d>
    de1a:	00 00                	add    BYTE PTR [rax],al
    de1c:	00 00                	add    BYTE PTR [rax],al
    de1e:	00 00                	add    BYTE PTR [rax],al
    de20:	25 75 0a 00 00       	and    eax,0xa75
    de25:	00 00                	add    BYTE PTR [rax],al
    de27:	00 52 55             	add    BYTE PTR [rdx+0x55],dl
    de2a:	4e                   	rex.WRX
    de2b:	4e                   	rex.WRX
    de2c:	49                   	rex.WB
    de2d:	4e                   	rex.WRX
    de2e:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    de32:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    de36:	4f                   	rex.WRXB
    de37:	4e 53                	rex.WRX push rbx
    de39:	54                   	push   rsp
    de3a:	52                   	push   rdx
    de3b:	41 54                	push   r12
    de3d:	49                   	rex.WB
    de3e:	4f                   	rex.WRXB
    de3f:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    de43:	44                   	rex.R
    de44:	45                   	rex.RB
    de45:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    de49:	55                   	push   rbp
    de4a:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    de4d:	56                   	push   rsi
    de4e:	45 20 31             	and    BYTE PTR [r9],r14b
    de51:	30 20                	xor    BYTE PTR [rax],ah
    de53:	53                   	push   rbx
    de54:	45                   	rex.RB
    de55:	43                   	rex.XB
    de56:	4f                   	rex.WRXB
    de57:	4e                   	rex.WRX
    de58:	44 53                	rex.R push rbx
    de5a:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    de5e:	41                   	rex.B
    de5f:	42                   	rex.X
    de60:	4f 52                	rex.WRXB push r10
    de62:	54                   	push   rsp
    de63:	2e 00 00             	cs add BYTE PTR [rax],al
    de66:	00 00                	add    BYTE PTR [rax],al
    de68:	52                   	push   rdx
    de69:	55                   	push   rbp
    de6a:	4e                   	rex.WRX
    de6b:	4e                   	rex.WRX
    de6c:	49                   	rex.WB
    de6d:	4e                   	rex.WRX
    de6e:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    de72:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    de76:	54                   	push   rsp
    de77:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    de7a:	44                   	rex.R
    de7b:	45                   	rex.RB
    de7c:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    de80:	55                   	push   rbp
    de81:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    de84:	56                   	push   rsi
    de85:	45 20 31             	and    BYTE PTR [r9],r14b
    de88:	30 20                	xor    BYTE PTR [rax],ah
    de8a:	53                   	push   rbx
    de8b:	45                   	rex.RB
    de8c:	43                   	rex.XB
    de8d:	4f                   	rex.WRXB
    de8e:	4e                   	rex.WRX
    de8f:	44 53                	rex.R push rbx
    de91:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    de95:	41                   	rex.B
    de96:	42                   	rex.X
    de97:	4f 52                	rex.WRXB push r10
    de99:	54                   	push   rsp
    de9a:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    de9e:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dea2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dea3:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    dea6:	67 75 6d             	addr32 jne df16 <_IO_stdin_used+0xf16>
    dea9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    deab:	74 20                	je     decd <_IO_stdin_used+0xecd>
    dead:	2d 25 63 0a 00       	sub    eax,0xa6325
    deb2:	70 64                	jo     df18 <_IO_stdin_used+0xf18>
    deb4:	71 68                	jno    df1e <_IO_stdin_used+0xf1e>
    deb6:	74 65                	je     df1d <_IO_stdin_used+0xf1d>
    deb8:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    debe:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    dec0:	76 69                	jbe    df2b <_IO_stdin_used+0xf2b>
    dec2:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    dec9:	79 2e 
    decb:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dece:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ded2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ded3:	73 69                	jae    df3e <_IO_stdin_used+0xf3e>
    ded5:	73 68                	jae    df3f <_IO_stdin_used+0xf3f>
    ded7:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    dedd:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    dee4:	70 
    dee5:	6c                   	ins    BYTE PTR es:[rdi],dx
    dee6:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    deed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    deee:	79 20                	jns    df10 <_IO_stdin_used+0xf10>
    def0:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    def7:	74 63                	je     df5c <_IO_stdin_used+0xf5c>
    def9:	2f                   	(bad)  
    defa:	76 69                	jbe    df65 <_IO_stdin_used+0xf65>
    defc:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    df03:	79 2e 
    df05:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    df08:	66 29 00             	sub    WORD PTR [rax],ax
    df0b:	00 00                	add    BYTE PTR [rax],al
    df0d:	00 00                	add    BYTE PTR [rax],al
    df0f:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    df12:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df13:	69 73 68 65 64 20 6c 	imul   esi,DWORD PTR [rbx+0x68],0x6c206465
    df1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df1b:	61                   	(bad)  
    df1c:	64 69 6e 67 20 43 53 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x56534320
    df23:	56 
    df24:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    df27:	70 20                	jo     df49 <_IO_stdin_used+0xf49>
    df29:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    df2c:	68 65 00 00 46       	push   0x46000065
    df31:	61                   	(bad)  
    df32:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    df39:	20 
    df3a:	6c                   	ins    BYTE PTR es:[rdi],dx
    df3b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df3c:	61                   	(bad)  
    df3d:	64 20 43 53          	and    BYTE PTR fs:[rbx+0x53],al
    df41:	56                   	push   rsi
    df42:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    df45:	70 20                	jo     df67 <_IO_stdin_used+0xf67>
    df47:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    df4a:	68 65 28 6e 6f       	push   0x6f6e2865
    df4f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df50:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    df53:	69 74 69 63 61 6c 20 	imul   esi,DWORD PTR [rcx+rbp*2+0x63],0x65206c61
    df5a:	65 
    df5b:	72 72                	jb     dfcf <_IO_stdin_used+0xfcf>
    df5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df5e:	72 29                	jb     df89 <_IO_stdin_used+0xf89>
    df60:	00 2f                	add    BYTE PTR [rdi],ch
    df62:	65 74 63             	gs je  dfc8 <_IO_stdin_used+0xfc8>
    df65:	2f                   	(bad)  
    df66:	76 69                	jbe    dfd1 <_IO_stdin_used+0xfd1>
    df68:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    df6f:	69 6c 
    df71:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    df75:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    df79:	72 73                	jb     dfee <_IO_stdin_used+0xfee>
    df7b:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    df80:	6c                   	ins    BYTE PTR es:[rdi],dx
    df81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    df85:	6c                   	ins    BYTE PTR es:[rdi],dx
    df86:	65 73 00             	gs jae df89 <_IO_stdin_used+0xf89>
    df89:	00 00                	add    BYTE PTR [rax],al
    df8b:	00 00                	add    BYTE PTR [rax],al
    df8d:	00 00                	add    BYTE PTR [rax],al
    df8f:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    df92:	47                   	rex.RXB
    df93:	49                   	rex.WB
    df94:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    df99:	74 65                	je     e000 <_IO_stdin_used+0x1000>
    df9b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df9c:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    dfa3:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    dfaa:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dfad:	25 73 0a 00 70       	and    eax,0x70000a73
    dfb2:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    dfb5:	5f                   	pop    rdi
    dfb6:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfb7:	67 72 20             	addr32 jb dfda <_IO_stdin_used+0xfda>
    dfba:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    dfc1:	5f                   	pop    rdi
    dfc2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dfc3:	70 65                	jo     e02a <_IO_stdin_used+0x102a>
    dfc5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfc6:	5f                   	pop    rdi
    dfc7:	6c                   	ins    BYTE PTR es:[rdi],dx
    dfc8:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    dfcf:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dfd2:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    dfd6:	70 74                	jo     e04c <_IO_stdin_used+0x104c>
    dfd8:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    dfdd:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    dfe1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfe2:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    dfe8:	72 76                	jb     e060 <_IO_stdin_used+0x1060>
    dfea:	65 72 20             	gs jb  e00d <_IO_stdin_used+0x100d>
    dfed:	73 74                	jae    e063 <_IO_stdin_used+0x1063>
    dfef:	61                   	(bad)  
    dff0:	72 74                	jb     e066 <_IO_stdin_used+0x1066>
    dff2:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    dff6:	31 32                	xor    DWORD PTR [rdx],esi
    dff8:	37                   	(bad)  
    dff9:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    dffc:	30 2e                	xor    BYTE PTR [rsi],ch
    dffe:	31 3a                	xor    DWORD PTR [rdx],edi
    e000:	32 33                	xor    dh,BYTE PTR [rbx]
    e002:	00 00                	add    BYTE PTR [rax],al
    e004:	ee                   	out    dx,al
    e005:	89 ff                	mov    edi,edi
    e007:	ff 2b                	jmp    FWORD PTR [rbx]
    e009:	8a ff                	mov    bh,bh
    e00b:	ff 69 8a             	jmp    FWORD PTR [rcx-0x76]
    e00e:	ff                   	(bad)  
    e00f:	ff 69 8a             	jmp    FWORD PTR [rcx-0x76]
    e012:	ff                   	(bad)  
    e013:	ff                   	(bad)  
    e014:	fa                   	cli    
    e015:	89 ff                	mov    edi,edi
    e017:	ff 09                	dec    DWORD PTR [rcx]
    e019:	8a ff                	mov    bh,bh
    e01b:	ff 69 8a             	jmp    FWORD PTR [rcx-0x76]
    e01e:	ff                   	(bad)  
    e01f:	ff 69 8a             	jmp    FWORD PTR [rcx-0x76]
    e022:	ff                   	(bad)  
    e023:	ff 69 8a             	jmp    FWORD PTR [rcx-0x76]
    e026:	ff                   	(bad)  
    e027:	ff 69 8a             	jmp    FWORD PTR [rcx-0x76]
    e02a:	ff                   	(bad)  
    e02b:	ff 69 8a             	jmp    FWORD PTR [rcx-0x76]
    e02e:	ff                   	(bad)  
    e02f:	ff 69 8a             	jmp    FWORD PTR [rcx-0x76]
    e032:	ff                   	(bad)  
    e033:	ff 19                	call   FWORD PTR [rcx]
    e035:	8a ff                	mov    bh,bh
    e037:	ff 22                	jmp    QWORD PTR [rdx]
    e039:	8a ff                	mov    bh,bh
    e03b:	ff 69 8a             	jmp    FWORD PTR [rcx-0x76]
    e03e:	ff                   	(bad)  
    e03f:	ff 69 8a             	jmp    FWORD PTR [rcx-0x76]
    e042:	ff                   	(bad)  
    e043:	ff 4a 8a             	dec    DWORD PTR [rdx-0x76]
    e046:	ff                   	(bad)  
    e047:	ff 0a                	dec    DWORD PTR [rdx]
    e049:	43 61                	rex.XB (bad) 
    e04b:	75 67                	jne    e0b4 <_IO_stdin_used+0x10b4>
    e04d:	68 74 20 73 69       	push   0x69732074
    e052:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    e054:	61                   	(bad)  
    e055:	6c                   	ins    BYTE PTR es:[rdi],dx
    e056:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 746200c0 <_end+0x744e40b8>
    e05c:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 65210cd5 <_end+0x650d4ccd>
    e062:	78 69                	js     e0cd <_IO_stdin_used+0x10cd>
    e064:	74 69                	je     e0cf <_IO_stdin_used+0x10cf>
    e066:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e067:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    e06d:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    e071:	61                   	(bad)  
    e072:	6c                   	ins    BYTE PTR es:[rdi],dx
    e073:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    e076:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e079:	74 73                	je     e0ee <_IO_stdin_used+0x10ee>
    e07b:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    e07e:	75 67                	jne    e0e7 <_IO_stdin_used+0x10e7>
    e080:	68 74 3a 20 25       	push   0x25203a74
    e085:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    e088:	53                   	push   rbx
    e089:	74 61                	je     e0ec <_IO_stdin_used+0x10ec>
    e08b:	74 69                	je     e0f6 <_IO_stdin_used+0x10f6>
    e08d:	73 74                	jae    e103 <_IO_stdin_used+0x1103>
    e08f:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    e096:	61                   	(bad)  
    e097:	64 64 72 65          	fs fs jb e100 <_IO_stdin_used+0x1100>
    e09b:	73 73                	jae    e110 <_IO_stdin_used+0x1110>
    e09d:	20 20                	and    BYTE PTR [rax],ah
    e09f:	20 20                	and    BYTE PTR [rax],ah
    e0a1:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    e0a3:	75 6e                	jne    e113 <_IO_stdin_used+0x1113>
    e0a5:	74 0a                	je     e0b1 <_IO_stdin_used+0x10b1>
    e0a7:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    e0ac:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    e0b1:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    e0b6:	2d 2d 00 00 00       	sub    eax,0x2d
    e0bb:	00 00                	add    BYTE PTR [rax],al
    e0bd:	00 00                	add    BYTE PTR [rax],al
    e0bf:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909eb38 <_end+0x8f62b30>
    e0c5:	74 6f                	je     e136 <_IO_stdin_used+0x1136>
    e0c7:	74 61                	je     e12a <_IO_stdin_used+0x112a>
    e0c9:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0ca:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    e0cd:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e0d0:	74 73                	je     e145 <_IO_stdin_used+0x1145>
    e0d2:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a6505f8 <_end+0xa5145f0>
    e0d8:	09 09                	or     DWORD PTR [rcx],ecx
    e0da:	74 6f                	je     e14b <_IO_stdin_used+0x114b>
    e0dc:	74 61                	je     e13f <_IO_stdin_used+0x113f>
    e0de:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0df:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e0e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0e3:	74 20                	je     e105 <_IO_stdin_used+0x1105>
    e0e5:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e0ea:	09 09                	or     DWORD PTR [rcx],ecx
    e0ec:	74 6f                	je     e15d <_IO_stdin_used+0x115d>
    e0ee:	74 61                	je     e151 <_IO_stdin_used+0x1151>
    e0f0:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0f1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e0f4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    e0f7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e0fc:	09 09                	or     DWORD PTR [rcx],ecx
    e0fe:	54                   	push   rsp
    e0ff:	43 50                	rex.XB push r8
    e101:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e104:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e105:	74 20                	je     e127 <_IO_stdin_used+0x1127>
    e107:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e10c:	09 09                	or     DWORD PTR [rcx],ecx
    e10e:	54                   	push   rsp
    e10f:	43 50                	rex.XB push r8
    e111:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e114:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    e117:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e11c:	09 09                	or     DWORD PTR [rcx],ecx
    e11e:	55                   	push   rbp
    e11f:	44 50                	rex.R push rax
    e121:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e124:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e125:	74 20                	je     e147 <_IO_stdin_used+0x1147>
    e127:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e12c:	09 09                	or     DWORD PTR [rcx],ecx
    e12e:	55                   	push   rbp
    e12f:	44 50                	rex.R push rax
    e131:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e134:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    e137:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e13c:	09 09                	or     DWORD PTR [rcx],ecx
    e13e:	49                   	rex.WB
    e13f:	43                   	rex.XB
    e140:	4d 50                	rex.WRB push r8
    e142:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e145:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e146:	74 20                	je     e168 <_IO_stdin_used+0x1168>
    e148:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e14d:	09 09                	or     DWORD PTR [rcx],ecx
    e14f:	49                   	rex.WB
    e150:	43                   	rex.XB
    e151:	4d 50                	rex.WRB push r8
    e153:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e156:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    e159:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e15e:	0a 00                	or     al,BYTE PTR [rax]
    e160:	77 00                	ja     e162 <_IO_stdin_used+0x1162>
    e162:	2f                   	(bad)  
    e163:	75 73                	jne    e1d8 <_IO_stdin_used+0x11d8>
    e165:	72 2f                	jb     e196 <_IO_stdin_used+0x1196>
    e167:	73 68                	jae    e1d1 <_IO_stdin_used+0x11d1>
    e169:	61                   	(bad)  
    e16a:	72 65                	jb     e1d1 <_IO_stdin_used+0x11d1>
    e16c:	2f                   	(bad)  
    e16d:	76 69                	jbe    e1d8 <_IO_stdin_used+0x11d8>
    e16f:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    e176:	63 61 
    e178:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    e17b:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    e17f:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    e182:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e183:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e184:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e185:	74 20                	je     e1a7 <_IO_stdin_used+0x11a7>
    e187:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e188:	70 65                	jo     e1ef <_IO_stdin_used+0x11ef>
    e18a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e18b:	20 2f                	and    BYTE PTR [rdi],ch
    e18d:	75 73                	jne    e202 <_IO_stdin_used+0x1202>
    e18f:	72 2f                	jb     e1c0 <_IO_stdin_used+0x11c0>
    e191:	73 68                	jae    e1fb <_IO_stdin_used+0x11fb>
    e193:	61                   	(bad)  
    e194:	72 65                	jb     e1fb <_IO_stdin_used+0x11fb>
    e196:	2f                   	(bad)  
    e197:	76 69                	jbe    e202 <_IO_stdin_used+0x1202>
    e199:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    e1a0:	63 61 
    e1a2:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    e1a5:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    e1a9:	3a 20                	cmp    ah,BYTE PTR [rax]
    e1ab:	70 72                	jo     e21f <_IO_stdin_used+0x121f>
    e1ad:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    e1b4:	61                   	(bad)  
    e1b5:	72 70                	jb     e227 <_IO_stdin_used+0x1227>
    e1b7:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    e1ba:	68 65 20 74 6f       	push   0x6f742065
    e1bf:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    e1c2:	72 65                	jb     e229 <_IO_stdin_used+0x1229>
    e1c4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e1c6:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2e023f <_end+0x3e1a4237>
    e1cc:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500ec45 <_end+0x24ed2c3d>
    e1d2:	73 2c                	jae    e200 <_IO_stdin_used+0x1200>
    e1d4:	25 73 0a 00 31       	and    eax,0x31000a73
    e1d9:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    e1dc:	30 00                	xor    BYTE PTR [rax],al
    e1de:	00 00                	add    BYTE PTR [rax],al
    e1e0:	56                   	push   rsi
    e1e1:	49                   	rex.WB
    e1e2:	47                   	rex.RXB
    e1e3:	49                   	rex.WB
    e1e4:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    e1e8:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09ec62 <_end+0x2cf62c5a>
    e1ef:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    e1f2:	64 65 62             	fs gs (bad) 
    e1f5:	75 67                	jne    e25e <_IO_stdin_used+0x125e>
    e1f7:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    e1fa:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    e1fe:	2d 68 3a 20 64       	sub    eax,0x64203a68
    e203:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    e20a:	74 68                	je     e274 <_IO_stdin_used+0x1274>
    e20c:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    e213:	61                   	(bad)  
    e214:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    e218:	2d 69 20 3c 69       	sub    eax,0x693c2069
    e21d:	66 61                	data16 (bad) 
    e21f:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    e222:	3a 20                	cmp    ah,BYTE PTR [rax]
    e224:	73 65                	jae    e28b <_IO_stdin_used+0x128b>
    e226:	74 20                	je     e248 <_IO_stdin_used+0x1248>
    e228:	74 68                	je     e292 <_IO_stdin_used+0x1292>
    e22a:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    e22e:	74 65                	je     e295 <_IO_stdin_used+0x1295>
    e230:	72 66                	jb     e298 <_IO_stdin_used+0x1298>
    e232:	61                   	(bad)  
    e233:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    e236:	74 6f                	je     e2a7 <_IO_stdin_used+0x12a7>
    e238:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    e23c:	74 65                	je     e2a3 <_IO_stdin_used+0x12a3>
    e23e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e23f:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    e242:	0a 09                	or     cl,BYTE PTR [rcx]
    e244:	2d 70 20 70 72       	sub    eax,0x72702070
    e249:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    e250:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    e254:	0a 09                	or     cl,BYTE PTR [rcx]
    e256:	2d 71 20 65 78       	sub    eax,0x78652071
    e25b:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    e262:	74 
    e263:	6c                   	ins    BYTE PTR es:[rdi],dx
    e264:	79 0a                	jns    e270 <_IO_stdin_used+0x1270>
    e266:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    e269:	00 2f                	add    BYTE PTR [rdi],ch
    e26b:	70 72                	jo     e2df <_IO_stdin_used+0x12df>
    e26d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e26e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    e270:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    e273:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    e27a:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    e27d:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    e280:	6d                   	ins    DWORD PTR es:[rdi],dx
    e281:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    e285:	75 6e                	jne    e2f5 <_IO_stdin_used+0x12f5>
    e287:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 706402f2 <_end+0x705042ea>
    e28e:	75 73                	jne    e303 <_IO_stdin_used+0x1303>
    e290:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    e292:	25 73 00 00 00       	and    eax,0x73
    e297:	00 e2                	add    dl,ah
    e299:	96                   	xchg   esi,eax
    e29a:	88 e2                	mov    dl,ah
    e29c:	96                   	xchg   esi,eax
    e29d:	88 e2                	mov    dl,ah
    e29f:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    e2a6:	88 e2                	mov    dl,ah
    e2a8:	96                   	xchg   esi,eax
    e2a9:	88 e2                	mov    dl,ah
    e2ab:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e2b2:	88 e2                	mov    dl,ah
    e2b4:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    e2bb:	96                   	xchg   esi,eax
    e2bc:	88 e2                	mov    dl,ah
    e2be:	96                   	xchg   esi,eax
    e2bf:	88 e2                	mov    dl,ah
    e2c1:	96                   	xchg   esi,eax
    e2c2:	88 e2                	mov    dl,ah
    e2c4:	96                   	xchg   esi,eax
    e2c5:	88 e2                	mov    dl,ah
    e2c7:	96                   	xchg   esi,eax
    e2c8:	88 e2                	mov    dl,ah
    e2ca:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    e2d1:	96                   	xchg   esi,eax
    e2d2:	88 e2                	mov    dl,ah
    e2d4:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e2db:	88 0a                	mov    BYTE PTR [rdx],cl
    e2dd:	e2 96                	loop   e275 <_IO_stdin_used+0x1275>
    e2df:	88 e2                	mov    dl,ah
    e2e1:	96                   	xchg   esi,eax
    e2e2:	88 e2                	mov    dl,ah
    e2e4:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    e2eb:	88 e2                	mov    dl,ah
    e2ed:	96                   	xchg   esi,eax
    e2ee:	88 e2                	mov    dl,ah
    e2f0:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e2f7:	88 e2                	mov    dl,ah
    e2f9:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e300:	88 e2                	mov    dl,ah
    e302:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    e309:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    e30f:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    e315:	96                   	xchg   esi,eax
    e316:	88 e2                	mov    dl,ah
    e318:	96                   	xchg   esi,eax
    e319:	88 e2                	mov    dl,ah
    e31b:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e322:	88 0a                	mov    BYTE PTR [rdx],cl
    e324:	e2 96                	loop   e2bc <_IO_stdin_used+0x12bc>
    e326:	88 e2                	mov    dl,ah
    e328:	96                   	xchg   esi,eax
    e329:	88 e2                	mov    dl,ah
    e32b:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    e332:	88 e2                	mov    dl,ah
    e334:	96                   	xchg   esi,eax
    e335:	88 e2                	mov    dl,ah
    e337:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e33e:	88 e2                	mov    dl,ah
    e340:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e347:	88 e2                	mov    dl,ah
    e349:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    e350:	e2 96                	loop   e2e8 <_IO_stdin_used+0x12e8>
    e352:	88 e2                	mov    dl,ah
    e354:	96                   	xchg   esi,eax
    e355:	88 e2                	mov    dl,ah
    e357:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e35e:	88 e2                	mov    dl,ah
    e360:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e367:	88 0a                	mov    BYTE PTR [rdx],cl
    e369:	e2 80                	loop   e2eb <_IO_stdin_used+0x12eb>
    e36b:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    e371:	88 e2                	mov    dl,ah
    e373:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    e37a:	96                   	xchg   esi,eax
    e37b:	88 e2                	mov    dl,ah
    e37d:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    e384:	88 e2                	mov    dl,ah
    e386:	96                   	xchg   esi,eax
    e387:	88 e2                	mov    dl,ah
    e389:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e390:	88 e2                	mov    dl,ah
    e392:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    e399:	88 e2                	mov    dl,ah
    e39b:	96                   	xchg   esi,eax
    e39c:	88 e2                	mov    dl,ah
    e39e:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e3a5:	88 e2                	mov    dl,ah
    e3a7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e3ae:	88 0a                	mov    BYTE PTR [rdx],cl
    e3b0:	20 e2                	and    dl,ah
    e3b2:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e3b9:	88 e2                	mov    dl,ah
    e3bb:	96                   	xchg   esi,eax
    e3bc:	88 e2                	mov    dl,ah
    e3be:	96                   	xchg   esi,eax
    e3bf:	88 e2                	mov    dl,ah
    e3c1:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    e3c8:	96                   	xchg   esi,eax
    e3c9:	88 e2                	mov    dl,ah
    e3cb:	96                   	xchg   esi,eax
    e3cc:	88 e2                	mov    dl,ah
    e3ce:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    e3d5:	88 e2                	mov    dl,ah
    e3d7:	96                   	xchg   esi,eax
    e3d8:	88 e2                	mov    dl,ah
    e3da:	96                   	xchg   esi,eax
    e3db:	88 e2                	mov    dl,ah
    e3dd:	96                   	xchg   esi,eax
    e3de:	88 e2                	mov    dl,ah
    e3e0:	96                   	xchg   esi,eax
    e3e1:	88 e2                	mov    dl,ah
    e3e3:	96                   	xchg   esi,eax
    e3e4:	88 e2                	mov    dl,ah
    e3e6:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    e3ed:	88 e2                	mov    dl,ah
    e3ef:	96                   	xchg   esi,eax
    e3f0:	88 e2                	mov    dl,ah
    e3f2:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e3f9:	88 e2                	mov    dl,ah
    e3fb:	96                   	xchg   esi,eax
    e3fc:	88 e2                	mov    dl,ah
    e3fe:	96                   	xchg   esi,eax
    e3ff:	88 e2                	mov    dl,ah
    e401:	96                   	xchg   esi,eax
    e402:	88 e2                	mov    dl,ah
    e404:	96                   	xchg   esi,eax
    e405:	88 e2                	mov    dl,ah
    e407:	96                   	xchg   esi,eax
    e408:	88 00                	mov    BYTE PTR [rax],al
    e40a:	00 00                	add    BYTE PTR [rax],al
    e40c:	00 00                	add    BYTE PTR [rax],al
    e40e:	00 00                	add    BYTE PTR [rax],al
    e410:	0a 00                	or     al,BYTE PTR [rax]
    e412:	0d 00 00 00 00       	or     eax,0x0
    e417:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    e41a:	68 5f 73 65 72       	push   0x7265735f
    e41f:	76 65                	jbe    e486 <_IO_stdin_used+0x1486>
    e421:	72 2e                	jb     e451 <_IO_stdin_used+0x1451>
    e423:	63 3a                	movsxd edi,DWORD PTR [rdx]
    e425:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    e428:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    e42f:	20 
    e430:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    e433:	61                   	(bad)  
    e434:	74 65                	je     e49b <_IO_stdin_used+0x149b>
    e436:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    e439:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e43c:	74 00                	je     e43e <_IO_stdin_used+0x143e>
    e43e:	00 00                	add    BYTE PTR [rax],al
    e440:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e441:	73 68                	jae    e4ab <_IO_stdin_used+0x14ab>
    e443:	5f                   	pop    rdi
    e444:	73 65                	jae    e4ab <_IO_stdin_used+0x14ab>
    e446:	72 76                	jb     e4be <_IO_stdin_used+0x14be>
    e448:	65 72 2e             	gs jb  e479 <_IO_stdin_used+0x1479>
    e44b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    e44d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    e450:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    e457:	6e 
    e458:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e45b:	74 73                	je     e4d0 <_IO_stdin_used+0x14d0>
    e45d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e45e:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    e461:	70 74                	jo     e4d7 <_IO_stdin_used+0x14d7>
    e463:	00 00                	add    BYTE PTR [rax],al
    e465:	00 00                	add    BYTE PTR [rax],al
    e467:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    e46a:	68 5f 73 65 72       	push   0x7265735f
    e46f:	76 65                	jbe    e4d6 <_IO_stdin_used+0x14d6>
    e471:	72 2e                	jb     e4a1 <_IO_stdin_used+0x14a1>
    e473:	63 3a                	movsxd edi,DWORD PTR [rdx]
    e475:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    e478:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e479:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    e480:	20 
    e481:	73 6f                	jae    e4f2 <_IO_stdin_used+0x14f2>
    e483:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e486:	74 20                	je     e4a8 <_IO_stdin_used+0x14a8>
    e488:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e48a:	72 20                	jb     e4ac <_IO_stdin_used+0x14ac>
    e48c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e48d:	73 68                	jae    e4f7 <_IO_stdin_used+0x14f7>
    e48f:	5f                   	pop    rdi
    e490:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    e495:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    e49c:	00 
    e49d:	00 00                	add    BYTE PTR [rax],al
    e49f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    e4a2:	68 5f 73 65 72       	push   0x7265735f
    e4a7:	76 65                	jbe    e50e <_IO_stdin_used+0x150e>
    e4a9:	72 2e                	jb     e4d9 <_IO_stdin_used+0x14d9>
    e4ab:	63 3a                	movsxd edi,DWORD PTR [rdx]
    e4ad:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    e4b0:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    e4b7:	6e 
    e4b8:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    e4bc:	74 65                	je     e523 <_IO_stdin_used+0x1523>
    e4be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e4bf:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    e4c6:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    e4c9:	68 5f 66 64 00       	push   0x64665f
    e4ce:	00 00                	add    BYTE PTR [rax],al
    e4d0:	46 61                	rex.RX (bad) 
    e4d2:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    e4d9:	6f 
    e4da:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    e4dd:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    e4e0:	74 20                	je     e502 <_IO_stdin_used+0x1502>
    e4e2:	61                   	(bad)  
    e4e3:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    e4e6:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    e4ed:	20 25 73 0a 00 3a    	and    BYTE PTR [rip+0x3a000a73],ah        # 3a00ef66 <_end+0x39ed2f5e>
    e4f3:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    e4f6:	47                   	rex.RXB
    e4f7:	49                   	rex.WB
    e4f8:	4c 20 4c 6f 67       	rex.WR and BYTE PTR [rdi+rbp*2+0x67],r9b
    e4fd:	69 6e 20 53 68 65 6c 	imul   ebp,DWORD PTR [rsi+0x20],0x6c656853
    e504:	6c                   	ins    BYTE PTR es:[rdi],dx
    e505:	0d 0a 00 55 73       	or     eax,0x7355000a
    e50a:	65 72 6e             	gs jb  e57b <_IO_stdin_used+0x157b>
    e50d:	61                   	(bad)  
    e50e:	6d                   	ins    DWORD PTR es:[rdi],dx
    e50f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    e512:	00 50 61             	add    BYTE PTR [rax+0x61],dl
    e515:	73 73                	jae    e58a <_IO_stdin_used+0x158a>
    e517:	77 6f                	ja     e588 <_IO_stdin_used+0x1588>
    e519:	72 64                	jb     e57f <_IO_stdin_used+0x157f>
    e51b:	3a 20                	cmp    ah,BYTE PTR [rax]
    e51d:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    e520:	2f                   	(bad)  
    e521:	65 74 63             	gs je  e587 <_IO_stdin_used+0x1587>
    e524:	2f                   	(bad)  
    e525:	76 69                	jbe    e590 <_IO_stdin_used+0x1590>
    e527:	67 69 6c 2f 70 61 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x70],0x77737361
    e52e:	73 77 
    e530:	64 00 46 61          	add    BYTE PTR fs:[rsi+0x61],al
    e534:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    e53b:	20 
    e53c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e53d:	70 65                	jo     e5a4 <_IO_stdin_used+0x15a4>
    e53f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e540:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    e543:	73 73                	jae    e5b8 <_IO_stdin_used+0x15b8>
    e545:	77 6f                	ja     e5b6 <_IO_stdin_used+0x15b6>
    e547:	72 64                	jb     e5ad <_IO_stdin_used+0x15ad>
    e549:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    e54c:	6c                   	ins    BYTE PTR es:[rdi],dx
    e54d:	65 00 25 64 2d 25 30 	add    BYTE PTR gs:[rip+0x30252d64],ah        # 302612b8 <_end+0x301252b0>
    e554:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    e558:	30 32                	xor    BYTE PTR [rdx],dh
    e55a:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a651791 <_end+0x3a515789>
    e561:	25 30 32 64 3a       	and    eax,0x3a643230
    e566:	25 30 32 64 00       	and    eax,0x643230
    e56b:	25 30 32 78 00       	and    eax,0x783230
    e570:	61                   	(bad)  
    e571:	00 2f                	add    BYTE PTR [rdi],ch
    e573:	76 61                	jbe    e5d6 <_IO_stdin_used+0x15d6>
    e575:	72 2f                	jb     e5a6 <_IO_stdin_used+0x15a6>
    e577:	6c                   	ins    BYTE PTR es:[rdi],dx
    e578:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e579:	67 2f                	addr32 (bad) 
    e57b:	76 69                	jbe    e5e6 <_IO_stdin_used+0x15e6>
    e57d:	67 69 6c 2f 6c 6f 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x6e69676f
    e584:	69 6e 
    e586:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    e588:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e589:	67 00 00             	add    BYTE PTR [eax],al
    e58c:	00 00                	add    BYTE PTR [rax],al
    e58e:	00 00                	add    BYTE PTR [rax],al
    e590:	53                   	push   rbx
    e591:	75 63                	jne    e5f6 <_IO_stdin_used+0x15f6>
    e593:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    e596:	73 66                	jae    e5fe <_IO_stdin_used+0x15fe>
    e598:	75 6c                	jne    e606 <_IO_stdin_used+0x1606>
    e59a:	20 6c 6f 67          	and    BYTE PTR [rdi+rbp*2+0x67],ch
    e59e:	69 6e 20 66 6f 72 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20726f66
    e5a5:	25 73 20 61 74       	and    eax,0x74612073
    e5aa:	20 25 73 20 66 72    	and    BYTE PTR [rip+0x72662073],ah        # 72670623 <_end+0x7253461b>
    e5b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e5b1:	6d                   	ins    DWORD PTR es:[rdi],dx
    e5b2:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f02b <_IO_stdin_used+0x202b>
    e5b8:	46 61                	rex.RX (bad) 
    e5ba:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    e5c1:	67 
    e5c2:	69 6e 20 66 6f 72 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20726f66
    e5c9:	25 73 20 61 74       	and    eax,0x74612073
    e5ce:	20 25 73 20 66 72    	and    BYTE PTR [rip+0x72662073],ah        # 72670647 <_end+0x7253463f>
    e5d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e5d5:	6d                   	ins    DWORD PTR es:[rdi],dx
    e5d6:	20 25 73 0a 00 6e    	and    BYTE PTR [rip+0x6e000a73],ah        # 6e00f04f <_end+0x6ded3047>
    e5dc:	65 77 20             	gs ja  e5ff <_IO_stdin_used+0x15ff>
    e5df:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    e5e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e5e3:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
    e5e8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e5e9:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    e5ec:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64262065 <_end+0x6412605d>
    e5f2:	0a 00                	or     al,BYTE PTR [rax]
    e5f4:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    e5f6:	76 61                	jbe    e659 <_IO_stdin_used+0x1659>
    e5f8:	6c                   	ins    BYTE PTR es:[rdi],dx
    e5f9:	69 64 20 6c 6f 67 69 	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x6e69676f
    e600:	6e 
    e601:	0d 0a 00 6e 73       	or     eax,0x736e000a
    e606:	68 23 20 00 65       	push   0x65002023
    e60b:	78 69                	js     e676 <_IO_stdin_used+0x1676>
    e60d:	74 00                	je     e60f <_IO_stdin_used+0x160f>
    e60f:	00 48 65             	add    BYTE PTR [rax+0x65],cl
    e612:	6c                   	ins    BYTE PTR es:[rdi],dx
    e613:	70 20                	jo     e635 <_IO_stdin_used+0x1635>
    e615:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e617:	72 20                	jb     e639 <_IO_stdin_used+0x1639>
    e619:	22 67 65             	and    ah,BYTE PTR [rdi+0x65]
    e61c:	74 22                	je     e640 <_IO_stdin_used+0x1640>
    e61e:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    e621:	6d                   	ins    DWORD PTR es:[rdi],dx
    e622:	6d                   	ins    DWORD PTR es:[rdi],dx
    e623:	61                   	(bad)  
    e624:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e625:	64 3a 0a             	cmp    cl,BYTE PTR fs:[rdx]
    e628:	09 62 6c             	or     DWORD PTR [rdx+0x6c],esp
    e62b:	61                   	(bad)  
    e62c:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e62f:	69 73 74 3a 20 20 20 	imul   esi,DWORD PTR [rbx+0x74],0x2020203a
    e636:	72 65                	jb     e69d <_IO_stdin_used+0x169d>
    e638:	74 72                	je     e6ac <_IO_stdin_used+0x16ac>
    e63a:	69 65 76 65 20 74 68 	imul   esp,DWORD PTR [rbp+0x76],0x68742065
    e641:	65 20 62 6c          	and    BYTE PTR gs:[rdx+0x6c],ah
    e645:	61                   	(bad)  
    e646:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e649:	69 73 74 0a 09 72 75 	imul   esi,DWORD PTR [rbx+0x74],0x7572090a
    e650:	6c                   	ins    BYTE PTR es:[rdi],dx
    e651:	65 73 3a             	gs jae e68e <_IO_stdin_used+0x168e>
    e654:	20 20                	and    BYTE PTR [rax],ah
    e656:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e659:	74 72                	je     e6cd <_IO_stdin_used+0x16cd>
    e65b:	69 65 76 65 20 72 75 	imul   esp,DWORD PTR [rbp+0x76],0x75722065
    e662:	6c                   	ins    BYTE PTR es:[rdi],dx
    e663:	65 73 20             	gs jae e686 <_IO_stdin_used+0x1686>
    e666:	6c                   	ins    BYTE PTR es:[rdi],dx
    e667:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e668:	61                   	(bad)  
    e669:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    e66f:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e672:	6d                   	ins    DWORD PTR es:[rdi],dx
    e673:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e674:	72 79                	jb     e6ef <_IO_stdin_used+0x16ef>
    e676:	0a 09                	or     cl,BYTE PTR [rcx]
    e678:	6d                   	ins    DWORD PTR es:[rdi],dx
    e679:	61                   	(bad)  
    e67a:	74 63                	je     e6df <_IO_stdin_used+0x16df>
    e67c:	68 65 73 3a 20       	push   0x203a7365
    e681:	20 20                	and    BYTE PTR [rax],ah
    e683:	72 65                	jb     e6ea <_IO_stdin_used+0x16ea>
    e685:	74 72                	je     e6f9 <_IO_stdin_used+0x16f9>
    e687:	69 65 76 65 20 6d 61 	imul   esp,DWORD PTR [rbp+0x76],0x616d2065
    e68e:	74 63                	je     e6f3 <_IO_stdin_used+0x16f3>
    e690:	68 65 73 20 66       	push   0x66207365
    e695:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e696:	72 20                	jb     e6b8 <_IO_stdin_used+0x16b8>
    e698:	61                   	(bad)  
    e699:	6c                   	ins    BYTE PTR es:[rdi],dx
    e69a:	6c                   	ins    BYTE PTR es:[rdi],dx
    e69b:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e69e:	6c                   	ins    BYTE PTR es:[rdi],dx
    e69f:	65 73 0a             	gs jae e6ac <_IO_stdin_used+0x16ac>
    e6a2:	09 70 61             	or     DWORD PTR [rax+0x61],esi
    e6a5:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e6a8:	74 73                	je     e71d <_IO_stdin_used+0x171d>
    e6aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    e6ac:	20 20                	and    BYTE PTR [rax],ah
    e6ae:	74 6f                	je     e71f <_IO_stdin_used+0x171f>
    e6b0:	74 61                	je     e713 <_IO_stdin_used+0x1713>
    e6b2:	6c                   	ins    BYTE PTR es:[rdi],dx
    e6b3:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    e6b6:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e6b9:	74 73                	je     e72e <_IO_stdin_used+0x172e>
    e6bb:	20 63 61             	and    BYTE PTR [rbx+0x61],ah
    e6be:	75 67                	jne    e727 <_IO_stdin_used+0x1727>
    e6c0:	68 74 09 61 72       	push   0x72610974
    e6c5:	70 3a                	jo     e701 <_IO_stdin_used+0x1701>
    e6c7:	20 20                	and    BYTE PTR [rax],ah
    e6c9:	20 20                	and    BYTE PTR [rax],ah
    e6cb:	72 65                	jb     e732 <_IO_stdin_used+0x1732>
    e6cd:	74 72                	je     e741 <_IO_stdin_used+0x1741>
    e6cf:	69 65 76 65 20 74 68 	imul   esp,DWORD PTR [rbp+0x76],0x68742065
    e6d6:	65 20 61 72          	and    BYTE PTR gs:[rcx+0x72],ah
    e6da:	70 20                	jo     e6fc <_IO_stdin_used+0x16fc>
    e6dc:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    e6df:	68 65 0d 0a 00       	push   0xa0d65
    e6e4:	00 00                	add    BYTE PTR [rax],al
    e6e6:	00 00                	add    BYTE PTR [rax],al
    e6e8:	48                   	rex.W
    e6e9:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    e6eb:	70 20                	jo     e70d <_IO_stdin_used+0x170d>
    e6ed:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e6ef:	72 20                	jb     e711 <_IO_stdin_used+0x1711>
    e6f1:	22 61 64             	and    ah,BYTE PTR [rcx+0x64]
    e6f4:	64 22 20             	and    ah,BYTE PTR fs:[rax]
    e6f7:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    e6fa:	6d                   	ins    DWORD PTR es:[rdi],dx
    e6fb:	61                   	(bad)  
    e6fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e6fd:	64 3a 0a             	cmp    cl,BYTE PTR fs:[rdx]
    e700:	09 61 64             	or     DWORD PTR [rcx+0x64],esp
    e703:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    e707:	61                   	(bad)  
    e708:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e70b:	69 73 74 20 3c 69 70 	imul   esi,DWORD PTR [rbx+0x74],0x70693c20
    e712:	76 34                	jbe    e748 <_IO_stdin_used+0x1748>
    e714:	7c 69                	jl     e77f <_IO_stdin_used+0x177f>
    e716:	70 76                	jo     e78e <_IO_stdin_used+0x178e>
    e718:	36 3e 20 3c 69       	ss ds and BYTE PTR [rcx+rbp*2],bh
    e71d:	70 20                	jo     e73f <_IO_stdin_used+0x173f>
    e71f:	61                   	(bad)  
    e720:	64 64 72 3e          	fs fs jb e762 <_IO_stdin_used+0x1762>
    e724:	0a 09                	or     cl,BYTE PTR [rcx]
    e726:	61                   	(bad)  
    e727:	64 64 20 72 75       	fs and BYTE PTR fs:[rdx+0x75],dh
    e72c:	6c                   	ins    BYTE PTR es:[rdi],dx
    e72d:	65 20 3c 72          	and    BYTE PTR gs:[rdx+rsi*2],bh
    e731:	75 6c                	jne    e79f <_IO_stdin_used+0x179f>
    e733:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e735:	61                   	(bad)  
    e736:	6d                   	ins    DWORD PTR es:[rdi],dx
    e737:	65 3e 0d 0a 00 73 70 	gs ds or eax,0x7073000a
    e73e:	69 6d 61 78 00 74 65 	imul   ebp,DWORD PTR [rbp+0x61],0x65740078
    e745:	73 74                	jae    e7bb <_IO_stdin_used+0x17bb>
    e747:	5f                   	pop    rdi
    e748:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    e74c:	00 68 65             	add    BYTE PTR [rax+0x65],ch
    e74f:	6c                   	ins    BYTE PTR es:[rdi],dx
    e750:	6c                   	ins    BYTE PTR es:[rdi],dx
    e751:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e752:	0d 0a 00 73 68       	or     eax,0x6873000a
    e757:	75 74                	jne    e7cd <_IO_stdin_used+0x17cd>
    e759:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    e75b:	77 6e                	ja     e7cb <_IO_stdin_used+0x17cb>
    e75d:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
    e760:	69 74 00 67 65 74 00 	imul   esi,DWORD PTR [rax+rax*1+0x67],0x62007465
    e767:	62 
    e768:	6c                   	ins    BYTE PTR es:[rdi],dx
    e769:	61                   	(bad)  
    e76a:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e76d:	69 73 74 00 72 75 6c 	imul   esi,DWORD PTR [rbx+0x74],0x6c757200
    e774:	65 73 00             	gs jae e777 <_IO_stdin_used+0x1777>
    e777:	6d                   	ins    DWORD PTR es:[rdi],dx
    e778:	61                   	(bad)  
    e779:	74 63                	je     e7de <_IO_stdin_used+0x17de>
    e77b:	68 65 73 00 70       	push   0x70007365
    e780:	61                   	(bad)  
    e781:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e784:	74 73                	je     e7f9 <_IO_stdin_used+0x17f9>
    e786:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    e78a:	61                   	(bad)  
    e78b:	6c                   	ins    BYTE PTR es:[rdi],dx
    e78c:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    e78f:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e792:	74 73                	je     e807 <_IO_stdin_used+0x1807>
    e794:	20 63 61             	and    BYTE PTR [rbx+0x61],ah
    e797:	75 67                	jne    e800 <_IO_stdin_used+0x1800>
    e799:	68 74 3a 20 25       	push   0x25203a74
    e79e:	64 0d 0a 00 61 72    	fs or  eax,0x7261000a
    e7a4:	70 00                	jo     e7a6 <_IO_stdin_used+0x17a6>
    e7a6:	61                   	(bad)  
    e7a7:	64 64 00 72 75       	fs add BYTE PTR fs:[rdx+0x75],dh
    e7ac:	6c                   	ins    BYTE PTR es:[rdi],dx
    e7ad:	65 00 73 65          	add    BYTE PTR gs:[rbx+0x65],dh
    e7b1:	74 00                	je     e7b3 <_IO_stdin_used+0x17b3>
    e7b3:	00 00                	add    BYTE PTR [rax],al
    e7b5:	00 00                	add    BYTE PTR [rax],al
    e7b7:	00 65 72             	add    BYTE PTR [rbp+0x72],ah
    e7ba:	72 6f                	jb     e82b <_IO_stdin_used+0x182b>
    e7bc:	72 3a                	jb     e7f8 <_IO_stdin_used+0x17f8>
    e7be:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    e7c1:	6d                   	ins    DWORD PTR es:[rdi],dx
    e7c2:	6d                   	ins    DWORD PTR es:[rdi],dx
    e7c3:	61                   	(bad)  
    e7c4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e7c5:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    e7c9:	74 20                	je     e7eb <_IO_stdin_used+0x17eb>
    e7cb:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e7cd:	75 6e                	jne    e83d <_IO_stdin_used+0x183d>
    e7cf:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    e7d2:	25 73 0d 0a 00       	and    eax,0xa0d73
    e7d7:	69 70 76 34 00 41 64 	imul   esi,DWORD PTR [rax+0x76],0x64410034
    e7de:	64 65 64 20 25 73 20 	fs gs and BYTE PTR fs:[rip+0x6f742073],ah        # 6f75085a <_end+0x6f614852>
    e7e5:	74 6f 
    e7e7:	20 62 6c             	and    BYTE PTR [rdx+0x6c],ah
    e7ea:	61                   	(bad)  
    e7eb:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e7ee:	69 73 74 0d 0a 00 09 	imul   esi,DWORD PTR [rbx+0x74],0x9000a0d
    e7f5:	09 09                	or     DWORD PTR [rcx],ecx
    e7f7:	09 09                	or     DWORD PTR [rcx],ecx
    e7f9:	09 5b 20             	or     DWORD PTR [rbx+0x20],ebx
    e7fc:	25 64 20 7c 20       	and    eax,0x207c2064
    e801:	25 64 20 7c 00       	and    eax,0x7c2064
    e806:	20 25 73 20 5d 00    	and    BYTE PTR [rip+0x5d2073],ah        # 5e087f <_end+0x4a4877>
    e80c:	72 00                	jb     e80e <_IO_stdin_used+0x180e>
    e80e:	46 61                	rex.RX (bad) 
    e810:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    e817:	6f 
    e818:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    e81b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e81d:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    e820:	6c                   	ins    BYTE PTR es:[rdi],dx
    e821:	65 20 25 73 0d 0a 00 	and    BYTE PTR gs:[rip+0xa0d73],ah        # af59b <rules+0x9d2bb>
    e828:	4c 6f                	rex.WR outs dx,DWORD PTR ds:[rsi]
    e82a:	61                   	(bad)  
    e82b:	64 65 64 20 72 75    	fs gs and BYTE PTR fs:[rdx+0x75],dh
    e831:	6c                   	ins    BYTE PTR es:[rdi],dx
    e832:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    e836:	6c                   	ins    BYTE PTR es:[rdi],dx
    e837:	65 20 25 73 0d 0a 00 	and    BYTE PTR gs:[rip+0xa0d73],ah        # af5b1 <rules+0x9d2d1>
    e83e:	25 73 20 77 61       	and    eax,0x61772073
    e843:	73 20                	jae    e865 <_IO_stdin_used+0x1865>
    e845:	6d                   	ins    DWORD PTR es:[rdi],dx
    e846:	61                   	(bad)  
    e847:	74 63                	je     e8ac <_IO_stdin_used+0x18ac>
    e849:	68 65 64 20 25       	push   0x25206465
    e84e:	64 20 74 69 6d       	and    BYTE PTR fs:[rcx+rbp*2+0x6d],dh
    e853:	65 73 0d             	gs jae e863 <_IO_stdin_used+0x1863>
    e856:	0a 00                	or     al,BYTE PTR [rax]
    e858:	25 73 3a 20 72       	and    eax,0x72203a73
    e85d:	75 6c                	jne    e8cb <_IO_stdin_used+0x18cb>
    e85f:	65 20 6e 6f          	and    BYTE PTR gs:[rsi+0x6f],ch
    e863:	74 20                	je     e885 <_IO_stdin_used+0x1885>
    e865:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e867:	75 6e                	jne    e8d7 <_IO_stdin_used+0x18d7>
    e869:	64 0d 0a 00 09 25    	fs or  eax,0x2509000a
    e86f:	73 20                	jae    e891 <_IO_stdin_used+0x1891>
    e871:	6d                   	ins    DWORD PTR es:[rdi],dx
    e872:	61                   	(bad)  
    e873:	74 63                	je     e8d8 <_IO_stdin_used+0x18d8>
    e875:	68 65 64 20 25       	push   0x25206465
    e87a:	64 20 74 69 6d       	and    BYTE PTR fs:[rcx+rbp*2+0x6d],dh
    e87f:	65 73 0a             	gs jae e88c <_IO_stdin_used+0x188c>
    e882:	00 0a                	add    BYTE PTR [rdx],cl
    e884:	09 25 73 20 2d 3e    	or     DWORD PTR [rip+0x3e2d2073],esp        # 3e2e08fd <_end+0x3e1a48f5>
    e88a:	20 25 73 00 43 75    	and    BYTE PTR [rip+0x75430073],ah        # 7543e903 <_end+0x753028fb>
    e890:	72 72                	jb     e904 <_IO_stdin_used+0x1904>
    e892:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e894:	74 20                	je     e8b6 <_IO_stdin_used+0x18b6>
    e896:	53                   	push   rbx
    e897:	50                   	push   rax
    e898:	49 20 4d 61          	rex.WB and BYTE PTR [r13+0x61],cl
    e89c:	78 3a                	js     e8d8 <_IO_stdin_used+0x18d8>
    e89e:	20 25 64 0a 00 0a    	and    BYTE PTR [rip+0xa000a64],ah        # a00f308 <_end+0x9ed3300>
    e8a4:	4e                   	rex.WRX
    e8a5:	65 77 20             	gs ja  e8c8 <_IO_stdin_used+0x18c8>
    e8a8:	53                   	push   rbx
    e8a9:	50                   	push   rax
    e8aa:	49 20 4d 61          	rex.WB and BYTE PTR [r13+0x61],cl
    e8ae:	78 3a                	js     e8ea <_IO_stdin_used+0x18ea>
    e8b0:	20 25 64 0d 0a 00    	and    BYTE PTR [rip+0xa0d64],ah        # af61a <rules+0x9d33a>
    e8b6:	00 00                	add    BYTE PTR [rax],al
    e8b8:	61                   	(bad)  
    e8b9:	00 00                	add    BYTE PTR [rax],al
    e8bb:	00 00                	add    BYTE PTR [rax],al
    e8bd:	00 00                	add    BYTE PTR [rax],al
    e8bf:	00 42 61             	add    BYTE PTR [rdx+0x61],al
    e8c2:	73 69                	jae    e92d <_IO_stdin_used+0x192d>
    e8c4:	63 20                	movsxd esp,DWORD PTR [rax]
    e8c6:	70 6f                	jo     e937 <_IO_stdin_used+0x1937>
    e8c8:	72 74                	jb     e93e <_IO_stdin_used+0x193e>
    e8ca:	73 63                	jae    e92f <_IO_stdin_used+0x192f>
    e8cc:	61                   	(bad)  
    e8cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e8ce:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    e8d2:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    e8d7:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    e8da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e8db:	6d                   	ins    DWORD PTR es:[rdi],dx
    e8dc:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    e8df:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    e8e2:	64 72 65             	fs jb  e94a <_IO_stdin_used+0x194a>
    e8e5:	73 73                	jae    e95a <_IO_stdin_used+0x195a>
    e8e7:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f360 <_IO_stdin_used+0x2360>
    e8ed:	00 00                	add    BYTE PTR [rax],al
    e8ef:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    e8f2:	72 74                	jb     e968 <_IO_stdin_used+0x1968>
    e8f4:	73 63                	jae    e959 <_IO_stdin_used+0x1959>
    e8f6:	61                   	(bad)  
    e8f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e8f8:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    e8fc:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    e901:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    e904:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e905:	6d                   	ins    DWORD PTR es:[rdi],dx
    e906:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7462097f <_end+0x744e4977>
    e90c:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f385 <_IO_stdin_used+0x2385>
    e912:	00 00                	add    BYTE PTR [rax],al
    e914:	00 00                	add    BYTE PTR [rax],al
    e916:	00 00                	add    BYTE PTR [rax],al
    e918:	46                   	rex.RX
    e919:	49                   	rex.WB
    e91a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    e91e:	72 74                	jb     e994 <_IO_stdin_used+0x1994>
    e920:	73 63                	jae    e985 <_IO_stdin_used+0x1985>
    e922:	61                   	(bad)  
    e923:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e924:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    e928:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    e92d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    e930:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e931:	6d                   	ins    DWORD PTR es:[rdi],dx
    e932:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    e935:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    e938:	64 72 65             	fs jb  e9a0 <_IO_stdin_used+0x19a0>
    e93b:	73 73                	jae    e9b0 <_IO_stdin_used+0x19b0>
    e93d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f3b6 <__GNU_EH_FRAME_HDR+0x12>
    e943:	00 00                	add    BYTE PTR [rax],al
    e945:	00 00                	add    BYTE PTR [rax],al
    e947:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    e94a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    e94e:	72 74                	jb     e9c4 <_IO_stdin_used+0x19c4>
    e950:	73 63                	jae    e9b5 <_IO_stdin_used+0x19b5>
    e952:	61                   	(bad)  
    e953:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e954:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    e958:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    e95d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    e960:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e961:	6d                   	ins    DWORD PTR es:[rdi],dx
    e962:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 746209db <_end+0x744e49d3>
    e968:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000f3e1 <_end+0x2fed33d9>
    e96e:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    e971:	30 2e                	xor    BYTE PTR [rsi],ch
    e973:	31 00                	xor    DWORD PTR [rax],eax
    e975:	30 2e                	xor    BYTE PTR [rsi],ch
    e977:	30 2e                	xor    BYTE PTR [rsi],ch
    e979:	30 2e                	xor    BYTE PTR [rsi],ch
    e97b:	31 00                	xor    DWORD PTR [rax],eax
    e97d:	00 00                	add    BYTE PTR [rax],al
    e97f:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    e982:	70 20                	jo     e9a4 <_IO_stdin_used+0x19a4>
    e984:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e986:	74 72                	je     e9fa <_IO_stdin_used+0x19fa>
    e988:	79 20                	jns    e9aa <_IO_stdin_used+0x19aa>
    e98a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    e98d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e98e:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    e994:	72 20                	jb     e9b6 <_IO_stdin_used+0x19b6>
    e996:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    e99d:	65 73 73             	gs jae ea13 <_IO_stdin_used+0x1a13>
    e9a0:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77212419 <_end+0x770d6411>
    e9a6:	61                   	(bad)  
    e9a7:	73 20                	jae    e9c9 <_IO_stdin_used+0x19c9>
    e9a9:	25 73 20 69 73       	and    eax,0x73692073
    e9ae:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    e9b1:	77 20                	ja     e9d3 <_IO_stdin_used+0x19d3>
    e9b3:	25 73 00 72 00       	and    eax,0x720073
    e9b8:	2f                   	(bad)  
    e9b9:	75 73                	jne    ea2e <_IO_stdin_used+0x1a2e>
    e9bb:	72 2f                	jb     e9ec <_IO_stdin_used+0x19ec>
    e9bd:	73 68                	jae    ea27 <_IO_stdin_used+0x1a27>
    e9bf:	61                   	(bad)  
    e9c0:	72 65                	jb     ea27 <_IO_stdin_used+0x1a27>
    e9c2:	2f                   	(bad)  
    e9c3:	76 69                	jbe    ea2e <_IO_stdin_used+0x1a2e>
    e9c5:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    e9cc:	63 61 
    e9ce:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    e9d1:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    e9d5:	00 00                	add    BYTE PTR [rax],al
    e9d7:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    e9da:	75 6c                	jne    ea48 <_IO_stdin_used+0x1a48>
    e9dc:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    e9e0:	74 20                	je     ea02 <_IO_stdin_used+0x1a02>
    e9e2:	6c                   	ins    BYTE PTR es:[rdi],dx
    e9e3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e9e4:	61                   	(bad)  
    e9e5:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    e9e9:	70 20                	jo     ea0b <_IO_stdin_used+0x1a0b>
    e9eb:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    e9ee:	68 65 20 66 72       	push   0x72662065
    e9f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e9f4:	6d                   	ins    DWORD PTR es:[rdi],dx
    e9f5:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    e9f9:	61                   	(bad)  
    e9fa:	62 61                	(bad)  
    e9fc:	73 65                	jae    ea63 <_IO_stdin_used+0x1a63>
    e9fe:	2c 20                	sub    al,0x20
    ea00:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    ea07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ea08:	65 78 69             	gs js  ea74 <_IO_stdin_used+0x1a74>
    ea0b:	73 74                	jae    ea81 <_IO_stdin_used+0x1a81>
    ea0d:	61                   	(bad)  
    ea0e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ea0f:	74 00                	je     ea11 <_IO_stdin_used+0x1a11>
    ea11:	0a 00                	or     al,BYTE PTR [rax]
    ea13:	2c 00                	sub    al,0x0
    ea15:	00 00                	add    BYTE PTR [rax],al
    ea17:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    ea1a:	64 61                	fs (bad) 
    ea1c:	74 69                	je     ea87 <_IO_stdin_used+0x1a87>
    ea1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ea1f:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    ea24:	53                   	push   rbx
    ea25:	51                   	push   rcx
    ea26:	6c                   	ins    BYTE PTR es:[rdi],dx
    ea27:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    ea2e:	6f 
    ea2f:	72 3a                	jb     ea6b <_IO_stdin_used+0x1a6b>
    ea31:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f4aa <__GNU_EH_FRAME_HDR+0x106>
    ea37:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    ea3a:	53                   	push   rbx
    ea3b:	45 52                	rex.RB push r10
    ea3d:	54                   	push   rsp
    ea3e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    ea41:	54                   	push   rsp
    ea42:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    ea46:	70 5f                	jo     eaa7 <_IO_stdin_used+0x1aa7>
    ea48:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    ea4b:	68 65 20 28 69       	push   0x69282065
    ea50:	70 5f                	jo     eab1 <_IO_stdin_used+0x1ab1>
    ea52:	61                   	(bad)  
    ea53:	64 64 72 65          	fs fs jb eabc <_IO_stdin_used+0x1abc>
    ea57:	73 73                	jae    eacc <_IO_stdin_used+0x1acc>
    ea59:	2c 20                	sub    al,0x20
    ea5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    ea5c:	61                   	(bad)  
    ea5d:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    ea60:	64 64 72 65          	fs fs jb eac9 <_IO_stdin_used+0x1ac9>
    ea64:	73 73                	jae    ead9 <_IO_stdin_used+0x1ad9>
    ea66:	29 20                	sub    DWORD PTR [rax],esp
    ea68:	56                   	push   rsi
    ea69:	41                   	rex.B
    ea6a:	4c 55                	rex.WR push rbp
    ea6c:	45 53                	rex.RB push r11
    ea6e:	20 28                	and    BYTE PTR [rax],ch
    ea70:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202d0ce9 <_end+0x20194ce1>
    ea76:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b2a0cef <_end+0x3b164ce7>
    ea7c:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    ea7f:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    ea86:	63 6f 
    ea88:	75 6e                	jne    eaf8 <_IO_stdin_used+0x1af8>
    ea8a:	74 65                	je     eaf1 <_IO_stdin_used+0x1af1>
    ea8c:	72 65                	jb     eaf3 <_IO_stdin_used+0x1af3>
    ea8e:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    ea92:	72 6f                	jb     eb03 <_IO_stdin_used+0x1b03>
    ea94:	72 3a                	jb     ead0 <_IO_stdin_used+0x1ad0>
    ea96:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00f50f <_end+0x2eed3507>
    ea9c:	75 73                	jne    eb11 <_IO_stdin_used+0x1b11>
    ea9e:	72 2f                	jb     eacf <_IO_stdin_used+0x1acf>
    eaa0:	73 68                	jae    eb0a <_IO_stdin_used+0x1b0a>
    eaa2:	61                   	(bad)  
    eaa3:	72 65                	jb     eb0a <_IO_stdin_used+0x1b0a>
    eaa5:	2f                   	(bad)  
    eaa6:	76 69                	jbe    eb11 <_IO_stdin_used+0x1b11>
    eaa8:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    eaaf:	2e 64 
    eab1:	62                   	(bad)  
    eab2:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    eab5:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    eabc:	72 6f 
    eabe:	72 20                	jb     eae0 <_IO_stdin_used+0x1ae0>
    eac0:	25 73 0a 00 00       	and    eax,0xa73
    eac5:	00 00                	add    BYTE PTR [rax],al
    eac7:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    eaca:	53                   	push   rbx
    eacb:	45 52                	rex.RB push r10
    eacd:	54                   	push   rsp
    eace:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    ead1:	54                   	push   rsp
    ead2:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    ead6:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    eadd:	20 28                	and    BYTE PTR [rax],ch
    eadf:	73 65                	jae    eb46 <_IO_stdin_used+0x1b46>
    eae1:	72 76                	jb     eb59 <_IO_stdin_used+0x1b59>
    eae3:	5f                   	pop    rdi
    eae4:	61                   	(bad)  
    eae5:	64 64 72 2c          	fs fs jb eb15 <_IO_stdin_used+0x1b15>
    eae9:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    eaec:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    eaf3:	73 65                	jae    eb5a <_IO_stdin_used+0x1b5a>
    eaf5:	72 76                	jb     eb6d <_IO_stdin_used+0x1b6d>
    eaf7:	5f                   	pop    rdi
    eaf8:	70 6f                	jo     eb69 <_IO_stdin_used+0x1b69>
    eafa:	72 74                	jb     eb70 <_IO_stdin_used+0x1b70>
    eafc:	2c 63                	sub    al,0x63
    eafe:	6c                   	ins    BYTE PTR es:[rdi],dx
    eaff:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    eb06:	73 65                	jae    eb6d <_IO_stdin_used+0x1b6d>
    eb08:	72 76                	jb     eb80 <_IO_stdin_used+0x1b80>
    eb0a:	5f                   	pop    rdi
    eb0b:	70 6b                	jo     eb78 <_IO_stdin_used+0x1b78>
    eb0d:	74 5f                	je     eb6e <_IO_stdin_used+0x1b6e>
    eb0f:	73 65                	jae    eb76 <_IO_stdin_used+0x1b76>
    eb11:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eb12:	74 2c                	je     eb40 <_IO_stdin_used+0x1b40>
    eb14:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    eb18:	70 6b                	jo     eb85 <_IO_stdin_used+0x1b85>
    eb1a:	74 5f                	je     eb7b <_IO_stdin_used+0x1b7b>
    eb1c:	73 65                	jae    eb83 <_IO_stdin_used+0x1b83>
    eb1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eb1f:	74 2c                	je     eb4d <_IO_stdin_used+0x1b4d>
    eb21:	73 65                	jae    eb88 <_IO_stdin_used+0x1b88>
    eb23:	72 76                	jb     eb9b <_IO_stdin_used+0x1b9b>
    eb25:	5f                   	pop    rdi
    eb26:	70 6b                	jo     eb93 <_IO_stdin_used+0x1b93>
    eb28:	74 5f                	je     eb89 <_IO_stdin_used+0x1b89>
    eb2a:	72 65                	jb     eb91 <_IO_stdin_used+0x1b91>
    eb2c:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    eb2f:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    eb33:	70 6b                	jo     eba0 <_IO_stdin_used+0x1ba0>
    eb35:	74 5f                	je     eb96 <_IO_stdin_used+0x1b96>
    eb37:	72 65                	jb     eb9e <_IO_stdin_used+0x1b9e>
    eb39:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    eb3c:	70 72                	jo     ebb0 <_IO_stdin_used+0x1bb0>
    eb3e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eb3f:	74 6f                	je     ebb0 <_IO_stdin_used+0x1bb0>
    eb41:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    eb44:	2c 61                	sub    al,0x61
    eb46:	76 67                	jbe    ebaf <_IO_stdin_used+0x1baf>
    eb48:	5f                   	pop    rdi
    eb49:	70 70                	jo     ebbb <_IO_stdin_used+0x1bbb>
    eb4b:	73 2c                	jae    eb79 <_IO_stdin_used+0x1b79>
    eb4d:	73 74                	jae    ebc3 <_IO_stdin_used+0x1bc3>
    eb4f:	61                   	(bad)  
    eb50:	72 74                	jb     ebc6 <_IO_stdin_used+0x1bc6>
    eb52:	5f                   	pop    rdi
    eb53:	74 69                	je     ebbe <_IO_stdin_used+0x1bbe>
    eb55:	6d                   	ins    DWORD PTR es:[rdi],dx
    eb56:	65 2c 65             	gs sub al,0x65
    eb59:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eb5a:	64 5f                	fs pop rdi
    eb5c:	74 69                	je     ebc7 <_IO_stdin_used+0x1bc7>
    eb5e:	6d                   	ins    DWORD PTR es:[rdi],dx
    eb5f:	65 2c 64             	gs sub al,0x64
    eb62:	61                   	(bad)  
    eb63:	74 61                	je     ebc6 <_IO_stdin_used+0x1bc6>
    eb65:	5f                   	pop    rdi
    eb66:	70 6b                	jo     ebd3 <_IO_stdin_used+0x1bd3>
    eb68:	74 73                	je     ebdd <_IO_stdin_used+0x1bdd>
    eb6a:	2c 63                	sub    al,0x63
    eb6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eb6d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eb6e:	74 72                	je     ebe2 <_IO_stdin_used+0x1be2>
    eb70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eb71:	6c                   	ins    BYTE PTR es:[rdi],dx
    eb72:	5f                   	pop    rdi
    eb73:	70 6b                	jo     ebe0 <_IO_stdin_used+0x1be0>
    eb75:	74 73                	je     ebea <_IO_stdin_used+0x1bea>
    eb77:	29 20                	sub    DWORD PTR [rax],esp
    eb79:	56                   	push   rsi
    eb7a:	41                   	rex.B
    eb7b:	4c 55                	rex.WR push rbp
    eb7d:	45 53                	rex.RB push r11
    eb7f:	20 28                	and    BYTE PTR [rax],ch
    eb81:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222d0dfa <_end+0x22194df2>
    eb87:	25 73 22 2c 25       	and    eax,0x252c2273
    eb8c:	6c                   	ins    BYTE PTR es:[rdi],dx
    eb8d:	64 2c 25             	fs sub al,0x25
    eb90:	6c                   	ins    BYTE PTR es:[rdi],dx
    eb91:	64 2c 25             	fs sub al,0x25
    eb94:	64 2c 25             	fs sub al,0x25
    eb97:	64 2c 25             	fs sub al,0x25
    eb9a:	64 2c 25             	fs sub al,0x25
    eb9d:	64 2c 25             	fs sub al,0x25
    eba0:	64 2c 25             	fs sub al,0x25
    eba3:	64 2c 25             	fs sub al,0x25
    eba6:	6c                   	ins    BYTE PTR es:[rdi],dx
    eba7:	64 2c 25             	fs sub al,0x25
    ebaa:	6c                   	ins    BYTE PTR es:[rdi],dx
    ebab:	64 2c 25             	fs sub al,0x25
    ebae:	64 2c 25             	fs sub al,0x25
    ebb1:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    ebb4:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    ebb7:	4c                   	rex.WR
    ebb8:	49 54                	rex.WB push r12
    ebba:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    ebbe:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    ebc1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ebc2:	74 65                	je     ec29 <_IO_stdin_used+0x1c29>
    ebc4:	72 65                	jb     ec2b <_IO_stdin_used+0x1c2b>
    ebc6:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    ebca:	72 6f                	jb     ec3b <_IO_stdin_used+0x1c3b>
    ebcc:	72 3a                	jb     ec08 <_IO_stdin_used+0x1c08>
    ebce:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300f647 <_end+0x52ed363f>
    ebd4:	74 72                	je     ec48 <_IO_stdin_used+0x1c48>
    ebd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    ebd7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ebd8:	63 20                	movsxd esp,DWORD PTR [rax]
    ebda:	73 75                	jae    ec51 <_IO_stdin_used+0x1c51>
    ebdc:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    ebdf:	73 73                	jae    ec54 <_IO_stdin_used+0x1c54>
    ebe1:	66 75 6c             	data16 jne ec50 <_IO_stdin_used+0x1c50>
    ebe4:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    ebe7:	65 72 79             	gs jb  ec63 <_IO_stdin_used+0x1c63>
    ebea:	3a 20                	cmp    ah,BYTE PTR [rax]
    ebec:	25 73 0a 00 4c       	and    eax,0x4c000a73
    ebf1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ebf2:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    ebf9:	6f 
    ebfa:	72 72                	jb     ec6e <_IO_stdin_used+0x1c6e>
    ebfc:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    ec01:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ec02:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    ec09:	6f 
    ec0a:	72 72                	jb     ec7e <_IO_stdin_used+0x1c7e>
    ec0c:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    ec11:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ec12:	73 73                	jae    ec87 <_IO_stdin_used+0x1c87>
    ec14:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    ec1b:	50                   	push   rax
    ec1c:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    ec1f:	75 74                	jne    ec95 <_IO_stdin_used+0x1c95>
    ec21:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    ec25:	72 63                	jb     ec8a <_IO_stdin_used+0x1c8a>
    ec27:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    ec2b:	74 65                	je     ec92 <_IO_stdin_used+0x1c92>
    ec2d:	6d                   	ins    DWORD PTR es:[rdi],dx
    ec2e:	70 74                	jo     eca4 <_IO_stdin_used+0x1ca4>
    ec30:	3a 20                	cmp    ah,BYTE PTR [rax]
    ec32:	25 73 28 73 75       	and    eax,0x75732873
    ec37:	73 70                	jae    eca9 <_IO_stdin_used+0x1ca9>
    ec39:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    ec3e:	2d 3e 20 25 73       	sub    eax,0x7325203e
    ec43:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 61670cae <_end+0x61534ca6>
    ec4a:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    ec51:	67 
    ec52:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    ec59:	50                   	push   rax
    ec5a:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    ec5f:	4c                   	rex.WR
    ec60:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    ec64:	54                   	push   rsp
    ec65:	52                   	push   rdx
    ec66:	41                   	rex.B
    ec67:	4e 53                	rex.WRX push rbx
    ec69:	3a 20                	cmp    ah,BYTE PTR [rax]
    ec6b:	25 64 3a 20 25       	and    eax,0x25203a64
    ec70:	73 3a                	jae    ecac <_IO_stdin_used+0x1cac>
    ec72:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    ec77:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642626f0 <_end+0x641266e8>
    ec7d:	0a 00                	or     al,BYTE PTR [rax]
    ec7f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ec82:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    ec86:	57                   	push   rdi
    ec87:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    ec8a:	4e 56                	rex.WRX push rsi
    ec8c:	3a 20                	cmp    ah,BYTE PTR [rax]
    ec8e:	25 64 3a 20 25       	and    eax,0x25203a64
    ec93:	73 3a                	jae    eccf <_IO_stdin_used+0x1ccf>
    ec95:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    ec9a:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64262713 <_end+0x6412670b>
    eca0:	0a 00                	or     al,BYTE PTR [rax]
    eca2:	00 00                	add    BYTE PTR [rax],al
    eca4:	00 00                	add    BYTE PTR [rax],al
    eca6:	00 00                	add    BYTE PTR [rax],al
    eca8:	53                   	push   rbx
    eca9:	50                   	push   rax
    ecaa:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    ecaf:	20 32                	and    BYTE PTR [rdx],dh
    ecb1:	2f                   	(bad)  
    ecb2:	33 3a                	xor    edi,DWORD PTR [rdx]
    ecb4:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 2521271e <_end+0x250d6716>
    ecba:	73 3a                	jae    ecf6 <_IO_stdin_used+0x1cf6>
    ecbc:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    ecc1:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426273a <_end+0x64126732>
    ecc7:	0a 00                	or     al,BYTE PTR [rax]
    ecc9:	00 00                	add    BYTE PTR [rax],al
    eccb:	00 00                	add    BYTE PTR [rax],al
    eccd:	00 00                	add    BYTE PTR [rax],al
    eccf:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ecd2:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    ecd6:	54                   	push   rsp
    ecd7:	52                   	push   rdx
    ecd8:	59                   	pop    rcx
    ecd9:	3a 20                	cmp    ah,BYTE PTR [rax]
    ecdb:	25 64 3a 20 53       	and    eax,0x53203a64
    ece0:	45 53                	rex.RB push r11
    ece2:	53                   	push   rbx
    ece3:	49                   	rex.WB
    ece4:	4f                   	rex.WRXB
    ece5:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    ece9:	54                   	push   rsp
    ecea:	3a 20                	cmp    ah,BYTE PTR [rax]
    ecec:	25 73 3a 25 64       	and    eax,0x64253a73
    ecf1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260d35 <_end+0x73124d2d>
    ecf7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f761 <__GNU_EH_FRAME_HDR+0x3bd>
    ecfd:	00 00                	add    BYTE PTR [rax],al
    ecff:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ed02:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    ed06:	54                   	push   rsp
    ed07:	52                   	push   rdx
    ed08:	59                   	pop    rcx
    ed09:	3a 20                	cmp    ah,BYTE PTR [rax]
    ed0b:	25 64 3a 20 50       	and    eax,0x50203a64
    ed10:	4f                   	rex.WRXB
    ed11:	4c                   	rex.WR
    ed12:	49 54                	rex.WB push r12
    ed14:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    ed18:	4e 56                	rex.WRX push rsi
    ed1a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    ed1d:	44 20 33             	and    BYTE PTR [rbx],r14b
    ed20:	2f                   	(bad)  
    ed21:	33 3a                	xor    edi,DWORD PTR [rdx]
    ed23:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426279c <_end+0x64126794>
    ed29:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260d6d <_end+0x73124d65>
    ed2f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f799 <__GNU_EH_FRAME_HDR+0x3f5>
    ed35:	00 00                	add    BYTE PTR [rax],al
    ed37:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ed3a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    ed3e:	54                   	push   rsp
    ed3f:	52                   	push   rdx
    ed40:	59                   	pop    rcx
    ed41:	3a 20                	cmp    ah,BYTE PTR [rax]
    ed43:	25 64 3a 20 50       	and    eax,0x50203a64
    ed48:	4f                   	rex.WRXB
    ed49:	4c                   	rex.WR
    ed4a:	49 54                	rex.WB push r12
    ed4c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    ed50:	4e 56                	rex.WRX push rsi
    ed52:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    ed55:	44 20 32             	and    BYTE PTR [rdx],r14b
    ed58:	2f                   	(bad)  
    ed59:	33 3a                	xor    edi,DWORD PTR [rdx]
    ed5b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642627d4 <_end+0x641267cc>
    ed61:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260da5 <_end+0x73124d9d>
    ed67:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f7d1 <__GNU_EH_FRAME_HDR+0x42d>
    ed6d:	00 00                	add    BYTE PTR [rax],al
    ed6f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ed72:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    ed76:	54                   	push   rsp
    ed77:	52                   	push   rdx
    ed78:	59                   	pop    rcx
    ed79:	3a 20                	cmp    ah,BYTE PTR [rax]
    ed7b:	25 64 3a 20 50       	and    eax,0x50203a64
    ed80:	4f                   	rex.WRXB
    ed81:	4c                   	rex.WR
    ed82:	49 54                	rex.WB push r12
    ed84:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    ed88:	4e 56                	rex.WRX push rsi
    ed8a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    ed8d:	44 20 31             	and    BYTE PTR [rcx],r14b
    ed90:	2f                   	(bad)  
    ed91:	33 3a                	xor    edi,DWORD PTR [rdx]
    ed93:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426280c <_end+0x64126804>
    ed99:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260ddd <_end+0x73124dd5>
    ed9f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f809 <__GNU_EH_FRAME_HDR+0x465>
    eda5:	00 00                	add    BYTE PTR [rax],al
    eda7:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    edaa:	00 00                	add    BYTE PTR [rax],al
    edac:	00 00                	add    BYTE PTR [rax],al
    edae:	00 00                	add    BYTE PTR [rax],al
    edb0:	43 52                	rex.XB push r10
    edb2:	49 54                	rex.WB push r12
    edb4:	49                   	rex.WB
    edb5:	43                   	rex.XB
    edb6:	41                   	rex.B
    edb7:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    edbb:	49                   	rex.WB
    edbc:	4c                   	rex.WR
    edbd:	45                   	rex.RB
    edbe:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    edc3:	4f 50                	rex.WRXB push r8
    edc5:	45                   	rex.RB
    edc6:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    edca:	4c                   	rex.WR
    edcb:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    edcf:	52                   	push   rdx
    edd0:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    edd4:	47                   	rex.RXB
    edd5:	49                   	rex.WB
    edd6:	4e                   	rex.WRX
    edd7:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    edda:	25 73 0a 00 25       	and    eax,0x25000a73
    eddf:	73 20                	jae    ee01 <_IO_stdin_used+0x1e01>
    ede1:	25 73 20 25 73       	and    eax,0x73252073
    ede6:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260e2a <_end+0x73124e22>
    edec:	0a 00                	or     al,BYTE PTR [rax]
    edee:	25 73 20 25 73       	and    eax,0x73252073
    edf3:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426286c <_end+0x64126864>
    edf9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260e3d <_end+0x73124e35>
    edff:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f869 <__GNU_EH_FRAME_HDR+0x4c5>
    ee05:	00 00                	add    BYTE PTR [rax],al
    ee07:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    ee0a:	79 00                	jns    ee0c <_IO_stdin_used+0x1e0c>
    ee0c:	41                   	rex.B
    ee0d:	4e 59                	rex.WRX pop rcx
    ee0f:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    ee12:	4d 50                	rex.WRB push r8
    ee14:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    ee18:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    ee1b:	50                   	push   rax
    ee1c:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    ee1f:	72 5f                	jb     ee80 <_IO_stdin_used+0x1e80>
    ee21:	6d                   	ins    DWORD PTR es:[rdi],dx
    ee22:	61                   	(bad)  
    ee23:	74 63                	je     ee88 <_IO_stdin_used+0x1e88>
    ee25:	68 00 6e 6f 6e       	push   0x6e6f6e00
    ee2a:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    ee2e:	72 65                	jb     ee95 <_IO_stdin_used+0x1e95>
    ee30:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    ee33:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ee37:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ee38:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    ee3b:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee3c:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    ee41:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    ee44:	25 73 0a 00 3b       	and    eax,0x3b000a73
    ee49:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    ee4c:	75 6e                	jne    eebc <_IO_stdin_used+0x1ebc>
    ee4e:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    ee52:	65 72 61             	gs jb  eeb6 <_IO_stdin_used+0x1eb6>
    ee55:	74 6f                	je     eec6 <_IO_stdin_used+0x1ec6>
    ee57:	72 00                	jb     ee59 <_IO_stdin_used+0x1e59>
    ee59:	61                   	(bad)  
    ee5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee5b:	65 72 74             	gs jb  eed2 <_IO_stdin_used+0x1ed2>
    ee5e:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    ee61:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ee62:	6d                   	ins    DWORD PTR es:[rdi],dx
    ee63:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    ee65:	65 74 00             	gs je  ee68 <_IO_stdin_used+0x1e68>
    ee68:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    ee6d:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    ee74:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ee75:	61                   	(bad)  
    ee76:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee77:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ee78:	65 74 00             	gs je  ee7b <_IO_stdin_used+0x1e7b>
    ee7b:	22 3b                	and    bh,BYTE PTR [rbx]
    ee7d:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    ee80:	6d                   	ins    DWORD PTR es:[rdi],dx
    ee81:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    ee84:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    ee87:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    ee8a:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    ee8e:	74 68                	je     eef8 <_IO_stdin_used+0x1ef8>
    ee90:	3a 00                	cmp    al,BYTE PTR [rax]
    ee92:	74 79                	je     ef0d <_IO_stdin_used+0x1f0d>
    ee94:	70 65                	jo     eefb <_IO_stdin_used+0x1efb>
    ee96:	3a 00                	cmp    al,BYTE PTR [rax]
    ee98:	74 61                	je     eefb <_IO_stdin_used+0x1efb>
    ee9a:	72 67                	jb     ef03 <_IO_stdin_used+0x1f03>
    ee9c:	65 74 3a             	gs je  eed9 <_IO_stdin_used+0x1ed9>
    ee9f:	22 00                	and    al,BYTE PTR [rax]
    eea1:	73 65                	jae    ef08 <_IO_stdin_used+0x1f08>
    eea3:	76 3a                	jbe    eedf <_IO_stdin_used+0x1edf>
    eea5:	00 00                	add    BYTE PTR [rax],al
    eea7:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    eeaa:	6c                   	ins    BYTE PTR es:[rdi],dx
    eeab:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    eeaf:	76 65                	jbe    ef16 <_IO_stdin_used+0x1f16>
    eeb1:	72 69                	jb     ef1c <_IO_stdin_used+0x1f1c>
    eeb3:	74 79                	je     ef2e <_IO_stdin_used+0x1f2e>
    eeb5:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    eeb8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eeb9:	75 6c                	jne    ef27 <_IO_stdin_used+0x1f27>
    eebb:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    eebf:	20 3e                	and    BYTE PTR [rsi],bh
    eec1:	20 30                	and    BYTE PTR [rax],dh
    eec3:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    eec6:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    eecd:	00 
    eece:	00 00                	add    BYTE PTR [rax],al
    eed0:	52                   	push   rdx
    eed1:	75 6c                	jne    ef3f <_IO_stdin_used+0x1f3f>
    eed3:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    eed7:	76 65                	jbe    ef3e <_IO_stdin_used+0x1f3e>
    eed9:	72 69                	jb     ef44 <_IO_stdin_used+0x1f44>
    eedb:	74 79                	je     ef56 <_IO_stdin_used+0x1f56>
    eedd:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    eee0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eee1:	75 6c                	jne    ef4f <_IO_stdin_used+0x1f4f>
    eee3:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    eee7:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    eeea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eeeb:	75 6d                	jne    ef5a <_IO_stdin_used+0x1f5a>
    eeed:	65 72 69             	gs jb  ef59 <_IO_stdin_used+0x1f59>
    eef0:	63 20                	movsxd esp,DWORD PTR [rax]
    eef2:	76 61                	jbe    ef55 <_IO_stdin_used+0x1f55>
    eef4:	6c                   	ins    BYTE PTR es:[rdi],dx
    eef5:	75 65                	jne    ef5c <_IO_stdin_used+0x1f5c>
    eef7:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    eefa:	79 70                	jns    ef6c <_IO_stdin_used+0x1f6c>
    eefc:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    eeff:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    ef01:	76 61                	jbe    ef64 <_IO_stdin_used+0x1f64>
    ef03:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef04:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    ef0b:	20 
    ef0c:	74 79                	je     ef87 <_IO_stdin_used+0x1f87>
    ef0e:	70 65                	jo     ef75 <_IO_stdin_used+0x1f75>
    ef10:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    ef13:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef14:	75 65                	jne    ef7b <_IO_stdin_used+0x1f7b>
    ef16:	00 00                	add    BYTE PTR [rax],al
    ef18:	25 73 3a 20 69       	and    eax,0x69203a73
    ef1d:	74 79                	je     ef98 <_IO_stdin_used+0x1f98>
    ef1f:	70 65                	jo     ef86 <_IO_stdin_used+0x1f86>
    ef21:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    ef24:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef25:	79 20                	jns    ef47 <_IO_stdin_used+0x1f47>
    ef27:	61                   	(bad)  
    ef28:	70 70                	jo     ef9a <_IO_stdin_used+0x1f9a>
    ef2a:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef2b:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    ef32:	72 75                	jb     efa9 <_IO_stdin_used+0x1fa9>
    ef34:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef35:	65 73 20             	gs jae ef58 <_IO_stdin_used+0x1f58>
    ef38:	77 69                	ja     efa3 <_IO_stdin_used+0x1fa3>
    ef3a:	74 68                	je     efa4 <_IO_stdin_used+0x1fa4>
    ef3c:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    ef3f:	4d 50                	rex.WRB push r8
    ef41:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    ef44:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    ef47:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ef48:	74 6f                	je     efb9 <_IO_stdin_used+0x1fb9>
    ef4a:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    ef4d:	0a 00                	or     al,BYTE PTR [rax]
    ef4f:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    ef56:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    ef58:	76 61                	jbe    efbb <_IO_stdin_used+0x1fbb>
    ef5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef5b:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    ef62:	70 
    ef63:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    ef66:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    ef6b:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef6c:	75 65                	jne    efd3 <_IO_stdin_used+0x1fd3>
    ef6e:	00 00                	add    BYTE PTR [rax],al
    ef70:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    ef77:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ef78:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef79:	79 20                	jns    ef9b <_IO_stdin_used+0x1f9b>
    ef7b:	61                   	(bad)  
    ef7c:	70 70                	jo     efee <_IO_stdin_used+0x1fee>
    ef7e:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef7f:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    ef86:	72 75                	jb     effd <_IO_stdin_used+0x1ffd>
    ef88:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef89:	65 73 20             	gs jae efac <_IO_stdin_used+0x1fac>
    ef8c:	77 69                	ja     eff7 <_IO_stdin_used+0x1ff7>
    ef8e:	74 68                	je     eff8 <_IO_stdin_used+0x1ff8>
    ef90:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    ef93:	4d 50                	rex.WRB push r8
    ef95:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    ef98:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    ef9b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ef9c:	74 6f                	je     f00d <_IO_stdin_used+0x200d>
    ef9e:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    efa1:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    efa4:	6d                   	ins    DWORD PTR es:[rdi],dx
    efa5:	70 5f                	jo     f006 <_IO_stdin_used+0x2006>
    efa7:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    efae:	61 
    efaf:	6c                   	ins    BYTE PTR es:[rdi],dx
    efb0:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    efb7:	20 
    efb8:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    efbf:	65 
	...
    efc8:	49                   	rex.WB
    efc9:	43                   	rex.XB
    efca:	4d 50                	rex.WRB push r8
    efcc:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    efcf:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    efd2:	6c                   	ins    BYTE PTR es:[rdi],dx
    efd3:	79 20                	jns    eff5 <_IO_stdin_used+0x1ff5>
    efd5:	61                   	(bad)  
    efd6:	70 70                	jo     f048 <_IO_stdin_used+0x2048>
    efd8:	6c                   	ins    BYTE PTR es:[rdi],dx
    efd9:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    efe0:	72 75                	jb     f057 <_IO_stdin_used+0x2057>
    efe2:	6c                   	ins    BYTE PTR es:[rdi],dx
    efe3:	65 73 20             	gs jae f006 <_IO_stdin_used+0x2006>
    efe6:	77 69                	ja     f051 <_IO_stdin_used+0x2051>
    efe8:	74 68                	je     f052 <_IO_stdin_used+0x2052>
    efea:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    efed:	4d 50                	rex.WRB push r8
    efef:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    eff2:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    eff5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eff6:	74 6f                	je     f067 <_IO_stdin_used+0x2067>
    eff8:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    effb:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    effe:	6d                   	ins    DWORD PTR es:[rdi],dx
    efff:	70 5f                	jo     f060 <_IO_stdin_used+0x2060>
    f001:	73 65                	jae    f068 <_IO_stdin_used+0x2068>
    f003:	71 3a                	jno    f03f <_IO_stdin_used+0x203f>
    f005:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    f008:	76 61                	jbe    f06b <_IO_stdin_used+0x206b>
    f00a:	6c                   	ins    BYTE PTR es:[rdi],dx
    f00b:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    f012:	20 
    f013:	73 65                	jae    f07a <_IO_stdin_used+0x207a>
    f015:	71 75                	jno    f08c <_IO_stdin_used+0x208c>
    f017:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    f019:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    f01c:	76 61                	jbe    f07f <_IO_stdin_used+0x207f>
    f01e:	6c                   	ins    BYTE PTR es:[rdi],dx
    f01f:	75 65                	jne    f086 <_IO_stdin_used+0x2086>
    f021:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    f025:	3a 00                	cmp    al,BYTE PTR [rax]
    f027:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    f029:	76 61                	jbe    f08c <_IO_stdin_used+0x208c>
    f02b:	6c                   	ins    BYTE PTR es:[rdi],dx
    f02c:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    f033:	76 
    f034:	61                   	(bad)  
    f035:	6c                   	ins    BYTE PTR es:[rdi],dx
    f036:	75 65                	jne    f09d <_IO_stdin_used+0x209d>
    f038:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    f03b:	61                   	(bad)  
    f03c:	67 73 3a             	addr32 jae f079 <_IO_stdin_used+0x2079>
    f03f:	22 00                	and    al,BYTE PTR [rax]
    f041:	00 00                	add    BYTE PTR [rax],al
    f043:	00 00                	add    BYTE PTR [rax],al
    f045:	00 00                	add    BYTE PTR [rax],al
    f047:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    f04a:	61                   	(bad)  
    f04b:	67 73 20             	addr32 jae f06e <_IO_stdin_used+0x206e>
    f04e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f04f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f050:	6c                   	ins    BYTE PTR es:[rdi],dx
    f051:	79 20                	jns    f073 <_IO_stdin_used+0x2073>
    f053:	61                   	(bad)  
    f054:	70 70                	jo     f0c6 <_IO_stdin_used+0x20c6>
    f056:	6c                   	ins    BYTE PTR es:[rdi],dx
    f057:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    f05e:	72 75                	jb     f0d5 <_IO_stdin_used+0x20d5>
    f060:	6c                   	ins    BYTE PTR es:[rdi],dx
    f061:	65 73 20             	gs jae f084 <_IO_stdin_used+0x2084>
    f064:	77 69                	ja     f0cf <_IO_stdin_used+0x20cf>
    f066:	74 68                	je     f0d0 <_IO_stdin_used+0x20d0>
    f068:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    f06c:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    f06f:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    f072:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f073:	74 6f                	je     f0e4 <_IO_stdin_used+0x20e4>
    f075:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    f078:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    f07b:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    f07e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    f080:	76 61                	jbe    f0e3 <_IO_stdin_used+0x20e3>
    f082:	6c                   	ins    BYTE PTR es:[rdi],dx
    f083:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    f08a:	76 
    f08b:	61                   	(bad)  
    f08c:	6c                   	ins    BYTE PTR es:[rdi],dx
    f08d:	75 65                	jne    f0f4 <_IO_stdin_used+0x20f4>
    f08f:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    f092:	72 65                	jb     f0f9 <_IO_stdin_used+0x20f9>
    f094:	3a 22                	cmp    ah,BYTE PTR [rdx]
    f096:	00 00                	add    BYTE PTR [rax],al
    f098:	46 61                	rex.RX (bad) 
    f09a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    f0a1:	20 
    f0a2:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    f0a5:	70 69                	jo     f110 <_IO_stdin_used+0x2110>
    f0a7:	6c                   	ins    BYTE PTR es:[rdi],dx
    f0a8:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    f0ac:	67 75 6c             	addr32 jne f11b <_IO_stdin_used+0x211b>
    f0af:	61                   	(bad)  
    f0b0:	72 20                	jb     f0d2 <_IO_stdin_used+0x20d2>
    f0b2:	65 78 70             	gs js  f125 <_IO_stdin_used+0x2125>
    f0b5:	72 65                	jb     f11c <_IO_stdin_used+0x211c>
    f0b7:	73 73                	jae    f12c <_IO_stdin_used+0x212c>
    f0b9:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    f0c0:	7a 65                	jp     f127 <_IO_stdin_used+0x2127>
    f0c2:	3a 00                	cmp    al,BYTE PTR [rax]
    f0c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f0c5:	66 66 73 65          	data16 data16 jae f12e <_IO_stdin_used+0x212e>
    f0c9:	74 3a                	je     f105 <_IO_stdin_used+0x2105>
    f0cb:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    f0ce:	74 61                	je     f131 <_IO_stdin_used+0x2131>
    f0d0:	62                   	(bad)  
    f0d1:	6c                   	ins    BYTE PTR es:[rdi],dx
    f0d2:	69 73 68 65 64 00 25 	imul   esi,DWORD PTR [rbx+0x68],0x25006465
    f0d9:	63 00                	movsxd eax,DWORD PTR [rax]
    f0db:	25 30 32 78 00       	and    eax,0x783230
    f0e0:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    f0e4:	21 00                	and    DWORD PTR [rax],eax
    f0e6:	3c 3d                	cmp    al,0x3d
    f0e8:	00 3e                	add    BYTE PTR [rsi],bh
    f0ea:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    f0ef:	75 70                	jne    f161 <_IO_stdin_used+0x2161>
    f0f1:	70 6f                	jo     f162 <_IO_stdin_used+0x2162>
    f0f3:	72 74                	jb     f169 <_IO_stdin_used+0x2169>
    f0f5:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    f0fa:	65 72 61             	gs jb  f15e <_IO_stdin_used+0x215e>
    f0fd:	74 6f                	je     f16e <_IO_stdin_used+0x216e>
    f0ff:	72 00                	jb     f101 <_IO_stdin_used+0x2101>
    f101:	00 00                	add    BYTE PTR [rax],al
    f103:	00 e7                	add    bh,ah
    f105:	d2 ff                	sar    bh,cl
    f107:	ff                   	(bad)  
    f108:	39 d3                	cmp    ebx,edx
    f10a:	ff                   	(bad)  
    f10b:	ff 52 d3             	call   QWORD PTR [rdx-0x2d]
    f10e:	ff                   	(bad)  
    f10f:	ff 07                	inc    DWORD PTR [rdi]
    f111:	d3 ff                	sar    edi,cl
    f113:	ff 20                	jmp    QWORD PTR [rax]
    f115:	d3 ff                	sar    edi,cl
    f117:	ff 6b d3             	jmp    FWORD PTR [rbx-0x2d]
    f11a:	ff                   	(bad)  
    f11b:	ff 2e                	jmp    FWORD PTR [rsi]
    f11d:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 792353 <_end+0x65634b>
    f123:	25 30 32 78 20       	and    eax,0x20783230
    f128:	2d 2d 20 25 30       	sub    eax,0x3025202d
    f12d:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
	...
    f138:	73 72                	jae    f1ac <_IO_stdin_used+0x21ac>
    f13a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    f13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    f13d:	75 61                	jne    f1a0 <_IO_stdin_used+0x21a0>
    f13f:	2f                   	(bad)  
    f140:	73 63                	jae    f1a5 <_IO_stdin_used+0x21a5>
    f142:	72 69                	jb     f1ad <_IO_stdin_used+0x21ad>
    f144:	70 74                	jo     f1ba <_IO_stdin_used+0x21ba>
    f146:	73 2f                	jae    f177 <_IO_stdin_used+0x2177>
    f148:	68 65 6c 6c 6f       	push   0x6f6c6c65
    f14d:	74 65                	je     f1b4 <_IO_stdin_used+0x21b4>
    f14f:	73 74                	jae    f1c5 <_IO_stdin_used+0x21c5>
    f151:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    f153:	75 61                	jne    f1b6 <_IO_stdin_used+0x21b6>
    f155:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    f158:	2f                   	(bad)  
    f159:	65 74 63             	gs je  f1bf <_IO_stdin_used+0x21bf>
    f15c:	2f                   	(bad)  
    f15d:	76 69                	jbe    f1c8 <_IO_stdin_used+0x21c8>
    f15f:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    f166:	72 69 
    f168:	70 74                	jo     f1de <_IO_stdin_used+0x21de>
    f16a:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    f16e:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    f172:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    f179:	20 
    f17a:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    f17d:	6c                   	ins    BYTE PTR es:[rdi],dx
    f17e:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    f183:	75 61                	jne    f1e6 <_IO_stdin_used+0x21e6>
    f185:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    f188:	72 69                	jb     f1f3 <_IO_stdin_used+0x21f3>
    f18a:	70 74                	jo     f200 <_IO_stdin_used+0x2200>
    f18c:	73 3a                	jae    f1c8 <_IO_stdin_used+0x21c8>
    f18e:	20 2f                	and    BYTE PTR [rdi],ch
    f190:	65 74 63             	gs je  f1f6 <_IO_stdin_used+0x21f6>
    f193:	2f                   	(bad)  
    f194:	76 69                	jbe    f1ff <_IO_stdin_used+0x21ff>
    f196:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    f19d:	72 69 
    f19f:	70 74                	jo     f215 <_IO_stdin_used+0x2215>
    f1a1:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    f1a5:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    f1a9:	74 20                	je     f1cb <_IO_stdin_used+0x21cb>
    f1ab:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    f1ad:	75 6e                	jne    f21d <_IO_stdin_used+0x221d>
    f1af:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    f1b3:	2a 2e                	sub    ch,BYTE PTR [rsi]
    f1b5:	6c                   	ins    BYTE PTR es:[rdi],dx
    f1b6:	75 61                	jne    f219 <_IO_stdin_used+0x2219>
    f1b8:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    f1ba:	2a 00                	sub    al,BYTE PTR [rax]
    f1bc:	6c                   	ins    BYTE PTR es:[rdi],dx
    f1bd:	5f                   	pop    rdi
    f1be:	73 63                	jae    f223 <_IO_stdin_used+0x2223>
    f1c0:	72 69                	jb     f22b <_IO_stdin_used+0x222b>
    f1c2:	70 74                	jo     f238 <_IO_stdin_used+0x2238>
    f1c4:	5f                   	pop    rdi
    f1c5:	72 6f                	jb     f236 <_IO_stdin_used+0x2236>
    f1c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f1c8:	74 3d                	je     f207 <_IO_stdin_used+0x2207>
    f1ca:	00 0a                	add    BYTE PTR [rdx],cl
    f1cc:	00 00                	add    BYTE PTR [rax],al
    f1ce:	00 00                	add    BYTE PTR [rax],al
    f1d0:	49 50                	rex.WB push r8
    f1d2:	76 36                	jbe    f20a <_IO_stdin_used+0x220a>
    f1d4:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2e124d <_end+0x3e1a5245>
    f1da:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 72511253 <_end+0x723d524b>
    f1e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f1e1:	74 6f                	je     f252 <_IO_stdin_used+0x2252>
    f1e3:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    f1e6:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    f1e9:	6d                   	ins    DWORD PTR es:[rdi],dx
    f1ea:	62                   	(bad)  
    f1eb:	65 72 20             	gs jb  f20e <_IO_stdin_used+0x220e>
    f1ee:	3d 20 25 64 0a       	cmp    eax,0xa642520
    f1f3:	00 00                	add    BYTE PTR [rax],al
    f1f5:	00 00                	add    BYTE PTR [rax],al
    f1f7:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    f1fa:	67 6d                	ins    DWORD PTR es:[edi],dx
    f1fc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    f1fe:	74 61                	je     f261 <_IO_stdin_used+0x2261>
    f200:	74 69                	je     f26b <_IO_stdin_used+0x226b>
    f202:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f203:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f204:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    f207:	75 6c                	jne    f275 <_IO_stdin_used+0x2275>
    f209:	74 20                	je     f22b <_IO_stdin_used+0x222b>
    f20b:	61                   	(bad)  
    f20c:	74 20                	je     f22e <_IO_stdin_used+0x222e>
    f20e:	25 73 3a 20 61       	and    eax,0x61203a73
    f213:	70 70                	jo     f285 <_IO_stdin_used+0x2285>
    f215:	6c                   	ins    BYTE PTR es:[rdi],dx
    f216:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    f21d:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    f220:	61                   	(bad)  
    f221:	73 68                	jae    f28b <_IO_stdin_used+0x228b>
    f223:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    f227:	46 75 6e             	rex.RX jne f298 <_IO_stdin_used+0x2298>
    f22a:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    f22e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f22f:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    f232:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    f235:	72 61                	jb     f298 <_IO_stdin_used+0x2298>
    f237:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    f23a:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    f23e:	00 25 73 0a 00 25    	add    BYTE PTR [rip+0x25000a73],ah        # 2500fcb7 <_end+0x24ed3caf>
    f244:	73 28                	jae    f26e <_IO_stdin_used+0x226e>
    f246:	2e 2f                	cs (bad) 
    f248:	76 69                	jbe    f2b3 <_IO_stdin_used+0x22b3>
    f24a:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    f251:	28 2b 
    f253:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    f256:	30 32                	xor    BYTE PTR [rdx],dh
    f258:	78 29                	js     f283 <_IO_stdin_used+0x2283>
    f25a:	29 0a                	sub    DWORD PTR [rdx],ecx
    f25c:	00 00                	add    BYTE PTR [rax],al
    f25e:	00 00                	add    BYTE PTR [rax],al
    f260:	55                   	push   rbp
    f261:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f262:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    f266:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f267:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    f26a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f26b:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    f26f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f270:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    f273:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    f276:	6d                   	ins    DWORD PTR es:[rdi],dx
    f277:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f278:	72 79                	jb     f2f3 <_IO_stdin_used+0x22f3>
    f27a:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    f27d:	66 73 65             	data16 jae f2e5 <_IO_stdin_used+0x22e5>
    f280:	74 20                	je     f2a2 <_IO_stdin_used+0x22a2>
    f282:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    f285:	30 32                	xor    BYTE PTR [rdx],dh
    f287:	78 0a                	js     f293 <_IO_stdin_used+0x2293>
    f289:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    f28c:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    f293:	44 
    f294:	75 6d                	jne    f303 <_IO_stdin_used+0x2303>
    f296:	70 3a                	jo     f2d2 <_IO_stdin_used+0x22d2>
    f298:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f29b:	41 58                	pop    r8
    f29d:	5d                   	pop    rbp
    f29e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 257922c4 <_end+0x256562bc>
    f2a4:	30 32                	xor    BYTE PTR [rdx],dh
    f2a6:	78 0a                	js     f2b2 <_IO_stdin_used+0x22b2>
    f2a8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f2ab:	42 58                	rex.X pop rax
    f2ad:	5d                   	pop    rbp
    f2ae:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 257922d4 <_end+0x256562cc>
    f2b4:	30 32                	xor    BYTE PTR [rdx],dh
    f2b6:	78 0a                	js     f2c2 <_IO_stdin_used+0x22c2>
    f2b8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f2bb:	43 58                	rex.XB pop r8
    f2bd:	5d                   	pop    rbp
    f2be:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 257922e4 <_end+0x256562dc>
    f2c4:	30 32                	xor    BYTE PTR [rdx],dh
    f2c6:	78 0a                	js     f2d2 <_IO_stdin_used+0x22d2>
    f2c8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f2cb:	44 58                	rex.R pop rax
    f2cd:	5d                   	pop    rbp
    f2ce:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 257922f4 <_end+0x256562ec>
    f2d4:	30 32                	xor    BYTE PTR [rdx],dh
    f2d6:	78 0a                	js     f2e2 <_IO_stdin_used+0x22e2>
    f2d8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f2db:	53                   	push   rbx
    f2dc:	50                   	push   rax
    f2dd:	5d                   	pop    rbp
    f2de:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25792304 <_end+0x256562fc>
    f2e4:	30 32                	xor    BYTE PTR [rdx],dh
    f2e6:	78 0a                	js     f2f2 <_IO_stdin_used+0x22f2>
    f2e8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f2eb:	42 50                	rex.X push rax
    f2ed:	5d                   	pop    rbp
    f2ee:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25792314 <_end+0x2565630c>
    f2f4:	30 32                	xor    BYTE PTR [rdx],dh
    f2f6:	78 0a                	js     f302 <_IO_stdin_used+0x2302>
	...
    f300:	25 73 20 5b 73       	and    eax,0x735b2073
    f305:	74 61                	je     f368 <_IO_stdin_used+0x2368>
    f307:	72 74                	jb     f37d <_IO_stdin_used+0x237d>
    f309:	20 25 64 5d 20 5b    	and    BYTE PTR [rip+0x5b205d64],ah        # 5b215073 <_end+0x5b0d906b>
    f30f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    f311:	64 20 25 64 5d 0a 00 	and    BYTE PTR fs:[rip+0xa5d64],ah        # b507c <rules+0xa2d9c>
    f318:	72 00                	jb     f31a <_IO_stdin_used+0x231a>
    f31a:	2f                   	(bad)  
    f31b:	75 73                	jne    f390 <_IO_stdin_used+0x2390>
    f31d:	72 2f                	jb     f34e <_IO_stdin_used+0x234e>
    f31f:	73 68                	jae    f389 <_IO_stdin_used+0x2389>
    f321:	61                   	(bad)  
    f322:	72 65                	jb     f389 <_IO_stdin_used+0x2389>
    f324:	2f                   	(bad)  
    f325:	76 69                	jbe    f390 <_IO_stdin_used+0x2390>
    f327:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    f32e:	6d 61 
    f330:	70 2e                	jo     f360 <_IO_stdin_used+0x2360>
    f332:	74 78                	je     f3ac <__GNU_EH_FRAME_HDR+0x8>
    f334:	74 00                	je     f336 <_IO_stdin_used+0x2336>
    f336:	00 00                	add    BYTE PTR [rax],al
    f338:	46                   	rex.RX
    f339:	41 54                	push   r12
    f33b:	41                   	rex.B
    f33c:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    f340:	52                   	push   rdx
    f341:	4f 52                	rex.WRXB push r10
    f343:	3a 20                	cmp    ah,BYTE PTR [rax]
    f345:	6d                   	ins    DWORD PTR es:[rdi],dx
    f346:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    f348:	6d                   	ins    DWORD PTR es:[rdi],dx
    f349:	61                   	(bad)  
    f34a:	70 2e                	jo     f37a <_IO_stdin_used+0x237a>
    f34c:	74 78                	je     f3c6 <__GNU_EH_FRAME_HDR+0x22>
    f34e:	74 20                	je     f370 <_IO_stdin_used+0x2370>
    f350:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f351:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f352:	74 20                	je     f374 <_IO_stdin_used+0x2374>
    f354:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    f356:	75 6e                	jne    f3c6 <__GNU_EH_FRAME_HDR+0x22>
    f358:	64 2e 50             	fs cs push rax
    f35b:	6c                   	ins    BYTE PTR es:[rdi],dx
    f35c:	65 61                	gs (bad) 
    f35e:	73 65                	jae    f3c5 <__GNU_EH_FRAME_HDR+0x21>
    f360:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    f363:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    f366:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f367:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    f36a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f36b:	5f                   	pop    rdi
    f36c:	6d                   	ins    DWORD PTR es:[rdi],dx
    f36d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    f36f:	5f                   	pop    rdi
    f370:	6d                   	ins    DWORD PTR es:[rdi],dx
    f371:	61                   	(bad)  
    f372:	70 2e                	jo     f3a2 <_IO_stdin_used+0x23a2>
    f374:	70 79                	jo     f3ef <__GNU_EH_FRAME_HDR+0x4b>
    f376:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    f379:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    f37d:	70 79                	jo     f3f8 <__GNU_EH_FRAME_HDR+0x54>
    f37f:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    f382:	6d                   	ins    DWORD PTR es:[rdi],dx
    f383:	6d                   	ins    DWORD PTR es:[rdi],dx
    f384:	61                   	(bad)  
    f385:	70 2e                	jo     f3b5 <__GNU_EH_FRAME_HDR+0x11>
    f387:	74 78                	je     f401 <__GNU_EH_FRAME_HDR+0x5d>
    f389:	74 20                	je     f3ab <__GNU_EH_FRAME_HDR+0x7>
    f38b:	74 6f                	je     f3fc <__GNU_EH_FRAME_HDR+0x58>
    f38d:	20 2f                	and    BYTE PTR [rdi],ch
    f38f:	75 73                	jne    f404 <__GNU_EH_FRAME_HDR+0x60>
    f391:	72 2f                	jb     f3c2 <__GNU_EH_FRAME_HDR+0x1e>
    f393:	73 68                	jae    f3fd <__GNU_EH_FRAME_HDR+0x59>
    f395:	61                   	(bad)  
    f396:	72 65                	jb     f3fd <__GNU_EH_FRAME_HDR+0x59>
    f398:	2f                   	(bad)  
    f399:	76 69                	jbe    f404 <__GNU_EH_FRAME_HDR+0x60>
    f39b:	67                   	addr32
    f39c:	69                   	.byte 0x69
    f39d:	6c                   	ins    BYTE PTR es:[rdi],dx
    f39e:	00 0a                	add    BYTE PTR [rdx],cl
    f3a0:	00 20                	add    BYTE PTR [rax],ah
	...

Disassembly of section .eh_frame_hdr:

000000000000f3a4 <__GNU_EH_FRAME_HDR>:
    f3a4:	01 1b                	add    DWORD PTR [rbx],ebx
    f3a6:	03 3b                	add    edi,DWORD PTR [rbx]
    f3a8:	e0 03                	loopne f3ad <__GNU_EH_FRAME_HDR+0x9>
    f3aa:	00 00                	add    BYTE PTR [rax],al
    f3ac:	7b 00                	jnp    f3ae <__GNU_EH_FRAME_HDR+0xa>
    f3ae:	00 00                	add    BYTE PTR [rax],al
    f3b0:	7c 2c                	jl     f3de <__GNU_EH_FRAME_HDR+0x3a>
    f3b2:	ff                   	(bad)  
    f3b3:	ff 14 04             	call   QWORD PTR [rsp+rax*1]
    f3b6:	00 00                	add    BYTE PTR [rax],al
    f3b8:	0c 31                	or     al,0x31
    f3ba:	ff                   	(bad)  
    f3bb:	ff                   	(bad)  
    f3bc:	3c 04                	cmp    al,0x4
    f3be:	00 00                	add    BYTE PTR [rax],al
    f3c0:	1c 31                	sbb    al,0x31
    f3c2:	ff                   	(bad)  
    f3c3:	ff 54 04 00          	call   QWORD PTR [rsp+rax*1+0x0]
    f3c7:	00 9c 35 ff ff fc 03 	add    BYTE PTR [rbp+rsi*1+0x3fcffff],bl
    f3ce:	00 00                	add    BYTE PTR [rax],al
    f3d0:	85 36                	test   DWORD PTR [rsi],esi
    f3d2:	ff                   	(bad)  
    f3d3:	ff 6c 04 00          	jmp    FWORD PTR [rsp+rax*1+0x0]
    f3d7:	00 bf 36 ff ff 8c    	add    BYTE PTR [rdi-0x730000ca],bh
    f3dd:	04 00                	add    al,0x0
    f3df:	00 0b                	add    BYTE PTR [rbx],cl
    f3e1:	38 ff                	cmp    bh,bh
    f3e3:	ff b4 04 00 00 ff 3a 	push   QWORD PTR [rsp+rax*1+0x3aff0000]
    f3ea:	ff                   	(bad)  
    f3eb:	ff d4                	call   rsp
    f3ed:	04 00                	add    al,0x0
    f3ef:	00 12                	add    BYTE PTR [rdx],dl
    f3f1:	3c ff                	cmp    al,0xff
    f3f3:	ff f4                	push   rsp
    f3f5:	04 00                	add    al,0x0
    f3f7:	00 c0                	add    al,al
    f3f9:	3c ff                	cmp    al,0xff
    f3fb:	ff 14 05 00 00 66 3d 	call   QWORD PTR [rax*1+0x3d660000]
    f402:	ff                   	(bad)  
    f403:	ff 34 05 00 00 fb 3d 	push   QWORD PTR [rax*1+0x3dfb0000]
    f40a:	ff                   	(bad)  
    f40b:	ff 54 05 00          	call   QWORD PTR [rbp+rax*1+0x0]
    f40f:	00 8f 3e ff ff 74    	add    BYTE PTR [rdi+0x74ffff3e],cl
    f415:	05 00 00 5b 40       	add    eax,0x405b0000
    f41a:	ff                   	(bad)  
    f41b:	ff a0 05 00 00 2f    	jmp    QWORD PTR [rax+0x2f000005]
    f421:	41 ff                	rex.B (bad) 
    f423:	ff c4                	inc    esp
    f425:	05 00 00 f6 41       	add    eax,0x41f60000
    f42a:	ff                   	(bad)  
    f42b:	ff                   	(bad)  
    f42c:	e8 05 00 00 49       	call   4900f436 <_end+0x48ed342e>
    f431:	42 ff                	rex.X (bad) 
    f433:	ff 08                	dec    DWORD PTR [rax]
    f435:	06                   	(bad)  
    f436:	00 00                	add    BYTE PTR [rax],al
    f438:	7c 42                	jl     f47c <__GNU_EH_FRAME_HDR+0xd8>
    f43a:	ff                   	(bad)  
    f43b:	ff 28                	jmp    FWORD PTR [rax]
    f43d:	06                   	(bad)  
    f43e:	00 00                	add    BYTE PTR [rax],al
    f440:	9d                   	popf   
    f441:	42 ff                	rex.X (bad) 
    f443:	ff 48 06             	dec    DWORD PTR [rax+0x6]
    f446:	00 00                	add    BYTE PTR [rax],al
    f448:	05 43 ff ff 6c       	add    eax,0x6cffff43
    f44d:	06                   	(bad)  
    f44e:	00 00                	add    BYTE PTR [rax],al
    f450:	2a 47 ff             	sub    al,BYTE PTR [rdi-0x1]
    f453:	ff 8c 06 00 00 87 48 	dec    DWORD PTR [rsi+rax*1+0x48870000]
    f45a:	ff                   	(bad)  
    f45b:	ff ac 06 00 00 cb 50 	jmp    FWORD PTR [rsi+rax*1+0x50cb0000]
    f462:	ff                   	(bad)  
    f463:	ff cc                	dec    esp
    f465:	06                   	(bad)  
    f466:	00 00                	add    BYTE PTR [rax],al
    f468:	4c 59                	rex.WR pop rcx
    f46a:	ff                   	(bad)  
    f46b:	ff f4                	push   rsp
    f46d:	06                   	(bad)  
    f46e:	00 00                	add    BYTE PTR [rax],al
    f470:	a1 5a ff ff 14 07 00 	movabs eax,ds:0xa000000714ffff5a
    f477:	00 a0 
    f479:	5b                   	pop    rbx
    f47a:	ff                   	(bad)  
    f47b:	ff 34 07             	push   QWORD PTR [rdi+rax*1]
    f47e:	00 00                	add    BYTE PTR [rax],al
    f480:	8c 5c ff ff          	mov    WORD PTR [rdi+rdi*8-0x1],ds
    f484:	54                   	push   rsp
    f485:	07                   	(bad)  
    f486:	00 00                	add    BYTE PTR [rax],al
    f488:	3e 60                	ds (bad) 
    f48a:	ff                   	(bad)  
    f48b:	ff 74 07 00          	push   QWORD PTR [rdi+rax*1+0x0]
    f48f:	00 c1                	add    cl,al
    f491:	60                   	(bad)  
    f492:	ff                   	(bad)  
    f493:	ff 94 07 00 00 eb 62 	call   QWORD PTR [rdi+rax*1+0x62eb0000]
    f49a:	ff                   	(bad)  
    f49b:	ff                   	(bad)  
    f49c:	bc 07 00 00 28       	mov    esp,0x28000007
    f4a1:	65 ff                	gs (bad) 
    f4a3:	ff e0                	jmp    rax
    f4a5:	07                   	(bad)  
    f4a6:	00 00                	add    BYTE PTR [rax],al
    f4a8:	8e 65 ff             	mov    fs,WORD PTR [rbp-0x1]
    f4ab:	ff 00                	inc    DWORD PTR [rax]
    f4ad:	08 00                	or     BYTE PTR [rax],al
    f4af:	00 a5 65 ff ff 20    	add    BYTE PTR [rbp+0x20ffff65],ah
    f4b5:	08 00                	or     BYTE PTR [rax],al
    f4b7:	00 f6                	add    dh,dh
    f4b9:	65 ff                	gs (bad) 
    f4bb:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    f4bf:	00 33                	add    BYTE PTR [rbx],dh
    f4c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    f4c2:	ff                   	(bad)  
    f4c3:	ff 68 08             	jmp    FWORD PTR [rax+0x8]
    f4c6:	00 00                	add    BYTE PTR [rax],al
    f4c8:	4d 6c                	rex.WRB ins BYTE PTR es:[rdi],dx
    f4ca:	ff                   	(bad)  
    f4cb:	ff 88 08 00 00 76    	dec    DWORD PTR [rax+0x76000008]
    f4d1:	6c                   	ins    BYTE PTR es:[rdi],dx
    f4d2:	ff                   	(bad)  
    f4d3:	ff a8 08 00 00 a6    	jmp    FWORD PTR [rax-0x59fffff8]
    f4d9:	6c                   	ins    BYTE PTR es:[rdi],dx
    f4da:	ff                   	(bad)  
    f4db:	ff c8                	dec    eax
    f4dd:	08 00                	or     BYTE PTR [rax],al
    f4df:	00 dd                	add    ch,bl
    f4e1:	6c                   	ins    BYTE PTR es:[rdi],dx
    f4e2:	ff                   	(bad)  
    f4e3:	ff e4                	jmp    rsp
    f4e5:	08 00                	or     BYTE PTR [rax],al
    f4e7:	00 22                	add    BYTE PTR [rdx],ah
    f4e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f4ea:	ff                   	(bad)  
    f4eb:	ff 04 09             	inc    DWORD PTR [rcx+rcx*1]
    f4ee:	00 00                	add    BYTE PTR [rax],al
    f4f0:	82                   	(bad)  
    f4f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f4f2:	ff                   	(bad)  
    f4f3:	ff 24 09             	jmp    QWORD PTR [rcx+rcx*1]
    f4f6:	00 00                	add    BYTE PTR [rax],al
    f4f8:	e3 6f                	jrcxz  f569 <__GNU_EH_FRAME_HDR+0x1c5>
    f4fa:	ff                   	(bad)  
    f4fb:	ff 44 09 00          	inc    DWORD PTR [rcx+rcx*1+0x0]
    f4ff:	00 a1 70 ff ff 64    	add    BYTE PTR [rcx+0x64ffff70],ah
    f505:	09 00                	or     DWORD PTR [rax],eax
    f507:	00 f3                	add    bl,dh
    f509:	72 ff                	jb     f50a <__GNU_EH_FRAME_HDR+0x166>
    f50b:	ff 84 09 00 00 eb 74 	inc    DWORD PTR [rcx+rcx*1+0x74eb0000]
    f512:	ff                   	(bad)  
    f513:	ff a4 09 00 00 45 75 	jmp    QWORD PTR [rcx+rcx*1+0x75450000]
    f51a:	ff                   	(bad)  
    f51b:	ff c4                	inc    esp
    f51d:	09 00                	or     DWORD PTR [rax],eax
    f51f:	00 83 78 ff ff e4    	add    BYTE PTR [rbx-0x1b000088],al
    f525:	09 00                	or     DWORD PTR [rax],eax
    f527:	00 d4                	add    ah,dl
    f529:	7c ff                	jl     f52a <__GNU_EH_FRAME_HDR+0x186>
    f52b:	ff 04 0a             	inc    DWORD PTR [rdx+rcx*1]
    f52e:	00 00                	add    BYTE PTR [rax],al
    f530:	fe                   	(bad)  
    f531:	7c ff                	jl     f532 <__GNU_EH_FRAME_HDR+0x18e>
    f533:	ff 20                	jmp    QWORD PTR [rax]
    f535:	0a 00                	or     al,BYTE PTR [rax]
    f537:	00 b0 7e ff ff 44    	add    BYTE PTR [rax+0x44ffff7e],dh
    f53d:	0a 00                	or     al,BYTE PTR [rax]
    f53f:	00 c7                	add    bh,al
    f541:	7e ff                	jle    f542 <__GNU_EH_FRAME_HDR+0x19e>
    f543:	ff 64 0a 00          	jmp    QWORD PTR [rdx+rcx*1+0x0]
    f547:	00 16                	add    BYTE PTR [rsi],dl
    f549:	7f ff                	jg     f54a <__GNU_EH_FRAME_HDR+0x1a6>
    f54b:	ff 84 0a 00 00 63 7f 	inc    DWORD PTR [rdx+rcx*1+0x7f630000]
    f552:	ff                   	(bad)  
    f553:	ff a4 0a 00 00 da 80 	jmp    QWORD PTR [rdx+rcx*1-0x7f260000]
    f55a:	ff                   	(bad)  
    f55b:	ff c0                	inc    eax
    f55d:	0a 00                	or     al,BYTE PTR [rax]
    f55f:	00 58 86             	add    BYTE PTR [rax-0x7a],bl
    f562:	ff                   	(bad)  
    f563:	ff e4                	jmp    rsp
    f565:	0a 00                	or     al,BYTE PTR [rax]
    f567:	00 06                	add    BYTE PTR [rsi],al
    f569:	88 ff                	mov    bh,bh
    f56b:	ff 0c 0b             	dec    DWORD PTR [rbx+rcx*1]
    f56e:	00 00                	add    BYTE PTR [rax],al
    f570:	4d 88 ff             	rex.WRB mov r15b,r15b
    f573:	ff 2c 0b             	jmp    FWORD PTR [rbx+rcx*1]
    f576:	00 00                	add    BYTE PTR [rax],al
    f578:	63 8d ff ff 5c 0b    	movsxd ecx,DWORD PTR [rbp+0xb5cffff]
    f57e:	00 00                	add    BYTE PTR [rax],al
    f580:	07                   	(bad)  
    f581:	8f                   	(bad)  
    f582:	ff                   	(bad)  
    f583:	ff                   	(bad)  
    f584:	7c 0b                	jl     f591 <__GNU_EH_FRAME_HDR+0x1ed>
    f586:	00 00                	add    BYTE PTR [rax],al
    f588:	19 90 ff ff 9c 0b    	sbb    DWORD PTR [rax+0xb9cffff],edx
    f58e:	00 00                	add    BYTE PTR [rax],al
    f590:	f2 92                	repnz xchg edx,eax
    f592:	ff                   	(bad)  
    f593:	ff c0                	inc    eax
    f595:	0b 00                	or     eax,DWORD PTR [rax]
    f597:	00 27                	add    BYTE PTR [rdi],ah
    f599:	94                   	xchg   esp,eax
    f59a:	ff                   	(bad)  
    f59b:	ff e0                	jmp    rax
    f59d:	0b 00                	or     eax,DWORD PTR [rax]
    f59f:	00 98 97 ff ff 00    	add    BYTE PTR [rax+0xffff97],bl
    f5a5:	0c 00                	or     al,0x0
    f5a7:	00 43 99             	add    BYTE PTR [rbx-0x67],al
    f5aa:	ff                   	(bad)  
    f5ab:	ff 20                	jmp    QWORD PTR [rax]
    f5ad:	0c 00                	or     al,0x0
    f5af:	00 c7                	add    bh,al
    f5b1:	9a                   	(bad)  
    f5b2:	ff                   	(bad)  
    f5b3:	ff 44 0c 00          	inc    DWORD PTR [rsp+rcx*1+0x0]
    f5b7:	00 b5 9c ff ff 64    	add    BYTE PTR [rbp+0x64ffff9c],dh
    f5bd:	0c 00                	or     al,0x0
    f5bf:	00 9d 9e ff ff 84    	add    BYTE PTR [rbp-0x7b000062],bl
    f5c5:	0c 00                	or     al,0x0
    f5c7:	00 09                	add    BYTE PTR [rcx],cl
    f5c9:	9f                   	lahf   
    f5ca:	ff                   	(bad)  
    f5cb:	ff a4 0c 00 00 7b 9f 	jmp    QWORD PTR [rsp+rcx*1-0x60850000]
    f5d2:	ff                   	(bad)  
    f5d3:	ff c4                	inc    esp
    f5d5:	0c 00                	or     al,0x0
    f5d7:	00 8c a0 ff ff e4 0c 	add    BYTE PTR [rax+riz*4+0xce4ffff],cl
    f5de:	00 00                	add    BYTE PTR [rax],al
    f5e0:	e8 a0 ff ff 04       	call   500f585 <_end+0x4ed357d>
    f5e5:	0d 00 00 26 a1       	or     eax,0xa1260000
    f5ea:	ff                   	(bad)  
    f5eb:	ff 24 0d 00 00 ac a1 	jmp    QWORD PTR [rcx*1-0x5e540000]
    f5f2:	ff                   	(bad)  
    f5f3:	ff 44 0d 00          	inc    DWORD PTR [rbp+rcx*1+0x0]
    f5f7:	00 8b a2 ff ff 64    	add    BYTE PTR [rbx+0x64ffffa2],cl
    f5fd:	0d 00 00 ff a2       	or     eax,0xa2ff0000
    f602:	ff                   	(bad)  
    f603:	ff 84 0d 00 00 9b a3 	inc    DWORD PTR [rbp+rcx*1-0x5c650000]
    f60a:	ff                   	(bad)  
    f60b:	ff a4 0d 00 00 c4 a3 	jmp    QWORD PTR [rbp+rcx*1-0x5c3c0000]
    f612:	ff                   	(bad)  
    f613:	ff c4                	inc    esp
    f615:	0d 00 00 ed a3       	or     eax,0xa3ed0000
    f61a:	ff                   	(bad)  
    f61b:	ff e4                	jmp    rsp
    f61d:	0d 00 00 40 a5       	or     eax,0xa5400000
    f622:	ff                   	(bad)  
    f623:	ff 0c 0e             	dec    DWORD PTR [rsi+rcx*1]
    f626:	00 00                	add    BYTE PTR [rax],al
    f628:	5e                   	pop    rsi
    f629:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f62a:	ff                   	(bad)  
    f62b:	ff 2c 0e             	jmp    FWORD PTR [rsi+rcx*1]
    f62e:	00 00                	add    BYTE PTR [rax],al
    f630:	c1 a6 ff ff 4c 0e 00 	shl    DWORD PTR [rsi+0xe4cffff],0x0
    f637:	00 cf                	add    bh,cl
    f639:	a8 ff                	test   al,0xff
    f63b:	ff                   	(bad)  
    f63c:	7c 0e                	jl     f64c <__GNU_EH_FRAME_HDR+0x2a8>
    f63e:	00 00                	add    BYTE PTR [rax],al
    f640:	81 a9 ff ff 9c 0e 00 	sub    DWORD PTR [rcx+0xe9cffff],0xaa260000
    f647:	00 26 aa 
    f64a:	ff                   	(bad)  
    f64b:	ff                   	(bad)  
    f64c:	bc 0e 00 00 ba       	mov    esp,0xba00000e
    f651:	aa                   	stos   BYTE PTR es:[rdi],al
    f652:	ff                   	(bad)  
    f653:	ff e4                	jmp    rsp
    f655:	0e                   	(bad)  
    f656:	00 00                	add    BYTE PTR [rax],al
    f658:	8f                   	(bad)  
    f659:	ab                   	stos   DWORD PTR es:[rdi],eax
    f65a:	ff                   	(bad)  
    f65b:	ff 04 0f             	inc    DWORD PTR [rdi+rcx*1]
    f65e:	00 00                	add    BYTE PTR [rax],al
    f660:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f661:	ac                   	lods   al,BYTE PTR ds:[rsi]
    f662:	ff                   	(bad)  
    f663:	ff 24 0f             	jmp    QWORD PTR [rdi+rcx*1]
    f666:	00 00                	add    BYTE PTR [rax],al
    f668:	eb ac                	jmp    f616 <__GNU_EH_FRAME_HDR+0x272>
    f66a:	ff                   	(bad)  
    f66b:	ff 44 0f 00          	inc    DWORD PTR [rdi+rcx*1+0x0]
    f66f:	00 21                	add    BYTE PTR [rcx],ah
    f671:	ae                   	scas   al,BYTE PTR es:[rdi]
    f672:	ff                   	(bad)  
    f673:	ff 64 0f 00          	jmp    QWORD PTR [rdi+rcx*1+0x0]
    f677:	00 9f ae ff ff 84    	add    BYTE PTR [rdi-0x7b000052],bl
    f67d:	0f 00 00             	sldt   WORD PTR [rax]
    f680:	c9                   	leave  
    f681:	b0 ff                	mov    al,0xff
    f683:	ff a4 0f 00 00 8c b1 	jmp    QWORD PTR [rdi+rcx*1-0x4e740000]
    f68a:	ff                   	(bad)  
    f68b:	ff c4                	inc    esp
    f68d:	0f 00 00             	sldt   WORD PTR [rax]
    f690:	27                   	(bad)  
    f691:	b3 ff                	mov    bl,0xff
    f693:	ff e4                	jmp    rsp
    f695:	0f 00 00             	sldt   WORD PTR [rax]
    f698:	34 b4                	xor    al,0xb4
    f69a:	ff                   	(bad)  
    f69b:	ff 04 10             	inc    DWORD PTR [rax+rdx*1]
    f69e:	00 00                	add    BYTE PTR [rax],al
    f6a0:	9a                   	(bad)  
    f6a1:	b4 ff                	mov    ah,0xff
    f6a3:	ff 24 10             	jmp    QWORD PTR [rax+rdx*1]
    f6a6:	00 00                	add    BYTE PTR [rax],al
    f6a8:	0f b5                	(bad)  
    f6aa:	ff                   	(bad)  
    f6ab:	ff 44 10 00          	inc    DWORD PTR [rax+rdx*1+0x0]
    f6af:	00 ea                	add    dl,ch
    f6b1:	b5 ff                	mov    ch,0xff
    f6b3:	ff 64 10 00          	jmp    QWORD PTR [rax+rdx*1+0x0]
    f6b7:	00 5c b7 ff          	add    BYTE PTR [rdi+rsi*4-0x1],bl
    f6bb:	ff 84 10 00 00 c8 b7 	inc    DWORD PTR [rax+rdx*1-0x48380000]
    f6c2:	ff                   	(bad)  
    f6c3:	ff a4 10 00 00 48 b8 	jmp    QWORD PTR [rax+rdx*1-0x47b80000]
    f6ca:	ff                   	(bad)  
    f6cb:	ff c4                	inc    esp
    f6cd:	10 00                	adc    BYTE PTR [rax],al
    f6cf:	00 5e b8             	add    BYTE PTR [rsi-0x48],bl
    f6d2:	ff                   	(bad)  
    f6d3:	ff e4                	jmp    rsp
    f6d5:	10 00                	adc    BYTE PTR [rax],al
    f6d7:	00 98 b9 ff ff 08    	add    BYTE PTR [rax+0x8ffffb9],bl
    f6dd:	11 00                	adc    DWORD PTR [rax],eax
    f6df:	00 fc                	add    ah,bh
    f6e1:	b9 ff ff 28 11       	mov    ecx,0x1128ffff
    f6e6:	00 00                	add    BYTE PTR [rax],al
    f6e8:	4f ba ff ff 48 11 00 	rex.WRXB movabs r10,0xbb0000001148ffff
    f6ef:	00 00 bb 
    f6f2:	ff                   	(bad)  
    f6f3:	ff 68 11             	jmp    FWORD PTR [rax+0x11]
    f6f6:	00 00                	add    BYTE PTR [rax],al
    f6f8:	cb                   	retf   
    f6f9:	bb ff ff 88 11       	mov    ebx,0x1188ffff
    f6fe:	00 00                	add    BYTE PTR [rax],al
    f700:	20 bc ff ff a8 11 00 	and    BYTE PTR [rdi+rdi*8+0x11a8ff],bh
    f707:	00 50 bc             	add    BYTE PTR [rax-0x44],dl
    f70a:	ff                   	(bad)  
    f70b:	ff c8                	dec    eax
    f70d:	11 00                	adc    DWORD PTR [rax],eax
    f70f:	00 b7 bc ff ff e8    	add    BYTE PTR [rdi-0x17000044],dh
    f715:	11 00                	adc    DWORD PTR [rax],eax
    f717:	00 c3                	add    bl,al
    f719:	cb                   	retf   
    f71a:	ff                   	(bad)  
    f71b:	ff 0c 12             	dec    DWORD PTR [rdx+rdx*1]
    f71e:	00 00                	add    BYTE PTR [rax],al
    f720:	09 cc                	or     esp,ecx
    f722:	ff                   	(bad)  
    f723:	ff 2c 12             	jmp    FWORD PTR [rdx+rdx*1]
    f726:	00 00                	add    BYTE PTR [rax],al
    f728:	44 ce                	rex.R (bad) 
    f72a:	ff                   	(bad)  
    f72b:	ff 54 12 00          	call   QWORD PTR [rdx+rdx*1+0x0]
    f72f:	00 e9                	add    cl,ch
    f731:	cf                   	iret   
    f732:	ff                   	(bad)  
    f733:	ff 74 12 00          	push   QWORD PTR [rdx+rdx*1+0x0]
    f737:	00 fb                	add    bl,bh
    f739:	d0 ff                	sar    bh,1
    f73b:	ff 94 12 00 00 b7 d1 	call   QWORD PTR [rdx+rdx*1-0x2e490000]
    f742:	ff                   	(bad)  
    f743:	ff                   	(bad)  
    f744:	bc 12 00 00 52       	mov    esp,0x52000012
    f749:	d3 ff                	sar    edi,cl
    f74b:	ff e4                	jmp    rsp
    f74d:	12 00                	adc    al,BYTE PTR [rax]
    f74f:	00 f7                	add    bh,dh
    f751:	d3 ff                	sar    edi,cl
    f753:	ff 04 13             	inc    DWORD PTR [rbx+rdx*1]
    f756:	00 00                	add    BYTE PTR [rax],al
    f758:	3a d5                	cmp    dl,ch
    f75a:	ff                   	(bad)  
    f75b:	ff 24 13             	jmp    QWORD PTR [rbx+rdx*1]
    f75e:	00 00                	add    BYTE PTR [rax],al
    f760:	2d d6 ff ff 44       	sub    eax,0x44ffffd6
    f765:	13 00                	adc    eax,DWORD PTR [rax]
    f767:	00 bb d8 ff ff 64    	add    BYTE PTR [rbx+0x64ffffd8],bh
    f76d:	13 00                	adc    eax,DWORD PTR [rax]
    f76f:	00 25 d9 ff ff 84    	add    BYTE PTR [rip+0xffffffff84ffffd9],ah        # ffffffff8500f74e <_end+0xffffffff84ed3746>
    f775:	13 00                	adc    eax,DWORD PTR [rax]
    f777:	00 93 d9 ff ff a4    	add    BYTE PTR [rbx-0x5b000027],dl
    f77d:	13 00                	adc    eax,DWORD PTR [rax]
    f77f:	00 03                	add    BYTE PTR [rbx],al
    f781:	da ff                	(bad)  
    f783:	ff c4                	inc    esp
    f785:	13 00                	adc    eax,DWORD PTR [rax]
	...

Disassembly of section .eh_frame:

000000000000f788 <__FRAME_END__-0x1004>:
    f788:	14 00                	adc    al,0x0
    f78a:	00 00                	add    BYTE PTR [rax],al
    f78c:	00 00                	add    BYTE PTR [rax],al
    f78e:	00 00                	add    BYTE PTR [rax],al
    f790:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    f793:	00 01                	add    BYTE PTR [rcx],al
    f795:	78 10                	js     f7a7 <__GNU_EH_FRAME_HDR+0x403>
    f797:	01 1b                	add    DWORD PTR [rbx],ebx
    f799:	0c 07                	or     al,0x7
    f79b:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    f7a1:	00 00                	add    BYTE PTR [rax],al
    f7a3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f7a6:	00 00                	add    BYTE PTR [rax],al
    f7a8:	98                   	cwde   
    f7a9:	31 ff                	xor    edi,edi
    f7ab:	ff 26                	jmp    QWORD PTR [rsi]
    f7ad:	00 00                	add    BYTE PTR [rax],al
    f7af:	00 00                	add    BYTE PTR [rax],al
    f7b1:	44 07                	rex.R (bad) 
    f7b3:	10 00                	adc    BYTE PTR [rax],al
    f7b5:	00 00                	add    BYTE PTR [rax],al
    f7b7:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    f7ba:	00 00                	add    BYTE PTR [rax],al
    f7bc:	34 00                	xor    al,0x0
    f7be:	00 00                	add    BYTE PTR [rax],al
    f7c0:	60                   	(bad)  
    f7c1:	28 ff                	sub    bh,bh
    f7c3:	ff 90 04 00 00 00    	call   QWORD PTR [rax+0x4]
    f7c9:	0e                   	(bad)  
    f7ca:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    f7cd:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    f7d0:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    f7d3:	80 00 3f             	add    BYTE PTR [rax],0x3f
    f7d6:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    f7d8:	2a 33                	sub    dh,BYTE PTR [rbx]
    f7da:	24 22                	and    al,0x22
    f7dc:	00 00                	add    BYTE PTR [rax],al
    f7de:	00 00                	add    BYTE PTR [rax],al
    f7e0:	14 00                	adc    al,0x0
    f7e2:	00 00                	add    BYTE PTR [rax],al
    f7e4:	5c                   	pop    rsp
    f7e5:	00 00                	add    BYTE PTR [rax],al
    f7e7:	00 c8                	add    al,cl
    f7e9:	2c ff                	sub    al,0xff
    f7eb:	ff 10                	call   QWORD PTR [rax]
	...
    f7f5:	00 00                	add    BYTE PTR [rax],al
    f7f7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    f7fa:	00 00                	add    BYTE PTR [rax],al
    f7fc:	74 00                	je     f7fe <__GNU_EH_FRAME_HDR+0x45a>
    f7fe:	00 00                	add    BYTE PTR [rax],al
    f800:	c0 2c ff ff          	shr    BYTE PTR [rdi+rdi*8],0xff
    f804:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
	...
    f810:	1c 00                	sbb    al,0x0
    f812:	00 00                	add    BYTE PTR [rax],al
    f814:	8c 00                	mov    WORD PTR [rax],es
    f816:	00 00                	add    BYTE PTR [rax],al
    f818:	11 32                	adc    DWORD PTR [rdx],esi
    f81a:	ff                   	(bad)  
    f81b:	ff                   	(bad)  
    f81c:	3a 00                	cmp    al,BYTE PTR [rax]
    f81e:	00 00                	add    BYTE PTR [rax],al
    f820:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f823:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f829:	71 0c                	jno    f837 <__GNU_EH_FRAME_HDR+0x493>
    f82b:	07                   	(bad)  
    f82c:	08 00                	or     BYTE PTR [rax],al
    f82e:	00 00                	add    BYTE PTR [rax],al
    f830:	24 00                	and    al,0x0
    f832:	00 00                	add    BYTE PTR [rax],al
    f834:	ac                   	lods   al,BYTE PTR ds:[rsi]
    f835:	00 00                	add    BYTE PTR [rax],al
    f837:	00 2b                	add    BYTE PTR [rbx],ch
    f839:	32 ff                	xor    bh,bh
    f83b:	ff 4c 01 00          	dec    DWORD PTR [rcx+rax*1+0x0]
    f83f:	00 00                	add    BYTE PTR [rax],al
    f841:	45 0e                	rex.RB (bad) 
    f843:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f849:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f84d:	3e 01 0c 07          	ds add DWORD PTR [rdi+rax*1],ecx
    f851:	08 00                	or     BYTE PTR [rax],al
    f853:	00 00                	add    BYTE PTR [rax],al
    f855:	00 00                	add    BYTE PTR [rax],al
    f857:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f85a:	00 00                	add    BYTE PTR [rax],al
    f85c:	d4                   	(bad)  
    f85d:	00 00                	add    BYTE PTR [rax],al
    f85f:	00 4f 33             	add    BYTE PTR [rdi+0x33],cl
    f862:	ff                   	(bad)  
    f863:	ff f4                	push   rsp
    f865:	02 00                	add    al,BYTE PTR [rax]
    f867:	00 00                	add    BYTE PTR [rax],al
    f869:	45 0e                	rex.RB (bad) 
    f86b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f871:	03 eb                	add    ebp,ebx
    f873:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f876:	08 00                	or     BYTE PTR [rax],al
    f878:	1c 00                	sbb    al,0x0
    f87a:	00 00                	add    BYTE PTR [rax],al
    f87c:	f4                   	hlt    
    f87d:	00 00                	add    BYTE PTR [rax],al
    f87f:	00 23                	add    BYTE PTR [rbx],ah
    f881:	36 ff                	ss (bad) 
    f883:	ff 13                	call   QWORD PTR [rbx]
    f885:	01 00                	add    DWORD PTR [rax],eax
    f887:	00 00                	add    BYTE PTR [rax],al
    f889:	45 0e                	rex.RB (bad) 
    f88b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f891:	03 0a                	add    ecx,DWORD PTR [rdx]
    f893:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f896:	08 00                	or     BYTE PTR [rax],al
    f898:	1c 00                	sbb    al,0x0
    f89a:	00 00                	add    BYTE PTR [rax],al
    f89c:	14 01                	adc    al,0x1
    f89e:	00 00                	add    BYTE PTR [rax],al
    f8a0:	16                   	(bad)  
    f8a1:	37                   	(bad)  
    f8a2:	ff                   	(bad)  
    f8a3:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    f8a9:	45 0e                	rex.RB (bad) 
    f8ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f8b1:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    f8b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f8ba:	00 00                	add    BYTE PTR [rax],al
    f8bc:	34 01                	xor    al,0x1
    f8be:	00 00                	add    BYTE PTR [rax],al
    f8c0:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f8c1:	37                   	(bad)  
    f8c2:	ff                   	(bad)  
    f8c3:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    f8c9:	45 0e                	rex.RB (bad) 
    f8cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f8d1:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    f8d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f8da:	00 00                	add    BYTE PTR [rax],al
    f8dc:	54                   	push   rsp
    f8dd:	01 00                	add    DWORD PTR [rax],eax
    f8df:	00 2a                	add    BYTE PTR [rdx],ch
    f8e1:	38 ff                	cmp    bh,bh
    f8e3:	ff 95 00 00 00 00    	call   QWORD PTR [rbp+0x0]
    f8e9:	45 0e                	rex.RB (bad) 
    f8eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f8f1:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    f8f8:	1c 00                	sbb    al,0x0
    f8fa:	00 00                	add    BYTE PTR [rax],al
    f8fc:	74 01                	je     f8ff <__GNU_EH_FRAME_HDR+0x55b>
    f8fe:	00 00                	add    BYTE PTR [rax],al
    f900:	9f                   	lahf   
    f901:	38 ff                	cmp    bh,bh
    f903:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    f90a:	0e                   	(bad)  
    f90b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f911:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    f917:	00 28                	add    BYTE PTR [rax],ch
    f919:	00 00                	add    BYTE PTR [rax],al
    f91b:	00 94 01 00 00 13 39 	add    BYTE PTR [rcx+rax*1+0x39130000],dl
    f922:	ff                   	(bad)  
    f923:	ff cc                	dec    esp
    f925:	01 00                	add    DWORD PTR [rax],eax
    f927:	00 00                	add    BYTE PTR [rax],al
    f929:	45 0e                	rex.RB (bad) 
    f92b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f931:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    f934:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    f93b:	07                   	(bad)  
    f93c:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    f942:	00 00                	add    BYTE PTR [rax],al
    f944:	20 00                	and    BYTE PTR [rax],al
    f946:	00 00                	add    BYTE PTR [rax],al
    f948:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    f94b:	00 b3 3a ff ff d4    	add    BYTE PTR [rbx-0x2b0000c6],dh
    f951:	00 00                	add    BYTE PTR [rax],al
    f953:	00 00                	add    BYTE PTR [rax],al
    f955:	45 0e                	rex.RB (bad) 
    f957:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f95d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f961:	c6                   	(bad)  
    f962:	0c 07                	or     al,0x7
    f964:	08 00                	or     BYTE PTR [rax],al
    f966:	00 00                	add    BYTE PTR [rax],al
    f968:	20 00                	and    BYTE PTR [rax],al
    f96a:	00 00                	add    BYTE PTR [rax],al
    f96c:	e4 01                	in     al,0x1
    f96e:	00 00                	add    BYTE PTR [rax],al
    f970:	63 3b                	movsxd edi,DWORD PTR [rbx]
    f972:	ff                   	(bad)  
    f973:	ff c7                	inc    edi
    f975:	00 00                	add    BYTE PTR [rax],al
    f977:	00 00                	add    BYTE PTR [rax],al
    f979:	45 0e                	rex.RB (bad) 
    f97b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f981:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f985:	b9 0c 07 08 00       	mov    ecx,0x8070c
    f98a:	00 00                	add    BYTE PTR [rax],al
    f98c:	1c 00                	sbb    al,0x0
    f98e:	00 00                	add    BYTE PTR [rax],al
    f990:	08 02                	or     BYTE PTR [rdx],al
    f992:	00 00                	add    BYTE PTR [rax],al
    f994:	06                   	(bad)  
    f995:	3c ff                	cmp    al,0xff
    f997:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f99a:	00 00                	add    BYTE PTR [rax],al
    f99c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f99f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f9a5:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f9a8:	07                   	(bad)  
    f9a9:	08 00                	or     BYTE PTR [rax],al
    f9ab:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f9ae:	00 00                	add    BYTE PTR [rax],al
    f9b0:	28 02                	sub    BYTE PTR [rdx],al
    f9b2:	00 00                	add    BYTE PTR [rax],al
    f9b4:	39 3c ff             	cmp    DWORD PTR [rdi+rdi*8],edi
    f9b7:	ff 33                	push   QWORD PTR [rbx]
    f9b9:	00 00                	add    BYTE PTR [rax],al
    f9bb:	00 00                	add    BYTE PTR [rax],al
    f9bd:	45 0e                	rex.RB (bad) 
    f9bf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f9c5:	6a 0c                	push   0xc
    f9c7:	07                   	(bad)  
    f9c8:	08 00                	or     BYTE PTR [rax],al
    f9ca:	00 00                	add    BYTE PTR [rax],al
    f9cc:	1c 00                	sbb    al,0x0
    f9ce:	00 00                	add    BYTE PTR [rax],al
    f9d0:	48 02 00             	rex.W add al,BYTE PTR [rax]
    f9d3:	00 4c 3c ff          	add    BYTE PTR [rsp+rdi*1-0x1],cl
    f9d7:	ff 21                	jmp    QWORD PTR [rcx]
    f9d9:	00 00                	add    BYTE PTR [rax],al
    f9db:	00 00                	add    BYTE PTR [rax],al
    f9dd:	45 0e                	rex.RB (bad) 
    f9df:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f9e5:	58                   	pop    rax
    f9e6:	0c 07                	or     al,0x7
    f9e8:	08 00                	or     BYTE PTR [rax],al
    f9ea:	00 00                	add    BYTE PTR [rax],al
    f9ec:	20 00                	and    BYTE PTR [rax],al
    f9ee:	00 00                	add    BYTE PTR [rax],al
    f9f0:	68 02 00 00 4d       	push   0x4d000002
    f9f5:	3c ff                	cmp    al,0xff
    f9f7:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    f9fa:	00 00                	add    BYTE PTR [rax],al
    f9fc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f9ff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa05:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    fa09:	5a                   	pop    rdx
    fa0a:	0c 07                	or     al,0x7
    fa0c:	08 00                	or     BYTE PTR [rax],al
    fa0e:	00 00                	add    BYTE PTR [rax],al
    fa10:	1c 00                	sbb    al,0x0
    fa12:	00 00                	add    BYTE PTR [rax],al
    fa14:	8c 02                	mov    WORD PTR [rdx],es
    fa16:	00 00                	add    BYTE PTR [rax],al
    fa18:	91                   	xchg   ecx,eax
    fa19:	3c ff                	cmp    al,0xff
    fa1b:	ff 25 04 00 00 00    	jmp    QWORD PTR [rip+0x4]        # fa25 <__GNU_EH_FRAME_HDR+0x681>
    fa21:	45 0e                	rex.RB (bad) 
    fa23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa29:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    fa2c:	0c 07                	or     al,0x7
    fa2e:	08 00                	or     BYTE PTR [rax],al
    fa30:	1c 00                	sbb    al,0x0
    fa32:	00 00                	add    BYTE PTR [rax],al
    fa34:	ac                   	lods   al,BYTE PTR ds:[rsi]
    fa35:	02 00                	add    al,BYTE PTR [rax]
    fa37:	00 96 40 ff ff 5d    	add    BYTE PTR [rsi+0x5dffff40],dl
    fa3d:	01 00                	add    DWORD PTR [rax],eax
    fa3f:	00 00                	add    BYTE PTR [rax],al
    fa41:	45 0e                	rex.RB (bad) 
    fa43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa49:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    fa4d:	07                   	(bad)  
    fa4e:	08 00                	or     BYTE PTR [rax],al
    fa50:	1c 00                	sbb    al,0x0
    fa52:	00 00                	add    BYTE PTR [rax],al
    fa54:	cc                   	int3   
    fa55:	02 00                	add    al,BYTE PTR [rax]
    fa57:	00 d3                	add    bl,dl
    fa59:	41 ff                	rex.B (bad) 
    fa5b:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    fa5f:	00 00                	add    BYTE PTR [rax],al
    fa61:	45 0e                	rex.RB (bad) 
    fa63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa69:	03 3b                	add    edi,DWORD PTR [rbx]
    fa6b:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    fa6e:	08 00                	or     BYTE PTR [rax],al
    fa70:	24 00                	and    al,0x0
    fa72:	00 00                	add    BYTE PTR [rax],al
    fa74:	ec                   	in     al,dx
    fa75:	02 00                	add    al,BYTE PTR [rax]
    fa77:	00 f7                	add    bh,dh
    fa79:	49 ff                	rex.WB (bad) 
    fa7b:	ff 81 08 00 00 00    	inc    DWORD PTR [rcx+0x8]
    fa81:	45 0e                	rex.RB (bad) 
    fa83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa89:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    fa8d:	70 08                	jo     fa97 <__GNU_EH_FRAME_HDR+0x6f3>
    fa8f:	0c 07                	or     al,0x7
    fa91:	08 00                	or     BYTE PTR [rax],al
    fa93:	00 00                	add    BYTE PTR [rax],al
    fa95:	00 00                	add    BYTE PTR [rax],al
    fa97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fa9a:	00 00                	add    BYTE PTR [rax],al
    fa9c:	14 03                	adc    al,0x3
    fa9e:	00 00                	add    BYTE PTR [rax],al
    faa0:	50                   	push   rax
    faa1:	52                   	push   rdx
    faa2:	ff                   	(bad)  
    faa3:	ff 55 01             	call   QWORD PTR [rbp+0x1]
    faa6:	00 00                	add    BYTE PTR [rax],al
    faa8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    faab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fab1:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    fab5:	07                   	(bad)  
    fab6:	08 00                	or     BYTE PTR [rax],al
    fab8:	1c 00                	sbb    al,0x0
    faba:	00 00                	add    BYTE PTR [rax],al
    fabc:	34 03                	xor    al,0x3
    fabe:	00 00                	add    BYTE PTR [rax],al
    fac0:	85 53 ff             	test   DWORD PTR [rbx-0x1],edx
    fac3:	ff                   	(bad)  
    fac4:	ff 00                	inc    DWORD PTR [rax]
    fac6:	00 00                	add    BYTE PTR [rax],al
    fac8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    facb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fad1:	02 f6                	add    dh,dh
    fad3:	0c 07                	or     al,0x7
    fad5:	08 00                	or     BYTE PTR [rax],al
    fad7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fada:	00 00                	add    BYTE PTR [rax],al
    fadc:	54                   	push   rsp
    fadd:	03 00                	add    eax,DWORD PTR [rax]
    fadf:	00 64 54 ff          	add    BYTE PTR [rsp+rdx*2-0x1],ah
    fae3:	ff                   	(bad)  
    fae4:	ec                   	in     al,dx
    fae5:	00 00                	add    BYTE PTR [rax],al
    fae7:	00 00                	add    BYTE PTR [rax],al
    fae9:	45 0e                	rex.RB (bad) 
    faeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    faf1:	02 e3                	add    ah,bl
    faf3:	0c 07                	or     al,0x7
    faf5:	08 00                	or     BYTE PTR [rax],al
    faf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fafa:	00 00                	add    BYTE PTR [rax],al
    fafc:	74 03                	je     fb01 <__GNU_EH_FRAME_HDR+0x75d>
    fafe:	00 00                	add    BYTE PTR [rax],al
    fb00:	30 55 ff             	xor    BYTE PTR [rbp-0x1],dl
    fb03:	ff b2 03 00 00 00    	push   QWORD PTR [rdx+0x3]
    fb09:	45 0e                	rex.RB (bad) 
    fb0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb11:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    fb17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fb1a:	00 00                	add    BYTE PTR [rax],al
    fb1c:	94                   	xchg   esp,eax
    fb1d:	03 00                	add    eax,DWORD PTR [rax]
    fb1f:	00 c2                	add    dl,al
    fb21:	58                   	pop    rax
    fb22:	ff                   	(bad)  
    fb23:	ff 83 00 00 00 00    	inc    DWORD PTR [rbx+0x0]
    fb29:	45 0e                	rex.RB (bad) 
    fb2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb31:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    fb34:	07                   	(bad)  
    fb35:	08 00                	or     BYTE PTR [rax],al
    fb37:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    fb3a:	00 00                	add    BYTE PTR [rax],al
    fb3c:	b4 03                	mov    ah,0x3
    fb3e:	00 00                	add    BYTE PTR [rax],al
    fb40:	25 59 ff ff 2a       	and    eax,0x2affff59
    fb45:	02 00                	add    al,BYTE PTR [rax]
    fb47:	00 00                	add    BYTE PTR [rax],al
    fb49:	45 0e                	rex.RB (bad) 
    fb4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb51:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    fb55:	19 02                	sbb    DWORD PTR [rdx],eax
    fb57:	0c 07                	or     al,0x7
    fb59:	08 00                	or     BYTE PTR [rax],al
    fb5b:	00 00                	add    BYTE PTR [rax],al
    fb5d:	00 00                	add    BYTE PTR [rax],al
    fb5f:	00 20                	add    BYTE PTR [rax],ah
    fb61:	00 00                	add    BYTE PTR [rax],al
    fb63:	00 dc                	add    ah,bl
    fb65:	03 00                	add    eax,DWORD PTR [rax]
    fb67:	00 27                	add    BYTE PTR [rdi],ah
    fb69:	5b                   	pop    rbx
    fb6a:	ff                   	(bad)  
    fb6b:	ff                   	(bad)  
    fb6c:	3d 02 00 00 00       	cmp    eax,0x2
    fb71:	45 0e                	rex.RB (bad) 
    fb73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb79:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    fb7d:	2f                   	(bad)  
    fb7e:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    fb81:	08 00                	or     BYTE PTR [rax],al
    fb83:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fb86:	00 00                	add    BYTE PTR [rax],al
    fb88:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    fb8b:	00 40 5d             	add    BYTE PTR [rax+0x5d],al
    fb8e:	ff                   	(bad)  
    fb8f:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    fb92:	00 00                	add    BYTE PTR [rax],al
    fb94:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fb97:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb9d:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    fba0:	07                   	(bad)  
    fba1:	08 00                	or     BYTE PTR [rax],al
    fba3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fba6:	00 00                	add    BYTE PTR [rax],al
    fba8:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    fbab:	00 86 5d ff ff 17    	add    BYTE PTR [rsi+0x17ffff5d],al
    fbb1:	00 00                	add    BYTE PTR [rax],al
    fbb3:	00 00                	add    BYTE PTR [rax],al
    fbb5:	45 0e                	rex.RB (bad) 
    fbb7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fbbd:	4e 0c 07             	rex.WRX or al,0x7
    fbc0:	08 00                	or     BYTE PTR [rax],al
    fbc2:	00 00                	add    BYTE PTR [rax],al
    fbc4:	20 00                	and    BYTE PTR [rax],al
    fbc6:	00 00                	add    BYTE PTR [rax],al
    fbc8:	40 04 00             	rex add al,0x0
    fbcb:	00 7d 5d             	add    BYTE PTR [rbp+0x5d],bh
    fbce:	ff                   	(bad)  
    fbcf:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    fbd2:	00 00                	add    BYTE PTR [rax],al
    fbd4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fbd7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fbdd:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    fbe0:	07                   	(bad)  
    fbe1:	08 00                	or     BYTE PTR [rax],al
    fbe3:	00 00                	add    BYTE PTR [rax],al
    fbe5:	00 00                	add    BYTE PTR [rax],al
    fbe7:	00 20                	add    BYTE PTR [rax],ah
    fbe9:	00 00                	add    BYTE PTR [rax],al
    fbeb:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    fbef:	00 aa 5d ff ff 3d    	add    BYTE PTR [rdx+0x3dffff5d],ch
    fbf5:	06                   	(bad)  
    fbf6:	00 00                	add    BYTE PTR [rax],al
    fbf8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fbfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc01:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    fc05:	2f                   	(bad)  
    fc06:	06                   	(bad)  
    fc07:	0c 07                	or     al,0x7
    fc09:	08 00                	or     BYTE PTR [rax],al
    fc0b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fc0e:	00 00                	add    BYTE PTR [rax],al
    fc10:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    fc13:	00 c3                	add    bl,al
    fc15:	63 ff                	movsxd edi,edi
    fc17:	ff 1a                	call   FWORD PTR [rdx]
    fc19:	00 00                	add    BYTE PTR [rax],al
    fc1b:	00 00                	add    BYTE PTR [rax],al
    fc1d:	45 0e                	rex.RB (bad) 
    fc1f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc25:	51                   	push   rcx
    fc26:	0c 07                	or     al,0x7
    fc28:	08 00                	or     BYTE PTR [rax],al
    fc2a:	00 00                	add    BYTE PTR [rax],al
    fc2c:	1c 00                	sbb    al,0x0
    fc2e:	00 00                	add    BYTE PTR [rax],al
    fc30:	a8 04                	test   al,0x4
    fc32:	00 00                	add    BYTE PTR [rax],al
    fc34:	bd 63 ff ff 29       	mov    ebp,0x29ffff63
    fc39:	00 00                	add    BYTE PTR [rax],al
    fc3b:	00 00                	add    BYTE PTR [rax],al
    fc3d:	45 0e                	rex.RB (bad) 
    fc3f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc45:	60                   	(bad)  
    fc46:	0c 07                	or     al,0x7
    fc48:	08 00                	or     BYTE PTR [rax],al
    fc4a:	00 00                	add    BYTE PTR [rax],al
    fc4c:	1c 00                	sbb    al,0x0
    fc4e:	00 00                	add    BYTE PTR [rax],al
    fc50:	c8 04 00 00          	enter  0x4,0x0
    fc54:	c6                   	(bad)  
    fc55:	63 ff                	movsxd edi,edi
    fc57:	ff 30                	push   QWORD PTR [rax]
    fc59:	00 00                	add    BYTE PTR [rax],al
    fc5b:	00 00                	add    BYTE PTR [rax],al
    fc5d:	45 0e                	rex.RB (bad) 
    fc5f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc65:	67 0c 07             	addr32 or al,0x7
    fc68:	08 00                	or     BYTE PTR [rax],al
    fc6a:	00 00                	add    BYTE PTR [rax],al
    fc6c:	18 00                	sbb    BYTE PTR [rax],al
    fc6e:	00 00                	add    BYTE PTR [rax],al
    fc70:	e8 04 00 00 d6       	call   ffffffffd600fc79 <_end+0xffffffffd5ed3c71>
    fc75:	63 ff                	movsxd edi,edi
    fc77:	ff 37                	push   QWORD PTR [rdi]
    fc79:	00 00                	add    BYTE PTR [rax],al
    fc7b:	00 00                	add    BYTE PTR [rax],al
    fc7d:	45 0e                	rex.RB (bad) 
    fc7f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc85:	00 00                	add    BYTE PTR [rax],al
    fc87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fc8a:	00 00                	add    BYTE PTR [rax],al
    fc8c:	04 05                	add    al,0x5
    fc8e:	00 00                	add    BYTE PTR [rax],al
    fc90:	f1                   	icebp  
    fc91:	63 ff                	movsxd edi,edi
    fc93:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    fc96:	00 00                	add    BYTE PTR [rax],al
    fc98:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fc9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fca1:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    fca4:	0c 07                	or     al,0x7
    fca6:	08 00                	or     BYTE PTR [rax],al
    fca8:	1c 00                	sbb    al,0x0
    fcaa:	00 00                	add    BYTE PTR [rax],al
    fcac:	24 05                	and    al,0x5
    fcae:	00 00                	add    BYTE PTR [rax],al
    fcb0:	16                   	(bad)  
    fcb1:	65 ff                	gs (bad) 
    fcb3:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    fcb6:	00 00                	add    BYTE PTR [rax],al
    fcb8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fcbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fcc1:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    fcc4:	0c 07                	or     al,0x7
    fcc6:	08 00                	or     BYTE PTR [rax],al
    fcc8:	1c 00                	sbb    al,0x0
    fcca:	00 00                	add    BYTE PTR [rax],al
    fccc:	44 05 00 00 56 66    	rex.R add eax,0x66560000
    fcd2:	ff                   	(bad)  
    fcd3:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    fcd6:	00 00                	add    BYTE PTR [rax],al
    fcd8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fcdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fce1:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    fce4:	07                   	(bad)  
    fce5:	08 00                	or     BYTE PTR [rax],al
    fce7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fcea:	00 00                	add    BYTE PTR [rax],al
    fcec:	64 05 00 00 97 66    	fs add eax,0x66970000
    fcf2:	ff                   	(bad)  
    fcf3:	ff                   	(bad)  
    fcf4:	be 00 00 00 00       	mov    esi,0x0
    fcf9:	45 0e                	rex.RB (bad) 
    fcfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd01:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    fd07:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fd0a:	00 00                	add    BYTE PTR [rax],al
    fd0c:	84 05 00 00 35 67    	test   BYTE PTR [rip+0x67350000],al        # 6735fd12 <_end+0x67223d0a>
    fd12:	ff                   	(bad)  
    fd13:	ff 52 02             	call   QWORD PTR [rdx+0x2]
    fd16:	00 00                	add    BYTE PTR [rax],al
    fd18:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fd1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd21:	03 49 02             	add    ecx,DWORD PTR [rcx+0x2]
    fd24:	0c 07                	or     al,0x7
    fd26:	08 00                	or     BYTE PTR [rax],al
    fd28:	1c 00                	sbb    al,0x0
    fd2a:	00 00                	add    BYTE PTR [rax],al
    fd2c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    fd2d:	05 00 00 67 69       	add    eax,0x69670000
    fd32:	ff                   	(bad)  
    fd33:	ff                   	(bad)  
    fd34:	f8                   	clc    
    fd35:	01 00                	add    DWORD PTR [rax],eax
    fd37:	00 00                	add    BYTE PTR [rax],al
    fd39:	45 0e                	rex.RB (bad) 
    fd3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd41:	03 ef                	add    ebp,edi
    fd43:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    fd46:	08 00                	or     BYTE PTR [rax],al
    fd48:	1c 00                	sbb    al,0x0
    fd4a:	00 00                	add    BYTE PTR [rax],al
    fd4c:	c4                   	(bad)  
    fd4d:	05 00 00 3f 6b       	add    eax,0x6b3f0000
    fd52:	ff                   	(bad)  
    fd53:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    fd56:	00 00                	add    BYTE PTR [rax],al
    fd58:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fd5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd61:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    fd64:	07                   	(bad)  
    fd65:	08 00                	or     BYTE PTR [rax],al
    fd67:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fd6a:	00 00                	add    BYTE PTR [rax],al
    fd6c:	e4 05                	in     al,0x5
    fd6e:	00 00                	add    BYTE PTR [rax],al
    fd70:	79 6b                	jns    fddd <__GNU_EH_FRAME_HDR+0xa39>
    fd72:	ff                   	(bad)  
    fd73:	ff                   	(bad)  
    fd74:	3e 03 00             	ds add eax,DWORD PTR [rax]
    fd77:	00 00                	add    BYTE PTR [rax],al
    fd79:	45 0e                	rex.RB (bad) 
    fd7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd81:	03 35 03 0c 07 08    	add    esi,DWORD PTR [rip+0x8070c03]        # 808098a <_end+0x7f44982>
    fd87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fd8a:	00 00                	add    BYTE PTR [rax],al
    fd8c:	04 06                	add    al,0x6
    fd8e:	00 00                	add    BYTE PTR [rax],al
    fd90:	97                   	xchg   edi,eax
    fd91:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    fd92:	ff                   	(bad)  
    fd93:	ff 51 04             	call   QWORD PTR [rcx+0x4]
    fd96:	00 00                	add    BYTE PTR [rax],al
    fd98:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fd9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fda1:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    fda4:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    fda8:	18 00                	sbb    BYTE PTR [rax],al
    fdaa:	00 00                	add    BYTE PTR [rax],al
    fdac:	24 06                	and    al,0x6
    fdae:	00 00                	add    BYTE PTR [rax],al
    fdb0:	c8 72 ff ff          	enter  0xff72,0xff
    fdb4:	2a 00                	sub    al,BYTE PTR [rax]
    fdb6:	00 00                	add    BYTE PTR [rax],al
    fdb8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fdbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fdc1:	00 00                	add    BYTE PTR [rax],al
    fdc3:	00 20                	add    BYTE PTR [rax],ah
    fdc5:	00 00                	add    BYTE PTR [rax],al
    fdc7:	00 40 06             	add    BYTE PTR [rax+0x6],al
    fdca:	00 00                	add    BYTE PTR [rax],al
    fdcc:	d6                   	(bad)  
    fdcd:	72 ff                	jb     fdce <__GNU_EH_FRAME_HDR+0xa2a>
    fdcf:	ff b2 01 00 00 00    	push   QWORD PTR [rdx+0x1]
    fdd5:	45 0e                	rex.RB (bad) 
    fdd7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fddd:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    fde1:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    fde8:	1c 00 
    fdea:	00 00                	add    BYTE PTR [rax],al
    fdec:	64 06                	fs (bad) 
    fdee:	00 00                	add    BYTE PTR [rax],al
    fdf0:	64 74 ff             	fs je  fdf2 <__GNU_EH_FRAME_HDR+0xa4e>
    fdf3:	ff 17                	call   QWORD PTR [rdi]
    fdf5:	00 00                	add    BYTE PTR [rax],al
    fdf7:	00 00                	add    BYTE PTR [rax],al
    fdf9:	45 0e                	rex.RB (bad) 
    fdfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe01:	4e 0c 07             	rex.WRX or al,0x7
    fe04:	08 00                	or     BYTE PTR [rax],al
    fe06:	00 00                	add    BYTE PTR [rax],al
    fe08:	1c 00                	sbb    al,0x0
    fe0a:	00 00                	add    BYTE PTR [rax],al
    fe0c:	84 06                	test   BYTE PTR [rsi],al
    fe0e:	00 00                	add    BYTE PTR [rax],al
    fe10:	5b                   	pop    rbx
    fe11:	74 ff                	je     fe12 <__GNU_EH_FRAME_HDR+0xa6e>
    fe13:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    fe16:	00 00                	add    BYTE PTR [rax],al
    fe18:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fe1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe21:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    fe24:	07                   	(bad)  
    fe25:	08 00                	or     BYTE PTR [rax],al
    fe27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fe2a:	00 00                	add    BYTE PTR [rax],al
    fe2c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    fe2d:	06                   	(bad)  
    fe2e:	00 00                	add    BYTE PTR [rax],al
    fe30:	8a 74 ff ff          	mov    dh,BYTE PTR [rdi+rdi*8-0x1]
    fe34:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    fe37:	00 00                	add    BYTE PTR [rax],al
    fe39:	45 0e                	rex.RB (bad) 
    fe3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe41:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    fe45:	08 00                	or     BYTE PTR [rax],al
    fe47:	00 18                	add    BYTE PTR [rax],bl
    fe49:	00 00                	add    BYTE PTR [rax],al
    fe4b:	00 c4                	add    ah,al
    fe4d:	06                   	(bad)  
    fe4e:	00 00                	add    BYTE PTR [rax],al
    fe50:	b7 74                	mov    bh,0x74
    fe52:	ff                   	(bad)  
    fe53:	ff 77 01             	push   QWORD PTR [rdi+0x1]
    fe56:	00 00                	add    BYTE PTR [rax],al
    fe58:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fe5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe61:	00 00                	add    BYTE PTR [rax],al
    fe63:	00 20                	add    BYTE PTR [rax],ah
    fe65:	00 00                	add    BYTE PTR [rax],al
    fe67:	00 e0                	add    al,ah
    fe69:	06                   	(bad)  
    fe6a:	00 00                	add    BYTE PTR [rax],al
    fe6c:	12 76 ff             	adc    dh,BYTE PTR [rsi-0x1]
    fe6f:	ff                   	(bad)  
    fe70:	7e 05                	jle    fe77 <__GNU_EH_FRAME_HDR+0xad3>
    fe72:	00 00                	add    BYTE PTR [rax],al
    fe74:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fe77:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe7d:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    fe81:	6d                   	ins    DWORD PTR es:[rdi],dx
    fe82:	05 0c 07 08 00       	add    eax,0x8070c
    fe87:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    fe8a:	00 00                	add    BYTE PTR [rax],al
    fe8c:	04 07                	add    al,0x7
    fe8e:	00 00                	add    BYTE PTR [rax],al
    fe90:	6c                   	ins    BYTE PTR es:[rdi],dx
    fe91:	7b ff                	jnp    fe92 <__GNU_EH_FRAME_HDR+0xaee>
    fe93:	ff ae 01 00 00 00    	jmp    FWORD PTR [rsi+0x1]
    fe99:	45 0e                	rex.RB (bad) 
    fe9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fea1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    fea5:	a0 01 0c 07 08 00 00 	movabs al,ds:0x8070c01
    feac:	00 00 
    feae:	00 00                	add    BYTE PTR [rax],al
    feb0:	1c 00                	sbb    al,0x0
    feb2:	00 00                	add    BYTE PTR [rax],al
    feb4:	2c 07                	sub    al,0x7
    feb6:	00 00                	add    BYTE PTR [rax],al
    feb8:	f2 7c ff             	bnd jl feba <__GNU_EH_FRAME_HDR+0xb16>
    febb:	ff 47 00             	inc    DWORD PTR [rdi+0x0]
    febe:	00 00                	add    BYTE PTR [rax],al
    fec0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fec3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fec9:	7e 0c                	jle    fed7 <__GNU_EH_FRAME_HDR+0xb33>
    fecb:	07                   	(bad)  
    fecc:	08 00                	or     BYTE PTR [rax],al
    fece:	00 00                	add    BYTE PTR [rax],al
    fed0:	2c 00                	sub    al,0x0
    fed2:	00 00                	add    BYTE PTR [rax],al
    fed4:	4c 07                	rex.WR (bad) 
    fed6:	00 00                	add    BYTE PTR [rax],al
    fed8:	19 7d ff             	sbb    DWORD PTR [rbp-0x1],edi
    fedb:	ff 16                	call   QWORD PTR [rsi]
    fedd:	05 00 00 00 45       	add    eax,0x45000000
    fee2:	0e                   	(bad)  
    fee3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fee9:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    feec:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    fef3:	07                   	(bad)  
    fef4:	03 00                	add    eax,DWORD PTR [rax]
    fef6:	05 0c 07 08 00       	add    eax,0x8070c
    fefb:	00 00                	add    BYTE PTR [rax],al
    fefd:	00 00                	add    BYTE PTR [rax],al
    feff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ff02:	00 00                	add    BYTE PTR [rax],al
    ff04:	7c 07                	jl     ff0d <__GNU_EH_FRAME_HDR+0xb69>
    ff06:	00 00                	add    BYTE PTR [rax],al
    ff08:	ff 81 ff ff a4 01    	inc    DWORD PTR [rcx+0x1a4ffff]
    ff0e:	00 00                	add    BYTE PTR [rax],al
    ff10:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ff13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff19:	03 9b 01 0c 07 08    	add    ebx,DWORD PTR [rbx+0x8070c01]
    ff1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ff22:	00 00                	add    BYTE PTR [rax],al
    ff24:	9c                   	pushf  
    ff25:	07                   	(bad)  
    ff26:	00 00                	add    BYTE PTR [rax],al
    ff28:	83 83 ff ff 12 01 00 	add    DWORD PTR [rbx+0x112ffff],0x0
    ff2f:	00 00                	add    BYTE PTR [rax],al
    ff31:	45 0e                	rex.RB (bad) 
    ff33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff39:	03 09                	add    ecx,DWORD PTR [rcx]
    ff3b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ff3e:	08 00                	or     BYTE PTR [rax],al
    ff40:	20 00                	and    BYTE PTR [rax],al
    ff42:	00 00                	add    BYTE PTR [rax],al
    ff44:	bc 07 00 00 75       	mov    esp,0x75000007
    ff49:	84 ff                	test   bh,bh
    ff4b:	ff                   	(bad)  
    ff4c:	d9 02                	fld    DWORD PTR [rdx]
    ff4e:	00 00                	add    BYTE PTR [rax],al
    ff50:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ff53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff59:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    ff5d:	c8 02 0c 07          	enter  0xc02,0x7
    ff61:	08 00                	or     BYTE PTR [rax],al
    ff63:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ff66:	00 00                	add    BYTE PTR [rax],al
    ff68:	e0 07                	loopne ff71 <__GNU_EH_FRAME_HDR+0xbcd>
    ff6a:	00 00                	add    BYTE PTR [rax],al
    ff6c:	2a 87 ff ff 35 01    	sub    al,BYTE PTR [rdi+0x135ffff]
    ff72:	00 00                	add    BYTE PTR [rax],al
    ff74:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ff77:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff7d:	03 2c 01             	add    ebp,DWORD PTR [rcx+rax*1]
    ff80:	0c 07                	or     al,0x7
    ff82:	08 00                	or     BYTE PTR [rax],al
    ff84:	1c 00                	sbb    al,0x0
    ff86:	00 00                	add    BYTE PTR [rax],al
    ff88:	00 08                	add    BYTE PTR [rax],cl
    ff8a:	00 00                	add    BYTE PTR [rax],al
    ff8c:	3f                   	(bad)  
    ff8d:	88 ff                	mov    bh,bh
    ff8f:	ff 71 03             	push   QWORD PTR [rcx+0x3]
    ff92:	00 00                	add    BYTE PTR [rax],al
    ff94:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ff97:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff9d:	03 68 03             	add    ebp,DWORD PTR [rax+0x3]
    ffa0:	0c 07                	or     al,0x7
    ffa2:	08 00                	or     BYTE PTR [rax],al
    ffa4:	1c 00                	sbb    al,0x0
    ffa6:	00 00                	add    BYTE PTR [rax],al
    ffa8:	20 08                	and    BYTE PTR [rax],cl
    ffaa:	00 00                	add    BYTE PTR [rax],al
    ffac:	90                   	nop
    ffad:	8b ff                	mov    edi,edi
    ffaf:	ff ab 01 00 00 00    	jmp    FWORD PTR [rbx+0x1]
    ffb5:	45 0e                	rex.RB (bad) 
    ffb7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ffbd:	03 a2 01 0c 07 08    	add    esp,DWORD PTR [rdx+0x8070c01]
    ffc3:	00 20                	add    BYTE PTR [rax],ah
    ffc5:	00 00                	add    BYTE PTR [rax],al
    ffc7:	00 40 08             	add    BYTE PTR [rax+0x8],al
    ffca:	00 00                	add    BYTE PTR [rax],al
    ffcc:	1b 8d ff ff 84 01    	sbb    ecx,DWORD PTR [rbp+0x184ffff]
    ffd2:	00 00                	add    BYTE PTR [rax],al
    ffd4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ffd7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ffdd:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ffe1:	76 01                	jbe    ffe4 <__GNU_EH_FRAME_HDR+0xc40>
    ffe3:	0c 07                	or     al,0x7
    ffe5:	08 00                	or     BYTE PTR [rax],al
    ffe7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ffea:	00 00                	add    BYTE PTR [rax],al
    ffec:	64 08 00             	or     BYTE PTR fs:[rax],al
    ffef:	00 7b 8e             	add    BYTE PTR [rbx-0x72],bh
    fff2:	ff                   	(bad)  
    fff3:	ff                   	(bad)  
    fff4:	ee                   	out    dx,al
    fff5:	01 00                	add    DWORD PTR [rax],eax
    fff7:	00 00                	add    BYTE PTR [rax],al
    fff9:	45 0e                	rex.RB (bad) 
    fffb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10001:	03 e5                	add    esp,ebp
   10003:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10006:	08 00                	or     BYTE PTR [rax],al
   10008:	1c 00                	sbb    al,0x0
   1000a:	00 00                	add    BYTE PTR [rax],al
   1000c:	84 08                	test   BYTE PTR [rax],cl
   1000e:	00 00                	add    BYTE PTR [rax],al
   10010:	49 90                	xchg   r8,rax
   10012:	ff                   	(bad)  
   10013:	ff                   	(bad)  
   10014:	e8 01 00 00 00       	call   1001a <__GNU_EH_FRAME_HDR+0xc76>
   10019:	45 0e                	rex.RB (bad) 
   1001b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10021:	03 df                	add    ebx,edi
   10023:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10026:	08 00                	or     BYTE PTR [rax],al
   10028:	1c 00                	sbb    al,0x0
   1002a:	00 00                	add    BYTE PTR [rax],al
   1002c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1002d:	08 00                	or     BYTE PTR [rax],al
   1002f:	00 11                	add    BYTE PTR [rcx],dl
   10031:	92                   	xchg   edx,eax
   10032:	ff                   	(bad)  
   10033:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
   10037:	00 00                	add    BYTE PTR [rax],al
   10039:	45 0e                	rex.RB (bad) 
   1003b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10041:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
   10044:	07                   	(bad)  
   10045:	08 00                	or     BYTE PTR [rax],al
   10047:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1004a:	00 00                	add    BYTE PTR [rax],al
   1004c:	c4                   	(bad)  
   1004d:	08 00                	or     BYTE PTR [rax],al
   1004f:	00 5d 92             	add    BYTE PTR [rbp-0x6e],bl
   10052:	ff                   	(bad)  
   10053:	ff 72 00             	push   QWORD PTR [rdx+0x0]
   10056:	00 00                	add    BYTE PTR [rax],al
   10058:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1005b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10061:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
   10064:	07                   	(bad)  
   10065:	08 00                	or     BYTE PTR [rax],al
   10067:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1006a:	00 00                	add    BYTE PTR [rax],al
   1006c:	e4 08                	in     al,0x8
   1006e:	00 00                	add    BYTE PTR [rax],al
   10070:	af                   	scas   eax,DWORD PTR es:[rdi]
   10071:	92                   	xchg   edx,eax
   10072:	ff                   	(bad)  
   10073:	ff 11                	call   QWORD PTR [rcx]
   10075:	01 00                	add    DWORD PTR [rax],eax
   10077:	00 00                	add    BYTE PTR [rax],al
   10079:	45 0e                	rex.RB (bad) 
   1007b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10081:	03 08                	add    ecx,DWORD PTR [rax]
   10083:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10086:	08 00                	or     BYTE PTR [rax],al
   10088:	1c 00                	sbb    al,0x0
   1008a:	00 00                	add    BYTE PTR [rax],al
   1008c:	04 09                	add    al,0x9
   1008e:	00 00                	add    BYTE PTR [rax],al
   10090:	a0 93 ff ff 5c 00 00 	movabs al,ds:0x5cffff93
   10097:	00 00 
   10099:	45 0e                	rex.RB (bad) 
   1009b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   100a1:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
   100a4:	07                   	(bad)  
   100a5:	08 00                	or     BYTE PTR [rax],al
   100a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   100aa:	00 00                	add    BYTE PTR [rax],al
   100ac:	24 09                	and    al,0x9
   100ae:	00 00                	add    BYTE PTR [rax],al
   100b0:	dc 93 ff ff 3e 00    	fcom   QWORD PTR [rbx+0x3effff]
   100b6:	00 00                	add    BYTE PTR [rax],al
   100b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   100bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   100c1:	75 0c                	jne    100cf <__GNU_EH_FRAME_HDR+0xd2b>
   100c3:	07                   	(bad)  
   100c4:	08 00                	or     BYTE PTR [rax],al
   100c6:	00 00                	add    BYTE PTR [rax],al
   100c8:	1c 00                	sbb    al,0x0
   100ca:	00 00                	add    BYTE PTR [rax],al
   100cc:	44 09 00             	or     DWORD PTR [rax],r8d
   100cf:	00 fa                	add    dl,bh
   100d1:	93                   	xchg   ebx,eax
   100d2:	ff                   	(bad)  
   100d3:	ff 86 00 00 00 00    	inc    DWORD PTR [rsi+0x0]
   100d9:	45 0e                	rex.RB (bad) 
   100db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   100e1:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
   100e4:	07                   	(bad)  
   100e5:	08 00                	or     BYTE PTR [rax],al
   100e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   100ea:	00 00                	add    BYTE PTR [rax],al
   100ec:	64 09 00             	or     DWORD PTR fs:[rax],eax
   100ef:	00 60 94             	add    BYTE PTR [rax-0x6c],ah
   100f2:	ff                   	(bad)  
   100f3:	ff                   	(bad)  
   100f4:	df 00                	fild   WORD PTR [rax]
   100f6:	00 00                	add    BYTE PTR [rax],al
   100f8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   100fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10101:	02 d6                	add    dl,dh
   10103:	0c 07                	or     al,0x7
   10105:	08 00                	or     BYTE PTR [rax],al
   10107:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1010a:	00 00                	add    BYTE PTR [rax],al
   1010c:	84 09                	test   BYTE PTR [rcx],cl
   1010e:	00 00                	add    BYTE PTR [rax],al
   10110:	1f                   	(bad)  
   10111:	95                   	xchg   ebp,eax
   10112:	ff                   	(bad)  
   10113:	ff 74 00 00          	push   QWORD PTR [rax+rax*1+0x0]
   10117:	00 00                	add    BYTE PTR [rax],al
   10119:	45 0e                	rex.RB (bad) 
   1011b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10121:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
   10124:	07                   	(bad)  
   10125:	08 00                	or     BYTE PTR [rax],al
   10127:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1012a:	00 00                	add    BYTE PTR [rax],al
   1012c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1012d:	09 00                	or     DWORD PTR [rax],eax
   1012f:	00 73 95             	add    BYTE PTR [rbx-0x6b],dh
   10132:	ff                   	(bad)  
   10133:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
   1013a:	0e                   	(bad)  
   1013b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10141:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
   10147:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1014a:	00 00                	add    BYTE PTR [rax],al
   1014c:	c4                   	(bad)  
   1014d:	09 00                	or     DWORD PTR [rax],eax
   1014f:	00 ef                	add    bh,ch
   10151:	95                   	xchg   ebp,eax
   10152:	ff                   	(bad)  
   10153:	ff 29                	jmp    FWORD PTR [rcx]
   10155:	00 00                	add    BYTE PTR [rax],al
   10157:	00 00                	add    BYTE PTR [rax],al
   10159:	45 0e                	rex.RB (bad) 
   1015b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10161:	60                   	(bad)  
   10162:	0c 07                	or     al,0x7
   10164:	08 00                	or     BYTE PTR [rax],al
   10166:	00 00                	add    BYTE PTR [rax],al
   10168:	1c 00                	sbb    al,0x0
   1016a:	00 00                	add    BYTE PTR [rax],al
   1016c:	e4 09                	in     al,0x9
   1016e:	00 00                	add    BYTE PTR [rax],al
   10170:	f8                   	clc    
   10171:	95                   	xchg   ebp,eax
   10172:	ff                   	(bad)  
   10173:	ff 29                	jmp    FWORD PTR [rcx]
   10175:	00 00                	add    BYTE PTR [rax],al
   10177:	00 00                	add    BYTE PTR [rax],al
   10179:	45 0e                	rex.RB (bad) 
   1017b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10181:	60                   	(bad)  
   10182:	0c 07                	or     al,0x7
   10184:	08 00                	or     BYTE PTR [rax],al
   10186:	00 00                	add    BYTE PTR [rax],al
   10188:	24 00                	and    al,0x0
   1018a:	00 00                	add    BYTE PTR [rax],al
   1018c:	04 0a                	add    al,0xa
   1018e:	00 00                	add    BYTE PTR [rax],al
   10190:	01 96 ff ff 53 01    	add    DWORD PTR [rsi+0x153ffff],edx
   10196:	00 00                	add    BYTE PTR [rax],al
   10198:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1019b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   101a1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
   101a5:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
   101a9:	08 00                	or     BYTE PTR [rax],al
   101ab:	00 00                	add    BYTE PTR [rax],al
   101ad:	00 00                	add    BYTE PTR [rax],al
   101af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   101b2:	00 00                	add    BYTE PTR [rax],al
   101b4:	2c 0a                	sub    al,0xa
   101b6:	00 00                	add    BYTE PTR [rax],al
   101b8:	2c 97                	sub    al,0x97
   101ba:	ff                   	(bad)  
   101bb:	ff 1e                	call   FWORD PTR [rsi]
   101bd:	00 00                	add    BYTE PTR [rax],al
   101bf:	00 00                	add    BYTE PTR [rax],al
   101c1:	45 0e                	rex.RB (bad) 
   101c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   101c9:	55                   	push   rbp
   101ca:	0c 07                	or     al,0x7
   101cc:	08 00                	or     BYTE PTR [rax],al
   101ce:	00 00                	add    BYTE PTR [rax],al
   101d0:	1c 00                	sbb    al,0x0
   101d2:	00 00                	add    BYTE PTR [rax],al
   101d4:	4c 0a 00             	rex.WR or r8b,BYTE PTR [rax]
   101d7:	00 2a                	add    BYTE PTR [rdx],ch
   101d9:	97                   	xchg   edi,eax
   101da:	ff                   	(bad)  
   101db:	ff 63 01             	jmp    QWORD PTR [rbx+0x1]
   101de:	00 00                	add    BYTE PTR [rax],al
   101e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   101e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   101e9:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
   101ec:	0c 07                	or     al,0x7
   101ee:	08 00                	or     BYTE PTR [rax],al
   101f0:	2c 00                	sub    al,0x0
   101f2:	00 00                	add    BYTE PTR [rax],al
   101f4:	6c                   	ins    BYTE PTR es:[rdi],dx
   101f5:	0a 00                	or     al,BYTE PTR [rax]
   101f7:	00 6d 98             	add    BYTE PTR [rbp-0x68],ch
   101fa:	ff                   	(bad)  
   101fb:	ff 0e                	dec    DWORD PTR [rsi]
   101fd:	02 00                	add    al,BYTE PTR [rax]
   101ff:	00 00                	add    BYTE PTR [rax],al
   10201:	45 0e                	rex.RB (bad) 
   10203:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10209:	50                   	push   rax
   1020a:	8f 03                	pop    QWORD PTR [rbx]
   1020c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
   10213:	07                   	(bad)  
   10214:	03 f5                	add    esi,ebp
   10216:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10219:	08 00                	or     BYTE PTR [rax],al
   1021b:	00 00                	add    BYTE PTR [rax],al
   1021d:	00 00                	add    BYTE PTR [rax],al
   1021f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10222:	00 00                	add    BYTE PTR [rax],al
   10224:	9c                   	pushf  
   10225:	0a 00                	or     al,BYTE PTR [rax]
   10227:	00 4b 9a             	add    BYTE PTR [rbx-0x66],cl
   1022a:	ff                   	(bad)  
   1022b:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
   10231:	45 0e                	rex.RB (bad) 
   10233:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10239:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
   1023f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10242:	00 00                	add    BYTE PTR [rax],al
   10244:	bc 0a 00 00 dd       	mov    esp,0xdd00000a
   10249:	9a                   	(bad)  
   1024a:	ff                   	(bad)  
   1024b:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
   10251:	45 0e                	rex.RB (bad) 
   10253:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10259:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
   10260:	24 00                	and    al,0x0
   10262:	00 00                	add    BYTE PTR [rax],al
   10264:	dc 0a                	fmul   QWORD PTR [rdx]
   10266:	00 00                	add    BYTE PTR [rax],al
   10268:	62                   	(bad)  
   10269:	9b                   	fwait
   1026a:	ff                   	(bad)  
   1026b:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
   10272:	0e                   	(bad)  
   10273:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10279:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
   1027d:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
   10280:	08 00                	or     BYTE PTR [rax],al
   10282:	00 00                	add    BYTE PTR [rax],al
   10284:	00 00                	add    BYTE PTR [rax],al
   10286:	00 00                	add    BYTE PTR [rax],al
   10288:	1c 00                	sbb    al,0x0
   1028a:	00 00                	add    BYTE PTR [rax],al
   1028c:	04 0b                	add    al,0xb
   1028e:	00 00                	add    BYTE PTR [rax],al
   10290:	ce                   	(bad)  
   10291:	9b                   	fwait
   10292:	ff                   	(bad)  
   10293:	ff d5                	call   rbp
   10295:	00 00                	add    BYTE PTR [rax],al
   10297:	00 00                	add    BYTE PTR [rax],al
   10299:	45 0e                	rex.RB (bad) 
   1029b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   102a1:	02 cc                	add    cl,ah
   102a3:	0c 07                	or     al,0x7
   102a5:	08 00                	or     BYTE PTR [rax],al
   102a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   102aa:	00 00                	add    BYTE PTR [rax],al
   102ac:	24 0b                	and    al,0xb
   102ae:	00 00                	add    BYTE PTR [rax],al
   102b0:	83 9c ff ff df 00 00 	sbb    DWORD PTR [rdi+rdi*8+0xdfff],0x0
   102b7:	00 
   102b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   102bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   102c1:	02 d6                	add    dl,dh
   102c3:	0c 07                	or     al,0x7
   102c5:	08 00                	or     BYTE PTR [rax],al
   102c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   102ca:	00 00                	add    BYTE PTR [rax],al
   102cc:	44 0b 00             	or     r8d,DWORD PTR [rax]
   102cf:	00 42 9d             	add    BYTE PTR [rdx-0x63],al
   102d2:	ff                   	(bad)  
   102d3:	ff                   	(bad)  
   102d4:	7d 00                	jge    102d6 <__GNU_EH_FRAME_HDR+0xf32>
   102d6:	00 00                	add    BYTE PTR [rax],al
   102d8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   102db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   102e1:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
   102e5:	08 00                	or     BYTE PTR [rax],al
   102e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   102ea:	00 00                	add    BYTE PTR [rax],al
   102ec:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
   102ef:	00 9f 9d ff ff 36    	add    BYTE PTR [rdi+0x36ffff9d],bl
   102f5:	01 00                	add    DWORD PTR [rax],eax
   102f7:	00 00                	add    BYTE PTR [rax],al
   102f9:	45 0e                	rex.RB (bad) 
   102fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10301:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 8080f08 <_end+0x7f44f00>
   10307:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1030a:	00 00                	add    BYTE PTR [rax],al
   1030c:	84 0b                	test   BYTE PTR [rbx],cl
   1030e:	00 00                	add    BYTE PTR [rax],al
   10310:	b5 9e                	mov    ch,0x9e
   10312:	ff                   	(bad)  
   10313:	ff                   	(bad)  
   10314:	7e 00                	jle    10316 <__GNU_EH_FRAME_HDR+0xf72>
   10316:	00 00                	add    BYTE PTR [rax],al
   10318:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1031b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10321:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
   10324:	07                   	(bad)  
   10325:	08 00                	or     BYTE PTR [rax],al
   10327:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1032a:	00 00                	add    BYTE PTR [rax],al
   1032c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1032d:	0b 00                	or     eax,DWORD PTR [rax]
   1032f:	00 13                	add    BYTE PTR [rbx],dl
   10331:	9f                   	lahf   
   10332:	ff                   	(bad)  
   10333:	ff 2a                	jmp    FWORD PTR [rdx]
   10335:	02 00                	add    al,BYTE PTR [rax]
   10337:	00 00                	add    BYTE PTR [rax],al
   10339:	45 0e                	rex.RB (bad) 
   1033b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10341:	03 21                	add    esp,DWORD PTR [rcx]
   10343:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
   10346:	08 00                	or     BYTE PTR [rax],al
   10348:	1c 00                	sbb    al,0x0
   1034a:	00 00                	add    BYTE PTR [rax],al
   1034c:	c4                   	(bad)  
   1034d:	0b 00                	or     eax,DWORD PTR [rax]
   1034f:	00 1d a1 ff ff c3    	add    BYTE PTR [rip+0xffffffffc3ffffa1],bl        # ffffffffc40102f6 <_end+0xffffffffc3ed42ee>
   10355:	00 00                	add    BYTE PTR [rax],al
   10357:	00 00                	add    BYTE PTR [rax],al
   10359:	45 0e                	rex.RB (bad) 
   1035b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10361:	02 ba 0c 07 08 00    	add    bh,BYTE PTR [rdx+0x8070c]
   10367:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1036a:	00 00                	add    BYTE PTR [rax],al
   1036c:	e4 0b                	in     al,0xb
   1036e:	00 00                	add    BYTE PTR [rax],al
   10370:	c0 a1 ff ff 9b 01 00 	shl    BYTE PTR [rcx+0x19bffff],0x0
   10377:	00 00                	add    BYTE PTR [rax],al
   10379:	45 0e                	rex.RB (bad) 
   1037b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10381:	03 92 01 0c 07 08    	add    edx,DWORD PTR [rdx+0x8070c01]
   10387:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1038a:	00 00                	add    BYTE PTR [rax],al
   1038c:	04 0c                	add    al,0xc
   1038e:	00 00                	add    BYTE PTR [rax],al
   10390:	3b a3 ff ff 0d 01    	cmp    esp,DWORD PTR [rbx+0x10dffff]
   10396:	00 00                	add    BYTE PTR [rax],al
   10398:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1039b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   103a1:	03 04 01             	add    eax,DWORD PTR [rcx+rax*1]
   103a4:	0c 07                	or     al,0x7
   103a6:	08 00                	or     BYTE PTR [rax],al
   103a8:	1c 00                	sbb    al,0x0
   103aa:	00 00                	add    BYTE PTR [rax],al
   103ac:	24 0c                	and    al,0xc
   103ae:	00 00                	add    BYTE PTR [rax],al
   103b0:	28 a4 ff ff 66 00 00 	sub    BYTE PTR [rdi+rdi*8+0x66ff],ah
   103b7:	00 00                	add    BYTE PTR [rax],al
   103b9:	45 0e                	rex.RB (bad) 
   103bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   103c1:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
   103c4:	07                   	(bad)  
   103c5:	08 00                	or     BYTE PTR [rax],al
   103c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   103ca:	00 00                	add    BYTE PTR [rax],al
   103cc:	44 0c 00             	rex.R or al,0x0
   103cf:	00 6e a4             	add    BYTE PTR [rsi-0x5c],ch
   103d2:	ff                   	(bad)  
   103d3:	ff 75 00             	push   QWORD PTR [rbp+0x0]
   103d6:	00 00                	add    BYTE PTR [rax],al
   103d8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   103db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   103e1:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
   103e5:	08 00                	or     BYTE PTR [rax],al
   103e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   103ea:	00 00                	add    BYTE PTR [rax],al
   103ec:	64 0c 00             	fs or  al,0x0
   103ef:	00 c3                	add    bl,al
   103f1:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   103f2:	ff                   	(bad)  
   103f3:	ff                   	(bad)  
   103f4:	db 00                	fild   DWORD PTR [rax]
   103f6:	00 00                	add    BYTE PTR [rax],al
   103f8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   103fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10401:	02 d2                	add    dl,dl
   10403:	0c 07                	or     al,0x7
   10405:	08 00                	or     BYTE PTR [rax],al
   10407:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1040a:	00 00                	add    BYTE PTR [rax],al
   1040c:	84 0c 00             	test   BYTE PTR [rax+rax*1],cl
   1040f:	00 7e a5             	add    BYTE PTR [rsi-0x5b],bh
   10412:	ff                   	(bad)  
   10413:	ff 72 01             	push   QWORD PTR [rdx+0x1]
   10416:	00 00                	add    BYTE PTR [rax],al
   10418:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1041b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10421:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
   10424:	0c 07                	or     al,0x7
   10426:	08 00                	or     BYTE PTR [rax],al
   10428:	1c 00                	sbb    al,0x0
   1042a:	00 00                	add    BYTE PTR [rax],al
   1042c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1042d:	0c 00                	or     al,0x0
   1042f:	00 d0                	add    al,dl
   10431:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   10432:	ff                   	(bad)  
   10433:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
   10437:	00 00                	add    BYTE PTR [rax],al
   10439:	45 0e                	rex.RB (bad) 
   1043b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10441:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
   10444:	07                   	(bad)  
   10445:	08 00                	or     BYTE PTR [rax],al
   10447:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1044a:	00 00                	add    BYTE PTR [rax],al
   1044c:	c4                   	(bad)  
   1044d:	0c 00                	or     al,0x0
   1044f:	00 1c a7             	add    BYTE PTR [rdi+riz*4],bl
   10452:	ff                   	(bad)  
   10453:	ff 80 00 00 00 00    	inc    DWORD PTR [rax+0x0]
   10459:	45 0e                	rex.RB (bad) 
   1045b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10461:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
   10464:	07                   	(bad)  
   10465:	08 00                	or     BYTE PTR [rax],al
   10467:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1046a:	00 00                	add    BYTE PTR [rax],al
   1046c:	e4 0c                	in     al,0xc
   1046e:	00 00                	add    BYTE PTR [rax],al
   10470:	7c a7                	jl     10419 <__GNU_EH_FRAME_HDR+0x1075>
   10472:	ff                   	(bad)  
   10473:	ff 16                	call   QWORD PTR [rsi]
   10475:	00 00                	add    BYTE PTR [rax],al
   10477:	00 00                	add    BYTE PTR [rax],al
   10479:	45 0e                	rex.RB (bad) 
   1047b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10481:	4d 0c 07             	rex.WRB or al,0x7
   10484:	08 00                	or     BYTE PTR [rax],al
   10486:	00 00                	add    BYTE PTR [rax],al
   10488:	20 00                	and    BYTE PTR [rax],al
   1048a:	00 00                	add    BYTE PTR [rax],al
   1048c:	04 0d                	add    al,0xd
   1048e:	00 00                	add    BYTE PTR [rax],al
   10490:	72 a7                	jb     10439 <__GNU_EH_FRAME_HDR+0x1095>
   10492:	ff                   	(bad)  
   10493:	ff                   	(bad)  
   10494:	3a 01                	cmp    al,BYTE PTR [rcx]
   10496:	00 00                	add    BYTE PTR [rax],al
   10498:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1049b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   104a1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
   104a5:	2c 01                	sub    al,0x1
   104a7:	0c 07                	or     al,0x7
   104a9:	08 00                	or     BYTE PTR [rax],al
   104ab:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   104ae:	00 00                	add    BYTE PTR [rax],al
   104b0:	28 0d 00 00 88 a8    	sub    BYTE PTR [rip+0xffffffffa8880000],cl        # ffffffffa88904b6 <_end+0xffffffffa87544ae>
   104b6:	ff                   	(bad)  
   104b7:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
   104bb:	00 00                	add    BYTE PTR [rax],al
   104bd:	45 0e                	rex.RB (bad) 
   104bf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   104c5:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
   104c8:	07                   	(bad)  
   104c9:	08 00                	or     BYTE PTR [rax],al
   104cb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   104ce:	00 00                	add    BYTE PTR [rax],al
   104d0:	48 0d 00 00 cc a8    	or     rax,0xffffffffa8cc0000
   104d6:	ff                   	(bad)  
   104d7:	ff 53 00             	call   QWORD PTR [rbx+0x0]
   104da:	00 00                	add    BYTE PTR [rax],al
   104dc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   104df:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   104e5:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
   104e8:	07                   	(bad)  
   104e9:	08 00                	or     BYTE PTR [rax],al
   104eb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   104ee:	00 00                	add    BYTE PTR [rax],al
   104f0:	68 0d 00 00 ff       	push   0xffffffffff00000d
   104f5:	a8 ff                	test   al,0xff
   104f7:	ff b1 00 00 00 00    	push   QWORD PTR [rcx+0x0]
   104fd:	45 0e                	rex.RB (bad) 
   104ff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10505:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
   1050b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1050e:	00 00                	add    BYTE PTR [rax],al
   10510:	88 0d 00 00 90 a9    	mov    BYTE PTR [rip+0xffffffffa9900000],cl        # ffffffffa9910516 <_end+0xffffffffa97d450e>
   10516:	ff                   	(bad)  
   10517:	ff cb                	dec    ebx
   10519:	00 00                	add    BYTE PTR [rax],al
   1051b:	00 00                	add    BYTE PTR [rax],al
   1051d:	45 0e                	rex.RB (bad) 
   1051f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10525:	02 c2                	add    al,dl
   10527:	0c 07                	or     al,0x7
   10529:	08 00                	or     BYTE PTR [rax],al
   1052b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1052e:	00 00                	add    BYTE PTR [rax],al
   10530:	a8 0d                	test   al,0xd
   10532:	00 00                	add    BYTE PTR [rax],al
   10534:	3b aa ff ff 55 00    	cmp    ebp,DWORD PTR [rdx+0x55ffff]
   1053a:	00 00                	add    BYTE PTR [rax],al
   1053c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1053f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10545:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
   10549:	08 00                	or     BYTE PTR [rax],al
   1054b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1054e:	00 00                	add    BYTE PTR [rax],al
   10550:	c8 0d 00 00          	enter  0xd,0x0
   10554:	70 aa                	jo     10500 <__GNU_EH_FRAME_HDR+0x115c>
   10556:	ff                   	(bad)  
   10557:	ff 30                	push   QWORD PTR [rax]
   10559:	00 00                	add    BYTE PTR [rax],al
   1055b:	00 00                	add    BYTE PTR [rax],al
   1055d:	45 0e                	rex.RB (bad) 
   1055f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10565:	67 0c 07             	addr32 or al,0x7
   10568:	08 00                	or     BYTE PTR [rax],al
   1056a:	00 00                	add    BYTE PTR [rax],al
   1056c:	1c 00                	sbb    al,0x0
   1056e:	00 00                	add    BYTE PTR [rax],al
   10570:	e8 0d 00 00 80       	call   ffffffff80010582 <_end+0xffffffff7fed457a>
   10575:	aa                   	stos   BYTE PTR es:[rdi],al
   10576:	ff                   	(bad)  
   10577:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
   1057a:	00 00                	add    BYTE PTR [rax],al
   1057c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1057f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10585:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
   10588:	07                   	(bad)  
   10589:	08 00                	or     BYTE PTR [rax],al
   1058b:	00 20                	add    BYTE PTR [rax],ah
   1058d:	00 00                	add    BYTE PTR [rax],al
   1058f:	00 08                	add    BYTE PTR [rax],cl
   10591:	0e                   	(bad)  
   10592:	00 00                	add    BYTE PTR [rax],al
   10594:	c7                   	(bad)  
   10595:	aa                   	stos   BYTE PTR es:[rdi],al
   10596:	ff                   	(bad)  
   10597:	ff 0c 0f             	dec    DWORD PTR [rdi+rcx*1]
   1059a:	00 00                	add    BYTE PTR [rax],al
   1059c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1059f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   105a5:	48 83 03 03          	add    QWORD PTR [rbx],0x3
   105a9:	fb                   	sti    
   105aa:	0e                   	(bad)  
   105ab:	0c 07                	or     al,0x7
   105ad:	08 00                	or     BYTE PTR [rax],al
   105af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   105b2:	00 00                	add    BYTE PTR [rax],al
   105b4:	2c 0e                	sub    al,0xe
   105b6:	00 00                	add    BYTE PTR [rax],al
   105b8:	af                   	scas   eax,DWORD PTR es:[rdi]
   105b9:	b9 ff ff 46 00       	mov    ecx,0x46ffff
   105be:	00 00                	add    BYTE PTR [rax],al
   105c0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   105c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   105c9:	7d 0c                	jge    105d7 <__GNU_EH_FRAME_HDR+0x1233>
   105cb:	07                   	(bad)  
   105cc:	08 00                	or     BYTE PTR [rax],al
   105ce:	00 00                	add    BYTE PTR [rax],al
   105d0:	24 00                	and    al,0x0
   105d2:	00 00                	add    BYTE PTR [rax],al
   105d4:	4c 0e                	rex.WR (bad) 
   105d6:	00 00                	add    BYTE PTR [rax],al
   105d8:	d5                   	(bad)  
   105d9:	b9 ff ff 3b 02       	mov    ecx,0x23bffff
   105de:	00 00                	add    BYTE PTR [rax],al
   105e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   105e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   105e9:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
   105ec:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
   105ef:	05 83 06 03 27       	add    eax,0x27030683
   105f4:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
   105f7:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
   105fa:	00 00                	add    BYTE PTR [rax],al
   105fc:	74 0e                	je     1060c <__GNU_EH_FRAME_HDR+0x1268>
   105fe:	00 00                	add    BYTE PTR [rax],al
   10600:	e8 bb ff ff a5       	call   ffffffffa60105c0 <_end+0xffffffffa5ed45b8>
   10605:	01 00                	add    DWORD PTR [rax],eax
   10607:	00 00                	add    BYTE PTR [rax],al
   10609:	45 0e                	rex.RB (bad) 
   1060b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10611:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
   10618:	1c 00                	sbb    al,0x0
   1061a:	00 00                	add    BYTE PTR [rax],al
   1061c:	94                   	xchg   esp,eax
   1061d:	0e                   	(bad)  
   1061e:	00 00                	add    BYTE PTR [rax],al
   10620:	6d                   	ins    DWORD PTR es:[rdi],dx
   10621:	bd ff ff 12 01       	mov    ebp,0x112ffff
   10626:	00 00                	add    BYTE PTR [rax],al
   10628:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1062b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10631:	03 09                	add    ecx,DWORD PTR [rcx]
   10633:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10636:	08 00                	or     BYTE PTR [rax],al
   10638:	24 00                	and    al,0x0
   1063a:	00 00                	add    BYTE PTR [rax],al
   1063c:	b4 0e                	mov    ah,0xe
   1063e:	00 00                	add    BYTE PTR [rax],al
   10640:	5f                   	pop    rdi
   10641:	be ff ff bc 00       	mov    esi,0xbcffff
   10646:	00 00                	add    BYTE PTR [rax],al
   10648:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1064b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10651:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
   10655:	ae                   	scas   al,BYTE PTR es:[rdi]
   10656:	0c 07                	or     al,0x7
   10658:	08 00                	or     BYTE PTR [rax],al
   1065a:	00 00                	add    BYTE PTR [rax],al
   1065c:	00 00                	add    BYTE PTR [rax],al
   1065e:	00 00                	add    BYTE PTR [rax],al
   10660:	24 00                	and    al,0x0
   10662:	00 00                	add    BYTE PTR [rax],al
   10664:	dc 0e                	fmul   QWORD PTR [rsi]
   10666:	00 00                	add    BYTE PTR [rax],al
   10668:	f3 be ff ff 9b 01    	repz mov esi,0x19bffff
   1066e:	00 00                	add    BYTE PTR [rax],al
   10670:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   10673:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10679:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
   1067c:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
   10680:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10683:	08 00                	or     BYTE PTR [rax],al
   10685:	00 00                	add    BYTE PTR [rax],al
   10687:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1068a:	00 00                	add    BYTE PTR [rax],al
   1068c:	04 0f                	add    al,0xf
   1068e:	00 00                	add    BYTE PTR [rax],al
   10690:	66 c0 ff ff          	data16 sar bh,0xff
   10694:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   10695:	00 00                	add    BYTE PTR [rax],al
   10697:	00 00                	add    BYTE PTR [rax],al
   10699:	45 0e                	rex.RB (bad) 
   1069b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   106a1:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
   106a8:	1c 00                	sbb    al,0x0
   106aa:	00 00                	add    BYTE PTR [rax],al
   106ac:	24 0f                	and    al,0xf
   106ae:	00 00                	add    BYTE PTR [rax],al
   106b0:	eb c0                	jmp    10672 <__GNU_EH_FRAME_HDR+0x12ce>
   106b2:	ff                   	(bad)  
   106b3:	ff 43 01             	inc    DWORD PTR [rbx+0x1]
   106b6:	00 00                	add    BYTE PTR [rax],al
   106b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   106bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   106c1:	03 3a                	add    edi,DWORD PTR [rdx]
   106c3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   106c6:	08 00                	or     BYTE PTR [rax],al
   106c8:	1c 00                	sbb    al,0x0
   106ca:	00 00                	add    BYTE PTR [rax],al
   106cc:	44 0f 00 00          	rex.R sldt WORD PTR [rax]
   106d0:	0e                   	(bad)  
   106d1:	c2 ff ff             	ret    0xffff
   106d4:	f3 00 00             	repz add BYTE PTR [rax],al
   106d7:	00 00                	add    BYTE PTR [rax],al
   106d9:	45 0e                	rex.RB (bad) 
   106db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   106e1:	02 ea                	add    ch,dl
   106e3:	0c 07                	or     al,0x7
   106e5:	08 00                	or     BYTE PTR [rax],al
   106e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   106ea:	00 00                	add    BYTE PTR [rax],al
   106ec:	64 0f 00 00          	sldt   WORD PTR fs:[rax]
   106f0:	e1 c2                	loope  106b4 <__GNU_EH_FRAME_HDR+0x1310>
   106f2:	ff                   	(bad)  
   106f3:	ff 8e 02 00 00 00    	dec    DWORD PTR [rsi+0x2]
   106f9:	45 0e                	rex.RB (bad) 
   106fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10701:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
   10704:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
   10708:	1c 00                	sbb    al,0x0
   1070a:	00 00                	add    BYTE PTR [rax],al
   1070c:	84 0f                	test   BYTE PTR [rdi],cl
   1070e:	00 00                	add    BYTE PTR [rax],al
   10710:	4f c5 ff ff          	rex.WRXB (bad) 
   10714:	6a 00                	push   0x0
   10716:	00 00                	add    BYTE PTR [rax],al
   10718:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1071b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10721:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
   10724:	07                   	(bad)  
   10725:	08 00                	or     BYTE PTR [rax],al
   10727:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1072a:	00 00                	add    BYTE PTR [rax],al
   1072c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1072d:	0f 00 00             	sldt   WORD PTR [rax]
   10730:	99                   	cdq    
   10731:	c5 ff ff             	(bad)  
   10734:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   10735:	00 00                	add    BYTE PTR [rax],al
   10737:	00 00                	add    BYTE PTR [rax],al
   10739:	45 0e                	rex.RB (bad) 
   1073b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10741:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
   10744:	07                   	(bad)  
   10745:	08 00                	or     BYTE PTR [rax],al
   10747:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1074a:	00 00                	add    BYTE PTR [rax],al
   1074c:	c4                   	(bad)  
   1074d:	0f 00 00             	sldt   WORD PTR [rax]
   10750:	e7 c5                	out    0xc5,eax
   10752:	ff                   	(bad)  
   10753:	ff 70 00             	push   QWORD PTR [rax+0x0]
   10756:	00 00                	add    BYTE PTR [rax],al
   10758:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1075b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10761:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
   10764:	07                   	(bad)  
   10765:	08 00                	or     BYTE PTR [rax],al
   10767:	00 20                	add    BYTE PTR [rax],ah
   10769:	00 00                	add    BYTE PTR [rax],al
   1076b:	00 e4                	add    ah,ah
   1076d:	0f 00 00             	sldt   WORD PTR [rax]
   10770:	37                   	(bad)  
   10771:	c6                   	(bad)  
   10772:	ff                   	(bad)  
   10773:	ff 8d 01 00 00 00    	dec    DWORD PTR [rbp+0x1]
   10779:	45 0e                	rex.RB (bad) 
   1077b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10781:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
   10785:	7f 01                	jg     10788 <__GNU_EH_FRAME_HDR+0x13e4>
   10787:	0c 07                	or     al,0x7
   10789:	08 00                	or     BYTE PTR [rax],al
	...

000000000001078c <__FRAME_END__>:
   1078c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000011b40 <message_buffer+0x116c0>:
	...

Disassembly of section .init_array:

0000000000011b40 <__frame_dummy_init_array_entry>:
   11b40:	20 2a                	and    BYTE PTR [rdx],ch
   11b42:	00 00                	add    BYTE PTR [rax],al
   11b44:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000011b48 <__do_global_dtors_aux_fini_array_entry>:
   11b48:	e0 29                	loopne 11b73 <_DYNAMIC+0x23>
   11b4a:	00 00                	add    BYTE PTR [rax],al
   11b4c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000011b50 <_DYNAMIC>:
   11b50:	01 00                	add    DWORD PTR [rax],eax
   11b52:	00 00                	add    BYTE PTR [rax],al
   11b54:	00 00                	add    BYTE PTR [rax],al
   11b56:	00 00                	add    BYTE PTR [rax],al
   11b58:	de 02                	fiadd  WORD PTR [rdx]
   11b5a:	00 00                	add    BYTE PTR [rax],al
   11b5c:	00 00                	add    BYTE PTR [rax],al
   11b5e:	00 00                	add    BYTE PTR [rax],al
   11b60:	01 00                	add    DWORD PTR [rax],eax
   11b62:	00 00                	add    BYTE PTR [rax],al
   11b64:	00 00                	add    BYTE PTR [rax],al
   11b66:	00 00                	add    BYTE PTR [rax],al
   11b68:	ed                   	in     eax,dx
   11b69:	02 00                	add    al,BYTE PTR [rax]
   11b6b:	00 00                	add    BYTE PTR [rax],al
   11b6d:	00 00                	add    BYTE PTR [rax],al
   11b6f:	00 01                	add    BYTE PTR [rcx],al
   11b71:	00 00                	add    BYTE PTR [rax],al
   11b73:	00 00                	add    BYTE PTR [rax],al
   11b75:	00 00                	add    BYTE PTR [rax],al
   11b77:	00 fe                	add    dh,bh
   11b79:	02 00                	add    al,BYTE PTR [rax]
   11b7b:	00 00                	add    BYTE PTR [rax],al
   11b7d:	00 00                	add    BYTE PTR [rax],al
   11b7f:	00 01                	add    BYTE PTR [rcx],al
   11b81:	00 00                	add    BYTE PTR [rax],al
   11b83:	00 00                	add    BYTE PTR [rax],al
   11b85:	00 00                	add    BYTE PTR [rax],al
   11b87:	00 0e                	add    BYTE PTR [rsi],cl
   11b89:	03 00                	add    eax,DWORD PTR [rax]
   11b8b:	00 00                	add    BYTE PTR [rax],al
   11b8d:	00 00                	add    BYTE PTR [rax],al
   11b8f:	00 01                	add    BYTE PTR [rcx],al
   11b91:	00 00                	add    BYTE PTR [rax],al
   11b93:	00 00                	add    BYTE PTR [rax],al
   11b95:	00 00                	add    BYTE PTR [rax],al
   11b97:	00 1d 03 00 00 00    	add    BYTE PTR [rip+0x3],bl        # 11ba0 <_DYNAMIC+0x50>
   11b9d:	00 00                	add    BYTE PTR [rax],al
   11b9f:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   11ba2:	00 00                	add    BYTE PTR [rax],al
   11ba4:	00 00                	add    BYTE PTR [rax],al
   11ba6:	00 00                	add    BYTE PTR [rax],al
   11ba8:	00 20                	add    BYTE PTR [rax],ah
   11baa:	00 00                	add    BYTE PTR [rax],al
   11bac:	00 00                	add    BYTE PTR [rax],al
   11bae:	00 00                	add    BYTE PTR [rax],al
   11bb0:	0d 00 00 00 00       	or     eax,0x0
   11bb5:	00 00                	add    BYTE PTR [rax],al
   11bb7:	00 34 cf             	add    BYTE PTR [rdi+rcx*8],dh
   11bba:	00 00                	add    BYTE PTR [rax],al
   11bbc:	00 00                	add    BYTE PTR [rax],al
   11bbe:	00 00                	add    BYTE PTR [rax],al
   11bc0:	19 00                	sbb    DWORD PTR [rax],eax
   11bc2:	00 00                	add    BYTE PTR [rax],al
   11bc4:	00 00                	add    BYTE PTR [rax],al
   11bc6:	00 00                	add    BYTE PTR [rax],al
   11bc8:	40 1b 01             	rex sbb eax,DWORD PTR [rcx]
   11bcb:	00 00                	add    BYTE PTR [rax],al
   11bcd:	00 00                	add    BYTE PTR [rax],al
   11bcf:	00 1b                	add    BYTE PTR [rbx],bl
   11bd1:	00 00                	add    BYTE PTR [rax],al
   11bd3:	00 00                	add    BYTE PTR [rax],al
   11bd5:	00 00                	add    BYTE PTR [rax],al
   11bd7:	00 08                	add    BYTE PTR [rax],cl
   11bd9:	00 00                	add    BYTE PTR [rax],al
   11bdb:	00 00                	add    BYTE PTR [rax],al
   11bdd:	00 00                	add    BYTE PTR [rax],al
   11bdf:	00 1a                	add    BYTE PTR [rdx],bl
   11be1:	00 00                	add    BYTE PTR [rax],al
   11be3:	00 00                	add    BYTE PTR [rax],al
   11be5:	00 00                	add    BYTE PTR [rax],al
   11be7:	00 48 1b             	add    BYTE PTR [rax+0x1b],cl
   11bea:	01 00                	add    DWORD PTR [rax],eax
   11bec:	00 00                	add    BYTE PTR [rax],al
   11bee:	00 00                	add    BYTE PTR [rax],al
   11bf0:	1c 00                	sbb    al,0x0
   11bf2:	00 00                	add    BYTE PTR [rax],al
   11bf4:	00 00                	add    BYTE PTR [rax],al
   11bf6:	00 00                	add    BYTE PTR [rax],al
   11bf8:	08 00                	or     BYTE PTR [rax],al
   11bfa:	00 00                	add    BYTE PTR [rax],al
   11bfc:	00 00                	add    BYTE PTR [rax],al
   11bfe:	00 00                	add    BYTE PTR [rax],al
   11c00:	f5                   	cmc    
   11c01:	fe                   	(bad)  
   11c02:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11c05:	00 00                	add    BYTE PTR [rax],al
   11c07:	00 e8                	add    al,ch
   11c09:	03 00                	add    eax,DWORD PTR [rax]
   11c0b:	00 00                	add    BYTE PTR [rax],al
   11c0d:	00 00                	add    BYTE PTR [rax],al
   11c0f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 11c15 <_DYNAMIC+0xc5>
   11c15:	00 00                	add    BYTE PTR [rax],al
   11c17:	00 98 0b 00 00 00    	add    BYTE PTR [rax+0xb],bl
   11c1d:	00 00                	add    BYTE PTR [rax],al
   11c1f:	00 06                	add    BYTE PTR [rsi],al
   11c21:	00 00                	add    BYTE PTR [rax],al
   11c23:	00 00                	add    BYTE PTR [rax],al
   11c25:	00 00                	add    BYTE PTR [rax],al
   11c27:	00 18                	add    BYTE PTR [rax],bl
   11c29:	04 00                	add    al,0x0
   11c2b:	00 00                	add    BYTE PTR [rax],al
   11c2d:	00 00                	add    BYTE PTR [rax],al
   11c2f:	00 0a                	add    BYTE PTR [rdx],cl
   11c31:	00 00                	add    BYTE PTR [rax],al
   11c33:	00 00                	add    BYTE PTR [rax],al
   11c35:	00 00                	add    BYTE PTR [rax],al
   11c37:	00 6a 03             	add    BYTE PTR [rdx+0x3],ch
   11c3a:	00 00                	add    BYTE PTR [rax],al
   11c3c:	00 00                	add    BYTE PTR [rax],al
   11c3e:	00 00                	add    BYTE PTR [rax],al
   11c40:	0b 00                	or     eax,DWORD PTR [rax]
   11c42:	00 00                	add    BYTE PTR [rax],al
   11c44:	00 00                	add    BYTE PTR [rax],al
   11c46:	00 00                	add    BYTE PTR [rax],al
   11c48:	18 00                	sbb    BYTE PTR [rax],al
   11c4a:	00 00                	add    BYTE PTR [rax],al
   11c4c:	00 00                	add    BYTE PTR [rax],al
   11c4e:	00 00                	add    BYTE PTR [rax],al
   11c50:	15 00 00 00 00       	adc    eax,0x0
	...
   11c5d:	00 00                	add    BYTE PTR [rax],al
   11c5f:	00 03                	add    BYTE PTR [rbx],al
   11c61:	00 00                	add    BYTE PTR [rax],al
   11c63:	00 00                	add    BYTE PTR [rax],al
   11c65:	00 00                	add    BYTE PTR [rax],al
   11c67:	00 80 1d 01 00 00    	add    BYTE PTR [rax+0x11d],al
   11c6d:	00 00                	add    BYTE PTR [rax],al
   11c6f:	00 02                	add    BYTE PTR [rdx],al
   11c71:	00 00                	add    BYTE PTR [rax],al
   11c73:	00 00                	add    BYTE PTR [rax],al
   11c75:	00 00                	add    BYTE PTR [rax],al
   11c77:	00 c0                	add    al,al
   11c79:	06                   	(bad)  
   11c7a:	00 00                	add    BYTE PTR [rax],al
   11c7c:	00 00                	add    BYTE PTR [rax],al
   11c7e:	00 00                	add    BYTE PTR [rax],al
   11c80:	14 00                	adc    al,0x0
   11c82:	00 00                	add    BYTE PTR [rax],al
   11c84:	00 00                	add    BYTE PTR [rax],al
   11c86:	00 00                	add    BYTE PTR [rax],al
   11c88:	07                   	(bad)  
   11c89:	00 00                	add    BYTE PTR [rax],al
   11c8b:	00 00                	add    BYTE PTR [rax],al
   11c8d:	00 00                	add    BYTE PTR [rax],al
   11c8f:	00 17                	add    BYTE PTR [rdi],dl
   11c91:	00 00                	add    BYTE PTR [rax],al
   11c93:	00 00                	add    BYTE PTR [rax],al
   11c95:	00 00                	add    BYTE PTR [rax],al
   11c97:	00 88 11 00 00 00    	add    BYTE PTR [rax+0x11],cl
   11c9d:	00 00                	add    BYTE PTR [rax],al
   11c9f:	00 07                	add    BYTE PTR [rdi],al
   11ca1:	00 00                	add    BYTE PTR [rax],al
   11ca3:	00 00                	add    BYTE PTR [rax],al
   11ca5:	00 00                	add    BYTE PTR [rax],al
   11ca7:	00 38                	add    BYTE PTR [rax],bh
   11ca9:	10 00                	adc    BYTE PTR [rax],al
   11cab:	00 00                	add    BYTE PTR [rax],al
   11cad:	00 00                	add    BYTE PTR [rax],al
   11caf:	00 08                	add    BYTE PTR [rax],cl
   11cb1:	00 00                	add    BYTE PTR [rax],al
   11cb3:	00 00                	add    BYTE PTR [rax],al
   11cb5:	00 00                	add    BYTE PTR [rax],al
   11cb7:	00 50 01             	add    BYTE PTR [rax+0x1],dl
   11cba:	00 00                	add    BYTE PTR [rax],al
   11cbc:	00 00                	add    BYTE PTR [rax],al
   11cbe:	00 00                	add    BYTE PTR [rax],al
   11cc0:	09 00                	or     DWORD PTR [rax],eax
   11cc2:	00 00                	add    BYTE PTR [rax],al
   11cc4:	00 00                	add    BYTE PTR [rax],al
   11cc6:	00 00                	add    BYTE PTR [rax],al
   11cc8:	18 00                	sbb    BYTE PTR [rax],al
   11cca:	00 00                	add    BYTE PTR [rax],al
   11ccc:	00 00                	add    BYTE PTR [rax],al
   11cce:	00 00                	add    BYTE PTR [rax],al
   11cd0:	1e                   	(bad)  
   11cd1:	00 00                	add    BYTE PTR [rax],al
   11cd3:	00 00                	add    BYTE PTR [rax],al
   11cd5:	00 00                	add    BYTE PTR [rax],al
   11cd7:	00 08                	add    BYTE PTR [rax],cl
   11cd9:	00 00                	add    BYTE PTR [rax],al
   11cdb:	00 00                	add    BYTE PTR [rax],al
   11cdd:	00 00                	add    BYTE PTR [rax],al
   11cdf:	00 fb                	add    bl,bh
   11ce1:	ff                   	(bad)  
   11ce2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11ce5:	00 00                	add    BYTE PTR [rax],al
   11ce7:	00 01                	add    BYTE PTR [rcx],al
   11ce9:	00 00                	add    BYTE PTR [rax],al
   11ceb:	08 00                	or     BYTE PTR [rax],al
   11ced:	00 00                	add    BYTE PTR [rax],al
   11cef:	00 fe                	add    dh,bh
   11cf1:	ff                   	(bad)  
   11cf2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11cf5:	00 00                	add    BYTE PTR [rax],al
   11cf7:	00 a8 0f 00 00 00    	add    BYTE PTR [rax+0xf],ch
   11cfd:	00 00                	add    BYTE PTR [rax],al
   11cff:	00 ff                	add    bh,bh
   11d01:	ff                   	(bad)  
   11d02:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11d05:	00 00                	add    BYTE PTR [rax],al
   11d07:	00 03                	add    BYTE PTR [rbx],al
   11d09:	00 00                	add    BYTE PTR [rax],al
   11d0b:	00 00                	add    BYTE PTR [rax],al
   11d0d:	00 00                	add    BYTE PTR [rax],al
   11d0f:	00 f0                	add    al,dh
   11d11:	ff                   	(bad)  
   11d12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11d15:	00 00                	add    BYTE PTR [rax],al
   11d17:	00 02                	add    BYTE PTR [rdx],al
   11d19:	0f 00 00             	sldt   WORD PTR [rax]
   11d1c:	00 00                	add    BYTE PTR [rax],al
   11d1e:	00 00                	add    BYTE PTR [rax],al
   11d20:	f9                   	stc    
   11d21:	ff                   	(bad)  
   11d22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11d25:	00 00                	add    BYTE PTR [rax],al
   11d27:	00 08                	add    BYTE PTR [rax],cl
	...

Disassembly of section .got:

0000000000011d80 <_GLOBAL_OFFSET_TABLE_>:
   11d80:	50                   	push   rax
   11d81:	1b 01                	sbb    eax,DWORD PTR [rcx]
	...
   11d97:	00 30                	add    BYTE PTR [rax],dh
   11d99:	20 00                	and    BYTE PTR [rax],al
   11d9b:	00 00                	add    BYTE PTR [rax],al
   11d9d:	00 00                	add    BYTE PTR [rax],al
   11d9f:	00 40 20             	add    BYTE PTR [rax+0x20],al
   11da2:	00 00                	add    BYTE PTR [rax],al
   11da4:	00 00                	add    BYTE PTR [rax],al
   11da6:	00 00                	add    BYTE PTR [rax],al
   11da8:	50                   	push   rax
   11da9:	20 00                	and    BYTE PTR [rax],al
   11dab:	00 00                	add    BYTE PTR [rax],al
   11dad:	00 00                	add    BYTE PTR [rax],al
   11daf:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   11db2:	00 00                	add    BYTE PTR [rax],al
   11db4:	00 00                	add    BYTE PTR [rax],al
   11db6:	00 00                	add    BYTE PTR [rax],al
   11db8:	70 20                	jo     11dda <_GLOBAL_OFFSET_TABLE_+0x5a>
   11dba:	00 00                	add    BYTE PTR [rax],al
   11dbc:	00 00                	add    BYTE PTR [rax],al
   11dbe:	00 00                	add    BYTE PTR [rax],al
   11dc0:	80 20 00             	and    BYTE PTR [rax],0x0
   11dc3:	00 00                	add    BYTE PTR [rax],al
   11dc5:	00 00                	add    BYTE PTR [rax],al
   11dc7:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   11dcd:	00 00                	add    BYTE PTR [rax],al
   11dcf:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   11dd5:	00 00                	add    BYTE PTR [rax],al
   11dd7:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   11ddd:	00 00                	add    BYTE PTR [rax],al
   11ddf:	00 c0                	add    al,al
   11de1:	20 00                	and    BYTE PTR [rax],al
   11de3:	00 00                	add    BYTE PTR [rax],al
   11de5:	00 00                	add    BYTE PTR [rax],al
   11de7:	00 d0                	add    al,dl
   11de9:	20 00                	and    BYTE PTR [rax],al
   11deb:	00 00                	add    BYTE PTR [rax],al
   11ded:	00 00                	add    BYTE PTR [rax],al
   11def:	00 e0                	add    al,ah
   11df1:	20 00                	and    BYTE PTR [rax],al
   11df3:	00 00                	add    BYTE PTR [rax],al
   11df5:	00 00                	add    BYTE PTR [rax],al
   11df7:	00 f0                	add    al,dh
   11df9:	20 00                	and    BYTE PTR [rax],al
   11dfb:	00 00                	add    BYTE PTR [rax],al
   11dfd:	00 00                	add    BYTE PTR [rax],al
   11dff:	00 00                	add    BYTE PTR [rax],al
   11e01:	21 00                	and    DWORD PTR [rax],eax
   11e03:	00 00                	add    BYTE PTR [rax],al
   11e05:	00 00                	add    BYTE PTR [rax],al
   11e07:	00 10                	add    BYTE PTR [rax],dl
   11e09:	21 00                	and    DWORD PTR [rax],eax
   11e0b:	00 00                	add    BYTE PTR [rax],al
   11e0d:	00 00                	add    BYTE PTR [rax],al
   11e0f:	00 20                	add    BYTE PTR [rax],ah
   11e11:	21 00                	and    DWORD PTR [rax],eax
   11e13:	00 00                	add    BYTE PTR [rax],al
   11e15:	00 00                	add    BYTE PTR [rax],al
   11e17:	00 30                	add    BYTE PTR [rax],dh
   11e19:	21 00                	and    DWORD PTR [rax],eax
   11e1b:	00 00                	add    BYTE PTR [rax],al
   11e1d:	00 00                	add    BYTE PTR [rax],al
   11e1f:	00 40 21             	add    BYTE PTR [rax+0x21],al
   11e22:	00 00                	add    BYTE PTR [rax],al
   11e24:	00 00                	add    BYTE PTR [rax],al
   11e26:	00 00                	add    BYTE PTR [rax],al
   11e28:	50                   	push   rax
   11e29:	21 00                	and    DWORD PTR [rax],eax
   11e2b:	00 00                	add    BYTE PTR [rax],al
   11e2d:	00 00                	add    BYTE PTR [rax],al
   11e2f:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   11e32:	00 00                	add    BYTE PTR [rax],al
   11e34:	00 00                	add    BYTE PTR [rax],al
   11e36:	00 00                	add    BYTE PTR [rax],al
   11e38:	70 21                	jo     11e5b <_GLOBAL_OFFSET_TABLE_+0xdb>
   11e3a:	00 00                	add    BYTE PTR [rax],al
   11e3c:	00 00                	add    BYTE PTR [rax],al
   11e3e:	00 00                	add    BYTE PTR [rax],al
   11e40:	80 21 00             	and    BYTE PTR [rcx],0x0
   11e43:	00 00                	add    BYTE PTR [rax],al
   11e45:	00 00                	add    BYTE PTR [rax],al
   11e47:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   11e4d:	00 00                	add    BYTE PTR [rax],al
   11e4f:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   11e55:	00 00                	add    BYTE PTR [rax],al
   11e57:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   11e5d:	00 00                	add    BYTE PTR [rax],al
   11e5f:	00 c0                	add    al,al
   11e61:	21 00                	and    DWORD PTR [rax],eax
   11e63:	00 00                	add    BYTE PTR [rax],al
   11e65:	00 00                	add    BYTE PTR [rax],al
   11e67:	00 d0                	add    al,dl
   11e69:	21 00                	and    DWORD PTR [rax],eax
   11e6b:	00 00                	add    BYTE PTR [rax],al
   11e6d:	00 00                	add    BYTE PTR [rax],al
   11e6f:	00 e0                	add    al,ah
   11e71:	21 00                	and    DWORD PTR [rax],eax
   11e73:	00 00                	add    BYTE PTR [rax],al
   11e75:	00 00                	add    BYTE PTR [rax],al
   11e77:	00 f0                	add    al,dh
   11e79:	21 00                	and    DWORD PTR [rax],eax
   11e7b:	00 00                	add    BYTE PTR [rax],al
   11e7d:	00 00                	add    BYTE PTR [rax],al
   11e7f:	00 00                	add    BYTE PTR [rax],al
   11e81:	22 00                	and    al,BYTE PTR [rax]
   11e83:	00 00                	add    BYTE PTR [rax],al
   11e85:	00 00                	add    BYTE PTR [rax],al
   11e87:	00 10                	add    BYTE PTR [rax],dl
   11e89:	22 00                	and    al,BYTE PTR [rax]
   11e8b:	00 00                	add    BYTE PTR [rax],al
   11e8d:	00 00                	add    BYTE PTR [rax],al
   11e8f:	00 20                	add    BYTE PTR [rax],ah
   11e91:	22 00                	and    al,BYTE PTR [rax]
   11e93:	00 00                	add    BYTE PTR [rax],al
   11e95:	00 00                	add    BYTE PTR [rax],al
   11e97:	00 30                	add    BYTE PTR [rax],dh
   11e99:	22 00                	and    al,BYTE PTR [rax]
   11e9b:	00 00                	add    BYTE PTR [rax],al
   11e9d:	00 00                	add    BYTE PTR [rax],al
   11e9f:	00 40 22             	add    BYTE PTR [rax+0x22],al
   11ea2:	00 00                	add    BYTE PTR [rax],al
   11ea4:	00 00                	add    BYTE PTR [rax],al
   11ea6:	00 00                	add    BYTE PTR [rax],al
   11ea8:	50                   	push   rax
   11ea9:	22 00                	and    al,BYTE PTR [rax]
   11eab:	00 00                	add    BYTE PTR [rax],al
   11ead:	00 00                	add    BYTE PTR [rax],al
   11eaf:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   11eb2:	00 00                	add    BYTE PTR [rax],al
   11eb4:	00 00                	add    BYTE PTR [rax],al
   11eb6:	00 00                	add    BYTE PTR [rax],al
   11eb8:	70 22                	jo     11edc <_GLOBAL_OFFSET_TABLE_+0x15c>
   11eba:	00 00                	add    BYTE PTR [rax],al
   11ebc:	00 00                	add    BYTE PTR [rax],al
   11ebe:	00 00                	add    BYTE PTR [rax],al
   11ec0:	80 22 00             	and    BYTE PTR [rdx],0x0
   11ec3:	00 00                	add    BYTE PTR [rax],al
   11ec5:	00 00                	add    BYTE PTR [rax],al
   11ec7:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   11ecd:	00 00                	add    BYTE PTR [rax],al
   11ecf:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   11ed5:	00 00                	add    BYTE PTR [rax],al
   11ed7:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   11edd:	00 00                	add    BYTE PTR [rax],al
   11edf:	00 c0                	add    al,al
   11ee1:	22 00                	and    al,BYTE PTR [rax]
   11ee3:	00 00                	add    BYTE PTR [rax],al
   11ee5:	00 00                	add    BYTE PTR [rax],al
   11ee7:	00 d0                	add    al,dl
   11ee9:	22 00                	and    al,BYTE PTR [rax]
   11eeb:	00 00                	add    BYTE PTR [rax],al
   11eed:	00 00                	add    BYTE PTR [rax],al
   11eef:	00 e0                	add    al,ah
   11ef1:	22 00                	and    al,BYTE PTR [rax]
   11ef3:	00 00                	add    BYTE PTR [rax],al
   11ef5:	00 00                	add    BYTE PTR [rax],al
   11ef7:	00 f0                	add    al,dh
   11ef9:	22 00                	and    al,BYTE PTR [rax]
   11efb:	00 00                	add    BYTE PTR [rax],al
   11efd:	00 00                	add    BYTE PTR [rax],al
   11eff:	00 00                	add    BYTE PTR [rax],al
   11f01:	23 00                	and    eax,DWORD PTR [rax]
   11f03:	00 00                	add    BYTE PTR [rax],al
   11f05:	00 00                	add    BYTE PTR [rax],al
   11f07:	00 10                	add    BYTE PTR [rax],dl
   11f09:	23 00                	and    eax,DWORD PTR [rax]
   11f0b:	00 00                	add    BYTE PTR [rax],al
   11f0d:	00 00                	add    BYTE PTR [rax],al
   11f0f:	00 20                	add    BYTE PTR [rax],ah
   11f11:	23 00                	and    eax,DWORD PTR [rax]
   11f13:	00 00                	add    BYTE PTR [rax],al
   11f15:	00 00                	add    BYTE PTR [rax],al
   11f17:	00 30                	add    BYTE PTR [rax],dh
   11f19:	23 00                	and    eax,DWORD PTR [rax]
   11f1b:	00 00                	add    BYTE PTR [rax],al
   11f1d:	00 00                	add    BYTE PTR [rax],al
   11f1f:	00 40 23             	add    BYTE PTR [rax+0x23],al
   11f22:	00 00                	add    BYTE PTR [rax],al
   11f24:	00 00                	add    BYTE PTR [rax],al
   11f26:	00 00                	add    BYTE PTR [rax],al
   11f28:	50                   	push   rax
   11f29:	23 00                	and    eax,DWORD PTR [rax]
   11f2b:	00 00                	add    BYTE PTR [rax],al
   11f2d:	00 00                	add    BYTE PTR [rax],al
   11f2f:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   11f32:	00 00                	add    BYTE PTR [rax],al
   11f34:	00 00                	add    BYTE PTR [rax],al
   11f36:	00 00                	add    BYTE PTR [rax],al
   11f38:	70 23                	jo     11f5d <_GLOBAL_OFFSET_TABLE_+0x1dd>
   11f3a:	00 00                	add    BYTE PTR [rax],al
   11f3c:	00 00                	add    BYTE PTR [rax],al
   11f3e:	00 00                	add    BYTE PTR [rax],al
   11f40:	80 23 00             	and    BYTE PTR [rbx],0x0
   11f43:	00 00                	add    BYTE PTR [rax],al
   11f45:	00 00                	add    BYTE PTR [rax],al
   11f47:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   11f4d:	00 00                	add    BYTE PTR [rax],al
   11f4f:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   11f55:	00 00                	add    BYTE PTR [rax],al
   11f57:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   11f5d:	00 00                	add    BYTE PTR [rax],al
   11f5f:	00 c0                	add    al,al
   11f61:	23 00                	and    eax,DWORD PTR [rax]
   11f63:	00 00                	add    BYTE PTR [rax],al
   11f65:	00 00                	add    BYTE PTR [rax],al
   11f67:	00 d0                	add    al,dl
   11f69:	23 00                	and    eax,DWORD PTR [rax]
   11f6b:	00 00                	add    BYTE PTR [rax],al
   11f6d:	00 00                	add    BYTE PTR [rax],al
   11f6f:	00 e0                	add    al,ah
   11f71:	23 00                	and    eax,DWORD PTR [rax]
   11f73:	00 00                	add    BYTE PTR [rax],al
   11f75:	00 00                	add    BYTE PTR [rax],al
   11f77:	00 f0                	add    al,dh
   11f79:	23 00                	and    eax,DWORD PTR [rax]
   11f7b:	00 00                	add    BYTE PTR [rax],al
   11f7d:	00 00                	add    BYTE PTR [rax],al
   11f7f:	00 00                	add    BYTE PTR [rax],al
   11f81:	24 00                	and    al,0x0
   11f83:	00 00                	add    BYTE PTR [rax],al
   11f85:	00 00                	add    BYTE PTR [rax],al
   11f87:	00 10                	add    BYTE PTR [rax],dl
   11f89:	24 00                	and    al,0x0
   11f8b:	00 00                	add    BYTE PTR [rax],al
   11f8d:	00 00                	add    BYTE PTR [rax],al
   11f8f:	00 20                	add    BYTE PTR [rax],ah
   11f91:	24 00                	and    al,0x0
   11f93:	00 00                	add    BYTE PTR [rax],al
   11f95:	00 00                	add    BYTE PTR [rax],al
   11f97:	00 30                	add    BYTE PTR [rax],dh
   11f99:	24 00                	and    al,0x0
   11f9b:	00 00                	add    BYTE PTR [rax],al
   11f9d:	00 00                	add    BYTE PTR [rax],al
   11f9f:	00 40 24             	add    BYTE PTR [rax+0x24],al
   11fa2:	00 00                	add    BYTE PTR [rax],al
   11fa4:	00 00                	add    BYTE PTR [rax],al
   11fa6:	00 00                	add    BYTE PTR [rax],al
   11fa8:	50                   	push   rax
   11fa9:	24 00                	and    al,0x0
   11fab:	00 00                	add    BYTE PTR [rax],al
   11fad:	00 00                	add    BYTE PTR [rax],al
   11faf:	00 60 24             	add    BYTE PTR [rax+0x24],ah
   11fb2:	00 00                	add    BYTE PTR [rax],al
   11fb4:	00 00                	add    BYTE PTR [rax],al
   11fb6:	00 00                	add    BYTE PTR [rax],al
   11fb8:	70 24                	jo     11fde <_GLOBAL_OFFSET_TABLE_+0x25e>
   11fba:	00 00                	add    BYTE PTR [rax],al
   11fbc:	00 00                	add    BYTE PTR [rax],al
   11fbe:	00 00                	add    BYTE PTR [rax],al
   11fc0:	80 24 00 00          	and    BYTE PTR [rax+rax*1],0x0
   11fc4:	00 00                	add    BYTE PTR [rax],al
   11fc6:	00 00                	add    BYTE PTR [rax],al
   11fc8:	90                   	nop
   11fc9:	24 00                	and    al,0x0
   11fcb:	00 00                	add    BYTE PTR [rax],al
   11fcd:	00 00                	add    BYTE PTR [rax],al
   11fcf:	00 a0 24 00 00 00    	add    BYTE PTR [rax+0x24],ah
	...

Disassembly of section .data:

0000000000012000 <__data_start>:
	...

0000000000012008 <__dso_handle>:
   12008:	08 20                	or     BYTE PTR [rax],ah
   1200a:	01 00                	add    DWORD PTR [rax],eax
   1200c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012010 <blk_ipv4_len>:
   12010:	ff                   	(bad)  
   12011:	ff                   	(bad)  
   12012:	ff                   	(bad)  
   12013:	ff                   	(bad)  

0000000000012014 <num_rules>:
   12014:	ff                   	(bad)  
   12015:	ff                   	(bad)  
   12016:	ff                   	(bad)  
   12017:	ff                   	(bad)  

0000000000012018 <watchlist_num>:
   12018:	ff                   	(bad)  
   12019:	ff                   	(bad)  
   1201a:	ff                   	(bad)  
   1201b:	ff                   	(bad)  

000000000001201c <arp_entries>:
   1201c:	ff                   	(bad)  
   1201d:	ff                   	(bad)  
   1201e:	ff                   	(bad)  
   1201f:	ff                 	dec    eax

0000000000012020 <spi_max>:
   12020:	c8 00 00 00          	enter  0x0,0x0

0000000000012024 <total_conversations>:
   12024:	ff                   	(bad)  
   12025:	ff                   	(bad)  
   12026:	ff                   	(bad)  
   12027:	ff                   	(bad)  

0000000000012028 <VIGIL_MODE>:
   12028:	ff                   	(bad)  
   12029:	ff 00                	inc    DWORD PTR [rax]
   1202b:	00 00                	add    BYTE PTR [rax],al
   1202d:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012030 <default_config>:
   12030:	04 d0                	add    al,0xd0
   12032:	00 00                	add    BYTE PTR [rax],al
   12034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012038 <def_log_file>:
   12038:	1a d0                	sbb    dl,al
   1203a:	00 00                	add    BYTE PTR [rax],al
   1203c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012040 <default_host_conf>:
   12040:	34 d0                	xor    al,0xd0
   12042:	00 00                	add    BYTE PTR [rax],al
   12044:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012048 <get_cmd_help>:
   12048:	10 e6                	adc    dh,ah
   1204a:	00 00                	add    BYTE PTR [rax],al
   1204c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012050 <add_cmd_help>:
   12050:	e8 e6 00 00 00       	call   1213b <threads+0x9b>
   12055:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000012060 <optarg@GLIBC_2.2.5>:
	...

0000000000012068 <completed.0>:
	...

0000000000012080 <demo_mode>:
   12080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012084 <strict_icmp_timestamp_req>:
   12084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012088 <strict_nmap_host_alive_check>:
	...

00000000000120a0 <threads>:
	...

00000000000122a0 <thread_count>:
   122a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000122a4 <total_pkt_captured>:
   122a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000122a8 <is_running>:
	...

00000000000122b0 <last_clean_time>:
	...

00000000000122b8 <clean_delay>:
	...

00000000000122c0 <pkt_counter>:
	...

00000000000122e0 <rules>:
	...

00000000000f42e0 <blocked_ipv4_addrs>:
	...

00000000000f4520 <watchlist>:
	...

0000000000108d20 <arpcache>:
	...

000000000010af00 <ip_addr>:
	...

000000000010af20 <debug_mode>:
	...

000000000010af21 <use_sqlite>:
	...

000000000010af40 <sqlite_db_path>:
	...

000000000010af60 <clean_delay_pkts>:
  10af60:	00 00                	add    BYTE PTR [rax],al
	...

000000000010af64 <packet_print>:
	...

000000000010af65 <quiet_exit>:
  10af65:	00 00                	add    BYTE PTR [rax],al
	...

000000000010af68 <vigil_location>:
	...

000000000010af80 <spi_table>:
	...

0000000000138f80 <input_adapter>:
	...

0000000000138f90 <output_adapter>:
	...

0000000000138fa0 <local_ip>:
	...

0000000000138fc0 <def_gw>:
	...

0000000000138fd2 <use_spi>:
	...

0000000000138fd4 <homenet>:
  138fd4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000138fd8 <homenetmask>:
  138fd8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000138fdc <in_test_mode>:
  138fdc:	00 00                	add    BYTE PTR [rax],al
	...

0000000000138fe0 <lua_scripts>:
	...

0000000000139800 <fn_mem_map>:
	...

000000000013c000 <fn_num>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.0+0x1>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754eb541>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer.0+0x10>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
