
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.0+0x30d>
 360:	78 38                	js     39a <buffer.0+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 df                	add    bh,bl
 3b1:	e0 f9                	loopne 3ac <buffer.0+0x32c>
 3b3:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 3b4:	53                   	push   rbx
 3b5:	00 c7                	add    bh,al
 3b7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 3b8:	82                   	(bad)  
 3b9:	29 9d 94 71 ae 05    	sub    DWORD PTR [rbp+0x5ae7194],ebx
 3bf:	6d                   	ins    DWORD PTR es:[rdi],dx
 3c0:	65 2b 28             	sub    ebp,DWORD PTR gs:[rax]
 3c3:	a2                   	.byte 0xa2

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 47 00             	add    BYTE PTR [rdi+0x0],al
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	32 b3 f0 a9 b3 a2    	xor    dh,BYTE PTR [rbx-0x5d4c5610]
 416:	f7 12                	not    DWORD PTR [rdx]

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	88 00                	mov    BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	12 00                	adc    al,BYTE PTR [rax]
	...
 446:	00 00                	add    BYTE PTR [rax],al
 448:	41 01 00             	add    DWORD PTR [r8],eax
 44b:	00 12                	add    BYTE PTR [rdx],dl
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 8a 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],cl
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 dd                	add    ch,bl
 479:	01 00                	add    DWORD PTR [rax],eax
 47b:	00 12                	add    BYTE PTR [rdx],dl
	...
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 48 02             	add    BYTE PTR [rax+0x2],cl
 492:	00 00                	add    BYTE PTR [rax],al
 494:	12 00                	adc    al,BYTE PTR [rax]
	...
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	c5 01 00             	(bad)
 4ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 01                	add    BYTE PTR [rcx],al
 4c1:	01 00                	add    DWORD PTR [rax],eax
 4c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 1d 00 00 00 20    	add    BYTE PTR [rip+0x20000000],bl        # 200004dd <_end+0x1fec54d5>
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 92 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],dl
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 42 02             	add    BYTE PTR [rdx+0x2],al
 50a:	00 00                	add    BYTE PTR [rax],al
 50c:	12 00                	adc    al,BYTE PTR [rax]
	...
 51e:	00 00                	add    BYTE PTR [rax],al
 520:	7d 02                	jge    524 <__abi_tag+0x160>
 522:	00 00                	add    BYTE PTR [rax],al
 524:	12 00                	adc    al,BYTE PTR [rax]
	...
 536:	00 00                	add    BYTE PTR [rax],al
 538:	75 02                	jne    53c <__abi_tag+0x178>
 53a:	00 00                	add    BYTE PTR [rax],al
 53c:	12 00                	adc    al,BYTE PTR [rax]
	...
 54e:	00 00                	add    BYTE PTR [rax],al
 550:	7b 00                	jnp    552 <__abi_tag+0x18e>
 552:	00 00                	add    BYTE PTR [rax],al
 554:	12 00                	adc    al,BYTE PTR [rax]
	...
 566:	00 00                	add    BYTE PTR [rax],al
 568:	b0 01                	mov    al,0x1
 56a:	00 00                	add    BYTE PTR [rax],al
 56c:	12 00                	adc    al,BYTE PTR [rax]
	...
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	24 01                	and    al,0x1
 582:	00 00                	add    BYTE PTR [rax],al
 584:	12 00                	adc    al,BYTE PTR [rax]
	...
 596:	00 00                	add    BYTE PTR [rax],al
 598:	eb 01                	jmp    59b <__abi_tag+0x1d7>
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	3a 01                	cmp    al,BYTE PTR [rcx]
 5b2:	00 00                	add    BYTE PTR [rax],al
 5b4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5c6:	00 00                	add    BYTE PTR [rax],al
 5c8:	aa                   	stos   BYTE PTR es:[rdi],al
 5c9:	01 00                	add    DWORD PTR [rax],eax
 5cb:	00 12                	add    BYTE PTR [rdx],dl
	...
 5dd:	00 00                	add    BYTE PTR [rax],al
 5df:	00 51 02             	add    BYTE PTR [rcx+0x2],dl
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	50                   	push   rax
 5f9:	00 00                	add    BYTE PTR [rax],al
 5fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	00 93 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],dl
	...
 625:	00 00                	add    BYTE PTR [rax],al
 627:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 62a:	00 00                	add    BYTE PTR [rax],al
 62c:	12 00                	adc    al,BYTE PTR [rax]
	...
 63e:	00 00                	add    BYTE PTR [rax],al
 640:	a3 00 00 00 12 00 00 	movabs ds:0x12000000,eax
 647:	00 00 
	...
 655:	00 00                	add    BYTE PTR [rax],al
 657:	00 01                	add    BYTE PTR [rcx],al
 659:	00 00                	add    BYTE PTR [rax],al
 65b:	00 20                	add    BYTE PTR [rax],ah
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 02                	add    BYTE PTR [rdx],al
 671:	02 00                	add    al,BYTE PTR [rax]
 673:	00 12                	add    BYTE PTR [rdx],dl
	...
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
 68a:	00 00                	add    BYTE PTR [rax],al
 68c:	12 00                	adc    al,BYTE PTR [rax]
	...
 69e:	00 00                	add    BYTE PTR [rax],al
 6a0:	76 00                	jbe    6a2 <__abi_tag+0x2de>
 6a2:	00 00                	add    BYTE PTR [rax],al
 6a4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6b6:	00 00                	add    BYTE PTR [rax],al
 6b8:	19 02                	sbb    DWORD PTR [rdx],eax
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	2c 00                	sub    al,0x0
 6d2:	00 00                	add    BYTE PTR [rax],al
 6d4:	20 00                	and    BYTE PTR [rax],al
	...
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	59                   	pop    rcx
 6e9:	02 00                	add    al,BYTE PTR [rax]
 6eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 6fd:	00 00                	add    BYTE PTR [rax],al
 6ff:	00 2f                	add    BYTE PTR [rdi],ch
 701:	02 00                	add    al,BYTE PTR [rax]
 703:	00 12                	add    BYTE PTR [rdx],dl
	...
 715:	00 00                	add    BYTE PTR [rax],al
 717:	00 1e                	add    BYTE PTR [rsi],bl
 719:	01 00                	add    DWORD PTR [rax],eax
 71b:	00 12                	add    BYTE PTR [rdx],dl
	...
 72d:	00 00                	add    BYTE PTR [rax],al
 72f:	00 18                	add    BYTE PTR [rax],bl
 731:	01 00                	add    DWORD PTR [rax],eax
 733:	00 12                	add    BYTE PTR [rdx],dl
	...
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 20                	add    BYTE PTR [rax],ah
 749:	02 00                	add    al,BYTE PTR [rax]
 74b:	00 12                	add    BYTE PTR [rdx],dl
	...
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	00 d5                	add    ch,dl
 761:	00 00                	add    BYTE PTR [rax],al
 763:	00 12                	add    BYTE PTR [rdx],dl
	...
 775:	00 00                	add    BYTE PTR [rax],al
 777:	00 fb                	add    bl,bh
 779:	01 00                	add    DWORD PTR [rax],eax
 77b:	00 12                	add    BYTE PTR [rdx],dl
	...
 78d:	00 00                	add    BYTE PTR [rax],al
 78f:	00 67 02             	add    BYTE PTR [rdi+0x2],ah
 792:	00 00                	add    BYTE PTR [rax],al
 794:	12 00                	adc    al,BYTE PTR [rax]
	...
 7a6:	00 00                	add    BYTE PTR [rax],al
 7a8:	91                   	xchg   ecx,eax
 7a9:	01 00                	add    DWORD PTR [rax],eax
 7ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 7bd:	00 00                	add    BYTE PTR [rax],al
 7bf:	00 d6                	add    dh,dl
 7c1:	01 00                	add    DWORD PTR [rax],eax
 7c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 ae 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],ch
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 a5 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],ah
	...
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 68 01             	add    BYTE PTR [rax+0x1],ch
 80a:	00 00                	add    BYTE PTR [rax],al
 80c:	12 00                	adc    al,BYTE PTR [rax]
	...
 81e:	00 00                	add    BYTE PTR [rax],al
 820:	9e                   	sahf   
 821:	01 00                	add    DWORD PTR [rax],eax
 823:	00 12                	add    BYTE PTR [rdx],dl
	...
 835:	00 00                	add    BYTE PTR [rax],al
 837:	00 29                	add    BYTE PTR [rcx],ch
 839:	01 00                	add    DWORD PTR [rax],eax
 83b:	00 12                	add    BYTE PTR [rdx],dl
	...
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 e0                	add    al,ah
 851:	00 00                	add    BYTE PTR [rax],al
 853:	00 12                	add    BYTE PTR [rdx],dl
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 bd 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bh
	...
 87d:	00 00                	add    BYTE PTR [rax],al
 87f:	00 97 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],dl
	...
 895:	00 00                	add    BYTE PTR [rax],al
 897:	00 eb                	add    bl,ch
 899:	00 00                	add    BYTE PTR [rax],al
 89b:	00 12                	add    BYTE PTR [rdx],dl
	...
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 82 02 00 00 12    	add    BYTE PTR [rdx+0x12000002],al
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 82 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],al
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 f9                	add    cl,bh
 8e1:	00 00                	add    BYTE PTR [rax],al
 8e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 be 01 00 00 12    	add    BYTE PTR [rsi+0x12000001],bh
	...
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 cf                	add    bh,cl
 911:	01 00                	add    DWORD PTR [rax],eax
 913:	00 12                	add    BYTE PTR [rdx],dl
	...
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 cb                	add    bl,cl
 929:	00 00                	add    BYTE PTR [rax],al
 92b:	00 12                	add    BYTE PTR [rdx],dl
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 942:	00 00                	add    BYTE PTR [rax],al
 944:	12 00                	adc    al,BYTE PTR [rax]
	...
 956:	00 00                	add    BYTE PTR [rax],al
 958:	b7 01                	mov    bh,0x1
 95a:	00 00                	add    BYTE PTR [rax],al
 95c:	12 00                	adc    al,BYTE PTR [rax]
	...
 96e:	00 00                	add    BYTE PTR [rax],al
 970:	11 02                	adc    DWORD PTR [rdx],eax
 972:	00 00                	add    BYTE PTR [rax],al
 974:	12 00                	adc    al,BYTE PTR [rax]
	...
 986:	00 00                	add    BYTE PTR [rax],al
 988:	4e 01 00             	rex.WRX add QWORD PTR [rax],r8
 98b:	00 12                	add    BYTE PTR [rdx],dl
	...
 99d:	00 00                	add    BYTE PTR [rax],al
 99f:	00 37                	add    BYTE PTR [rdi],dh
 9a1:	02 00                	add    al,BYTE PTR [rax]
 9a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 9ba:	00 00                	add    BYTE PTR [rax],al
 9bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 9ce:	00 00                	add    BYTE PTR [rax],al
 9d0:	3c 02                	cmp    al,0x2
 9d2:	00 00                	add    BYTE PTR [rax],al
 9d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	60                   	(bad)  
 9e9:	02 00                	add    al,BYTE PTR [rax]
 9eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 9fd:	00 00                	add    BYTE PTR [rax],al
 9ff:	00 89 01 00 00 12    	add    BYTE PTR [rcx+0x12000001],cl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 30                	add    BYTE PTR [rax],dh
 a19:	01 00                	add    DWORD PTR [rax],eax
 a1b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 26                	add    BYTE PTR [rsi],ah
 a31:	02 00                	add    al,BYTE PTR [rax]
 a33:	00 12                	add    BYTE PTR [rdx],dl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 70 01             	add    BYTE PTR [rax+0x1],dh
 a4a:	00 00                	add    BYTE PTR [rax],al
 a4c:	12 00                	adc    al,BYTE PTR [rax]
	...
 a5e:	00 00                	add    BYTE PTR [rax],al
 a60:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 a61:	02 00                	add    al,BYTE PTR [rax]
 a63:	00 12                	add    BYTE PTR [rdx],dl
	...
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 96 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],dl
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 35 01 00 00 12    	add    BYTE PTR [rip+0x12000001],dh        # 12000a96 <_end+0x11ec5a8e>
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 09                	add    BYTE PTR [rcx],cl
 aa9:	01 00                	add    DWORD PTR [rax],eax
 aab:	00 22                	add    BYTE PTR [rdx],ah
	...
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 f3                	add    bl,dh
 ac1:	01 00                	add    DWORD PTR [rax],eax
 ac3:	00 12                	add    BYTE PTR [rdx],dl
 ac5:	00 10                	add    BYTE PTR [rax],dl
 ac7:	00 78 91             	add    BYTE PTR [rax-0x6f],bh
 aca:	00 00                	add    BYTE PTR [rax],al
 acc:	00 00                	add    BYTE PTR [rax],al
 ace:	00 00                	add    BYTE PTR [rax],al
 ad0:	3a 01                	cmp    al,BYTE PTR [rcx]
 ad2:	00 00                	add    BYTE PTR [rax],al
 ad4:	00 00                	add    BYTE PTR [rax],al
 ad6:	00 00                	add    BYTE PTR [rax],al
 ad8:	e4 01                	in     al,0x1
 ada:	00 00                	add    BYTE PTR [rax],al
 adc:	11 00                	adc    DWORD PTR [rax],eax
 ade:	1b 00                	sbb    eax,DWORD PTR [rax]
 ae0:	60                   	(bad)  
 ae1:	10 01                	adc    BYTE PTR [rcx],al
 ae3:	00 00                	add    BYTE PTR [rax],al
 ae5:	00 00                	add    BYTE PTR [rax],al
 ae7:	00 08                	add    BYTE PTR [rax],cl
 ae9:	00 00                	add    BYTE PTR [rax],al
 aeb:	00 00                	add    BYTE PTR [rax],al
 aed:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000af0 <.dynstr>:
 af0:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 af3:	54                   	push   rsp
 af4:	4d 5f                	rex.WRB pop r15
 af6:	64 65 72 65          	fs gs jb b5f <__abi_tag+0x79b>
 afa:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b01:	4d 
 b02:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b04:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b05:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b06:	65 54                	gs push rsp
 b08:	61                   	(bad)  
 b09:	62                   	(bad)  
 b0a:	6c                   	ins    BYTE PTR es:[rdi],dx
 b0b:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b0f:	67 6d                	ins    DWORD PTR es:[edi],dx
 b11:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b12:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b13:	5f                   	pop    rdi
 b14:	73 74                	jae    b8a <__abi_tag+0x7c6>
 b16:	61                   	(bad)  
 b17:	72 74                	jb     b8d <__abi_tag+0x7c9>
 b19:	5f                   	pop    rdi
 b1a:	5f                   	pop    rdi
 b1b:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b1e:	54                   	push   rsp
 b1f:	4d 5f                	rex.WRB pop r15
 b21:	72 65                	jb     b88 <__abi_tag+0x7c4>
 b23:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b2a:	4d 
 b2b:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b2e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b2f:	65 54                	gs push rsp
 b31:	61                   	(bad)  
 b32:	62                   	(bad)  
 b33:	6c                   	ins    BYTE PTR es:[rdi],dx
 b34:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 b38:	61                   	(bad)  
 b39:	70 5f                	jo     b9a <__abi_tag+0x7d6>
 b3b:	6c                   	ins    BYTE PTR es:[rdi],dx
 b3c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b3d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b3e:	70 00                	jo     b40 <__abi_tag+0x77c>
 b40:	70 63                	jo     ba5 <__abi_tag+0x7e1>
 b42:	61                   	(bad)  
 b43:	70 5f                	jo     ba4 <__abi_tag+0x7e0>
 b45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b46:	70 65                	jo     bad <__abi_tag+0x7e9>
 b48:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b49:	5f                   	pop    rdi
 b4a:	6c                   	ins    BYTE PTR es:[rdi],dx
 b4b:	69 76 65 00 73 71 6c 	imul   esi,DWORD PTR [rsi+0x65],0x6c717300
 b52:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 b59:	72 
 b5a:	6d                   	ins    DWORD PTR es:[rdi],dx
 b5b:	73 67                	jae    bc4 <__abi_tag+0x800>
 b5d:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 b60:	6c                   	ins    BYTE PTR es:[rdi],dx
 b61:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 b68:	65 
 b69:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 b6d:	6c                   	ins    BYTE PTR es:[rdi],dx
 b6e:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 b75:	65 
 b76:	63 00                	movsxd eax,DWORD PTR [rax]
 b78:	73 71                	jae    beb <__abi_tag+0x827>
 b7a:	6c                   	ins    BYTE PTR es:[rdi],dx
 b7b:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 b82:	6f 
 b83:	73 65                	jae    bea <__abi_tag+0x826>
 b85:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 b88:	6c                   	ins    BYTE PTR es:[rdi],dx
 b89:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 b90:	65 
 b91:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b92:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 b96:	5f                   	pop    rdi
 b97:	73 65                	jae    bfe <__abi_tag+0x83a>
 b99:	74 74                	je     c0f <__abi_tag+0x84b>
 b9b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b9c:	70 00                	jo     b9e <__abi_tag+0x7da>
 b9e:	6c                   	ins    BYTE PTR es:[rdi],dx
 b9f:	75 61                	jne    c02 <__abi_tag+0x83e>
 ba1:	4c 5f                	rex.WR pop rdi
 ba3:	6c                   	ins    BYTE PTR es:[rdi],dx
 ba4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ba5:	61                   	(bad)  
 ba6:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 bad:	6c 
 bae:	75 61                	jne    c11 <__abi_tag+0x84d>
 bb0:	4c 5f                	rex.WR pop rdi
 bb2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bb3:	65 77 73             	gs ja  c29 <__abi_tag+0x865>
 bb6:	74 61                	je     c19 <__abi_tag+0x855>
 bb8:	74 65                	je     c1f <__abi_tag+0x85b>
 bba:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 bbe:	5f                   	pop    rdi
 bbf:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 bc3:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 bc8:	5f                   	pop    rdi
 bc9:	70 63                	jo     c2e <__abi_tag+0x86a>
 bcb:	61                   	(bad)  
 bcc:	6c                   	ins    BYTE PTR es:[rdi],dx
 bcd:	6c                   	ins    BYTE PTR es:[rdi],dx
 bce:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 bd1:	75 61                	jne    c34 <__abi_tag+0x870>
 bd3:	5f                   	pop    rdi
 bd4:	67 65 74 74          	addr32 gs je c4c <__abi_tag+0x888>
 bd8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bd9:	70 00                	jo     bdb <__abi_tag+0x817>
 bdb:	6c                   	ins    BYTE PTR es:[rdi],dx
 bdc:	75 61                	jne    c3f <__abi_tag+0x87b>
 bde:	4c 5f                	rex.WR pop rdi
 be0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 be1:	70 65                	jo     c48 <__abi_tag+0x884>
 be3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 be4:	6c                   	ins    BYTE PTR es:[rdi],dx
 be5:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 bec:	6c                   	ins    BYTE PTR es:[rdi],dx
 bed:	69 6e 65 00 73 74 72 	imul   ebp,DWORD PTR [rsi+0x65],0x72747300
 bf4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bf5:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 bf8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 bfb:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 bfe:	5f                   	pop    rdi
 bff:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 c05:	7a 65                	jp     c6c <__abi_tag+0x8a8>
 c07:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 c0a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c0b:	68 6c 00 6e 74       	push   0x746e006c
 c10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c11:	68 73 00 72 65       	push   0x65720073
 c16:	61                   	(bad)  
 c17:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 c1b:	72 63                	jb     c80 <__abi_tag+0x8bc>
 c1d:	68 72 00 6c 6f       	push   0x6f6c0072
 c22:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 c25:	74 69                	je     c90 <__abi_tag+0x8cc>
 c27:	6d                   	ins    DWORD PTR es:[rdi],dx
 c28:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 c2c:	6c                   	ins    BYTE PTR es:[rdi],dx
 c2d:	6c                   	ins    BYTE PTR es:[rdi],dx
 c2e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c2f:	63 00                	movsxd eax,DWORD PTR [rax]
 c31:	70 74                	jo     ca7 <__abi_tag+0x8e3>
 c33:	68 72 65 61 64       	push   0x64616572
 c38:	5f                   	pop    rdi
 c39:	6a 6f                	push   0x6f
 c3b:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 c42:	73 70                	jae    cb4 <__abi_tag+0x8f0>
 c44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c45:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 c48:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 c4b:	72 61                	jb     cae <__abi_tag+0x8ea>
 c4d:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 c50:	73 79                	jae    ccb <__abi_tag+0x907>
 c52:	6d                   	ins    DWORD PTR es:[rdi],dx
 c53:	62                   	(bad)  
 c54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c55:	6c                   	ins    BYTE PTR es:[rdi],dx
 c56:	73 00                	jae    c58 <__abi_tag+0x894>
 c58:	72 65                	jb     cbf <__abi_tag+0x8fb>
 c5a:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 c5e:	70 00                	jo     c60 <__abi_tag+0x89c>
 c60:	5f                   	pop    rdi
 c61:	5f                   	pop    rdi
 c62:	6c                   	ins    BYTE PTR es:[rdi],dx
 c63:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 c6a:	72 74                	jb     ce0 <__abi_tag+0x91c>
 c6c:	5f                   	pop    rdi
 c6d:	6d                   	ins    DWORD PTR es:[rdi],dx
 c6e:	61                   	(bad)  
 c6f:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 c76:	6d                   	ins    DWORD PTR es:[rdi],dx
 c77:	70 00                	jo     c79 <__abi_tag+0x8b5>
 c79:	66 70 72             	data16 jo cee <__abi_tag+0x92a>
 c7c:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 c83:	75 74                	jne    cf9 <__abi_tag+0x935>
 c85:	73 00                	jae    c87 <__abi_tag+0x8c3>
 c87:	73 6f                	jae    cf8 <__abi_tag+0x934>
 c89:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 c8c:	74 00                	je     c8e <__abi_tag+0x8ca>
 c8e:	73 69                	jae    cf9 <__abi_tag+0x935>
 c90:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 c92:	61                   	(bad)  
 c93:	6c                   	ins    BYTE PTR es:[rdi],dx
 c94:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 c97:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c98:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 c9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c9f:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 ca2:	74 6f                	je     d13 <__abi_tag+0x94f>
 ca4:	70 74                	jo     d1a <__abi_tag+0x956>
 ca6:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 ca9:	6c                   	ins    BYTE PTR es:[rdi],dx
 caa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cab:	73 65                	jae    d12 <__abi_tag+0x94e>
 cad:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cb0:	72 63                	jb     d15 <__abi_tag+0x951>
 cb2:	70 79                	jo     d2d <__abi_tag+0x969>
 cb4:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 cb7:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 cba:	72 61                	jb     d1d <__abi_tag+0x959>
 cbc:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 cbf:	73 74                	jae    d35 <__abi_tag+0x971>
 cc1:	72 74                	jb     d37 <__abi_tag+0x973>
 cc3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cc4:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 cc7:	74 72                	je     d3b <__abi_tag+0x977>
 cc9:	74 6f                	je     d3a <__abi_tag+0x976>
 ccb:	6c                   	ins    BYTE PTR es:[rdi],dx
 ccc:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 ccf:	6d                   	ins    DWORD PTR es:[rdi],dx
 cd0:	73 65                	jae    d37 <__abi_tag+0x973>
 cd2:	74 00                	je     cd4 <__abi_tag+0x910>
 cd4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cd5:	70 74                	jo     d4b <__abi_tag+0x987>
 cd7:	61                   	(bad)  
 cd8:	72 67                	jb     d41 <__abi_tag+0x97d>
 cda:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cdd:	72 6e                	jb     d4d <__abi_tag+0x989>
 cdf:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 ce2:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 ce5:	64 69 67 69 74 00 73 	imul   esp,DWORD PTR fs:[rdi+0x69],0x74730074
 cec:	74 
 ced:	72 73                	jb     d62 <__abi_tag+0x99e>
 cef:	74 72                	je     d63 <__abi_tag+0x99f>
 cf1:	00 70 74             	add    BYTE PTR [rax+0x74],dh
 cf4:	68 72 65 61 64       	push   0x64616572
 cf9:	5f                   	pop    rdi
 cfa:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 cfd:	61                   	(bad)  
 cfe:	74 65                	je     d65 <__abi_tag+0x9a1>
 d00:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d03:	72 6e                	jb     d73 <__abi_tag+0x9af>
 d05:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 d08:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d0b:	72 6c                	jb     d79 <__abi_tag+0x9b5>
 d0d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 d0f:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 d12:	65 65 70 00          	gs gs jo d16 <__abi_tag+0x952>
 d16:	67 65 74 64          	addr32 gs je d7e <__abi_tag+0x9ba>
 d1a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 d1c:	69 6d 00 73 70 72 69 	imul   ebp,DWORD PTR [rbp+0x0],0x69727073
 d23:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d24:	74 66                	je     d8c <__abi_tag+0x9c8>
 d26:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 d29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d2a:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 d2e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d2f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d30:	6c                   	ins    BYTE PTR es:[rdi],dx
 d31:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 d34:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d35:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d36:	73 00                	jae    d38 <__abi_tag+0x974>
 d38:	73 6e                	jae    da8 <__abi_tag+0x9e4>
 d3a:	70 72                	jo     dae <__abi_tag+0x9ea>
 d3c:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 d43:	67 65 78 65          	addr32 gs js dac <__abi_tag+0x9e8>
 d47:	63 00                	movsxd eax,DWORD PTR [rax]
 d49:	6c                   	ins    BYTE PTR es:[rdi],dx
 d4a:	69 73 74 65 6e 00 70 	imul   esi,DWORD PTR [rbx+0x74],0x70006e65
 d51:	65 72 72             	gs jb  dc6 <__abi_tag+0xa02>
 d54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d55:	72 00                	jb     d57 <__abi_tag+0x993>
 d57:	73 74                	jae    dcd <__abi_tag+0xa09>
 d59:	72 63                	jb     dbe <__abi_tag+0x9fa>
 d5b:	61                   	(bad)  
 d5c:	74 00                	je     d5e <__abi_tag+0x99a>
 d5e:	61                   	(bad)  
 d5f:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 d62:	70 74                	jo     dd8 <__abi_tag+0xa14>
 d64:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 d67:	74 63                	je     dcc <__abi_tag+0xa08>
 d69:	68 61 72 00 65       	push   0x65007261
 d6e:	78 69                	js     dd9 <__abi_tag+0xa15>
 d70:	74 00                	je     d72 <__abi_tag+0x9ae>
 d72:	5f                   	pop    rdi
 d73:	5f                   	pop    rdi
 d74:	73 74                	jae    dea <__abi_tag+0xa26>
 d76:	61                   	(bad)  
 d77:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 d7a:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 d7d:	5f                   	pop    rdi
 d7e:	66 61                	data16 (bad) 
 d80:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 d87:	6f 
 d88:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 d8b:	70 74                	jo     e01 <__abi_tag+0xa3d>
 d8d:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 d91:	70 63                	jo     df6 <__abi_tag+0xa32>
 d93:	61                   	(bad)  
 d94:	70 2e                	jo     dc4 <__abi_tag+0xa00>
 d96:	73 6f                	jae    e07 <__abi_tag+0xa43>
 d98:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 d9b:	38 00                	cmp    BYTE PTR [rax],al
 d9d:	6c                   	ins    BYTE PTR es:[rdi],dx
 d9e:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 da5:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 da8:	73 6f                	jae    e19 <__abi_tag+0xa55>
 daa:	2e 30 00             	cs xor BYTE PTR [rax],al
 dad:	6c                   	ins    BYTE PTR es:[rdi],dx
 dae:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 db5:	33 2e                	xor    ebp,DWORD PTR [rsi]
 db7:	73 6f                	jae    e28 <__abi_tag+0xa64>
 db9:	2e 30 00             	cs xor BYTE PTR [rax],al
 dbc:	6c                   	ins    BYTE PTR es:[rdi],dx
 dbd:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 dc4:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 dc9:	5f                   	pop    rdi
 dca:	35 2e 33 00 47       	xor    eax,0x4700332e
 dcf:	4c                   	rex.WR
 dd0:	49                   	rex.WB
 dd1:	42                   	rex.X
 dd2:	43 5f                	rex.XB pop r15
 dd4:	32 2e                	xor    ch,BYTE PTR [rsi]
 dd6:	34 00                	xor    al,0x0
 dd8:	47                   	rex.RXB
 dd9:	4c                   	rex.WR
 dda:	49                   	rex.WB
 ddb:	42                   	rex.X
 ddc:	43 5f                	rex.XB pop r15
 dde:	32 2e                	xor    ch,BYTE PTR [rsi]
 de0:	33 2e                	xor    ebp,DWORD PTR [rsi]
 de2:	34 00                	xor    al,0x0
 de4:	47                   	rex.RXB
 de5:	4c                   	rex.WR
 de6:	49                   	rex.WB
 de7:	42                   	rex.X
 de8:	43 5f                	rex.XB pop r15
 dea:	32 2e                	xor    ch,BYTE PTR [rsi]
 dec:	32 2e                	xor    ch,BYTE PTR [rsi]
 dee:	35 00 47 4c 49       	xor    eax,0x494c4700
 df3:	42                   	rex.X
 df4:	43 5f                	rex.XB pop r15
 df6:	32 2e                	xor    ch,BYTE PTR [rsi]
 df8:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]

Disassembly of section .gnu.version:

0000000000000dfc <.gnu.version>:
 dfc:	00 00                	add    BYTE PTR [rax],al
 dfe:	00 00                	add    BYTE PTR [rax],al
 e00:	02 00                	add    al,BYTE PTR [rax]
 e02:	03 00                	add    eax,DWORD PTR [rax]
 e04:	03 00                	add    eax,DWORD PTR [rax]
 e06:	03 00                	add    eax,DWORD PTR [rax]
 e08:	03 00                	add    eax,DWORD PTR [rax]
 e0a:	03 00                	add    eax,DWORD PTR [rax]
 e0c:	00 00                	add    BYTE PTR [rax],al
 e0e:	03 00                	add    eax,DWORD PTR [rax]
 e10:	03 00                	add    eax,DWORD PTR [rax]
 e12:	03 00                	add    eax,DWORD PTR [rax]
 e14:	03 00                	add    eax,DWORD PTR [rax]
 e16:	00 00                	add    BYTE PTR [rax],al
 e18:	03 00                	add    eax,DWORD PTR [rax]
 e1a:	03 00                	add    eax,DWORD PTR [rax]
 e1c:	03 00                	add    eax,DWORD PTR [rax]
 e1e:	03 00                	add    eax,DWORD PTR [rax]
 e20:	03 00                	add    eax,DWORD PTR [rax]
 e22:	04 00                	add    al,0x0
 e24:	00 00                	add    BYTE PTR [rax],al
 e26:	03 00                	add    eax,DWORD PTR [rax]
 e28:	00 00                	add    BYTE PTR [rax],al
 e2a:	05 00 00 00 02       	add    eax,0x2000000
 e2f:	00 03                	add    BYTE PTR [rbx],al
 e31:	00 03                	add    BYTE PTR [rbx],al
 e33:	00 03                	add    BYTE PTR [rbx],al
 e35:	00 00                	add    BYTE PTR [rax],al
 e37:	00 03                	add    BYTE PTR [rbx],al
 e39:	00 03                	add    BYTE PTR [rbx],al
 e3b:	00 03                	add    BYTE PTR [rbx],al
 e3d:	00 03                	add    BYTE PTR [rbx],al
 e3f:	00 03                	add    BYTE PTR [rbx],al
 e41:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 3001147 <_end+0x2ec613f>
 e47:	00 03                	add    BYTE PTR [rbx],al
 e49:	00 03                	add    BYTE PTR [rbx],al
 e4b:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 3001151 <_end+0x2ec6149>
 e51:	00 03                	add    BYTE PTR [rbx],al
 e53:	00 03                	add    BYTE PTR [rbx],al
 e55:	00 05 00 05 00 03    	add    BYTE PTR [rip+0x3000500],al        # 300135b <_end+0x2ec6353>
 e5b:	00 05 00 06 00 03    	add    BYTE PTR [rip+0x3000600],al        # 3001461 <_end+0x2ec6459>
 e61:	00 03                	add    BYTE PTR [rbx],al
 e63:	00 03                	add    BYTE PTR [rbx],al
 e65:	00 03                	add    BYTE PTR [rbx],al
 e67:	00 05 00 00 00 03    	add    BYTE PTR [rip+0x3000000],al        # 3000e6d <_end+0x2ec5e65>
 e6d:	00 03                	add    BYTE PTR [rbx],al
 e6f:	00 03                	add    BYTE PTR [rbx],al
 e71:	00 03                	add    BYTE PTR [rbx],al
 e73:	00 00                	add    BYTE PTR [rax],al
 e75:	00 03                	add    BYTE PTR [rbx],al
 e77:	00 03                	add    BYTE PTR [rbx],al
 e79:	00 03                	add    BYTE PTR [rbx],al
 e7b:	00 03                	add    BYTE PTR [rbx],al
 e7d:	00 03                	add    BYTE PTR [rbx],al
 e7f:	00 02                	add    BYTE PTR [rdx],al
 e81:	00 03                	add    BYTE PTR [rbx],al
 e83:	00 00                	add    BYTE PTR [rax],al
 e85:	00 03                	add    BYTE PTR [rbx],al
 e87:	00 03                	add    BYTE PTR [rbx],al
 e89:	00 01                	add    BYTE PTR [rcx],al
 e8b:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

0000000000000e90 <.gnu.version_r>:
 e90:	01 00                	add    DWORD PTR [rax],eax
 e92:	01 00                	add    DWORD PTR [rax],eax
 e94:	bd 02 00 00 10       	mov    ebp,0x10000002
 e99:	00 00                	add    BYTE PTR [rax],al
 e9b:	00 20                	add    BYTE PTR [rax],ah
 e9d:	00 00                	add    BYTE PTR [rax],al
 e9f:	00 43 28             	add    BYTE PTR [rbx+0x28],al
 ea2:	97                   	xchg   edi,eax
 ea3:	01 00                	add    DWORD PTR [rax],eax
 ea5:	00 05 00 d6 02 00    	add    BYTE PTR [rip+0x2d600],al        # 2e4ab <rules+0x1d1cb>
 eab:	00 00                	add    BYTE PTR [rax],al
 ead:	00 00                	add    BYTE PTR [rax],al
 eaf:	00 01                	add    BYTE PTR [rcx],al
 eb1:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 eb4:	cc                   	int3   
 eb5:	02 00                	add    al,BYTE PTR [rax]
 eb7:	00 10                	add    BYTE PTR [rax],dl
 eb9:	00 00                	add    BYTE PTR [rax],al
 ebb:	00 00                	add    BYTE PTR [rax],al
 ebd:	00 00                	add    BYTE PTR [rax],al
 ebf:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 ec2:	69 0d 00 00 06 00 de 	imul   ecx,DWORD PTR [rip+0x60000],0x2de        # 60ecc <rules+0x4fbec>
 ec9:	02 00 00 
 ecc:	10 00                	adc    BYTE PTR [rax],al
 ece:	00 00                	add    BYTE PTR [rax],al
 ed0:	74 19                	je     eeb <__abi_tag+0xb27>
 ed2:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [rcx],0x40000
 ed8:	e8 02 00 00 10       	call   10000edf <_end+0xfec5ed7>
 edd:	00 00                	add    BYTE PTR [rax],al
 edf:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 ee2:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 ee8:	f4                   	hlt    
 ee9:	02 00                	add    al,BYTE PTR [rax]
 eeb:	00 10                	add    BYTE PTR [rax],dl
 eed:	00 00                	add    BYTE PTR [rax],al
 eef:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 ef6:	02 00                	add    al,BYTE PTR [rax]
 ef8:	00 03                	add    BYTE PTR [rbx],al
 efa:	00 00                	add    BYTE PTR [rax],al
 efc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000f00 <.rela.dyn>:
     f00:	88 0b                	mov    BYTE PTR [rbx],cl
     f02:	01 00                	add    DWORD PTR [rax],eax
     f04:	00 00                	add    BYTE PTR [rax],al
     f06:	00 00                	add    BYTE PTR [rax],al
     f08:	08 00                	or     BYTE PTR [rax],al
     f0a:	00 00                	add    BYTE PTR [rax],al
     f0c:	00 00                	add    BYTE PTR [rax],al
     f0e:	00 00                	add    BYTE PTR [rax],al
     f10:	40 29 00             	rex sub DWORD PTR [rax],eax
     f13:	00 00                	add    BYTE PTR [rax],al
     f15:	00 00                	add    BYTE PTR [rax],al
     f17:	00 90 0b 01 00 00    	add    BYTE PTR [rax+0x10b],dl
     f1d:	00 00                	add    BYTE PTR [rax],al
     f1f:	00 08                	add    BYTE PTR [rax],cl
	...
     f29:	29 00                	sub    DWORD PTR [rax],eax
     f2b:	00 00                	add    BYTE PTR [rax],al
     f2d:	00 00                	add    BYTE PTR [rax],al
     f2f:	00 08                	add    BYTE PTR [rax],cl
     f31:	10 01                	adc    BYTE PTR [rcx],al
     f33:	00 00                	add    BYTE PTR [rax],al
     f35:	00 00                	add    BYTE PTR [rax],al
     f37:	00 08                	add    BYTE PTR [rax],cl
     f39:	00 00                	add    BYTE PTR [rax],al
     f3b:	00 00                	add    BYTE PTR [rax],al
     f3d:	00 00                	add    BYTE PTR [rax],al
     f3f:	00 08                	add    BYTE PTR [rax],cl
     f41:	10 01                	adc    BYTE PTR [rcx],al
     f43:	00 00                	add    BYTE PTR [rax],al
     f45:	00 00                	add    BYTE PTR [rax],al
     f47:	00 28                	add    BYTE PTR [rax],ch
     f49:	10 01                	adc    BYTE PTR [rcx],al
     f4b:	00 00                	add    BYTE PTR [rax],al
     f4d:	00 00                	add    BYTE PTR [rax],al
     f4f:	00 08                	add    BYTE PTR [rax],cl
     f51:	00 00                	add    BYTE PTR [rax],al
     f53:	00 00                	add    BYTE PTR [rax],al
     f55:	00 00                	add    BYTE PTR [rax],al
     f57:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
     f5a:	00 00                	add    BYTE PTR [rax],al
     f5c:	00 00                	add    BYTE PTR [rax],al
     f5e:	00 00                	add    BYTE PTR [rax],al
     f60:	30 10                	xor    BYTE PTR [rax],dl
     f62:	01 00                	add    DWORD PTR [rax],eax
     f64:	00 00                	add    BYTE PTR [rax],al
     f66:	00 00                	add    BYTE PTR [rax],al
     f68:	08 00                	or     BYTE PTR [rax],al
     f6a:	00 00                	add    BYTE PTR [rax],al
     f6c:	00 00                	add    BYTE PTR [rax],al
     f6e:	00 00                	add    BYTE PTR [rax],al
     f70:	1a c0                	sbb    al,al
     f72:	00 00                	add    BYTE PTR [rax],al
     f74:	00 00                	add    BYTE PTR [rax],al
     f76:	00 00                	add    BYTE PTR [rax],al
     f78:	38 10                	cmp    BYTE PTR [rax],dl
     f7a:	01 00                	add    DWORD PTR [rax],eax
     f7c:	00 00                	add    BYTE PTR [rax],al
     f7e:	00 00                	add    BYTE PTR [rax],al
     f80:	08 00                	or     BYTE PTR [rax],al
     f82:	00 00                	add    BYTE PTR [rax],al
     f84:	00 00                	add    BYTE PTR [rax],al
     f86:	00 00                	add    BYTE PTR [rax],al
     f88:	34 c0                	xor    al,0xc0
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	00 00                	add    BYTE PTR [rax],al
     f8e:	00 00                	add    BYTE PTR [rax],al
     f90:	d8 0f                	fmul   DWORD PTR [rdi]
     f92:	01 00                	add    DWORD PTR [rax],eax
     f94:	00 00                	add    BYTE PTR [rax],al
     f96:	00 00                	add    BYTE PTR [rax],al
     f98:	06                   	(bad)  
     f99:	00 00                	add    BYTE PTR [rax],al
     f9b:	00 08                	add    BYTE PTR [rax],cl
	...
     fa5:	00 00                	add    BYTE PTR [rax],al
     fa7:	00 e0                	add    al,ah
     fa9:	0f 01 00             	sgdt   [rax]
     fac:	00 00                	add    BYTE PTR [rax],al
     fae:	00 00                	add    BYTE PTR [rax],al
     fb0:	06                   	(bad)  
     fb1:	00 00                	add    BYTE PTR [rax],al
     fb3:	00 18                	add    BYTE PTR [rax],bl
	...
     fbd:	00 00                	add    BYTE PTR [rax],al
     fbf:	00 e8                	add    al,ch
     fc1:	0f 01 00             	sgdt   [rax]
     fc4:	00 00                	add    BYTE PTR [rax],al
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	06                   	(bad)  
     fc9:	00 00                	add    BYTE PTR [rax],al
     fcb:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # fd1 <__abi_tag+0xc0d>
     fd1:	00 00                	add    BYTE PTR [rax],al
     fd3:	00 00                	add    BYTE PTR [rax],al
     fd5:	00 00                	add    BYTE PTR [rax],al
     fd7:	00 f0                	add    al,dh
     fd9:	0f 01 00             	sgdt   [rax]
     fdc:	00 00                	add    BYTE PTR [rax],al
     fde:	00 00                	add    BYTE PTR [rax],al
     fe0:	06                   	(bad)  
     fe1:	00 00                	add    BYTE PTR [rax],al
     fe3:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
     fee:	00 00                	add    BYTE PTR [rax],al
     ff0:	f8                   	clc    
     ff1:	0f 01 00             	sgdt   [rax]
     ff4:	00 00                	add    BYTE PTR [rax],al
     ff6:	00 00                	add    BYTE PTR [rax],al
     ff8:	06                   	(bad)  
     ff9:	00 00                	add    BYTE PTR [rax],al
     ffb:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	60                   	(bad)  
    1009:	10 01                	adc    BYTE PTR [rcx],al
    100b:	00 00                	add    BYTE PTR [rax],al
    100d:	00 00                	add    BYTE PTR [rax],al
    100f:	00 05 00 00 00 48    	add    BYTE PTR [rip+0x48000000],al        # 48001015 <_end+0x47ec600d>
	...

Disassembly of section .rela.plt:

0000000000001020 <.rela.plt>:
    1020:	d0 0d 01 00 00 00    	ror    BYTE PTR [rip+0x1],1        # 1027 <__abi_tag+0xc63>
    1026:	00 00                	add    BYTE PTR [rax],al
    1028:	07                   	(bad)  
    1029:	00 00                	add    BYTE PTR [rax],al
    102b:	00 01                	add    BYTE PTR [rcx],al
	...
    1035:	00 00                	add    BYTE PTR [rax],al
    1037:	00 d8                	add    al,bl
    1039:	0d 01 00 00 00       	or     eax,0x1
    103e:	00 00                	add    BYTE PTR [rax],al
    1040:	07                   	(bad)  
    1041:	00 00                	add    BYTE PTR [rax],al
    1043:	00 02                	add    BYTE PTR [rdx],al
	...
    104d:	00 00                	add    BYTE PTR [rax],al
    104f:	00 e0                	add    al,ah
    1051:	0d 01 00 00 00       	or     eax,0x1
    1056:	00 00                	add    BYTE PTR [rax],al
    1058:	07                   	(bad)  
    1059:	00 00                	add    BYTE PTR [rax],al
    105b:	00 03                	add    BYTE PTR [rbx],al
	...
    1065:	00 00                	add    BYTE PTR [rax],al
    1067:	00 e8                	add    al,ch
    1069:	0d 01 00 00 00       	or     eax,0x1
    106e:	00 00                	add    BYTE PTR [rax],al
    1070:	07                   	(bad)  
    1071:	00 00                	add    BYTE PTR [rax],al
    1073:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    107e:	00 00                	add    BYTE PTR [rax],al
    1080:	f0 0d 01 00 00 00    	lock or eax,0x1
    1086:	00 00                	add    BYTE PTR [rax],al
    1088:	07                   	(bad)  
    1089:	00 00                	add    BYTE PTR [rax],al
    108b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1091 <__abi_tag+0xccd>
    1091:	00 00                	add    BYTE PTR [rax],al
    1093:	00 00                	add    BYTE PTR [rax],al
    1095:	00 00                	add    BYTE PTR [rax],al
    1097:	00 f8                	add    al,bh
    1099:	0d 01 00 00 00       	or     eax,0x1
    109e:	00 00                	add    BYTE PTR [rax],al
    10a0:	07                   	(bad)  
    10a1:	00 00                	add    BYTE PTR [rax],al
    10a3:	00 06                	add    BYTE PTR [rsi],al
	...
    10b1:	0e                   	(bad)  
    10b2:	01 00                	add    DWORD PTR [rax],eax
    10b4:	00 00                	add    BYTE PTR [rax],al
    10b6:	00 00                	add    BYTE PTR [rax],al
    10b8:	07                   	(bad)  
    10b9:	00 00                	add    BYTE PTR [rax],al
    10bb:	00 07                	add    BYTE PTR [rdi],al
	...
    10c5:	00 00                	add    BYTE PTR [rax],al
    10c7:	00 08                	add    BYTE PTR [rax],cl
    10c9:	0e                   	(bad)  
    10ca:	01 00                	add    DWORD PTR [rax],eax
    10cc:	00 00                	add    BYTE PTR [rax],al
    10ce:	00 00                	add    BYTE PTR [rax],al
    10d0:	07                   	(bad)  
    10d1:	00 00                	add    BYTE PTR [rax],al
    10d3:	00 09                	add    BYTE PTR [rcx],cl
	...
    10dd:	00 00                	add    BYTE PTR [rax],al
    10df:	00 10                	add    BYTE PTR [rax],dl
    10e1:	0e                   	(bad)  
    10e2:	01 00                	add    DWORD PTR [rax],eax
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	00 00                	add    BYTE PTR [rax],al
    10e8:	07                   	(bad)  
    10e9:	00 00                	add    BYTE PTR [rax],al
    10eb:	00 0a                	add    BYTE PTR [rdx],cl
	...
    10f5:	00 00                	add    BYTE PTR [rax],al
    10f7:	00 18                	add    BYTE PTR [rax],bl
    10f9:	0e                   	(bad)  
    10fa:	01 00                	add    DWORD PTR [rax],eax
    10fc:	00 00                	add    BYTE PTR [rax],al
    10fe:	00 00                	add    BYTE PTR [rax],al
    1100:	07                   	(bad)  
    1101:	00 00                	add    BYTE PTR [rax],al
    1103:	00 0b                	add    BYTE PTR [rbx],cl
	...
    110d:	00 00                	add    BYTE PTR [rax],al
    110f:	00 20                	add    BYTE PTR [rax],ah
    1111:	0e                   	(bad)  
    1112:	01 00                	add    DWORD PTR [rax],eax
    1114:	00 00                	add    BYTE PTR [rax],al
    1116:	00 00                	add    BYTE PTR [rax],al
    1118:	07                   	(bad)  
    1119:	00 00                	add    BYTE PTR [rax],al
    111b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    1126:	00 00                	add    BYTE PTR [rax],al
    1128:	28 0e                	sub    BYTE PTR [rsi],cl
    112a:	01 00                	add    DWORD PTR [rax],eax
    112c:	00 00                	add    BYTE PTR [rax],al
    112e:	00 00                	add    BYTE PTR [rax],al
    1130:	07                   	(bad)  
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1139 <__abi_tag+0xd75>
    1139:	00 00                	add    BYTE PTR [rax],al
    113b:	00 00                	add    BYTE PTR [rax],al
    113d:	00 00                	add    BYTE PTR [rax],al
    113f:	00 30                	add    BYTE PTR [rax],dh
    1141:	0e                   	(bad)  
    1142:	01 00                	add    DWORD PTR [rax],eax
    1144:	00 00                	add    BYTE PTR [rax],al
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	07                   	(bad)  
    1149:	00 00                	add    BYTE PTR [rax],al
    114b:	00 0e                	add    BYTE PTR [rsi],cl
	...
    1155:	00 00                	add    BYTE PTR [rax],al
    1157:	00 38                	add    BYTE PTR [rax],bh
    1159:	0e                   	(bad)  
    115a:	01 00                	add    DWORD PTR [rax],eax
    115c:	00 00                	add    BYTE PTR [rax],al
    115e:	00 00                	add    BYTE PTR [rax],al
    1160:	07                   	(bad)  
    1161:	00 00                	add    BYTE PTR [rax],al
    1163:	00 0f                	add    BYTE PTR [rdi],cl
	...
    116d:	00 00                	add    BYTE PTR [rax],al
    116f:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    1172:	01 00                	add    DWORD PTR [rax],eax
    1174:	00 00                	add    BYTE PTR [rax],al
    1176:	00 00                	add    BYTE PTR [rax],al
    1178:	07                   	(bad)  
    1179:	00 00                	add    BYTE PTR [rax],al
    117b:	00 10                	add    BYTE PTR [rax],dl
	...
    1185:	00 00                	add    BYTE PTR [rax],al
    1187:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    118a:	01 00                	add    DWORD PTR [rax],eax
    118c:	00 00                	add    BYTE PTR [rax],al
    118e:	00 00                	add    BYTE PTR [rax],al
    1190:	07                   	(bad)  
    1191:	00 00                	add    BYTE PTR [rax],al
    1193:	00 11                	add    BYTE PTR [rcx],dl
	...
    119d:	00 00                	add    BYTE PTR [rax],al
    119f:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    11a2:	01 00                	add    DWORD PTR [rax],eax
    11a4:	00 00                	add    BYTE PTR [rax],al
    11a6:	00 00                	add    BYTE PTR [rax],al
    11a8:	07                   	(bad)  
    11a9:	00 00                	add    BYTE PTR [rax],al
    11ab:	00 12                	add    BYTE PTR [rdx],dl
	...
    11b5:	00 00                	add    BYTE PTR [rax],al
    11b7:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
    11ba:	01 00                	add    DWORD PTR [rax],eax
    11bc:	00 00                	add    BYTE PTR [rax],al
    11be:	00 00                	add    BYTE PTR [rax],al
    11c0:	07                   	(bad)  
    11c1:	00 00                	add    BYTE PTR [rax],al
    11c3:	00 13                	add    BYTE PTR [rbx],dl
	...
    11cd:	00 00                	add    BYTE PTR [rax],al
    11cf:	00 60 0e             	add    BYTE PTR [rax+0xe],ah
    11d2:	01 00                	add    DWORD PTR [rax],eax
    11d4:	00 00                	add    BYTE PTR [rax],al
    11d6:	00 00                	add    BYTE PTR [rax],al
    11d8:	07                   	(bad)  
    11d9:	00 00                	add    BYTE PTR [rax],al
    11db:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    11e6:	00 00                	add    BYTE PTR [rax],al
    11e8:	68 0e 01 00 00       	push   0x10e
    11ed:	00 00                	add    BYTE PTR [rax],al
    11ef:	00 07                	add    BYTE PTR [rdi],al
    11f1:	00 00                	add    BYTE PTR [rax],al
    11f3:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 11f9 <__abi_tag+0xe35>
    11f9:	00 00                	add    BYTE PTR [rax],al
    11fb:	00 00                	add    BYTE PTR [rax],al
    11fd:	00 00                	add    BYTE PTR [rax],al
    11ff:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
    1202:	01 00                	add    DWORD PTR [rax],eax
    1204:	00 00                	add    BYTE PTR [rax],al
    1206:	00 00                	add    BYTE PTR [rax],al
    1208:	07                   	(bad)  
    1209:	00 00                	add    BYTE PTR [rax],al
    120b:	00 16                	add    BYTE PTR [rsi],dl
	...
    1215:	00 00                	add    BYTE PTR [rax],al
    1217:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    121a:	01 00                	add    DWORD PTR [rax],eax
    121c:	00 00                	add    BYTE PTR [rax],al
    121e:	00 00                	add    BYTE PTR [rax],al
    1220:	07                   	(bad)  
    1221:	00 00                	add    BYTE PTR [rax],al
    1223:	00 17                	add    BYTE PTR [rdi],dl
	...
    122d:	00 00                	add    BYTE PTR [rax],al
    122f:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    1235:	00 00                	add    BYTE PTR [rax],al
    1237:	00 07                	add    BYTE PTR [rdi],al
    1239:	00 00                	add    BYTE PTR [rax],al
    123b:	00 19                	add    BYTE PTR [rcx],bl
	...
    1245:	00 00                	add    BYTE PTR [rax],al
    1247:	00 88 0e 01 00 00    	add    BYTE PTR [rax+0x10e],cl
    124d:	00 00                	add    BYTE PTR [rax],al
    124f:	00 07                	add    BYTE PTR [rdi],al
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	00 1a                	add    BYTE PTR [rdx],bl
	...
    125d:	00 00                	add    BYTE PTR [rax],al
    125f:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    1265:	00 00                	add    BYTE PTR [rax],al
    1267:	00 07                	add    BYTE PTR [rdi],al
    1269:	00 00                	add    BYTE PTR [rax],al
    126b:	00 1b                	add    BYTE PTR [rbx],bl
	...
    1275:	00 00                	add    BYTE PTR [rax],al
    1277:	00 98 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bl
    127d:	00 00                	add    BYTE PTR [rax],al
    127f:	00 07                	add    BYTE PTR [rdi],al
    1281:	00 00                	add    BYTE PTR [rax],al
    1283:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    128e:	00 00                	add    BYTE PTR [rax],al
    1290:	a0 0e 01 00 00 00 00 	movabs al,ds:0x70000000000010e
    1297:	00 07 
    1299:	00 00                	add    BYTE PTR [rax],al
    129b:	00 1e                	add    BYTE PTR [rsi],bl
	...
    12a5:	00 00                	add    BYTE PTR [rax],al
    12a7:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    12ad:	00 00                	add    BYTE PTR [rax],al
    12af:	00 07                	add    BYTE PTR [rdi],al
    12b1:	00 00                	add    BYTE PTR [rax],al
    12b3:	00 1f                	add    BYTE PTR [rdi],bl
	...
    12bd:	00 00                	add    BYTE PTR [rax],al
    12bf:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    12c5:	00 00                	add    BYTE PTR [rax],al
    12c7:	00 07                	add    BYTE PTR [rdi],al
    12c9:	00 00                	add    BYTE PTR [rax],al
    12cb:	00 20                	add    BYTE PTR [rax],ah
	...
    12d5:	00 00                	add    BYTE PTR [rax],al
    12d7:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    12dd:	00 00                	add    BYTE PTR [rax],al
    12df:	00 07                	add    BYTE PTR [rdi],al
    12e1:	00 00                	add    BYTE PTR [rax],al
    12e3:	00 21                	add    BYTE PTR [rcx],ah
	...
    12ed:	00 00                	add    BYTE PTR [rax],al
    12ef:	00 c0                	add    al,al
    12f1:	0e                   	(bad)  
    12f2:	01 00                	add    DWORD PTR [rax],eax
    12f4:	00 00                	add    BYTE PTR [rax],al
    12f6:	00 00                	add    BYTE PTR [rax],al
    12f8:	07                   	(bad)  
    12f9:	00 00                	add    BYTE PTR [rax],al
    12fb:	00 22                	add    BYTE PTR [rdx],ah
	...
    1305:	00 00                	add    BYTE PTR [rax],al
    1307:	00 c8                	add    al,cl
    1309:	0e                   	(bad)  
    130a:	01 00                	add    DWORD PTR [rax],eax
    130c:	00 00                	add    BYTE PTR [rax],al
    130e:	00 00                	add    BYTE PTR [rax],al
    1310:	07                   	(bad)  
    1311:	00 00                	add    BYTE PTR [rax],al
    1313:	00 23                	add    BYTE PTR [rbx],ah
	...
    131d:	00 00                	add    BYTE PTR [rax],al
    131f:	00 d0                	add    al,dl
    1321:	0e                   	(bad)  
    1322:	01 00                	add    DWORD PTR [rax],eax
    1324:	00 00                	add    BYTE PTR [rax],al
    1326:	00 00                	add    BYTE PTR [rax],al
    1328:	07                   	(bad)  
    1329:	00 00                	add    BYTE PTR [rax],al
    132b:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    1336:	00 00                	add    BYTE PTR [rax],al
    1338:	d8 0e                	fmul   DWORD PTR [rsi]
    133a:	01 00                	add    DWORD PTR [rax],eax
    133c:	00 00                	add    BYTE PTR [rax],al
    133e:	00 00                	add    BYTE PTR [rax],al
    1340:	07                   	(bad)  
    1341:	00 00                	add    BYTE PTR [rax],al
    1343:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 1349 <__abi_tag+0xf85>
    1349:	00 00                	add    BYTE PTR [rax],al
    134b:	00 00                	add    BYTE PTR [rax],al
    134d:	00 00                	add    BYTE PTR [rax],al
    134f:	00 e0                	add    al,ah
    1351:	0e                   	(bad)  
    1352:	01 00                	add    DWORD PTR [rax],eax
    1354:	00 00                	add    BYTE PTR [rax],al
    1356:	00 00                	add    BYTE PTR [rax],al
    1358:	07                   	(bad)  
    1359:	00 00                	add    BYTE PTR [rax],al
    135b:	00 26                	add    BYTE PTR [rsi],ah
	...
    1365:	00 00                	add    BYTE PTR [rax],al
    1367:	00 e8                	add    al,ch
    1369:	0e                   	(bad)  
    136a:	01 00                	add    DWORD PTR [rax],eax
    136c:	00 00                	add    BYTE PTR [rax],al
    136e:	00 00                	add    BYTE PTR [rax],al
    1370:	07                   	(bad)  
    1371:	00 00                	add    BYTE PTR [rax],al
    1373:	00 27                	add    BYTE PTR [rdi],ah
	...
    137d:	00 00                	add    BYTE PTR [rax],al
    137f:	00 f0                	add    al,dh
    1381:	0e                   	(bad)  
    1382:	01 00                	add    DWORD PTR [rax],eax
    1384:	00 00                	add    BYTE PTR [rax],al
    1386:	00 00                	add    BYTE PTR [rax],al
    1388:	07                   	(bad)  
    1389:	00 00                	add    BYTE PTR [rax],al
    138b:	00 28                	add    BYTE PTR [rax],ch
	...
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	00 f8                	add    al,bh
    1399:	0e                   	(bad)  
    139a:	01 00                	add    DWORD PTR [rax],eax
    139c:	00 00                	add    BYTE PTR [rax],al
    139e:	00 00                	add    BYTE PTR [rax],al
    13a0:	07                   	(bad)  
    13a1:	00 00                	add    BYTE PTR [rax],al
    13a3:	00 29                	add    BYTE PTR [rcx],ch
	...
    13b1:	0f 01 00             	sgdt   [rax]
    13b4:	00 00                	add    BYTE PTR [rax],al
    13b6:	00 00                	add    BYTE PTR [rax],al
    13b8:	07                   	(bad)  
    13b9:	00 00                	add    BYTE PTR [rax],al
    13bb:	00 2a                	add    BYTE PTR [rdx],ch
	...
    13c5:	00 00                	add    BYTE PTR [rax],al
    13c7:	00 08                	add    BYTE PTR [rax],cl
    13c9:	0f 01 00             	sgdt   [rax]
    13cc:	00 00                	add    BYTE PTR [rax],al
    13ce:	00 00                	add    BYTE PTR [rax],al
    13d0:	07                   	(bad)  
    13d1:	00 00                	add    BYTE PTR [rax],al
    13d3:	00 2b                	add    BYTE PTR [rbx],ch
	...
    13dd:	00 00                	add    BYTE PTR [rax],al
    13df:	00 10                	add    BYTE PTR [rax],dl
    13e1:	0f 01 00             	sgdt   [rax]
    13e4:	00 00                	add    BYTE PTR [rax],al
    13e6:	00 00                	add    BYTE PTR [rax],al
    13e8:	07                   	(bad)  
    13e9:	00 00                	add    BYTE PTR [rax],al
    13eb:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    13f6:	00 00                	add    BYTE PTR [rax],al
    13f8:	18 0f                	sbb    BYTE PTR [rdi],cl
    13fa:	01 00                	add    DWORD PTR [rax],eax
    13fc:	00 00                	add    BYTE PTR [rax],al
    13fe:	00 00                	add    BYTE PTR [rax],al
    1400:	07                   	(bad)  
    1401:	00 00                	add    BYTE PTR [rax],al
    1403:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 1409 <__abi_tag+0x1045>
    1409:	00 00                	add    BYTE PTR [rax],al
    140b:	00 00                	add    BYTE PTR [rax],al
    140d:	00 00                	add    BYTE PTR [rax],al
    140f:	00 20                	add    BYTE PTR [rax],ah
    1411:	0f 01 00             	sgdt   [rax]
    1414:	00 00                	add    BYTE PTR [rax],al
    1416:	00 00                	add    BYTE PTR [rax],al
    1418:	07                   	(bad)  
    1419:	00 00                	add    BYTE PTR [rax],al
    141b:	00 2e                	add    BYTE PTR [rsi],ch
	...
    1425:	00 00                	add    BYTE PTR [rax],al
    1427:	00 28                	add    BYTE PTR [rax],ch
    1429:	0f 01 00             	sgdt   [rax]
    142c:	00 00                	add    BYTE PTR [rax],al
    142e:	00 00                	add    BYTE PTR [rax],al
    1430:	07                   	(bad)  
    1431:	00 00                	add    BYTE PTR [rax],al
    1433:	00 2f                	add    BYTE PTR [rdi],ch
	...
    143d:	00 00                	add    BYTE PTR [rax],al
    143f:	00 30                	add    BYTE PTR [rax],dh
    1441:	0f 01 00             	sgdt   [rax]
    1444:	00 00                	add    BYTE PTR [rax],al
    1446:	00 00                	add    BYTE PTR [rax],al
    1448:	07                   	(bad)  
    1449:	00 00                	add    BYTE PTR [rax],al
    144b:	00 30                	add    BYTE PTR [rax],dh
	...
    1455:	00 00                	add    BYTE PTR [rax],al
    1457:	00 38                	add    BYTE PTR [rax],bh
    1459:	0f 01 00             	sgdt   [rax]
    145c:	00 00                	add    BYTE PTR [rax],al
    145e:	00 00                	add    BYTE PTR [rax],al
    1460:	07                   	(bad)  
    1461:	00 00                	add    BYTE PTR [rax],al
    1463:	00 31                	add    BYTE PTR [rcx],dh
	...
    146d:	00 00                	add    BYTE PTR [rax],al
    146f:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    1472:	01 00                	add    DWORD PTR [rax],eax
    1474:	00 00                	add    BYTE PTR [rax],al
    1476:	00 00                	add    BYTE PTR [rax],al
    1478:	07                   	(bad)  
    1479:	00 00                	add    BYTE PTR [rax],al
    147b:	00 32                	add    BYTE PTR [rdx],dh
	...
    1485:	00 00                	add    BYTE PTR [rax],al
    1487:	00 48 0f             	add    BYTE PTR [rax+0xf],cl
    148a:	01 00                	add    DWORD PTR [rax],eax
    148c:	00 00                	add    BYTE PTR [rax],al
    148e:	00 00                	add    BYTE PTR [rax],al
    1490:	07                   	(bad)  
    1491:	00 00                	add    BYTE PTR [rax],al
    1493:	00 33                	add    BYTE PTR [rbx],dh
	...
    149d:	00 00                	add    BYTE PTR [rax],al
    149f:	00 50 0f             	add    BYTE PTR [rax+0xf],dl
    14a2:	01 00                	add    DWORD PTR [rax],eax
    14a4:	00 00                	add    BYTE PTR [rax],al
    14a6:	00 00                	add    BYTE PTR [rax],al
    14a8:	07                   	(bad)  
    14a9:	00 00                	add    BYTE PTR [rax],al
    14ab:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    14b6:	00 00                	add    BYTE PTR [rax],al
    14b8:	58                   	pop    rax
    14b9:	0f 01 00             	sgdt   [rax]
    14bc:	00 00                	add    BYTE PTR [rax],al
    14be:	00 00                	add    BYTE PTR [rax],al
    14c0:	07                   	(bad)  
    14c1:	00 00                	add    BYTE PTR [rax],al
    14c3:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 14c9 <__abi_tag+0x1105>
    14c9:	00 00                	add    BYTE PTR [rax],al
    14cb:	00 00                	add    BYTE PTR [rax],al
    14cd:	00 00                	add    BYTE PTR [rax],al
    14cf:	00 60 0f             	add    BYTE PTR [rax+0xf],ah
    14d2:	01 00                	add    DWORD PTR [rax],eax
    14d4:	00 00                	add    BYTE PTR [rax],al
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	07                   	(bad)  
    14d9:	00 00                	add    BYTE PTR [rax],al
    14db:	00 36                	add    BYTE PTR [rsi],dh
	...
    14e5:	00 00                	add    BYTE PTR [rax],al
    14e7:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    14ea:	01 00                	add    DWORD PTR [rax],eax
    14ec:	00 00                	add    BYTE PTR [rax],al
    14ee:	00 00                	add    BYTE PTR [rax],al
    14f0:	07                   	(bad)  
    14f1:	00 00                	add    BYTE PTR [rax],al
    14f3:	00 37                	add    BYTE PTR [rdi],dh
	...
    14fd:	00 00                	add    BYTE PTR [rax],al
    14ff:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    1502:	01 00                	add    DWORD PTR [rax],eax
    1504:	00 00                	add    BYTE PTR [rax],al
    1506:	00 00                	add    BYTE PTR [rax],al
    1508:	07                   	(bad)  
    1509:	00 00                	add    BYTE PTR [rax],al
    150b:	00 38                	add    BYTE PTR [rax],bh
	...
    1515:	00 00                	add    BYTE PTR [rax],al
    1517:	00 78 0f             	add    BYTE PTR [rax+0xf],bh
    151a:	01 00                	add    DWORD PTR [rax],eax
    151c:	00 00                	add    BYTE PTR [rax],al
    151e:	00 00                	add    BYTE PTR [rax],al
    1520:	07                   	(bad)  
    1521:	00 00                	add    BYTE PTR [rax],al
    1523:	00 39                	add    BYTE PTR [rcx],bh
	...
    152d:	00 00                	add    BYTE PTR [rax],al
    152f:	00 80 0f 01 00 00    	add    BYTE PTR [rax+0x10f],al
    1535:	00 00                	add    BYTE PTR [rax],al
    1537:	00 07                	add    BYTE PTR [rdi],al
    1539:	00 00                	add    BYTE PTR [rax],al
    153b:	00 3a                	add    BYTE PTR [rdx],bh
	...
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	00 88 0f 01 00 00    	add    BYTE PTR [rax+0x10f],cl
    154d:	00 00                	add    BYTE PTR [rax],al
    154f:	00 07                	add    BYTE PTR [rdi],al
    1551:	00 00                	add    BYTE PTR [rax],al
    1553:	00 3b                	add    BYTE PTR [rbx],bh
	...
    155d:	00 00                	add    BYTE PTR [rax],al
    155f:	00 90 0f 01 00 00    	add    BYTE PTR [rax+0x10f],dl
    1565:	00 00                	add    BYTE PTR [rax],al
    1567:	00 07                	add    BYTE PTR [rdi],al
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    1576:	00 00                	add    BYTE PTR [rax],al
    1578:	98                   	cwde   
    1579:	0f 01 00             	sgdt   [rax]
    157c:	00 00                	add    BYTE PTR [rax],al
    157e:	00 00                	add    BYTE PTR [rax],al
    1580:	07                   	(bad)  
    1581:	00 00                	add    BYTE PTR [rax],al
    1583:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 1589 <__abi_tag+0x11c5>
    1589:	00 00                	add    BYTE PTR [rax],al
    158b:	00 00                	add    BYTE PTR [rax],al
    158d:	00 00                	add    BYTE PTR [rax],al
    158f:	00 a0 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ah
    1595:	00 00                	add    BYTE PTR [rax],al
    1597:	00 07                	add    BYTE PTR [rdi],al
    1599:	00 00                	add    BYTE PTR [rax],al
    159b:	00 3e                	add    BYTE PTR [rsi],bh
	...
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 a8 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ch
    15ad:	00 00                	add    BYTE PTR [rax],al
    15af:	00 07                	add    BYTE PTR [rdi],al
    15b1:	00 00                	add    BYTE PTR [rax],al
    15b3:	00 3f                	add    BYTE PTR [rdi],bh
	...
    15bd:	00 00                	add    BYTE PTR [rax],al
    15bf:	00 b0 0f 01 00 00    	add    BYTE PTR [rax+0x10f],dh
    15c5:	00 00                	add    BYTE PTR [rax],al
    15c7:	00 07                	add    BYTE PTR [rdi],al
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    15d6:	00 00                	add    BYTE PTR [rax],al
    15d8:	b8 0f 01 00 00       	mov    eax,0x10f
    15dd:	00 00                	add    BYTE PTR [rax],al
    15df:	00 07                	add    BYTE PTR [rdi],al
    15e1:	00 00                	add    BYTE PTR [rax],al
    15e3:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    15ee:	00 00                	add    BYTE PTR [rax],al
    15f0:	c0 0f 01             	ror    BYTE PTR [rdi],0x1
    15f3:	00 00                	add    BYTE PTR [rax],al
    15f5:	00 00                	add    BYTE PTR [rax],al
    15f7:	00 07                	add    BYTE PTR [rdi],al
    15f9:	00 00                	add    BYTE PTR [rax],al
    15fb:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    1606:	00 00                	add    BYTE PTR [rax],al
    1608:	c8 0f 01 00          	enter  0x10f,0x0
    160c:	00 00                	add    BYTE PTR [rax],al
    160e:	00 00                	add    BYTE PTR [rax],al
    1610:	07                   	(bad)  
    1611:	00 00                	add    BYTE PTR [rax],al
    1613:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    161f:	00 d0                	add    al,dl
    1621:	0f 01 00             	sgdt   [rax]
    1624:	00 00                	add    BYTE PTR [rax],al
    1626:	00 00                	add    BYTE PTR [rax],al
    1628:	07                   	(bad)  
    1629:	00 00                	add    BYTE PTR [rax],al
    162b:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 c9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefc9]        # 10fd8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 9a ed 00 00    	push   QWORD PTR [rip+0xed9a]        # 10dc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 9b ed 00 00 	bnd jmp QWORD PTR [rip+0xed9b]        # 10dc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop

Disassembly of section .plt.got:

0000000000002440 <__cxa_finalize@plt>:
    2440:	f3 0f 1e fa          	endbr64 
    2444:	f2 ff 25 a5 eb 00 00 	bnd jmp QWORD PTR [rip+0xeba5]        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    244b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002450 <sqlite3_close@plt>:
    2450:	f3 0f 1e fa          	endbr64 
    2454:	f2 ff 25 75 e9 00 00 	bnd jmp QWORD PTR [rip+0xe975]        # 10dd0 <sqlite3_close>
    245b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002460 <pthread_join@plt>:
    2460:	f3 0f 1e fa          	endbr64 
    2464:	f2 ff 25 6d e9 00 00 	bnd jmp QWORD PTR [rip+0xe96d]        # 10dd8 <pthread_join@GLIBC_2.34>
    246b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002470 <printf@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 65 e9 00 00 	bnd jmp QWORD PTR [rip+0xe965]        # 10de0 <printf@GLIBC_2.2.5>
    247b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002480 <memset@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 5d e9 00 00 	bnd jmp QWORD PTR [rip+0xe95d]        # 10de8 <memset@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002490 <snprintf@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 55 e9 00 00 	bnd jmp QWORD PTR [rip+0xe955]        # 10df0 <snprintf@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <backtrace@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 4d e9 00 00 	bnd jmp QWORD PTR [rip+0xe94d]        # 10df8 <backtrace@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <strncat@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 45 e9 00 00 	bnd jmp QWORD PTR [rip+0xe945]        # 10e00 <strncat@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <puts@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 3d e9 00 00 	bnd jmp QWORD PTR [rip+0xe93d]        # 10e08 <puts@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <htons@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 35 e9 00 00 	bnd jmp QWORD PTR [rip+0xe935]        # 10e10 <htons@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <exit@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 2d e9 00 00 	bnd jmp QWORD PTR [rip+0xe92d]        # 10e18 <exit@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <putchar@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 25 e9 00 00 	bnd jmp QWORD PTR [rip+0xe925]        # 10e20 <putchar@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <sqlite3_exec@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 1d e9 00 00 	bnd jmp QWORD PTR [rip+0xe91d]        # 10e28 <sqlite3_exec>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <getopt@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 15 e9 00 00 	bnd jmp QWORD PTR [rip+0xe915]        # 10e30 <getopt@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <read@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 0d e9 00 00 	bnd jmp QWORD PTR [rip+0xe90d]        # 10e38 <read@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <strncmp@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 05 e9 00 00 	bnd jmp QWORD PTR [rip+0xe905]        # 10e40 <strncmp@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <malloc@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 fd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8fd]        # 10e48 <malloc@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <fopen@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 f5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8f5]        # 10e50 <fopen@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <regexec@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 ed e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ed]        # 10e58 <regexec@GLIBC_2.3.4>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <pcap_open_live@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10e60 <pcap_open_live>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <setsockopt@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10e68 <setsockopt@GLIBC_2.2.5>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <sqlite3_free@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10e70 <sqlite3_free>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <lua_settop@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10e78 <lua_settop@LUA_5.3>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <pthread_create@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10e80 <pthread_create@GLIBC_2.34>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <backtrace_symbols@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10e88 <backtrace_symbols@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <free@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10e90 <free@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <strlen@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10e98 <strlen@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <listen@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10ea0 <listen@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <sprintf@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10ea8 <sprintf@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <ntohs@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10eb0 <ntohs@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <ntohl@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10eb8 <ntohl@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <sleep@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10ec0 <sleep@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <lua_pcallk@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10ec8 <lua_pcallk@LUA_5.3>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <strstr@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10ed0 <strstr@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <strcat@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10ed8 <strcat@GLIBC_2.2.5>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <fputs@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10ee0 <fputs@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <strtol@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10ee8 <strtol@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <luaL_loadfilex@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10ef0 <luaL_loadfilex@LUA_5.3>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <atoi@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10ef8 <atoi@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <regcomp@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10f00 <regcomp@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <signal@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10f08 <signal@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <strchr@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10f10 <strchr@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <lua_gettop@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10f18 <lua_gettop@LUA_5.3>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <luaL_newstate@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10f20 <luaL_newstate@LUA_5.3>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <socket@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10f28 <socket@GLIBC_2.2.5>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <luaL_openlibs@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10f30 <luaL_openlibs@LUA_5.3>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <__stack_chk_fail@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10f38 <__stack_chk_fail@GLIBC_2.4>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <strcmp@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10f40 <strcmp@GLIBC_2.2.5>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <getline@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10f48 <getline@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <strcpy@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10f50 <strcpy@GLIBC_2.2.5>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <strtok@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10f58 <strtok@GLIBC_2.2.5>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <lua_close@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10f60 <lua_close@LUA_5.3>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <sqlite3_errmsg@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10f68 <sqlite3_errmsg>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <fclose@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10f70 <fclose@GLIBC_2.2.5>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <strncpy@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10f78 <strncpy@GLIBC_2.2.5>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <strcspn@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10f80 <strcspn@GLIBC_2.2.5>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <bind@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10f88 <bind@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <pcap_loop@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10f90 <pcap_loop>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <htonl@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10f98 <htonl@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <perror@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10fa0 <perror@GLIBC_2.2.5>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <fprintf@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10fa8 <fprintf@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <localtime@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10fb0 <localtime@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <getdelim@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10fb8 <getdelim@GLIBC_2.2.5>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <accept@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10fc0 <accept@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <sqlite3_open@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10fc8 <sqlite3_open>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <time@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10fd0 <time@GLIBC_2.2.5>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002860 <_start>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	31 ed                	xor    ebp,ebp
    2866:	49 89 d1             	mov    r9,rdx
    2869:	5e                   	pop    rsi
    286a:	48 89 e2             	mov    rdx,rsp
    286d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2871:	50                   	push   rax
    2872:	54                   	push   rsp
    2873:	45 31 c0             	xor    r8d,r8d
    2876:	31 c9                	xor    ecx,ecx
    2878:	48 8d 3d 8a 3f 00 00 	lea    rdi,[rip+0x3f8a]        # 6809 <main>
    287f:	ff 15 73 e7 00 00    	call   QWORD PTR [rip+0xe773]        # 10ff8 <__libc_start_main@GLIBC_2.34>
    2885:	f4                   	hlt    
    2886:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    288d:	00 00 00 

0000000000002890 <deregister_tm_clones>:
    2890:	48 8d 3d b1 e7 00 00 	lea    rdi,[rip+0xe7b1]        # 11048 <__TMC_END__>
    2897:	48 8d 05 aa e7 00 00 	lea    rax,[rip+0xe7aa]        # 11048 <__TMC_END__>
    289e:	48 39 f8             	cmp    rax,rdi
    28a1:	74 15                	je     28b8 <deregister_tm_clones+0x28>
    28a3:	48 8b 05 36 e7 00 00 	mov    rax,QWORD PTR [rip+0xe736]        # 10fe0 <_ITM_deregisterTMCloneTable>
    28aa:	48 85 c0             	test   rax,rax
    28ad:	74 09                	je     28b8 <deregister_tm_clones+0x28>
    28af:	ff e0                	jmp    rax
    28b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    28b8:	c3                   	ret    
    28b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000028c0 <register_tm_clones>:
    28c0:	48 8d 3d 81 e7 00 00 	lea    rdi,[rip+0xe781]        # 11048 <__TMC_END__>
    28c7:	48 8d 35 7a e7 00 00 	lea    rsi,[rip+0xe77a]        # 11048 <__TMC_END__>
    28ce:	48 29 fe             	sub    rsi,rdi
    28d1:	48 89 f0             	mov    rax,rsi
    28d4:	48 c1 ee 3f          	shr    rsi,0x3f
    28d8:	48 c1 f8 03          	sar    rax,0x3
    28dc:	48 01 c6             	add    rsi,rax
    28df:	48 d1 fe             	sar    rsi,1
    28e2:	74 14                	je     28f8 <register_tm_clones+0x38>
    28e4:	48 8b 05 fd e6 00 00 	mov    rax,QWORD PTR [rip+0xe6fd]        # 10fe8 <_ITM_registerTMCloneTable>
    28eb:	48 85 c0             	test   rax,rax
    28ee:	74 08                	je     28f8 <register_tm_clones+0x38>
    28f0:	ff e0                	jmp    rax
    28f2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    28f8:	c3                   	ret    
    28f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002900 <__do_global_dtors_aux>:
    2900:	f3 0f 1e fa          	endbr64 
    2904:	80 3d 5d e7 00 00 00 	cmp    BYTE PTR [rip+0xe75d],0x0        # 11068 <completed.0>
    290b:	75 2b                	jne    2938 <__do_global_dtors_aux+0x38>
    290d:	55                   	push   rbp
    290e:	48 83 3d da e6 00 00 	cmp    QWORD PTR [rip+0xe6da],0x0        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    2915:	00 
    2916:	48 89 e5             	mov    rbp,rsp
    2919:	74 0c                	je     2927 <__do_global_dtors_aux+0x27>
    291b:	48 8b 3d e6 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe6e6]        # 11008 <__dso_handle>
    2922:	e8 19 fb ff ff       	call   2440 <__cxa_finalize@plt>
    2927:	e8 64 ff ff ff       	call   2890 <deregister_tm_clones>
    292c:	c6 05 35 e7 00 00 01 	mov    BYTE PTR [rip+0xe735],0x1        # 11068 <completed.0>
    2933:	5d                   	pop    rbp
    2934:	c3                   	ret    
    2935:	0f 1f 00             	nop    DWORD PTR [rax]
    2938:	c3                   	ret    
    2939:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002940 <frame_dummy>:
    2940:	f3 0f 1e fa          	endbr64 
    2944:	e9 77 ff ff ff       	jmp    28c0 <register_tm_clones>

0000000000002949 <add_thread>:
    2949:	f3 0f 1e fa          	endbr64 
    294d:	55                   	push   rbp
    294e:	48 89 e5             	mov    rbp,rsp
    2951:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2955:	8b 05 45 e9 00 00    	mov    eax,DWORD PTR [rip+0xe945]        # 112a0 <thread_count>
    295b:	8d 50 01             	lea    edx,[rax+0x1]
    295e:	89 15 3c e9 00 00    	mov    DWORD PTR [rip+0xe93c],edx        # 112a0 <thread_count>
    2964:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    2968:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    296b:	48 98                	cdqe   
    296d:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2974:	00 
    2975:	48 8d 05 24 e7 00 00 	lea    rax,[rip+0xe724]        # 110a0 <threads>
    297c:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    2980:	90                   	nop
    2981:	5d                   	pop    rbp
    2982:	c3                   	ret    

0000000000002983 <pktmgr>:
    2983:	f3 0f 1e fa          	endbr64 
    2987:	55                   	push   rbp
    2988:	48 89 e5             	mov    rbp,rsp
    298b:	53                   	push   rbx
    298c:	48 83 ec 38          	sub    rsp,0x38
    2990:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    2994:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    2998:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    299c:	0f b6 05 c1 75 10 00 	movzx  eax,BYTE PTR [rip+0x1075c1]        # 109f64 <packet_print>
    29a3:	84 c0                	test   al,al
    29a5:	74 0c                	je     29b3 <pktmgr+0x30>
    29a7:	48 8d 3d a2 96 00 00 	lea    rdi,[rip+0x96a2]        # c050 <_IO_stdin_used+0x50>
    29ae:	e8 0d fb ff ff       	call   24c0 <puts@plt>
    29b3:	8b 05 eb e8 00 00    	mov    eax,DWORD PTR [rip+0xe8eb]        # 112a4 <total_pkt_captured>
    29b9:	83 c0 01             	add    eax,0x1
    29bc:	89 05 e2 e8 00 00    	mov    DWORD PTR [rip+0xe8e2],eax        # 112a4 <total_pkt_captured>
    29c2:	8b 05 f8 e8 00 00    	mov    eax,DWORD PTR [rip+0xe8f8]        # 112c0 <pkt_counter>
    29c8:	83 c0 01             	add    eax,0x1
    29cb:	89 05 ef e8 00 00    	mov    DWORD PTR [rip+0xe8ef],eax        # 112c0 <pkt_counter>
    29d1:	8b 15 e9 e8 00 00    	mov    edx,DWORD PTR [rip+0xe8e9]        # 112c0 <pkt_counter>
    29d7:	8b 05 83 75 10 00    	mov    eax,DWORD PTR [rip+0x107583]        # 109f60 <clean_delay_pkts>
    29dd:	39 c2                	cmp    edx,eax
    29df:	72 0a                	jb     29eb <pktmgr+0x68>
    29e1:	c7 05 d5 e8 00 00 00 	mov    DWORD PTR [rip+0xe8d5],0x0        # 112c0 <pkt_counter>
    29e8:	00 00 00 
    29eb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    29ef:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    29f3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    29f7:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    29fb:	0f b7 c0             	movzx  eax,ax
    29fe:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a03:	74 46                	je     2a4b <pktmgr+0xc8>
    2a05:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a0a:	7f 77                	jg     2a83 <pktmgr+0x100>
    2a0c:	3d 80 35 00 00       	cmp    eax,0x3580
    2a11:	74 23                	je     2a36 <pktmgr+0xb3>
    2a13:	3d 80 35 00 00       	cmp    eax,0x3580
    2a18:	7f 69                	jg     2a83 <pktmgr+0x100>
    2a1a:	3d 08 06 00 00       	cmp    eax,0x608
    2a1f:	74 15                	je     2a36 <pktmgr+0xb3>
    2a21:	3d 08 06 00 00       	cmp    eax,0x608
    2a26:	7f 5b                	jg     2a83 <pktmgr+0x100>
    2a28:	83 f8 08             	cmp    eax,0x8
    2a2b:	74 33                	je     2a60 <pktmgr+0xdd>
    2a2d:	3d 90 00 00 00       	cmp    eax,0x90
    2a32:	74 41                	je     2a75 <pktmgr+0xf2>
    2a34:	eb 4d                	jmp    2a83 <pktmgr+0x100>
    2a36:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a3a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a3e:	48 89 d6             	mov    rsi,rdx
    2a41:	48 89 c7             	mov    rdi,rax
    2a44:	e8 86 00 00 00       	call   2acf <arpdecode>
    2a49:	eb 7d                	jmp    2ac8 <pktmgr+0x145>
    2a4b:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a4f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a53:	48 89 d6             	mov    rsi,rdx
    2a56:	48 89 c7             	mov    rdi,rax
    2a59:	e8 f6 83 00 00       	call   ae54 <ip6decode>
    2a5e:	eb 68                	jmp    2ac8 <pktmgr+0x145>
    2a60:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a64:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a68:	48 89 d6             	mov    rsi,rdx
    2a6b:	48 89 c7             	mov    rdi,rax
    2a6e:	e8 56 0b 00 00       	call   35c9 <ipv4pktmgr>
    2a73:	eb 53                	jmp    2ac8 <pktmgr+0x145>
    2a75:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a79:	48 89 c7             	mov    rdi,rax
    2a7c:	e8 42 03 00 00       	call   2dc3 <loopback_ctp_decode>
    2a81:	eb 45                	jmp    2ac8 <pktmgr+0x145>
    2a83:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2a87:	48 89 c7             	mov    rdi,rax
    2a8a:	e8 f5 04 00 00       	call   2f84 <uc_mac_ntoa>
    2a8f:	48 89 c3             	mov    rbx,rax
    2a92:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2a96:	48 83 c0 06          	add    rax,0x6
    2a9a:	48 89 c7             	mov    rdi,rax
    2a9d:	e8 e2 04 00 00       	call   2f84 <uc_mac_ntoa>
    2aa2:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2aa8:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2aae:	48 89 d9             	mov    rcx,rbx
    2ab1:	48 89 c2             	mov    rdx,rax
    2ab4:	48 8d 35 dd 95 00 00 	lea    rsi,[rip+0x95dd]        # c098 <_IO_stdin_used+0x98>
    2abb:	48 8d 3d 08 96 00 00 	lea    rdi,[rip+0x9608]        # c0ca <_IO_stdin_used+0xca>
    2ac2:	e8 3d 64 00 00       	call   8f04 <lfprintf>
    2ac7:	90                   	nop
    2ac8:	90                   	nop
    2ac9:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2acd:	c9                   	leave  
    2ace:	c3                   	ret    

0000000000002acf <arpdecode>:
    2acf:	f3 0f 1e fa          	endbr64 
    2ad3:	55                   	push   rbp
    2ad4:	48 89 e5             	mov    rbp,rsp
    2ad7:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2ade:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2ae5:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2aec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2af3:	00 00 
    2af5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2af9:	31 c0                	xor    eax,eax
    2afb:	0f b6 05 62 74 10 00 	movzx  eax,BYTE PTR [rip+0x107462]        # 109f64 <packet_print>
    2b02:	84 c0                	test   al,al
    2b04:	74 18                	je     2b1e <arpdecode+0x4f>
    2b06:	48 8d 35 db 95 00 00 	lea    rsi,[rip+0x95db]        # c0e8 <_IO_stdin_used+0xe8>
    2b0d:	48 8d 3d dc 95 00 00 	lea    rdi,[rip+0x95dc]        # c0f0 <_IO_stdin_used+0xf0>
    2b14:	b8 00 00 00 00       	mov    eax,0x0
    2b19:	e8 52 f9 ff ff       	call   2470 <printf@plt>
    2b1e:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2b25:	48 83 c0 0e          	add    rax,0xe
    2b29:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2b30:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2b37:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2b3b:	0f b7 c0             	movzx  eax,ax
    2b3e:	3d 00 18 00 00       	cmp    eax,0x1800
    2b43:	74 35                	je     2b7a <arpdecode+0xab>
    2b45:	3d 00 18 00 00       	cmp    eax,0x1800
    2b4a:	0f 8f 1d 02 00 00    	jg     2d6d <arpdecode+0x29e>
    2b50:	3d 00 02 00 00       	cmp    eax,0x200
    2b55:	0f 84 eb 00 00 00    	je     2c46 <arpdecode+0x177>
    2b5b:	3d 00 02 00 00       	cmp    eax,0x200
    2b60:	0f 8f 07 02 00 00    	jg     2d6d <arpdecode+0x29e>
    2b66:	83 f8 02             	cmp    eax,0x2
    2b69:	0f 84 d7 00 00 00    	je     2c46 <arpdecode+0x177>
    2b6f:	3d 00 01 00 00       	cmp    eax,0x100
    2b74:	0f 85 f3 01 00 00    	jne    2d6d <arpdecode+0x29e>
    2b7a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2b81:	48 83 c0 18          	add    rax,0x18
    2b85:	48 89 c7             	mov    rdi,rax
    2b88:	e8 9d 04 00 00       	call   302a <u8_ipv4_ntoa>
    2b8d:	48 89 c1             	mov    rcx,rax
    2b90:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2b94:	ba 20 00 00 00       	mov    edx,0x20
    2b99:	48 89 ce             	mov    rsi,rcx
    2b9c:	48 89 c7             	mov    rdi,rax
    2b9f:	e8 fc fb ff ff       	call   27a0 <strncpy@plt>
    2ba4:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2bab:	48 83 c0 0e          	add    rax,0xe
    2baf:	48 89 c7             	mov    rdi,rax
    2bb2:	e8 73 04 00 00       	call   302a <u8_ipv4_ntoa>
    2bb7:	48 89 c1             	mov    rcx,rax
    2bba:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2bbe:	ba 20 00 00 00       	mov    edx,0x20
    2bc3:	48 89 ce             	mov    rsi,rcx
    2bc6:	48 89 c7             	mov    rdi,rax
    2bc9:	e8 d2 fb ff ff       	call   27a0 <strncpy@plt>
    2bce:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2bd2:	ba 05 00 00 00       	mov    edx,0x5
    2bd7:	48 8d 35 15 95 00 00 	lea    rsi,[rip+0x9515]        # c0f3 <_IO_stdin_used+0xf3>
    2bde:	48 89 c7             	mov    rdi,rax
    2be1:	e8 4a f9 ff ff       	call   2530 <strncmp@plt>
    2be6:	85 c0                	test   eax,eax
    2be8:	75 2c                	jne    2c16 <arpdecode+0x147>
    2bea:	0f b6 05 73 73 10 00 	movzx  eax,BYTE PTR [rip+0x107373]        # 109f64 <packet_print>
    2bf1:	84 c0                	test   al,al
    2bf3:	0f 84 97 01 00 00    	je     2d90 <arpdecode+0x2c1>
    2bf9:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2bfd:	48 89 c6             	mov    rsi,rax
    2c00:	48 8d 3d f9 94 00 00 	lea    rdi,[rip+0x94f9]        # c100 <_IO_stdin_used+0x100>
    2c07:	b8 00 00 00 00       	mov    eax,0x0
    2c0c:	e8 5f f8 ff ff       	call   2470 <printf@plt>
    2c11:	e9 7a 01 00 00       	jmp    2d90 <arpdecode+0x2c1>
    2c16:	0f b6 05 47 73 10 00 	movzx  eax,BYTE PTR [rip+0x107347]        # 109f64 <packet_print>
    2c1d:	84 c0                	test   al,al
    2c1f:	0f 84 6b 01 00 00    	je     2d90 <arpdecode+0x2c1>
    2c25:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2c29:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c2d:	48 89 c6             	mov    rsi,rax
    2c30:	48 8d 3d e9 94 00 00 	lea    rdi,[rip+0x94e9]        # c120 <_IO_stdin_used+0x120>
    2c37:	b8 00 00 00 00       	mov    eax,0x0
    2c3c:	e8 2f f8 ff ff       	call   2470 <printf@plt>
    2c41:	e9 4a 01 00 00       	jmp    2d90 <arpdecode+0x2c1>
    2c46:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c4d:	48 83 c0 08          	add    rax,0x8
    2c51:	48 89 c7             	mov    rdi,rax
    2c54:	e8 7d 02 00 00       	call   2ed6 <mac_ntoa>
    2c59:	48 89 c1             	mov    rcx,rax
    2c5c:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c60:	ba 40 00 00 00       	mov    edx,0x40
    2c65:	48 89 ce             	mov    rsi,rcx
    2c68:	48 89 c7             	mov    rdi,rax
    2c6b:	e8 30 fb ff ff       	call   27a0 <strncpy@plt>
    2c70:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c77:	48 83 c0 0e          	add    rax,0xe
    2c7b:	48 89 c7             	mov    rdi,rax
    2c7e:	e8 a7 03 00 00       	call   302a <u8_ipv4_ntoa>
    2c83:	48 89 c1             	mov    rcx,rax
    2c86:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c8a:	ba 20 00 00 00       	mov    edx,0x20
    2c8f:	48 89 ce             	mov    rsi,rcx
    2c92:	48 89 c7             	mov    rdi,rax
    2c95:	e8 06 fb ff ff       	call   27a0 <strncpy@plt>
    2c9a:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2c9e:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2ca2:	48 89 d6             	mov    rsi,rdx
    2ca5:	48 89 c7             	mov    rdi,rax
    2ca8:	e8 6c 4f 00 00       	call   7c19 <entry_exists>
    2cad:	83 f8 ff             	cmp    eax,0xffffffff
    2cb0:	74 15                	je     2cc7 <arpdecode+0x1f8>
    2cb2:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cb6:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cba:	48 89 d6             	mov    rsi,rdx
    2cbd:	48 89 c7             	mov    rdi,rax
    2cc0:	e8 01 4e 00 00       	call   7ac6 <compare_entries>
    2cc5:	eb 7d                	jmp    2d44 <arpdecode+0x275>
    2cc7:	0f b6 05 53 72 10 00 	movzx  eax,BYTE PTR [rip+0x107253]        # 109f21 <use_sqlite>
    2cce:	84 c0                	test   al,al
    2cd0:	74 5f                	je     2d31 <arpdecode+0x262>
    2cd2:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2cd9:	00 00 00 
    2cdc:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2ce0:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2ce7:	48 89 d6             	mov    rsi,rdx
    2cea:	48 89 c7             	mov    rdi,rax
    2ced:	e8 5e fa ff ff       	call   2750 <strcpy@plt>
    2cf2:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2cf6:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2cfd:	48 83 c2 10          	add    rdx,0x10
    2d01:	48 89 c6             	mov    rsi,rax
    2d04:	48 89 d7             	mov    rdi,rdx
    2d07:	e8 44 fa ff ff       	call   2750 <strcpy@plt>
    2d0c:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d13:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2d1a:	48 89 d1             	mov    rcx,rdx
    2d1d:	48 8d 15 54 51 00 00 	lea    rdx,[rip+0x5154]        # 7e78 <update_db>
    2d24:	be 00 00 00 00       	mov    esi,0x0
    2d29:	48 89 c7             	mov    rdi,rax
    2d2c:	e8 7f f8 ff ff       	call   25b0 <pthread_create@plt>
    2d31:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d35:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d39:	48 89 d6             	mov    rsi,rdx
    2d3c:	48 89 c7             	mov    rdi,rax
    2d3f:	e8 61 4e 00 00       	call   7ba5 <add_entry>
    2d44:	0f b6 05 19 72 10 00 	movzx  eax,BYTE PTR [rip+0x107219]        # 109f64 <packet_print>
    2d4b:	84 c0                	test   al,al
    2d4d:	74 44                	je     2d93 <arpdecode+0x2c4>
    2d4f:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d53:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d57:	48 89 c6             	mov    rsi,rax
    2d5a:	48 8d 3d e7 93 00 00 	lea    rdi,[rip+0x93e7]        # c148 <_IO_stdin_used+0x148>
    2d61:	b8 00 00 00 00       	mov    eax,0x0
    2d66:	e8 05 f7 ff ff       	call   2470 <printf@plt>
    2d6b:	eb 26                	jmp    2d93 <arpdecode+0x2c4>
    2d6d:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d74:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2d78:	0f b7 c0             	movzx  eax,ax
    2d7b:	89 c6                	mov    esi,eax
    2d7d:	48 8d 3d e3 93 00 00 	lea    rdi,[rip+0x93e3]        # c167 <_IO_stdin_used+0x167>
    2d84:	b8 00 00 00 00       	mov    eax,0x0
    2d89:	e8 e2 f6 ff ff       	call   2470 <printf@plt>
    2d8e:	eb 04                	jmp    2d94 <arpdecode+0x2c5>
    2d90:	90                   	nop
    2d91:	eb 01                	jmp    2d94 <arpdecode+0x2c5>
    2d93:	90                   	nop
    2d94:	48 8d 35 e4 93 00 00 	lea    rsi,[rip+0x93e4]        # c17f <_IO_stdin_used+0x17f>
    2d9b:	48 8d 3d 4e 93 00 00 	lea    rdi,[rip+0x934e]        # c0f0 <_IO_stdin_used+0xf0>
    2da2:	b8 00 00 00 00       	mov    eax,0x0
    2da7:	e8 c4 f6 ff ff       	call   2470 <printf@plt>
    2dac:	90                   	nop
    2dad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2db1:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2db8:	00 00 
    2dba:	74 05                	je     2dc1 <arpdecode+0x2f2>
    2dbc:	e8 5f f9 ff ff       	call   2720 <__stack_chk_fail@plt>
    2dc1:	c9                   	leave  
    2dc2:	c3                   	ret    

0000000000002dc3 <loopback_ctp_decode>:
    2dc3:	f3 0f 1e fa          	endbr64 
    2dc7:	55                   	push   rbp
    2dc8:	48 89 e5             	mov    rbp,rsp
    2dcb:	48 83 ec 60          	sub    rsp,0x60
    2dcf:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2dd3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2dda:	00 00 
    2ddc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2de0:	31 c0                	xor    eax,eax
    2de2:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2de6:	48 83 c0 0e          	add    rax,0xe
    2dea:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2dee:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2df2:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2df6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2dfa:	48 83 c0 06          	add    rax,0x6
    2dfe:	48 89 c7             	mov    rdi,rax
    2e01:	e8 7e 01 00 00       	call   2f84 <uc_mac_ntoa>
    2e06:	48 89 c1             	mov    rcx,rax
    2e09:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e0d:	ba 18 00 00 00       	mov    edx,0x18
    2e12:	48 89 ce             	mov    rsi,rcx
    2e15:	48 89 c7             	mov    rdi,rax
    2e18:	e8 83 f9 ff ff       	call   27a0 <strncpy@plt>
    2e1d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e21:	48 89 c7             	mov    rdi,rax
    2e24:	e8 5b 01 00 00       	call   2f84 <uc_mac_ntoa>
    2e29:	48 89 c1             	mov    rcx,rax
    2e2c:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2e30:	ba 18 00 00 00       	mov    edx,0x18
    2e35:	48 89 ce             	mov    rsi,rcx
    2e38:	48 89 c7             	mov    rdi,rax
    2e3b:	e8 60 f9 ff ff       	call   27a0 <strncpy@plt>
    2e40:	0f b6 05 1d 71 10 00 	movzx  eax,BYTE PTR [rip+0x10711d]        # 109f64 <packet_print>
    2e47:	84 c0                	test   al,al
    2e49:	74 1c                	je     2e67 <loopback_ctp_decode+0xa4>
    2e4b:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2e4f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e53:	48 89 c6             	mov    rsi,rax
    2e56:	48 8d 3d 27 93 00 00 	lea    rdi,[rip+0x9327]        # c184 <_IO_stdin_used+0x184>
    2e5d:	b8 00 00 00 00       	mov    eax,0x0
    2e62:	e8 09 f6 ff ff       	call   2470 <printf@plt>
    2e67:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2e6b:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2e6f:	0f b7 c0             	movzx  eax,ax
    2e72:	83 f8 01             	cmp    eax,0x1
    2e75:	75 19                	jne    2e90 <loopback_ctp_decode+0xcd>
    2e77:	0f b6 05 e6 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070e6]        # 109f64 <packet_print>
    2e7e:	84 c0                	test   al,al
    2e80:	74 39                	je     2ebb <loopback_ctp_decode+0xf8>
    2e82:	48 8d 3d 09 93 00 00 	lea    rdi,[rip+0x9309]        # c192 <_IO_stdin_used+0x192>
    2e89:	e8 32 f6 ff ff       	call   24c0 <puts@plt>
    2e8e:	eb 2b                	jmp    2ebb <loopback_ctp_decode+0xf8>
    2e90:	0f b6 05 cd 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070cd]        # 109f64 <packet_print>
    2e97:	84 c0                	test   al,al
    2e99:	74 23                	je     2ebe <loopback_ctp_decode+0xfb>
    2e9b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2e9f:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2ea3:	0f b7 c0             	movzx  eax,ax
    2ea6:	89 c6                	mov    esi,eax
    2ea8:	48 8d 3d eb 92 00 00 	lea    rdi,[rip+0x92eb]        # c19a <_IO_stdin_used+0x19a>
    2eaf:	b8 00 00 00 00       	mov    eax,0x0
    2eb4:	e8 b7 f5 ff ff       	call   2470 <printf@plt>
    2eb9:	eb 03                	jmp    2ebe <loopback_ctp_decode+0xfb>
    2ebb:	90                   	nop
    2ebc:	eb 01                	jmp    2ebf <loopback_ctp_decode+0xfc>
    2ebe:	90                   	nop
    2ebf:	90                   	nop
    2ec0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ec4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2ecb:	00 00 
    2ecd:	74 05                	je     2ed4 <loopback_ctp_decode+0x111>
    2ecf:	e8 4c f8 ff ff       	call   2720 <__stack_chk_fail@plt>
    2ed4:	c9                   	leave  
    2ed5:	c3                   	ret    

0000000000002ed6 <mac_ntoa>:
    2ed6:	f3 0f 1e fa          	endbr64 
    2eda:	55                   	push   rbp
    2edb:	48 89 e5             	mov    rbp,rsp
    2ede:	48 83 ec 20          	sub    rsp,0x20
    2ee2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2ee6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2eea:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2eee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ef2:	48 83 c0 05          	add    rax,0x5
    2ef6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ef9:	0f b6 f0             	movzx  esi,al
    2efc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f00:	48 83 c0 04          	add    rax,0x4
    2f04:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f07:	0f b6 c8             	movzx  ecx,al
    2f0a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f0e:	48 83 c0 03          	add    rax,0x3
    2f12:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f15:	0f b6 d0             	movzx  edx,al
    2f18:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f1c:	48 83 c0 02          	add    rax,0x2
    2f20:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f23:	44 0f b6 c8          	movzx  r9d,al
    2f27:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f2b:	48 83 c0 01          	add    rax,0x1
    2f2f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f32:	44 0f b6 c0          	movzx  r8d,al
    2f36:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f3a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f3d:	0f b6 c0             	movzx  eax,al
    2f40:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2f47:	00 00 
    2f49:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    2f50:	48 83 ec 08          	sub    rsp,0x8
    2f54:	56                   	push   rsi
    2f55:	51                   	push   rcx
    2f56:	52                   	push   rdx
    2f57:	89 c1                	mov    ecx,eax
    2f59:	48 8d 15 58 92 00 00 	lea    rdx,[rip+0x9258]        # c1b8 <_IO_stdin_used+0x1b8>
    2f60:	be 80 00 00 00       	mov    esi,0x80
    2f65:	b8 00 00 00 00       	mov    eax,0x0
    2f6a:	e8 21 f5 ff ff       	call   2490 <snprintf@plt>
    2f6f:	48 83 c4 20          	add    rsp,0x20
    2f73:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    2f7a:	00 00 
    2f7c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    2f82:	c9                   	leave  
    2f83:	c3                   	ret    

0000000000002f84 <uc_mac_ntoa>:
    2f84:	f3 0f 1e fa          	endbr64 
    2f88:	55                   	push   rbp
    2f89:	48 89 e5             	mov    rbp,rsp
    2f8c:	48 83 ec 10          	sub    rsp,0x10
    2f90:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2f94:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f98:	48 83 c0 05          	add    rax,0x5
    2f9c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f9f:	0f b6 f0             	movzx  esi,al
    2fa2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fa6:	48 83 c0 04          	add    rax,0x4
    2faa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fad:	0f b6 c8             	movzx  ecx,al
    2fb0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fb4:	48 83 c0 03          	add    rax,0x3
    2fb8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fbb:	0f b6 d0             	movzx  edx,al
    2fbe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fc2:	48 83 c0 02          	add    rax,0x2
    2fc6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fc9:	44 0f b6 c8          	movzx  r9d,al
    2fcd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fd1:	48 83 c0 01          	add    rax,0x1
    2fd5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fd8:	44 0f b6 c0          	movzx  r8d,al
    2fdc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fe0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fe3:	0f b6 c0             	movzx  eax,al
    2fe6:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2fed:	00 00 
    2fef:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    2ff6:	48 83 ec 08          	sub    rsp,0x8
    2ffa:	56                   	push   rsi
    2ffb:	51                   	push   rcx
    2ffc:	52                   	push   rdx
    2ffd:	89 c1                	mov    ecx,eax
    2fff:	48 8d 15 b2 91 00 00 	lea    rdx,[rip+0x91b2]        # c1b8 <_IO_stdin_used+0x1b8>
    3006:	be 80 00 00 00       	mov    esi,0x80
    300b:	b8 00 00 00 00       	mov    eax,0x0
    3010:	e8 7b f4 ff ff       	call   2490 <snprintf@plt>
    3015:	48 83 c4 20          	add    rsp,0x20
    3019:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3020:	00 00 
    3022:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3028:	c9                   	leave  
    3029:	c3                   	ret    

000000000000302a <u8_ipv4_ntoa>:
    302a:	f3 0f 1e fa          	endbr64 
    302e:	55                   	push   rbp
    302f:	48 89 e5             	mov    rbp,rsp
    3032:	48 83 ec 20          	sub    rsp,0x20
    3036:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    303a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    303e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3042:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3046:	48 83 c0 03          	add    rax,0x3
    304a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    304d:	0f b6 d0             	movzx  edx,al
    3050:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3054:	48 83 c0 02          	add    rax,0x2
    3058:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    305b:	44 0f b6 c0          	movzx  r8d,al
    305f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3063:	48 83 c0 01          	add    rax,0x1
    3067:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    306a:	0f b6 f0             	movzx  esi,al
    306d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3071:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3074:	0f b6 c0             	movzx  eax,al
    3077:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    307e:	00 00 
    3080:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    3087:	48 83 ec 08          	sub    rsp,0x8
    308b:	52                   	push   rdx
    308c:	45 89 c1             	mov    r9d,r8d
    308f:	41 89 f0             	mov    r8d,esi
    3092:	89 c1                	mov    ecx,eax
    3094:	48 8d 15 3b 91 00 00 	lea    rdx,[rip+0x913b]        # c1d6 <_IO_stdin_used+0x1d6>
    309b:	be 80 00 00 00       	mov    esi,0x80
    30a0:	b8 00 00 00 00       	mov    eax,0x0
    30a5:	e8 e6 f3 ff ff       	call   2490 <snprintf@plt>
    30aa:	48 83 c4 10          	add    rsp,0x10
    30ae:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    30b5:	00 00 
    30b7:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    30bd:	c9                   	leave  
    30be:	c3                   	ret    

00000000000030bf <ipv4_ntoa>:
    30bf:	f3 0f 1e fa          	endbr64 
    30c3:	55                   	push   rbp
    30c4:	48 89 e5             	mov    rbp,rsp
    30c7:	48 83 ec 20          	sub    rsp,0x20
    30cb:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    30ce:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    30d2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    30d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30da:	48 83 c0 03          	add    rax,0x3
    30de:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30e1:	0f b6 d0             	movzx  edx,al
    30e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30e8:	48 83 c0 02          	add    rax,0x2
    30ec:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30ef:	44 0f b6 c0          	movzx  r8d,al
    30f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30f7:	48 83 c0 01          	add    rax,0x1
    30fb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30fe:	0f b6 f0             	movzx  esi,al
    3101:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3105:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3108:	0f b6 c0             	movzx  eax,al
    310b:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    3112:	00 00 
    3114:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    311b:	48 83 ec 08          	sub    rsp,0x8
    311f:	52                   	push   rdx
    3120:	45 89 c1             	mov    r9d,r8d
    3123:	41 89 f0             	mov    r8d,esi
    3126:	89 c1                	mov    ecx,eax
    3128:	48 8d 15 a7 90 00 00 	lea    rdx,[rip+0x90a7]        # c1d6 <_IO_stdin_used+0x1d6>
    312f:	be 80 00 00 00       	mov    esi,0x80
    3134:	b8 00 00 00 00       	mov    eax,0x0
    3139:	e8 52 f3 ff ff       	call   2490 <snprintf@plt>
    313e:	48 83 c4 10          	add    rsp,0x10
    3142:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3149:	00 00 
    314b:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3151:	c9                   	leave  
    3152:	c3                   	ret    

0000000000003153 <inet6_ntoa>:
    3153:	f3 0f 1e fa          	endbr64 
    3157:	55                   	push   rbp
    3158:	48 89 e5             	mov    rbp,rsp
    315b:	41 57                	push   r15
    315d:	41 56                	push   r14
    315f:	41 55                	push   r13
    3161:	41 54                	push   r12
    3163:	53                   	push   rbx
    3164:	48 83 ec 38          	sub    rsp,0x38
    3168:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    316c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3173:	00 00 
    3175:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3179:	31 c0                	xor    eax,eax
    317b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3182:	00 00 
    3184:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    318a:	ba 80 00 00 00       	mov    edx,0x80
    318f:	be 00 00 00 00       	mov    esi,0x0
    3194:	48 89 c7             	mov    rdi,rax
    3197:	e8 e4 f2 ff ff       	call   2480 <memset@plt>
    319c:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    31a3:	00 
    31a4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31a8:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    31ac:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31b0:	48 83 c0 0f          	add    rax,0xf
    31b4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31b7:	0f b6 c8             	movzx  ecx,al
    31ba:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31be:	48 83 c0 0e          	add    rax,0xe
    31c2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31c5:	0f b6 f8             	movzx  edi,al
    31c8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31cc:	48 83 c0 0d          	add    rax,0xd
    31d0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31d3:	0f b6 c0             	movzx  eax,al
    31d6:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    31d9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31dd:	48 83 c0 0c          	add    rax,0xc
    31e1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31e4:	0f b6 d8             	movzx  ebx,al
    31e7:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    31ea:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31ee:	48 83 c0 0b          	add    rax,0xb
    31f2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31f5:	44 0f b6 f8          	movzx  r15d,al
    31f9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31fd:	48 83 c0 0a          	add    rax,0xa
    3201:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3204:	44 0f b6 f0          	movzx  r14d,al
    3208:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    320c:	48 83 c0 09          	add    rax,0x9
    3210:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3213:	44 0f b6 e8          	movzx  r13d,al
    3217:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    321b:	48 83 c0 08          	add    rax,0x8
    321f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3222:	44 0f b6 e0          	movzx  r12d,al
    3226:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    322a:	48 83 c0 07          	add    rax,0x7
    322e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3231:	0f b6 d8             	movzx  ebx,al
    3234:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3238:	48 83 c0 06          	add    rax,0x6
    323c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    323f:	44 0f b6 d8          	movzx  r11d,al
    3243:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3247:	48 83 c0 05          	add    rax,0x5
    324b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    324e:	44 0f b6 d0          	movzx  r10d,al
    3252:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3256:	48 83 c0 04          	add    rax,0x4
    325a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    325d:	44 0f b6 c8          	movzx  r9d,al
    3261:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3265:	48 83 c0 03          	add    rax,0x3
    3269:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    326c:	44 0f b6 c0          	movzx  r8d,al
    3270:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3274:	48 83 c0 02          	add    rax,0x2
    3278:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    327b:	0f b6 d0             	movzx  edx,al
    327e:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    3281:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3285:	48 83 c0 01          	add    rax,0x1
    3289:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    328c:	0f b6 f0             	movzx  esi,al
    328f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3293:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3296:	0f b6 d0             	movzx  edx,al
    3299:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    32a0:	00 00 
    32a2:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    32a8:	48 83 ec 08          	sub    rsp,0x8
    32ac:	51                   	push   rcx
    32ad:	57                   	push   rdi
    32ae:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    32b1:	51                   	push   rcx
    32b2:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    32b5:	51                   	push   rcx
    32b6:	41 57                	push   r15
    32b8:	41 56                	push   r14
    32ba:	41 55                	push   r13
    32bc:	41 54                	push   r12
    32be:	53                   	push   rbx
    32bf:	41 53                	push   r11
    32c1:	41 52                	push   r10
    32c3:	41 51                	push   r9
    32c5:	41 50                	push   r8
    32c7:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    32cb:	41 89 f0             	mov    r8d,esi
    32ce:	89 d1                	mov    ecx,edx
    32d0:	48 8d 15 11 8f 00 00 	lea    rdx,[rip+0x8f11]        # c1e8 <_IO_stdin_used+0x1e8>
    32d7:	be 80 00 00 00       	mov    esi,0x80
    32dc:	48 89 c7             	mov    rdi,rax
    32df:	b8 00 00 00 00       	mov    eax,0x0
    32e4:	e8 a7 f1 ff ff       	call   2490 <snprintf@plt>
    32e9:	48 83 c4 70          	add    rsp,0x70
    32ed:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    32f4:	00 00 
    32f6:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    32fc:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    3300:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    3307:	00 00 
    3309:	74 05                	je     3310 <inet6_ntoa+0x1bd>
    330b:	e8 10 f4 ff ff       	call   2720 <__stack_chk_fail@plt>
    3310:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    3314:	5b                   	pop    rbx
    3315:	41 5c                	pop    r12
    3317:	41 5d                	pop    r13
    3319:	41 5e                	pop    r14
    331b:	41 5f                	pop    r15
    331d:	5d                   	pop    rbp
    331e:	c3                   	ret    

000000000000331f <get_formated_time>:
    331f:	f3 0f 1e fa          	endbr64 
    3323:	55                   	push   rbp
    3324:	48 89 e5             	mov    rbp,rsp
    3327:	53                   	push   rbx
    3328:	48 83 ec 58          	sub    rsp,0x58
    332c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3333:	00 00 
    3335:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3339:	31 c0                	xor    eax,eax
    333b:	bf ff 00 00 00       	mov    edi,0xff
    3340:	e8 fb f1 ff ff       	call   2540 <malloc@plt>
    3345:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3349:	bf 00 00 00 00       	mov    edi,0x0
    334e:	e8 fd f4 ff ff       	call   2850 <time@plt>
    3353:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3357:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    335b:	48 89 c7             	mov    rdi,rax
    335e:	e8 ad f4 ff ff       	call   2810 <localtime@plt>
    3363:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3366:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    336a:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    336e:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    3372:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3376:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    337a:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    337e:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    3382:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3386:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    338a:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    338e:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    3392:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3396:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    339a:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    339d:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    33a0:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    33a4:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    33a8:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    33ab:	8d 48 01             	lea    ecx,[rax+0x1]
    33ae:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    33b1:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    33b7:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    33bb:	57                   	push   rdi
    33bc:	56                   	push   rsi
    33bd:	48 8d 35 6c 8e 00 00 	lea    rsi,[rip+0x8e6c]        # c230 <_IO_stdin_used+0x230>
    33c4:	48 89 c7             	mov    rdi,rax
    33c7:	b8 00 00 00 00       	mov    eax,0x0
    33cc:	e8 2f f2 ff ff       	call   2600 <sprintf@plt>
    33d1:	48 83 c4 10          	add    rsp,0x10
    33d5:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    33d9:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    33dd:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    33e4:	00 00 
    33e6:	74 05                	je     33ed <get_formated_time+0xce>
    33e8:	e8 33 f3 ff ff       	call   2720 <__stack_chk_fail@plt>
    33ed:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    33f1:	c9                   	leave  
    33f2:	c3                   	ret    

00000000000033f3 <cb_get_formatted_time>:
    33f3:	f3 0f 1e fa          	endbr64 
    33f7:	55                   	push   rbp
    33f8:	48 89 e5             	mov    rbp,rsp
    33fb:	53                   	push   rbx
    33fc:	48 83 ec 68          	sub    rsp,0x68
    3400:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3404:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    340b:	00 00 
    340d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3411:	31 c0                	xor    eax,eax
    3413:	bf 00 00 00 00       	mov    edi,0x0
    3418:	e8 33 f4 ff ff       	call   2850 <time@plt>
    341d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3421:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    3425:	48 89 c7             	mov    rdi,rax
    3428:	e8 e3 f3 ff ff       	call   2810 <localtime@plt>
    342d:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3430:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    3434:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3438:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    343c:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3440:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3444:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3448:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    344c:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3450:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3454:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3458:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    345c:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3460:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3464:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3467:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    346a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    346e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3472:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3475:	8d 48 01             	lea    ecx,[rax+0x1]
    3478:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    347b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3481:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3485:	57                   	push   rdi
    3486:	56                   	push   rsi
    3487:	48 8d 35 a2 8d 00 00 	lea    rsi,[rip+0x8da2]        # c230 <_IO_stdin_used+0x230>
    348e:	48 89 c7             	mov    rdi,rax
    3491:	b8 00 00 00 00       	mov    eax,0x0
    3496:	e8 65 f1 ff ff       	call   2600 <sprintf@plt>
    349b:	48 83 c4 10          	add    rsp,0x10
    349f:	90                   	nop
    34a0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34a4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    34ab:	00 00 
    34ad:	74 05                	je     34b4 <cb_get_formatted_time+0xc1>
    34af:	e8 6c f2 ff ff       	call   2720 <__stack_chk_fail@plt>
    34b4:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    34b8:	c9                   	leave  
    34b9:	c3                   	ret    

00000000000034ba <strloc>:
    34ba:	f3 0f 1e fa          	endbr64 
    34be:	55                   	push   rbp
    34bf:	48 89 e5             	mov    rbp,rsp
    34c2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    34c6:	89 f0                	mov    eax,esi
    34c8:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    34cb:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    34d2:	eb 1e                	jmp    34f2 <strloc+0x38>
    34d4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    34d7:	48 63 d0             	movsxd rdx,eax
    34da:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34de:	48 01 d0             	add    rax,rdx
    34e1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    34e4:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    34e7:	75 05                	jne    34ee <strloc+0x34>
    34e9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    34ec:	eb 1d                	jmp    350b <strloc+0x51>
    34ee:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    34f2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    34f5:	48 63 d0             	movsxd rdx,eax
    34f8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34fc:	48 01 d0             	add    rax,rdx
    34ff:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3502:	84 c0                	test   al,al
    3504:	75 ce                	jne    34d4 <strloc+0x1a>
    3506:	b8 ff ff ff ff       	mov    eax,0xffffffff
    350b:	5d                   	pop    rbp
    350c:	c3                   	ret    

000000000000350d <fail>:
    350d:	f3 0f 1e fa          	endbr64 
    3511:	55                   	push   rbp
    3512:	48 89 e5             	mov    rbp,rsp
    3515:	48 83 ec 10          	sub    rsp,0x10
    3519:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    351d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    3521:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    3525:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3529:	48 89 c6             	mov    rsi,rax
    352c:	48 8d 3d 19 8d 00 00 	lea    rdi,[rip+0x8d19]        # c24c <_IO_stdin_used+0x24c>
    3533:	b8 00 00 00 00       	mov    eax,0x0
    3538:	e8 33 ef ff ff       	call   2470 <printf@plt>
    353d:	90                   	nop
    353e:	c9                   	leave  
    353f:	c3                   	ret    

0000000000003540 <char_is_printable>:
    3540:	f3 0f 1e fa          	endbr64 
    3544:	55                   	push   rbp
    3545:	48 89 e5             	mov    rbp,rsp
    3548:	89 f8                	mov    eax,edi
    354a:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    354d:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    3551:	7f 07                	jg     355a <char_is_printable+0x1a>
    3553:	b8 00 00 00 00       	mov    eax,0x0
    3558:	eb 05                	jmp    355f <char_is_printable+0x1f>
    355a:	b8 01 00 00 00       	mov    eax,0x1
    355f:	5d                   	pop    rbp
    3560:	c3                   	ret    

0000000000003561 <test_string_arr_print>:
    3561:	f3 0f 1e fa          	endbr64 
    3565:	55                   	push   rbp
    3566:	48 89 e5             	mov    rbp,rsp
    3569:	53                   	push   rbx
    356a:	48 83 ec 28          	sub    rsp,0x28
    356e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    3572:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3579:	eb 2c                	jmp    35a7 <test_string_arr_print+0x46>
    357b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    357e:	48 63 d0             	movsxd rdx,eax
    3581:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    3585:	48 01 d0             	add    rax,rdx
    3588:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    358b:	0f be c0             	movsx  eax,al
    358e:	89 c7                	mov    edi,eax
    3590:	e8 ab ff ff ff       	call   3540 <char_is_printable>
    3595:	83 f0 01             	xor    eax,0x1
    3598:	84 c0                	test   al,al
    359a:	74 07                	je     35a3 <test_string_arr_print+0x42>
    359c:	b8 00 00 00 00       	mov    eax,0x0
    35a1:	eb 20                	jmp    35c3 <test_string_arr_print+0x62>
    35a3:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    35a7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    35aa:	48 63 d8             	movsxd rbx,eax
    35ad:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    35b1:	48 89 c7             	mov    rdi,rax
    35b4:	e8 27 f0 ff ff       	call   25e0 <strlen@plt>
    35b9:	48 39 c3             	cmp    rbx,rax
    35bc:	72 bd                	jb     357b <test_string_arr_print+0x1a>
    35be:	b8 01 00 00 00       	mov    eax,0x1
    35c3:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    35c7:	c9                   	leave  
    35c8:	c3                   	ret    

00000000000035c9 <ipv4pktmgr>:
    35c9:	f3 0f 1e fa          	endbr64 
    35cd:	55                   	push   rbp
    35ce:	48 89 e5             	mov    rbp,rsp
    35d1:	48 81 ec d0 04 00 00 	sub    rsp,0x4d0
    35d8:	48 89 bd 38 fb ff ff 	mov    QWORD PTR [rbp-0x4c8],rdi
    35df:	48 89 b5 30 fb ff ff 	mov    QWORD PTR [rbp-0x4d0],rsi
    35e6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    35ed:	00 00 
    35ef:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    35f3:	31 c0                	xor    eax,eax
    35f5:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    35fc:	48 83 c0 0e          	add    rax,0xe
    3600:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    3607:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    360e:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    3611:	89 c7                	mov    edi,eax
    3613:	e8 08 f0 ff ff       	call   2620 <ntohl@plt>
    3618:	89 85 7c fb ff ff    	mov    DWORD PTR [rbp-0x484],eax
    361e:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3625:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    3628:	89 c7                	mov    edi,eax
    362a:	e8 f1 ef ff ff       	call   2620 <ntohl@plt>
    362f:	89 85 78 fb ff ff    	mov    DWORD PTR [rbp-0x488],eax
    3635:	8b 95 78 fb ff ff    	mov    edx,DWORD PTR [rbp-0x488]
    363b:	8b 05 87 69 10 00    	mov    eax,DWORD PTR [rip+0x106987]        # 109fc8 <homenetmask>
    3641:	21 d0                	and    eax,edx
    3643:	89 85 4c fb ff ff    	mov    DWORD PTR [rbp-0x4b4],eax
    3649:	8b 95 7c fb ff ff    	mov    edx,DWORD PTR [rbp-0x484]
    364f:	8b 05 73 69 10 00    	mov    eax,DWORD PTR [rip+0x106973]        # 109fc8 <homenetmask>
    3655:	21 d0                	and    eax,edx
    3657:	89 85 50 fb ff ff    	mov    DWORD PTR [rbp-0x4b0],eax
    365d:	8b 05 61 69 10 00    	mov    eax,DWORD PTR [rip+0x106961]        # 109fc4 <homenet>
    3663:	39 85 4c fb ff ff    	cmp    DWORD PTR [rbp-0x4b4],eax
    3669:	75 0c                	jne    3677 <ipv4pktmgr+0xae>
    366b:	c7 85 80 fb ff ff 45 	mov    DWORD PTR [rbp-0x480],0x45
    3672:	00 00 00 
    3675:	eb 24                	jmp    369b <ipv4pktmgr+0xd2>
    3677:	8b 05 47 69 10 00    	mov    eax,DWORD PTR [rip+0x106947]        # 109fc4 <homenet>
    367d:	39 85 50 fb ff ff    	cmp    DWORD PTR [rbp-0x4b0],eax
    3683:	75 0c                	jne    3691 <ipv4pktmgr+0xc8>
    3685:	c7 85 80 fb ff ff 46 	mov    DWORD PTR [rbp-0x480],0x46
    368c:	00 00 00 
    368f:	eb 0a                	jmp    369b <ipv4pktmgr+0xd2>
    3691:	c7 85 80 fb ff ff 47 	mov    DWORD PTR [rbp-0x480],0x47
    3698:	00 00 00 
    369b:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    36a2:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    36a5:	89 85 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],eax
    36ab:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    36b2:	48 89 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],rax
    36b9:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    36c0:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    36c3:	48 8b 95 38 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4c8]
    36ca:	48 83 c2 0e          	add    rdx,0xe
    36ce:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    36d1:	83 e2 0f             	and    edx,0xf
    36d4:	0f b6 d2             	movzx  edx,dl
    36d7:	c1 e2 02             	shl    edx,0x2
    36da:	29 d0                	sub    eax,edx
    36dc:	83 e8 0e             	sub    eax,0xe
    36df:	89 85 54 fb ff ff    	mov    DWORD PTR [rbp-0x4ac],eax
    36e5:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    36ec:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    36ef:	89 c7                	mov    edi,eax
    36f1:	e8 c9 f9 ff ff       	call   30bf <ipv4_ntoa>
    36f6:	48 89 c1             	mov    rcx,rax
    36f9:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3700:	ba 10 00 00 00       	mov    edx,0x10
    3705:	48 89 ce             	mov    rsi,rcx
    3708:	48 89 c7             	mov    rdi,rax
    370b:	e8 90 f0 ff ff       	call   27a0 <strncpy@plt>
    3710:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3717:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    371a:	89 c7                	mov    edi,eax
    371c:	e8 9e f9 ff ff       	call   30bf <ipv4_ntoa>
    3721:	48 89 c1             	mov    rcx,rax
    3724:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    372b:	ba 10 00 00 00       	mov    edx,0x10
    3730:	48 89 ce             	mov    rsi,rcx
    3733:	48 89 c7             	mov    rdi,rax
    3736:	e8 65 f0 ff ff       	call   27a0 <strncpy@plt>
    373b:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3742:	48 89 c7             	mov    rdi,rax
    3745:	e8 4b 41 00 00       	call   7895 <init_member>
    374a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3751:	48 89 c7             	mov    rdi,rax
    3754:	e8 3c 41 00 00       	call   7895 <init_member>
    3759:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3760:	48 89 c7             	mov    rdi,rax
    3763:	e8 84 20 00 00       	call   57ec <is_blocked_ipv4>
    3768:	84 c0                	test   al,al
    376a:	74 44                	je     37b0 <ipv4pktmgr+0x1e7>
    376c:	b8 00 00 00 00       	mov    eax,0x0
    3771:	e8 a9 fb ff ff       	call   331f <get_formated_time>
    3776:	48 89 c6             	mov    rsi,rax
    3779:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3780:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3787:	48 89 d1             	mov    rcx,rdx
    378a:	48 89 f2             	mov    rdx,rsi
    378d:	48 8d 35 c4 8a 00 00 	lea    rsi,[rip+0x8ac4]        # c258 <_IO_stdin_used+0x258>
    3794:	48 89 c7             	mov    rdi,rax
    3797:	b8 00 00 00 00       	mov    eax,0x0
    379c:	e8 5f ee ff ff       	call   2600 <sprintf@plt>
    37a1:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37a8:	48 89 c7             	mov    rdi,rax
    37ab:	e8 c6 58 00 00       	call   9076 <saprintf>
    37b0:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37b7:	48 89 c7             	mov    rdi,rax
    37ba:	e8 2d 20 00 00       	call   57ec <is_blocked_ipv4>
    37bf:	84 c0                	test   al,al
    37c1:	74 44                	je     3807 <ipv4pktmgr+0x23e>
    37c3:	b8 00 00 00 00       	mov    eax,0x0
    37c8:	e8 52 fb ff ff       	call   331f <get_formated_time>
    37cd:	48 89 c6             	mov    rsi,rax
    37d0:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    37d7:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37de:	48 89 d1             	mov    rcx,rdx
    37e1:	48 89 f2             	mov    rdx,rsi
    37e4:	48 8d 35 9d 8a 00 00 	lea    rsi,[rip+0x8a9d]        # c288 <_IO_stdin_used+0x288>
    37eb:	48 89 c7             	mov    rdi,rax
    37ee:	b8 00 00 00 00       	mov    eax,0x0
    37f3:	e8 08 ee ff ff       	call   2600 <sprintf@plt>
    37f8:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37ff:	48 89 c7             	mov    rdi,rax
    3802:	e8 6f 58 00 00       	call   9076 <saprintf>
    3807:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    380e:	48 89 85 68 fb ff ff 	mov    QWORD PTR [rbp-0x498],rax
    3815:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    381c:	48 89 85 70 fb ff ff 	mov    QWORD PTR [rbp-0x490],rax
    3823:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    382a:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    382e:	66 83 f8 20          	cmp    ax,0x20
    3832:	74 11                	je     3845 <ipv4pktmgr+0x27c>
    3834:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    383b:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    383f:	66 3d 02 01          	cmp    ax,0x102
    3843:	75 66                	jne    38ab <ipv4pktmgr+0x2e2>
    3845:	48 8d 35 64 8a 00 00 	lea    rsi,[rip+0x8a64]        # c2b0 <_IO_stdin_used+0x2b0>
    384c:	48 8d 3d 62 8a 00 00 	lea    rdi,[rip+0x8a62]        # c2b5 <_IO_stdin_used+0x2b5>
    3853:	b8 00 00 00 00       	mov    eax,0x0
    3858:	e8 13 ec ff ff       	call   2470 <printf@plt>
    385d:	0f b6 05 00 67 10 00 	movzx  eax,BYTE PTR [rip+0x106700]        # 109f64 <packet_print>
    3864:	84 c0                	test   al,al
    3866:	74 1a                	je     3882 <ipv4pktmgr+0x2b9>
    3868:	48 8d 35 54 8a 00 00 	lea    rsi,[rip+0x8a54]        # c2c3 <_IO_stdin_used+0x2c3>
    386f:	48 8d 3d 52 8a 00 00 	lea    rdi,[rip+0x8a52]        # c2c8 <_IO_stdin_used+0x2c8>
    3876:	b8 00 00 00 00       	mov    eax,0x0
    387b:	e8 f0 eb ff ff       	call   2470 <printf@plt>
    3880:	eb 29                	jmp    38ab <ipv4pktmgr+0x2e2>
    3882:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3889:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3890:	48 8d 0d 2c 8a 00 00 	lea    rcx,[rip+0x8a2c]        # c2c3 <_IO_stdin_used+0x2c3>
    3897:	48 89 c6             	mov    rsi,rax
    389a:	48 8d 3d 2a 8a 00 00 	lea    rdi,[rip+0x8a2a]        # c2cb <_IO_stdin_used+0x2cb>
    38a1:	b8 00 00 00 00       	mov    eax,0x0
    38a6:	e8 c5 eb ff ff       	call   2470 <printf@plt>
    38ab:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    38b2:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    38b6:	0f b6 c0             	movzx  eax,al
    38b9:	83 f8 11             	cmp    eax,0x11
    38bc:	0f 84 b8 00 00 00    	je     397a <ipv4pktmgr+0x3b1>
    38c2:	83 f8 11             	cmp    eax,0x11
    38c5:	0f 8f db 00 00 00    	jg     39a6 <ipv4pktmgr+0x3dd>
    38cb:	83 f8 06             	cmp    eax,0x6
    38ce:	74 7e                	je     394e <ipv4pktmgr+0x385>
    38d0:	83 f8 06             	cmp    eax,0x6
    38d3:	0f 8f cd 00 00 00    	jg     39a6 <ipv4pktmgr+0x3dd>
    38d9:	83 f8 01             	cmp    eax,0x1
    38dc:	74 0a                	je     38e8 <ipv4pktmgr+0x31f>
    38de:	83 f8 02             	cmp    eax,0x2
    38e1:	74 2d                	je     3910 <ipv4pktmgr+0x347>
    38e3:	e9 be 00 00 00       	jmp    39a6 <ipv4pktmgr+0x3dd>
    38e8:	c7 85 8c fb ff ff 80 	mov    DWORD PTR [rbp-0x474],0x80
    38ef:	00 00 00 
    38f2:	48 8d 95 60 fb ff ff 	lea    rdx,[rbp-0x4a0]
    38f9:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    3900:	48 89 d6             	mov    rsi,rdx
    3903:	48 89 c7             	mov    rdi,rax
    3906:	e8 40 02 00 00       	call   3b4b <ip4_icmp_decode>
    390b:	e9 c7 00 00 00       	jmp    39d7 <ipv4pktmgr+0x40e>
    3910:	c7 85 8c fb ff ff ff 	mov    DWORD PTR [rbp-0x474],0xffffffff
    3917:	ff ff ff 
    391a:	8b 05 20 d7 00 00    	mov    eax,DWORD PTR [rip+0xd720]        # 11040 <total_conversations>
    3920:	83 e8 01             	sub    eax,0x1
    3923:	89 05 17 d7 00 00    	mov    DWORD PTR [rip+0xd717],eax        # 11040 <total_conversations>
    3929:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    3930:	48 8b 8d 68 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x498]
    3937:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    393e:	48 89 ce             	mov    rsi,rcx
    3941:	48 89 c7             	mov    rdi,rax
    3944:	e8 1c 14 00 00       	call   4d65 <ip4_igmp_decode>
    3949:	e9 89 00 00 00       	jmp    39d7 <ipv4pktmgr+0x40e>
    394e:	c7 85 8c fb ff ff 7e 	mov    DWORD PTR [rbp-0x474],0x7e
    3955:	00 00 00 
    3958:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    395f:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    3966:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    396d:	48 89 ce             	mov    rsi,rcx
    3970:	48 89 c7             	mov    rdi,rax
    3973:	e8 17 0a 00 00       	call   438f <ip4_tcp_decode>
    3978:	eb 5d                	jmp    39d7 <ipv4pktmgr+0x40e>
    397a:	c7 85 8c fb ff ff 7f 	mov    DWORD PTR [rbp-0x474],0x7f
    3981:	00 00 00 
    3984:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    398b:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    3992:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    3999:	48 89 ce             	mov    rsi,rcx
    399c:	48 89 c7             	mov    rdi,rax
    399f:	e8 6c 12 00 00       	call   4c10 <ip4_udp_decode>
    39a4:	eb 31                	jmp    39d7 <ipv4pktmgr+0x40e>
    39a6:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    39ad:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    39b1:	0f b6 c8             	movzx  ecx,al
    39b4:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    39bb:	48 8b 85 68 fb ff ff 	mov    rax,QWORD PTR [rbp-0x498]
    39c2:	48 89 c6             	mov    rsi,rax
    39c5:	48 8d 3d 0c 89 00 00 	lea    rdi,[rip+0x890c]        # c2d8 <_IO_stdin_used+0x2d8>
    39cc:	b8 00 00 00 00       	mov    eax,0x0
    39d1:	e8 9a ea ff ff       	call   2470 <printf@plt>
    39d6:	90                   	nop
    39d7:	90                   	nop
    39d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    39dc:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    39e3:	00 00 
    39e5:	74 05                	je     39ec <ipv4pktmgr+0x423>
    39e7:	e8 34 ed ff ff       	call   2720 <__stack_chk_fail@plt>
    39ec:	c9                   	leave  
    39ed:	c3                   	ret    

00000000000039ee <ip6_icmp_decode>:
    39ee:	f3 0f 1e fa          	endbr64 
    39f2:	55                   	push   rbp
    39f3:	48 89 e5             	mov    rbp,rsp
    39f6:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    39fa:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    39fe:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3a02:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3a06:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3a0d:	00 00 
    3a0f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3a13:	31 c0                	xor    eax,eax
    3a15:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3a19:	48 83 c0 36          	add    rax,0x36
    3a1d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3a21:	0f b6 05 3c 65 10 00 	movzx  eax,BYTE PTR [rip+0x10653c]        # 109f64 <packet_print>
    3a28:	84 c0                	test   al,al
    3a2a:	0f 84 04 01 00 00    	je     3b34 <ip6_icmp_decode+0x146>
    3a30:	48 8d 35 c9 88 00 00 	lea    rsi,[rip+0x88c9]        # c300 <_IO_stdin_used+0x300>
    3a37:	48 8d 3d c8 88 00 00 	lea    rdi,[rip+0x88c8]        # c306 <_IO_stdin_used+0x306>
    3a3e:	b8 00 00 00 00       	mov    eax,0x0
    3a43:	e8 28 ea ff ff       	call   2470 <printf@plt>
    3a48:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3a4c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3a50:	48 89 c6             	mov    rsi,rax
    3a53:	48 8d 3d af 88 00 00 	lea    rdi,[rip+0x88af]        # c309 <_IO_stdin_used+0x309>
    3a5a:	b8 00 00 00 00       	mov    eax,0x0
    3a5f:	e8 0c ea ff ff       	call   2470 <printf@plt>
    3a64:	48 8d 3d ad 88 00 00 	lea    rdi,[rip+0x88ad]        # c318 <_IO_stdin_used+0x318>
    3a6b:	b8 00 00 00 00       	mov    eax,0x0
    3a70:	e8 fb e9 ff ff       	call   2470 <printf@plt>
    3a75:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3a79:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3a7c:	0f b6 c0             	movzx  eax,al
    3a7f:	3d 8f 00 00 00       	cmp    eax,0x8f
    3a84:	74 68                	je     3aee <ip6_icmp_decode+0x100>
    3a86:	3d 8f 00 00 00       	cmp    eax,0x8f
    3a8b:	0f 8f 8b 00 00 00    	jg     3b1c <ip6_icmp_decode+0x12e>
    3a91:	3d 87 00 00 00       	cmp    eax,0x87
    3a96:	74 77                	je     3b0f <ip6_icmp_decode+0x121>
    3a98:	3d 87 00 00 00       	cmp    eax,0x87
    3a9d:	7f 7d                	jg     3b1c <ip6_icmp_decode+0x12e>
    3a9f:	3d 82 00 00 00       	cmp    eax,0x82
    3aa4:	74 56                	je     3afc <ip6_icmp_decode+0x10e>
    3aa6:	3d 85 00 00 00       	cmp    eax,0x85
    3aab:	75 6f                	jne    3b1c <ip6_icmp_decode+0x12e>
    3aad:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3ab1:	48 83 c0 0a          	add    rax,0xa
    3ab5:	48 89 c7             	mov    rdi,rax
    3ab8:	e8 19 f4 ff ff       	call   2ed6 <mac_ntoa>
    3abd:	48 89 c1             	mov    rcx,rax
    3ac0:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3ac4:	ba 40 00 00 00       	mov    edx,0x40
    3ac9:	48 89 ce             	mov    rsi,rcx
    3acc:	48 89 c7             	mov    rdi,rax
    3acf:	e8 cc ec ff ff       	call   27a0 <strncpy@plt>
    3ad4:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3ad8:	48 89 c6             	mov    rsi,rax
    3adb:	48 8d 3d 3f 88 00 00 	lea    rdi,[rip+0x883f]        # c321 <_IO_stdin_used+0x321>
    3ae2:	b8 00 00 00 00       	mov    eax,0x0
    3ae7:	e8 84 e9 ff ff       	call   2470 <printf@plt>
    3aec:	eb 2e                	jmp    3b1c <ip6_icmp_decode+0x12e>
    3aee:	48 8d 3d 4b 88 00 00 	lea    rdi,[rip+0x884b]        # c340 <_IO_stdin_used+0x340>
    3af5:	e8 c6 e9 ff ff       	call   24c0 <puts@plt>
    3afa:	eb 20                	jmp    3b1c <ip6_icmp_decode+0x12e>
    3afc:	48 8d 3d 62 88 00 00 	lea    rdi,[rip+0x8862]        # c365 <_IO_stdin_used+0x365>
    3b03:	b8 00 00 00 00       	mov    eax,0x0
    3b08:	e8 63 e9 ff ff       	call   2470 <printf@plt>
    3b0d:	eb 0d                	jmp    3b1c <ip6_icmp_decode+0x12e>
    3b0f:	48 8d 3d 69 88 00 00 	lea    rdi,[rip+0x8869]        # c37f <_IO_stdin_used+0x37f>
    3b16:	e8 a5 e9 ff ff       	call   24c0 <puts@plt>
    3b1b:	90                   	nop
    3b1c:	48 8d 35 72 88 00 00 	lea    rsi,[rip+0x8872]        # c395 <_IO_stdin_used+0x395>
    3b23:	48 8d 3d dc 87 00 00 	lea    rdi,[rip+0x87dc]        # c306 <_IO_stdin_used+0x306>
    3b2a:	b8 00 00 00 00       	mov    eax,0x0
    3b2f:	e8 3c e9 ff ff       	call   2470 <printf@plt>
    3b34:	90                   	nop
    3b35:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3b39:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3b40:	00 00 
    3b42:	74 05                	je     3b49 <ip6_icmp_decode+0x15b>
    3b44:	e8 d7 eb ff ff       	call   2720 <__stack_chk_fail@plt>
    3b49:	c9                   	leave  
    3b4a:	c3                   	ret    

0000000000003b4b <ip4_icmp_decode>:
    3b4b:	f3 0f 1e fa          	endbr64 
    3b4f:	55                   	push   rbp
    3b50:	48 89 e5             	mov    rbp,rsp
    3b53:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3b5a:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3b61:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3b68:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3b6f:	00 00 
    3b71:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3b75:	31 c0                	xor    eax,eax
    3b77:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3b7e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3b82:	ba 5e 00 00 00       	mov    edx,0x5e
    3b87:	be 01 00 00 00       	mov    esi,0x1
    3b8c:	48 89 c7             	mov    rdi,rax
    3b8f:	e8 d0 12 00 00       	call   4e64 <add_ip_addr_or_inc_counter>
    3b94:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3b9b:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3b9f:	ba 5e 00 00 00       	mov    edx,0x5e
    3ba4:	be 00 00 00 00       	mov    esi,0x0
    3ba9:	48 89 c7             	mov    rdi,rax
    3bac:	e8 b3 12 00 00       	call   4e64 <add_ip_addr_or_inc_counter>
    3bb1:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bb8:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3bbc:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3bc3:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bca:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3bce:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3bd5:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3bdc:	48 83 c0 22          	add    rax,0x22
    3be0:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3be7:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3bee:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3bf2:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bf9:	48 89 10             	mov    QWORD PTR [rax],rdx
    3bfc:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c03:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3c0a:	48 89 50 58          	mov    QWORD PTR [rax+0x58],rdx
    3c0e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c15:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c18:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3c1e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c25:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c28:	8d 50 d6             	lea    edx,[rax-0x2a]
    3c2b:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c32:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3c35:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3c3c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3c3f:	3c 08                	cmp    al,0x8
    3c41:	0f 85 55 01 00 00    	jne    3d9c <ip4_icmp_decode+0x251>
    3c47:	8b 05 3b d4 00 00    	mov    eax,DWORD PTR [rip+0xd43b]        # 11088 <strict_nmap_host_alive_check>
    3c4d:	83 f8 01             	cmp    eax,0x1
    3c50:	0f 85 46 01 00 00    	jne    3d9c <ip4_icmp_decode+0x251>
    3c56:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c5d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c61:	48 89 c7             	mov    rdi,rax
    3c64:	e8 ba 3b 00 00       	call   7823 <member_exists>
    3c69:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3c6f:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3c76:	0f 84 83 00 00 00    	je     3cff <ip4_icmp_decode+0x1b4>
    3c7c:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3c82:	48 63 d0             	movsxd rdx,eax
    3c85:	48 89 d0             	mov    rax,rdx
    3c88:	48 c1 e0 02          	shl    rax,0x2
    3c8c:	48 01 d0             	add    rax,rdx
    3c8f:	48 c1 e0 03          	shl    rax,0x3
    3c93:	48 01 d0             	add    rax,rdx
    3c96:	48 c1 e0 04          	shl    rax,0x4
    3c9a:	48 8d 15 7f f8 0e 00 	lea    rdx,[rip+0xef87f]        # f3520 <watchlist>
    3ca1:	48 01 d0             	add    rax,rdx
    3ca4:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3cab:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cb2:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3cb5:	85 c0                	test   eax,eax
    3cb7:	0f 85 a8 02 00 00    	jne    3f65 <ip4_icmp_decode+0x41a>
    3cbd:	bf 00 00 00 00       	mov    edi,0x0
    3cc2:	e8 89 eb ff ff       	call   2850 <time@plt>
    3cc7:	48 89 c2             	mov    rdx,rax
    3cca:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cd1:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3cd5:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cdc:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3ce3:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cea:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3ced:	8d 50 01             	lea    edx,[rax+0x1]
    3cf0:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cf7:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3cfa:	e9 66 02 00 00       	jmp    3f65 <ip4_icmp_decode+0x41a>
    3cff:	8b 05 13 d3 00 00    	mov    eax,DWORD PTR [rip+0xd313]        # 11018 <watchlist_num>
    3d05:	83 c0 01             	add    eax,0x1
    3d08:	89 05 0a d3 00 00    	mov    DWORD PTR [rip+0xd30a],eax        # 11018 <watchlist_num>
    3d0e:	8b 05 04 d3 00 00    	mov    eax,DWORD PTR [rip+0xd304]        # 11018 <watchlist_num>
    3d14:	48 63 d0             	movsxd rdx,eax
    3d17:	48 89 d0             	mov    rax,rdx
    3d1a:	48 c1 e0 02          	shl    rax,0x2
    3d1e:	48 01 d0             	add    rax,rdx
    3d21:	48 c1 e0 03          	shl    rax,0x3
    3d25:	48 01 d0             	add    rax,rdx
    3d28:	48 c1 e0 04          	shl    rax,0x4
    3d2c:	48 8d 15 ed f7 0e 00 	lea    rdx,[rip+0xef7ed]        # f3520 <watchlist>
    3d33:	48 01 d0             	add    rax,rdx
    3d36:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3d3d:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d44:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3d48:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3d4f:	48 89 c6             	mov    rsi,rax
    3d52:	48 89 d7             	mov    rdi,rdx
    3d55:	e8 f6 e9 ff ff       	call   2750 <strcpy@plt>
    3d5a:	bf 00 00 00 00       	mov    edi,0x0
    3d5f:	e8 ec ea ff ff       	call   2850 <time@plt>
    3d64:	48 89 c2             	mov    rdx,rax
    3d67:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d6e:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d72:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d79:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3d80:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d87:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d8a:	8d 50 01             	lea    edx,[rax+0x1]
    3d8d:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d94:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3d97:	e9 c9 01 00 00       	jmp    3f65 <ip4_icmp_decode+0x41a>
    3d9c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3da3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3da6:	3c 0d                	cmp    al,0xd
    3da8:	0f 85 ba 01 00 00    	jne    3f68 <ip4_icmp_decode+0x41d>
    3dae:	8b 05 d0 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2d0]        # 11084 <strict_icmp_timestamp_req>
    3db4:	83 f8 01             	cmp    eax,0x1
    3db7:	74 0f                	je     3dc8 <ip4_icmp_decode+0x27d>
    3db9:	8b 05 c9 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2c9]        # 11088 <strict_nmap_host_alive_check>
    3dbf:	83 f8 01             	cmp    eax,0x1
    3dc2:	0f 85 a0 01 00 00    	jne    3f68 <ip4_icmp_decode+0x41d>
    3dc8:	8b 05 b6 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2b6]        # 11084 <strict_icmp_timestamp_req>
    3dce:	85 c0                	test   eax,eax
    3dd0:	74 22                	je     3df4 <ip4_icmp_decode+0x2a9>
    3dd2:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3dd9:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3de0:	48 89 c6             	mov    rsi,rax
    3de3:	48 8d 3d b6 85 00 00 	lea    rdi,[rip+0x85b6]        # c3a0 <_IO_stdin_used+0x3a0>
    3dea:	b8 00 00 00 00       	mov    eax,0x0
    3def:	e8 7c e6 ff ff       	call   2470 <printf@plt>
    3df4:	8b 05 8e d2 00 00    	mov    eax,DWORD PTR [rip+0xd28e]        # 11088 <strict_nmap_host_alive_check>
    3dfa:	85 c0                	test   eax,eax
    3dfc:	0f 84 66 01 00 00    	je     3f68 <ip4_icmp_decode+0x41d>
    3e02:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e09:	48 89 c7             	mov    rdi,rax
    3e0c:	e8 12 3a 00 00       	call   7823 <member_exists>
    3e11:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3e17:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3e1e:	0f 84 44 01 00 00    	je     3f68 <ip4_icmp_decode+0x41d>
    3e24:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3e2a:	48 63 d0             	movsxd rdx,eax
    3e2d:	48 89 d0             	mov    rax,rdx
    3e30:	48 c1 e0 02          	shl    rax,0x2
    3e34:	48 01 d0             	add    rax,rdx
    3e37:	48 c1 e0 03          	shl    rax,0x3
    3e3b:	48 01 d0             	add    rax,rdx
    3e3e:	48 c1 e0 04          	shl    rax,0x4
    3e42:	48 8d 15 d7 f6 0e 00 	lea    rdx,[rip+0xef6d7]        # f3520 <watchlist>
    3e49:	48 01 d0             	add    rax,rdx
    3e4c:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3e53:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e5a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e5d:	83 f8 03             	cmp    eax,0x3
    3e60:	0f 85 05 01 00 00    	jne    3f6b <ip4_icmp_decode+0x420>
    3e66:	bf 00 00 00 00       	mov    edi,0x0
    3e6b:	e8 e0 e9 ff ff       	call   2850 <time@plt>
    3e70:	48 89 c2             	mov    rdx,rax
    3e73:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e7a:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3e7e:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e85:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3e89:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e90:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3e94:	48 89 d0             	mov    rax,rdx
    3e97:	48 29 c8             	sub    rax,rcx
    3e9a:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3ea0:	0f 87 c2 00 00 00    	ja     3f68 <ip4_icmp_decode+0x41d>
    3ea6:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3ead:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3eb4:	48 89 c6             	mov    rsi,rax
    3eb7:	48 8d 3d 2a 85 00 00 	lea    rdi,[rip+0x852a]        # c3e8 <_IO_stdin_used+0x3e8>
    3ebe:	b8 00 00 00 00       	mov    eax,0x0
    3ec3:	e8 a8 e5 ff ff       	call   2470 <printf@plt>
    3ec8:	48 8b 05 61 d1 00 00 	mov    rax,QWORD PTR [rip+0xd161]        # 11030 <def_log_file>
    3ecf:	48 8d 35 7c 85 00 00 	lea    rsi,[rip+0x857c]        # c452 <_IO_stdin_used+0x452>
    3ed6:	48 89 c7             	mov    rdi,rax
    3ed9:	e8 72 e6 ff ff       	call   2550 <fopen@plt>
    3ede:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3ee5:	b8 00 00 00 00       	mov    eax,0x0
    3eea:	e8 30 f4 ff ff       	call   331f <get_formated_time>
    3eef:	48 89 c6             	mov    rsi,rax
    3ef2:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3ef9:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3f00:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f07:	49 89 f0             	mov    r8,rsi
    3f0a:	48 8d 35 47 85 00 00 	lea    rsi,[rip+0x8547]        # c458 <_IO_stdin_used+0x458>
    3f11:	48 89 c7             	mov    rdi,rax
    3f14:	b8 00 00 00 00       	mov    eax,0x0
    3f19:	e8 e2 e6 ff ff       	call   2600 <sprintf@plt>
    3f1e:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3f25:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f2c:	48 89 d6             	mov    rsi,rdx
    3f2f:	48 89 c7             	mov    rdi,rax
    3f32:	e8 39 e7 ff ff       	call   2670 <fputs@plt>
    3f37:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3f3e:	48 89 c7             	mov    rdi,rax
    3f41:	e8 4a e8 ff ff       	call   2790 <fclose@plt>
    3f46:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f4d:	48 83 c0 28          	add    rax,0x28
    3f51:	ba 28 00 00 00       	mov    edx,0x28
    3f56:	be 00 00 00 00       	mov    esi,0x0
    3f5b:	48 89 c7             	mov    rdi,rax
    3f5e:	e8 1d e5 ff ff       	call   2480 <memset@plt>
    3f63:	eb 07                	jmp    3f6c <ip4_icmp_decode+0x421>
    3f65:	90                   	nop
    3f66:	eb 04                	jmp    3f6c <ip4_icmp_decode+0x421>
    3f68:	90                   	nop
    3f69:	eb 01                	jmp    3f6c <ip4_icmp_decode+0x421>
    3f6b:	90                   	nop
    3f6c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3f73:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    3f7a:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3f81:	48 89 c7             	mov    rdi,rax
    3f84:	e8 dc 23 00 00       	call   6365 <rulemgr>
    3f89:	0f b6 05 d4 5f 10 00 	movzx  eax,BYTE PTR [rip+0x105fd4]        # 109f64 <packet_print>
    3f90:	84 c0                	test   al,al
    3f92:	0f 84 e0 03 00 00    	je     4378 <ip4_icmp_decode+0x82d>
    3f98:	48 8d 35 61 83 00 00 	lea    rsi,[rip+0x8361]        # c300 <_IO_stdin_used+0x300>
    3f9f:	48 8d 3d 60 83 00 00 	lea    rdi,[rip+0x8360]        # c306 <_IO_stdin_used+0x306>
    3fa6:	b8 00 00 00 00       	mov    eax,0x0
    3fab:	e8 c0 e4 ff ff       	call   2470 <printf@plt>
    3fb0:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3fb7:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3fbe:	48 89 c6             	mov    rsi,rax
    3fc1:	48 8d 3d 00 85 00 00 	lea    rdi,[rip+0x8500]        # c4c8 <_IO_stdin_used+0x4c8>
    3fc8:	b8 00 00 00 00       	mov    eax,0x0
    3fcd:	e8 9e e4 ff ff       	call   2470 <printf@plt>
    3fd2:	48 8d 3d fe 84 00 00 	lea    rdi,[rip+0x84fe]        # c4d7 <_IO_stdin_used+0x4d7>
    3fd9:	b8 00 00 00 00       	mov    eax,0x0
    3fde:	e8 8d e4 ff ff       	call   2470 <printf@plt>
    3fe3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3fea:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3fed:	0f b6 c0             	movzx  eax,al
    3ff0:	83 f8 0e             	cmp    eax,0xe
    3ff3:	0f 87 46 03 00 00    	ja     433f <ip4_icmp_decode+0x7f4>
    3ff9:	89 c0                	mov    eax,eax
    3ffb:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    4002:	00 
    4003:	48 8d 05 d6 88 00 00 	lea    rax,[rip+0x88d6]        # c8e0 <_IO_stdin_used+0x8e0>
    400a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    400d:	48 98                	cdqe   
    400f:	48 8d 15 ca 88 00 00 	lea    rdx,[rip+0x88ca]        # c8e0 <_IO_stdin_used+0x8e0>
    4016:	48 01 d0             	add    rax,rdx
    4019:	3e ff e0             	notrack jmp rax
    401c:	48 8d 3d bb 84 00 00 	lea    rdi,[rip+0x84bb]        # c4de <_IO_stdin_used+0x4de>
    4023:	e8 98 e4 ff ff       	call   24c0 <puts@plt>
    4028:	e9 33 03 00 00       	jmp    4360 <ip4_icmp_decode+0x815>
    402d:	48 8d 3d b6 84 00 00 	lea    rdi,[rip+0x84b6]        # c4ea <_IO_stdin_used+0x4ea>
    4034:	b8 00 00 00 00       	mov    eax,0x0
    4039:	e8 32 e4 ff ff       	call   2470 <printf@plt>
    403e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4045:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4049:	0f b6 c0             	movzx  eax,al
    404c:	83 f8 0f             	cmp    eax,0xf
    404f:	0f 87 1e 01 00 00    	ja     4173 <ip4_icmp_decode+0x628>
    4055:	89 c0                	mov    eax,eax
    4057:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    405e:	00 
    405f:	48 8d 05 b6 88 00 00 	lea    rax,[rip+0x88b6]        # c91c <_IO_stdin_used+0x91c>
    4066:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4069:	48 98                	cdqe   
    406b:	48 8d 15 aa 88 00 00 	lea    rdx,[rip+0x88aa]        # c91c <_IO_stdin_used+0x91c>
    4072:	48 01 d0             	add    rax,rdx
    4075:	3e ff e0             	notrack jmp rax
    4078:	48 8d 3d 85 84 00 00 	lea    rdi,[rip+0x8485]        # c504 <_IO_stdin_used+0x504>
    407f:	e8 3c e4 ff ff       	call   24c0 <puts@plt>
    4084:	e9 0c 01 00 00       	jmp    4195 <ip4_icmp_decode+0x64a>
    4089:	48 8d 3d 8b 84 00 00 	lea    rdi,[rip+0x848b]        # c51b <_IO_stdin_used+0x51b>
    4090:	e8 2b e4 ff ff       	call   24c0 <puts@plt>
    4095:	e9 fb 00 00 00       	jmp    4195 <ip4_icmp_decode+0x64a>
    409a:	48 8d 3d 8e 84 00 00 	lea    rdi,[rip+0x848e]        # c52f <_IO_stdin_used+0x52f>
    40a1:	e8 1a e4 ff ff       	call   24c0 <puts@plt>
    40a6:	e9 ea 00 00 00       	jmp    4195 <ip4_icmp_decode+0x64a>
    40ab:	48 8d 3d 95 84 00 00 	lea    rdi,[rip+0x8495]        # c547 <_IO_stdin_used+0x547>
    40b2:	e8 09 e4 ff ff       	call   24c0 <puts@plt>
    40b7:	e9 d9 00 00 00       	jmp    4195 <ip4_icmp_decode+0x64a>
    40bc:	48 8d 3d 98 84 00 00 	lea    rdi,[rip+0x8498]        # c55b <_IO_stdin_used+0x55b>
    40c3:	e8 f8 e3 ff ff       	call   24c0 <puts@plt>
    40c8:	e9 c8 00 00 00       	jmp    4195 <ip4_icmp_decode+0x64a>
    40cd:	48 8d 3d 9f 84 00 00 	lea    rdi,[rip+0x849f]        # c573 <_IO_stdin_used+0x573>
    40d4:	e8 e7 e3 ff ff       	call   24c0 <puts@plt>
    40d9:	e9 b7 00 00 00       	jmp    4195 <ip4_icmp_decode+0x64a>
    40de:	48 8d 3d ab 84 00 00 	lea    rdi,[rip+0x84ab]        # c590 <_IO_stdin_used+0x590>
    40e5:	e8 d6 e3 ff ff       	call   24c0 <puts@plt>
    40ea:	e9 a6 00 00 00       	jmp    4195 <ip4_icmp_decode+0x64a>
    40ef:	48 8d 3d c2 84 00 00 	lea    rdi,[rip+0x84c2]        # c5b8 <_IO_stdin_used+0x5b8>
    40f6:	e8 c5 e3 ff ff       	call   24c0 <puts@plt>
    40fb:	e9 95 00 00 00       	jmp    4195 <ip4_icmp_decode+0x64a>
    4100:	48 8d 3d d1 84 00 00 	lea    rdi,[rip+0x84d1]        # c5d8 <_IO_stdin_used+0x5d8>
    4107:	e8 b4 e3 ff ff       	call   24c0 <puts@plt>
    410c:	e9 84 00 00 00       	jmp    4195 <ip4_icmp_decode+0x64a>
    4111:	48 8d 3d d8 84 00 00 	lea    rdi,[rip+0x84d8]        # c5f0 <_IO_stdin_used+0x5f0>
    4118:	e8 a3 e3 ff ff       	call   24c0 <puts@plt>
    411d:	eb 76                	jmp    4195 <ip4_icmp_decode+0x64a>
    411f:	48 8d 3d f2 84 00 00 	lea    rdi,[rip+0x84f2]        # c618 <_IO_stdin_used+0x618>
    4126:	e8 95 e3 ff ff       	call   24c0 <puts@plt>
    412b:	eb 68                	jmp    4195 <ip4_icmp_decode+0x64a>
    412d:	48 8d 3d 0c 85 00 00 	lea    rdi,[rip+0x850c]        # c640 <_IO_stdin_used+0x640>
    4134:	e8 87 e3 ff ff       	call   24c0 <puts@plt>
    4139:	eb 5a                	jmp    4195 <ip4_icmp_decode+0x64a>
    413b:	48 8d 3d 1d 85 00 00 	lea    rdi,[rip+0x851d]        # c65f <_IO_stdin_used+0x65f>
    4142:	e8 79 e3 ff ff       	call   24c0 <puts@plt>
    4147:	eb 4c                	jmp    4195 <ip4_icmp_decode+0x64a>
    4149:	48 8d 3d 30 85 00 00 	lea    rdi,[rip+0x8530]        # c680 <_IO_stdin_used+0x680>
    4150:	e8 6b e3 ff ff       	call   24c0 <puts@plt>
    4155:	eb 3e                	jmp    4195 <ip4_icmp_decode+0x64a>
    4157:	48 8d 3d 4f 85 00 00 	lea    rdi,[rip+0x854f]        # c6ad <_IO_stdin_used+0x6ad>
    415e:	e8 5d e3 ff ff       	call   24c0 <puts@plt>
    4163:	eb 30                	jmp    4195 <ip4_icmp_decode+0x64a>
    4165:	48 8d 3d 64 85 00 00 	lea    rdi,[rip+0x8564]        # c6d0 <_IO_stdin_used+0x6d0>
    416c:	e8 4f e3 ff ff       	call   24c0 <puts@plt>
    4171:	eb 22                	jmp    4195 <ip4_icmp_decode+0x64a>
    4173:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    417a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    417e:	0f b6 c0             	movzx  eax,al
    4181:	89 c6                	mov    esi,eax
    4183:	48 8d 3d 65 85 00 00 	lea    rdi,[rip+0x8565]        # c6ef <_IO_stdin_used+0x6ef>
    418a:	b8 00 00 00 00       	mov    eax,0x0
    418f:	e8 dc e2 ff ff       	call   2470 <printf@plt>
    4194:	90                   	nop
    4195:	e9 c6 01 00 00       	jmp    4360 <ip4_icmp_decode+0x815>
    419a:	48 8d 3d 67 85 00 00 	lea    rdi,[rip+0x8567]        # c708 <_IO_stdin_used+0x708>
    41a1:	e8 1a e3 ff ff       	call   24c0 <puts@plt>
    41a6:	e9 b5 01 00 00       	jmp    4360 <ip4_icmp_decode+0x815>
    41ab:	48 8d 3d 75 85 00 00 	lea    rdi,[rip+0x8575]        # c727 <_IO_stdin_used+0x727>
    41b2:	b8 00 00 00 00       	mov    eax,0x0
    41b7:	e8 b4 e2 ff ff       	call   2470 <printf@plt>
    41bc:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    41c3:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    41c7:	0f b6 c0             	movzx  eax,al
    41ca:	83 f8 03             	cmp    eax,0x3
    41cd:	74 44                	je     4213 <ip4_icmp_decode+0x6c8>
    41cf:	83 f8 03             	cmp    eax,0x3
    41d2:	7f 4d                	jg     4221 <ip4_icmp_decode+0x6d6>
    41d4:	83 f8 02             	cmp    eax,0x2
    41d7:	74 2c                	je     4205 <ip4_icmp_decode+0x6ba>
    41d9:	83 f8 02             	cmp    eax,0x2
    41dc:	7f 43                	jg     4221 <ip4_icmp_decode+0x6d6>
    41de:	85 c0                	test   eax,eax
    41e0:	74 07                	je     41e9 <ip4_icmp_decode+0x69e>
    41e2:	83 f8 01             	cmp    eax,0x1
    41e5:	74 10                	je     41f7 <ip4_icmp_decode+0x6ac>
    41e7:	eb 38                	jmp    4221 <ip4_icmp_decode+0x6d6>
    41e9:	48 8d 3d 43 85 00 00 	lea    rdi,[rip+0x8543]        # c733 <_IO_stdin_used+0x733>
    41f0:	e8 cb e2 ff ff       	call   24c0 <puts@plt>
    41f5:	eb 4c                	jmp    4243 <ip4_icmp_decode+0x6f8>
    41f7:	48 8d 3d 4d 85 00 00 	lea    rdi,[rip+0x854d]        # c74b <_IO_stdin_used+0x74b>
    41fe:	e8 bd e2 ff ff       	call   24c0 <puts@plt>
    4203:	eb 3e                	jmp    4243 <ip4_icmp_decode+0x6f8>
    4205:	48 8d 3d 54 85 00 00 	lea    rdi,[rip+0x8554]        # c760 <_IO_stdin_used+0x760>
    420c:	e8 af e2 ff ff       	call   24c0 <puts@plt>
    4211:	eb 30                	jmp    4243 <ip4_icmp_decode+0x6f8>
    4213:	48 8d 3d 66 85 00 00 	lea    rdi,[rip+0x8566]        # c780 <_IO_stdin_used+0x780>
    421a:	e8 a1 e2 ff ff       	call   24c0 <puts@plt>
    421f:	eb 22                	jmp    4243 <ip4_icmp_decode+0x6f8>
    4221:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4228:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    422c:	0f b6 c0             	movzx  eax,al
    422f:	89 c6                	mov    esi,eax
    4231:	48 8d 3d b7 84 00 00 	lea    rdi,[rip+0x84b7]        # c6ef <_IO_stdin_used+0x6ef>
    4238:	b8 00 00 00 00       	mov    eax,0x0
    423d:	e8 2e e2 ff ff       	call   2470 <printf@plt>
    4242:	90                   	nop
    4243:	e9 18 01 00 00       	jmp    4360 <ip4_icmp_decode+0x815>
    4248:	48 8d 3d 4e 85 00 00 	lea    rdi,[rip+0x854e]        # c79d <_IO_stdin_used+0x79d>
    424f:	e8 6c e2 ff ff       	call   24c0 <puts@plt>
    4254:	e9 07 01 00 00       	jmp    4360 <ip4_icmp_decode+0x815>
    4259:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4260:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4264:	84 c0                	test   al,al
    4266:	75 16                	jne    427e <ip4_icmp_decode+0x733>
    4268:	48 8d 3d 41 85 00 00 	lea    rdi,[rip+0x8541]        # c7b0 <_IO_stdin_used+0x7b0>
    426f:	b8 00 00 00 00       	mov    eax,0x0
    4274:	e8 f7 e1 ff ff       	call   2470 <printf@plt>
    4279:	e9 e2 00 00 00       	jmp    4360 <ip4_icmp_decode+0x815>
    427e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4285:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4289:	0f b6 c0             	movzx  eax,al
    428c:	89 c6                	mov    esi,eax
    428e:	48 8d 3d 5b 85 00 00 	lea    rdi,[rip+0x855b]        # c7f0 <_IO_stdin_used+0x7f0>
    4295:	b8 00 00 00 00       	mov    eax,0x0
    429a:	e8 d1 e1 ff ff       	call   2470 <printf@plt>
    429f:	e9 bc 00 00 00       	jmp    4360 <ip4_icmp_decode+0x815>
    42a4:	48 8d 3d 72 85 00 00 	lea    rdi,[rip+0x8572]        # c81d <_IO_stdin_used+0x81d>
    42ab:	e8 10 e2 ff ff       	call   24c0 <puts@plt>
    42b0:	e9 ab 00 00 00       	jmp    4360 <ip4_icmp_decode+0x815>
    42b5:	48 8d 3d 78 85 00 00 	lea    rdi,[rip+0x8578]        # c834 <_IO_stdin_used+0x834>
    42bc:	b8 00 00 00 00       	mov    eax,0x0
    42c1:	e8 aa e1 ff ff       	call   2470 <printf@plt>
    42c6:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42cd:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42d1:	84 c0                	test   al,al
    42d3:	75 0e                	jne    42e3 <ip4_icmp_decode+0x798>
    42d5:	48 8d 3d 6f 85 00 00 	lea    rdi,[rip+0x856f]        # c84b <_IO_stdin_used+0x84b>
    42dc:	e8 df e1 ff ff       	call   24c0 <puts@plt>
    42e1:	eb 7d                	jmp    4360 <ip4_icmp_decode+0x815>
    42e3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42ea:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42ee:	3c 01                	cmp    al,0x1
    42f0:	75 0e                	jne    4300 <ip4_icmp_decode+0x7b5>
    42f2:	48 8d 3d 6f 85 00 00 	lea    rdi,[rip+0x856f]        # c868 <_IO_stdin_used+0x868>
    42f9:	e8 c2 e1 ff ff       	call   24c0 <puts@plt>
    42fe:	eb 60                	jmp    4360 <ip4_icmp_decode+0x815>
    4300:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4307:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    430b:	0f b6 c0             	movzx  eax,al
    430e:	89 c6                	mov    esi,eax
    4310:	48 8d 3d 78 85 00 00 	lea    rdi,[rip+0x8578]        # c88f <_IO_stdin_used+0x88f>
    4317:	b8 00 00 00 00       	mov    eax,0x0
    431c:	e8 4f e1 ff ff       	call   2470 <printf@plt>
    4321:	eb 3d                	jmp    4360 <ip4_icmp_decode+0x815>
    4323:	48 8d 3d 7b 85 00 00 	lea    rdi,[rip+0x857b]        # c8a5 <_IO_stdin_used+0x8a5>
    432a:	e8 91 e1 ff ff       	call   24c0 <puts@plt>
    432f:	eb 2f                	jmp    4360 <ip4_icmp_decode+0x815>
    4331:	48 8d 3d 80 85 00 00 	lea    rdi,[rip+0x8580]        # c8b8 <_IO_stdin_used+0x8b8>
    4338:	e8 83 e1 ff ff       	call   24c0 <puts@plt>
    433d:	eb 21                	jmp    4360 <ip4_icmp_decode+0x815>
    433f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4346:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4349:	0f b6 c0             	movzx  eax,al
    434c:	89 c6                	mov    esi,eax
    434e:	48 8d 3d 74 85 00 00 	lea    rdi,[rip+0x8574]        # c8c9 <_IO_stdin_used+0x8c9>
    4355:	b8 00 00 00 00       	mov    eax,0x0
    435a:	e8 11 e1 ff ff       	call   2470 <printf@plt>
    435f:	90                   	nop
    4360:	48 8d 35 2e 80 00 00 	lea    rsi,[rip+0x802e]        # c395 <_IO_stdin_used+0x395>
    4367:	48 8d 3d 98 7f 00 00 	lea    rdi,[rip+0x7f98]        # c306 <_IO_stdin_used+0x306>
    436e:	b8 00 00 00 00       	mov    eax,0x0
    4373:	e8 f8 e0 ff ff       	call   2470 <printf@plt>
    4378:	90                   	nop
    4379:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    437d:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4384:	00 00 
    4386:	74 05                	je     438d <ip4_icmp_decode+0x842>
    4388:	e8 93 e3 ff ff       	call   2720 <__stack_chk_fail@plt>
    438d:	c9                   	leave  
    438e:	c3                   	ret    

000000000000438f <ip4_tcp_decode>:
    438f:	f3 0f 1e fa          	endbr64 
    4393:	55                   	push   rbp
    4394:	48 89 e5             	mov    rbp,rsp
    4397:	53                   	push   rbx
    4398:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    439f:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    43a3:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    43a7:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    43ae:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    43b2:	48 83 c0 22          	add    rax,0x22
    43b6:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    43ba:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    43be:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    43c2:	c0 e8 04             	shr    al,0x4
    43c5:	0f b6 c0             	movzx  eax,al
    43c8:	c1 e0 02             	shl    eax,0x2
    43cb:	48 98                	cdqe   
    43cd:	48 8d 50 22          	lea    rdx,[rax+0x22]
    43d1:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    43d5:	48 01 c2             	add    rdx,rax
    43d8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    43dc:	48 89 10             	mov    QWORD PTR [rax],rdx
    43df:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    43e3:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    43e6:	89 c2                	mov    edx,eax
    43e8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    43ec:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    43f0:	c0 e8 04             	shr    al,0x4
    43f3:	0f b6 c0             	movzx  eax,al
    43f6:	c1 e0 02             	shl    eax,0x2
    43f9:	89 c1                	mov    ecx,eax
    43fb:	89 d0                	mov    eax,edx
    43fd:	29 c8                	sub    eax,ecx
    43ff:	83 e8 22             	sub    eax,0x22
    4402:	89 c2                	mov    edx,eax
    4404:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4408:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    440b:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    440f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4413:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4417:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    441b:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    441f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    4423:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4427:	ba 5c 00 00 00       	mov    edx,0x5c
    442c:	be 01 00 00 00       	mov    esi,0x1
    4431:	48 89 c7             	mov    rdi,rax
    4434:	e8 2b 0a 00 00       	call   4e64 <add_ip_addr_or_inc_counter>
    4439:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    443d:	ba 5c 00 00 00       	mov    edx,0x5c
    4442:	be 00 00 00 00       	mov    esi,0x0
    4447:	48 89 c7             	mov    rdi,rax
    444a:	e8 15 0a 00 00       	call   4e64 <add_ip_addr_or_inc_counter>
    444f:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
    4456:	c6 45 9f 00          	mov    BYTE PTR [rbp-0x61],0x0
    445a:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
    445e:	c6 45 a1 00          	mov    BYTE PTR [rbp-0x5f],0x0
    4462:	c6 45 a2 00          	mov    BYTE PTR [rbp-0x5e],0x0
    4466:	c6 45 a3 00          	mov    BYTE PTR [rbp-0x5d],0x0
    446a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    446e:	48 83 c0 60          	add    rax,0x60
    4472:	ba 08 00 00 00       	mov    edx,0x8
    4477:	be 00 00 00 00       	mov    esi,0x0
    447c:	48 89 c7             	mov    rdi,rax
    447f:	e8 fc df ff ff       	call   2480 <memset@plt>
    4484:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4488:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    448c:	0f b7 c0             	movzx  eax,ax
    448f:	89 c7                	mov    edi,eax
    4491:	e8 7a e1 ff ff       	call   2610 <ntohs@plt>
    4496:	0f b7 c0             	movzx  eax,ax
    4499:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    449c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44a0:	0f b7 00             	movzx  eax,WORD PTR [rax]
    44a3:	0f b7 c0             	movzx  eax,ax
    44a6:	89 c7                	mov    edi,eax
    44a8:	e8 63 e1 ff ff       	call   2610 <ntohs@plt>
    44ad:	0f b7 c0             	movzx  eax,ax
    44b0:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    44b3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44b7:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    44bb:	0f b7 c0             	movzx  eax,ax
    44be:	89 c7                	mov    edi,eax
    44c0:	e8 4b e1 ff ff       	call   2610 <ntohs@plt>
    44c5:	0f b7 d0             	movzx  edx,ax
    44c8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44cc:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    44cf:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44d3:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    44d6:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    44d9:	0f b6 05 84 5a 10 00 	movzx  eax,BYTE PTR [rip+0x105a84]        # 109f64 <packet_print>
    44e0:	84 c0                	test   al,al
    44e2:	74 4e                	je     4532 <ip4_tcp_decode+0x1a3>
    44e4:	48 8d 35 75 84 00 00 	lea    rsi,[rip+0x8475]        # c960 <_IO_stdin_used+0x960>
    44eb:	48 8d 3d 74 84 00 00 	lea    rdi,[rip+0x8474]        # c966 <_IO_stdin_used+0x966>
    44f2:	b8 00 00 00 00       	mov    eax,0x0
    44f7:	e8 74 df ff ff       	call   2470 <printf@plt>
    44fc:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
    44ff:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    4503:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    4506:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    450a:	41 89 f0             	mov    r8d,esi
    450d:	48 89 c6             	mov    rsi,rax
    4510:	48 8d 3d 52 84 00 00 	lea    rdi,[rip+0x8452]        # c969 <_IO_stdin_used+0x969>
    4517:	b8 00 00 00 00       	mov    eax,0x0
    451c:	e8 4f df ff ff       	call   2470 <printf@plt>
    4521:	48 8d 3d 56 84 00 00 	lea    rdi,[rip+0x8456]        # c97e <_IO_stdin_used+0x97e>
    4528:	b8 00 00 00 00       	mov    eax,0x0
    452d:	e8 3e df ff ff       	call   2470 <printf@plt>
    4532:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4536:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    453a:	c0 e8 04             	shr    al,0x4
    453d:	83 e0 01             	and    eax,0x1
    4540:	0f b6 c0             	movzx  eax,al
    4543:	89 c7                	mov    edi,eax
    4545:	e8 c6 e0 ff ff       	call   2610 <ntohs@plt>
    454a:	66 85 c0             	test   ax,ax
    454d:	74 43                	je     4592 <ip4_tcp_decode+0x203>
    454f:	0f b6 05 0e 5a 10 00 	movzx  eax,BYTE PTR [rip+0x105a0e]        # 109f64 <packet_print>
    4556:	84 c0                	test   al,al
    4558:	74 18                	je     4572 <ip4_tcp_decode+0x1e3>
    455a:	48 8d 35 24 84 00 00 	lea    rsi,[rip+0x8424]        # c985 <_IO_stdin_used+0x985>
    4561:	48 8d 3d 23 84 00 00 	lea    rdi,[rip+0x8423]        # c98b <_IO_stdin_used+0x98b>
    4568:	b8 00 00 00 00       	mov    eax,0x0
    456d:	e8 fe de ff ff       	call   2470 <printf@plt>
    4572:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
    4576:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    457a:	48 8d 58 60          	lea    rbx,[rax+0x60]
    457e:	48 89 df             	mov    rdi,rbx
    4581:	e8 5a e0 ff ff       	call   25e0 <strlen@plt>
    4586:	48 01 d8             	add    rax,rbx
    4589:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    458e:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4592:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4596:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    459a:	83 e0 01             	and    eax,0x1
    459d:	0f b6 c0             	movzx  eax,al
    45a0:	89 c7                	mov    edi,eax
    45a2:	e8 69 e0 ff ff       	call   2610 <ntohs@plt>
    45a7:	66 85 c0             	test   ax,ax
    45aa:	74 43                	je     45ef <ip4_tcp_decode+0x260>
    45ac:	0f b6 05 b1 59 10 00 	movzx  eax,BYTE PTR [rip+0x1059b1]        # 109f64 <packet_print>
    45b3:	84 c0                	test   al,al
    45b5:	74 18                	je     45cf <ip4_tcp_decode+0x240>
    45b7:	48 8d 35 d5 83 00 00 	lea    rsi,[rip+0x83d5]        # c993 <_IO_stdin_used+0x993>
    45be:	48 8d 3d d4 83 00 00 	lea    rdi,[rip+0x83d4]        # c999 <_IO_stdin_used+0x999>
    45c5:	b8 00 00 00 00       	mov    eax,0x0
    45ca:	e8 a1 de ff ff       	call   2470 <printf@plt>
    45cf:	c6 45 a2 01          	mov    BYTE PTR [rbp-0x5e],0x1
    45d3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45d7:	48 8d 58 60          	lea    rbx,[rax+0x60]
    45db:	48 89 df             	mov    rdi,rbx
    45de:	e8 fd df ff ff       	call   25e0 <strlen@plt>
    45e3:	48 01 d8             	add    rax,rbx
    45e6:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    45eb:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    45ef:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    45f3:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    45f7:	c0 e8 03             	shr    al,0x3
    45fa:	83 e0 01             	and    eax,0x1
    45fd:	0f b6 c0             	movzx  eax,al
    4600:	89 c7                	mov    edi,eax
    4602:	e8 09 e0 ff ff       	call   2610 <ntohs@plt>
    4607:	66 85 c0             	test   ax,ax
    460a:	74 43                	je     464f <ip4_tcp_decode+0x2c0>
    460c:	0f b6 05 51 59 10 00 	movzx  eax,BYTE PTR [rip+0x105951]        # 109f64 <packet_print>
    4613:	84 c0                	test   al,al
    4615:	74 18                	je     462f <ip4_tcp_decode+0x2a0>
    4617:	48 8d 35 83 83 00 00 	lea    rsi,[rip+0x8383]        # c9a1 <_IO_stdin_used+0x9a1>
    461e:	48 8d 3d 82 83 00 00 	lea    rdi,[rip+0x8382]        # c9a7 <_IO_stdin_used+0x9a7>
    4625:	b8 00 00 00 00       	mov    eax,0x0
    462a:	e8 41 de ff ff       	call   2470 <printf@plt>
    462f:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4633:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4637:	48 8d 58 60          	lea    rbx,[rax+0x60]
    463b:	48 89 df             	mov    rdi,rbx
    463e:	e8 9d df ff ff       	call   25e0 <strlen@plt>
    4643:	48 01 d8             	add    rax,rbx
    4646:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    464b:	c6 45 a3 01          	mov    BYTE PTR [rbp-0x5d],0x1
    464f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4653:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4657:	c0 e8 02             	shr    al,0x2
    465a:	83 e0 01             	and    eax,0x1
    465d:	0f b6 c0             	movzx  eax,al
    4660:	89 c7                	mov    edi,eax
    4662:	e8 a9 df ff ff       	call   2610 <ntohs@plt>
    4667:	66 85 c0             	test   ax,ax
    466a:	74 43                	je     46af <ip4_tcp_decode+0x320>
    466c:	0f b6 05 f1 58 10 00 	movzx  eax,BYTE PTR [rip+0x1058f1]        # 109f64 <packet_print>
    4673:	84 c0                	test   al,al
    4675:	74 18                	je     468f <ip4_tcp_decode+0x300>
    4677:	48 8d 35 31 83 00 00 	lea    rsi,[rip+0x8331]        # c9af <_IO_stdin_used+0x9af>
    467e:	48 8d 3d 30 83 00 00 	lea    rdi,[rip+0x8330]        # c9b5 <_IO_stdin_used+0x9b5>
    4685:	b8 00 00 00 00       	mov    eax,0x0
    468a:	e8 e1 dd ff ff       	call   2470 <printf@plt>
    468f:	c6 45 9f 01          	mov    BYTE PTR [rbp-0x61],0x1
    4693:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4697:	48 8d 58 60          	lea    rbx,[rax+0x60]
    469b:	48 89 df             	mov    rdi,rbx
    469e:	e8 3d df ff ff       	call   25e0 <strlen@plt>
    46a3:	48 01 d8             	add    rax,rbx
    46a6:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    46ab:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    46af:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46b3:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46b7:	d0 e8                	shr    al,1
    46b9:	83 e0 01             	and    eax,0x1
    46bc:	0f b6 c0             	movzx  eax,al
    46bf:	89 c7                	mov    edi,eax
    46c1:	e8 4a df ff ff       	call   2610 <ntohs@plt>
    46c6:	66 85 c0             	test   ax,ax
    46c9:	74 43                	je     470e <ip4_tcp_decode+0x37f>
    46cb:	0f b6 05 92 58 10 00 	movzx  eax,BYTE PTR [rip+0x105892]        # 109f64 <packet_print>
    46d2:	84 c0                	test   al,al
    46d4:	74 18                	je     46ee <ip4_tcp_decode+0x35f>
    46d6:	48 8d 35 e0 82 00 00 	lea    rsi,[rip+0x82e0]        # c9bd <_IO_stdin_used+0x9bd>
    46dd:	48 8d 3d df 82 00 00 	lea    rdi,[rip+0x82df]        # c9c3 <_IO_stdin_used+0x9c3>
    46e4:	b8 00 00 00 00       	mov    eax,0x0
    46e9:	e8 82 dd ff ff       	call   2470 <printf@plt>
    46ee:	c6 45 a1 01          	mov    BYTE PTR [rbp-0x5f],0x1
    46f2:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46f6:	48 8d 58 60          	lea    rbx,[rax+0x60]
    46fa:	48 89 df             	mov    rdi,rbx
    46fd:	e8 de de ff ff       	call   25e0 <strlen@plt>
    4702:	48 01 d8             	add    rax,rbx
    4705:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    470a:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    470e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4712:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4716:	c0 e8 05             	shr    al,0x5
    4719:	83 e0 01             	and    eax,0x1
    471c:	0f b6 c0             	movzx  eax,al
    471f:	89 c7                	mov    edi,eax
    4721:	e8 ea de ff ff       	call   2610 <ntohs@plt>
    4726:	66 85 c0             	test   ax,ax
    4729:	74 3f                	je     476a <ip4_tcp_decode+0x3db>
    472b:	0f b6 05 32 58 10 00 	movzx  eax,BYTE PTR [rip+0x105832]        # 109f64 <packet_print>
    4732:	84 c0                	test   al,al
    4734:	74 18                	je     474e <ip4_tcp_decode+0x3bf>
    4736:	48 8d 35 8e 82 00 00 	lea    rsi,[rip+0x828e]        # c9cb <_IO_stdin_used+0x9cb>
    473d:	48 8d 3d 8d 82 00 00 	lea    rdi,[rip+0x828d]        # c9d1 <_IO_stdin_used+0x9d1>
    4744:	b8 00 00 00 00       	mov    eax,0x0
    4749:	e8 22 dd ff ff       	call   2470 <printf@plt>
    474e:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4752:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4756:	48 8d 58 60          	lea    rbx,[rax+0x60]
    475a:	48 89 df             	mov    rdi,rbx
    475d:	e8 7e de ff ff       	call   25e0 <strlen@plt>
    4762:	48 01 d8             	add    rax,rbx
    4765:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    476a:	0f b6 05 f3 57 10 00 	movzx  eax,BYTE PTR [rip+0x1057f3]        # 109f64 <packet_print>
    4771:	84 c0                	test   al,al
    4773:	74 3c                	je     47b1 <ip4_tcp_decode+0x422>
    4775:	48 8d 35 e4 81 00 00 	lea    rsi,[rip+0x81e4]        # c960 <_IO_stdin_used+0x960>
    477c:	48 8d 3d e3 81 00 00 	lea    rdi,[rip+0x81e3]        # c966 <_IO_stdin_used+0x966>
    4783:	b8 00 00 00 00       	mov    eax,0x0
    4788:	e8 e3 dc ff ff       	call   2470 <printf@plt>
    478d:	48 8d 3d 45 82 00 00 	lea    rdi,[rip+0x8245]        # c9d9 <_IO_stdin_used+0x9d9>
    4794:	e8 27 dd ff ff       	call   24c0 <puts@plt>
    4799:	48 8d 35 3b 82 00 00 	lea    rsi,[rip+0x823b]        # c9db <_IO_stdin_used+0x9db>
    47a0:	48 8d 3d bf 81 00 00 	lea    rdi,[rip+0x81bf]        # c966 <_IO_stdin_used+0x966>
    47a7:	b8 00 00 00 00       	mov    eax,0x0
    47ac:	e8 bf dc ff ff       	call   2470 <printf@plt>
    47b1:	83 7d a4 03          	cmp    DWORD PTR [rbp-0x5c],0x3
    47b5:	7f 06                	jg     47bd <ip4_tcp_decode+0x42e>
    47b7:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
    47bb:	75 41                	jne    47fe <ip4_tcp_decode+0x46f>
    47bd:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
    47c0:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    47c4:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    47c7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    47cb:	48 8d 0d 09 82 00 00 	lea    rcx,[rip+0x8209]        # c9db <_IO_stdin_used+0x9db>
    47d2:	51                   	push   rcx
    47d3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
    47d6:	51                   	push   rcx
    47d7:	41 89 f9             	mov    r9d,edi
    47da:	49 89 f0             	mov    r8,rsi
    47dd:	89 d1                	mov    ecx,edx
    47df:	48 89 c2             	mov    rdx,rax
    47e2:	48 8d 35 c6 81 00 00 	lea    rsi,[rip+0x81c6]        # c9af <_IO_stdin_used+0x9af>
    47e9:	48 8d 3d f0 81 00 00 	lea    rdi,[rip+0x81f0]        # c9e0 <_IO_stdin_used+0x9e0>
    47f0:	b8 00 00 00 00       	mov    eax,0x0
    47f5:	e8 76 dc ff ff       	call   2470 <printf@plt>
    47fa:	48 83 c4 10          	add    rsp,0x10
    47fe:	0f b6 05 bd 57 10 00 	movzx  eax,BYTE PTR [rip+0x1057bd]        # 109fc2 <use_spi>
    4805:	84 c0                	test   al,al
    4807:	0f 84 8c 00 00 00    	je     4899 <ip4_tcp_decode+0x50a>
    480d:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4811:	74 1a                	je     482d <ip4_tcp_decode+0x49e>
    4813:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4817:	74 14                	je     482d <ip4_tcp_decode+0x49e>
    4819:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    481d:	75 0e                	jne    482d <ip4_tcp_decode+0x49e>
    481f:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4823:	48 89 c7             	mov    rdi,rax
    4826:	e8 23 45 00 00       	call   8d4e <handle_data_pkt>
    482b:	eb 6c                	jmp    4899 <ip4_tcp_decode+0x50a>
    482d:	80 7d a2 00          	cmp    BYTE PTR [rbp-0x5e],0x0
    4831:	74 14                	je     4847 <ip4_tcp_decode+0x4b8>
    4833:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4837:	74 0e                	je     4847 <ip4_tcp_decode+0x4b8>
    4839:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    483d:	48 89 c7             	mov    rdi,rax
    4840:	e8 fc 43 00 00       	call   8c41 <polite_end>
    4845:	eb 52                	jmp    4899 <ip4_tcp_decode+0x50a>
    4847:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    484b:	74 14                	je     4861 <ip4_tcp_decode+0x4d2>
    484d:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    4851:	75 0e                	jne    4861 <ip4_tcp_decode+0x4d2>
    4853:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4857:	48 89 c7             	mov    rdi,rax
    485a:	e8 5a 3f 00 00       	call   87b9 <add_new_conversation>
    485f:	eb 38                	jmp    4899 <ip4_tcp_decode+0x50a>
    4861:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4865:	74 1a                	je     4881 <ip4_tcp_decode+0x4f2>
    4867:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    486b:	74 14                	je     4881 <ip4_tcp_decode+0x4f2>
    486d:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4871:	75 0e                	jne    4881 <ip4_tcp_decode+0x4f2>
    4873:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4877:	48 89 c7             	mov    rdi,rax
    487a:	e8 64 41 00 00       	call   89e3 <spi_ud_thw>
    487f:	eb 18                	jmp    4899 <ip4_tcp_decode+0x50a>
    4881:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4885:	74 12                	je     4899 <ip4_tcp_decode+0x50a>
    4887:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    488b:	75 0c                	jne    4899 <ip4_tcp_decode+0x50a>
    488d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4891:	48 89 c7             	mov    rdi,rax
    4894:	e8 0d 42 00 00       	call   8aa6 <update_table>
    4899:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    489d:	74 17                	je     48b6 <ip4_tcp_decode+0x527>
    489f:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48a3:	74 11                	je     48b6 <ip4_tcp_decode+0x527>
    48a5:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    48a9:	75 0b                	jne    48b6 <ip4_tcp_decode+0x527>
    48ab:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48af:	c7 40 68 01 00 00 00 	mov    DWORD PTR [rax+0x68],0x1
    48b6:	80 7d 9f 00          	cmp    BYTE PTR [rbp-0x61],0x0
    48ba:	0f 84 8f 01 00 00    	je     4a4f <ip4_tcp_decode+0x6c0>
    48c0:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48c4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    48c8:	48 89 c7             	mov    rdi,rax
    48cb:	e8 53 2f 00 00       	call   7823 <member_exists>
    48d0:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    48d3:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    48d7:	0f 84 db 00 00 00    	je     49b8 <ip4_tcp_decode+0x629>
    48dd:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    48e0:	48 63 d0             	movsxd rdx,eax
    48e3:	48 89 d0             	mov    rax,rdx
    48e6:	48 c1 e0 02          	shl    rax,0x2
    48ea:	48 01 d0             	add    rax,rdx
    48ed:	48 c1 e0 03          	shl    rax,0x3
    48f1:	48 01 d0             	add    rax,rdx
    48f4:	48 c1 e0 04          	shl    rax,0x4
    48f8:	48 8d 15 21 ec 0e 00 	lea    rdx,[rip+0xeec21]        # f3520 <watchlist>
    48ff:	48 01 d0             	add    rax,rdx
    4902:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    4906:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    490a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    490e:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    4912:	48 83 c2 08          	add    rdx,0x8
    4916:	48 89 c6             	mov    rsi,rax
    4919:	48 89 d7             	mov    rdi,rdx
    491c:	e8 2f de ff ff       	call   2750 <strcpy@plt>
    4921:	bf 00 00 00 00       	mov    edi,0x0
    4926:	e8 25 df ff ff       	call   2850 <time@plt>
    492b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    492f:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4935:	8d 72 01             	lea    esi,[rdx+0x1]
    4938:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    493c:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4942:	48 89 c1             	mov    rcx,rax
    4945:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4949:	89 d2                	mov    edx,edx
    494b:	48 83 c2 28          	add    rdx,0x28
    494f:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4954:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4958:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    495e:	83 f8 1d             	cmp    eax,0x1d
    4961:	0f 86 e8 00 00 00    	jbe    4a4f <ip4_tcp_decode+0x6c0>
    4967:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    496b:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4972:	00 00 00 
    4975:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4979:	48 89 c7             	mov    rdi,rax
    497c:	e8 60 2a 00 00       	call   73e1 <tcp_rst_portscan_detect>
    4981:	84 c0                	test   al,al
    4983:	0f 84 c6 00 00 00    	je     4a4f <ip4_tcp_decode+0x6c0>
    4989:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    498d:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4994:	00 00 00 
    4997:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    499b:	48 05 50 01 00 00    	add    rax,0x150
    49a1:	ba f0 00 00 00       	mov    edx,0xf0
    49a6:	be 00 00 00 00       	mov    esi,0x0
    49ab:	48 89 c7             	mov    rdi,rax
    49ae:	e8 cd da ff ff       	call   2480 <memset@plt>
    49b3:	e9 97 00 00 00       	jmp    4a4f <ip4_tcp_decode+0x6c0>
    49b8:	8b 05 5a c6 00 00    	mov    eax,DWORD PTR [rip+0xc65a]        # 11018 <watchlist_num>
    49be:	83 c0 01             	add    eax,0x1
    49c1:	89 05 51 c6 00 00    	mov    DWORD PTR [rip+0xc651],eax        # 11018 <watchlist_num>
    49c7:	8b 05 4b c6 00 00    	mov    eax,DWORD PTR [rip+0xc64b]        # 11018 <watchlist_num>
    49cd:	48 63 d0             	movsxd rdx,eax
    49d0:	48 89 d0             	mov    rax,rdx
    49d3:	48 c1 e0 02          	shl    rax,0x2
    49d7:	48 01 d0             	add    rax,rdx
    49da:	48 c1 e0 03          	shl    rax,0x3
    49de:	48 01 d0             	add    rax,rdx
    49e1:	48 c1 e0 04          	shl    rax,0x4
    49e5:	48 8d 15 34 eb 0e 00 	lea    rdx,[rip+0xeeb34]        # f3520 <watchlist>
    49ec:	48 01 d0             	add    rax,rdx
    49ef:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    49f3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    49f7:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49fb:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    49ff:	48 83 c2 08          	add    rdx,0x8
    4a03:	48 89 c6             	mov    rsi,rax
    4a06:	48 89 d7             	mov    rdi,rdx
    4a09:	e8 42 dd ff ff       	call   2750 <strcpy@plt>
    4a0e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4a12:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a19:	00 00 00 
    4a1c:	bf 00 00 00 00       	mov    edi,0x0
    4a21:	e8 2a de ff ff       	call   2850 <time@plt>
    4a26:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4a2a:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4a30:	8d 72 01             	lea    esi,[rdx+0x1]
    4a33:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4a37:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a3d:	48 89 c1             	mov    rcx,rax
    4a40:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4a44:	89 d2                	mov    edx,edx
    4a46:	48 83 c2 28          	add    rdx,0x28
    4a4a:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4a4f:	8b 05 33 c6 00 00    	mov    eax,DWORD PTR [rip+0xc633]        # 11088 <strict_nmap_host_alive_check>
    4a55:	83 f8 01             	cmp    eax,0x1
    4a58:	0f 85 f6 00 00 00    	jne    4b54 <ip4_tcp_decode+0x7c5>
    4a5e:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4a62:	74 0c                	je     4a70 <ip4_tcp_decode+0x6e1>
    4a64:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4a68:	74 26                	je     4a90 <ip4_tcp_decode+0x701>
    4a6a:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4a6e:	74 20                	je     4a90 <ip4_tcp_decode+0x701>
    4a70:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4a74:	0f 84 da 00 00 00    	je     4b54 <ip4_tcp_decode+0x7c5>
    4a7a:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4a81:	74 0d                	je     4a90 <ip4_tcp_decode+0x701>
    4a83:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4a8a:	0f 85 c4 00 00 00    	jne    4b54 <ip4_tcp_decode+0x7c5>
    4a90:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    4a93:	3b 45 ac             	cmp    eax,DWORD PTR [rbp-0x54]
    4a96:	76 0a                	jbe    4aa2 <ip4_tcp_decode+0x713>
    4a98:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4a9c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4aa0:	eb 08                	jmp    4aaa <ip4_tcp_decode+0x71b>
    4aa2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4aa6:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4aaa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4aae:	48 89 c7             	mov    rdi,rax
    4ab1:	e8 6d 2d 00 00       	call   7823 <member_exists>
    4ab6:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4ab9:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    4abd:	0f 84 91 00 00 00    	je     4b54 <ip4_tcp_decode+0x7c5>
    4ac3:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4ac6:	48 63 d0             	movsxd rdx,eax
    4ac9:	48 89 d0             	mov    rax,rdx
    4acc:	48 c1 e0 02          	shl    rax,0x2
    4ad0:	48 01 d0             	add    rax,rdx
    4ad3:	48 c1 e0 03          	shl    rax,0x3
    4ad7:	48 01 d0             	add    rax,rdx
    4ada:	48 c1 e0 04          	shl    rax,0x4
    4ade:	48 8d 15 3b ea 0e 00 	lea    rdx,[rip+0xeea3b]        # f3520 <watchlist>
    4ae5:	48 01 d0             	add    rax,rdx
    4ae8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4aec:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4af0:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4af3:	85 c0                	test   eax,eax
    4af5:	75 2a                	jne    4b21 <ip4_tcp_decode+0x792>
    4af7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4afb:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4afe:	83 f8 01             	cmp    eax,0x1
    4b01:	75 1e                	jne    4b21 <ip4_tcp_decode+0x792>
    4b03:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b07:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4b0e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b12:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b15:	8d 50 01             	lea    edx,[rax+0x1]
    4b18:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b1c:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4b1f:	eb 33                	jmp    4b54 <ip4_tcp_decode+0x7c5>
    4b21:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b25:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4b28:	85 c0                	test   eax,eax
    4b2a:	75 28                	jne    4b54 <ip4_tcp_decode+0x7c5>
    4b2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b30:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b33:	83 f8 02             	cmp    eax,0x2
    4b36:	75 1c                	jne    4b54 <ip4_tcp_decode+0x7c5>
    4b38:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b3c:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4b43:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b47:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b4a:	8d 50 01             	lea    edx,[rax+0x1]
    4b4d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b51:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4b54:	0f b6 05 09 54 10 00 	movzx  eax,BYTE PTR [rip+0x105409]        # 109f64 <packet_print>
    4b5b:	84 c0                	test   al,al
    4b5d:	74 3a                	je     4b99 <ip4_tcp_decode+0x80a>
    4b5f:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4b63:	74 34                	je     4b99 <ip4_tcp_decode+0x80a>
    4b65:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4b69:	74 2e                	je     4b99 <ip4_tcp_decode+0x80a>
    4b6b:	0f b6 45 a2          	movzx  eax,BYTE PTR [rbp-0x5e]
    4b6f:	83 f0 01             	xor    eax,0x1
    4b72:	84 c0                	test   al,al
    4b74:	74 23                	je     4b99 <ip4_tcp_decode+0x80a>
    4b76:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4b7a:	74 06                	je     4b82 <ip4_tcp_decode+0x7f3>
    4b7c:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4b80:	75 17                	jne    4b99 <ip4_tcp_decode+0x80a>
    4b82:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4b86:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4b8a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4b8e:	48 89 c6             	mov    rsi,rax
    4b91:	48 89 d7             	mov    rdi,rdx
    4b94:	e8 50 36 00 00       	call   81e9 <http_disect>
    4b99:	83 7d a8 15          	cmp    DWORD PTR [rbp-0x58],0x15
    4b9d:	74 06                	je     4ba5 <ip4_tcp_decode+0x816>
    4b9f:	83 7d ac 15          	cmp    DWORD PTR [rbp-0x54],0x15
    4ba3:	75 2d                	jne    4bd2 <ip4_tcp_decode+0x843>
    4ba5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4ba9:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4bad:	c0 e8 04             	shr    al,0x4
    4bb0:	0f b6 c0             	movzx  eax,al
    4bb3:	c1 e0 02             	shl    eax,0x2
    4bb6:	48 98                	cdqe   
    4bb8:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4bbc:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4bc0:	48 01 c2             	add    rdx,rax
    4bc3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4bc7:	48 89 c6             	mov    rsi,rax
    4bca:	48 89 d7             	mov    rdi,rdx
    4bcd:	e8 02 38 00 00       	call   83d4 <ftp_disect>
    4bd2:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4bd9:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4bdc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4be0:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4be4:	c0 e8 04             	shr    al,0x4
    4be7:	0f b6 c0             	movzx  eax,al
    4bea:	c1 e0 02             	shl    eax,0x2
    4bed:	89 c1                	mov    ecx,eax
    4bef:	89 d0                	mov    eax,edx
    4bf1:	29 c8                	sub    eax,ecx
    4bf3:	8d 50 de             	lea    edx,[rax-0x22]
    4bf6:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4bfa:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4bfd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c01:	48 89 c7             	mov    rdi,rax
    4c04:	e8 5c 17 00 00       	call   6365 <rulemgr>
    4c09:	90                   	nop
    4c0a:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4c0e:	c9                   	leave  
    4c0f:	c3                   	ret    

0000000000004c10 <ip4_udp_decode>:
    4c10:	f3 0f 1e fa          	endbr64 
    4c14:	55                   	push   rbp
    4c15:	48 89 e5             	mov    rbp,rsp
    4c18:	48 83 ec 30          	sub    rsp,0x30
    4c1c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4c20:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4c24:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4c28:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c2c:	48 83 c0 22          	add    rax,0x22
    4c30:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4c34:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c38:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4c3c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c40:	48 89 10             	mov    QWORD PTR [rax],rdx
    4c43:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c47:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4c4b:	ba 5d 00 00 00       	mov    edx,0x5d
    4c50:	be 01 00 00 00       	mov    esi,0x1
    4c55:	48 89 c7             	mov    rdi,rax
    4c58:	e8 07 02 00 00       	call   4e64 <add_ip_addr_or_inc_counter>
    4c5d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c61:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4c65:	ba 5d 00 00 00       	mov    edx,0x5d
    4c6a:	be 00 00 00 00       	mov    esi,0x0
    4c6f:	48 89 c7             	mov    rdi,rax
    4c72:	e8 ed 01 00 00       	call   4e64 <add_ip_addr_or_inc_counter>
    4c77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c7b:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4c7e:	0f b7 c0             	movzx  eax,ax
    4c81:	89 c7                	mov    edi,eax
    4c83:	e8 88 d9 ff ff       	call   2610 <ntohs@plt>
    4c88:	0f b7 c0             	movzx  eax,ax
    4c8b:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4c8e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c92:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4c96:	0f b7 c0             	movzx  eax,ax
    4c99:	89 c7                	mov    edi,eax
    4c9b:	e8 70 d9 ff ff       	call   2610 <ntohs@plt>
    4ca0:	0f b7 c0             	movzx  eax,ax
    4ca3:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4ca6:	0f b6 05 b7 52 10 00 	movzx  eax,BYTE PTR [rip+0x1052b7]        # 109f64 <packet_print>
    4cad:	84 c0                	test   al,al
    4caf:	74 5d                	je     4d0e <ip4_udp_decode+0xfe>
    4cb1:	48 8d 35 68 7d 00 00 	lea    rsi,[rip+0x7d68]        # ca20 <_IO_stdin_used+0xa20>
    4cb8:	48 8d 3d 67 7d 00 00 	lea    rdi,[rip+0x7d67]        # ca26 <_IO_stdin_used+0xa26>
    4cbf:	b8 00 00 00 00       	mov    eax,0x0
    4cc4:	e8 a7 d7 ff ff       	call   2470 <printf@plt>
    4cc9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4ccd:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4cd1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4cd5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4cd9:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4cdc:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4cdf:	41 89 f0             	mov    r8d,esi
    4ce2:	48 89 c6             	mov    rsi,rax
    4ce5:	48 8d 3d 3d 7d 00 00 	lea    rdi,[rip+0x7d3d]        # ca29 <_IO_stdin_used+0xa29>
    4cec:	b8 00 00 00 00       	mov    eax,0x0
    4cf1:	e8 7a d7 ff ff       	call   2470 <printf@plt>
    4cf6:	48 8d 35 45 7d 00 00 	lea    rsi,[rip+0x7d45]        # ca42 <_IO_stdin_used+0xa42>
    4cfd:	48 8d 3d 22 7d 00 00 	lea    rdi,[rip+0x7d22]        # ca26 <_IO_stdin_used+0xa26>
    4d04:	b8 00 00 00 00       	mov    eax,0x0
    4d09:	e8 62 d7 ff ff       	call   2470 <printf@plt>
    4d0e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d12:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4d15:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4d18:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d1c:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4d1f:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4d22:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4d26:	74 06                	je     4d2e <ip4_udp_decode+0x11e>
    4d28:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4d2c:	75 17                	jne    4d45 <ip4_udp_decode+0x135>
    4d2e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d32:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4d36:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d3a:	48 89 c6             	mov    rsi,rax
    4d3d:	48 89 d7             	mov    rdi,rdx
    4d40:	e8 56 35 00 00       	call   829b <dns_disect>
    4d45:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4d49:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4d4c:	8d 50 d6             	lea    edx,[rax-0x2a]
    4d4f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d53:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4d56:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d5a:	48 89 c7             	mov    rdi,rax
    4d5d:	e8 03 16 00 00       	call   6365 <rulemgr>
    4d62:	90                   	nop
    4d63:	c9                   	leave  
    4d64:	c3                   	ret    

0000000000004d65 <ip4_igmp_decode>:
    4d65:	f3 0f 1e fa          	endbr64 
    4d69:	55                   	push   rbp
    4d6a:	48 89 e5             	mov    rbp,rsp
    4d6d:	48 83 ec 60          	sub    rsp,0x60
    4d71:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4d75:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4d79:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4d7d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4d84:	00 00 
    4d86:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4d8a:	31 c0                	xor    eax,eax
    4d8c:	0f b6 05 d1 51 10 00 	movzx  eax,BYTE PTR [rip+0x1051d1]        # 109f64 <packet_print>
    4d93:	84 c0                	test   al,al
    4d95:	0f 84 b1 00 00 00    	je     4e4c <ip4_igmp_decode+0xe7>
    4d9b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4d9f:	48 83 c0 26          	add    rax,0x26
    4da3:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4da7:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4dab:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4daf:	48 89 c6             	mov    rsi,rax
    4db2:	48 8d 3d 8f 7c 00 00 	lea    rdi,[rip+0x7c8f]        # ca48 <_IO_stdin_used+0xa48>
    4db9:	b8 00 00 00 00       	mov    eax,0x0
    4dbe:	e8 ad d6 ff ff       	call   2470 <printf@plt>
    4dc3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4dc7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4dca:	0f b6 c0             	movzx  eax,al
    4dcd:	83 f8 11             	cmp    eax,0x11
    4dd0:	74 07                	je     4dd9 <ip4_igmp_decode+0x74>
    4dd2:	83 f8 22             	cmp    eax,0x22
    4dd5:	74 10                	je     4de7 <ip4_igmp_decode+0x82>
    4dd7:	eb 54                	jmp    4e2d <ip4_igmp_decode+0xc8>
    4dd9:	48 8d 3d 7d 7c 00 00 	lea    rdi,[rip+0x7c7d]        # ca5d <_IO_stdin_used+0xa5d>
    4de0:	e8 db d6 ff ff       	call   24c0 <puts@plt>
    4de5:	eb 66                	jmp    4e4d <ip4_igmp_decode+0xe8>
    4de7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4deb:	48 83 c0 26          	add    rax,0x26
    4def:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4df3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4df7:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4dfa:	89 c7                	mov    edi,eax
    4dfc:	e8 be e2 ff ff       	call   30bf <ipv4_ntoa>
    4e01:	48 89 c2             	mov    rdx,rax
    4e04:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4e08:	48 89 d6             	mov    rsi,rdx
    4e0b:	48 89 c7             	mov    rdi,rax
    4e0e:	e8 3d d9 ff ff       	call   2750 <strcpy@plt>
    4e13:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4e17:	48 89 c6             	mov    rsi,rax
    4e1a:	48 8d 3d 57 7c 00 00 	lea    rdi,[rip+0x7c57]        # ca78 <_IO_stdin_used+0xa78>
    4e21:	b8 00 00 00 00       	mov    eax,0x0
    4e26:	e8 45 d6 ff ff       	call   2470 <printf@plt>
    4e2b:	eb 20                	jmp    4e4d <ip4_igmp_decode+0xe8>
    4e2d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4e31:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4e34:	0f b6 c0             	movzx  eax,al
    4e37:	89 c6                	mov    esi,eax
    4e39:	48 8d 3d 6e 7c 00 00 	lea    rdi,[rip+0x7c6e]        # caae <_IO_stdin_used+0xaae>
    4e40:	b8 00 00 00 00       	mov    eax,0x0
    4e45:	e8 26 d6 ff ff       	call   2470 <printf@plt>
    4e4a:	eb 01                	jmp    4e4d <ip4_igmp_decode+0xe8>
    4e4c:	90                   	nop
    4e4d:	90                   	nop
    4e4e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4e52:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4e59:	00 00 
    4e5b:	74 05                	je     4e62 <ip4_igmp_decode+0xfd>
    4e5d:	e8 be d8 ff ff       	call   2720 <__stack_chk_fail@plt>
    4e62:	c9                   	leave  
    4e63:	c3                   	ret    

0000000000004e64 <add_ip_addr_or_inc_counter>:
    4e64:	f3 0f 1e fa          	endbr64 
    4e68:	55                   	push   rbp
    4e69:	48 89 e5             	mov    rbp,rsp
    4e6c:	48 83 ec 60          	sub    rsp,0x60
    4e70:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4e74:	89 f0                	mov    eax,esi
    4e76:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4e79:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4e7c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4e83:	00 00 
    4e85:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4e89:	31 c0                	xor    eax,eax
    4e8b:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4e8f:	ba 08 00 00 00       	mov    edx,0x8
    4e94:	be 00 00 00 00       	mov    esi,0x0
    4e99:	48 89 c7             	mov    rdi,rax
    4e9c:	e8 df d5 ff ff       	call   2480 <memset@plt>
    4ea1:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4ea5:	ba 1c 00 00 00       	mov    edx,0x1c
    4eaa:	be 00 00 00 00       	mov    esi,0x0
    4eaf:	48 89 c7             	mov    rdi,rax
    4eb2:	e8 c9 d5 ff ff       	call   2480 <memset@plt>
    4eb7:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4ebb:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4ebf:	ba 18 00 00 00       	mov    edx,0x18
    4ec4:	48 89 ce             	mov    rsi,rcx
    4ec7:	48 89 c7             	mov    rdi,rax
    4eca:	e8 d1 d8 ff ff       	call   27a0 <strncpy@plt>
    4ecf:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4ed3:	ba 1c 00 00 00       	mov    edx,0x1c
    4ed8:	be 00 00 00 00       	mov    esi,0x0
    4edd:	48 89 c7             	mov    rdi,rax
    4ee0:	e8 9b d5 ff ff       	call   2480 <memset@plt>
    4ee5:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4ee9:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4eed:	48 83 c2 08          	add    rdx,0x8
    4ef1:	48 89 c6             	mov    rsi,rax
    4ef4:	48 89 d7             	mov    rdi,rdx
    4ef7:	e8 54 d8 ff ff       	call   2750 <strcpy@plt>
    4efc:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    4f00:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    4f03:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    4f06:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4f09:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4f0d:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    4f11:	48 89 d1             	mov    rcx,rdx
    4f14:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 4f50 <verify_ip_addr>
    4f1b:	be 00 00 00 00       	mov    esi,0x0
    4f20:	48 89 c7             	mov    rdi,rax
    4f23:	e8 88 d6 ff ff       	call   25b0 <pthread_create@plt>
    4f28:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4f2c:	be 00 00 00 00       	mov    esi,0x0
    4f31:	48 89 c7             	mov    rdi,rax
    4f34:	e8 27 d5 ff ff       	call   2460 <pthread_join@plt>
    4f39:	90                   	nop
    4f3a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f3e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4f45:	00 00 
    4f47:	74 05                	je     4f4e <add_ip_addr_or_inc_counter+0xea>
    4f49:	e8 d2 d7 ff ff       	call   2720 <__stack_chk_fail@plt>
    4f4e:	c9                   	leave  
    4f4f:	c3                   	ret    

0000000000004f50 <verify_ip_addr>:
    4f50:	f3 0f 1e fa          	endbr64 
    4f54:	55                   	push   rbp
    4f55:	48 89 e5             	mov    rbp,rsp
    4f58:	48 83 ec 30          	sub    rsp,0x30
    4f5c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    4f60:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4f64:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    4f68:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    4f6f:	e9 c9 00 00 00       	jmp    503d <verify_ip_addr+0xed>
    4f74:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    4f77:	48 63 d0             	movsxd rdx,eax
    4f7a:	48 89 d0             	mov    rax,rdx
    4f7d:	48 c1 e0 02          	shl    rax,0x2
    4f81:	48 01 d0             	add    rax,rdx
    4f84:	48 c1 e0 03          	shl    rax,0x3
    4f88:	48 01 d0             	add    rax,rdx
    4f8b:	48 c1 e0 04          	shl    rax,0x4
    4f8f:	48 8d 15 8a e5 0e 00 	lea    rdx,[rip+0xee58a]        # f3520 <watchlist>
    4f96:	48 01 d0             	add    rax,rdx
    4f99:	48 8d 50 08          	lea    rdx,[rax+0x8]
    4f9d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4fa1:	48 83 c0 08          	add    rax,0x8
    4fa5:	48 89 d6             	mov    rsi,rdx
    4fa8:	48 89 c7             	mov    rdi,rax
    4fab:	e8 80 d7 ff ff       	call   2730 <strcmp@plt>
    4fb0:	85 c0                	test   eax,eax
    4fb2:	0f 85 81 00 00 00    	jne    5039 <verify_ip_addr+0xe9>
    4fb8:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    4fbb:	48 63 d0             	movsxd rdx,eax
    4fbe:	48 89 d0             	mov    rax,rdx
    4fc1:	48 c1 e0 02          	shl    rax,0x2
    4fc5:	48 01 d0             	add    rax,rdx
    4fc8:	48 c1 e0 03          	shl    rax,0x3
    4fcc:	48 01 d0             	add    rax,rdx
    4fcf:	48 c1 e0 04          	shl    rax,0x4
    4fd3:	48 89 c2             	mov    rdx,rax
    4fd6:	48 8d 05 9b e7 0e 00 	lea    rax,[rip+0xee79b]        # f3778 <watchlist+0x258>
    4fdd:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4fe0:	8d 48 01             	lea    ecx,[rax+0x1]
    4fe3:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    4fe6:	48 63 d0             	movsxd rdx,eax
    4fe9:	48 89 d0             	mov    rax,rdx
    4fec:	48 c1 e0 02          	shl    rax,0x2
    4ff0:	48 01 d0             	add    rax,rdx
    4ff3:	48 c1 e0 03          	shl    rax,0x3
    4ff7:	48 01 d0             	add    rax,rdx
    4ffa:	48 c1 e0 04          	shl    rax,0x4
    4ffe:	48 89 c2             	mov    rdx,rax
    5001:	48 8d 05 70 e7 0e 00 	lea    rax,[rip+0xee770]        # f3778 <watchlist+0x258>
    5008:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    500b:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    500e:	48 63 d0             	movsxd rdx,eax
    5011:	48 89 d0             	mov    rax,rdx
    5014:	48 c1 e0 02          	shl    rax,0x2
    5018:	48 01 d0             	add    rax,rdx
    501b:	48 c1 e0 03          	shl    rax,0x3
    501f:	48 01 d0             	add    rax,rdx
    5022:	48 c1 e0 04          	shl    rax,0x4
    5026:	48 8d 15 f3 e4 0e 00 	lea    rdx,[rip+0xee4f3]        # f3520 <watchlist>
    502d:	48 01 d0             	add    rax,rdx
    5030:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5034:	e9 f5 00 00 00       	jmp    512e <verify_ip_addr+0x1de>
    5039:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    503d:	8b 05 d5 bf 00 00    	mov    eax,DWORD PTR [rip+0xbfd5]        # 11018 <watchlist_num>
    5043:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    5046:	0f 8e 28 ff ff ff    	jle    4f74 <verify_ip_addr+0x24>
    504c:	bf 90 02 00 00       	mov    edi,0x290
    5051:	e8 ea d4 ff ff       	call   2540 <malloc@plt>
    5056:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    505a:	8b 05 b8 bf 00 00    	mov    eax,DWORD PTR [rip+0xbfb8]        # 11018 <watchlist_num>
    5060:	83 c0 01             	add    eax,0x1
    5063:	89 05 af bf 00 00    	mov    DWORD PTR [rip+0xbfaf],eax        # 11018 <watchlist_num>
    5069:	8b 05 a9 bf 00 00    	mov    eax,DWORD PTR [rip+0xbfa9]        # 11018 <watchlist_num>
    506f:	48 63 d0             	movsxd rdx,eax
    5072:	48 89 d0             	mov    rax,rdx
    5075:	48 c1 e0 02          	shl    rax,0x2
    5079:	48 01 d0             	add    rax,rdx
    507c:	48 c1 e0 03          	shl    rax,0x3
    5080:	48 01 d0             	add    rax,rdx
    5083:	48 c1 e0 04          	shl    rax,0x4
    5087:	48 89 c1             	mov    rcx,rax
    508a:	48 8d 05 8f e4 0e 00 	lea    rax,[rip+0xee48f]        # f3520 <watchlist>
    5091:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5095:	48 01 c8             	add    rax,rcx
    5098:	48 89 d6             	mov    rsi,rdx
    509b:	ba 52 00 00 00       	mov    edx,0x52
    50a0:	48 89 c7             	mov    rdi,rax
    50a3:	48 89 d1             	mov    rcx,rdx
    50a6:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    50a9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    50ad:	48 83 c0 08          	add    rax,0x8
    50b1:	ba 0f 00 00 00       	mov    edx,0xf
    50b6:	be 00 00 00 00       	mov    esi,0x0
    50bb:	48 89 c7             	mov    rdi,rax
    50be:	e8 bd d3 ff ff       	call   2480 <memset@plt>
    50c3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    50c7:	48 8d 48 08          	lea    rcx,[rax+0x8]
    50cb:	8b 05 47 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf47]        # 11018 <watchlist_num>
    50d1:	48 63 d0             	movsxd rdx,eax
    50d4:	48 89 d0             	mov    rax,rdx
    50d7:	48 c1 e0 02          	shl    rax,0x2
    50db:	48 01 d0             	add    rax,rdx
    50de:	48 c1 e0 03          	shl    rax,0x3
    50e2:	48 01 d0             	add    rax,rdx
    50e5:	48 c1 e0 04          	shl    rax,0x4
    50e9:	48 8d 15 30 e4 0e 00 	lea    rdx,[rip+0xee430]        # f3520 <watchlist>
    50f0:	48 01 d0             	add    rax,rdx
    50f3:	48 83 c0 08          	add    rax,0x8
    50f7:	48 89 ce             	mov    rsi,rcx
    50fa:	48 89 c7             	mov    rdi,rax
    50fd:	e8 4e d6 ff ff       	call   2750 <strcpy@plt>
    5102:	8b 05 10 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf10]        # 11018 <watchlist_num>
    5108:	48 63 d0             	movsxd rdx,eax
    510b:	48 89 d0             	mov    rax,rdx
    510e:	48 c1 e0 02          	shl    rax,0x2
    5112:	48 01 d0             	add    rax,rdx
    5115:	48 c1 e0 03          	shl    rax,0x3
    5119:	48 01 d0             	add    rax,rdx
    511c:	48 c1 e0 04          	shl    rax,0x4
    5120:	48 8d 15 f9 e3 0e 00 	lea    rdx,[rip+0xee3f9]        # f3520 <watchlist>
    5127:	48 01 d0             	add    rax,rdx
    512a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    512e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5132:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5135:	84 c0                	test   al,al
    5137:	74 36                	je     516f <verify_ip_addr+0x21f>
    5139:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    513d:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5143:	8d 50 01             	lea    edx,[rax+0x1]
    5146:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    514a:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5150:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5154:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    515a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    515e:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5161:	01 c2                	add    edx,eax
    5163:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5167:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    516d:	eb 34                	jmp    51a3 <verify_ip_addr+0x253>
    516f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5173:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    5179:	8d 50 01             	lea    edx,[rax+0x1]
    517c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5180:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    5186:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    518a:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    5190:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5194:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5197:	01 c2                	add    edx,eax
    5199:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    519d:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    51a3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51a7:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    51ad:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51b1:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    51b4:	01 c2                	add    edx,eax
    51b6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51ba:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    51c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51c4:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    51ca:	8d 14 00             	lea    edx,[rax+rax*1]
    51cd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51d1:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    51d7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51db:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    51de:	83 f8 5e             	cmp    eax,0x5e
    51e1:	0f 84 9b 00 00 00    	je     5282 <verify_ip_addr+0x332>
    51e7:	83 f8 5e             	cmp    eax,0x5e
    51ea:	0f 8f cf 00 00 00    	jg     52bf <verify_ip_addr+0x36f>
    51f0:	83 f8 5c             	cmp    eax,0x5c
    51f3:	74 0a                	je     51ff <verify_ip_addr+0x2af>
    51f5:	83 f8 5d             	cmp    eax,0x5d
    51f8:	74 48                	je     5242 <verify_ip_addr+0x2f2>
    51fa:	e9 c0 00 00 00       	jmp    52bf <verify_ip_addr+0x36f>
    51ff:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5203:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5206:	84 c0                	test   al,al
    5208:	74 1c                	je     5226 <verify_ip_addr+0x2d6>
    520a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    520e:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    5214:	8d 50 01             	lea    edx,[rax+0x1]
    5217:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    521b:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    5221:	e9 d5 00 00 00       	jmp    52fb <verify_ip_addr+0x3ab>
    5226:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    522a:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    5230:	8d 50 01             	lea    edx,[rax+0x1]
    5233:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5237:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    523d:	e9 b9 00 00 00       	jmp    52fb <verify_ip_addr+0x3ab>
    5242:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5246:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5249:	84 c0                	test   al,al
    524b:	74 1c                	je     5269 <verify_ip_addr+0x319>
    524d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5251:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    5257:	8d 50 01             	lea    edx,[rax+0x1]
    525a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    525e:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5264:	e9 92 00 00 00       	jmp    52fb <verify_ip_addr+0x3ab>
    5269:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    526d:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5273:	8d 50 01             	lea    edx,[rax+0x1]
    5276:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    527a:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    5280:	eb 79                	jmp    52fb <verify_ip_addr+0x3ab>
    5282:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5286:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5289:	84 c0                	test   al,al
    528b:	74 19                	je     52a6 <verify_ip_addr+0x356>
    528d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5291:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    5297:	8d 50 01             	lea    edx,[rax+0x1]
    529a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    529e:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    52a4:	eb 55                	jmp    52fb <verify_ip_addr+0x3ab>
    52a6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52aa:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    52b0:	8d 50 01             	lea    edx,[rax+0x1]
    52b3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52b7:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    52bd:	eb 3c                	jmp    52fb <verify_ip_addr+0x3ab>
    52bf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52c3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52c6:	84 c0                	test   al,al
    52c8:	74 19                	je     52e3 <verify_ip_addr+0x393>
    52ca:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ce:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    52d4:	8d 50 01             	lea    edx,[rax+0x1]
    52d7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52db:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    52e1:	eb 17                	jmp    52fa <verify_ip_addr+0x3aa>
    52e3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52e7:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    52ed:	8d 50 01             	lea    edx,[rax+0x1]
    52f0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52f4:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    52fa:	90                   	nop
    52fb:	b8 01 00 00 00       	mov    eax,0x1
    5300:	c9                   	leave  
    5301:	c3                   	ret    

0000000000005302 <ascii_hexdump>:
    5302:	f3 0f 1e fa          	endbr64 
    5306:	55                   	push   rbp
    5307:	48 89 e5             	mov    rbp,rsp
    530a:	48 83 ec 20          	sub    rsp,0x20
    530e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5312:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    5315:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    531c:	eb 52                	jmp    5370 <ascii_hexdump+0x6e>
    531e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5321:	48 63 d0             	movsxd rdx,eax
    5324:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5328:	48 01 d0             	add    rax,rdx
    532b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    532e:	3c 20                	cmp    al,0x20
    5330:	76 30                	jbe    5362 <ascii_hexdump+0x60>
    5332:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5335:	48 63 d0             	movsxd rdx,eax
    5338:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    533c:	48 01 d0             	add    rax,rdx
    533f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5342:	3c 7e                	cmp    al,0x7e
    5344:	77 1c                	ja     5362 <ascii_hexdump+0x60>
    5346:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5349:	48 63 d0             	movsxd rdx,eax
    534c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5350:	48 01 d0             	add    rax,rdx
    5353:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5356:	0f b6 c0             	movzx  eax,al
    5359:	89 c7                	mov    edi,eax
    535b:	e8 90 d1 ff ff       	call   24f0 <putchar@plt>
    5360:	eb 0a                	jmp    536c <ascii_hexdump+0x6a>
    5362:	bf 2e 00 00 00       	mov    edi,0x2e
    5367:	e8 84 d1 ff ff       	call   24f0 <putchar@plt>
    536c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5370:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5373:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    5376:	7c a6                	jl     531e <ascii_hexdump+0x1c>
    5378:	bf 0a 00 00 00       	mov    edi,0xa
    537d:	e8 6e d1 ff ff       	call   24f0 <putchar@plt>
    5382:	90                   	nop
    5383:	c9                   	leave  
    5384:	c3                   	ret    

0000000000005385 <stdout_alert>:
    5385:	f3 0f 1e fa          	endbr64 
    5389:	55                   	push   rbp
    538a:	48 89 e5             	mov    rbp,rsp
    538d:	53                   	push   rbx
    538e:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    5395:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    539c:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    53a3:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    53a9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    53b0:	00 00 
    53b2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    53b6:	31 c0                	xor    eax,eax
    53b8:	bf 00 00 00 00       	mov    edi,0x0
    53bd:	e8 8e d4 ff ff       	call   2850 <time@plt>
    53c2:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    53c9:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    53d0:	48 89 c7             	mov    rdi,rax
    53d3:	e8 38 d4 ff ff       	call   2810 <localtime@plt>
    53d8:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    53db:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    53df:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    53e6:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    53ed:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    53f1:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    53f5:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    53fc:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    5403:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    5407:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    540b:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    5412:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    5419:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    541d:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5424:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    542a:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    5430:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    5437:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    543e:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5444:	8d 48 01             	lea    ecx,[rax+0x1]
    5447:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    544d:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5453:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    545a:	57                   	push   rdi
    545b:	56                   	push   rsi
    545c:	48 8d 35 63 76 00 00 	lea    rsi,[rip+0x7663]        # cac6 <_IO_stdin_used+0xac6>
    5463:	48 89 c7             	mov    rdi,rax
    5466:	b8 00 00 00 00       	mov    eax,0x0
    546b:	e8 90 d1 ff ff       	call   2600 <sprintf@plt>
    5470:	48 83 c4 10          	add    rsp,0x10
    5474:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    547b:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    547e:	3d 80 00 00 00       	cmp    eax,0x80
    5483:	75 4e                	jne    54d3 <stdout_alert+0x14e>
    5485:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    548c:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    5490:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5497:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    549b:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    54a2:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    54a9:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    54b0:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    54b7:	49 89 f9             	mov    r9,rdi
    54ba:	49 89 f0             	mov    r8,rsi
    54bd:	48 8d 35 1e 76 00 00 	lea    rsi,[rip+0x761e]        # cae2 <_IO_stdin_used+0xae2>
    54c4:	48 89 c7             	mov    rdi,rax
    54c7:	b8 00 00 00 00       	mov    eax,0x0
    54cc:	e8 2f d1 ff ff       	call   2600 <sprintf@plt>
    54d1:	eb 61                	jmp    5534 <stdout_alert+0x1af>
    54d3:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54da:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    54dd:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54e4:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    54e8:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54ef:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    54f3:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54fa:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    54fe:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5505:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    550c:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5513:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    551a:	57                   	push   rdi
    551b:	56                   	push   rsi
    551c:	48 8d 35 cf 75 00 00 	lea    rsi,[rip+0x75cf]        # caf2 <_IO_stdin_used+0xaf2>
    5523:	48 89 c7             	mov    rdi,rax
    5526:	b8 00 00 00 00       	mov    eax,0x0
    552b:	e8 d0 d0 ff ff       	call   2600 <sprintf@plt>
    5530:	48 83 c4 10          	add    rsp,0x10
    5534:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    553b:	48 89 c6             	mov    rsi,rax
    553e:	48 8d 3d c3 75 00 00 	lea    rdi,[rip+0x75c3]        # cb08 <_IO_stdin_used+0xb08>
    5545:	b8 00 00 00 00       	mov    eax,0x0
    554a:	e8 21 cf ff ff       	call   2470 <printf@plt>
    554f:	48 8b 05 da ba 00 00 	mov    rax,QWORD PTR [rip+0xbada]        # 11030 <def_log_file>
    5556:	48 8d 35 ae 75 00 00 	lea    rsi,[rip+0x75ae]        # cb0b <_IO_stdin_used+0xb0b>
    555d:	48 89 c7             	mov    rdi,rax
    5560:	e8 eb cf ff ff       	call   2550 <fopen@plt>
    5565:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    556c:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5573:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    557a:	48 89 d6             	mov    rsi,rdx
    557d:	48 89 c7             	mov    rdi,rax
    5580:	e8 eb d0 ff ff       	call   2670 <fputs@plt>
    5585:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    558c:	48 89 c7             	mov    rdi,rax
    558f:	e8 fc d1 ff ff       	call   2790 <fclose@plt>
    5594:	90                   	nop
    5595:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5599:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    55a0:	00 00 
    55a2:	74 05                	je     55a9 <stdout_alert+0x224>
    55a4:	e8 77 d1 ff ff       	call   2720 <__stack_chk_fail@plt>
    55a9:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    55ad:	c9                   	leave  
    55ae:	c3                   	ret    

00000000000055af <str_match_parser>:
    55af:	f3 0f 1e fa          	endbr64 
    55b3:	55                   	push   rbp
    55b4:	48 89 e5             	mov    rbp,rsp
    55b7:	53                   	push   rbx
    55b8:	48 83 ec 48          	sub    rsp,0x48
    55bc:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    55c0:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    55c4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    55cb:	00 00 
    55cd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    55d1:	31 c0                	xor    eax,eax
    55d3:	48 89 e0             	mov    rax,rsp
    55d6:	48 89 c3             	mov    rbx,rax
    55d9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    55dd:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    55e0:	85 c0                	test   eax,eax
    55e2:	75 0a                	jne    55ee <str_match_parser+0x3f>
    55e4:	b8 00 00 00 00       	mov    eax,0x0
    55e9:	e9 e1 01 00 00       	jmp    57cf <str_match_parser+0x220>
    55ee:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    55f2:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    55f5:	83 c0 01             	add    eax,0x1
    55f8:	01 c0                	add    eax,eax
    55fa:	48 98                	cdqe   
    55fc:	48 83 e8 01          	sub    rax,0x1
    5600:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5604:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5608:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    560b:	83 c0 01             	add    eax,0x1
    560e:	01 c0                	add    eax,eax
    5610:	48 98                	cdqe   
    5612:	49 89 c2             	mov    r10,rax
    5615:	41 bb 00 00 00 00    	mov    r11d,0x0
    561b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    561f:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5622:	83 c0 01             	add    eax,0x1
    5625:	01 c0                	add    eax,eax
    5627:	48 98                	cdqe   
    5629:	49 89 c0             	mov    r8,rax
    562c:	41 b9 00 00 00 00    	mov    r9d,0x0
    5632:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5636:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5639:	83 c0 01             	add    eax,0x1
    563c:	01 c0                	add    eax,eax
    563e:	48 98                	cdqe   
    5640:	ba 10 00 00 00       	mov    edx,0x10
    5645:	48 83 ea 01          	sub    rdx,0x1
    5649:	48 01 d0             	add    rax,rdx
    564c:	be 10 00 00 00       	mov    esi,0x10
    5651:	ba 00 00 00 00       	mov    edx,0x0
    5656:	48 f7 f6             	div    rsi
    5659:	48 6b c0 10          	imul   rax,rax,0x10
    565d:	48 89 c1             	mov    rcx,rax
    5660:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    5667:	48 89 e2             	mov    rdx,rsp
    566a:	48 29 ca             	sub    rdx,rcx
    566d:	48 39 d4             	cmp    rsp,rdx
    5670:	74 12                	je     5684 <str_match_parser+0xd5>
    5672:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    5679:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    5680:	00 00 
    5682:	eb e9                	jmp    566d <str_match_parser+0xbe>
    5684:	48 89 c2             	mov    rdx,rax
    5687:	81 e2 ff 0f 00 00    	and    edx,0xfff
    568d:	48 29 d4             	sub    rsp,rdx
    5690:	48 89 c2             	mov    rdx,rax
    5693:	81 e2 ff 0f 00 00    	and    edx,0xfff
    5699:	48 85 d2             	test   rdx,rdx
    569c:	74 10                	je     56ae <str_match_parser+0xff>
    569e:	25 ff 0f 00 00       	and    eax,0xfff
    56a3:	48 83 e8 08          	sub    rax,0x8
    56a7:	48 01 e0             	add    rax,rsp
    56aa:	48 83 08 00          	or     QWORD PTR [rax],0x0
    56ae:	48 89 e0             	mov    rax,rsp
    56b1:	48 83 c0 00          	add    rax,0x0
    56b5:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    56b9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56bd:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56c0:	83 c0 01             	add    eax,0x1
    56c3:	01 c0                	add    eax,eax
    56c5:	48 63 d0             	movsxd rdx,eax
    56c8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    56cc:	be 00 00 00 00       	mov    esi,0x0
    56d1:	48 89 c7             	mov    rdi,rax
    56d4:	e8 a7 cd ff ff       	call   2480 <memset@plt>
    56d9:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    56e0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    56e4:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    56ea:	85 c0                	test   eax,eax
    56ec:	74 5f                	je     574d <str_match_parser+0x19e>
    56ee:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    56f2:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    56f5:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    56f8:	eb 42                	jmp    573c <str_match_parser+0x18d>
    56fa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56fe:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5701:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    5704:	48 98                	cdqe   
    5706:	48 01 d0             	add    rax,rdx
    5709:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    570c:	0f b6 d0             	movzx  edx,al
    570f:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5712:	8d 48 01             	lea    ecx,[rax+0x1]
    5715:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    5718:	01 c0                	add    eax,eax
    571a:	48 63 c8             	movsxd rcx,eax
    571d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5721:	48 01 c8             	add    rax,rcx
    5724:	48 8d 35 e2 73 00 00 	lea    rsi,[rip+0x73e2]        # cb0d <_IO_stdin_used+0xb0d>
    572b:	48 89 c7             	mov    rdi,rax
    572e:	b8 00 00 00 00       	mov    eax,0x0
    5733:	e8 c8 ce ff ff       	call   2600 <sprintf@plt>
    5738:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    573c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5740:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    5746:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    5749:	7c af                	jl     56fa <str_match_parser+0x14b>
    574b:	eb 5a                	jmp    57a7 <str_match_parser+0x1f8>
    574d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5751:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5754:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    5757:	eb 42                	jmp    579b <str_match_parser+0x1ec>
    5759:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    575d:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5760:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    5763:	48 98                	cdqe   
    5765:	48 01 d0             	add    rax,rdx
    5768:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    576b:	0f b6 d0             	movzx  edx,al
    576e:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5771:	8d 48 01             	lea    ecx,[rax+0x1]
    5774:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    5777:	01 c0                	add    eax,eax
    5779:	48 63 c8             	movsxd rcx,eax
    577c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5780:	48 01 c8             	add    rax,rcx
    5783:	48 8d 35 83 73 00 00 	lea    rsi,[rip+0x7383]        # cb0d <_IO_stdin_used+0xb0d>
    578a:	48 89 c7             	mov    rdi,rax
    578d:	b8 00 00 00 00       	mov    eax,0x0
    5792:	e8 69 ce ff ff       	call   2600 <sprintf@plt>
    5797:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    579b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    579f:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    57a2:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    57a5:	7c b2                	jl     5759 <str_match_parser+0x1aa>
    57a7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57ab:	48 8d 50 40          	lea    rdx,[rax+0x40]
    57af:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57b3:	48 89 d6             	mov    rsi,rdx
    57b6:	48 89 c7             	mov    rdi,rax
    57b9:	e8 92 ce ff ff       	call   2650 <strstr@plt>
    57be:	48 85 c0             	test   rax,rax
    57c1:	74 07                	je     57ca <str_match_parser+0x21b>
    57c3:	b8 01 00 00 00       	mov    eax,0x1
    57c8:	eb 05                	jmp    57cf <str_match_parser+0x220>
    57ca:	b8 00 00 00 00       	mov    eax,0x0
    57cf:	48 89 dc             	mov    rsp,rbx
    57d2:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    57d6:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    57dd:	00 00 
    57df:	74 05                	je     57e6 <str_match_parser+0x237>
    57e1:	e8 3a cf ff ff       	call   2720 <__stack_chk_fail@plt>
    57e6:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    57ea:	c9                   	leave  
    57eb:	c3                   	ret    

00000000000057ec <is_blocked_ipv4>:
    57ec:	f3 0f 1e fa          	endbr64 
    57f0:	55                   	push   rbp
    57f1:	48 89 e5             	mov    rbp,rsp
    57f4:	48 83 ec 20          	sub    rsp,0x20
    57f8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    57fc:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5803:	eb 3b                	jmp    5840 <is_blocked_ipv4+0x54>
    5805:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5808:	48 63 d0             	movsxd rdx,eax
    580b:	48 89 d0             	mov    rax,rdx
    580e:	48 c1 e0 03          	shl    rax,0x3
    5812:	48 01 d0             	add    rax,rdx
    5815:	48 01 c0             	add    rax,rax
    5818:	48 8d 15 c1 da 0e 00 	lea    rdx,[rip+0xedac1]        # f32e0 <blocked_ipv4_addrs>
    581f:	48 01 c2             	add    rdx,rax
    5822:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5826:	48 89 d6             	mov    rsi,rdx
    5829:	48 89 c7             	mov    rdi,rax
    582c:	e8 ff ce ff ff       	call   2730 <strcmp@plt>
    5831:	85 c0                	test   eax,eax
    5833:	75 07                	jne    583c <is_blocked_ipv4+0x50>
    5835:	b8 01 00 00 00       	mov    eax,0x1
    583a:	eb 14                	jmp    5850 <is_blocked_ipv4+0x64>
    583c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5840:	8b 05 ca b7 00 00    	mov    eax,DWORD PTR [rip+0xb7ca]        # 11010 <blk_ipv4_len>
    5846:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    5849:	7e ba                	jle    5805 <is_blocked_ipv4+0x19>
    584b:	b8 00 00 00 00       	mov    eax,0x0
    5850:	c9                   	leave  
    5851:	c3                   	ret    

0000000000005852 <none>:
    5852:	f3 0f 1e fa          	endbr64 
    5856:	55                   	push   rbp
    5857:	48 89 e5             	mov    rbp,rsp
    585a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    585e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5862:	b8 01 00 00 00       	mov    eax,0x1
    5867:	5d                   	pop    rbp
    5868:	c3                   	ret    

0000000000005869 <pcre_match>:
    5869:	f3 0f 1e fa          	endbr64 
    586d:	55                   	push   rbp
    586e:	48 89 e5             	mov    rbp,rsp
    5871:	48 83 ec 10          	sub    rsp,0x10
    5875:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5879:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    587d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5881:	48 8b 00             	mov    rax,QWORD PTR [rax]
    5884:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    5888:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    588f:	41 b8 00 00 00 00    	mov    r8d,0x0
    5895:	b9 00 00 00 00       	mov    ecx,0x0
    589a:	ba 00 00 00 00       	mov    edx,0x0
    589f:	48 89 c6             	mov    rsi,rax
    58a2:	e8 b9 cc ff ff       	call   2560 <regexec@plt>
    58a7:	83 f8 01             	cmp    eax,0x1
    58aa:	75 07                	jne    58b3 <pcre_match+0x4a>
    58ac:	b8 00 00 00 00       	mov    eax,0x0
    58b1:	eb 05                	jmp    58b8 <pcre_match+0x4f>
    58b3:	b8 01 00 00 00       	mov    eax,0x1
    58b8:	c9                   	leave  
    58b9:	c3                   	ret    

00000000000058ba <rule_library_parser>:
    58ba:	f3 0f 1e fa          	endbr64 
    58be:	55                   	push   rbp
    58bf:	48 89 e5             	mov    rbp,rsp
    58c2:	53                   	push   rbx
    58c3:	48 83 ec 48          	sub    rsp,0x48
    58c7:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    58cb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    58d2:	00 00 
    58d4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    58d8:	31 c0                	xor    eax,eax
    58da:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58de:	48 8d 35 33 72 00 00 	lea    rsi,[rip+0x7233]        # cb18 <_IO_stdin_used+0xb18>
    58e5:	48 89 c7             	mov    rdi,rax
    58e8:	e8 63 cc ff ff       	call   2550 <fopen@plt>
    58ed:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    58f1:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    58f6:	75 22                	jne    591a <rule_library_parser+0x60>
    58f8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58fc:	48 89 c6             	mov    rsi,rax
    58ff:	48 8d 3d 1a 72 00 00 	lea    rdi,[rip+0x721a]        # cb20 <_IO_stdin_used+0xb20>
    5906:	b8 00 00 00 00       	mov    eax,0x0
    590b:	e8 60 cb ff ff       	call   2470 <printf@plt>
    5910:	bf 01 00 00 00       	mov    edi,0x1
    5915:	e8 c6 cb ff ff       	call   24e0 <exit@plt>
    591a:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5921:	00 
    5922:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5929:	00 
    592a:	e9 70 05 00 00       	jmp    5e9f <rule_library_parser+0x5e5>
    592f:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5933:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5937:	48 8d 35 08 72 00 00 	lea    rsi,[rip+0x7208]        # cb46 <_IO_stdin_used+0xb46>
    593e:	48 89 c7             	mov    rdi,rax
    5941:	e8 6a ce ff ff       	call   27b0 <strcspn@plt>
    5946:	48 01 d8             	add    rax,rbx
    5949:	c6 00 00             	mov    BYTE PTR [rax],0x0
    594c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5950:	48 89 c7             	mov    rdi,rax
    5953:	e8 b9 05 00 00       	call   5f11 <is_comment>
    5958:	84 c0                	test   al,al
    595a:	74 05                	je     5961 <rule_library_parser+0xa7>
    595c:	e9 3e 05 00 00       	jmp    5e9f <rule_library_parser+0x5e5>
    5961:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5965:	ba 1a 00 00 00       	mov    edx,0x1a
    596a:	48 8d 35 d7 71 00 00 	lea    rsi,[rip+0x71d7]        # cb48 <_IO_stdin_used+0xb48>
    5971:	48 89 c7             	mov    rdi,rax
    5974:	e8 b7 cb ff ff       	call   2530 <strncmp@plt>
    5979:	85 c0                	test   eax,eax
    597b:	75 39                	jne    59b6 <rule_library_parser+0xfc>
    597d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5981:	48 83 c0 1a          	add    rax,0x1a
    5985:	48 8d 35 d7 71 00 00 	lea    rsi,[rip+0x71d7]        # cb63 <_IO_stdin_used+0xb63>
    598c:	48 89 c7             	mov    rdi,rax
    598f:	e8 9c cd ff ff       	call   2730 <strcmp@plt>
    5994:	85 c0                	test   eax,eax
    5996:	75 0f                	jne    59a7 <rule_library_parser+0xed>
    5998:	c7 05 e2 b6 00 00 01 	mov    DWORD PTR [rip+0xb6e2],0x1        # 11084 <strict_icmp_timestamp_req>
    599f:	00 00 00 
    59a2:	e9 e2 04 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    59a7:	c7 05 d3 b6 00 00 00 	mov    DWORD PTR [rip+0xb6d3],0x0        # 11084 <strict_icmp_timestamp_req>
    59ae:	00 00 00 
    59b1:	e9 d3 04 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    59b6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59ba:	ba 1d 00 00 00       	mov    edx,0x1d
    59bf:	48 8d 35 a1 71 00 00 	lea    rsi,[rip+0x71a1]        # cb67 <_IO_stdin_used+0xb67>
    59c6:	48 89 c7             	mov    rdi,rax
    59c9:	e8 62 cb ff ff       	call   2530 <strncmp@plt>
    59ce:	85 c0                	test   eax,eax
    59d0:	75 39                	jne    5a0b <rule_library_parser+0x151>
    59d2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59d6:	48 83 c0 1d          	add    rax,0x1d
    59da:	48 8d 35 82 71 00 00 	lea    rsi,[rip+0x7182]        # cb63 <_IO_stdin_used+0xb63>
    59e1:	48 89 c7             	mov    rdi,rax
    59e4:	e8 47 cd ff ff       	call   2730 <strcmp@plt>
    59e9:	85 c0                	test   eax,eax
    59eb:	75 0f                	jne    59fc <rule_library_parser+0x142>
    59ed:	c7 05 91 b6 00 00 01 	mov    DWORD PTR [rip+0xb691],0x1        # 11088 <strict_nmap_host_alive_check>
    59f4:	00 00 00 
    59f7:	e9 8d 04 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    59fc:	c7 05 82 b6 00 00 00 	mov    DWORD PTR [rip+0xb682],0x0        # 11088 <strict_nmap_host_alive_check>
    5a03:	00 00 00 
    5a06:	e9 7e 04 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5a0b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a0f:	ba 17 00 00 00       	mov    edx,0x17
    5a14:	48 8d 35 6a 71 00 00 	lea    rsi,[rip+0x716a]        # cb85 <_IO_stdin_used+0xb85>
    5a1b:	48 89 c7             	mov    rdi,rax
    5a1e:	e8 0d cb ff ff       	call   2530 <strncmp@plt>
    5a23:	85 c0                	test   eax,eax
    5a25:	75 43                	jne    5a6a <rule_library_parser+0x1b0>
    5a27:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a2b:	48 89 c7             	mov    rdi,rax
    5a2e:	e8 ad cb ff ff       	call   25e0 <strlen@plt>
    5a33:	48 83 f8 17          	cmp    rax,0x17
    5a37:	77 16                	ja     5a4f <rule_library_parser+0x195>
    5a39:	48 8d 3d 5d 71 00 00 	lea    rdi,[rip+0x715d]        # cb9d <_IO_stdin_used+0xb9d>
    5a40:	e8 7b ca ff ff       	call   24c0 <puts@plt>
    5a45:	bf 01 00 00 00       	mov    edi,0x1
    5a4a:	e8 91 ca ff ff       	call   24e0 <exit@plt>
    5a4f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a53:	48 83 c0 17          	add    rax,0x17
    5a57:	48 89 c7             	mov    rdi,rax
    5a5a:	e8 41 cc ff ff       	call   26a0 <atoi@plt>
    5a5f:	89 05 fb 44 10 00    	mov    DWORD PTR [rip+0x1044fb],eax        # 109f60 <clean_delay_pkts>
    5a65:	e9 1f 04 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5a6a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a6e:	ba 18 00 00 00       	mov    edx,0x18
    5a73:	48 8d 35 3d 71 00 00 	lea    rsi,[rip+0x713d]        # cbb7 <_IO_stdin_used+0xbb7>
    5a7a:	48 89 c7             	mov    rdi,rax
    5a7d:	e8 ae ca ff ff       	call   2530 <strncmp@plt>
    5a82:	85 c0                	test   eax,eax
    5a84:	75 46                	jne    5acc <rule_library_parser+0x212>
    5a86:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a8a:	48 89 c7             	mov    rdi,rax
    5a8d:	e8 4e cb ff ff       	call   25e0 <strlen@plt>
    5a92:	48 83 f8 18          	cmp    rax,0x18
    5a96:	75 16                	jne    5aae <rule_library_parser+0x1f4>
    5a98:	48 8d 3d fe 70 00 00 	lea    rdi,[rip+0x70fe]        # cb9d <_IO_stdin_used+0xb9d>
    5a9f:	e8 1c ca ff ff       	call   24c0 <puts@plt>
    5aa4:	bf 01 00 00 00       	mov    edi,0x1
    5aa9:	e8 32 ca ff ff       	call   24e0 <exit@plt>
    5aae:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ab2:	48 83 c0 18          	add    rax,0x18
    5ab6:	48 89 c7             	mov    rdi,rax
    5ab9:	e8 e2 cb ff ff       	call   26a0 <atoi@plt>
    5abe:	48 98                	cdqe   
    5ac0:	48 89 05 f1 b7 00 00 	mov    QWORD PTR [rip+0xb7f1],rax        # 112b8 <clean_delay>
    5ac7:	e9 bd 03 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5acc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ad0:	ba 0b 00 00 00       	mov    edx,0xb
    5ad5:	48 8d 35 f4 70 00 00 	lea    rsi,[rip+0x70f4]        # cbd0 <_IO_stdin_used+0xbd0>
    5adc:	48 89 c7             	mov    rdi,rax
    5adf:	e8 4c ca ff ff       	call   2530 <strncmp@plt>
    5ae4:	85 c0                	test   eax,eax
    5ae6:	75 33                	jne    5b1b <rule_library_parser+0x261>
    5ae8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5aec:	48 83 c0 0b          	add    rax,0xb
    5af0:	48 8d 35 6c 70 00 00 	lea    rsi,[rip+0x706c]        # cb63 <_IO_stdin_used+0xb63>
    5af7:	48 89 c7             	mov    rdi,rax
    5afa:	e8 31 cc ff ff       	call   2730 <strcmp@plt>
    5aff:	85 c0                	test   eax,eax
    5b01:	75 0c                	jne    5b0f <rule_library_parser+0x255>
    5b03:	c6 05 17 44 10 00 01 	mov    BYTE PTR [rip+0x104417],0x1        # 109f21 <use_sqlite>
    5b0a:	e9 7a 03 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5b0f:	c6 05 0b 44 10 00 00 	mov    BYTE PTR [rip+0x10440b],0x0        # 109f21 <use_sqlite>
    5b16:	e9 6e 03 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5b1b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b1f:	ba 15 00 00 00       	mov    edx,0x15
    5b24:	48 8d 35 b1 70 00 00 	lea    rsi,[rip+0x70b1]        # cbdc <_IO_stdin_used+0xbdc>
    5b2b:	48 89 c7             	mov    rdi,rax
    5b2e:	e8 fd c9 ff ff       	call   2530 <strncmp@plt>
    5b33:	85 c0                	test   eax,eax
    5b35:	75 34                	jne    5b6b <rule_library_parser+0x2b1>
    5b37:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b3b:	48 83 c0 15          	add    rax,0x15
    5b3f:	48 89 c6             	mov    rsi,rax
    5b42:	48 8d 3d f7 43 10 00 	lea    rdi,[rip+0x1043f7]        # 109f40 <sqlite_db_path>
    5b49:	e8 02 cc ff ff       	call   2750 <strcpy@plt>
    5b4e:	48 8d 35 eb 43 10 00 	lea    rsi,[rip+0x1043eb]        # 109f40 <sqlite_db_path>
    5b55:	48 8d 3d 96 70 00 00 	lea    rdi,[rip+0x7096]        # cbf2 <_IO_stdin_used+0xbf2>
    5b5c:	b8 00 00 00 00       	mov    eax,0x0
    5b61:	e8 43 29 00 00       	call   84a9 <livedebug>
    5b66:	e9 1e 03 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5b6b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b6f:	ba 0b 00 00 00       	mov    edx,0xb
    5b74:	48 8d 35 90 70 00 00 	lea    rsi,[rip+0x7090]        # cc0b <_IO_stdin_used+0xc0b>
    5b7b:	48 89 c7             	mov    rdi,rax
    5b7e:	e8 ad c9 ff ff       	call   2530 <strncmp@plt>
    5b83:	85 c0                	test   eax,eax
    5b85:	75 34                	jne    5bbb <rule_library_parser+0x301>
    5b87:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b8b:	48 83 c0 0b          	add    rax,0xb
    5b8f:	48 89 c6             	mov    rsi,rax
    5b92:	48 8d 3d d7 43 10 00 	lea    rdi,[rip+0x1043d7]        # 109f70 <input_adapter>
    5b99:	e8 b2 cb ff ff       	call   2750 <strcpy@plt>
    5b9e:	48 8d 35 cb 43 10 00 	lea    rsi,[rip+0x1043cb]        # 109f70 <input_adapter>
    5ba5:	48 8d 3d 6c 70 00 00 	lea    rdi,[rip+0x706c]        # cc18 <_IO_stdin_used+0xc18>
    5bac:	b8 00 00 00 00       	mov    eax,0x0
    5bb1:	e8 f3 28 00 00       	call   84a9 <livedebug>
    5bb6:	e9 ce 02 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5bbb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bbf:	ba 0c 00 00 00       	mov    edx,0xc
    5bc4:	48 8d 35 80 70 00 00 	lea    rsi,[rip+0x7080]        # cc4b <_IO_stdin_used+0xc4b>
    5bcb:	48 89 c7             	mov    rdi,rax
    5bce:	e8 5d c9 ff ff       	call   2530 <strncmp@plt>
    5bd3:	85 c0                	test   eax,eax
    5bd5:	75 34                	jne    5c0b <rule_library_parser+0x351>
    5bd7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bdb:	48 83 c0 0c          	add    rax,0xc
    5bdf:	48 89 c6             	mov    rsi,rax
    5be2:	48 8d 3d 97 43 10 00 	lea    rdi,[rip+0x104397]        # 109f80 <output_adapter>
    5be9:	e8 62 cb ff ff       	call   2750 <strcpy@plt>
    5bee:	48 8d 35 8b 43 10 00 	lea    rsi,[rip+0x10438b]        # 109f80 <output_adapter>
    5bf5:	48 8d 3d 5c 70 00 00 	lea    rdi,[rip+0x705c]        # cc58 <_IO_stdin_used+0xc58>
    5bfc:	b8 00 00 00 00       	mov    eax,0x0
    5c01:	e8 a3 28 00 00       	call   84a9 <livedebug>
    5c06:	e9 7e 02 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5c0b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c0f:	ba 05 00 00 00       	mov    edx,0x5
    5c14:	48 8d 35 71 70 00 00 	lea    rsi,[rip+0x7071]        # cc8c <_IO_stdin_used+0xc8c>
    5c1b:	48 89 c7             	mov    rdi,rax
    5c1e:	e8 0d c9 ff ff       	call   2530 <strncmp@plt>
    5c23:	85 c0                	test   eax,eax
    5c25:	0f 85 81 00 00 00    	jne    5cac <rule_library_parser+0x3f2>
    5c2b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c2f:	48 83 c0 05          	add    rax,0x5
    5c33:	48 89 c6             	mov    rsi,rax
    5c36:	48 8d 3d 55 70 00 00 	lea    rdi,[rip+0x7055]        # cc92 <_IO_stdin_used+0xc92>
    5c3d:	b8 00 00 00 00       	mov    eax,0x0
    5c42:	e8 62 28 00 00       	call   84a9 <livedebug>
    5c47:	48 8d 3d 4d 70 00 00 	lea    rdi,[rip+0x704d]        # cc9b <_IO_stdin_used+0xc9b>
    5c4e:	b8 00 00 00 00       	mov    eax,0x0
    5c53:	e8 18 c8 ff ff       	call   2470 <printf@plt>
    5c58:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c5c:	48 83 c0 05          	add    rax,0x5
    5c60:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5c63:	0f b6 15 3d 70 00 00 	movzx  edx,BYTE PTR [rip+0x703d]        # cca7 <_IO_stdin_used+0xca7>
    5c6a:	0f b6 c0             	movzx  eax,al
    5c6d:	0f b6 d2             	movzx  edx,dl
    5c70:	29 d0                	sub    eax,edx
    5c72:	85 c0                	test   eax,eax
    5c74:	75 1b                	jne    5c91 <rule_library_parser+0x3d7>
    5c76:	c7 05 a4 b3 00 00 02 	mov    DWORD PTR [rip+0xb3a4],0x2        # 11024 <VIGIL_MODE>
    5c7d:	00 00 00 
    5c80:	48 8d 3d 22 70 00 00 	lea    rdi,[rip+0x7022]        # cca9 <_IO_stdin_used+0xca9>
    5c87:	e8 34 c8 ff ff       	call   24c0 <puts@plt>
    5c8c:	e9 f8 01 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5c91:	c7 05 89 b3 00 00 01 	mov    DWORD PTR [rip+0xb389],0x1        # 11024 <VIGIL_MODE>
    5c98:	00 00 00 
    5c9b:	48 8d 3d 1e 70 00 00 	lea    rdi,[rip+0x701e]        # ccc0 <_IO_stdin_used+0xcc0>
    5ca2:	e8 19 c8 ff ff       	call   24c0 <puts@plt>
    5ca7:	e9 dd 01 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5cac:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cb0:	ba 08 00 00 00       	mov    edx,0x8
    5cb5:	48 8d 35 1b 70 00 00 	lea    rsi,[rip+0x701b]        # ccd7 <_IO_stdin_used+0xcd7>
    5cbc:	48 89 c7             	mov    rdi,rax
    5cbf:	e8 6c c8 ff ff       	call   2530 <strncmp@plt>
    5cc4:	85 c0                	test   eax,eax
    5cc6:	75 34                	jne    5cfc <rule_library_parser+0x442>
    5cc8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ccc:	48 83 c0 08          	add    rax,0x8
    5cd0:	48 89 c6             	mov    rsi,rax
    5cd3:	48 8d 3d b6 42 10 00 	lea    rdi,[rip+0x1042b6]        # 109f90 <local_ip>
    5cda:	e8 71 ca ff ff       	call   2750 <strcpy@plt>
    5cdf:	48 8d 35 aa 42 10 00 	lea    rsi,[rip+0x1042aa]        # 109f90 <local_ip>
    5ce6:	48 8d 3d f3 6f 00 00 	lea    rdi,[rip+0x6ff3]        # cce0 <_IO_stdin_used+0xce0>
    5ced:	b8 00 00 00 00       	mov    eax,0x0
    5cf2:	e8 b2 27 00 00       	call   84a9 <livedebug>
    5cf7:	e9 8d 01 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5cfc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d00:	ba 06 00 00 00       	mov    edx,0x6
    5d05:	48 8d 35 ef 6f 00 00 	lea    rsi,[rip+0x6fef]        # ccfb <_IO_stdin_used+0xcfb>
    5d0c:	48 89 c7             	mov    rdi,rax
    5d0f:	e8 1c c8 ff ff       	call   2530 <strncmp@plt>
    5d14:	85 c0                	test   eax,eax
    5d16:	75 1c                	jne    5d34 <rule_library_parser+0x47a>
    5d18:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d1c:	48 83 c0 06          	add    rax,0x6
    5d20:	48 89 c6             	mov    rsi,rax
    5d23:	48 8d 3d 86 42 10 00 	lea    rdi,[rip+0x104286]        # 109fb0 <def_gw>
    5d2a:	e8 21 ca ff ff       	call   2750 <strcpy@plt>
    5d2f:	e9 55 01 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5d34:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d38:	ba 08 00 00 00       	mov    edx,0x8
    5d3d:	48 8d 35 be 6f 00 00 	lea    rsi,[rip+0x6fbe]        # cd02 <_IO_stdin_used+0xd02>
    5d44:	48 89 c7             	mov    rdi,rax
    5d47:	e8 e4 c7 ff ff       	call   2530 <strncmp@plt>
    5d4c:	85 c0                	test   eax,eax
    5d4e:	75 3f                	jne    5d8f <rule_library_parser+0x4d5>
    5d50:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d54:	48 83 c0 08          	add    rax,0x8
    5d58:	48 8d 35 04 6e 00 00 	lea    rsi,[rip+0x6e04]        # cb63 <_IO_stdin_used+0xb63>
    5d5f:	48 89 c7             	mov    rdi,rax
    5d62:	e8 c9 c9 ff ff       	call   2730 <strcmp@plt>
    5d67:	85 c0                	test   eax,eax
    5d69:	75 18                	jne    5d83 <rule_library_parser+0x4c9>
    5d6b:	c6 05 50 42 10 00 01 	mov    BYTE PTR [rip+0x104250],0x1        # 109fc2 <use_spi>
    5d72:	48 8d 3d 92 6f 00 00 	lea    rdi,[rip+0x6f92]        # cd0b <_IO_stdin_used+0xd0b>
    5d79:	e8 42 c7 ff ff       	call   24c0 <puts@plt>
    5d7e:	e9 06 01 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5d83:	c6 05 38 42 10 00 00 	mov    BYTE PTR [rip+0x104238],0x0        # 109fc2 <use_spi>
    5d8a:	e9 fa 00 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5d8f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d93:	ba 09 00 00 00       	mov    edx,0x9
    5d98:	48 8d 35 85 6f 00 00 	lea    rsi,[rip+0x6f85]        # cd24 <_IO_stdin_used+0xd24>
    5d9f:	48 89 c7             	mov    rdi,rax
    5da2:	e8 89 c7 ff ff       	call   2530 <strncmp@plt>
    5da7:	85 c0                	test   eax,eax
    5da9:	75 27                	jne    5dd2 <rule_library_parser+0x518>
    5dab:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5daf:	48 89 c7             	mov    rdi,rax
    5db2:	e8 83 01 00 00       	call   5f3a <rstrip>
    5db7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dbb:	48 83 c0 09          	add    rax,0x9
    5dbf:	48 89 c7             	mov    rdi,rax
    5dc2:	e8 4e 4c 00 00       	call   aa15 <homenet_toi>
    5dc7:	89 05 f7 41 10 00    	mov    DWORD PTR [rip+0x1041f7],eax        # 109fc4 <homenet>
    5dcd:	e9 b7 00 00 00       	jmp    5e89 <rule_library_parser+0x5cf>
    5dd2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dd6:	ba 0e 00 00 00       	mov    edx,0xe
    5ddb:	48 8d 35 4c 6f 00 00 	lea    rsi,[rip+0x6f4c]        # cd2e <_IO_stdin_used+0xd2e>
    5de2:	48 89 c7             	mov    rdi,rax
    5de5:	e8 46 c7 ff ff       	call   2530 <strncmp@plt>
    5dea:	85 c0                	test   eax,eax
    5dec:	75 24                	jne    5e12 <rule_library_parser+0x558>
    5dee:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5df2:	48 89 c7             	mov    rdi,rax
    5df5:	e8 40 01 00 00       	call   5f3a <rstrip>
    5dfa:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dfe:	48 83 c0 0e          	add    rax,0xe
    5e02:	48 89 c7             	mov    rdi,rax
    5e05:	e8 0b 4c 00 00       	call   aa15 <homenet_toi>
    5e0a:	89 05 b8 41 10 00    	mov    DWORD PTR [rip+0x1041b8],eax        # 109fc8 <homenetmask>
    5e10:	eb 77                	jmp    5e89 <rule_library_parser+0x5cf>
    5e12:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e16:	ba 09 00 00 00       	mov    edx,0x9
    5e1b:	48 8d 35 1b 6f 00 00 	lea    rsi,[rip+0x6f1b]        # cd3d <_IO_stdin_used+0xd3d>
    5e22:	48 89 c7             	mov    rdi,rax
    5e25:	e8 06 c7 ff ff       	call   2530 <strncmp@plt>
    5e2a:	85 c0                	test   eax,eax
    5e2c:	75 3f                	jne    5e6d <rule_library_parser+0x5b3>
    5e2e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e32:	48 89 c7             	mov    rdi,rax
    5e35:	e8 00 01 00 00       	call   5f3a <rstrip>
    5e3a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e3e:	48 83 c0 09          	add    rax,0x9
    5e42:	48 8d 35 fe 6e 00 00 	lea    rsi,[rip+0x6efe]        # cd47 <_IO_stdin_used+0xd47>
    5e49:	48 89 c7             	mov    rdi,rax
    5e4c:	e8 df c8 ff ff       	call   2730 <strcmp@plt>
    5e51:	85 c0                	test   eax,eax
    5e53:	75 0c                	jne    5e61 <rule_library_parser+0x5a7>
    5e55:	c7 05 09 41 10 00 04 	mov    DWORD PTR [rip+0x104109],0x4        # 109f68 <vigil_location>
    5e5c:	00 00 00 
    5e5f:	eb 28                	jmp    5e89 <rule_library_parser+0x5cf>
    5e61:	c7 05 fd 40 10 00 03 	mov    DWORD PTR [rip+0x1040fd],0x3        # 109f68 <vigil_location>
    5e68:	00 00 00 
    5e6b:	eb 1c                	jmp    5e89 <rule_library_parser+0x5cf>
    5e6d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e71:	48 89 c7             	mov    rdi,rax
    5e74:	e8 7e 00 00 00       	call   5ef7 <is_rule>
    5e79:	84 c0                	test   al,al
    5e7b:	74 0c                	je     5e89 <rule_library_parser+0x5cf>
    5e7d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e81:	48 89 c7             	mov    rdi,rax
    5e84:	e8 18 01 00 00       	call   5fa1 <rule_parser>
    5e89:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e8d:	ba 08 00 00 00       	mov    edx,0x8
    5e92:	be 00 00 00 00       	mov    esi,0x0
    5e97:	48 89 c7             	mov    rdi,rax
    5e9a:	e8 e1 c5 ff ff       	call   2480 <memset@plt>
    5e9f:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5ea3:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5ea7:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5eab:	48 89 ce             	mov    rsi,rcx
    5eae:	48 89 c7             	mov    rdi,rax
    5eb1:	e8 8a c8 ff ff       	call   2740 <getline@plt>
    5eb6:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5eba:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5ebf:	0f 85 6a fa ff ff    	jne    592f <rule_library_parser+0x75>
    5ec5:	8b 05 59 b1 00 00    	mov    eax,DWORD PTR [rip+0xb159]        # 11024 <VIGIL_MODE>
    5ecb:	3d ff ff 00 00       	cmp    eax,0xffff
    5ed0:	75 0a                	jne    5edc <rule_library_parser+0x622>
    5ed2:	c7 05 48 b1 00 00 01 	mov    DWORD PTR [rip+0xb148],0x1        # 11024 <VIGIL_MODE>
    5ed9:	00 00 00 
    5edc:	90                   	nop
    5edd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5ee1:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5ee8:	00 00 
    5eea:	74 05                	je     5ef1 <rule_library_parser+0x637>
    5eec:	e8 2f c8 ff ff       	call   2720 <__stack_chk_fail@plt>
    5ef1:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5ef5:	c9                   	leave  
    5ef6:	c3                   	ret    

0000000000005ef7 <is_rule>:
    5ef7:	f3 0f 1e fa          	endbr64 
    5efb:	55                   	push   rbp
    5efc:	48 89 e5             	mov    rbp,rsp
    5eff:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f03:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f07:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5f0a:	3c 24                	cmp    al,0x24
    5f0c:	0f 94 c0             	sete   al
    5f0f:	5d                   	pop    rbp
    5f10:	c3                   	ret    

0000000000005f11 <is_comment>:
    5f11:	f3 0f 1e fa          	endbr64 
    5f15:	55                   	push   rbp
    5f16:	48 89 e5             	mov    rbp,rsp
    5f19:	48 83 ec 10          	sub    rsp,0x10
    5f1d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f21:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f25:	be 23 00 00 00       	mov    esi,0x23
    5f2a:	48 89 c7             	mov    rdi,rax
    5f2d:	e8 9e c7 ff ff       	call   26d0 <strchr@plt>
    5f32:	48 85 c0             	test   rax,rax
    5f35:	0f 95 c0             	setne  al
    5f38:	c9                   	leave  
    5f39:	c3                   	ret    

0000000000005f3a <rstrip>:
    5f3a:	f3 0f 1e fa          	endbr64 
    5f3e:	55                   	push   rbp
    5f3f:	48 89 e5             	mov    rbp,rsp
    5f42:	48 83 ec 10          	sub    rsp,0x10
    5f46:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f4a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f4e:	48 8d 35 f1 6b 00 00 	lea    rsi,[rip+0x6bf1]        # cb46 <_IO_stdin_used+0xb46>
    5f55:	48 89 c7             	mov    rdi,rax
    5f58:	e8 53 c8 ff ff       	call   27b0 <strcspn@plt>
    5f5d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5f61:	48 01 d0             	add    rax,rdx
    5f64:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5f67:	90                   	nop
    5f68:	c9                   	leave  
    5f69:	c3                   	ret    

0000000000005f6a <syntax_error>:
    5f6a:	f3 0f 1e fa          	endbr64 
    5f6e:	55                   	push   rbp
    5f6f:	48 89 e5             	mov    rbp,rsp
    5f72:	48 83 ec 10          	sub    rsp,0x10
    5f76:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f7a:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    5f7d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5f81:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    5f84:	89 c6                	mov    esi,eax
    5f86:	48 8d 3d c3 6d 00 00 	lea    rdi,[rip+0x6dc3]        # cd50 <_IO_stdin_used+0xd50>
    5f8d:	b8 00 00 00 00       	mov    eax,0x0
    5f92:	e8 d9 c4 ff ff       	call   2470 <printf@plt>
    5f97:	bf 01 00 00 00       	mov    edi,0x1
    5f9c:	e8 3f c5 ff ff       	call   24e0 <exit@plt>

0000000000005fa1 <rule_parser>:
    5fa1:	f3 0f 1e fa          	endbr64 
    5fa5:	55                   	push   rbp
    5fa6:	48 89 e5             	mov    rbp,rsp
    5fa9:	48 83 ec 40          	sub    rsp,0x40
    5fad:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    5fb1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5fb8:	00 00 
    5fba:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    5fbe:	31 c0                	xor    eax,eax
    5fc0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    5fc4:	48 83 c0 01          	add    rax,0x1
    5fc8:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5fcc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5fd0:	48 8d 35 41 6b 00 00 	lea    rsi,[rip+0x6b41]        # cb18 <_IO_stdin_used+0xb18>
    5fd7:	48 89 c7             	mov    rdi,rax
    5fda:	e8 71 c5 ff ff       	call   2550 <fopen@plt>
    5fdf:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5fe3:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    5fe8:	75 22                	jne    600c <rule_parser+0x6b>
    5fea:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5fee:	48 89 c6             	mov    rsi,rax
    5ff1:	48 8d 3d 78 6d 00 00 	lea    rdi,[rip+0x6d78]        # cd70 <_IO_stdin_used+0xd70>
    5ff8:	b8 00 00 00 00       	mov    eax,0x0
    5ffd:	e8 6e c4 ff ff       	call   2470 <printf@plt>
    6002:	bf 01 00 00 00       	mov    edi,0x1
    6007:	e8 d4 c4 ff ff       	call   24e0 <exit@plt>
    600c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6010:	48 89 c6             	mov    rsi,rax
    6013:	48 8d 3d 89 6d 00 00 	lea    rdi,[rip+0x6d89]        # cda3 <_IO_stdin_used+0xda3>
    601a:	b8 00 00 00 00       	mov    eax,0x0
    601f:	e8 4c c4 ff ff       	call   2470 <printf@plt>
    6024:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    602b:	00 
    602c:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    6033:	00 
    6034:	eb 54                	jmp    608a <rule_parser+0xe9>
    6036:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    603a:	48 89 c7             	mov    rdi,rax
    603d:	e8 cf fe ff ff       	call   5f11 <is_comment>
    6042:	84 c0                	test   al,al
    6044:	74 02                	je     6048 <rule_parser+0xa7>
    6046:	eb 42                	jmp    608a <rule_parser+0xe9>
    6048:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    604c:	48 89 c7             	mov    rdi,rax
    604f:	e8 e6 fe ff ff       	call   5f3a <rstrip>
    6054:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6058:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    605b:	0f b6 c0             	movzx  eax,al
    605e:	f7 d8                	neg    eax
    6060:	85 c0                	test   eax,eax
    6062:	75 02                	jne    6066 <rule_parser+0xc5>
    6064:	eb 24                	jmp    608a <rule_parser+0xe9>
    6066:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    606a:	48 8d 35 43 6d 00 00 	lea    rsi,[rip+0x6d43]        # cdb4 <_IO_stdin_used+0xdb4>
    6071:	48 89 c7             	mov    rdi,rax
    6074:	e8 d7 c5 ff ff       	call   2650 <strstr@plt>
    6079:	48 85 c0             	test   rax,rax
    607c:	74 0c                	je     608a <rule_parser+0xe9>
    607e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6082:	48 89 c7             	mov    rdi,rax
    6085:	e8 47 35 00 00       	call   95d1 <line_parser>
    608a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    608e:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6092:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    6096:	48 89 ce             	mov    rsi,rcx
    6099:	48 89 c7             	mov    rdi,rax
    609c:	e8 9f c6 ff ff       	call   2740 <getline@plt>
    60a1:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    60a5:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    60aa:	75 8a                	jne    6036 <rule_parser+0x95>
    60ac:	0f b6 05 6d 3e 10 00 	movzx  eax,BYTE PTR [rip+0x103e6d]        # 109f20 <debug_mode>
    60b3:	84 c0                	test   al,al
    60b5:	74 18                	je     60cf <rule_parser+0x12e>
    60b7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60bb:	48 89 c6             	mov    rsi,rax
    60be:	48 8d 3d f5 6c 00 00 	lea    rdi,[rip+0x6cf5]        # cdba <_IO_stdin_used+0xdba>
    60c5:	b8 00 00 00 00       	mov    eax,0x0
    60ca:	e8 a1 c3 ff ff       	call   2470 <printf@plt>
    60cf:	90                   	nop
    60d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    60d4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    60db:	00 00 
    60dd:	74 05                	je     60e4 <rule_parser+0x143>
    60df:	e8 3c c6 ff ff       	call   2720 <__stack_chk_fail@plt>
    60e4:	c9                   	leave  
    60e5:	c3                   	ret    

00000000000060e6 <deny_conf_parser>:
    60e6:	f3 0f 1e fa          	endbr64 
    60ea:	55                   	push   rbp
    60eb:	48 89 e5             	mov    rbp,rsp
    60ee:	48 83 ec 50          	sub    rsp,0x50
    60f2:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    60f6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    60fd:	00 00 
    60ff:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6103:	31 c0                	xor    eax,eax
    6105:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6109:	48 8d 35 08 6a 00 00 	lea    rsi,[rip+0x6a08]        # cb18 <_IO_stdin_used+0xb18>
    6110:	48 89 c7             	mov    rdi,rax
    6113:	e8 38 c4 ff ff       	call   2550 <fopen@plt>
    6118:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    611c:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    6121:	75 22                	jne    6145 <deny_conf_parser+0x5f>
    6123:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6127:	48 89 c6             	mov    rsi,rax
    612a:	48 8d 3d 9f 6c 00 00 	lea    rdi,[rip+0x6c9f]        # cdd0 <_IO_stdin_used+0xdd0>
    6131:	b8 00 00 00 00       	mov    eax,0x0
    6136:	e8 35 c3 ff ff       	call   2470 <printf@plt>
    613b:	bf 01 00 00 00       	mov    edi,0x1
    6140:	e8 9b c3 ff ff       	call   24e0 <exit@plt>
    6145:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    614c:	00 
    614d:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6154:	00 
    6155:	e9 9a 00 00 00       	jmp    61f4 <deny_conf_parser+0x10e>
    615a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    615e:	48 89 c7             	mov    rdi,rax
    6161:	e8 d4 fd ff ff       	call   5f3a <rstrip>
    6166:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    616a:	48 89 c7             	mov    rdi,rax
    616d:	e8 9f fd ff ff       	call   5f11 <is_comment>
    6172:	84 c0                	test   al,al
    6174:	74 02                	je     6178 <deny_conf_parser+0x92>
    6176:	eb 7c                	jmp    61f4 <deny_conf_parser+0x10e>
    6178:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    617c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    617f:	0f b6 c0             	movzx  eax,al
    6182:	f7 d8                	neg    eax
    6184:	85 c0                	test   eax,eax
    6186:	75 02                	jne    618a <deny_conf_parser+0xa4>
    6188:	eb 6a                	jmp    61f4 <deny_conf_parser+0x10e>
    618a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    618e:	48 8d 35 6c 6c 00 00 	lea    rsi,[rip+0x6c6c]        # ce01 <_IO_stdin_used+0xe01>
    6195:	48 89 c7             	mov    rdi,rax
    6198:	e8 b3 c4 ff ff       	call   2650 <strstr@plt>
    619d:	48 85 c0             	test   rax,rax
    61a0:	74 52                	je     61f4 <deny_conf_parser+0x10e>
    61a2:	8b 05 68 ae 00 00    	mov    eax,DWORD PTR [rip+0xae68]        # 11010 <blk_ipv4_len>
    61a8:	83 c0 01             	add    eax,0x1
    61ab:	89 05 5f ae 00 00    	mov    DWORD PTR [rip+0xae5f],eax        # 11010 <blk_ipv4_len>
    61b1:	8b 05 59 ae 00 00    	mov    eax,DWORD PTR [rip+0xae59]        # 11010 <blk_ipv4_len>
    61b7:	48 63 d0             	movsxd rdx,eax
    61ba:	48 89 d0             	mov    rax,rdx
    61bd:	48 c1 e0 03          	shl    rax,0x3
    61c1:	48 01 d0             	add    rax,rdx
    61c4:	48 01 c0             	add    rax,rax
    61c7:	48 8d 15 12 d1 0e 00 	lea    rdx,[rip+0xed112]        # f32e0 <blocked_ipv4_addrs>
    61ce:	48 01 d0             	add    rax,rdx
    61d1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    61d5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    61d9:	48 83 c0 05          	add    rax,0x5
    61dd:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    61e1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    61e5:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    61e9:	48 89 d6             	mov    rsi,rdx
    61ec:	48 89 c7             	mov    rdi,rax
    61ef:	e8 5c c5 ff ff       	call   2750 <strcpy@plt>
    61f4:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    61f8:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    61fc:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    6200:	48 89 ce             	mov    rsi,rcx
    6203:	48 89 c7             	mov    rdi,rax
    6206:	e8 35 c5 ff ff       	call   2740 <getline@plt>
    620b:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    620f:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    6214:	0f 85 40 ff ff ff    	jne    615a <deny_conf_parser+0x74>
    621a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    621e:	48 85 c0             	test   rax,rax
    6221:	74 0c                	je     622f <deny_conf_parser+0x149>
    6223:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6227:	48 89 c7             	mov    rdi,rax
    622a:	e8 a1 c3 ff ff       	call   25d0 <free@plt>
    622f:	90                   	nop
    6230:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6234:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    623b:	00 00 
    623d:	74 05                	je     6244 <deny_conf_parser+0x15e>
    623f:	e8 dc c4 ff ff       	call   2720 <__stack_chk_fail@plt>
    6244:	c9                   	leave  
    6245:	c3                   	ret    

0000000000006246 <host_mon_parser>:
    6246:	f3 0f 1e fa          	endbr64 
    624a:	55                   	push   rbp
    624b:	48 89 e5             	mov    rbp,rsp
    624e:	48 83 ec 10          	sub    rsp,0x10
    6252:	48 8b 05 df ad 00 00 	mov    rax,QWORD PTR [rip+0xaddf]        # 11038 <default_host_conf>
    6259:	48 8d 35 b8 68 00 00 	lea    rsi,[rip+0x68b8]        # cb18 <_IO_stdin_used+0xb18>
    6260:	48 89 c7             	mov    rdi,rax
    6263:	e8 e8 c2 ff ff       	call   2550 <fopen@plt>
    6268:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    626c:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    6271:	75 25                	jne    6298 <host_mon_parser+0x52>
    6273:	48 8b 05 be ad 00 00 	mov    rax,QWORD PTR [rip+0xadbe]        # 11038 <default_host_conf>
    627a:	48 89 c6             	mov    rsi,rax
    627d:	48 8d 3d 82 6b 00 00 	lea    rdi,[rip+0x6b82]        # ce06 <_IO_stdin_used+0xe06>
    6284:	b8 00 00 00 00       	mov    eax,0x0
    6289:	e8 e2 c1 ff ff       	call   2470 <printf@plt>
    628e:	bf 01 00 00 00       	mov    edi,0x1
    6293:	e8 48 c2 ff ff       	call   24e0 <exit@plt>
    6298:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    629c:	48 89 c7             	mov    rdi,rax
    629f:	e8 ec c4 ff ff       	call   2790 <fclose@plt>
    62a4:	90                   	nop
    62a5:	c9                   	leave  
    62a6:	c3                   	ret    

00000000000062a7 <rule_app>:
    62a7:	f3 0f 1e fa          	endbr64 
    62ab:	55                   	push   rbp
    62ac:	48 89 e5             	mov    rbp,rsp
    62af:	48 83 ec 20          	sub    rsp,0x20
    62b3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    62b7:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    62bb:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    62bf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62c3:	48 89 d6             	mov    rsi,rdx
    62c6:	48 89 c7             	mov    rdi,rax
    62c9:	e8 e9 02 00 00       	call   65b7 <r_engine>
    62ce:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    62d1:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    62d5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62d9:	48 89 d6             	mov    rsi,rdx
    62dc:	48 89 c7             	mov    rdi,rax
    62df:	e8 1f 46 00 00       	call   a903 <d_engine>
    62e4:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    62e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62eb:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    62f2:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    62f6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    62fa:	48 89 d6             	mov    rsi,rdx
    62fd:	48 89 c7             	mov    rdi,rax
    6300:	ff d1                	call   rcx
    6302:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    6305:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    6309:	74 40                	je     634b <rule_app+0xa4>
    630b:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    630f:	74 3a                	je     634b <rule_app+0xa4>
    6311:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    6315:	74 34                	je     634b <rule_app+0xa4>
    6317:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    631b:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    6322:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6326:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    632a:	ba 00 00 00 00       	mov    edx,0x0
    632f:	48 89 ce             	mov    rsi,rcx
    6332:	48 89 c7             	mov    rdi,rax
    6335:	41 ff d0             	call   r8
    6338:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    633c:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    633f:	8d 50 01             	lea    edx,[rax+0x1]
    6342:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6346:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    6349:	eb 17                	jmp    6362 <rule_app+0xbb>
    634b:	8b 05 d3 ac 00 00    	mov    eax,DWORD PTR [rip+0xacd3]        # 11024 <VIGIL_MODE>
    6351:	83 f8 02             	cmp    eax,0x2
    6354:	75 0c                	jne    6362 <rule_app+0xbb>
    6356:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    635a:	48 89 c7             	mov    rdi,rax
    635d:	e8 26 22 00 00       	call   8588 <forward_packet>
    6362:	90                   	nop
    6363:	c9                   	leave  
    6364:	c3                   	ret    

0000000000006365 <rulemgr>:
    6365:	f3 0f 1e fa          	endbr64 
    6369:	55                   	push   rbp
    636a:	48 89 e5             	mov    rbp,rsp
    636d:	48 83 ec 20          	sub    rsp,0x20
    6371:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6375:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    637c:	e9 23 02 00 00       	jmp    65a4 <rulemgr+0x23f>
    6381:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6384:	8d 50 01             	lea    edx,[rax+0x1]
    6387:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    638a:	48 98                	cdqe   
    638c:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    6393:	48 8d 15 46 af 00 00 	lea    rdx,[rip+0xaf46]        # 112e0 <rules>
    639a:	48 01 d0             	add    rax,rdx
    639d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    63a1:	0f b6 05 24 3c 10 00 	movzx  eax,BYTE PTR [rip+0x103c24]        # 109fcc <in_test_mode>
    63a8:	84 c0                	test   al,al
    63aa:	74 30                	je     63dc <rulemgr+0x77>
    63ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63b0:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    63b3:	83 f8 46             	cmp    eax,0x46
    63b6:	75 0d                	jne    63c5 <rulemgr+0x60>
    63b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63bc:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    63c3:	eb 17                	jmp    63dc <rulemgr+0x77>
    63c5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63c9:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    63cc:	83 f8 45             	cmp    eax,0x45
    63cf:	75 0b                	jne    63dc <rulemgr+0x77>
    63d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63d5:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    63dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63e0:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    63e6:	83 f8 ff             	cmp    eax,0xffffffff
    63e9:	74 19                	je     6404 <rulemgr+0x9f>
    63eb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63ef:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    63f2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63f6:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    63fc:	39 c2                	cmp    edx,eax
    63fe:	0f 85 a0 01 00 00    	jne    65a4 <rulemgr+0x23f>
    6404:	0f b6 05 75 ac 00 00 	movzx  eax,BYTE PTR [rip+0xac75]        # 11080 <demo_mode>
    640b:	84 c0                	test   al,al
    640d:	75 0b                	jne    641a <rulemgr+0xb5>
    640f:	8b 05 53 3b 10 00    	mov    eax,DWORD PTR [rip+0x103b53]        # 109f68 <vigil_location>
    6415:	83 f8 03             	cmp    eax,0x3
    6418:	75 6b                	jne    6485 <rulemgr+0x120>
    641a:	8b 05 48 3b 10 00    	mov    eax,DWORD PTR [rip+0x103b48]        # 109f68 <vigil_location>
    6420:	83 f8 03             	cmp    eax,0x3
    6423:	0f 85 7b 01 00 00    	jne    65a4 <rulemgr+0x23f>
    6429:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    642d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6430:	83 f8 ff             	cmp    eax,0xffffffff
    6433:	74 16                	je     644b <rulemgr+0xe6>
    6435:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6439:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    643c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6440:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6443:	39 c2                	cmp    edx,eax
    6445:	0f 85 59 01 00 00    	jne    65a4 <rulemgr+0x23f>
    644b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    644f:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6452:	83 f8 ff             	cmp    eax,0xffffffff
    6455:	74 16                	je     646d <rulemgr+0x108>
    6457:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    645b:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    645e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6462:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6465:	39 c2                	cmp    edx,eax
    6467:	0f 85 37 01 00 00    	jne    65a4 <rulemgr+0x23f>
    646d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6471:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6475:	48 89 d6             	mov    rsi,rdx
    6478:	48 89 c7             	mov    rdi,rax
    647b:	e8 27 fe ff ff       	call   62a7 <rule_app>
    6480:	e9 1f 01 00 00       	jmp    65a4 <rulemgr+0x23f>
    6485:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6489:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    648c:	83 f8 47             	cmp    eax,0x47
    648f:	74 16                	je     64a7 <rulemgr+0x142>
    6491:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6495:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    6498:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    649c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    649f:	39 c2                	cmp    edx,eax
    64a1:	0f 85 fd 00 00 00    	jne    65a4 <rulemgr+0x23f>
    64a7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64ab:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    64b1:	3d 80 00 00 00       	cmp    eax,0x80
    64b6:	75 18                	jne    64d0 <rulemgr+0x16b>
    64b8:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    64bc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64c0:	48 89 d6             	mov    rsi,rdx
    64c3:	48 89 c7             	mov    rdi,rax
    64c6:	e8 dc fd ff ff       	call   62a7 <rule_app>
    64cb:	e9 d4 00 00 00       	jmp    65a4 <rulemgr+0x23f>
    64d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64d4:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64d7:	83 f8 47             	cmp    eax,0x47
    64da:	75 79                	jne    6555 <rulemgr+0x1f0>
    64dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64e0:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    64e3:	83 f8 ff             	cmp    eax,0xffffffff
    64e6:	74 28                	je     6510 <rulemgr+0x1ab>
    64e8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64ec:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    64ef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64f3:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    64f6:	39 c2                	cmp    edx,eax
    64f8:	74 16                	je     6510 <rulemgr+0x1ab>
    64fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64fe:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    6501:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6505:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6508:	39 c2                	cmp    edx,eax
    650a:	0f 85 94 00 00 00    	jne    65a4 <rulemgr+0x23f>
    6510:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6514:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6517:	83 f8 ff             	cmp    eax,0xffffffff
    651a:	74 24                	je     6540 <rulemgr+0x1db>
    651c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6520:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    6523:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6527:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    652a:	39 c2                	cmp    edx,eax
    652c:	74 12                	je     6540 <rulemgr+0x1db>
    652e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6532:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    6535:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6539:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    653c:	39 c2                	cmp    edx,eax
    653e:	75 64                	jne    65a4 <rulemgr+0x23f>
    6540:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6544:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6548:	48 89 d6             	mov    rsi,rdx
    654b:	48 89 c7             	mov    rdi,rax
    654e:	e8 54 fd ff ff       	call   62a7 <rule_app>
    6553:	eb 4f                	jmp    65a4 <rulemgr+0x23f>
    6555:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6559:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    655c:	83 f8 ff             	cmp    eax,0xffffffff
    655f:	74 12                	je     6573 <rulemgr+0x20e>
    6561:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6565:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6568:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    656c:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    656f:	39 c2                	cmp    edx,eax
    6571:	75 31                	jne    65a4 <rulemgr+0x23f>
    6573:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6577:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    657a:	83 f8 ff             	cmp    eax,0xffffffff
    657d:	74 12                	je     6591 <rulemgr+0x22c>
    657f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6583:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6586:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    658a:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    658d:	39 c2                	cmp    edx,eax
    658f:	75 13                	jne    65a4 <rulemgr+0x23f>
    6591:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6595:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6599:	48 89 d6             	mov    rsi,rdx
    659c:	48 89 c7             	mov    rdi,rax
    659f:	e8 03 fd ff ff       	call   62a7 <rule_app>
    65a4:	8b 05 6a aa 00 00    	mov    eax,DWORD PTR [rip+0xaa6a]        # 11014 <num_rules>
    65aa:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    65ad:	0f 8e ce fd ff ff    	jle    6381 <rulemgr+0x1c>
    65b3:	90                   	nop
    65b4:	90                   	nop
    65b5:	c9                   	leave  
    65b6:	c3                   	ret    

00000000000065b7 <r_engine>:
    65b7:	f3 0f 1e fa          	endbr64 
    65bb:	55                   	push   rbp
    65bc:	48 89 e5             	mov    rbp,rsp
    65bf:	48 83 ec 10          	sub    rsp,0x10
    65c3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    65c7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    65cb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    65cf:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    65d2:	3d 80 00 00 00       	cmp    eax,0x80
    65d7:	0f 85 d9 00 00 00    	jne    66b6 <r_engine+0xff>
    65dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65e1:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    65e8:	84 c0                	test   al,al
    65ea:	74 25                	je     6611 <r_engine+0x5a>
    65ec:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    65f0:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    65f4:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    65f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65fc:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    6603:	38 c2                	cmp    dl,al
    6605:	74 0a                	je     6611 <r_engine+0x5a>
    6607:	b8 00 00 00 00       	mov    eax,0x0
    660c:	e9 9c 01 00 00       	jmp    67ad <r_engine+0x1f6>
    6611:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6615:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    661c:	84 c0                	test   al,al
    661e:	74 26                	je     6646 <r_engine+0x8f>
    6620:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6624:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6628:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    662c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6630:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    6637:	66 39 c2             	cmp    dx,ax
    663a:	74 0a                	je     6646 <r_engine+0x8f>
    663c:	b8 00 00 00 00       	mov    eax,0x0
    6641:	e9 67 01 00 00       	jmp    67ad <r_engine+0x1f6>
    6646:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    664a:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    6651:	84 c0                	test   al,al
    6653:	74 26                	je     667b <r_engine+0xc4>
    6655:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6659:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    665d:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    6661:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6665:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    666c:	66 39 c2             	cmp    dx,ax
    666f:	74 0a                	je     667b <r_engine+0xc4>
    6671:	b8 00 00 00 00       	mov    eax,0x0
    6676:	e9 32 01 00 00       	jmp    67ad <r_engine+0x1f6>
    667b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    667f:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    6686:	84 c0                	test   al,al
    6688:	0f 84 dc 00 00 00    	je     676a <r_engine+0x1b3>
    668e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6692:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6696:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6699:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    669d:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    66a4:	38 c2                	cmp    dl,al
    66a6:	0f 84 be 00 00 00    	je     676a <r_engine+0x1b3>
    66ac:	b8 00 00 00 00       	mov    eax,0x0
    66b1:	e9 f7 00 00 00       	jmp    67ad <r_engine+0x1f6>
    66b6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66ba:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    66bd:	83 f8 7e             	cmp    eax,0x7e
    66c0:	0f 85 a4 00 00 00    	jne    676a <r_engine+0x1b3>
    66c6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66ca:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    66d1:	84 c0                	test   al,al
    66d3:	74 2e                	je     6703 <r_engine+0x14c>
    66d5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66d9:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    66dd:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66e0:	89 c7                	mov    edi,eax
    66e2:	e8 39 bf ff ff       	call   2620 <ntohl@plt>
    66e7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    66eb:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    66f2:	0f b7 d2             	movzx  edx,dx
    66f5:	39 d0                	cmp    eax,edx
    66f7:	74 0a                	je     6703 <r_engine+0x14c>
    66f9:	b8 00 00 00 00       	mov    eax,0x0
    66fe:	e9 aa 00 00 00       	jmp    67ad <r_engine+0x1f6>
    6703:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6707:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    670e:	84 c0                	test   al,al
    6710:	74 29                	je     673b <r_engine+0x184>
    6712:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6716:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    671d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6721:	48 83 c0 60          	add    rax,0x60
    6725:	48 89 d6             	mov    rsi,rdx
    6728:	48 89 c7             	mov    rdi,rax
    672b:	e8 00 c0 ff ff       	call   2730 <strcmp@plt>
    6730:	85 c0                	test   eax,eax
    6732:	74 07                	je     673b <r_engine+0x184>
    6734:	b8 00 00 00 00       	mov    eax,0x0
    6739:	eb 72                	jmp    67ad <r_engine+0x1f6>
    673b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    673f:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    6746:	84 c0                	test   al,al
    6748:	74 20                	je     676a <r_engine+0x1b3>
    674a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    674e:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6752:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    6755:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6759:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    675f:	39 c2                	cmp    edx,eax
    6761:	74 07                	je     676a <r_engine+0x1b3>
    6763:	b8 00 00 00 00       	mov    eax,0x0
    6768:	eb 43                	jmp    67ad <r_engine+0x1f6>
    676a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    676e:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    6772:	48 85 c0             	test   rax,rax
    6775:	74 31                	je     67a8 <r_engine+0x1f1>
    6777:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    677b:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    6782:	84 c0                	test   al,al
    6784:	74 22                	je     67a8 <r_engine+0x1f1>
    6786:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    678a:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    678e:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    6792:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6796:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    679d:	38 c2                	cmp    dl,al
    679f:	74 07                	je     67a8 <r_engine+0x1f1>
    67a1:	b8 00 00 00 00       	mov    eax,0x0
    67a6:	eb 05                	jmp    67ad <r_engine+0x1f6>
    67a8:	b8 01 00 00 00       	mov    eax,0x1
    67ad:	c9                   	leave  
    67ae:	c3                   	ret    

00000000000067af <test_tcp_session_status>:
    67af:	f3 0f 1e fa          	endbr64 
    67b3:	55                   	push   rbp
    67b4:	48 89 e5             	mov    rbp,rsp
    67b7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    67bb:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    67bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67c3:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    67c9:	83 f8 7e             	cmp    eax,0x7e
    67cc:	75 34                	jne    6802 <test_tcp_session_status+0x53>
    67ce:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67d2:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    67d5:	83 f8 7e             	cmp    eax,0x7e
    67d8:	75 28                	jne    6802 <test_tcp_session_status+0x53>
    67da:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67de:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    67e4:	83 f8 01             	cmp    eax,0x1
    67e7:	75 12                	jne    67fb <test_tcp_session_status+0x4c>
    67e9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67ed:	8b 40 68             	mov    eax,DWORD PTR [rax+0x68]
    67f0:	85 c0                	test   eax,eax
    67f2:	75 07                	jne    67fb <test_tcp_session_status+0x4c>
    67f4:	b8 00 00 00 00       	mov    eax,0x0
    67f9:	eb 0c                	jmp    6807 <test_tcp_session_status+0x58>
    67fb:	b8 01 00 00 00       	mov    eax,0x1
    6800:	eb 05                	jmp    6807 <test_tcp_session_status+0x58>
    6802:	b8 01 00 00 00       	mov    eax,0x1
    6807:	5d                   	pop    rbp
    6808:	c3                   	ret    

0000000000006809 <main>:
    6809:	f3 0f 1e fa          	endbr64 
    680d:	55                   	push   rbp
    680e:	48 89 e5             	mov    rbp,rsp
    6811:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    6818:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    681e:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    6825:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    682c:	00 00 
    682e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6832:	31 c0                	xor    eax,eax
    6834:	b8 00 00 00 00       	mov    eax,0x0
    6839:	e8 df 4a 00 00       	call   b31d <load_fn_mem_map>
    683e:	48 8d 35 d3 02 00 00 	lea    rsi,[rip+0x2d3]        # 6b18 <sigint_processor>
    6845:	bf 02 00 00 00       	mov    edi,0x2
    684a:	e8 71 be ff ff       	call   26c0 <signal@plt>
    684f:	48 8d 05 f1 46 00 00 	lea    rax,[rip+0x46f1]        # af47 <crash_handler>
    6856:	48 89 c6             	mov    rsi,rax
    6859:	bf 0b 00 00 00       	mov    edi,0xb
    685e:	e8 5d be ff ff       	call   26c0 <signal@plt>
    6863:	b8 00 00 00 00       	mov    eax,0x0
    6868:	e8 d8 08 00 00       	call   7145 <print_logo>
    686d:	b8 00 00 00 00       	mov    eax,0x0
    6872:	e8 1c 07 00 00       	call   6f93 <print_cpu_info>
    6877:	c7 05 27 aa 00 00 01 	mov    DWORD PTR [rip+0xaa27],0x1        # 112a8 <is_running>
    687e:	00 00 00 
    6881:	bf 00 00 00 00       	mov    edi,0x0
    6886:	e8 c5 bf ff ff       	call   2850 <time@plt>
    688b:	48 89 05 1e aa 00 00 	mov    QWORD PTR [rip+0xaa1e],rax        # 112b0 <last_clean_time>
    6892:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6899:	0f 85 e3 00 00 00    	jne    6982 <main+0x179>
    689f:	b8 00 00 00 00       	mov    eax,0x0
    68a4:	e8 c0 06 00 00       	call   6f69 <print_help_and_exit>
    68a9:	e9 d4 00 00 00       	jmp    6982 <main+0x179>
    68ae:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    68b4:	83 e8 64             	sub    eax,0x64
    68b7:	83 f8 10             	cmp    eax,0x10
    68ba:	0f 87 9e 00 00 00    	ja     695e <main+0x155>
    68c0:	89 c0                	mov    eax,eax
    68c2:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    68c9:	00 
    68ca:	48 8d 05 2b 67 00 00 	lea    rax,[rip+0x672b]        # cffc <_IO_stdin_used+0xffc>
    68d1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    68d4:	48 98                	cdqe   
    68d6:	48 8d 15 1f 67 00 00 	lea    rdx,[rip+0x671f]        # cffc <_IO_stdin_used+0xffc>
    68dd:	48 01 d0             	add    rax,rdx
    68e0:	3e ff e0             	notrack jmp rax
    68e3:	c6 05 36 36 10 00 01 	mov    BYTE PTR [rip+0x103636],0x1        # 109f20 <debug_mode>
    68ea:	e9 93 00 00 00       	jmp    6982 <main+0x179>
    68ef:	b8 00 00 00 00       	mov    eax,0x0
    68f4:	e8 70 06 00 00       	call   6f69 <print_help_and_exit>
    68f9:	e9 84 00 00 00       	jmp    6982 <main+0x179>
    68fe:	48 8b 05 5b a7 00 00 	mov    rax,QWORD PTR [rip+0xa75b]        # 11060 <optarg@@GLIBC_2.2.5>
    6905:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    690c:	eb 74                	jmp    6982 <main+0x179>
    690e:	c6 05 4f 36 10 00 01 	mov    BYTE PTR [rip+0x10364f],0x1        # 109f64 <packet_print>
    6915:	eb 6b                	jmp    6982 <main+0x179>
    6917:	c6 05 47 36 10 00 01 	mov    BYTE PTR [rip+0x103647],0x1        # 109f65 <quiet_exit>
    691e:	eb 62                	jmp    6982 <main+0x179>
    6920:	48 8d 3d f9 64 00 00 	lea    rdi,[rip+0x64f9]        # ce20 <_IO_stdin_used+0xe20>
    6927:	e8 94 bb ff ff       	call   24c0 <puts@plt>
    692c:	bf 0a 00 00 00       	mov    edi,0xa
    6931:	e8 fa bc ff ff       	call   2630 <sleep@plt>
    6936:	c6 05 43 a7 00 00 01 	mov    BYTE PTR [rip+0xa743],0x1        # 11080 <demo_mode>
    693d:	eb 43                	jmp    6982 <main+0x179>
    693f:	48 8d 3d 1a 65 00 00 	lea    rdi,[rip+0x651a]        # ce60 <_IO_stdin_used+0xe60>
    6946:	e8 75 bb ff ff       	call   24c0 <puts@plt>
    694b:	bf 0a 00 00 00       	mov    edi,0xa
    6950:	e8 db bc ff ff       	call   2630 <sleep@plt>
    6955:	c6 05 70 36 10 00 01 	mov    BYTE PTR [rip+0x103670],0x1        # 109fcc <in_test_mode>
    695c:	eb 24                	jmp    6982 <main+0x179>
    695e:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6964:	89 c6                	mov    esi,eax
    6966:	48 8d 3d 27 65 00 00 	lea    rdi,[rip+0x6527]        # ce94 <_IO_stdin_used+0xe94>
    696d:	b8 00 00 00 00       	mov    eax,0x0
    6972:	e8 f9 ba ff ff       	call   2470 <printf@plt>
    6977:	b8 00 00 00 00       	mov    eax,0x0
    697c:	e8 e8 05 00 00       	call   6f69 <print_help_and_exit>
    6981:	90                   	nop
    6982:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6989:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    698f:	48 8d 15 14 65 00 00 	lea    rdx,[rip+0x6514]        # ceaa <_IO_stdin_used+0xeaa>
    6996:	48 89 ce             	mov    rsi,rcx
    6999:	89 c7                	mov    edi,eax
    699b:	e8 70 bb ff ff       	call   2510 <getopt@plt>
    69a0:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    69a6:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    69ad:	0f 85 fb fe ff ff    	jne    68ae <main+0xa5>
    69b3:	48 8d 3d f9 64 00 00 	lea    rdi,[rip+0x64f9]        # ceb3 <_IO_stdin_used+0xeb3>
    69ba:	e8 27 f7 ff ff       	call   60e6 <deny_conf_parser>
    69bf:	48 8d 3d 02 65 00 00 	lea    rdi,[rip+0x6502]        # cec8 <_IO_stdin_used+0xec8>
    69c6:	e8 f5 ba ff ff       	call   24c0 <puts@plt>
    69cb:	b8 00 00 00 00       	mov    eax,0x0
    69d0:	e8 32 13 00 00       	call   7d07 <load_csv_arp_cache>
    69d5:	83 f8 ff             	cmp    eax,0xffffffff
    69d8:	74 0e                	je     69e8 <main+0x1df>
    69da:	48 8d 3d 27 65 00 00 	lea    rdi,[rip+0x6527]        # cf08 <_IO_stdin_used+0xf08>
    69e1:	e8 da ba ff ff       	call   24c0 <puts@plt>
    69e6:	eb 0c                	jmp    69f4 <main+0x1eb>
    69e8:	48 8d 3d 39 65 00 00 	lea    rdi,[rip+0x6539]        # cf28 <_IO_stdin_used+0xf28>
    69ef:	e8 cc ba ff ff       	call   24c0 <puts@plt>
    69f4:	48 8d 3d 5e 65 00 00 	lea    rdi,[rip+0x655e]        # cf59 <_IO_stdin_used+0xf59>
    69fb:	e8 ba ee ff ff       	call   58ba <rule_library_parser>
    6a00:	48 8d 3d 68 65 00 00 	lea    rdi,[rip+0x6568]        # cf6f <_IO_stdin_used+0xf6f>
    6a07:	e8 b4 ba ff ff       	call   24c0 <puts@plt>
    6a0c:	b8 00 00 00 00       	mov    eax,0x0
    6a11:	e8 c7 3a 00 00       	call   a4dd <rule_processor>
    6a16:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6a1d:	48 89 c6             	mov    rsi,rax
    6a20:	48 8d 3d 61 65 00 00 	lea    rdi,[rip+0x6561]        # cf88 <_IO_stdin_used+0xf88>
    6a27:	b8 00 00 00 00       	mov    eax,0x0
    6a2c:	e8 3f ba ff ff       	call   2470 <printf@plt>
    6a31:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6a38:	00 00 00 00 
    6a3c:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6a43:	00 00 00 00 
    6a47:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6a4e:	b8 00 00 00 00       	mov    eax,0x0
    6a53:	b9 fd 00 00 00       	mov    ecx,0xfd
    6a58:	48 89 d7             	mov    rdi,rdx
    6a5b:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6a5e:	48 89 fa             	mov    rdx,rdi
    6a61:	89 02                	mov    DWORD PTR [rdx],eax
    6a63:	48 83 c2 04          	add    rdx,0x4
    6a67:	66 89 02             	mov    WORD PTR [rdx],ax
    6a6a:	48 83 c2 02          	add    rdx,0x2
    6a6e:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6a75:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6a7c:	49 89 d0             	mov    r8,rdx
    6a7f:	b9 64 00 00 00       	mov    ecx,0x64
    6a84:	ba 01 00 00 00       	mov    edx,0x1
    6a89:	be 00 04 00 00       	mov    esi,0x400
    6a8e:	48 89 c7             	mov    rdi,rax
    6a91:	e8 da ba ff ff       	call   2570 <pcap_open_live@plt>
    6a96:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6a9d:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6aa4:	00 
    6aa5:	75 16                	jne    6abd <main+0x2b4>
    6aa7:	48 8d 3d fb 64 00 00 	lea    rdi,[rip+0x64fb]        # cfa9 <_IO_stdin_used+0xfa9>
    6aae:	e8 3d bd ff ff       	call   27f0 <perror@plt>
    6ab3:	bf 01 00 00 00       	mov    edi,0x1
    6ab8:	e8 23 ba ff ff       	call   24e0 <exit@plt>
    6abd:	b8 00 00 00 00       	mov    eax,0x0
    6ac2:	e8 4a 42 00 00       	call   ad11 <collect_scripts>
    6ac7:	b8 00 00 00 00       	mov    eax,0x0
    6acc:	e8 8b 06 00 00       	call   715c <start_nsh_server>
    6ad1:	48 8d 3d f0 64 00 00 	lea    rdi,[rip+0x64f0]        # cfc8 <_IO_stdin_used+0xfc8>
    6ad8:	e8 e3 b9 ff ff       	call   24c0 <puts@plt>
    6add:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6ae4:	b9 00 00 00 00       	mov    ecx,0x0
    6ae9:	48 8d 15 93 be ff ff 	lea    rdx,[rip+0xffffffffffffbe93]        # 2983 <pktmgr>
    6af0:	be ff ff ff ff       	mov    esi,0xffffffff
    6af5:	48 89 c7             	mov    rdi,rax
    6af8:	e8 d3 bc ff ff       	call   27d0 <pcap_loop@plt>
    6afd:	b8 00 00 00 00       	mov    eax,0x0
    6b02:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6b06:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6b0d:	00 00 
    6b0f:	74 05                	je     6b16 <main+0x30d>
    6b11:	e8 0a bc ff ff       	call   2720 <__stack_chk_fail@plt>
    6b16:	c9                   	leave  
    6b17:	c3                   	ret    

0000000000006b18 <sigint_processor>:
    6b18:	f3 0f 1e fa          	endbr64 
    6b1c:	55                   	push   rbp
    6b1d:	48 89 e5             	mov    rbp,rsp
    6b20:	41 54                	push   r12
    6b22:	53                   	push   rbx
    6b23:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6b2a:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6b30:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6b37:	00 00 
    6b39:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6b3d:	31 c0                	xor    eax,eax
    6b3f:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6b46:	00 00 00 
    6b49:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6b50:	48 89 c7             	mov    rdi,rax
    6b53:	e8 9b c8 ff ff       	call   33f3 <cb_get_formatted_time>
    6b58:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6b5f:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6b65:	89 c6                	mov    esi,eax
    6b67:	48 8d 3d d2 64 00 00 	lea    rdi,[rip+0x64d2]        # d040 <_IO_stdin_used+0x1040>
    6b6e:	b8 00 00 00 00       	mov    eax,0x0
    6b73:	e8 f8 b8 ff ff       	call   2470 <printf@plt>
    6b78:	48 8d 3d e6 64 00 00 	lea    rdi,[rip+0x64e6]        # d065 <_IO_stdin_used+0x1065>
    6b7f:	e8 6c bc ff ff       	call   27f0 <perror@plt>
    6b84:	0f b6 05 da 33 10 00 	movzx  eax,BYTE PTR [rip+0x1033da]        # 109f65 <quiet_exit>
    6b8b:	83 f0 01             	xor    eax,0x1
    6b8e:	84 c0                	test   al,al
    6b90:	0f 84 2e 02 00 00    	je     6dc4 <sigint_processor+0x2ac>
    6b96:	8b 05 08 a7 00 00    	mov    eax,DWORD PTR [rip+0xa708]        # 112a4 <total_pkt_captured>
    6b9c:	89 c6                	mov    esi,eax
    6b9e:	48 8d 3d c1 64 00 00 	lea    rdi,[rip+0x64c1]        # d066 <_IO_stdin_used+0x1066>
    6ba5:	b8 00 00 00 00       	mov    eax,0x0
    6baa:	e8 c1 b8 ff ff       	call   2470 <printf@plt>
    6baf:	48 8d 3d ca 64 00 00 	lea    rdi,[rip+0x64ca]        # d080 <_IO_stdin_used+0x1080>
    6bb6:	e8 05 b9 ff ff       	call   24c0 <puts@plt>
    6bbb:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6bc2:	00 00 00 
    6bc5:	e9 e8 01 00 00       	jmp    6db2 <sigint_processor+0x29a>
    6bca:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6bd0:	48 63 d0             	movsxd rdx,eax
    6bd3:	48 89 d0             	mov    rax,rdx
    6bd6:	48 c1 e0 02          	shl    rax,0x2
    6bda:	48 01 d0             	add    rax,rdx
    6bdd:	48 c1 e0 03          	shl    rax,0x3
    6be1:	48 01 d0             	add    rax,rdx
    6be4:	48 c1 e0 04          	shl    rax,0x4
    6be8:	48 89 c2             	mov    rdx,rax
    6beb:	48 8d 05 9e cb 0e 00 	lea    rax,[rip+0xecb9e]        # f3790 <watchlist+0x270>
    6bf2:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6bf6:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6bfc:	48 63 d0             	movsxd rdx,eax
    6bff:	48 89 d0             	mov    rax,rdx
    6c02:	48 c1 e0 02          	shl    rax,0x2
    6c06:	48 01 d0             	add    rax,rdx
    6c09:	48 c1 e0 03          	shl    rax,0x3
    6c0d:	48 01 d0             	add    rax,rdx
    6c10:	48 c1 e0 04          	shl    rax,0x4
    6c14:	48 89 c2             	mov    rdx,rax
    6c17:	48 8d 05 66 cb 0e 00 	lea    rax,[rip+0xecb66]        # f3784 <watchlist+0x264>
    6c1e:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6c22:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c28:	48 63 d0             	movsxd rdx,eax
    6c2b:	48 89 d0             	mov    rax,rdx
    6c2e:	48 c1 e0 02          	shl    rax,0x2
    6c32:	48 01 d0             	add    rax,rdx
    6c35:	48 c1 e0 03          	shl    rax,0x3
    6c39:	48 01 d0             	add    rax,rdx
    6c3c:	48 c1 e0 04          	shl    rax,0x4
    6c40:	48 89 c2             	mov    rdx,rax
    6c43:	48 8d 05 42 cb 0e 00 	lea    rax,[rip+0xecb42]        # f378c <watchlist+0x26c>
    6c4a:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6c4e:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c54:	48 63 d0             	movsxd rdx,eax
    6c57:	48 89 d0             	mov    rax,rdx
    6c5a:	48 c1 e0 02          	shl    rax,0x2
    6c5e:	48 01 d0             	add    rax,rdx
    6c61:	48 c1 e0 03          	shl    rax,0x3
    6c65:	48 01 d0             	add    rax,rdx
    6c68:	48 c1 e0 04          	shl    rax,0x4
    6c6c:	48 89 c2             	mov    rdx,rax
    6c6f:	48 8d 05 0a cb 0e 00 	lea    rax,[rip+0xecb0a]        # f3780 <watchlist+0x260>
    6c76:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6c7a:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c80:	48 63 d0             	movsxd rdx,eax
    6c83:	48 89 d0             	mov    rax,rdx
    6c86:	48 c1 e0 02          	shl    rax,0x2
    6c8a:	48 01 d0             	add    rax,rdx
    6c8d:	48 c1 e0 03          	shl    rax,0x3
    6c91:	48 01 d0             	add    rax,rdx
    6c94:	48 c1 e0 04          	shl    rax,0x4
    6c98:	48 89 c2             	mov    rdx,rax
    6c9b:	48 8d 05 e6 ca 0e 00 	lea    rax,[rip+0xecae6]        # f3788 <watchlist+0x268>
    6ca2:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6ca5:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cab:	48 63 d0             	movsxd rdx,eax
    6cae:	48 89 d0             	mov    rax,rdx
    6cb1:	48 c1 e0 02          	shl    rax,0x2
    6cb5:	48 01 d0             	add    rax,rdx
    6cb8:	48 c1 e0 03          	shl    rax,0x3
    6cbc:	48 01 d0             	add    rax,rdx
    6cbf:	48 c1 e0 04          	shl    rax,0x4
    6cc3:	48 89 c2             	mov    rdx,rax
    6cc6:	48 8d 05 af ca 0e 00 	lea    rax,[rip+0xecaaf]        # f377c <watchlist+0x25c>
    6ccd:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6cd1:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cd7:	48 63 d0             	movsxd rdx,eax
    6cda:	48 89 d0             	mov    rax,rdx
    6cdd:	48 c1 e0 02          	shl    rax,0x2
    6ce1:	48 01 d0             	add    rax,rdx
    6ce4:	48 c1 e0 03          	shl    rax,0x3
    6ce8:	48 01 d0             	add    rax,rdx
    6ceb:	48 c1 e0 04          	shl    rax,0x4
    6cef:	48 89 c2             	mov    rdx,rax
    6cf2:	48 8d 05 a3 ca 0e 00 	lea    rax,[rip+0xecaa3]        # f379c <watchlist+0x27c>
    6cf9:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6cfc:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d02:	48 63 d0             	movsxd rdx,eax
    6d05:	48 89 d0             	mov    rax,rdx
    6d08:	48 c1 e0 02          	shl    rax,0x2
    6d0c:	48 01 d0             	add    rax,rdx
    6d0f:	48 c1 e0 03          	shl    rax,0x3
    6d13:	48 01 d0             	add    rax,rdx
    6d16:	48 c1 e0 04          	shl    rax,0x4
    6d1a:	48 89 c2             	mov    rdx,rax
    6d1d:	48 8d 05 7c ca 0e 00 	lea    rax,[rip+0xeca7c]        # f37a0 <watchlist+0x280>
    6d24:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6d27:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d2d:	48 63 d0             	movsxd rdx,eax
    6d30:	48 89 d0             	mov    rax,rdx
    6d33:	48 c1 e0 02          	shl    rax,0x2
    6d37:	48 01 d0             	add    rax,rdx
    6d3a:	48 c1 e0 03          	shl    rax,0x3
    6d3e:	48 01 d0             	add    rax,rdx
    6d41:	48 c1 e0 04          	shl    rax,0x4
    6d45:	48 89 c2             	mov    rdx,rax
    6d48:	48 8d 05 29 ca 0e 00 	lea    rax,[rip+0xeca29]        # f3778 <watchlist+0x258>
    6d4f:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6d52:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d58:	48 63 d0             	movsxd rdx,eax
    6d5b:	48 89 d0             	mov    rax,rdx
    6d5e:	48 c1 e0 02          	shl    rax,0x2
    6d62:	48 01 d0             	add    rax,rdx
    6d65:	48 c1 e0 03          	shl    rax,0x3
    6d69:	48 01 d0             	add    rax,rdx
    6d6c:	48 c1 e0 04          	shl    rax,0x4
    6d70:	48 8d 15 a9 c7 0e 00 	lea    rdx,[rip+0xec7a9]        # f3520 <watchlist>
    6d77:	48 01 d0             	add    rax,rdx
    6d7a:	48 83 c0 08          	add    rax,0x8
    6d7e:	48 83 ec 08          	sub    rsp,0x8
    6d82:	41 53                	push   r11
    6d84:	41 52                	push   r10
    6d86:	41 51                	push   r9
    6d88:	41 50                	push   r8
    6d8a:	57                   	push   rdi
    6d8b:	45 89 e1             	mov    r9d,r12d
    6d8e:	41 89 d8             	mov    r8d,ebx
    6d91:	89 f2                	mov    edx,esi
    6d93:	48 89 c6             	mov    rsi,rax
    6d96:	48 8d 3d 1b 63 00 00 	lea    rdi,[rip+0x631b]        # d0b8 <_IO_stdin_used+0x10b8>
    6d9d:	b8 00 00 00 00       	mov    eax,0x0
    6da2:	e8 c9 b6 ff ff       	call   2470 <printf@plt>
    6da7:	48 83 c4 30          	add    rsp,0x30
    6dab:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6db2:	8b 05 60 a2 00 00    	mov    eax,DWORD PTR [rip+0xa260]        # 11018 <watchlist_num>
    6db8:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6dbe:	0f 8e 06 fe ff ff    	jle    6bca <sigint_processor+0xb2>
    6dc4:	48 8d 35 8d 63 00 00 	lea    rsi,[rip+0x638d]        # d158 <_IO_stdin_used+0x1158>
    6dcb:	48 8d 3d 88 63 00 00 	lea    rdi,[rip+0x6388]        # d15a <_IO_stdin_used+0x115a>
    6dd2:	e8 79 b7 ff ff       	call   2550 <fopen@plt>
    6dd7:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6dde:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6de5:	00 
    6de6:	0f 85 99 00 00 00    	jne    6e85 <sigint_processor+0x36d>
    6dec:	48 8d 3d 85 63 00 00 	lea    rdi,[rip+0x6385]        # d178 <_IO_stdin_used+0x1178>
    6df3:	e8 c8 b6 ff ff       	call   24c0 <puts@plt>
    6df8:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6dff:	48 89 c7             	mov    rdi,rax
    6e02:	e8 89 b9 ff ff       	call   2790 <fclose@plt>
    6e07:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6e0e:	00 00 00 
    6e11:	eb 5f                	jmp    6e72 <sigint_processor+0x35a>
    6e13:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6e19:	48 63 d0             	movsxd rdx,eax
    6e1c:	48 89 d0             	mov    rax,rdx
    6e1f:	48 c1 e0 04          	shl    rax,0x4
    6e23:	48 01 d0             	add    rax,rdx
    6e26:	48 01 c0             	add    rax,rax
    6e29:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6e2d:	48 8d 05 ec 0e 10 00 	lea    rax,[rip+0x100eec]        # 107d20 <arpcache>
    6e34:	48 01 c2             	add    rdx,rax
    6e37:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6e3d:	48 63 c8             	movsxd rcx,eax
    6e40:	48 89 c8             	mov    rax,rcx
    6e43:	48 c1 e0 04          	shl    rax,0x4
    6e47:	48 01 c8             	add    rax,rcx
    6e4a:	48 01 c0             	add    rax,rax
    6e4d:	48 8d 0d cc 0e 10 00 	lea    rcx,[rip+0x100ecc]        # 107d20 <arpcache>
    6e54:	48 01 c8             	add    rax,rcx
    6e57:	48 89 c6             	mov    rsi,rax
    6e5a:	48 8d 3d 5e 63 00 00 	lea    rdi,[rip+0x635e]        # d1bf <_IO_stdin_used+0x11bf>
    6e61:	b8 00 00 00 00       	mov    eax,0x0
    6e66:	e8 05 b6 ff ff       	call   2470 <printf@plt>
    6e6b:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    6e72:	8b 05 a4 a1 00 00    	mov    eax,DWORD PTR [rip+0xa1a4]        # 1101c <arp_entries>
    6e78:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    6e7e:	7e 93                	jle    6e13 <sigint_processor+0x2fb>
    6e80:	e9 da 00 00 00       	jmp    6f5f <sigint_processor+0x447>
    6e85:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    6e8c:	00 00 00 
    6e8f:	eb 67                	jmp    6ef8 <sigint_processor+0x3e0>
    6e91:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6e97:	48 63 d0             	movsxd rdx,eax
    6e9a:	48 89 d0             	mov    rax,rdx
    6e9d:	48 c1 e0 04          	shl    rax,0x4
    6ea1:	48 01 d0             	add    rax,rdx
    6ea4:	48 01 c0             	add    rax,rax
    6ea7:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6eab:	48 8d 05 6e 0e 10 00 	lea    rax,[rip+0x100e6e]        # 107d20 <arpcache>
    6eb2:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    6eb6:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6ebc:	48 63 d0             	movsxd rdx,eax
    6ebf:	48 89 d0             	mov    rax,rdx
    6ec2:	48 c1 e0 04          	shl    rax,0x4
    6ec6:	48 01 d0             	add    rax,rdx
    6ec9:	48 01 c0             	add    rax,rax
    6ecc:	48 8d 15 4d 0e 10 00 	lea    rdx,[rip+0x100e4d]        # 107d20 <arpcache>
    6ed3:	48 01 c2             	add    rdx,rax
    6ed6:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6edd:	48 8d 35 e5 62 00 00 	lea    rsi,[rip+0x62e5]        # d1c9 <_IO_stdin_used+0x11c9>
    6ee4:	48 89 c7             	mov    rdi,rax
    6ee7:	b8 00 00 00 00       	mov    eax,0x0
    6eec:	e8 0f b9 ff ff       	call   2800 <fprintf@plt>
    6ef1:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    6ef8:	8b 05 1e a1 00 00    	mov    eax,DWORD PTR [rip+0xa11e]        # 1101c <arp_entries>
    6efe:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    6f04:	7e 8b                	jle    6e91 <sigint_processor+0x379>
    6f06:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6f0d:	48 89 c7             	mov    rdi,rax
    6f10:	e8 7b b8 ff ff       	call   2790 <fclose@plt>
    6f15:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    6f1c:	00 00 00 
    6f1f:	eb 2f                	jmp    6f50 <sigint_processor+0x438>
    6f21:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    6f27:	48 98                	cdqe   
    6f29:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    6f30:	00 
    6f31:	48 8d 05 68 a1 00 00 	lea    rax,[rip+0xa168]        # 110a0 <threads>
    6f38:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    6f3c:	be 00 00 00 00       	mov    esi,0x0
    6f41:	48 89 c7             	mov    rdi,rax
    6f44:	e8 17 b5 ff ff       	call   2460 <pthread_join@plt>
    6f49:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    6f50:	8b 05 4a a3 00 00    	mov    eax,DWORD PTR [rip+0xa34a]        # 112a0 <thread_count>
    6f56:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    6f5c:	7c c3                	jl     6f21 <sigint_processor+0x409>
    6f5e:	90                   	nop
    6f5f:	bf 00 00 00 00       	mov    edi,0x0
    6f64:	e8 77 b5 ff ff       	call   24e0 <exit@plt>

0000000000006f69 <print_help_and_exit>:
    6f69:	f3 0f 1e fa          	endbr64 
    6f6d:	55                   	push   rbp
    6f6e:	48 89 e5             	mov    rbp,rsp
    6f71:	48 8d 35 58 62 00 00 	lea    rsi,[rip+0x6258]        # d1d0 <_IO_stdin_used+0x11d0>
    6f78:	48 8d 3d 59 62 00 00 	lea    rdi,[rip+0x6259]        # d1d8 <_IO_stdin_used+0x11d8>
    6f7f:	b8 00 00 00 00       	mov    eax,0x0
    6f84:	e8 e7 b4 ff ff       	call   2470 <printf@plt>
    6f89:	bf 00 00 00 00       	mov    edi,0x0
    6f8e:	e8 4d b5 ff ff       	call   24e0 <exit@plt>

0000000000006f93 <print_cpu_info>:
    6f93:	f3 0f 1e fa          	endbr64 
    6f97:	55                   	push   rbp
    6f98:	48 89 e5             	mov    rbp,rsp
    6f9b:	53                   	push   rbx
    6f9c:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    6fa3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6faa:	00 00 
    6fac:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6fb0:	31 c0                	xor    eax,eax
    6fb2:	48 8d 35 a6 62 00 00 	lea    rsi,[rip+0x62a6]        # d25f <_IO_stdin_used+0x125f>
    6fb9:	48 8d 3d a2 62 00 00 	lea    rdi,[rip+0x62a2]        # d262 <_IO_stdin_used+0x1262>
    6fc0:	e8 8b b5 ff ff       	call   2550 <fopen@plt>
    6fc5:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    6fcc:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    6fd3:	00 00 00 00 
    6fd7:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    6fde:	00 00 00 00 
    6fe2:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    6fe9:	00 00 00 
    6fec:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    6ff3:	ba 00 02 00 00       	mov    edx,0x200
    6ff8:	be 00 00 00 00       	mov    esi,0x0
    6ffd:	48 89 c7             	mov    rdi,rax
    7000:	e8 7b b4 ff ff       	call   2480 <memset@plt>
    7005:	e9 b3 00 00 00       	jmp    70bd <print_cpu_info+0x12a>
    700a:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7011:	ba 0a 00 00 00       	mov    edx,0xa
    7016:	48 89 c6             	mov    rsi,rax
    7019:	48 8d 3d 50 62 00 00 	lea    rdi,[rip+0x6250]        # d270 <_IO_stdin_used+0x1270>
    7020:	e8 0b b5 ff ff       	call   2530 <strncmp@plt>
    7025:	85 c0                	test   eax,eax
    7027:	0f 85 90 00 00 00    	jne    70bd <print_cpu_info+0x12a>
    702d:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    7034:	00 00 00 
    7037:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    703e:	00 00 00 
    7041:	eb 2e                	jmp    7071 <print_cpu_info+0xde>
    7043:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    704a:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7050:	48 98                	cdqe   
    7052:	48 01 d0             	add    rax,rdx
    7055:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7058:	3c 3a                	cmp    al,0x3a
    705a:	75 0e                	jne    706a <print_cpu_info+0xd7>
    705c:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7062:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    7068:	eb 24                	jmp    708e <print_cpu_info+0xfb>
    706a:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    7071:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7077:	48 63 d8             	movsxd rbx,eax
    707a:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7081:	48 89 c7             	mov    rdi,rax
    7084:	e8 57 b5 ff ff       	call   25e0 <strlen@plt>
    7089:	48 39 c3             	cmp    rbx,rax
    708c:	72 b5                	jb     7043 <print_cpu_info+0xb0>
    708e:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    7095:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    709c:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    70a2:	48 98                	cdqe   
    70a4:	48 83 c0 02          	add    rax,0x2
    70a8:	48 01 c2             	add    rdx,rax
    70ab:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    70b2:	48 89 d6             	mov    rsi,rdx
    70b5:	48 89 c7             	mov    rdi,rax
    70b8:	e8 a3 b5 ff ff       	call   2660 <strcat@plt>
    70bd:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    70c4:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    70cb:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    70d2:	48 89 d1             	mov    rcx,rdx
    70d5:	ba 0a 00 00 00       	mov    edx,0xa
    70da:	48 89 c7             	mov    rdi,rax
    70dd:	e8 3e b7 ff ff       	call   2820 <getdelim@plt>
    70e2:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    70e6:	0f 85 1e ff ff ff    	jne    700a <print_cpu_info+0x77>
    70ec:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    70f3:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    70f9:	89 c6                	mov    esi,eax
    70fb:	48 8d 3d 79 61 00 00 	lea    rdi,[rip+0x6179]        # d27b <_IO_stdin_used+0x127b>
    7102:	b8 00 00 00 00       	mov    eax,0x0
    7107:	e8 64 b3 ff ff       	call   2470 <printf@plt>
    710c:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7113:	48 89 c7             	mov    rdi,rax
    7116:	e8 b5 b4 ff ff       	call   25d0 <free@plt>
    711b:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7122:	48 89 c7             	mov    rdi,rax
    7125:	e8 66 b6 ff ff       	call   2790 <fclose@plt>
    712a:	90                   	nop
    712b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    712f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    7136:	00 00 
    7138:	74 05                	je     713f <print_cpu_info+0x1ac>
    713a:	e8 e1 b5 ff ff       	call   2720 <__stack_chk_fail@plt>
    713f:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7143:	c9                   	leave  
    7144:	c3                   	ret    

0000000000007145 <print_logo>:
    7145:	f3 0f 1e fa          	endbr64 
    7149:	55                   	push   rbp
    714a:	48 89 e5             	mov    rbp,rsp
    714d:	48 8d 3d 3c 61 00 00 	lea    rdi,[rip+0x613c]        # d290 <_IO_stdin_used+0x1290>
    7154:	e8 67 b3 ff ff       	call   24c0 <puts@plt>
    7159:	90                   	nop
    715a:	5d                   	pop    rbp
    715b:	c3                   	ret    

000000000000715c <start_nsh_server>:
    715c:	f3 0f 1e fa          	endbr64 
    7160:	55                   	push   rbp
    7161:	48 89 e5             	mov    rbp,rsp
    7164:	48 83 ec 10          	sub    rsp,0x10
    7168:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    716f:	00 00 
    7171:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7175:	31 c0                	xor    eax,eax
    7177:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    717b:	b9 00 00 00 00       	mov    ecx,0x0
    7180:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 71f8 <actually_start_nsh_server>
    7187:	be 00 00 00 00       	mov    esi,0x0
    718c:	48 89 c7             	mov    rdi,rax
    718f:	e8 1c b4 ff ff       	call   25b0 <pthread_create@plt>
    7194:	90                   	nop
    7195:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7199:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    71a0:	00 00 
    71a2:	74 05                	je     71a9 <start_nsh_server+0x4d>
    71a4:	e8 77 b5 ff ff       	call   2720 <__stack_chk_fail@plt>
    71a9:	c9                   	leave  
    71aa:	c3                   	ret    

00000000000071ab <rnstrip>:
    71ab:	f3 0f 1e fa          	endbr64 
    71af:	55                   	push   rbp
    71b0:	48 89 e5             	mov    rbp,rsp
    71b3:	48 83 ec 10          	sub    rsp,0x10
    71b7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    71bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    71bf:	48 8d 35 42 62 00 00 	lea    rsi,[rip+0x6242]        # d408 <_IO_stdin_used+0x1408>
    71c6:	48 89 c7             	mov    rdi,rax
    71c9:	e8 e2 b5 ff ff       	call   27b0 <strcspn@plt>
    71ce:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    71d2:	48 01 d0             	add    rax,rdx
    71d5:	c6 00 00             	mov    BYTE PTR [rax],0x0
    71d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    71dc:	48 8d 35 27 62 00 00 	lea    rsi,[rip+0x6227]        # d40a <_IO_stdin_used+0x140a>
    71e3:	48 89 c7             	mov    rdi,rax
    71e6:	e8 c5 b5 ff ff       	call   27b0 <strcspn@plt>
    71eb:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    71ef:	48 01 d0             	add    rax,rdx
    71f2:	c6 00 00             	mov    BYTE PTR [rax],0x0
    71f5:	90                   	nop
    71f6:	c9                   	leave  
    71f7:	c3                   	ret    

00000000000071f8 <actually_start_nsh_server>:
    71f8:	f3 0f 1e fa          	endbr64 
    71fc:	55                   	push   rbp
    71fd:	48 89 e5             	mov    rbp,rsp
    7200:	48 83 ec 50          	sub    rsp,0x50
    7204:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    720b:	00 00 
    720d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7211:	31 c0                	xor    eax,eax
    7213:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    721a:	ba 00 00 00 00       	mov    edx,0x0
    721f:	be 01 00 00 00       	mov    esi,0x1
    7224:	bf 02 00 00 00       	mov    edi,0x2
    7229:	e8 d2 b4 ff ff       	call   2700 <socket@plt>
    722e:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    7231:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    7235:	75 16                	jne    724d <actually_start_nsh_server+0x55>
    7237:	48 8d 3d d2 61 00 00 	lea    rdi,[rip+0x61d2]        # d410 <_IO_stdin_used+0x1410>
    723e:	e8 7d b2 ff ff       	call   24c0 <puts@plt>
    7243:	bf 01 00 00 00       	mov    edi,0x1
    7248:	e8 93 b2 ff ff       	call   24e0 <exit@plt>
    724d:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7251:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7254:	41 b8 04 00 00 00    	mov    r8d,0x4
    725a:	48 89 d1             	mov    rcx,rdx
    725d:	ba 02 00 00 00       	mov    edx,0x2
    7262:	be 01 00 00 00       	mov    esi,0x1
    7267:	89 c7                	mov    edi,eax
    7269:	e8 12 b3 ff ff       	call   2580 <setsockopt@plt>
    726e:	85 c0                	test   eax,eax
    7270:	74 16                	je     7288 <actually_start_nsh_server+0x90>
    7272:	48 8d 3d bf 61 00 00 	lea    rdi,[rip+0x61bf]        # d438 <_IO_stdin_used+0x1438>
    7279:	e8 42 b2 ff ff       	call   24c0 <puts@plt>
    727e:	bf 01 00 00 00       	mov    edi,0x1
    7283:	e8 58 b2 ff ff       	call   24e0 <exit@plt>
    7288:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    728e:	bf 00 00 00 00       	mov    edi,0x0
    7293:	e8 48 b5 ff ff       	call   27e0 <htonl@plt>
    7298:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    729b:	bf 81 02 00 00       	mov    edi,0x281
    72a0:	e8 2b b2 ff ff       	call   24d0 <htons@plt>
    72a5:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    72a9:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    72ad:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    72b0:	ba 10 00 00 00       	mov    edx,0x10
    72b5:	48 89 ce             	mov    rsi,rcx
    72b8:	89 c7                	mov    edi,eax
    72ba:	e8 01 b5 ff ff       	call   27c0 <bind@plt>
    72bf:	85 c0                	test   eax,eax
    72c1:	79 16                	jns    72d9 <actually_start_nsh_server+0xe1>
    72c3:	48 8d 3d 96 61 00 00 	lea    rdi,[rip+0x6196]        # d460 <_IO_stdin_used+0x1460>
    72ca:	e8 f1 b1 ff ff       	call   24c0 <puts@plt>
    72cf:	bf 01 00 00 00       	mov    edi,0x1
    72d4:	e8 07 b2 ff ff       	call   24e0 <exit@plt>
    72d9:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    72dc:	be 05 00 00 00       	mov    esi,0x5
    72e1:	89 c7                	mov    edi,eax
    72e3:	e8 08 b3 ff ff       	call   25f0 <listen@plt>
    72e8:	85 c0                	test   eax,eax
    72ea:	79 16                	jns    7302 <actually_start_nsh_server+0x10a>
    72ec:	48 8d 3d a5 61 00 00 	lea    rdi,[rip+0x61a5]        # d498 <_IO_stdin_used+0x1498>
    72f3:	e8 c8 b1 ff ff       	call   24c0 <puts@plt>
    72f8:	bf 01 00 00 00       	mov    edi,0x1
    72fd:	e8 de b1 ff ff       	call   24e0 <exit@plt>
    7302:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7306:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    730a:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    730d:	48 89 ce             	mov    rsi,rcx
    7310:	89 c7                	mov    edi,eax
    7312:	e8 19 b5 ff ff       	call   2830 <accept@plt>
    7317:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    731a:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    731e:	79 20                	jns    7340 <actually_start_nsh_server+0x148>
    7320:	b8 00 00 00 00       	mov    eax,0x0
    7325:	e8 f5 bf ff ff       	call   331f <get_formated_time>
    732a:	48 89 c6             	mov    rsi,rax
    732d:	48 8d 3d 94 61 00 00 	lea    rdi,[rip+0x6194]        # d4c8 <_IO_stdin_used+0x14c8>
    7334:	b8 00 00 00 00       	mov    eax,0x0
    7339:	e8 32 b1 ff ff       	call   2470 <printf@plt>
    733e:	eb c2                	jmp    7302 <actually_start_nsh_server+0x10a>
    7340:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    7343:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    7346:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    734a:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    734e:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    7352:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    7356:	48 89 d1             	mov    rcx,rdx
    7359:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 736f <accept_cmd>
    7360:	be 00 00 00 00       	mov    esi,0x0
    7365:	48 89 c7             	mov    rdi,rax
    7368:	e8 43 b2 ff ff       	call   25b0 <pthread_create@plt>
    736d:	eb 93                	jmp    7302 <actually_start_nsh_server+0x10a>

000000000000736f <accept_cmd>:
    736f:	f3 0f 1e fa          	endbr64 
    7373:	55                   	push   rbp
    7374:	48 89 e5             	mov    rbp,rsp
    7377:	48 83 ec 30          	sub    rsp,0x30
    737b:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    737f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7383:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7387:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    738b:	8b 00                	mov    eax,DWORD PTR [rax]
    738d:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    7394:	00 00 
    7396:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    739d:	ba 00 04 00 00       	mov    edx,0x400
    73a2:	48 89 ce             	mov    rsi,rcx
    73a5:	89 c7                	mov    edi,eax
    73a7:	e8 74 b1 ff ff       	call   2520 <read@plt>
    73ac:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    73af:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    73b6:	00 00 
    73b8:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    73be:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    73c2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    73c6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    73c9:	0f b6 c0             	movzx  eax,al
    73cc:	89 c6                	mov    esi,eax
    73ce:	48 8d 3d 15 61 00 00 	lea    rdi,[rip+0x6115]        # d4ea <_IO_stdin_used+0x14ea>
    73d5:	b8 00 00 00 00       	mov    eax,0x0
    73da:	e8 91 b0 ff ff       	call   2470 <printf@plt>
    73df:	eb a6                	jmp    7387 <accept_cmd+0x18>

00000000000073e1 <tcp_rst_portscan_detect>:
    73e1:	f3 0f 1e fa          	endbr64 
    73e5:	55                   	push   rbp
    73e6:	48 89 e5             	mov    rbp,rsp
    73e9:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    73f0:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    73f7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    73fe:	00 00 
    7400:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7404:	31 c0                	xor    eax,eax
    7406:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    740d:	00 00 00 
    7410:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7417:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    741d:	83 f8 1e             	cmp    eax,0x1e
    7420:	74 0a                	je     742c <tcp_rst_portscan_detect+0x4b>
    7422:	b8 00 00 00 00       	mov    eax,0x0
    7427:	e9 8d 01 00 00       	jmp    75b9 <tcp_rst_portscan_detect+0x1d8>
    742c:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7433:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7439:	83 e8 01             	sub    eax,0x1
    743c:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    7442:	eb 6c                	jmp    74b0 <tcp_rst_portscan_detect+0xcf>
    7444:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    744a:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7450:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7457:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    745d:	48 63 d2             	movsxd rdx,edx
    7460:	48 83 c2 28          	add    rdx,0x28
    7464:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    7469:	89 c1                	mov    ecx,eax
    746b:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    7472:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7479:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    747f:	48 63 d2             	movsxd rdx,edx
    7482:	48 83 c2 28          	add    rdx,0x28
    7486:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    748b:	29 c1                	sub    ecx,eax
    748d:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    7493:	8d 50 01             	lea    edx,[rax+0x1]
    7496:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    749c:	89 ca                	mov    edx,ecx
    749e:	48 98                	cdqe   
    74a0:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    74a7:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    74ae:	74 0b                	je     74bb <tcp_rst_portscan_detect+0xda>
    74b0:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    74b7:	75 8b                	jne    7444 <tcp_rst_portscan_detect+0x63>
    74b9:	eb 01                	jmp    74bc <tcp_rst_portscan_detect+0xdb>
    74bb:	90                   	nop
    74bc:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    74c3:	00 00 00 
    74c6:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    74cd:	00 00 00 
    74d0:	eb 24                	jmp    74f6 <tcp_rst_portscan_detect+0x115>
    74d2:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    74d8:	48 98                	cdqe   
    74da:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    74e1:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    74e6:	7f 07                	jg     74ef <tcp_rst_portscan_detect+0x10e>
    74e8:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    74ef:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    74f6:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    74fc:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7502:	7c ce                	jl     74d2 <tcp_rst_portscan_detect+0xf1>
    7504:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    750a:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7510:	0f 85 9e 00 00 00    	jne    75b4 <tcp_rst_portscan_detect+0x1d3>
    7516:	48 8b 05 13 9b 00 00 	mov    rax,QWORD PTR [rip+0x9b13]        # 11030 <def_log_file>
    751d:	48 8d 35 d4 5f 00 00 	lea    rsi,[rip+0x5fd4]        # d4f8 <_IO_stdin_used+0x14f8>
    7524:	48 89 c7             	mov    rdi,rax
    7527:	e8 24 b0 ff ff       	call   2550 <fopen@plt>
    752c:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    7533:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    753a:	48 83 c0 08          	add    rax,0x8
    753e:	48 89 c6             	mov    rsi,rax
    7541:	48 8d 3d b8 5f 00 00 	lea    rdi,[rip+0x5fb8]        # d500 <_IO_stdin_used+0x1500>
    7548:	b8 00 00 00 00       	mov    eax,0x0
    754d:	e8 1e af ff ff       	call   2470 <printf@plt>
    7552:	b8 00 00 00 00       	mov    eax,0x0
    7557:	e8 c3 bd ff ff       	call   331f <get_formated_time>
    755c:	48 89 c1             	mov    rcx,rax
    755f:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7566:	48 8d 50 08          	lea    rdx,[rax+0x8]
    756a:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7571:	48 8d 35 b8 5f 00 00 	lea    rsi,[rip+0x5fb8]        # d530 <_IO_stdin_used+0x1530>
    7578:	48 89 c7             	mov    rdi,rax
    757b:	b8 00 00 00 00       	mov    eax,0x0
    7580:	e8 7b b0 ff ff       	call   2600 <sprintf@plt>
    7585:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    758c:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7593:	48 89 d6             	mov    rsi,rdx
    7596:	48 89 c7             	mov    rdi,rax
    7599:	e8 d2 b0 ff ff       	call   2670 <fputs@plt>
    759e:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    75a5:	48 89 c7             	mov    rdi,rax
    75a8:	e8 e3 b1 ff ff       	call   2790 <fclose@plt>
    75ad:	b8 01 00 00 00       	mov    eax,0x1
    75b2:	eb 05                	jmp    75b9 <tcp_rst_portscan_detect+0x1d8>
    75b4:	b8 00 00 00 00       	mov    eax,0x0
    75b9:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    75bd:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    75c4:	00 00 
    75c6:	74 05                	je     75cd <tcp_rst_portscan_detect+0x1ec>
    75c8:	e8 53 b1 ff ff       	call   2720 <__stack_chk_fail@plt>
    75cd:	c9                   	leave  
    75ce:	c3                   	ret    

00000000000075cf <fin_rst_portscan_detect>:
    75cf:	f3 0f 1e fa          	endbr64 
    75d3:	55                   	push   rbp
    75d4:	48 89 e5             	mov    rbp,rsp
    75d7:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    75de:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    75e5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    75ec:	00 00 
    75ee:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    75f2:	31 c0                	xor    eax,eax
    75f4:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    75fb:	00 00 00 
    75fe:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7605:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7608:	83 f8 1e             	cmp    eax,0x1e
    760b:	74 0a                	je     7617 <fin_rst_portscan_detect+0x48>
    760d:	b8 00 00 00 00       	mov    eax,0x0
    7612:	e9 8a 01 00 00       	jmp    77a1 <fin_rst_portscan_detect+0x1d2>
    7617:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    761e:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7621:	83 e8 01             	sub    eax,0x1
    7624:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    762a:	eb 6c                	jmp    7698 <fin_rst_portscan_detect+0xc9>
    762c:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    7632:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7638:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    763f:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7645:	48 63 d2             	movsxd rdx,edx
    7648:	48 83 c2 0a          	add    rdx,0xa
    764c:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7651:	89 c1                	mov    ecx,eax
    7653:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    765a:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7661:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7667:	48 63 d2             	movsxd rdx,edx
    766a:	48 83 c2 0a          	add    rdx,0xa
    766e:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7673:	29 c1                	sub    ecx,eax
    7675:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    767b:	8d 50 01             	lea    edx,[rax+0x1]
    767e:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    7684:	89 ca                	mov    edx,ecx
    7686:	48 98                	cdqe   
    7688:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    768f:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    7696:	74 0b                	je     76a3 <fin_rst_portscan_detect+0xd4>
    7698:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    769f:	75 8b                	jne    762c <fin_rst_portscan_detect+0x5d>
    76a1:	eb 01                	jmp    76a4 <fin_rst_portscan_detect+0xd5>
    76a3:	90                   	nop
    76a4:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    76ab:	00 00 00 
    76ae:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    76b5:	00 00 00 
    76b8:	eb 24                	jmp    76de <fin_rst_portscan_detect+0x10f>
    76ba:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    76c0:	48 98                	cdqe   
    76c2:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    76c9:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    76ce:	7f 07                	jg     76d7 <fin_rst_portscan_detect+0x108>
    76d0:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    76d7:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    76de:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    76e4:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    76ea:	7c ce                	jl     76ba <fin_rst_portscan_detect+0xeb>
    76ec:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    76f2:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    76f8:	0f 85 9e 00 00 00    	jne    779c <fin_rst_portscan_detect+0x1cd>
    76fe:	48 8b 05 2b 99 00 00 	mov    rax,QWORD PTR [rip+0x992b]        # 11030 <def_log_file>
    7705:	48 8d 35 ec 5d 00 00 	lea    rsi,[rip+0x5dec]        # d4f8 <_IO_stdin_used+0x14f8>
    770c:	48 89 c7             	mov    rdi,rax
    770f:	e8 3c ae ff ff       	call   2550 <fopen@plt>
    7714:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    771b:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7722:	48 83 c0 08          	add    rax,0x8
    7726:	48 89 c6             	mov    rsi,rax
    7729:	48 8d 3d 28 5e 00 00 	lea    rdi,[rip+0x5e28]        # d558 <_IO_stdin_used+0x1558>
    7730:	b8 00 00 00 00       	mov    eax,0x0
    7735:	e8 36 ad ff ff       	call   2470 <printf@plt>
    773a:	b8 00 00 00 00       	mov    eax,0x0
    773f:	e8 db bb ff ff       	call   331f <get_formated_time>
    7744:	48 89 c1             	mov    rcx,rax
    7747:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    774e:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7752:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7759:	48 8d 35 28 5e 00 00 	lea    rsi,[rip+0x5e28]        # d588 <_IO_stdin_used+0x1588>
    7760:	48 89 c7             	mov    rdi,rax
    7763:	b8 00 00 00 00       	mov    eax,0x0
    7768:	e8 93 ae ff ff       	call   2600 <sprintf@plt>
    776d:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    7774:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    777b:	48 89 d6             	mov    rsi,rdx
    777e:	48 89 c7             	mov    rdi,rax
    7781:	e8 ea ae ff ff       	call   2670 <fputs@plt>
    7786:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    778d:	48 89 c7             	mov    rdi,rax
    7790:	e8 fb af ff ff       	call   2790 <fclose@plt>
    7795:	b8 01 00 00 00       	mov    eax,0x1
    779a:	eb 05                	jmp    77a1 <fin_rst_portscan_detect+0x1d2>
    779c:	b8 00 00 00 00       	mov    eax,0x0
    77a1:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    77a5:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    77ac:	00 00 
    77ae:	74 05                	je     77b5 <fin_rst_portscan_detect+0x1e6>
    77b0:	e8 6b af ff ff       	call   2720 <__stack_chk_fail@plt>
    77b5:	c9                   	leave  
    77b6:	c3                   	ret    

00000000000077b7 <member_ready_for_scan>:
    77b7:	f3 0f 1e fa          	endbr64 
    77bb:	55                   	push   rbp
    77bc:	48 89 e5             	mov    rbp,rsp
    77bf:	48 83 ec 10          	sub    rsp,0x10
    77c3:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    77ca:	eb 48                	jmp    7814 <member_ready_for_scan+0x5d>
    77cc:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    77cf:	48 63 d0             	movsxd rdx,eax
    77d2:	48 89 d0             	mov    rax,rdx
    77d5:	48 c1 e0 02          	shl    rax,0x2
    77d9:	48 01 d0             	add    rax,rdx
    77dc:	48 c1 e0 03          	shl    rax,0x3
    77e0:	48 01 d0             	add    rax,rdx
    77e3:	48 c1 e0 04          	shl    rax,0x4
    77e7:	48 8d 15 32 bd 0e 00 	lea    rdx,[rip+0xebd32]        # f3520 <watchlist>
    77ee:	48 01 d0             	add    rax,rdx
    77f1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    77f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    77f9:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    77ff:	83 f8 1d             	cmp    eax,0x1d
    7802:	76 0c                	jbe    7810 <member_ready_for_scan+0x59>
    7804:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7808:	48 89 c7             	mov    rdi,rax
    780b:	e8 d1 fb ff ff       	call   73e1 <tcp_rst_portscan_detect>
    7810:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    7814:	8b 05 fe 97 00 00    	mov    eax,DWORD PTR [rip+0x97fe]        # 11018 <watchlist_num>
    781a:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    781d:	7e ad                	jle    77cc <member_ready_for_scan+0x15>
    781f:	90                   	nop
    7820:	90                   	nop
    7821:	c9                   	leave  
    7822:	c3                   	ret    

0000000000007823 <member_exists>:
    7823:	f3 0f 1e fa          	endbr64 
    7827:	55                   	push   rbp
    7828:	48 89 e5             	mov    rbp,rsp
    782b:	48 83 ec 20          	sub    rsp,0x20
    782f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7833:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    783a:	eb 47                	jmp    7883 <member_exists+0x60>
    783c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    783f:	8d 50 01             	lea    edx,[rax+0x1]
    7842:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    7845:	48 63 d0             	movsxd rdx,eax
    7848:	48 89 d0             	mov    rax,rdx
    784b:	48 c1 e0 02          	shl    rax,0x2
    784f:	48 01 d0             	add    rax,rdx
    7852:	48 c1 e0 03          	shl    rax,0x3
    7856:	48 01 d0             	add    rax,rdx
    7859:	48 c1 e0 04          	shl    rax,0x4
    785d:	48 8d 15 bc bc 0e 00 	lea    rdx,[rip+0xebcbc]        # f3520 <watchlist>
    7864:	48 01 d0             	add    rax,rdx
    7867:	48 8d 50 08          	lea    rdx,[rax+0x8]
    786b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    786f:	48 89 c6             	mov    rsi,rax
    7872:	48 89 d7             	mov    rdi,rdx
    7875:	e8 b6 ae ff ff       	call   2730 <strcmp@plt>
    787a:	85 c0                	test   eax,eax
    787c:	75 05                	jne    7883 <member_exists+0x60>
    787e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7881:	eb 10                	jmp    7893 <member_exists+0x70>
    7883:	8b 05 8f 97 00 00    	mov    eax,DWORD PTR [rip+0x978f]        # 11018 <watchlist_num>
    7889:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    788c:	7e ae                	jle    783c <member_exists+0x19>
    788e:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7893:	c9                   	leave  
    7894:	c3                   	ret    

0000000000007895 <init_member>:
    7895:	f3 0f 1e fa          	endbr64 
    7899:	55                   	push   rbp
    789a:	48 89 e5             	mov    rbp,rsp
    789d:	48 83 ec 20          	sub    rsp,0x20
    78a1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    78a5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    78a9:	48 89 c7             	mov    rdi,rax
    78ac:	e8 72 ff ff ff       	call   7823 <member_exists>
    78b1:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    78b4:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    78b8:	74 42                	je     78fc <init_member+0x67>
    78ba:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    78bd:	48 63 d0             	movsxd rdx,eax
    78c0:	48 89 d0             	mov    rax,rdx
    78c3:	48 c1 e0 02          	shl    rax,0x2
    78c7:	48 01 d0             	add    rax,rdx
    78ca:	48 c1 e0 03          	shl    rax,0x3
    78ce:	48 01 d0             	add    rax,rdx
    78d1:	48 c1 e0 04          	shl    rax,0x4
    78d5:	48 8d 15 44 bc 0e 00 	lea    rdx,[rip+0xebc44]        # f3520 <watchlist>
    78dc:	48 01 d0             	add    rax,rdx
    78df:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    78e3:	bf 00 00 00 00       	mov    edi,0x0
    78e8:	e8 63 af ff ff       	call   2850 <time@plt>
    78ed:	48 89 c2             	mov    rdx,rax
    78f0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    78f4:	48 89 10             	mov    QWORD PTR [rax],rdx
    78f7:	e9 a8 00 00 00       	jmp    79a4 <init_member+0x10f>
    78fc:	48 8d 3d aa 5c 00 00 	lea    rdi,[rip+0x5caa]        # d5ad <_IO_stdin_used+0x15ad>
    7903:	e8 1b ff ff ff       	call   7823 <member_exists>
    7908:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    790b:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    790f:	74 2b                	je     793c <init_member+0xa7>
    7911:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7914:	48 63 d0             	movsxd rdx,eax
    7917:	48 89 d0             	mov    rax,rdx
    791a:	48 c1 e0 02          	shl    rax,0x2
    791e:	48 01 d0             	add    rax,rdx
    7921:	48 c1 e0 03          	shl    rax,0x3
    7925:	48 01 d0             	add    rax,rdx
    7928:	48 c1 e0 04          	shl    rax,0x4
    792c:	48 8d 15 ed bb 0e 00 	lea    rdx,[rip+0xebbed]        # f3520 <watchlist>
    7933:	48 01 d0             	add    rax,rdx
    7936:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    793a:	eb 3b                	jmp    7977 <init_member+0xe2>
    793c:	8b 05 d6 96 00 00    	mov    eax,DWORD PTR [rip+0x96d6]        # 11018 <watchlist_num>
    7942:	83 c0 01             	add    eax,0x1
    7945:	89 05 cd 96 00 00    	mov    DWORD PTR [rip+0x96cd],eax        # 11018 <watchlist_num>
    794b:	8b 05 c7 96 00 00    	mov    eax,DWORD PTR [rip+0x96c7]        # 11018 <watchlist_num>
    7951:	48 63 d0             	movsxd rdx,eax
    7954:	48 89 d0             	mov    rax,rdx
    7957:	48 c1 e0 02          	shl    rax,0x2
    795b:	48 01 d0             	add    rax,rdx
    795e:	48 c1 e0 03          	shl    rax,0x3
    7962:	48 01 d0             	add    rax,rdx
    7965:	48 c1 e0 04          	shl    rax,0x4
    7969:	48 8d 15 b0 bb 0e 00 	lea    rdx,[rip+0xebbb0]        # f3520 <watchlist>
    7970:	48 01 d0             	add    rax,rdx
    7973:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7977:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    797b:	ba 08 00 00 00       	mov    edx,0x8
    7980:	be 00 00 00 00       	mov    esi,0x0
    7985:	48 89 c7             	mov    rdi,rax
    7988:	e8 f3 aa ff ff       	call   2480 <memset@plt>
    798d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7991:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7995:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7999:	48 89 c6             	mov    rsi,rax
    799c:	48 89 d7             	mov    rdi,rdx
    799f:	e8 ac ad ff ff       	call   2750 <strcpy@plt>
    79a4:	c9                   	leave  
    79a5:	c3                   	ret    

00000000000079a6 <ready_for_clean>:
    79a6:	f3 0f 1e fa          	endbr64 
    79aa:	55                   	push   rbp
    79ab:	48 89 e5             	mov    rbp,rsp
    79ae:	48 83 ec 10          	sub    rsp,0x10
    79b2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    79b6:	bf 00 00 00 00       	mov    edi,0x0
    79bb:	e8 90 ae ff ff       	call   2850 <time@plt>
    79c0:	48 89 c2             	mov    rdx,rax
    79c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79c7:	48 8b 00             	mov    rax,QWORD PTR [rax]
    79ca:	48 29 c2             	sub    rdx,rax
    79cd:	48 8b 05 e4 98 00 00 	mov    rax,QWORD PTR [rip+0x98e4]        # 112b8 <clean_delay>
    79d4:	48 39 c2             	cmp    rdx,rax
    79d7:	72 22                	jb     79fb <ready_for_clean+0x55>
    79d9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79dd:	48 83 c0 08          	add    rax,0x8
    79e1:	48 8d 35 cd 5b 00 00 	lea    rsi,[rip+0x5bcd]        # d5b5 <_IO_stdin_used+0x15b5>
    79e8:	48 89 c7             	mov    rdi,rax
    79eb:	e8 40 ad ff ff       	call   2730 <strcmp@plt>
    79f0:	85 c0                	test   eax,eax
    79f2:	74 07                	je     79fb <ready_for_clean+0x55>
    79f4:	b8 01 00 00 00       	mov    eax,0x1
    79f9:	eb 05                	jmp    7a00 <ready_for_clean+0x5a>
    79fb:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7a00:	c9                   	leave  
    7a01:	c3                   	ret    

0000000000007a02 <clean>:
    7a02:	f3 0f 1e fa          	endbr64 
    7a06:	55                   	push   rbp
    7a07:	48 89 e5             	mov    rbp,rsp
    7a0a:	48 83 ec 10          	sub    rsp,0x10
    7a0e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7a12:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a16:	ba 08 00 00 00       	mov    edx,0x8
    7a1b:	be 00 00 00 00       	mov    esi,0x0
    7a20:	48 89 c7             	mov    rdi,rax
    7a23:	e8 58 aa ff ff       	call   2480 <memset@plt>
    7a28:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a2c:	48 83 c0 08          	add    rax,0x8
    7a30:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7a37:	2e 31 00 
    7a3a:	48 89 08             	mov    QWORD PTR [rax],rcx
    7a3d:	90                   	nop
    7a3e:	c9                   	leave  
    7a3f:	c3                   	ret    

0000000000007a40 <scan_for_clean>:
    7a40:	f3 0f 1e fa          	endbr64 
    7a44:	55                   	push   rbp
    7a45:	48 89 e5             	mov    rbp,rsp
    7a48:	48 83 ec 10          	sub    rsp,0x10
    7a4c:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7a53:	eb 62                	jmp    7ab7 <scan_for_clean+0x77>
    7a55:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a58:	48 63 d0             	movsxd rdx,eax
    7a5b:	48 89 d0             	mov    rax,rdx
    7a5e:	48 c1 e0 02          	shl    rax,0x2
    7a62:	48 01 d0             	add    rax,rdx
    7a65:	48 c1 e0 03          	shl    rax,0x3
    7a69:	48 01 d0             	add    rax,rdx
    7a6c:	48 c1 e0 04          	shl    rax,0x4
    7a70:	48 8d 15 a9 ba 0e 00 	lea    rdx,[rip+0xebaa9]        # f3520 <watchlist>
    7a77:	48 01 d0             	add    rax,rdx
    7a7a:	48 89 c7             	mov    rdi,rax
    7a7d:	e8 24 ff ff ff       	call   79a6 <ready_for_clean>
    7a82:	85 c0                	test   eax,eax
    7a84:	7e 2d                	jle    7ab3 <scan_for_clean+0x73>
    7a86:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a89:	48 63 d0             	movsxd rdx,eax
    7a8c:	48 89 d0             	mov    rax,rdx
    7a8f:	48 c1 e0 02          	shl    rax,0x2
    7a93:	48 01 d0             	add    rax,rdx
    7a96:	48 c1 e0 03          	shl    rax,0x3
    7a9a:	48 01 d0             	add    rax,rdx
    7a9d:	48 c1 e0 04          	shl    rax,0x4
    7aa1:	48 8d 15 78 ba 0e 00 	lea    rdx,[rip+0xeba78]        # f3520 <watchlist>
    7aa8:	48 01 d0             	add    rax,rdx
    7aab:	48 89 c7             	mov    rdi,rax
    7aae:	e8 4f ff ff ff       	call   7a02 <clean>
    7ab3:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7ab7:	8b 05 5b 95 00 00    	mov    eax,DWORD PTR [rip+0x955b]        # 11018 <watchlist_num>
    7abd:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7ac0:	7e 93                	jle    7a55 <scan_for_clean+0x15>
    7ac2:	90                   	nop
    7ac3:	90                   	nop
    7ac4:	c9                   	leave  
    7ac5:	c3                   	ret    

0000000000007ac6 <compare_entries>:
    7ac6:	f3 0f 1e fa          	endbr64 
    7aca:	55                   	push   rbp
    7acb:	48 89 e5             	mov    rbp,rsp
    7ace:	48 83 ec 20          	sub    rsp,0x20
    7ad2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7ad6:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7ada:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7ae1:	e9 ac 00 00 00       	jmp    7b92 <compare_entries+0xcc>
    7ae6:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7ae9:	48 63 d0             	movsxd rdx,eax
    7aec:	48 89 d0             	mov    rax,rdx
    7aef:	48 c1 e0 04          	shl    rax,0x4
    7af3:	48 01 d0             	add    rax,rdx
    7af6:	48 01 c0             	add    rax,rax
    7af9:	48 8d 15 20 02 10 00 	lea    rdx,[rip+0x100220]        # 107d20 <arpcache>
    7b00:	48 01 c2             	add    rdx,rax
    7b03:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7b07:	48 89 c6             	mov    rsi,rax
    7b0a:	48 89 d7             	mov    rdi,rdx
    7b0d:	e8 a3 01 00 00       	call   7cb5 <compare_ip_entry>
    7b12:	85 c0                	test   eax,eax
    7b14:	74 78                	je     7b8e <compare_entries+0xc8>
    7b16:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7b19:	48 63 d0             	movsxd rdx,eax
    7b1c:	48 89 d0             	mov    rax,rdx
    7b1f:	48 c1 e0 04          	shl    rax,0x4
    7b23:	48 01 d0             	add    rax,rdx
    7b26:	48 01 c0             	add    rax,rax
    7b29:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7b2d:	48 8d 05 ec 01 10 00 	lea    rax,[rip+0x1001ec]        # 107d20 <arpcache>
    7b34:	48 01 c2             	add    rdx,rax
    7b37:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7b3b:	48 89 c6             	mov    rsi,rax
    7b3e:	48 89 d7             	mov    rdi,rdx
    7b41:	e8 98 01 00 00       	call   7cde <compare_mac_entry>
    7b46:	85 c0                	test   eax,eax
    7b48:	75 44                	jne    7b8e <compare_entries+0xc8>
    7b4a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7b4d:	48 63 d0             	movsxd rdx,eax
    7b50:	48 89 d0             	mov    rax,rdx
    7b53:	48 c1 e0 04          	shl    rax,0x4
    7b57:	48 01 d0             	add    rax,rdx
    7b5a:	48 01 c0             	add    rax,rax
    7b5d:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7b61:	48 8d 05 b8 01 10 00 	lea    rax,[rip+0x1001b8]        # 107d20 <arpcache>
    7b68:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7b6c:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7b70:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7b74:	48 89 d1             	mov    rcx,rdx
    7b77:	48 89 f2             	mov    rdx,rsi
    7b7a:	48 89 c6             	mov    rsi,rax
    7b7d:	48 8d 3d 3c 5a 00 00 	lea    rdi,[rip+0x5a3c]        # d5c0 <_IO_stdin_used+0x15c0>
    7b84:	b8 00 00 00 00       	mov    eax,0x0
    7b89:	e8 e2 a8 ff ff       	call   2470 <printf@plt>
    7b8e:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7b92:	8b 05 84 94 00 00    	mov    eax,DWORD PTR [rip+0x9484]        # 1101c <arp_entries>
    7b98:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7b9b:	0f 8e 45 ff ff ff    	jle    7ae6 <compare_entries+0x20>
    7ba1:	90                   	nop
    7ba2:	90                   	nop
    7ba3:	c9                   	leave  
    7ba4:	c3                   	ret    

0000000000007ba5 <add_entry>:
    7ba5:	f3 0f 1e fa          	endbr64 
    7ba9:	55                   	push   rbp
    7baa:	48 89 e5             	mov    rbp,rsp
    7bad:	48 83 ec 20          	sub    rsp,0x20
    7bb1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7bb5:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7bb9:	8b 05 5d 94 00 00    	mov    eax,DWORD PTR [rip+0x945d]        # 1101c <arp_entries>
    7bbf:	83 c0 01             	add    eax,0x1
    7bc2:	89 05 54 94 00 00    	mov    DWORD PTR [rip+0x9454],eax        # 1101c <arp_entries>
    7bc8:	8b 05 4e 94 00 00    	mov    eax,DWORD PTR [rip+0x944e]        # 1101c <arp_entries>
    7bce:	48 63 d0             	movsxd rdx,eax
    7bd1:	48 89 d0             	mov    rax,rdx
    7bd4:	48 c1 e0 04          	shl    rax,0x4
    7bd8:	48 01 d0             	add    rax,rdx
    7bdb:	48 01 c0             	add    rax,rax
    7bde:	48 8d 15 3b 01 10 00 	lea    rdx,[rip+0x10013b]        # 107d20 <arpcache>
    7be5:	48 01 d0             	add    rax,rdx
    7be8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7bec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bf0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7bf4:	48 89 d6             	mov    rsi,rdx
    7bf7:	48 89 c7             	mov    rdi,rax
    7bfa:	e8 51 ab ff ff       	call   2750 <strcpy@plt>
    7bff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7c03:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7c07:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7c0b:	48 89 c6             	mov    rsi,rax
    7c0e:	48 89 d7             	mov    rdi,rdx
    7c11:	e8 3a ab ff ff       	call   2750 <strcpy@plt>
    7c16:	90                   	nop
    7c17:	c9                   	leave  
    7c18:	c3                   	ret    

0000000000007c19 <entry_exists>:
    7c19:	f3 0f 1e fa          	endbr64 
    7c1d:	55                   	push   rbp
    7c1e:	48 89 e5             	mov    rbp,rsp
    7c21:	48 83 ec 20          	sub    rsp,0x20
    7c25:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7c29:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7c2d:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c34:	eb 6d                	jmp    7ca3 <entry_exists+0x8a>
    7c36:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c39:	48 63 d0             	movsxd rdx,eax
    7c3c:	48 89 d0             	mov    rax,rdx
    7c3f:	48 c1 e0 04          	shl    rax,0x4
    7c43:	48 01 d0             	add    rax,rdx
    7c46:	48 01 c0             	add    rax,rax
    7c49:	48 8d 15 d0 00 10 00 	lea    rdx,[rip+0x1000d0]        # 107d20 <arpcache>
    7c50:	48 01 c2             	add    rdx,rax
    7c53:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7c57:	48 89 c6             	mov    rsi,rax
    7c5a:	48 89 d7             	mov    rdi,rdx
    7c5d:	e8 53 00 00 00       	call   7cb5 <compare_ip_entry>
    7c62:	85 c0                	test   eax,eax
    7c64:	75 39                	jne    7c9f <entry_exists+0x86>
    7c66:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c69:	48 63 d0             	movsxd rdx,eax
    7c6c:	48 89 d0             	mov    rax,rdx
    7c6f:	48 c1 e0 04          	shl    rax,0x4
    7c73:	48 01 d0             	add    rax,rdx
    7c76:	48 01 c0             	add    rax,rax
    7c79:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7c7d:	48 8d 05 9c 00 10 00 	lea    rax,[rip+0x10009c]        # 107d20 <arpcache>
    7c84:	48 01 c2             	add    rdx,rax
    7c87:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7c8b:	48 89 c6             	mov    rsi,rax
    7c8e:	48 89 d7             	mov    rdi,rdx
    7c91:	e8 48 00 00 00       	call   7cde <compare_mac_entry>
    7c96:	85 c0                	test   eax,eax
    7c98:	75 05                	jne    7c9f <entry_exists+0x86>
    7c9a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c9d:	eb 14                	jmp    7cb3 <entry_exists+0x9a>
    7c9f:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7ca3:	8b 05 73 93 00 00    	mov    eax,DWORD PTR [rip+0x9373]        # 1101c <arp_entries>
    7ca9:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7cac:	7e 88                	jle    7c36 <entry_exists+0x1d>
    7cae:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7cb3:	c9                   	leave  
    7cb4:	c3                   	ret    

0000000000007cb5 <compare_ip_entry>:
    7cb5:	f3 0f 1e fa          	endbr64 
    7cb9:	55                   	push   rbp
    7cba:	48 89 e5             	mov    rbp,rsp
    7cbd:	48 83 ec 10          	sub    rsp,0x10
    7cc1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7cc5:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7cc9:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7ccd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7cd1:	48 89 d6             	mov    rsi,rdx
    7cd4:	48 89 c7             	mov    rdi,rax
    7cd7:	e8 54 aa ff ff       	call   2730 <strcmp@plt>
    7cdc:	c9                   	leave  
    7cdd:	c3                   	ret    

0000000000007cde <compare_mac_entry>:
    7cde:	f3 0f 1e fa          	endbr64 
    7ce2:	55                   	push   rbp
    7ce3:	48 89 e5             	mov    rbp,rsp
    7ce6:	48 83 ec 10          	sub    rsp,0x10
    7cea:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7cee:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7cf2:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7cf6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7cfa:	48 89 d6             	mov    rsi,rdx
    7cfd:	48 89 c7             	mov    rdi,rax
    7d00:	e8 2b aa ff ff       	call   2730 <strcmp@plt>
    7d05:	c9                   	leave  
    7d06:	c3                   	ret    

0000000000007d07 <load_csv_arp_cache>:
    7d07:	f3 0f 1e fa          	endbr64 
    7d0b:	55                   	push   rbp
    7d0c:	48 89 e5             	mov    rbp,rsp
    7d0f:	53                   	push   rbx
    7d10:	48 83 ec 68          	sub    rsp,0x68
    7d14:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7d1b:	00 00 
    7d1d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7d21:	31 c0                	xor    eax,eax
    7d23:	48 8d 35 cc 58 00 00 	lea    rsi,[rip+0x58cc]        # d5f6 <_IO_stdin_used+0x15f6>
    7d2a:	48 8d 3d c7 58 00 00 	lea    rdi,[rip+0x58c7]        # d5f8 <_IO_stdin_used+0x15f8>
    7d31:	e8 1a a8 ff ff       	call   2550 <fopen@plt>
    7d36:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7d3a:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7d3f:	75 22                	jne    7d63 <load_csv_arp_cache+0x5c>
    7d41:	48 8d 3d d0 58 00 00 	lea    rdi,[rip+0x58d0]        # d618 <_IO_stdin_used+0x1618>
    7d48:	e8 73 a7 ff ff       	call   24c0 <puts@plt>
    7d4d:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7d51:	48 89 c7             	mov    rdi,rax
    7d54:	e8 37 aa ff ff       	call   2790 <fclose@plt>
    7d59:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7d5e:	e9 dd 00 00 00       	jmp    7e40 <load_csv_arp_cache+0x139>
    7d63:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7d6a:	00 
    7d6b:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7d72:	00 
    7d73:	eb 7c                	jmp    7df1 <load_csv_arp_cache+0xea>
    7d75:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7d79:	48 85 c0             	test   rax,rax
    7d7c:	0f 84 97 00 00 00    	je     7e19 <load_csv_arp_cache+0x112>
    7d82:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7d86:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7d8a:	48 8d 35 c0 58 00 00 	lea    rsi,[rip+0x58c0]        # d651 <_IO_stdin_used+0x1651>
    7d91:	48 89 c7             	mov    rdi,rax
    7d94:	e8 17 aa ff ff       	call   27b0 <strcspn@plt>
    7d99:	48 01 d8             	add    rax,rbx
    7d9c:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7d9f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7da3:	48 8d 35 a9 58 00 00 	lea    rsi,[rip+0x58a9]        # d653 <_IO_stdin_used+0x1653>
    7daa:	48 89 c7             	mov    rdi,rax
    7dad:	e8 ae a9 ff ff       	call   2760 <strtok@plt>
    7db2:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7db6:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7dba:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7dbe:	48 89 d6             	mov    rsi,rdx
    7dc1:	48 89 c7             	mov    rdi,rax
    7dc4:	e8 87 a9 ff ff       	call   2750 <strcpy@plt>
    7dc9:	48 8d 35 83 58 00 00 	lea    rsi,[rip+0x5883]        # d653 <_IO_stdin_used+0x1653>
    7dd0:	bf 00 00 00 00       	mov    edi,0x0
    7dd5:	e8 86 a9 ff ff       	call   2760 <strtok@plt>
    7dda:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7dde:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7de2:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7de6:	48 89 d6             	mov    rsi,rdx
    7de9:	48 89 c7             	mov    rdi,rax
    7dec:	e8 5f a9 ff ff       	call   2750 <strcpy@plt>
    7df1:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    7df5:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    7df9:	48 8d 45 98          	lea    rax,[rbp-0x68]
    7dfd:	48 89 ce             	mov    rsi,rcx
    7e00:	48 89 c7             	mov    rdi,rax
    7e03:	e8 38 a9 ff ff       	call   2740 <getline@plt>
    7e08:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7e0c:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    7e11:	0f 85 5e ff ff ff    	jne    7d75 <load_csv_arp_cache+0x6e>
    7e17:	eb 01                	jmp    7e1a <load_csv_arp_cache+0x113>
    7e19:	90                   	nop
    7e1a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7e1e:	48 85 c0             	test   rax,rax
    7e21:	74 0c                	je     7e2f <load_csv_arp_cache+0x128>
    7e23:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7e27:	48 89 c7             	mov    rdi,rax
    7e2a:	e8 a1 a7 ff ff       	call   25d0 <free@plt>
    7e2f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7e33:	48 89 c7             	mov    rdi,rax
    7e36:	e8 55 a9 ff ff       	call   2790 <fclose@plt>
    7e3b:	b8 01 00 00 00       	mov    eax,0x1
    7e40:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7e44:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    7e4b:	00 00 
    7e4d:	74 05                	je     7e54 <load_csv_arp_cache+0x14d>
    7e4f:	e8 cc a8 ff ff       	call   2720 <__stack_chk_fail@plt>
    7e54:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7e58:	c9                   	leave  
    7e59:	c3                   	ret    

0000000000007e5a <callback>:
    7e5a:	f3 0f 1e fa          	endbr64 
    7e5e:	55                   	push   rbp
    7e5f:	48 89 e5             	mov    rbp,rsp
    7e62:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7e66:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    7e69:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    7e6d:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    7e71:	b8 00 00 00 00       	mov    eax,0x0
    7e76:	5d                   	pop    rbp
    7e77:	c3                   	ret    

0000000000007e78 <update_db>:
    7e78:	f3 0f 1e fa          	endbr64 
    7e7c:	55                   	push   rbp
    7e7d:	48 89 e5             	mov    rbp,rsp
    7e80:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    7e87:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    7e8e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7e95:	00 00 
    7e97:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7e9b:	31 c0                	xor    eax,eax
    7e9d:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7ea4:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    7eab:	48 8d 3d a6 57 00 00 	lea    rdi,[rip+0x57a6]        # d658 <_IO_stdin_used+0x1658>
    7eb2:	e8 09 a6 ff ff       	call   24c0 <puts@plt>
    7eb7:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    7ebe:	00 00 00 00 
    7ec2:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7ec9:	48 89 c6             	mov    rsi,rax
    7ecc:	48 8d 3d 6d 20 10 00 	lea    rdi,[rip+0x10206d]        # 109f40 <sqlite_db_path>
    7ed3:	e8 68 a9 ff ff       	call   2840 <sqlite3_open@plt>
    7ed8:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    7ede:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    7ee5:	74 28                	je     7f0f <update_db+0x97>
    7ee7:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    7eee:	48 89 c7             	mov    rdi,rax
    7ef1:	e8 8a a8 ff ff       	call   2780 <sqlite3_errmsg@plt>
    7ef6:	48 89 c6             	mov    rsi,rax
    7ef9:	48 8d 3d 64 57 00 00 	lea    rdi,[rip+0x5764]        # d664 <_IO_stdin_used+0x1664>
    7f00:	b8 00 00 00 00       	mov    eax,0x0
    7f05:	e8 66 a5 ff ff       	call   2470 <printf@plt>
    7f0a:	e9 a2 00 00 00       	jmp    7fb1 <update_db+0x139>
    7f0f:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    7f16:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    7f19:	85 c0                	test   eax,eax
    7f1b:	75 2e                	jne    7f4b <update_db+0xd3>
    7f1d:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    7f24:	48 8d 48 10          	lea    rcx,[rax+0x10]
    7f28:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    7f2f:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    7f36:	48 8d 35 3b 57 00 00 	lea    rsi,[rip+0x573b]        # d678 <_IO_stdin_used+0x1678>
    7f3d:	48 89 c7             	mov    rdi,rax
    7f40:	b8 00 00 00 00       	mov    eax,0x0
    7f45:	e8 b6 a6 ff ff       	call   2600 <sprintf@plt>
    7f4a:	90                   	nop
    7f4b:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    7f52:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    7f59:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    7f60:	49 89 d0             	mov    r8,rdx
    7f63:	b9 00 00 00 00       	mov    ecx,0x0
    7f68:	ba 00 00 00 00       	mov    edx,0x0
    7f6d:	48 89 c7             	mov    rdi,rax
    7f70:	e8 8b a5 ff ff       	call   2500 <sqlite3_exec@plt>
    7f75:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    7f7b:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    7f82:	74 2c                	je     7fb0 <update_db+0x138>
    7f84:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7f8b:	48 89 c6             	mov    rsi,rax
    7f8e:	48 8d 3d 28 57 00 00 	lea    rdi,[rip+0x5728]        # d6bd <_IO_stdin_used+0x16bd>
    7f95:	b8 00 00 00 00       	mov    eax,0x0
    7f9a:	e8 d1 a4 ff ff       	call   2470 <printf@plt>
    7f9f:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7fa6:	48 89 c7             	mov    rdi,rax
    7fa9:	e8 e2 a5 ff ff       	call   2590 <sqlite3_free@plt>
    7fae:	eb 01                	jmp    7fb1 <update_db+0x139>
    7fb0:	90                   	nop
    7fb1:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    7fb8:	48 89 c7             	mov    rdi,rax
    7fbb:	e8 90 a4 ff ff       	call   2450 <sqlite3_close@plt>
    7fc0:	b8 01 00 00 00       	mov    eax,0x1
    7fc5:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    7fc9:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    7fd0:	00 00 
    7fd2:	74 05                	je     7fd9 <update_db+0x161>
    7fd4:	e8 47 a7 ff ff       	call   2720 <__stack_chk_fail@plt>
    7fd9:	c9                   	leave  
    7fda:	c3                   	ret    

0000000000007fdb <update_spi_db>:
    7fdb:	f3 0f 1e fa          	endbr64 
    7fdf:	55                   	push   rbp
    7fe0:	48 89 e5             	mov    rbp,rsp
    7fe3:	41 57                	push   r15
    7fe5:	41 56                	push   r14
    7fe7:	41 55                	push   r13
    7fe9:	41 54                	push   r12
    7feb:	53                   	push   rbx
    7fec:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    7ff3:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    7ffa:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8001:	00 00 
    8003:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    8007:	31 c0                	xor    eax,eax
    8009:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    8010:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    8017:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    801e:	48 89 c6             	mov    rsi,rax
    8021:	48 8d 3d b3 56 00 00 	lea    rdi,[rip+0x56b3]        # d6db <_IO_stdin_used+0x16db>
    8028:	e8 13 a8 ff ff       	call   2840 <sqlite3_open@plt>
    802d:	85 c0                	test   eax,eax
    802f:	74 3c                	je     806d <update_spi_db+0x92>
    8031:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8038:	48 89 c7             	mov    rdi,rax
    803b:	e8 40 a7 ff ff       	call   2780 <sqlite3_errmsg@plt>
    8040:	48 89 c6             	mov    rsi,rax
    8043:	48 8d 3d a9 56 00 00 	lea    rdi,[rip+0x56a9]        # d6f3 <_IO_stdin_used+0x16f3>
    804a:	b8 00 00 00 00       	mov    eax,0x0
    804f:	e8 1c a4 ff ff       	call   2470 <printf@plt>
    8054:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    805b:	48 89 c7             	mov    rdi,rax
    805e:	e8 ed a3 ff ff       	call   2450 <sqlite3_close@plt>
    8063:	b8 00 00 00 00       	mov    eax,0x0
    8068:	e9 59 01 00 00       	jmp    81c6 <update_spi_db+0x1eb>
    806d:	48 8d 05 94 56 00 00 	lea    rax,[rip+0x5694]        # d708 <_IO_stdin_used+0x1708>
    8074:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    807b:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8082:	8b 50 7c             	mov    edx,DWORD PTR [rax+0x7c]
    8085:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    808c:	44 8b 78 78          	mov    r15d,DWORD PTR [rax+0x78]
    8090:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8097:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    809e:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80a5:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    80ac:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80b3:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    80ba:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80c1:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    80c7:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80ce:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    80d2:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    80d5:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80dc:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    80e0:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80e7:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    80eb:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    80ee:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    80f5:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    80f9:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8100:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8103:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    8109:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8110:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    8113:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    8119:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8120:	48 8d 48 29          	lea    rcx,[rax+0x29]
    8124:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    812b:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    8132:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    8139:	52                   	push   rdx
    813a:	41 57                	push   r15
    813c:	41 56                	push   r14
    813e:	41 55                	push   r13
    8140:	41 54                	push   r12
    8142:	53                   	push   rbx
    8143:	41 53                	push   r11
    8145:	41 52                	push   r10
    8147:	41 51                	push   r9
    8149:	41 50                	push   r8
    814b:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    8152:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    8159:	48 89 fa             	mov    rdx,rdi
    815c:	48 89 c7             	mov    rdi,rax
    815f:	b8 00 00 00 00       	mov    eax,0x0
    8164:	e8 97 a4 ff ff       	call   2600 <sprintf@plt>
    8169:	48 83 c4 50          	add    rsp,0x50
    816d:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    8174:	00 00 00 00 
    8178:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    817f:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    8186:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    818d:	49 89 d0             	mov    r8,rdx
    8190:	b9 00 00 00 00       	mov    ecx,0x0
    8195:	ba 00 00 00 00       	mov    edx,0x0
    819a:	48 89 c7             	mov    rdi,rax
    819d:	e8 5e a3 ff ff       	call   2500 <sqlite3_exec@plt>
    81a2:	85 c0                	test   eax,eax
    81a4:	74 1b                	je     81c1 <update_spi_db+0x1e6>
    81a6:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    81ad:	48 89 c6             	mov    rsi,rax
    81b0:	48 8d 3d 3e 56 00 00 	lea    rdi,[rip+0x563e]        # d7f5 <_IO_stdin_used+0x17f5>
    81b7:	b8 00 00 00 00       	mov    eax,0x0
    81bc:	e8 af a2 ff ff       	call   2470 <printf@plt>
    81c1:	b8 00 00 00 00       	mov    eax,0x0
    81c6:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    81ca:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    81d1:	00 00 
    81d3:	74 05                	je     81da <update_spi_db+0x1ff>
    81d5:	e8 46 a5 ff ff       	call   2720 <__stack_chk_fail@plt>
    81da:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    81de:	5b                   	pop    rbx
    81df:	41 5c                	pop    r12
    81e1:	41 5d                	pop    r13
    81e3:	41 5e                	pop    r14
    81e5:	41 5f                	pop    r15
    81e7:	5d                   	pop    rbp
    81e8:	c3                   	ret    

00000000000081e9 <http_disect>:
    81e9:	f3 0f 1e fa          	endbr64 
    81ed:	55                   	push   rbp
    81ee:	48 89 e5             	mov    rbp,rsp
    81f1:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    81f8:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    81ff:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    8206:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    820d:	00 00 
    820f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8213:	31 c0                	xor    eax,eax
    8215:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    821c:	be 0d 00 00 00       	mov    esi,0xd
    8221:	48 89 c7             	mov    rdi,rax
    8224:	e8 91 b2 ff ff       	call   34ba <strloc>
    8229:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    822f:	48 8d 3d dd 55 00 00 	lea    rdi,[rip+0x55dd]        # d813 <_IO_stdin_used+0x1813>
    8236:	e8 85 a2 ff ff       	call   24c0 <puts@plt>
    823b:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8242:	48 89 c7             	mov    rdi,rax
    8245:	e8 17 b3 ff ff       	call   3561 <test_string_arr_print>
    824a:	83 f0 01             	xor    eax,0x1
    824d:	84 c0                	test   al,al
    824f:	75 33                	jne    8284 <http_disect+0x9b>
    8251:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    8257:	48 63 d0             	movsxd rdx,eax
    825a:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    8261:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    8268:	48 89 ce             	mov    rsi,rcx
    826b:	48 89 c7             	mov    rdi,rax
    826e:	e8 2d a5 ff ff       	call   27a0 <strncpy@plt>
    8273:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    827a:	48 89 c7             	mov    rdi,rax
    827d:	e8 3e a2 ff ff       	call   24c0 <puts@plt>
    8282:	eb 01                	jmp    8285 <http_disect+0x9c>
    8284:	90                   	nop
    8285:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8289:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8290:	00 00 
    8292:	74 05                	je     8299 <http_disect+0xb0>
    8294:	e8 87 a4 ff ff       	call   2720 <__stack_chk_fail@plt>
    8299:	c9                   	leave  
    829a:	c3                   	ret    

000000000000829b <dns_disect>:
    829b:	f3 0f 1e fa          	endbr64 
    829f:	55                   	push   rbp
    82a0:	48 89 e5             	mov    rbp,rsp
    82a3:	48 83 ec 30          	sub    rsp,0x30
    82a7:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    82ab:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    82af:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    82b3:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    82b7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    82bb:	48 83 c0 0c          	add    rax,0xc
    82bf:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    82c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    82c7:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    82cb:	66 85 c0             	test   ax,ax
    82ce:	75 6d                	jne    833d <dns_disect+0xa2>
    82d0:	bf 00 04 00 00       	mov    edi,0x400
    82d5:	e8 66 a2 ff ff       	call   2540 <malloc@plt>
    82da:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    82de:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    82e2:	ba 08 00 00 00       	mov    edx,0x8
    82e7:	be 00 00 00 00       	mov    esi,0x0
    82ec:	48 89 c7             	mov    rdi,rax
    82ef:	e8 8c a1 ff ff       	call   2480 <memset@plt>
    82f4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    82f8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    82fc:	48 89 d6             	mov    rsi,rdx
    82ff:	48 89 c7             	mov    rdi,rax
    8302:	e8 39 00 00 00       	call   8340 <get_dns_name>
    8307:	0f b6 05 56 1c 10 00 	movzx  eax,BYTE PTR [rip+0x101c56]        # 109f64 <packet_print>
    830e:	84 c0                	test   al,al
    8310:	74 18                	je     832a <dns_disect+0x8f>
    8312:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8316:	48 89 c6             	mov    rsi,rax
    8319:	48 8d 3d 05 55 00 00 	lea    rdi,[rip+0x5505]        # d825 <_IO_stdin_used+0x1825>
    8320:	b8 00 00 00 00       	mov    eax,0x0
    8325:	e8 46 a1 ff ff       	call   2470 <printf@plt>
    832a:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    832f:	74 0c                	je     833d <dns_disect+0xa2>
    8331:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8335:	48 89 c7             	mov    rdi,rax
    8338:	e8 93 a2 ff ff       	call   25d0 <free@plt>
    833d:	90                   	nop
    833e:	c9                   	leave  
    833f:	c3                   	ret    

0000000000008340 <get_dns_name>:
    8340:	f3 0f 1e fa          	endbr64 
    8344:	55                   	push   rbp
    8345:	48 89 e5             	mov    rbp,rsp
    8348:	53                   	push   rbx
    8349:	48 83 ec 28          	sub    rsp,0x28
    834d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8351:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8355:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    835c:	eb 57                	jmp    83b5 <get_dns_name+0x75>
    835e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8361:	48 63 d0             	movsxd rdx,eax
    8364:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8368:	48 01 d0             	add    rax,rdx
    836b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    836e:	3c 20                	cmp    al,0x20
    8370:	7e 24                	jle    8396 <get_dns_name+0x56>
    8372:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8375:	48 63 d0             	movsxd rdx,eax
    8378:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    837c:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    8380:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8384:	ba 01 00 00 00       	mov    edx,0x1
    8389:	48 89 ce             	mov    rsi,rcx
    838c:	48 89 c7             	mov    rdi,rax
    838f:	e8 1c a1 ff ff       	call   24b0 <strncat@plt>
    8394:	eb 1b                	jmp    83b1 <get_dns_name+0x71>
    8396:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    839a:	48 89 c7             	mov    rdi,rax
    839d:	e8 3e a2 ff ff       	call   25e0 <strlen@plt>
    83a2:	48 89 c2             	mov    rdx,rax
    83a5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    83a9:	48 01 d0             	add    rax,rdx
    83ac:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    83b1:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    83b5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    83b8:	48 63 d8             	movsxd rbx,eax
    83bb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    83bf:	48 89 c7             	mov    rdi,rax
    83c2:	e8 19 a2 ff ff       	call   25e0 <strlen@plt>
    83c7:	48 39 c3             	cmp    rbx,rax
    83ca:	72 92                	jb     835e <get_dns_name+0x1e>
    83cc:	90                   	nop
    83cd:	90                   	nop
    83ce:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    83d2:	c9                   	leave  
    83d3:	c3                   	ret    

00000000000083d4 <ftp_disect>:
    83d4:	f3 0f 1e fa          	endbr64 
    83d8:	55                   	push   rbp
    83d9:	48 89 e5             	mov    rbp,rsp
    83dc:	48 83 ec 20          	sub    rsp,0x20
    83e0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    83e4:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    83e8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    83ec:	48 8d 35 3d 54 00 00 	lea    rsi,[rip+0x543d]        # d830 <_IO_stdin_used+0x1830>
    83f3:	48 89 c7             	mov    rdi,rax
    83f6:	e8 55 a2 ff ff       	call   2650 <strstr@plt>
    83fb:	48 85 c0             	test   rax,rax
    83fe:	75 1c                	jne    841c <ftp_disect+0x48>
    8400:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8404:	48 8d 35 35 54 00 00 	lea    rsi,[rip+0x5435]        # d840 <_IO_stdin_used+0x1840>
    840b:	48 89 c7             	mov    rdi,rax
    840e:	e8 3d a2 ff ff       	call   2650 <strstr@plt>
    8413:	48 85 c0             	test   rax,rax
    8416:	0f 84 8a 00 00 00    	je     84a6 <ftp_disect+0xd2>
    841c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8420:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8424:	48 89 c7             	mov    rdi,rax
    8427:	e8 f7 f3 ff ff       	call   7823 <member_exists>
    842c:	48 63 d0             	movsxd rdx,eax
    842f:	48 89 d0             	mov    rax,rdx
    8432:	48 c1 e0 02          	shl    rax,0x2
    8436:	48 01 d0             	add    rax,rdx
    8439:	48 c1 e0 03          	shl    rax,0x3
    843d:	48 01 d0             	add    rax,rdx
    8440:	48 c1 e0 04          	shl    rax,0x4
    8444:	48 8d 15 d5 b0 0e 00 	lea    rdx,[rip+0xeb0d5]        # f3520 <watchlist>
    844b:	48 01 d0             	add    rax,rdx
    844e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8452:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8456:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    845c:	8d 50 01             	lea    edx,[rax+0x1]
    845f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8463:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    8469:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    846d:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    8473:	83 f8 04             	cmp    eax,0x4
    8476:	7e 2e                	jle    84a6 <ftp_disect+0xd2>
    8478:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    847c:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    8482:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8486:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    848a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    848e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8492:	48 89 c6             	mov    rsi,rax
    8495:	48 8d 3d b4 53 00 00 	lea    rdi,[rip+0x53b4]        # d850 <_IO_stdin_used+0x1850>
    849c:	b8 00 00 00 00       	mov    eax,0x0
    84a1:	e8 ca 9f ff ff       	call   2470 <printf@plt>
    84a6:	90                   	nop
    84a7:	c9                   	leave  
    84a8:	c3                   	ret    

00000000000084a9 <livedebug>:
    84a9:	f3 0f 1e fa          	endbr64 
    84ad:	55                   	push   rbp
    84ae:	48 89 e5             	mov    rbp,rsp
    84b1:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    84b8:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    84bf:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    84c6:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    84cd:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    84d4:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    84db:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    84e2:	84 c0                	test   al,al
    84e4:	74 20                	je     8506 <livedebug+0x5d>
    84e6:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    84ea:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    84ee:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    84f2:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    84f6:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    84fa:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    84fe:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    8502:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    8506:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    850d:	00 00 
    850f:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    8516:	31 c0                	xor    eax,eax
    8518:	0f b6 05 01 1a 10 00 	movzx  eax,BYTE PTR [rip+0x101a01]        # 109f20 <debug_mode>
    851f:	84 c0                	test   al,al
    8521:	74 4b                	je     856e <livedebug+0xc5>
    8523:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    852a:	00 00 00 
    852d:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    8534:	00 00 00 
    8537:	48 8d 45 10          	lea    rax,[rbp+0x10]
    853b:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8542:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8549:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8550:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    8557:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    855e:	48 89 d6             	mov    rsi,rdx
    8561:	48 89 c7             	mov    rdi,rax
    8564:	b8 00 00 00 00       	mov    eax,0x0
    8569:	e8 02 9f ff ff       	call   2470 <printf@plt>
    856e:	90                   	nop
    856f:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    8576:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    857d:	00 00 
    857f:	74 05                	je     8586 <livedebug+0xdd>
    8581:	e8 9a a1 ff ff       	call   2720 <__stack_chk_fail@plt>
    8586:	c9                   	leave  
    8587:	c3                   	ret    

0000000000008588 <forward_packet>:
    8588:	f3 0f 1e fa          	endbr64 
    858c:	55                   	push   rbp
    858d:	48 89 e5             	mov    rbp,rsp
    8590:	48 83 ec 20          	sub    rsp,0x20
    8594:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8598:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    859c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    85a0:	48 8d 35 e9 19 10 00 	lea    rsi,[rip+0x1019e9]        # 109f90 <local_ip>
    85a7:	48 89 c7             	mov    rdi,rax
    85aa:	e8 81 a1 ff ff       	call   2730 <strcmp@plt>
    85af:	85 c0                	test   eax,eax
    85b1:	74 4f                	je     8602 <forward_packet+0x7a>
    85b3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    85b7:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    85bb:	48 8d 35 ce 19 10 00 	lea    rsi,[rip+0x1019ce]        # 109f90 <local_ip>
    85c2:	48 89 c7             	mov    rdi,rax
    85c5:	e8 66 a1 ff ff       	call   2730 <strcmp@plt>
    85ca:	85 c0                	test   eax,eax
    85cc:	74 34                	je     8602 <forward_packet+0x7a>
    85ce:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    85d2:	48 8b 00             	mov    rax,QWORD PTR [rax]
    85d5:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    85d9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    85dd:	48 89 d6             	mov    rsi,rdx
    85e0:	48 89 c7             	mov    rdi,rax
    85e3:	e8 68 a1 ff ff       	call   2750 <strcpy@plt>
    85e8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    85ec:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    85ef:	83 e8 0e             	sub    eax,0xe
    85f2:	89 c2                	mov    edx,eax
    85f4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    85f8:	89 d6                	mov    esi,edx
    85fa:	48 89 c7             	mov    rdi,rax
    85fd:	e8 00 cd ff ff       	call   5302 <ascii_hexdump>
    8602:	90                   	nop
    8603:	c9                   	leave  
    8604:	c3                   	ret    

0000000000008605 <conversation_exists>:
    8605:	f3 0f 1e fa          	endbr64 
    8609:	55                   	push   rbp
    860a:	48 89 e5             	mov    rbp,rsp
    860d:	48 83 ec 20          	sub    rsp,0x20
    8611:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8615:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    861c:	e9 ff 00 00 00       	jmp    8720 <conversation_exists+0x11b>
    8621:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8624:	48 98                	cdqe   
    8626:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    862d:	48 8d 15 ac 19 10 00 	lea    rdx,[rip+0x1019ac]        # 109fe0 <spi_table>
    8634:	48 01 d0             	add    rax,rdx
    8637:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    863b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    863f:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    8646:	84 c0                	test   al,al
    8648:	0f 84 ce 00 00 00    	je     871c <conversation_exists+0x117>
    864e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8652:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8655:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8659:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    865c:	39 c2                	cmp    edx,eax
    865e:	75 58                	jne    86b8 <conversation_exists+0xb3>
    8660:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8664:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8667:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    866b:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    866e:	39 c2                	cmp    edx,eax
    8670:	75 46                	jne    86b8 <conversation_exists+0xb3>
    8672:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8676:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    867a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    867e:	48 89 d6             	mov    rsi,rdx
    8681:	48 89 c7             	mov    rdi,rax
    8684:	e8 a7 a0 ff ff       	call   2730 <strcmp@plt>
    8689:	85 c0                	test   eax,eax
    868b:	0f 85 8a 00 00 00    	jne    871b <conversation_exists+0x116>
    8691:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8695:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8699:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    869d:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    86a1:	48 89 d6             	mov    rsi,rdx
    86a4:	48 89 c7             	mov    rdi,rax
    86a7:	e8 84 a0 ff ff       	call   2730 <strcmp@plt>
    86ac:	85 c0                	test   eax,eax
    86ae:	75 6b                	jne    871b <conversation_exists+0x116>
    86b0:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    86b3:	e9 81 00 00 00       	jmp    8739 <conversation_exists+0x134>
    86b8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86bc:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    86bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86c3:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    86c6:	39 c2                	cmp    edx,eax
    86c8:	75 52                	jne    871c <conversation_exists+0x117>
    86ca:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86ce:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    86d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86d5:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    86d8:	39 c2                	cmp    edx,eax
    86da:	75 40                	jne    871c <conversation_exists+0x117>
    86dc:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    86e0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86e4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    86e8:	48 89 d6             	mov    rsi,rdx
    86eb:	48 89 c7             	mov    rdi,rax
    86ee:	e8 3d a0 ff ff       	call   2730 <strcmp@plt>
    86f3:	85 c0                	test   eax,eax
    86f5:	75 25                	jne    871c <conversation_exists+0x117>
    86f7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86fb:	48 8d 50 29          	lea    rdx,[rax+0x29]
    86ff:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8703:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8707:	48 89 d6             	mov    rsi,rdx
    870a:	48 89 c7             	mov    rdi,rax
    870d:	e8 1e a0 ff ff       	call   2730 <strcmp@plt>
    8712:	85 c0                	test   eax,eax
    8714:	75 06                	jne    871c <conversation_exists+0x117>
    8716:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8719:	eb 1e                	jmp    8739 <conversation_exists+0x134>
    871b:	90                   	nop
    871c:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8720:	8b 05 1a 89 00 00    	mov    eax,DWORD PTR [rip+0x891a]        # 11040 <total_conversations>
    8726:	8d 50 01             	lea    edx,[rax+0x1]
    8729:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    872c:	39 c2                	cmp    edx,eax
    872e:	0f 87 ed fe ff ff    	ja     8621 <conversation_exists+0x1c>
    8734:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8739:	c9                   	leave  
    873a:	c3                   	ret    

000000000000873b <get_new_spi_location>:
    873b:	f3 0f 1e fa          	endbr64 
    873f:	55                   	push   rbp
    8740:	48 89 e5             	mov    rbp,rsp
    8743:	8b 05 f7 88 00 00    	mov    eax,DWORD PTR [rip+0x88f7]        # 11040 <total_conversations>
    8749:	83 f8 ff             	cmp    eax,0xffffffff
    874c:	75 17                	jne    8765 <get_new_spi_location+0x2a>
    874e:	8b 05 ec 88 00 00    	mov    eax,DWORD PTR [rip+0x88ec]        # 11040 <total_conversations>
    8754:	83 c0 01             	add    eax,0x1
    8757:	89 05 e3 88 00 00    	mov    DWORD PTR [rip+0x88e3],eax        # 11040 <total_conversations>
    875d:	8b 05 dd 88 00 00    	mov    eax,DWORD PTR [rip+0x88dd]        # 11040 <total_conversations>
    8763:	eb 52                	jmp    87b7 <get_new_spi_location+0x7c>
    8765:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    876c:	eb 27                	jmp    8795 <get_new_spi_location+0x5a>
    876e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8771:	48 98                	cdqe   
    8773:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    877a:	48 8d 15 0f 19 10 00 	lea    rdx,[rip+0x10190f]        # 10a090 <spi_table+0xb0>
    8781:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    8785:	83 f0 01             	xor    eax,0x1
    8788:	84 c0                	test   al,al
    878a:	74 05                	je     8791 <get_new_spi_location+0x56>
    878c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    878f:	eb 26                	jmp    87b7 <get_new_spi_location+0x7c>
    8791:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    8795:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    8798:	8b 05 a2 88 00 00    	mov    eax,DWORD PTR [rip+0x88a2]        # 11040 <total_conversations>
    879e:	39 c2                	cmp    edx,eax
    87a0:	72 cc                	jb     876e <get_new_spi_location+0x33>
    87a2:	8b 05 98 88 00 00    	mov    eax,DWORD PTR [rip+0x8898]        # 11040 <total_conversations>
    87a8:	83 c0 01             	add    eax,0x1
    87ab:	89 05 8f 88 00 00    	mov    DWORD PTR [rip+0x888f],eax        # 11040 <total_conversations>
    87b1:	8b 05 89 88 00 00    	mov    eax,DWORD PTR [rip+0x8889]        # 11040 <total_conversations>
    87b7:	5d                   	pop    rbp
    87b8:	c3                   	ret    

00000000000087b9 <add_new_conversation>:
    87b9:	f3 0f 1e fa          	endbr64 
    87bd:	55                   	push   rbp
    87be:	48 89 e5             	mov    rbp,rsp
    87c1:	48 83 ec 20          	sub    rsp,0x20
    87c5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    87c9:	0f b6 05 f2 17 10 00 	movzx  eax,BYTE PTR [rip+0x1017f2]        # 109fc2 <use_spi>
    87d0:	84 c0                	test   al,al
    87d2:	0f 84 08 02 00 00    	je     89e0 <add_new_conversation+0x227>
    87d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    87dc:	48 89 c7             	mov    rdi,rax
    87df:	e8 21 fe ff ff       	call   8605 <conversation_exists>
    87e4:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    87e7:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    87eb:	0f 84 82 00 00 00    	je     8873 <add_new_conversation+0xba>
    87f1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    87f4:	48 98                	cdqe   
    87f6:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    87fd:	48 8d 15 dc 17 10 00 	lea    rdx,[rip+0x1017dc]        # 109fe0 <spi_table>
    8804:	48 01 d0             	add    rax,rdx
    8807:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    880b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    880f:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    8815:	8d 50 01             	lea    edx,[rax+0x1]
    8818:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    881c:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    8822:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8826:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8829:	8d 50 01             	lea    edx,[rax+0x1]
    882c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8830:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8833:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8837:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    883a:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    883e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8842:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8845:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8849:	48 8d 70 29          	lea    rsi,[rax+0x29]
    884d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8850:	41 89 f9             	mov    r9d,edi
    8853:	49 89 c8             	mov    r8,rcx
    8856:	89 d1                	mov    ecx,edx
    8858:	48 89 f2             	mov    rdx,rsi
    885b:	89 c6                	mov    esi,eax
    885d:	48 8d 3d 34 50 00 00 	lea    rdi,[rip+0x5034]        # d898 <_IO_stdin_used+0x1898>
    8864:	b8 00 00 00 00       	mov    eax,0x0
    8869:	e8 02 9c ff ff       	call   2470 <printf@plt>
    886e:	e9 6d 01 00 00       	jmp    89e0 <add_new_conversation+0x227>
    8873:	b8 00 00 00 00       	mov    eax,0x0
    8878:	e8 be fe ff ff       	call   873b <get_new_spi_location>
    887d:	48 98                	cdqe   
    887f:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8886:	48 8d 15 53 17 10 00 	lea    rdx,[rip+0x101753]        # 109fe0 <spi_table>
    888d:	48 01 d0             	add    rax,rdx
    8890:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8894:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8898:	ba 08 00 00 00       	mov    edx,0x8
    889d:	be 00 00 00 00       	mov    esi,0x0
    88a2:	48 89 c7             	mov    rdi,rax
    88a5:	e8 d6 9b ff ff       	call   2480 <memset@plt>
    88aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88ae:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    88b5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88b9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    88bd:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    88c1:	48 83 c2 29          	add    rdx,0x29
    88c5:	48 89 c6             	mov    rsi,rax
    88c8:	48 89 d7             	mov    rdi,rdx
    88cb:	e8 80 9e ff ff       	call   2750 <strcpy@plt>
    88d0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88d4:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    88d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88dc:	48 89 d6             	mov    rsi,rdx
    88df:	48 89 c7             	mov    rdi,rax
    88e2:	e8 69 9e ff ff       	call   2750 <strcpy@plt>
    88e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88eb:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    88ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88f2:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    88f5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88f9:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    88fc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8900:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    8903:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8907:	c7 40 78 00 00 00 00 	mov    DWORD PTR [rax+0x78],0x0
    890e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8912:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    8916:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    891a:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    891e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8922:	48 8d 50 60          	lea    rdx,[rax+0x60]
    8926:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    892a:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    892e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8932:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8936:	48 89 d6             	mov    rsi,rdx
    8939:	48 89 c7             	mov    rdi,rax
    893c:	e8 73 04 00 00       	call   8db4 <increment_stats>
    8941:	bf 00 00 00 00       	mov    edi,0x0
    8946:	e8 05 9f ff ff       	call   2850 <time@plt>
    894b:	48 89 c2             	mov    rdx,rax
    894e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8952:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    8959:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    895d:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    8964:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8968:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    896b:	8d 50 01             	lea    edx,[rax+0x1]
    896e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8972:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8975:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8979:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    897c:	89 c2                	mov    edx,eax
    897e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8982:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    8988:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    898c:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    898f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8993:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8997:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    899a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    899e:	48 8d 70 29          	lea    rsi,[rax+0x29]
    89a2:	8b 05 98 86 00 00    	mov    eax,DWORD PTR [rip+0x8698]        # 11040 <total_conversations>
    89a8:	41 89 f9             	mov    r9d,edi
    89ab:	49 89 c8             	mov    r8,rcx
    89ae:	89 d1                	mov    ecx,edx
    89b0:	48 89 f2             	mov    rdx,rsi
    89b3:	89 c6                	mov    esi,eax
    89b5:	48 8d 3d 04 4f 00 00 	lea    rdi,[rip+0x4f04]        # d8c0 <_IO_stdin_used+0x18c0>
    89bc:	b8 00 00 00 00       	mov    eax,0x0
    89c1:	e8 aa 9a ff ff       	call   2470 <printf@plt>
    89c6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89ca:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    89cd:	83 f8 7e             	cmp    eax,0x7e
    89d0:	75 0e                	jne    89e0 <add_new_conversation+0x227>
    89d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89d6:	c7 80 88 00 00 00 f3 	mov    DWORD PTR [rax+0x88],0xf3
    89dd:	00 00 00 
    89e0:	90                   	nop
    89e1:	c9                   	leave  
    89e2:	c3                   	ret    

00000000000089e3 <spi_ud_thw>:
    89e3:	f3 0f 1e fa          	endbr64 
    89e7:	55                   	push   rbp
    89e8:	48 89 e5             	mov    rbp,rsp
    89eb:	48 83 ec 20          	sub    rsp,0x20
    89ef:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    89f3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89f7:	48 89 c7             	mov    rdi,rax
    89fa:	e8 06 fc ff ff       	call   8605 <conversation_exists>
    89ff:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8a02:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8a06:	0f 84 97 00 00 00    	je     8aa3 <spi_ud_thw+0xc0>
    8a0c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8a0f:	48 98                	cdqe   
    8a11:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8a18:	48 8d 15 c1 15 10 00 	lea    rdx,[rip+0x1015c1]        # 109fe0 <spi_table>
    8a1f:	48 01 d0             	add    rax,rdx
    8a22:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8a26:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a2a:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8a2d:	8d 50 01             	lea    edx,[rax+0x1]
    8a30:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a34:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8a37:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8a3b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a3f:	48 89 d6             	mov    rsi,rdx
    8a42:	48 89 c7             	mov    rdi,rax
    8a45:	e8 6a 03 00 00       	call   8db4 <increment_stats>
    8a4a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a4e:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8a51:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a55:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8a59:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a5d:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8a60:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a64:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8a68:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8a6b:	41 89 f9             	mov    r9d,edi
    8a6e:	49 89 f0             	mov    r8,rsi
    8a71:	89 c6                	mov    esi,eax
    8a73:	48 8d 3d 6e 4e 00 00 	lea    rdi,[rip+0x4e6e]        # d8e8 <_IO_stdin_used+0x18e8>
    8a7a:	b8 00 00 00 00       	mov    eax,0x0
    8a7f:	e8 ec 99 ff ff       	call   2470 <printf@plt>
    8a84:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a88:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8a8e:	3d f3 00 00 00       	cmp    eax,0xf3
    8a93:	75 0e                	jne    8aa3 <spi_ud_thw+0xc0>
    8a95:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a99:	c7 80 88 00 00 00 f4 	mov    DWORD PTR [rax+0x88],0xf4
    8aa0:	00 00 00 
    8aa3:	90                   	nop
    8aa4:	c9                   	leave  
    8aa5:	c3                   	ret    

0000000000008aa6 <update_table>:
    8aa6:	f3 0f 1e fa          	endbr64 
    8aaa:	55                   	push   rbp
    8aab:	48 89 e5             	mov    rbp,rsp
    8aae:	48 83 ec 30          	sub    rsp,0x30
    8ab2:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8ab6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8abd:	00 00 
    8abf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8ac3:	31 c0                	xor    eax,eax
    8ac5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ac9:	48 89 c7             	mov    rdi,rax
    8acc:	e8 34 fb ff ff       	call   8605 <conversation_exists>
    8ad1:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8ad4:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8ad8:	0f 84 4c 01 00 00    	je     8c2a <update_table+0x184>
    8ade:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8ae1:	48 98                	cdqe   
    8ae3:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8aea:	48 8d 15 ef 14 10 00 	lea    rdx,[rip+0x1014ef]        # 109fe0 <spi_table>
    8af1:	48 01 d0             	add    rax,rdx
    8af4:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8af8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8afc:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8aff:	8d 50 01             	lea    edx,[rax+0x1]
    8b02:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b06:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8b09:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8b0d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b11:	48 89 d6             	mov    rsi,rdx
    8b14:	48 89 c7             	mov    rdi,rax
    8b17:	e8 98 02 00 00       	call   8db4 <increment_stats>
    8b1c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b20:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8b26:	3d f4 00 00 00       	cmp    eax,0xf4
    8b2b:	75 4d                	jne    8b7a <update_table+0xd4>
    8b2d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b31:	c7 80 88 00 00 00 f1 	mov    DWORD PTR [rax+0x88],0xf1
    8b38:	00 00 00 
    8b3b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b3f:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8b42:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b46:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8b4a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b4e:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8b51:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b55:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8b59:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8b5c:	41 89 f9             	mov    r9d,edi
    8b5f:	49 89 f0             	mov    r8,rsi
    8b62:	89 c6                	mov    esi,eax
    8b64:	48 8d 3d a5 4d 00 00 	lea    rdi,[rip+0x4da5]        # d910 <_IO_stdin_used+0x1910>
    8b6b:	b8 00 00 00 00       	mov    eax,0x0
    8b70:	e8 fb 98 ff ff       	call   2470 <printf@plt>
    8b75:	e9 b0 00 00 00       	jmp    8c2a <update_table+0x184>
    8b7a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8b7e:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8b84:	3d f6 00 00 00       	cmp    eax,0xf6
    8b89:	0f 85 9b 00 00 00    	jne    8c2a <update_table+0x184>
    8b8f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b93:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8b96:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8b9a:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8b9e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ba2:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8ba5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ba9:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8bad:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8bb0:	41 89 f9             	mov    r9d,edi
    8bb3:	49 89 f0             	mov    r8,rsi
    8bb6:	89 c6                	mov    esi,eax
    8bb8:	48 8d 3d 81 4d 00 00 	lea    rdi,[rip+0x4d81]        # d940 <_IO_stdin_used+0x1940>
    8bbf:	b8 00 00 00 00       	mov    eax,0x0
    8bc4:	e8 a7 98 ff ff       	call   2470 <printf@plt>
    8bc9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8bcd:	c7 80 88 00 00 00 fa 	mov    DWORD PTR [rax+0x88],0xfa
    8bd4:	00 00 00 
    8bd7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8bdb:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    8be2:	bf 00 00 00 00       	mov    edi,0x0
    8be7:	e8 64 9c ff ff       	call   2850 <time@plt>
    8bec:	48 89 c2             	mov    rdx,rax
    8bef:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8bf3:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    8bfa:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8bfe:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    8c02:	48 89 d1             	mov    rcx,rdx
    8c05:	48 8d 15 cf f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3cf]        # 7fdb <update_spi_db>
    8c0c:	be 00 00 00 00       	mov    esi,0x0
    8c11:	48 89 c7             	mov    rdi,rax
    8c14:	e8 97 99 ff ff       	call   25b0 <pthread_create@plt>
    8c19:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c1d:	be 00 00 00 00       	mov    esi,0x0
    8c22:	48 89 c7             	mov    rdi,rax
    8c25:	e8 36 98 ff ff       	call   2460 <pthread_join@plt>
    8c2a:	90                   	nop
    8c2b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c2f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8c36:	00 00 
    8c38:	74 05                	je     8c3f <update_table+0x199>
    8c3a:	e8 e1 9a ff ff       	call   2720 <__stack_chk_fail@plt>
    8c3f:	c9                   	leave  
    8c40:	c3                   	ret    

0000000000008c41 <polite_end>:
    8c41:	f3 0f 1e fa          	endbr64 
    8c45:	55                   	push   rbp
    8c46:	48 89 e5             	mov    rbp,rsp
    8c49:	48 83 ec 20          	sub    rsp,0x20
    8c4d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8c51:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c55:	48 89 c7             	mov    rdi,rax
    8c58:	e8 a8 f9 ff ff       	call   8605 <conversation_exists>
    8c5d:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8c60:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8c64:	0f 84 e1 00 00 00    	je     8d4b <polite_end+0x10a>
    8c6a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8c6d:	48 98                	cdqe   
    8c6f:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8c76:	48 8d 15 63 13 10 00 	lea    rdx,[rip+0x101363]        # 109fe0 <spi_table>
    8c7d:	48 01 d0             	add    rax,rdx
    8c80:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8c84:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c88:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    8c8b:	8d 50 01             	lea    edx,[rax+0x1]
    8c8e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c92:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    8c95:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c99:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    8c9f:	3d f5 00 00 00       	cmp    eax,0xf5
    8ca4:	75 4a                	jne    8cf0 <polite_end+0xaf>
    8ca6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8caa:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8cad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cb1:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8cb5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cb9:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8cbc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cc0:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8cc4:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8cc7:	41 89 f9             	mov    r9d,edi
    8cca:	49 89 f0             	mov    r8,rsi
    8ccd:	89 c6                	mov    esi,eax
    8ccf:	48 8d 3d a2 4c 00 00 	lea    rdi,[rip+0x4ca2]        # d978 <_IO_stdin_used+0x1978>
    8cd6:	b8 00 00 00 00       	mov    eax,0x0
    8cdb:	e8 90 97 ff ff       	call   2470 <printf@plt>
    8ce0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ce4:	c7 80 88 00 00 00 f6 	mov    DWORD PTR [rax+0x88],0xf6
    8ceb:	00 00 00 
    8cee:	eb 48                	jmp    8d38 <polite_end+0xf7>
    8cf0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cf4:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8cf7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cfb:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8cff:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d03:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8d06:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d0a:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8d0e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8d11:	41 89 f9             	mov    r9d,edi
    8d14:	49 89 f0             	mov    r8,rsi
    8d17:	89 c6                	mov    esi,eax
    8d19:	48 8d 3d 90 4c 00 00 	lea    rdi,[rip+0x4c90]        # d9b0 <_IO_stdin_used+0x19b0>
    8d20:	b8 00 00 00 00       	mov    eax,0x0
    8d25:	e8 46 97 ff ff       	call   2470 <printf@plt>
    8d2a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d2e:	c7 80 88 00 00 00 f5 	mov    DWORD PTR [rax+0x88],0xf5
    8d35:	00 00 00 
    8d38:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d3c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d40:	48 89 d6             	mov    rsi,rdx
    8d43:	48 89 c7             	mov    rdi,rax
    8d46:	e8 69 00 00 00       	call   8db4 <increment_stats>
    8d4b:	90                   	nop
    8d4c:	c9                   	leave  
    8d4d:	c3                   	ret    

0000000000008d4e <handle_data_pkt>:
    8d4e:	f3 0f 1e fa          	endbr64 
    8d52:	55                   	push   rbp
    8d53:	48 89 e5             	mov    rbp,rsp
    8d56:	48 83 ec 20          	sub    rsp,0x20
    8d5a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8d5e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d62:	48 89 c7             	mov    rdi,rax
    8d65:	e8 9b f8 ff ff       	call   8605 <conversation_exists>
    8d6a:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8d6d:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8d71:	74 3e                	je     8db1 <handle_data_pkt+0x63>
    8d73:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8d76:	48 98                	cdqe   
    8d78:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8d7f:	48 8d 15 5a 12 10 00 	lea    rdx,[rip+0x10125a]        # 109fe0 <spi_table>
    8d86:	48 01 d0             	add    rax,rdx
    8d89:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8d8d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d91:	8b 40 78             	mov    eax,DWORD PTR [rax+0x78]
    8d94:	8d 50 01             	lea    edx,[rax+0x1]
    8d97:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d9b:	89 50 78             	mov    DWORD PTR [rax+0x78],edx
    8d9e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8da2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8da6:	48 89 d6             	mov    rsi,rdx
    8da9:	48 89 c7             	mov    rdi,rax
    8dac:	e8 03 00 00 00       	call   8db4 <increment_stats>
    8db1:	90                   	nop
    8db2:	c9                   	leave  
    8db3:	c3                   	ret    

0000000000008db4 <increment_stats>:
    8db4:	f3 0f 1e fa          	endbr64 
    8db8:	55                   	push   rbp
    8db9:	48 89 e5             	mov    rbp,rsp
    8dbc:	48 83 ec 10          	sub    rsp,0x10
    8dc0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8dc4:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    8dc8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8dcc:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8dd0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dd4:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8dd8:	48 89 d6             	mov    rsi,rdx
    8ddb:	48 89 c7             	mov    rdi,rax
    8dde:	e8 4d 99 ff ff       	call   2730 <strcmp@plt>
    8de3:	85 c0                	test   eax,eax
    8de5:	75 13                	jne    8dfa <increment_stats+0x46>
    8de7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8deb:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    8dee:	8d 50 01             	lea    edx,[rax+0x1]
    8df1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8df5:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    8df8:	eb 2c                	jmp    8e26 <increment_stats+0x72>
    8dfa:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8dfe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e02:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8e06:	48 89 d6             	mov    rsi,rdx
    8e09:	48 89 c7             	mov    rdi,rax
    8e0c:	e8 1f 99 ff ff       	call   2730 <strcmp@plt>
    8e11:	85 c0                	test   eax,eax
    8e13:	75 11                	jne    8e26 <increment_stats+0x72>
    8e15:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e19:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    8e1c:	8d 50 01             	lea    edx,[rax+0x1]
    8e1f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e23:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    8e26:	90                   	nop
    8e27:	c9                   	leave  
    8e28:	c3                   	ret    

0000000000008e29 <lprintf>:
    8e29:	f3 0f 1e fa          	endbr64 
    8e2d:	55                   	push   rbp
    8e2e:	48 89 e5             	mov    rbp,rsp
    8e31:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    8e38:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    8e3f:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    8e46:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    8e4d:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    8e54:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    8e5b:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    8e62:	84 c0                	test   al,al
    8e64:	74 20                	je     8e86 <lprintf+0x5d>
    8e66:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    8e6a:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    8e6e:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    8e72:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    8e76:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    8e7a:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    8e7e:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    8e82:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    8e86:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8e8d:	00 00 
    8e8f:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    8e96:	31 c0                	xor    eax,eax
    8e98:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    8e9f:	00 00 00 
    8ea2:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    8ea9:	00 00 00 
    8eac:	48 8d 45 10          	lea    rax,[rbp+0x10]
    8eb0:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8eb7:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8ebe:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8ec5:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    8ecc:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    8ed3:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    8eda:	48 89 ce             	mov    rsi,rcx
    8edd:	48 89 c7             	mov    rdi,rax
    8ee0:	b8 00 00 00 00       	mov    eax,0x0
    8ee5:	e8 16 99 ff ff       	call   2800 <fprintf@plt>
    8eea:	90                   	nop
    8eeb:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    8ef2:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8ef9:	00 00 
    8efb:	74 05                	je     8f02 <lprintf+0xd9>
    8efd:	e8 1e 98 ff ff       	call   2720 <__stack_chk_fail@plt>
    8f02:	c9                   	leave  
    8f03:	c3                   	ret    

0000000000008f04 <lfprintf>:
    8f04:	f3 0f 1e fa          	endbr64 
    8f08:	55                   	push   rbp
    8f09:	48 89 e5             	mov    rbp,rsp
    8f0c:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    8f13:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    8f1a:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    8f21:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    8f28:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    8f2f:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    8f36:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    8f3d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8f44:	00 00 
    8f46:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f4a:	31 c0                	xor    eax,eax
    8f4c:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    8f53:	48 8d 35 8e 4a 00 00 	lea    rsi,[rip+0x4a8e]        # d9e8 <_IO_stdin_used+0x19e8>
    8f5a:	48 89 c7             	mov    rdi,rax
    8f5d:	e8 ee 95 ff ff       	call   2550 <fopen@plt>
    8f62:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    8f69:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    8f70:	00 
    8f71:	75 20                	jne    8f93 <lfprintf+0x8f>
    8f73:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    8f7a:	48 89 c6             	mov    rsi,rax
    8f7d:	48 8d 3d 6c 4a 00 00 	lea    rdi,[rip+0x4a6c]        # d9f0 <_IO_stdin_used+0x19f0>
    8f84:	b8 00 00 00 00       	mov    eax,0x0
    8f89:	e8 e2 94 ff ff       	call   2470 <printf@plt>
    8f8e:	e9 cd 00 00 00       	jmp    9060 <lfprintf+0x15c>
    8f93:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    8f9a:	48 89 c7             	mov    rdi,rax
    8f9d:	e8 51 a4 ff ff       	call   33f3 <cb_get_formatted_time>
    8fa2:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    8fa9:	75 3f                	jne    8fea <lfprintf+0xe6>
    8fab:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    8fb2:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    8fb9:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    8fc0:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    8fc7:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    8fce:	49 89 f9             	mov    r9,rdi
    8fd1:	49 89 f0             	mov    r8,rsi
    8fd4:	48 8d 35 43 4a 00 00 	lea    rsi,[rip+0x4a43]        # da1e <_IO_stdin_used+0x1a1e>
    8fdb:	48 89 c7             	mov    rdi,rax
    8fde:	b8 00 00 00 00       	mov    eax,0x0
    8fe3:	e8 18 96 ff ff       	call   2600 <sprintf@plt>
    8fe8:	eb 4e                	jmp    9038 <lfprintf+0x134>
    8fea:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    8ff1:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    8ff8:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    8fff:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    9006:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    900d:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    9013:	56                   	push   rsi
    9014:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    901a:	45 89 c1             	mov    r9d,r8d
    901d:	49 89 f8             	mov    r8,rdi
    9020:	48 8d 35 07 4a 00 00 	lea    rsi,[rip+0x4a07]        # da2e <_IO_stdin_used+0x1a2e>
    9027:	48 89 c7             	mov    rdi,rax
    902a:	b8 00 00 00 00       	mov    eax,0x0
    902f:	e8 cc 95 ff ff       	call   2600 <sprintf@plt>
    9034:	48 83 c4 10          	add    rsp,0x10
    9038:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    903f:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9046:	48 89 d6             	mov    rsi,rdx
    9049:	48 89 c7             	mov    rdi,rax
    904c:	e8 1f 96 ff ff       	call   2670 <fputs@plt>
    9051:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    9058:	48 89 c7             	mov    rdi,rax
    905b:	e8 30 97 ff ff       	call   2790 <fclose@plt>
    9060:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9064:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    906b:	00 00 
    906d:	74 05                	je     9074 <lfprintf+0x170>
    906f:	e8 ac 96 ff ff       	call   2720 <__stack_chk_fail@plt>
    9074:	c9                   	leave  
    9075:	c3                   	ret    

0000000000009076 <saprintf>:
    9076:	f3 0f 1e fa          	endbr64 
    907a:	55                   	push   rbp
    907b:	48 89 e5             	mov    rbp,rsp
    907e:	48 83 ec 20          	sub    rsp,0x20
    9082:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9086:	48 8b 05 a3 7f 00 00 	mov    rax,QWORD PTR [rip+0x7fa3]        # 11030 <def_log_file>
    908d:	48 8d 35 54 49 00 00 	lea    rsi,[rip+0x4954]        # d9e8 <_IO_stdin_used+0x19e8>
    9094:	48 89 c7             	mov    rdi,rax
    9097:	e8 b4 94 ff ff       	call   2550 <fopen@plt>
    909c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    90a0:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    90a5:	75 1a                	jne    90c1 <saprintf+0x4b>
    90a7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90ab:	48 89 c6             	mov    rsi,rax
    90ae:	48 8d 3d 3b 49 00 00 	lea    rdi,[rip+0x493b]        # d9f0 <_IO_stdin_used+0x19f0>
    90b5:	b8 00 00 00 00       	mov    eax,0x0
    90ba:	e8 b1 93 ff ff       	call   2470 <printf@plt>
    90bf:	eb 1f                	jmp    90e0 <saprintf+0x6a>
    90c1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    90c5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90c9:	48 89 d6             	mov    rsi,rdx
    90cc:	48 89 c7             	mov    rdi,rax
    90cf:	e8 9c 95 ff ff       	call   2670 <fputs@plt>
    90d4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90d8:	48 89 c7             	mov    rdi,rax
    90db:	e8 b0 96 ff ff       	call   2790 <fclose@plt>
    90e0:	c9                   	leave  
    90e1:	c3                   	ret    

00000000000090e2 <substr>:
    90e2:	f3 0f 1e fa          	endbr64 
    90e6:	55                   	push   rbp
    90e7:	48 89 e5             	mov    rbp,rsp
    90ea:	48 83 ec 20          	sub    rsp,0x20
    90ee:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    90f2:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    90f5:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    90f8:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    90fb:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    90fe:	83 c0 02             	add    eax,0x2
    9101:	48 98                	cdqe   
    9103:	48 89 c7             	mov    rdi,rax
    9106:	e8 35 94 ff ff       	call   2540 <malloc@plt>
    910b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    910f:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9112:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9115:	eb 27                	jmp    913e <substr+0x5c>
    9117:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    911a:	48 63 d0             	movsxd rdx,eax
    911d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9121:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    9125:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9128:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    912b:	48 63 d0             	movsxd rdx,eax
    912e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9132:	48 01 c2             	add    rdx,rax
    9135:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    9138:	88 02                	mov    BYTE PTR [rdx],al
    913a:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    913e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9141:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    9144:	7e d1                	jle    9117 <substr+0x35>
    9146:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    9149:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    914c:	48 98                	cdqe   
    914e:	48 8d 50 01          	lea    rdx,[rax+0x1]
    9152:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9156:	48 01 d0             	add    rax,rdx
    9159:	c6 00 00             	mov    BYTE PTR [rax],0x0
    915c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9160:	c9                   	leave  
    9161:	c3                   	ret    

0000000000009162 <delimit>:
    9162:	f3 0f 1e fa          	endbr64 
    9166:	55                   	push   rbp
    9167:	48 89 e5             	mov    rbp,rsp
    916a:	89 f8                	mov    eax,edi
    916c:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    916f:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    9173:	0f 94 c0             	sete   al
    9176:	5d                   	pop    rbp
    9177:	c3                   	ret    

0000000000009178 <isdigit>:
    9178:	f3 0f 1e fa          	endbr64 
    917c:	55                   	push   rbp
    917d:	48 89 e5             	mov    rbp,rsp
    9180:	53                   	push   rbx
    9181:	48 83 ec 28          	sub    rsp,0x28
    9185:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9189:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    9190:	e9 f7 00 00 00       	jmp    928c <isdigit+0x114>
    9195:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9198:	48 63 d0             	movsxd rdx,eax
    919b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    919f:	48 01 d0             	add    rax,rdx
    91a2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    91a5:	3c 30                	cmp    al,0x30
    91a7:	0f 84 db 00 00 00    	je     9288 <isdigit+0x110>
    91ad:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91b0:	48 63 d0             	movsxd rdx,eax
    91b3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    91b7:	48 01 d0             	add    rax,rdx
    91ba:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    91bd:	3c 31                	cmp    al,0x31
    91bf:	0f 84 c3 00 00 00    	je     9288 <isdigit+0x110>
    91c5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91c8:	48 63 d0             	movsxd rdx,eax
    91cb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    91cf:	48 01 d0             	add    rax,rdx
    91d2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    91d5:	3c 32                	cmp    al,0x32
    91d7:	0f 84 ab 00 00 00    	je     9288 <isdigit+0x110>
    91dd:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91e0:	48 63 d0             	movsxd rdx,eax
    91e3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    91e7:	48 01 d0             	add    rax,rdx
    91ea:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    91ed:	3c 33                	cmp    al,0x33
    91ef:	0f 84 93 00 00 00    	je     9288 <isdigit+0x110>
    91f5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    91f8:	48 63 d0             	movsxd rdx,eax
    91fb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    91ff:	48 01 d0             	add    rax,rdx
    9202:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9205:	3c 34                	cmp    al,0x34
    9207:	74 7f                	je     9288 <isdigit+0x110>
    9209:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    920c:	48 63 d0             	movsxd rdx,eax
    920f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9213:	48 01 d0             	add    rax,rdx
    9216:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9219:	3c 34                	cmp    al,0x34
    921b:	74 6b                	je     9288 <isdigit+0x110>
    921d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9220:	48 63 d0             	movsxd rdx,eax
    9223:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9227:	48 01 d0             	add    rax,rdx
    922a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    922d:	3c 35                	cmp    al,0x35
    922f:	74 57                	je     9288 <isdigit+0x110>
    9231:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9234:	48 63 d0             	movsxd rdx,eax
    9237:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    923b:	48 01 d0             	add    rax,rdx
    923e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9241:	3c 36                	cmp    al,0x36
    9243:	74 43                	je     9288 <isdigit+0x110>
    9245:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9248:	48 63 d0             	movsxd rdx,eax
    924b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    924f:	48 01 d0             	add    rax,rdx
    9252:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9255:	3c 37                	cmp    al,0x37
    9257:	74 2f                	je     9288 <isdigit+0x110>
    9259:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    925c:	48 63 d0             	movsxd rdx,eax
    925f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9263:	48 01 d0             	add    rax,rdx
    9266:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9269:	3c 38                	cmp    al,0x38
    926b:	74 1b                	je     9288 <isdigit+0x110>
    926d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9270:	48 63 d0             	movsxd rdx,eax
    9273:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9277:	48 01 d0             	add    rax,rdx
    927a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    927d:	3c 39                	cmp    al,0x39
    927f:	74 07                	je     9288 <isdigit+0x110>
    9281:	b8 00 00 00 00       	mov    eax,0x0
    9286:	eb 24                	jmp    92ac <isdigit+0x134>
    9288:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    928c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    928f:	48 63 d8             	movsxd rbx,eax
    9292:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9296:	48 89 c7             	mov    rdi,rax
    9299:	e8 42 93 ff ff       	call   25e0 <strlen@plt>
    929e:	48 39 c3             	cmp    rbx,rax
    92a1:	0f 82 ee fe ff ff    	jb     9195 <isdigit+0x1d>
    92a7:	b8 01 00 00 00       	mov    eax,0x1
    92ac:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    92b0:	c9                   	leave  
    92b1:	c3                   	ret    

00000000000092b2 <assign_port_number>:
    92b2:	f3 0f 1e fa          	endbr64 
    92b6:	55                   	push   rbp
    92b7:	48 89 e5             	mov    rbp,rsp
    92ba:	48 83 ec 10          	sub    rsp,0x10
    92be:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    92c2:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    92c6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92ca:	48 89 c7             	mov    rdi,rax
    92cd:	e8 a6 fe ff ff       	call   9178 <isdigit>
    92d2:	84 c0                	test   al,al
    92d4:	74 18                	je     92ee <assign_port_number+0x3c>
    92d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92da:	48 89 c7             	mov    rdi,rax
    92dd:	e8 be 93 ff ff       	call   26a0 <atoi@plt>
    92e2:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    92e6:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    92ec:	eb 25                	jmp    9313 <assign_port_number+0x61>
    92ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92f2:	48 8d 35 4f 47 00 00 	lea    rsi,[rip+0x474f]        # da48 <_IO_stdin_used+0x1a48>
    92f9:	48 89 c7             	mov    rdi,rax
    92fc:	e8 2f 94 ff ff       	call   2730 <strcmp@plt>
    9301:	85 c0                	test   eax,eax
    9303:	75 0e                	jne    9313 <assign_port_number+0x61>
    9305:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9309:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9310:	ff ff ff 
    9313:	90                   	nop
    9314:	c9                   	leave  
    9315:	c3                   	ret    

0000000000009316 <check_port_number>:
    9316:	f3 0f 1e fa          	endbr64 
    931a:	55                   	push   rbp
    931b:	48 89 e5             	mov    rbp,rsp
    931e:	48 83 ec 10          	sub    rsp,0x10
    9322:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9326:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    932a:	48 89 c7             	mov    rdi,rax
    932d:	e8 46 fe ff ff       	call   9178 <isdigit>
    9332:	84 c0                	test   al,al
    9334:	74 0e                	je     9344 <check_port_number+0x2e>
    9336:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    933a:	48 89 c7             	mov    rdi,rax
    933d:	e8 5e 93 ff ff       	call   26a0 <atoi@plt>
    9342:	eb 23                	jmp    9367 <check_port_number+0x51>
    9344:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9348:	48 8d 35 f9 46 00 00 	lea    rsi,[rip+0x46f9]        # da48 <_IO_stdin_used+0x1a48>
    934f:	48 89 c7             	mov    rdi,rax
    9352:	e8 d9 93 ff ff       	call   2730 <strcmp@plt>
    9357:	85 c0                	test   eax,eax
    9359:	75 07                	jne    9362 <check_port_number+0x4c>
    935b:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9360:	eb 05                	jmp    9367 <check_port_number+0x51>
    9362:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9367:	c9                   	leave  
    9368:	c3                   	ret    

0000000000009369 <assign_protocol>:
    9369:	f3 0f 1e fa          	endbr64 
    936d:	55                   	push   rbp
    936e:	48 89 e5             	mov    rbp,rsp
    9371:	48 83 ec 10          	sub    rsp,0x10
    9375:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9379:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    937d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9381:	48 8d 35 c4 46 00 00 	lea    rsi,[rip+0x46c4]        # da4c <_IO_stdin_used+0x1a4c>
    9388:	48 89 c7             	mov    rdi,rax
    938b:	e8 a0 93 ff ff       	call   2730 <strcmp@plt>
    9390:	85 c0                	test   eax,eax
    9392:	75 10                	jne    93a4 <assign_protocol+0x3b>
    9394:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9398:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    939f:	ff ff ff 
    93a2:	eb 73                	jmp    9417 <assign_protocol+0xae>
    93a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93a8:	48 8d 35 a1 46 00 00 	lea    rsi,[rip+0x46a1]        # da50 <_IO_stdin_used+0x1a50>
    93af:	48 89 c7             	mov    rdi,rax
    93b2:	e8 79 93 ff ff       	call   2730 <strcmp@plt>
    93b7:	85 c0                	test   eax,eax
    93b9:	75 10                	jne    93cb <assign_protocol+0x62>
    93bb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    93bf:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    93c6:	00 00 00 
    93c9:	eb 4c                	jmp    9417 <assign_protocol+0xae>
    93cb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93cf:	48 8d 35 7f 46 00 00 	lea    rsi,[rip+0x467f]        # da55 <_IO_stdin_used+0x1a55>
    93d6:	48 89 c7             	mov    rdi,rax
    93d9:	e8 52 93 ff ff       	call   2730 <strcmp@plt>
    93de:	85 c0                	test   eax,eax
    93e0:	75 10                	jne    93f2 <assign_protocol+0x89>
    93e2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    93e6:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    93ed:	00 00 00 
    93f0:	eb 25                	jmp    9417 <assign_protocol+0xae>
    93f2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93f6:	48 8d 35 5c 46 00 00 	lea    rsi,[rip+0x465c]        # da59 <_IO_stdin_used+0x1a59>
    93fd:	48 89 c7             	mov    rdi,rax
    9400:	e8 2b 93 ff ff       	call   2730 <strcmp@plt>
    9405:	85 c0                	test   eax,eax
    9407:	75 0e                	jne    9417 <assign_protocol+0xae>
    9409:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    940d:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    9414:	00 00 00 
    9417:	90                   	nop
    9418:	c9                   	leave  
    9419:	c3                   	ret    

000000000000941a <get_ruletype>:
    941a:	f3 0f 1e fa          	endbr64 
    941e:	55                   	push   rbp
    941f:	48 89 e5             	mov    rbp,rsp
    9422:	48 83 ec 10          	sub    rsp,0x10
    9426:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    942a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    942e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9432:	ba 09 00 00 00       	mov    edx,0x9
    9437:	48 8d 35 1f 46 00 00 	lea    rsi,[rip+0x461f]        # da5d <_IO_stdin_used+0x1a5d>
    943e:	48 89 c7             	mov    rdi,rax
    9441:	e8 ea 90 ff ff       	call   2530 <strncmp@plt>
    9446:	85 c0                	test   eax,eax
    9448:	75 17                	jne    9461 <get_ruletype+0x47>
    944a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    944e:	48 8d 15 5a c1 ff ff 	lea    rdx,[rip+0xffffffffffffc15a]        # 55af <str_match_parser>
    9455:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    945c:	e9 82 00 00 00       	jmp    94e3 <get_ruletype+0xc9>
    9461:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9465:	ba 04 00 00 00       	mov    edx,0x4
    946a:	48 8d 35 f6 45 00 00 	lea    rsi,[rip+0x45f6]        # da67 <_IO_stdin_used+0x1a67>
    9471:	48 89 c7             	mov    rdi,rax
    9474:	e8 b7 90 ff ff       	call   2530 <strncmp@plt>
    9479:	85 c0                	test   eax,eax
    947b:	75 14                	jne    9491 <get_ruletype+0x77>
    947d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9481:	48 8d 15 ca c3 ff ff 	lea    rdx,[rip+0xffffffffffffc3ca]        # 5852 <none>
    9488:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    948f:	eb 52                	jmp    94e3 <get_ruletype+0xc9>
    9491:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9495:	ba 04 00 00 00       	mov    edx,0x4
    949a:	48 8d 35 cb 45 00 00 	lea    rsi,[rip+0x45cb]        # da6c <_IO_stdin_used+0x1a6c>
    94a1:	48 89 c7             	mov    rdi,rax
    94a4:	e8 87 90 ff ff       	call   2530 <strncmp@plt>
    94a9:	85 c0                	test   eax,eax
    94ab:	75 14                	jne    94c1 <get_ruletype+0xa7>
    94ad:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    94b1:	48 8d 15 b1 c3 ff ff 	lea    rdx,[rip+0xffffffffffffc3b1]        # 5869 <pcre_match>
    94b8:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    94bf:	eb 22                	jmp    94e3 <get_ruletype+0xc9>
    94c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    94c5:	48 89 c6             	mov    rsi,rax
    94c8:	48 8d 3d a2 45 00 00 	lea    rdi,[rip+0x45a2]        # da71 <_IO_stdin_used+0x1a71>
    94cf:	b8 00 00 00 00       	mov    eax,0x0
    94d4:	e8 97 8f ff ff       	call   2470 <printf@plt>
    94d9:	bf 01 00 00 00       	mov    edi,0x1
    94de:	e8 fd 8f ff ff       	call   24e0 <exit@plt>
    94e3:	c9                   	leave  
    94e4:	c3                   	ret    

00000000000094e5 <numeric_check>:
    94e5:	f3 0f 1e fa          	endbr64 
    94e9:	55                   	push   rbp
    94ea:	48 89 e5             	mov    rbp,rsp
    94ed:	48 83 ec 30          	sub    rsp,0x30
    94f1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    94f5:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    94f8:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    94fc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9500:	48 89 c7             	mov    rdi,rax
    9503:	e8 70 fc ff ff       	call   9178 <isdigit>
    9508:	84 c0                	test   al,al
    950a:	74 27                	je     9533 <numeric_check+0x4e>
    950c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9510:	48 89 c7             	mov    rdi,rax
    9513:	e8 88 91 ff ff       	call   26a0 <atoi@plt>
    9518:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    951b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    951e:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    9521:	77 10                	ja     9533 <numeric_check+0x4e>
    9523:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9526:	48 98                	cdqe   
    9528:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    952c:	72 05                	jb     9533 <numeric_check+0x4e>
    952e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9531:	eb 05                	jmp    9538 <numeric_check+0x53>
    9533:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9538:	c9                   	leave  
    9539:	c3                   	ret    

000000000000953a <sc_strip>:
    953a:	f3 0f 1e fa          	endbr64 
    953e:	55                   	push   rbp
    953f:	48 89 e5             	mov    rbp,rsp
    9542:	48 83 ec 10          	sub    rsp,0x10
    9546:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    954a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    954e:	48 8d 35 33 45 00 00 	lea    rsi,[rip+0x4533]        # da88 <_IO_stdin_used+0x1a88>
    9555:	48 89 c7             	mov    rdi,rax
    9558:	e8 53 92 ff ff       	call   27b0 <strcspn@plt>
    955d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9561:	48 01 d0             	add    rax,rdx
    9564:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9567:	90                   	nop
    9568:	c9                   	leave  
    9569:	c3                   	ret    

000000000000956a <void_rule>:
    956a:	f3 0f 1e fa          	endbr64 
    956e:	55                   	push   rbp
    956f:	48 89 e5             	mov    rbp,rsp
    9572:	48 83 ec 10          	sub    rsp,0x10
    9576:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    957a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    957e:	48 05 6e 03 00 00    	add    rax,0x36e
    9584:	ba 0a 00 00 00       	mov    edx,0xa
    9589:	be 00 00 00 00       	mov    esi,0x0
    958e:	48 89 c7             	mov    rdi,rax
    9591:	e8 ea 8e ff ff       	call   2480 <memset@plt>
    9596:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    959a:	48 05 68 03 00 00    	add    rax,0x368
    95a0:	ba 06 00 00 00       	mov    edx,0x6
    95a5:	be 00 00 00 00       	mov    esi,0x0
    95aa:	48 89 c7             	mov    rdi,rax
    95ad:	e8 ce 8e ff ff       	call   2480 <memset@plt>
    95b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95b6:	48 05 50 03 00 00    	add    rax,0x350
    95bc:	ba 18 00 00 00       	mov    edx,0x18
    95c1:	be 00 00 00 00       	mov    esi,0x0
    95c6:	48 89 c7             	mov    rdi,rax
    95c9:	e8 b2 8e ff ff       	call   2480 <memset@plt>
    95ce:	90                   	nop
    95cf:	c9                   	leave  
    95d0:	c3                   	ret    

00000000000095d1 <line_parser>:
    95d1:	f3 0f 1e fa          	endbr64 
    95d5:	55                   	push   rbp
    95d6:	48 89 e5             	mov    rbp,rsp
    95d9:	53                   	push   rbx
    95da:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    95e1:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    95e8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    95ef:	00 00 
    95f1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    95f5:	31 c0                	xor    eax,eax
    95f7:	8b 05 17 7a 00 00    	mov    eax,DWORD PTR [rip+0x7a17]        # 11014 <num_rules>
    95fd:	83 c0 01             	add    eax,0x1
    9600:	89 05 0e 7a 00 00    	mov    DWORD PTR [rip+0x7a0e],eax        # 11014 <num_rules>
    9606:	8b 05 08 7a 00 00    	mov    eax,DWORD PTR [rip+0x7a08]        # 11014 <num_rules>
    960c:	48 98                	cdqe   
    960e:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    9615:	48 8d 15 c4 7c 00 00 	lea    rdx,[rip+0x7cc4]        # 112e0 <rules>
    961c:	48 01 d0             	add    rax,rdx
    961f:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    9623:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9627:	ba 08 00 00 00       	mov    edx,0x8
    962c:	be 00 00 00 00       	mov    esi,0x0
    9631:	48 89 c7             	mov    rdi,rax
    9634:	e8 47 8e ff ff       	call   2480 <memset@plt>
    9639:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    963d:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9644:	ff ff ff 
    9647:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    964b:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9652:	ff ff ff 
    9655:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9659:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    9660:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9664:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    966b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    966f:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    9676:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    967a:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    9681:	00 00 00 
    9684:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9688:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    968e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9692:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    9699:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    969d:	48 89 c7             	mov    rdi,rax
    96a0:	e8 c5 fe ff ff       	call   956a <void_rule>
    96a5:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    96ac:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    96b3:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    96ba:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    96c1:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    96c8:	48 89 c7             	mov    rdi,rax
    96cb:	e8 10 8f ff ff       	call   25e0 <strlen@plt>
    96d0:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    96d3:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    96da:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    96e1:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    96e8:	e9 98 0d 00 00       	jmp    a485 <line_parser+0xeb4>
    96ed:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    96f0:	48 63 d0             	movsxd rdx,eax
    96f3:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    96fa:	48 01 d0             	add    rax,rdx
    96fd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9700:	0f be c0             	movsx  eax,al
    9703:	89 c7                	mov    edi,eax
    9705:	e8 58 fa ff ff       	call   9162 <delimit>
    970a:	83 f0 01             	xor    eax,0x1
    970d:	84 c0                	test   al,al
    970f:	74 04                	je     9715 <line_parser+0x144>
    9711:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9715:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9718:	48 63 d0             	movsxd rdx,eax
    971b:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9722:	48 01 d0             	add    rax,rdx
    9725:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9728:	0f be c0             	movsx  eax,al
    972b:	89 c7                	mov    edi,eax
    972d:	e8 30 fa ff ff       	call   9162 <delimit>
    9732:	84 c0                	test   al,al
    9734:	74 3f                	je     9775 <line_parser+0x1a4>
    9736:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9739:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    973c:	75 37                	jne    9775 <line_parser+0x1a4>
    973e:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9741:	48 63 d0             	movsxd rdx,eax
    9744:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    974b:	48 01 d0             	add    rax,rdx
    974e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9751:	3c 3a                	cmp    al,0x3a
    9753:	75 11                	jne    9766 <line_parser+0x195>
    9755:	48 8d 3d 2e 43 00 00 	lea    rdi,[rip+0x432e]        # da8a <_IO_stdin_used+0x1a8a>
    975c:	b8 00 00 00 00       	mov    eax,0x0
    9761:	e8 0a 8d ff ff       	call   2470 <printf@plt>
    9766:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    976a:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    976d:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    9770:	e9 10 0d 00 00       	jmp    a485 <line_parser+0xeb4>
    9775:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9778:	48 63 d0             	movsxd rdx,eax
    977b:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9782:	48 01 d0             	add    rax,rdx
    9785:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9788:	0f be c0             	movsx  eax,al
    978b:	89 c7                	mov    edi,eax
    978d:	e8 d0 f9 ff ff       	call   9162 <delimit>
    9792:	84 c0                	test   al,al
    9794:	74 08                	je     979e <line_parser+0x1cd>
    9796:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9799:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    979c:	75 18                	jne    97b6 <line_parser+0x1e5>
    979e:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    97a1:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    97a4:	0f 85 db 0c 00 00    	jne    a485 <line_parser+0xeb4>
    97aa:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    97ad:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    97b0:	0f 84 cf 0c 00 00    	je     a485 <line_parser+0xeb4>
    97b6:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    97b9:	8d 50 ff             	lea    edx,[rax-0x1]
    97bc:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    97bf:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    97c6:	89 ce                	mov    esi,ecx
    97c8:	48 89 c7             	mov    rdi,rax
    97cb:	e8 12 f9 ff ff       	call   90e2 <substr>
    97d0:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    97d4:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    97db:	83 f0 01             	xor    eax,0x1
    97de:	84 c0                	test   al,al
    97e0:	0f 84 ea 02 00 00    	je     9ad0 <line_parser+0x4ff>
    97e6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    97ea:	48 8d 35 a8 42 00 00 	lea    rsi,[rip+0x42a8]        # da99 <_IO_stdin_used+0x1a99>
    97f1:	48 89 c7             	mov    rdi,rax
    97f4:	e8 37 8f ff ff       	call   2730 <strcmp@plt>
    97f9:	85 c0                	test   eax,eax
    97fb:	75 33                	jne    9830 <line_parser+0x25f>
    97fd:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9804:	83 f0 01             	xor    eax,0x1
    9807:	84 c0                	test   al,al
    9809:	74 25                	je     9830 <line_parser+0x25f>
    980b:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9812:	83 f0 01             	xor    eax,0x1
    9815:	84 c0                	test   al,al
    9817:	74 17                	je     9830 <line_parser+0x25f>
    9819:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    981d:	48 8d 15 61 bb ff ff 	lea    rdx,[rip+0xffffffffffffbb61]        # 5385 <stdout_alert>
    9824:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    982b:	e9 31 0c 00 00       	jmp    a461 <line_parser+0xe90>
    9830:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9834:	48 8d 35 15 42 00 00 	lea    rsi,[rip+0x4215]        # da50 <_IO_stdin_used+0x1a50>
    983b:	48 89 c7             	mov    rdi,rax
    983e:	e8 ed 8e ff ff       	call   2730 <strcmp@plt>
    9843:	85 c0                	test   eax,eax
    9845:	74 45                	je     988c <line_parser+0x2bb>
    9847:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    984b:	48 8d 35 fa 41 00 00 	lea    rsi,[rip+0x41fa]        # da4c <_IO_stdin_used+0x1a4c>
    9852:	48 89 c7             	mov    rdi,rax
    9855:	e8 d6 8e ff ff       	call   2730 <strcmp@plt>
    985a:	85 c0                	test   eax,eax
    985c:	74 2e                	je     988c <line_parser+0x2bb>
    985e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9862:	48 8d 35 ec 41 00 00 	lea    rsi,[rip+0x41ec]        # da55 <_IO_stdin_used+0x1a55>
    9869:	48 89 c7             	mov    rdi,rax
    986c:	e8 bf 8e ff ff       	call   2730 <strcmp@plt>
    9871:	85 c0                	test   eax,eax
    9873:	74 17                	je     988c <line_parser+0x2bb>
    9875:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9879:	48 8d 35 d9 41 00 00 	lea    rsi,[rip+0x41d9]        # da59 <_IO_stdin_used+0x1a59>
    9880:	48 89 c7             	mov    rdi,rax
    9883:	e8 a8 8e ff ff       	call   2730 <strcmp@plt>
    9888:	85 c0                	test   eax,eax
    988a:	75 34                	jne    98c0 <line_parser+0x2ef>
    988c:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9893:	83 f0 01             	xor    eax,0x1
    9896:	84 c0                	test   al,al
    9898:	74 26                	je     98c0 <line_parser+0x2ef>
    989a:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    98a1:	83 f0 01             	xor    eax,0x1
    98a4:	84 c0                	test   al,al
    98a6:	74 18                	je     98c0 <line_parser+0x2ef>
    98a8:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    98ac:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    98b0:	48 89 d6             	mov    rsi,rdx
    98b3:	48 89 c7             	mov    rdi,rax
    98b6:	e8 ae fa ff ff       	call   9369 <assign_protocol>
    98bb:	e9 a1 0b 00 00       	jmp    a461 <line_parser+0xe90>
    98c0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    98c4:	48 89 c7             	mov    rdi,rax
    98c7:	e8 ac f8 ff ff       	call   9178 <isdigit>
    98cc:	84 c0                	test   al,al
    98ce:	75 17                	jne    98e7 <line_parser+0x316>
    98d0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    98d4:	48 8d 35 6d 41 00 00 	lea    rsi,[rip+0x416d]        # da48 <_IO_stdin_used+0x1a48>
    98db:	48 89 c7             	mov    rdi,rax
    98de:	e8 4d 8e ff ff       	call   2730 <strcmp@plt>
    98e3:	85 c0                	test   eax,eax
    98e5:	75 34                	jne    991b <line_parser+0x34a>
    98e7:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    98ee:	83 f0 01             	xor    eax,0x1
    98f1:	84 c0                	test   al,al
    98f3:	74 26                	je     991b <line_parser+0x34a>
    98f5:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    98fc:	83 f0 01             	xor    eax,0x1
    98ff:	84 c0                	test   al,al
    9901:	74 18                	je     991b <line_parser+0x34a>
    9903:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9907:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    990b:	48 89 d6             	mov    rsi,rdx
    990e:	48 89 c7             	mov    rdi,rax
    9911:	e8 9c f9 ff ff       	call   92b2 <assign_port_number>
    9916:	e9 46 0b 00 00       	jmp    a461 <line_parser+0xe90>
    991b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    991f:	ba 08 00 00 00       	mov    edx,0x8
    9924:	48 8d 35 74 41 00 00 	lea    rsi,[rip+0x4174]        # da9f <_IO_stdin_used+0x1a9f>
    992b:	48 89 c7             	mov    rdi,rax
    992e:	e8 fd 8b ff ff       	call   2530 <strncmp@plt>
    9933:	85 c0                	test   eax,eax
    9935:	75 75                	jne    99ac <line_parser+0x3db>
    9937:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    993b:	48 8d 50 09          	lea    rdx,[rax+0x9]
    993f:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9943:	48 89 d6             	mov    rsi,rdx
    9946:	48 89 c7             	mov    rdi,rax
    9949:	e8 02 8e ff ff       	call   2750 <strcpy@plt>
    994e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9952:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9955:	85 c0                	test   eax,eax
    9957:	75 2e                	jne    9987 <line_parser+0x3b6>
    9959:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    995d:	8b 00                	mov    eax,DWORD PTR [rax]
    995f:	85 c0                	test   eax,eax
    9961:	75 24                	jne    9987 <line_parser+0x3b6>
    9963:	8b 15 5b 06 10 00    	mov    edx,DWORD PTR [rip+0x10065b]        # 109fc4 <homenet>
    9969:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    996d:	89 10                	mov    DWORD PTR [rax],edx
    996f:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9973:	48 89 c7             	mov    rdi,rax
    9976:	e8 9b f9 ff ff       	call   9316 <check_port_number>
    997b:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    997f:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9982:	e9 da 0a 00 00       	jmp    a461 <line_parser+0xe90>
    9987:	8b 15 37 06 10 00    	mov    edx,DWORD PTR [rip+0x100637]        # 109fc4 <homenet>
    998d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9991:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    9994:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9998:	48 89 c7             	mov    rdi,rax
    999b:	e8 76 f9 ff ff       	call   9316 <check_port_number>
    99a0:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    99a4:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    99a7:	e9 b5 0a 00 00       	jmp    a461 <line_parser+0xe90>
    99ac:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    99b0:	48 8d 35 f1 40 00 00 	lea    rsi,[rip+0x40f1]        # daa8 <_IO_stdin_used+0x1aa8>
    99b7:	48 89 c7             	mov    rdi,rax
    99ba:	e8 71 8d ff ff       	call   2730 <strcmp@plt>
    99bf:	85 c0                	test   eax,eax
    99c1:	75 30                	jne    99f3 <line_parser+0x422>
    99c3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99c7:	8b 10                	mov    edx,DWORD PTR [rax]
    99c9:	8b 05 f5 05 10 00    	mov    eax,DWORD PTR [rip+0x1005f5]        # 109fc4 <homenet>
    99cf:	39 c2                	cmp    edx,eax
    99d1:	75 10                	jne    99e3 <line_parser+0x412>
    99d3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99d7:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    99de:	e9 7e 0a 00 00       	jmp    a461 <line_parser+0xe90>
    99e3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99e7:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    99ee:	e9 6e 0a 00 00       	jmp    a461 <line_parser+0xe90>
    99f3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    99f7:	48 8d 35 ad 40 00 00 	lea    rsi,[rip+0x40ad]        # daab <_IO_stdin_used+0x1aab>
    99fe:	48 89 c7             	mov    rdi,rax
    9a01:	e8 2a 8d ff ff       	call   2730 <strcmp@plt>
    9a06:	85 c0                	test   eax,eax
    9a08:	75 10                	jne    9a1a <line_parser+0x449>
    9a0a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a0e:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9a15:	e9 47 0a 00 00       	jmp    a461 <line_parser+0xe90>
    9a1a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9a1e:	ba 0c 00 00 00       	mov    edx,0xc
    9a23:	48 8d 35 84 40 00 00 	lea    rsi,[rip+0x4084]        # daae <_IO_stdin_used+0x1aae>
    9a2a:	48 89 c7             	mov    rdi,rax
    9a2d:	e8 fe 8a ff ff       	call   2530 <strncmp@plt>
    9a32:	85 c0                	test   eax,eax
    9a34:	75 7f                	jne    9ab5 <line_parser+0x4e4>
    9a36:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9a3a:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9a3e:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9a42:	48 89 d6             	mov    rsi,rdx
    9a45:	48 89 c7             	mov    rdi,rax
    9a48:	e8 03 8d ff ff       	call   2750 <strcpy@plt>
    9a4d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a51:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9a54:	85 c0                	test   eax,eax
    9a56:	75 37                	jne    9a8f <line_parser+0x4be>
    9a58:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a5c:	8b 10                	mov    edx,DWORD PTR [rax]
    9a5e:	8b 05 60 05 10 00    	mov    eax,DWORD PTR [rip+0x100560]        # 109fc4 <homenet>
    9a64:	39 c2                	cmp    edx,eax
    9a66:	75 27                	jne    9a8f <line_parser+0x4be>
    9a68:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a6c:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9a73:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9a77:	48 83 c0 01          	add    rax,0x1
    9a7b:	48 89 c7             	mov    rdi,rax
    9a7e:	e8 93 f8 ff ff       	call   9316 <check_port_number>
    9a83:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9a87:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9a8a:	e9 d2 09 00 00       	jmp    a461 <line_parser+0xe90>
    9a8f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a93:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9a99:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9a9d:	48 83 c0 01          	add    rax,0x1
    9aa1:	48 89 c7             	mov    rdi,rax
    9aa4:	e8 6d f8 ff ff       	call   9316 <check_port_number>
    9aa9:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9aad:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9ab0:	e9 ac 09 00 00       	jmp    a461 <line_parser+0xe90>
    9ab5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ab9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9abc:	3c 28                	cmp    al,0x28
    9abe:	0f 85 9d 09 00 00    	jne    a461 <line_parser+0xe90>
    9ac4:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    9acb:	e9 b5 09 00 00       	jmp    a485 <line_parser+0xeb4>
    9ad0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ad4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9ad7:	3c 28                	cmp    al,0x28
    9ad9:	75 0e                	jne    9ae9 <line_parser+0x518>
    9adb:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9adf:	48 83 c0 01          	add    rax,0x1
    9ae3:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9ae7:	eb 08                	jmp    9af1 <line_parser+0x520>
    9ae9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9aed:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9af1:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    9af8:	0f 84 8e 00 00 00    	je     9b8c <line_parser+0x5bb>
    9afe:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b02:	48 89 c7             	mov    rdi,rax
    9b05:	e8 d6 8a ff ff       	call   25e0 <strlen@plt>
    9b0a:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9b0e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b12:	48 01 d0             	add    rax,rdx
    9b15:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b18:	3c 3b                	cmp    al,0x3b
    9b1a:	75 36                	jne    9b52 <line_parser+0x581>
    9b1c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b20:	48 89 c7             	mov    rdi,rax
    9b23:	e8 b8 8a ff ff       	call   25e0 <strlen@plt>
    9b28:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    9b2c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b30:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    9b37:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b3b:	48 89 c6             	mov    rsi,rax
    9b3e:	48 89 cf             	mov    rdi,rcx
    9b41:	e8 6a 89 ff ff       	call   24b0 <strncat@plt>
    9b46:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9b4d:	e9 33 09 00 00       	jmp    a485 <line_parser+0xeb4>
    9b52:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b56:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    9b5d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b61:	48 89 c6             	mov    rsi,rax
    9b64:	48 89 d7             	mov    rdi,rdx
    9b67:	e8 f4 8a ff ff       	call   2660 <strcat@plt>
    9b6c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b70:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    9b77:	48 89 df             	mov    rdi,rbx
    9b7a:	e8 61 8a ff ff       	call   25e0 <strlen@plt>
    9b7f:	48 01 d8             	add    rax,rbx
    9b82:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9b87:	e9 d5 08 00 00       	jmp    a461 <line_parser+0xe90>
    9b8c:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    9b93:	74 7f                	je     9c14 <line_parser+0x643>
    9b95:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9b99:	48 8d 35 1b 3f 00 00 	lea    rsi,[rip+0x3f1b]        # dabb <_IO_stdin_used+0x1abb>
    9ba0:	48 89 c7             	mov    rdi,rax
    9ba3:	e8 a8 8a ff ff       	call   2650 <strstr@plt>
    9ba8:	48 85 c0             	test   rax,rax
    9bab:	74 33                	je     9be0 <line_parser+0x60f>
    9bad:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9bb1:	48 89 c7             	mov    rdi,rax
    9bb4:	e8 27 8a ff ff       	call   25e0 <strlen@plt>
    9bb9:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    9bbd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9bc1:	48 8d 48 40          	lea    rcx,[rax+0x40]
    9bc5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9bc9:	48 89 c6             	mov    rsi,rax
    9bcc:	48 89 cf             	mov    rdi,rcx
    9bcf:	e8 dc 88 ff ff       	call   24b0 <strncat@plt>
    9bd4:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    9bdb:	e9 a5 08 00 00       	jmp    a485 <line_parser+0xeb4>
    9be0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9be4:	48 8d 50 40          	lea    rdx,[rax+0x40]
    9be8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9bec:	48 89 c6             	mov    rsi,rax
    9bef:	48 89 d7             	mov    rdi,rdx
    9bf2:	e8 69 8a ff ff       	call   2660 <strcat@plt>
    9bf7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9bfb:	48 8d 58 40          	lea    rbx,[rax+0x40]
    9bff:	48 89 df             	mov    rdi,rbx
    9c02:	e8 d9 89 ff ff       	call   25e0 <strlen@plt>
    9c07:	48 01 d8             	add    rax,rbx
    9c0a:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9c0f:	e9 4d 08 00 00       	jmp    a461 <line_parser+0xe90>
    9c14:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c18:	ba 06 00 00 00       	mov    edx,0x6
    9c1d:	48 8d 35 9a 3e 00 00 	lea    rsi,[rip+0x3e9a]        # dabe <_IO_stdin_used+0x1abe>
    9c24:	48 89 c7             	mov    rdi,rax
    9c27:	e8 04 89 ff ff       	call   2530 <strncmp@plt>
    9c2c:	85 c0                	test   eax,eax
    9c2e:	75 37                	jne    9c67 <line_parser+0x696>
    9c30:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c34:	48 89 c7             	mov    rdi,rax
    9c37:	e8 a4 89 ff ff       	call   25e0 <strlen@plt>
    9c3c:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    9c40:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c44:	48 8d 48 06          	lea    rcx,[rax+0x6]
    9c48:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c4c:	48 83 c0 20          	add    rax,0x20
    9c50:	48 89 ce             	mov    rsi,rcx
    9c53:	48 89 c7             	mov    rdi,rax
    9c56:	e8 45 8b ff ff       	call   27a0 <strncpy@plt>
    9c5b:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    9c62:	e9 fa 07 00 00       	jmp    a461 <line_parser+0xe90>
    9c67:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c6b:	ba 05 00 00 00       	mov    edx,0x5
    9c70:	48 8d 35 4e 3e 00 00 	lea    rsi,[rip+0x3e4e]        # dac5 <_IO_stdin_used+0x1ac5>
    9c77:	48 89 c7             	mov    rdi,rax
    9c7a:	e8 b1 88 ff ff       	call   2530 <strncmp@plt>
    9c7f:	85 c0                	test   eax,eax
    9c81:	75 4d                	jne    9cd0 <line_parser+0x6ff>
    9c83:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    9c8a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9c8e:	48 83 c0 05          	add    rax,0x5
    9c92:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9c96:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c9a:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    9ca1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9ca5:	48 89 c6             	mov    rsi,rax
    9ca8:	48 89 d7             	mov    rdi,rdx
    9cab:	e8 b0 89 ff ff       	call   2660 <strcat@plt>
    9cb0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9cb4:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    9cbb:	48 89 df             	mov    rdi,rbx
    9cbe:	e8 1d 89 ff ff       	call   25e0 <strlen@plt>
    9cc3:	48 01 d8             	add    rax,rbx
    9cc6:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9ccb:	e9 91 07 00 00       	jmp    a461 <line_parser+0xe90>
    9cd0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9cd4:	ba 06 00 00 00       	mov    edx,0x6
    9cd9:	48 8d 35 eb 3d 00 00 	lea    rsi,[rip+0x3deb]        # dacb <_IO_stdin_used+0x1acb>
    9ce0:	48 89 c7             	mov    rdi,rax
    9ce3:	e8 48 88 ff ff       	call   2530 <strncmp@plt>
    9ce8:	85 c0                	test   eax,eax
    9cea:	75 31                	jne    9d1d <line_parser+0x74c>
    9cec:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9cf0:	48 89 c7             	mov    rdi,rax
    9cf3:	e8 42 f8 ff ff       	call   953a <sc_strip>
    9cf8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9cfc:	48 83 c0 06          	add    rax,0x6
    9d00:	48 89 c7             	mov    rdi,rax
    9d03:	e8 98 89 ff ff       	call   26a0 <atoi@plt>
    9d08:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    9d0b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d0f:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    9d12:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    9d18:	e9 44 07 00 00       	jmp    a461 <line_parser+0xe90>
    9d1d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d21:	ba 05 00 00 00       	mov    edx,0x5
    9d26:	48 8d 35 a5 3d 00 00 	lea    rsi,[rip+0x3da5]        # dad2 <_IO_stdin_used+0x1ad2>
    9d2d:	48 89 c7             	mov    rdi,rax
    9d30:	e8 fb 87 ff ff       	call   2530 <strncmp@plt>
    9d35:	85 c0                	test   eax,eax
    9d37:	75 3f                	jne    9d78 <line_parser+0x7a7>
    9d39:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d3d:	48 89 c7             	mov    rdi,rax
    9d40:	e8 9b 88 ff ff       	call   25e0 <strlen@plt>
    9d45:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    9d49:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d4d:	48 8d 48 05          	lea    rcx,[rax+0x5]
    9d51:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9d55:	48 89 ce             	mov    rsi,rcx
    9d58:	48 89 c7             	mov    rdi,rax
    9d5b:	e8 40 8a ff ff       	call   27a0 <strncpy@plt>
    9d60:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9d64:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9d68:	48 89 d6             	mov    rsi,rdx
    9d6b:	48 89 c7             	mov    rdi,rax
    9d6e:	e8 a7 f6 ff ff       	call   941a <get_ruletype>
    9d73:	e9 e9 06 00 00       	jmp    a461 <line_parser+0xe90>
    9d78:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d7c:	ba 08 00 00 00       	mov    edx,0x8
    9d81:	48 8d 35 50 3d 00 00 	lea    rsi,[rip+0x3d50]        # dad8 <_IO_stdin_used+0x1ad8>
    9d88:	48 89 c7             	mov    rdi,rax
    9d8b:	e8 a0 87 ff ff       	call   2530 <strncmp@plt>
    9d90:	85 c0                	test   eax,eax
    9d92:	0f 85 8f 00 00 00    	jne    9e27 <line_parser+0x856>
    9d98:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9d9c:	48 83 c0 08          	add    rax,0x8
    9da0:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9da4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9da8:	48 8d 35 0c 3d 00 00 	lea    rsi,[rip+0x3d0c]        # dabb <_IO_stdin_used+0x1abb>
    9daf:	48 89 c7             	mov    rdi,rax
    9db2:	e8 99 88 ff ff       	call   2650 <strstr@plt>
    9db7:	48 85 c0             	test   rax,rax
    9dba:	74 30                	je     9dec <line_parser+0x81b>
    9dbc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9dc0:	48 89 c7             	mov    rdi,rax
    9dc3:	e8 18 88 ff ff       	call   25e0 <strlen@plt>
    9dc8:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    9dcc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9dd0:	48 8d 48 08          	lea    rcx,[rax+0x8]
    9dd4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9dd8:	48 83 c0 40          	add    rax,0x40
    9ddc:	48 89 ce             	mov    rsi,rcx
    9ddf:	48 89 c7             	mov    rdi,rax
    9de2:	e8 b9 89 ff ff       	call   27a0 <strncpy@plt>
    9de7:	e9 75 06 00 00       	jmp    a461 <line_parser+0xe90>
    9dec:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    9df3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9df7:	48 8d 50 40          	lea    rdx,[rax+0x40]
    9dfb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9dff:	48 89 c6             	mov    rsi,rax
    9e02:	48 89 d7             	mov    rdi,rdx
    9e05:	e8 56 88 ff ff       	call   2660 <strcat@plt>
    9e0a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e0e:	48 8d 58 40          	lea    rbx,[rax+0x40]
    9e12:	48 89 df             	mov    rdi,rbx
    9e15:	e8 c6 87 ff ff       	call   25e0 <strlen@plt>
    9e1a:	48 01 d8             	add    rax,rbx
    9e1d:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9e22:	e9 3a 06 00 00       	jmp    a461 <line_parser+0xe90>
    9e27:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e2b:	ba 04 00 00 00       	mov    edx,0x4
    9e30:	48 8d 35 aa 3c 00 00 	lea    rsi,[rip+0x3caa]        # dae1 <_IO_stdin_used+0x1ae1>
    9e37:	48 89 c7             	mov    rdi,rax
    9e3a:	e8 f1 86 ff ff       	call   2530 <strncmp@plt>
    9e3f:	85 c0                	test   eax,eax
    9e41:	0f 85 8e 00 00 00    	jne    9ed5 <line_parser+0x904>
    9e47:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e4b:	48 8d 35 36 3c 00 00 	lea    rsi,[rip+0x3c36]        # da88 <_IO_stdin_used+0x1a88>
    9e52:	48 89 c7             	mov    rdi,rax
    9e55:	e8 56 89 ff ff       	call   27b0 <strcspn@plt>
    9e5a:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    9e5e:	48 01 d0             	add    rax,rdx
    9e61:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9e64:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e68:	48 83 c0 04          	add    rax,0x4
    9e6c:	48 89 c7             	mov    rdi,rax
    9e6f:	e8 04 f3 ff ff       	call   9178 <isdigit>
    9e74:	84 c0                	test   al,al
    9e76:	74 47                	je     9ebf <line_parser+0x8ee>
    9e78:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e7c:	48 83 c0 04          	add    rax,0x4
    9e80:	48 89 c7             	mov    rdi,rax
    9e83:	e8 18 88 ff ff       	call   26a0 <atoi@plt>
    9e88:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    9e8b:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    9e8f:	7e 18                	jle    9ea9 <line_parser+0x8d8>
    9e91:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    9e95:	7f 12                	jg     9ea9 <line_parser+0x8d8>
    9e97:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e9b:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    9e9e:	89 90 48 01 00 00    	mov    DWORD PTR [rax+0x148],edx
    9ea4:	e9 b8 05 00 00       	jmp    a461 <line_parser+0xe90>
    9ea9:	48 8d 3d 38 3c 00 00 	lea    rdi,[rip+0x3c38]        # dae8 <_IO_stdin_used+0x1ae8>
    9eb0:	e8 0b 86 ff ff       	call   24c0 <puts@plt>
    9eb5:	bf ff ff ff ff       	mov    edi,0xffffffff
    9eba:	e8 21 86 ff ff       	call   24e0 <exit@plt>
    9ebf:	48 8d 3d 4a 3c 00 00 	lea    rdi,[rip+0x3c4a]        # db10 <_IO_stdin_used+0x1b10>
    9ec6:	e8 f5 85 ff ff       	call   24c0 <puts@plt>
    9ecb:	bf ff ff ff ff       	mov    edi,0xffffffff
    9ed0:	e8 0b 86 ff ff       	call   24e0 <exit@plt>
    9ed5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9ed9:	ba 06 00 00 00       	mov    edx,0x6
    9ede:	48 8d 35 53 3c 00 00 	lea    rsi,[rip+0x3c53]        # db38 <_IO_stdin_used+0x1b38>
    9ee5:	48 89 c7             	mov    rdi,rax
    9ee8:	e8 43 86 ff ff       	call   2530 <strncmp@plt>
    9eed:	85 c0                	test   eax,eax
    9eef:	0f 85 9b 00 00 00    	jne    9f90 <line_parser+0x9bf>
    9ef5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9ef9:	48 89 c7             	mov    rdi,rax
    9efc:	e8 39 f6 ff ff       	call   953a <sc_strip>
    9f01:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f05:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    9f0b:	3d 80 00 00 00       	cmp    eax,0x80
    9f10:	75 58                	jne    9f6a <line_parser+0x999>
    9f12:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f16:	48 83 c0 06          	add    rax,0x6
    9f1a:	ba ff 00 00 00       	mov    edx,0xff
    9f1f:	be 00 00 00 00       	mov    esi,0x0
    9f24:	48 89 c7             	mov    rdi,rax
    9f27:	e8 b9 f5 ff ff       	call   94e5 <numeric_check>
    9f2c:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    9f2f:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    9f33:	75 16                	jne    9f4b <line_parser+0x97a>
    9f35:	48 8d 3d 03 3c 00 00 	lea    rdi,[rip+0x3c03]        # db3f <_IO_stdin_used+0x1b3f>
    9f3c:	e8 7f 85 ff ff       	call   24c0 <puts@plt>
    9f41:	bf ff ff ff ff       	mov    edi,0xffffffff
    9f46:	e8 95 85 ff ff       	call   24e0 <exit@plt>
    9f4b:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    9f4e:	89 c2                	mov    edx,eax
    9f50:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f54:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    9f5a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f5e:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    9f65:	e9 f7 04 00 00       	jmp    a461 <line_parser+0xe90>
    9f6a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f6e:	48 83 c0 20          	add    rax,0x20
    9f72:	48 89 c6             	mov    rsi,rax
    9f75:	48 8d 3d dc 3b 00 00 	lea    rdi,[rip+0x3bdc]        # db58 <_IO_stdin_used+0x1b58>
    9f7c:	b8 00 00 00 00       	mov    eax,0x0
    9f81:	e8 ea 84 ff ff       	call   2470 <printf@plt>
    9f86:	bf ff ff ff ff       	mov    edi,0xffffffff
    9f8b:	e8 50 85 ff ff       	call   24e0 <exit@plt>
    9f90:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f94:	ba 06 00 00 00       	mov    edx,0x6
    9f99:	48 8d 35 ef 3b 00 00 	lea    rsi,[rip+0x3bef]        # db8f <_IO_stdin_used+0x1b8f>
    9fa0:	48 89 c7             	mov    rdi,rax
    9fa3:	e8 88 85 ff ff       	call   2530 <strncmp@plt>
    9fa8:	85 c0                	test   eax,eax
    9faa:	0f 85 86 00 00 00    	jne    a036 <line_parser+0xa65>
    9fb0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fb4:	48 89 c7             	mov    rdi,rax
    9fb7:	e8 7e f5 ff ff       	call   953a <sc_strip>
    9fbc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9fc0:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    9fc6:	3d 80 00 00 00       	cmp    eax,0x80
    9fcb:	75 58                	jne    a025 <line_parser+0xa54>
    9fcd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fd1:	48 83 c0 06          	add    rax,0x6
    9fd5:	ba ff 00 00 00       	mov    edx,0xff
    9fda:	be 00 00 00 00       	mov    esi,0x0
    9fdf:	48 89 c7             	mov    rdi,rax
    9fe2:	e8 fe f4 ff ff       	call   94e5 <numeric_check>
    9fe7:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    9fea:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    9fee:	75 16                	jne    a006 <line_parser+0xa35>
    9ff0:	48 8d 3d 9f 3b 00 00 	lea    rdi,[rip+0x3b9f]        # db96 <_IO_stdin_used+0x1b96>
    9ff7:	e8 c4 84 ff ff       	call   24c0 <puts@plt>
    9ffc:	bf ff ff ff ff       	mov    edi,0xffffffff
    a001:	e8 da 84 ff ff       	call   24e0 <exit@plt>
    a006:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a009:	89 c2                	mov    edx,eax
    a00b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a00f:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a015:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a019:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a020:	e9 3c 04 00 00       	jmp    a461 <line_parser+0xe90>
    a025:	48 8d 3d 84 3b 00 00 	lea    rdi,[rip+0x3b84]        # dbb0 <_IO_stdin_used+0x1bb0>
    a02c:	e8 8f 84 ff ff       	call   24c0 <puts@plt>
    a031:	e9 2b 04 00 00       	jmp    a461 <line_parser+0xe90>
    a036:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a03a:	ba 08 00 00 00       	mov    edx,0x8
    a03f:	48 8d 35 9c 3b 00 00 	lea    rsi,[rip+0x3b9c]        # dbe2 <_IO_stdin_used+0x1be2>
    a046:	48 89 c7             	mov    rdi,rax
    a049:	e8 e2 84 ff ff       	call   2530 <strncmp@plt>
    a04e:	85 c0                	test   eax,eax
    a050:	0f 85 8c 00 00 00    	jne    a0e2 <line_parser+0xb11>
    a056:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a05a:	48 89 c7             	mov    rdi,rax
    a05d:	e8 d8 f4 ff ff       	call   953a <sc_strip>
    a062:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a066:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a06c:	3d 80 00 00 00       	cmp    eax,0x80
    a071:	75 59                	jne    a0cc <line_parser+0xafb>
    a073:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a077:	48 83 c0 08          	add    rax,0x8
    a07b:	ba ff ff 00 00       	mov    edx,0xffff
    a080:	be 00 00 00 00       	mov    esi,0x0
    a085:	48 89 c7             	mov    rdi,rax
    a088:	e8 58 f4 ff ff       	call   94e5 <numeric_check>
    a08d:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    a090:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    a094:	75 16                	jne    a0ac <line_parser+0xadb>
    a096:	48 8d 3d 4e 3b 00 00 	lea    rdi,[rip+0x3b4e]        # dbeb <_IO_stdin_used+0x1beb>
    a09d:	e8 1e 84 ff ff       	call   24c0 <puts@plt>
    a0a2:	bf ff ff ff ff       	mov    edi,0xffffffff
    a0a7:	e8 34 84 ff ff       	call   24e0 <exit@plt>
    a0ac:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    a0af:	89 c2                	mov    edx,eax
    a0b1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0b5:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a0bc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0c0:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a0c7:	e9 95 03 00 00       	jmp    a461 <line_parser+0xe90>
    a0cc:	48 8d 3d 35 3b 00 00 	lea    rdi,[rip+0x3b35]        # dc08 <_IO_stdin_used+0x1c08>
    a0d3:	e8 e8 83 ff ff       	call   24c0 <puts@plt>
    a0d8:	bf ff ff ff ff       	mov    edi,0xffffffff
    a0dd:	e8 fe 83 ff ff       	call   24e0 <exit@plt>
    a0e2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0e6:	ba 09 00 00 00       	mov    edx,0x9
    a0eb:	48 8d 35 4a 3b 00 00 	lea    rsi,[rip+0x3b4a]        # dc3c <_IO_stdin_used+0x1c3c>
    a0f2:	48 89 c7             	mov    rdi,rax
    a0f5:	e8 36 84 ff ff       	call   2530 <strncmp@plt>
    a0fa:	85 c0                	test   eax,eax
    a0fc:	75 7a                	jne    a178 <line_parser+0xba7>
    a0fe:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a102:	48 89 c7             	mov    rdi,rax
    a105:	e8 30 f4 ff ff       	call   953a <sc_strip>
    a10a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a10e:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a114:	3d 80 00 00 00       	cmp    eax,0x80
    a119:	0f 85 42 03 00 00    	jne    a461 <line_parser+0xe90>
    a11f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a123:	48 83 c0 09          	add    rax,0x9
    a127:	ba ff ff 00 00       	mov    edx,0xffff
    a12c:	be 00 00 00 00       	mov    esi,0x0
    a131:	48 89 c7             	mov    rdi,rax
    a134:	e8 ac f3 ff ff       	call   94e5 <numeric_check>
    a139:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    a13c:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    a140:	75 16                	jne    a158 <line_parser+0xb87>
    a142:	48 8d 3d fd 3a 00 00 	lea    rdi,[rip+0x3afd]        # dc46 <_IO_stdin_used+0x1c46>
    a149:	e8 72 83 ff ff       	call   24c0 <puts@plt>
    a14e:	bf ff ff ff ff       	mov    edi,0xffffffff
    a153:	e8 88 83 ff ff       	call   24e0 <exit@plt>
    a158:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    a15b:	89 c2                	mov    edx,eax
    a15d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a161:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a168:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a16c:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a173:	e9 e9 02 00 00       	jmp    a461 <line_parser+0xe90>
    a178:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a17c:	ba 04 00 00 00       	mov    edx,0x4
    a181:	48 8d 35 da 3a 00 00 	lea    rsi,[rip+0x3ada]        # dc62 <_IO_stdin_used+0x1c62>
    a188:	48 89 c7             	mov    rdi,rax
    a18b:	e8 a0 83 ff ff       	call   2530 <strncmp@plt>
    a190:	85 c0                	test   eax,eax
    a192:	75 64                	jne    a1f8 <line_parser+0xc27>
    a194:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a198:	48 89 c7             	mov    rdi,rax
    a19b:	e8 9a f3 ff ff       	call   953a <sc_strip>
    a1a0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1a4:	48 83 c0 04          	add    rax,0x4
    a1a8:	ba ff 00 00 00       	mov    edx,0xff
    a1ad:	be 00 00 00 00       	mov    esi,0x0
    a1b2:	48 89 c7             	mov    rdi,rax
    a1b5:	e8 2b f3 ff ff       	call   94e5 <numeric_check>
    a1ba:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    a1bd:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    a1c1:	75 16                	jne    a1d9 <line_parser+0xc08>
    a1c3:	48 8d 3d 9d 3a 00 00 	lea    rdi,[rip+0x3a9d]        # dc67 <_IO_stdin_used+0x1c67>
    a1ca:	e8 f1 82 ff ff       	call   24c0 <puts@plt>
    a1cf:	bf ff ff ff ff       	mov    edi,0xffffffff
    a1d4:	e8 07 83 ff ff       	call   24e0 <exit@plt>
    a1d9:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a1dc:	89 c2                	mov    edx,eax
    a1de:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a1e2:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a1e8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a1ec:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a1f3:	e9 69 02 00 00       	jmp    a461 <line_parser+0xe90>
    a1f8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1fc:	ba 07 00 00 00       	mov    edx,0x7
    a201:	48 8d 35 71 3a 00 00 	lea    rsi,[rip+0x3a71]        # dc79 <_IO_stdin_used+0x1c79>
    a208:	48 89 c7             	mov    rdi,rax
    a20b:	e8 20 83 ff ff       	call   2530 <strncmp@plt>
    a210:	85 c0                	test   eax,eax
    a212:	75 6e                	jne    a282 <line_parser+0xcb1>
    a214:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a218:	48 89 c7             	mov    rdi,rax
    a21b:	e8 1a f3 ff ff       	call   953a <sc_strip>
    a220:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a224:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a22a:	83 f8 7e             	cmp    eax,0x7e
    a22d:	75 3d                	jne    a26c <line_parser+0xc9b>
    a22f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a233:	48 89 c7             	mov    rdi,rax
    a236:	e8 a5 83 ff ff       	call   25e0 <strlen@plt>
    a23b:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a23f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a243:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a247:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a24b:	48 05 53 03 00 00    	add    rax,0x353
    a251:	48 89 ce             	mov    rsi,rcx
    a254:	48 89 c7             	mov    rdi,rax
    a257:	e8 44 85 ff ff       	call   27a0 <strncpy@plt>
    a25c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a260:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a267:	e9 f5 01 00 00       	jmp    a461 <line_parser+0xe90>
    a26c:	48 8d 3d 15 3a 00 00 	lea    rdi,[rip+0x3a15]        # dc88 <_IO_stdin_used+0x1c88>
    a273:	e8 48 82 ff ff       	call   24c0 <puts@plt>
    a278:	bf ff ff ff ff       	mov    edi,0xffffffff
    a27d:	e8 5e 82 ff ff       	call   24e0 <exit@plt>
    a282:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a286:	ba 04 00 00 00       	mov    edx,0x4
    a28b:	48 8d 35 27 3a 00 00 	lea    rsi,[rip+0x3a27]        # dcb9 <_IO_stdin_used+0x1cb9>
    a292:	48 89 c7             	mov    rdi,rax
    a295:	e8 96 82 ff ff       	call   2530 <strncmp@plt>
    a29a:	85 c0                	test   eax,eax
    a29c:	75 78                	jne    a316 <line_parser+0xd45>
    a29e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2a2:	48 89 c7             	mov    rdi,rax
    a2a5:	e8 90 f2 ff ff       	call   953a <sc_strip>
    a2aa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2ae:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a2b4:	83 f8 7e             	cmp    eax,0x7e
    a2b7:	0f 85 a4 01 00 00    	jne    a461 <line_parser+0xe90>
    a2bd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2c1:	48 83 c0 04          	add    rax,0x4
    a2c5:	ba ff ff ff ff       	mov    edx,0xffffffff
    a2ca:	be 00 00 00 00       	mov    esi,0x0
    a2cf:	48 89 c7             	mov    rdi,rax
    a2d2:	e8 0e f2 ff ff       	call   94e5 <numeric_check>
    a2d7:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a2da:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    a2de:	75 16                	jne    a2f6 <line_parser+0xd25>
    a2e0:	48 8d 3d d7 39 00 00 	lea    rdi,[rip+0x39d7]        # dcbe <_IO_stdin_used+0x1cbe>
    a2e7:	e8 d4 81 ff ff       	call   24c0 <puts@plt>
    a2ec:	bf ff ff ff ff       	mov    edi,0xffffffff
    a2f1:	e8 ea 81 ff ff       	call   24e0 <exit@plt>
    a2f6:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a2f9:	89 c2                	mov    edx,eax
    a2fb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2ff:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a306:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a30a:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a311:	e9 4b 01 00 00       	jmp    a461 <line_parser+0xe90>
    a316:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a31a:	ba 06 00 00 00       	mov    edx,0x6
    a31f:	48 8d 35 aa 39 00 00 	lea    rsi,[rip+0x39aa]        # dcd0 <_IO_stdin_used+0x1cd0>
    a326:	48 89 c7             	mov    rdi,rax
    a329:	e8 02 82 ff ff       	call   2530 <strncmp@plt>
    a32e:	85 c0                	test   eax,eax
    a330:	75 7c                	jne    a3ae <line_parser+0xddd>
    a332:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a336:	48 89 c7             	mov    rdi,rax
    a339:	e8 a2 82 ff ff       	call   25e0 <strlen@plt>
    a33e:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a342:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a346:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a34a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a34e:	48 05 10 02 00 00    	add    rax,0x210
    a354:	48 89 ce             	mov    rsi,rcx
    a357:	48 89 c7             	mov    rdi,rax
    a35a:	e8 41 84 ff ff       	call   27a0 <strncpy@plt>
    a35f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a363:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a36a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a36e:	48 05 d0 01 00 00    	add    rax,0x1d0
    a374:	ba 00 00 00 00       	mov    edx,0x0
    a379:	48 89 ce             	mov    rsi,rcx
    a37c:	48 89 c7             	mov    rdi,rax
    a37f:	e8 2c 83 ff ff       	call   26b0 <regcomp@plt>
    a384:	85 c0                	test   eax,eax
    a386:	74 16                	je     a39e <line_parser+0xdcd>
    a388:	48 8d 3d 49 39 00 00 	lea    rdi,[rip+0x3949]        # dcd8 <_IO_stdin_used+0x1cd8>
    a38f:	e8 2c 81 ff ff       	call   24c0 <puts@plt>
    a394:	bf ff ff ff ff       	mov    edi,0xffffffff
    a399:	e8 42 81 ff ff       	call   24e0 <exit@plt>
    a39e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3a2:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a3a9:	e9 b3 00 00 00       	jmp    a461 <line_parser+0xe90>
    a3ae:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3b2:	ba 06 00 00 00       	mov    edx,0x6
    a3b7:	48 8d 35 3f 39 00 00 	lea    rsi,[rip+0x393f]        # dcfd <_IO_stdin_used+0x1cfd>
    a3be:	48 89 c7             	mov    rdi,rax
    a3c1:	e8 6a 81 ff ff       	call   2530 <strncmp@plt>
    a3c6:	85 c0                	test   eax,eax
    a3c8:	75 2a                	jne    a3f4 <line_parser+0xe23>
    a3ca:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3ce:	48 89 c7             	mov    rdi,rax
    a3d1:	e8 64 f1 ff ff       	call   953a <sc_strip>
    a3d6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3da:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a3de:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3e2:	ba 01 00 00 00       	mov    edx,0x1
    a3e7:	48 89 ce             	mov    rsi,rcx
    a3ea:	48 89 c7             	mov    rdi,rax
    a3ed:	e8 6c 03 00 00       	call   a75e <d_op_parser>
    a3f2:	eb 6d                	jmp    a461 <line_parser+0xe90>
    a3f4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3f8:	ba 07 00 00 00       	mov    edx,0x7
    a3fd:	48 8d 35 00 39 00 00 	lea    rsi,[rip+0x3900]        # dd04 <_IO_stdin_used+0x1d04>
    a404:	48 89 c7             	mov    rdi,rax
    a407:	e8 24 81 ff ff       	call   2530 <strncmp@plt>
    a40c:	85 c0                	test   eax,eax
    a40e:	75 27                	jne    a437 <line_parser+0xe66>
    a410:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a414:	48 89 c7             	mov    rdi,rax
    a417:	e8 1e f1 ff ff       	call   953a <sc_strip>
    a41c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a420:	48 83 c0 07          	add    rax,0x7
    a424:	48 89 c7             	mov    rdi,rax
    a427:	e8 74 82 ff ff       	call   26a0 <atoi@plt>
    a42c:	89 c2                	mov    edx,eax
    a42e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a432:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a435:	eb 2a                	jmp    a461 <line_parser+0xe90>
    a437:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a43b:	ba 0b 00 00 00       	mov    edx,0xb
    a440:	48 8d 35 c5 38 00 00 	lea    rsi,[rip+0x38c5]        # dd0c <_IO_stdin_used+0x1d0c>
    a447:	48 89 c7             	mov    rdi,rax
    a44a:	e8 e1 80 ff ff       	call   2530 <strncmp@plt>
    a44f:	85 c0                	test   eax,eax
    a451:	75 0e                	jne    a461 <line_parser+0xe90>
    a453:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a457:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a45e:	00 00 00 
    a461:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a464:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    a467:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a46b:	48 89 c7             	mov    rdi,rax
    a46e:	e8 6d 81 ff ff       	call   25e0 <strlen@plt>
    a473:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a477:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a47b:	48 01 d0             	add    rax,rdx
    a47e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a481:	3c 29                	cmp    al,0x29
    a483:	74 3d                	je     a4c2 <line_parser+0xef1>
    a485:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a488:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    a48b:	7f 0c                	jg     a499 <line_parser+0xec8>
    a48d:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    a490:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    a493:	0f 8e 54 f2 ff ff    	jle    96ed <line_parser+0x11c>
    a499:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    a4a0:	83 f0 01             	xor    eax,0x1
    a4a3:	84 c0                	test   al,al
    a4a5:	74 1c                	je     a4c3 <line_parser+0xef2>
    a4a7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4ab:	48 83 c0 20          	add    rax,0x20
    a4af:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    a4b6:	6c 65 64 
    a4b9:	48 89 18             	mov    QWORD PTR [rax],rbx
    a4bc:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    a4c0:	eb 01                	jmp    a4c3 <line_parser+0xef2>
    a4c2:	90                   	nop
    a4c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a4c7:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a4ce:	00 00 
    a4d0:	74 05                	je     a4d7 <line_parser+0xf06>
    a4d2:	e8 49 82 ff ff       	call   2720 <__stack_chk_fail@plt>
    a4d7:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    a4db:	c9                   	leave  
    a4dc:	c3                   	ret    

000000000000a4dd <rule_processor>:
    a4dd:	f3 0f 1e fa          	endbr64 
    a4e1:	55                   	push   rbp
    a4e2:	48 89 e5             	mov    rbp,rsp
    a4e5:	48 83 ec 10          	sub    rsp,0x10
    a4e9:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    a4f0:	eb 22                	jmp    a514 <rule_processor+0x37>
    a4f2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a4f5:	48 98                	cdqe   
    a4f7:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    a4fe:	48 8d 15 db 6d 00 00 	lea    rdx,[rip+0x6ddb]        # 112e0 <rules>
    a505:	48 01 d0             	add    rax,rdx
    a508:	48 89 c7             	mov    rdi,rax
    a50b:	e8 13 00 00 00       	call   a523 <process_rule>
    a510:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    a514:	8b 05 fa 6a 00 00    	mov    eax,DWORD PTR [rip+0x6afa]        # 11014 <num_rules>
    a51a:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    a51d:	7e d3                	jle    a4f2 <rule_processor+0x15>
    a51f:	90                   	nop
    a520:	90                   	nop
    a521:	c9                   	leave  
    a522:	c3                   	ret    

000000000000a523 <process_rule>:
    a523:	f3 0f 1e fa          	endbr64 
    a527:	55                   	push   rbp
    a528:	48 89 e5             	mov    rbp,rsp
    a52b:	41 57                	push   r15
    a52d:	41 56                	push   r14
    a52f:	41 54                	push   r12
    a531:	53                   	push   rbx
    a532:	48 83 ec 40          	sub    rsp,0x40
    a536:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    a53a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a541:	00 00 
    a543:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    a547:	31 c0                	xor    eax,eax
    a549:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a54d:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    a554:	83 f0 01             	xor    eax,0x1
    a557:	84 c0                	test   al,al
    a559:	0f 84 dd 01 00 00    	je     a73c <process_rule+0x219>
    a55f:	48 89 e0             	mov    rax,rsp
    a562:	49 89 c4             	mov    r12,rax
    a565:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a569:	48 83 c0 40          	add    rax,0x40
    a56d:	48 89 c7             	mov    rdi,rax
    a570:	e8 6b 80 ff ff       	call   25e0 <strlen@plt>
    a575:	48 83 c0 01          	add    rax,0x1
    a579:	48 01 c0             	add    rax,rax
    a57c:	48 89 c2             	mov    rdx,rax
    a57f:	48 83 ea 01          	sub    rdx,0x1
    a583:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    a587:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    a58b:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    a592:	00 
    a593:	49 89 c6             	mov    r14,rax
    a596:	41 bf 00 00 00 00    	mov    r15d,0x0
    a59c:	ba 10 00 00 00       	mov    edx,0x10
    a5a1:	48 83 ea 01          	sub    rdx,0x1
    a5a5:	48 01 d0             	add    rax,rdx
    a5a8:	bb 10 00 00 00       	mov    ebx,0x10
    a5ad:	ba 00 00 00 00       	mov    edx,0x0
    a5b2:	48 f7 f3             	div    rbx
    a5b5:	48 6b c0 10          	imul   rax,rax,0x10
    a5b9:	48 89 c1             	mov    rcx,rax
    a5bc:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    a5c3:	48 89 e2             	mov    rdx,rsp
    a5c6:	48 29 ca             	sub    rdx,rcx
    a5c9:	48 39 d4             	cmp    rsp,rdx
    a5cc:	74 12                	je     a5e0 <process_rule+0xbd>
    a5ce:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    a5d5:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    a5dc:	00 00 
    a5de:	eb e9                	jmp    a5c9 <process_rule+0xa6>
    a5e0:	48 89 c2             	mov    rdx,rax
    a5e3:	81 e2 ff 0f 00 00    	and    edx,0xfff
    a5e9:	48 29 d4             	sub    rsp,rdx
    a5ec:	48 89 c2             	mov    rdx,rax
    a5ef:	81 e2 ff 0f 00 00    	and    edx,0xfff
    a5f5:	48 85 d2             	test   rdx,rdx
    a5f8:	74 10                	je     a60a <process_rule+0xe7>
    a5fa:	25 ff 0f 00 00       	and    eax,0xfff
    a5ff:	48 83 e8 08          	sub    rax,0x8
    a603:	48 01 e0             	add    rax,rsp
    a606:	48 83 08 00          	or     QWORD PTR [rax],0x0
    a60a:	48 89 e0             	mov    rax,rsp
    a60d:	48 83 c0 00          	add    rax,0x0
    a611:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    a615:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    a61c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a620:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a624:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a628:	48 05 c8 02 00 00    	add    rax,0x2c8
    a62e:	48 89 d6             	mov    rsi,rdx
    a631:	48 89 c7             	mov    rdi,rax
    a634:	e8 17 81 ff ff       	call   2750 <strcpy@plt>
    a639:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    a640:	e9 a4 00 00 00       	jmp    a6e9 <process_rule+0x1c6>
    a645:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a649:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a64c:	48 98                	cdqe   
    a64e:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a653:	3c 7c                	cmp    al,0x7c
    a655:	75 18                	jne    a66f <process_rule+0x14c>
    a657:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    a65b:	74 09                	je     a666 <process_rule+0x143>
    a65d:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    a664:	eb 7f                	jmp    a6e5 <process_rule+0x1c2>
    a666:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    a66d:	eb 76                	jmp    a6e5 <process_rule+0x1c2>
    a66f:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    a673:	75 3a                	jne    a6af <process_rule+0x18c>
    a675:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a679:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a67c:	48 98                	cdqe   
    a67e:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a683:	0f be c0             	movsx  eax,al
    a686:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    a689:	48 63 d2             	movsxd rdx,edx
    a68c:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    a690:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    a694:	48 01 d1             	add    rcx,rdx
    a697:	89 c2                	mov    edx,eax
    a699:	48 8d 35 78 36 00 00 	lea    rsi,[rip+0x3678]        # dd18 <_IO_stdin_used+0x1d18>
    a6a0:	48 89 cf             	mov    rdi,rcx
    a6a3:	b8 00 00 00 00       	mov    eax,0x0
    a6a8:	e8 53 7f ff ff       	call   2600 <sprintf@plt>
    a6ad:	eb 36                	jmp    a6e5 <process_rule+0x1c2>
    a6af:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a6b3:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a6b6:	48 98                	cdqe   
    a6b8:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a6bd:	0f be c0             	movsx  eax,al
    a6c0:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    a6c3:	01 d2                	add    edx,edx
    a6c5:	48 63 ca             	movsxd rcx,edx
    a6c8:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    a6cc:	48 01 d1             	add    rcx,rdx
    a6cf:	89 c2                	mov    edx,eax
    a6d1:	48 8d 35 43 36 00 00 	lea    rsi,[rip+0x3643]        # dd1b <_IO_stdin_used+0x1d1b>
    a6d8:	48 89 cf             	mov    rdi,rcx
    a6db:	b8 00 00 00 00       	mov    eax,0x0
    a6e0:	e8 1b 7f ff ff       	call   2600 <sprintf@plt>
    a6e5:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    a6e9:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a6ec:	48 63 d8             	movsxd rbx,eax
    a6ef:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6f3:	48 83 c0 40          	add    rax,0x40
    a6f7:	48 89 c7             	mov    rdi,rax
    a6fa:	e8 e1 7e ff ff       	call   25e0 <strlen@plt>
    a6ff:	48 39 c3             	cmp    rbx,rax
    a702:	0f 82 3d ff ff ff    	jb     a645 <process_rule+0x122>
    a708:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a70c:	48 83 c0 40          	add    rax,0x40
    a710:	ba ff 00 00 00       	mov    edx,0xff
    a715:	be 00 00 00 00       	mov    esi,0x0
    a71a:	48 89 c7             	mov    rdi,rax
    a71d:	e8 5e 7d ff ff       	call   2480 <memset@plt>
    a722:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a726:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a72a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a72e:	48 89 c6             	mov    rsi,rax
    a731:	48 89 d7             	mov    rdi,rdx
    a734:	e8 17 80 ff ff       	call   2750 <strcpy@plt>
    a739:	4c 89 e4             	mov    rsp,r12
    a73c:	90                   	nop
    a73d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a741:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a748:	00 00 
    a74a:	74 05                	je     a751 <process_rule+0x22e>
    a74c:	e8 cf 7f ff ff       	call   2720 <__stack_chk_fail@plt>
    a751:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    a755:	5b                   	pop    rbx
    a756:	41 5c                	pop    r12
    a758:	41 5e                	pop    r14
    a75a:	41 5f                	pop    r15
    a75c:	5d                   	pop    rbp
    a75d:	c3                   	ret    

000000000000a75e <d_op_parser>:
    a75e:	f3 0f 1e fa          	endbr64 
    a762:	55                   	push   rbp
    a763:	48 89 e5             	mov    rbp,rsp
    a766:	48 83 ec 20          	sub    rsp,0x20
    a76a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a76e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    a772:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    a775:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a779:	48 89 c7             	mov    rdi,rax
    a77c:	e8 f7 e9 ff ff       	call   9178 <isdigit>
    a781:	84 c0                	test   al,al
    a783:	74 23                	je     a7a8 <d_op_parser+0x4a>
    a785:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a789:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    a790:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a794:	48 89 c7             	mov    rdi,rax
    a797:	e8 04 7f ff ff       	call   26a0 <atoi@plt>
    a79c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a7a0:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a7a3:	e9 59 01 00 00       	jmp    a901 <d_op_parser+0x1a3>
    a7a8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7ac:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a7af:	0f b6 15 6a 35 00 00 	movzx  edx,BYTE PTR [rip+0x356a]        # dd20 <_IO_stdin_used+0x1d20>
    a7b6:	0f b6 c0             	movzx  eax,al
    a7b9:	0f b6 d2             	movzx  edx,dl
    a7bc:	29 d0                	sub    eax,edx
    a7be:	85 c0                	test   eax,eax
    a7c0:	75 27                	jne    a7e9 <d_op_parser+0x8b>
    a7c2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a7c6:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    a7cd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7d1:	48 83 c0 01          	add    rax,0x1
    a7d5:	48 89 c7             	mov    rdi,rax
    a7d8:	e8 c3 7e ff ff       	call   26a0 <atoi@plt>
    a7dd:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a7e1:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a7e4:	e9 18 01 00 00       	jmp    a901 <d_op_parser+0x1a3>
    a7e9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7ed:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a7f0:	0f b6 15 2b 35 00 00 	movzx  edx,BYTE PTR [rip+0x352b]        # dd22 <_IO_stdin_used+0x1d22>
    a7f7:	0f b6 c0             	movzx  eax,al
    a7fa:	0f b6 d2             	movzx  edx,dl
    a7fd:	29 d0                	sub    eax,edx
    a7ff:	85 c0                	test   eax,eax
    a801:	75 27                	jne    a82a <d_op_parser+0xcc>
    a803:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a807:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    a80e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a812:	48 83 c0 01          	add    rax,0x1
    a816:	48 89 c7             	mov    rdi,rax
    a819:	e8 82 7e ff ff       	call   26a0 <atoi@plt>
    a81e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a822:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a825:	e9 d7 00 00 00       	jmp    a901 <d_op_parser+0x1a3>
    a82a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a82e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a831:	0f b6 15 ec 34 00 00 	movzx  edx,BYTE PTR [rip+0x34ec]        # dd24 <_IO_stdin_used+0x1d24>
    a838:	0f b6 c0             	movzx  eax,al
    a83b:	0f b6 d2             	movzx  edx,dl
    a83e:	29 d0                	sub    eax,edx
    a840:	85 c0                	test   eax,eax
    a842:	75 27                	jne    a86b <d_op_parser+0x10d>
    a844:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a848:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    a84f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a853:	48 83 c0 01          	add    rax,0x1
    a857:	48 89 c7             	mov    rdi,rax
    a85a:	e8 41 7e ff ff       	call   26a0 <atoi@plt>
    a85f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a863:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a866:	e9 96 00 00 00       	jmp    a901 <d_op_parser+0x1a3>
    a86b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a86f:	ba 02 00 00 00       	mov    edx,0x2
    a874:	48 8d 35 ab 34 00 00 	lea    rsi,[rip+0x34ab]        # dd26 <_IO_stdin_used+0x1d26>
    a87b:	48 89 c7             	mov    rdi,rax
    a87e:	e8 ad 7c ff ff       	call   2530 <strncmp@plt>
    a883:	85 c0                	test   eax,eax
    a885:	75 24                	jne    a8ab <d_op_parser+0x14d>
    a887:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a88b:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    a892:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a896:	48 83 c0 02          	add    rax,0x2
    a89a:	48 89 c7             	mov    rdi,rax
    a89d:	e8 fe 7d ff ff       	call   26a0 <atoi@plt>
    a8a2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a8a6:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a8a9:	eb 56                	jmp    a901 <d_op_parser+0x1a3>
    a8ab:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a8af:	ba 02 00 00 00       	mov    edx,0x2
    a8b4:	48 8d 35 6e 34 00 00 	lea    rsi,[rip+0x346e]        # dd29 <_IO_stdin_used+0x1d29>
    a8bb:	48 89 c7             	mov    rdi,rax
    a8be:	e8 6d 7c ff ff       	call   2530 <strncmp@plt>
    a8c3:	85 c0                	test   eax,eax
    a8c5:	75 24                	jne    a8eb <d_op_parser+0x18d>
    a8c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a8cb:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    a8d2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a8d6:	48 83 c0 02          	add    rax,0x2
    a8da:	48 89 c7             	mov    rdi,rax
    a8dd:	e8 be 7d ff ff       	call   26a0 <atoi@plt>
    a8e2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a8e6:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    a8e9:	eb 16                	jmp    a901 <d_op_parser+0x1a3>
    a8eb:	48 8d 3d 3a 34 00 00 	lea    rdi,[rip+0x343a]        # dd2c <_IO_stdin_used+0x1d2c>
    a8f2:	e8 c9 7b ff ff       	call   24c0 <puts@plt>
    a8f7:	bf ff ff ff ff       	mov    edi,0xffffffff
    a8fc:	e8 df 7b ff ff       	call   24e0 <exit@plt>
    a901:	c9                   	leave  
    a902:	c3                   	ret    

000000000000a903 <d_engine>:
    a903:	f3 0f 1e fa          	endbr64 
    a907:	55                   	push   rbp
    a908:	48 89 e5             	mov    rbp,rsp
    a90b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a90f:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    a913:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a917:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    a91a:	83 f8 ff             	cmp    eax,0xffffffff
    a91d:	75 0a                	jne    a929 <d_engine+0x26>
    a91f:	b8 01 00 00 00       	mov    eax,0x1
    a924:	e9 ea 00 00 00       	jmp    aa13 <d_engine+0x110>
    a929:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a92d:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    a930:	2d a1 00 00 00       	sub    eax,0xa1
    a935:	83 f8 05             	cmp    eax,0x5
    a938:	0f 87 d0 00 00 00    	ja     aa0e <d_engine+0x10b>
    a93e:	89 c0                	mov    eax,eax
    a940:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    a947:	00 
    a948:	48 8d 05 f5 33 00 00 	lea    rax,[rip+0x33f5]        # dd44 <_IO_stdin_used+0x1d44>
    a94f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    a952:	48 98                	cdqe   
    a954:	48 8d 15 e9 33 00 00 	lea    rdx,[rip+0x33e9]        # dd44 <_IO_stdin_used+0x1d44>
    a95b:	48 01 d0             	add    rax,rdx
    a95e:	3e ff e0             	notrack jmp rax
    a961:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a965:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    a968:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a96c:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    a96f:	39 c2                	cmp    edx,eax
    a971:	0f 85 87 00 00 00    	jne    a9fe <d_engine+0xfb>
    a977:	b8 01 00 00 00       	mov    eax,0x1
    a97c:	e9 92 00 00 00       	jmp    aa13 <d_engine+0x110>
    a981:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a985:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a988:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a98c:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a98f:	39 c2                	cmp    edx,eax
    a991:	76 6e                	jbe    aa01 <d_engine+0xfe>
    a993:	b8 01 00 00 00       	mov    eax,0x1
    a998:	eb 79                	jmp    aa13 <d_engine+0x110>
    a99a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a99e:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a9a1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9a5:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a9a8:	39 c2                	cmp    edx,eax
    a9aa:	72 58                	jb     aa04 <d_engine+0x101>
    a9ac:	b8 01 00 00 00       	mov    eax,0x1
    a9b1:	eb 60                	jmp    aa13 <d_engine+0x110>
    a9b3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a9b7:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a9ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9be:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a9c1:	39 c2                	cmp    edx,eax
    a9c3:	73 42                	jae    aa07 <d_engine+0x104>
    a9c5:	b8 01 00 00 00       	mov    eax,0x1
    a9ca:	eb 47                	jmp    aa13 <d_engine+0x110>
    a9cc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a9d0:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a9d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9d7:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a9da:	39 c2                	cmp    edx,eax
    a9dc:	77 2c                	ja     aa0a <d_engine+0x107>
    a9de:	b8 01 00 00 00       	mov    eax,0x1
    a9e3:	eb 2e                	jmp    aa13 <d_engine+0x110>
    a9e5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a9e9:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    a9ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9f0:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    a9f3:	39 c2                	cmp    edx,eax
    a9f5:	74 16                	je     aa0d <d_engine+0x10a>
    a9f7:	b8 01 00 00 00       	mov    eax,0x1
    a9fc:	eb 15                	jmp    aa13 <d_engine+0x110>
    a9fe:	90                   	nop
    a9ff:	eb 0d                	jmp    aa0e <d_engine+0x10b>
    aa01:	90                   	nop
    aa02:	eb 0a                	jmp    aa0e <d_engine+0x10b>
    aa04:	90                   	nop
    aa05:	eb 07                	jmp    aa0e <d_engine+0x10b>
    aa07:	90                   	nop
    aa08:	eb 04                	jmp    aa0e <d_engine+0x10b>
    aa0a:	90                   	nop
    aa0b:	eb 01                	jmp    aa0e <d_engine+0x10b>
    aa0d:	90                   	nop
    aa0e:	b8 00 00 00 00       	mov    eax,0x0
    aa13:	5d                   	pop    rbp
    aa14:	c3                   	ret    

000000000000aa15 <homenet_toi>:
    aa15:	f3 0f 1e fa          	endbr64 
    aa19:	55                   	push   rbp
    aa1a:	48 89 e5             	mov    rbp,rsp
    aa1d:	53                   	push   rbx
    aa1e:	48 83 ec 38          	sub    rsp,0x38
    aa22:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    aa26:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aa2d:	00 00 
    aa2f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    aa33:	31 c0                	xor    eax,eax
    aa35:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aa39:	48 8d 35 1c 33 00 00 	lea    rsi,[rip+0x331c]        # dd5c <_IO_stdin_used+0x1d5c>
    aa40:	48 89 c7             	mov    rdi,rax
    aa43:	e8 18 7d ff ff       	call   2760 <strtok@plt>
    aa48:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aa4c:	eb 4c                	jmp    aa9a <homenet_toi+0x85>
    aa4e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    aa52:	48 89 c7             	mov    rdi,rax
    aa55:	e8 46 7c ff ff       	call   26a0 <atoi@plt>
    aa5a:	89 c3                	mov    ebx,eax
    aa5c:	48 8d 45 df          	lea    rax,[rbp-0x21]
    aa60:	48 89 c7             	mov    rdi,rax
    aa63:	e8 78 7b ff ff       	call   25e0 <strlen@plt>
    aa68:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    aa6c:	48 01 d0             	add    rax,rdx
    aa6f:	89 da                	mov    edx,ebx
    aa71:	48 8d 35 e6 32 00 00 	lea    rsi,[rip+0x32e6]        # dd5e <_IO_stdin_used+0x1d5e>
    aa78:	48 89 c7             	mov    rdi,rax
    aa7b:	b8 00 00 00 00       	mov    eax,0x0
    aa80:	e8 7b 7b ff ff       	call   2600 <sprintf@plt>
    aa85:	48 8d 35 d0 32 00 00 	lea    rsi,[rip+0x32d0]        # dd5c <_IO_stdin_used+0x1d5c>
    aa8c:	bf 00 00 00 00       	mov    edi,0x0
    aa91:	e8 ca 7c ff ff       	call   2760 <strtok@plt>
    aa96:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aa9a:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    aa9f:	75 ad                	jne    aa4e <homenet_toi+0x39>
    aaa1:	48 8d 45 df          	lea    rax,[rbp-0x21]
    aaa5:	ba 10 00 00 00       	mov    edx,0x10
    aaaa:	be 00 00 00 00       	mov    esi,0x0
    aaaf:	48 89 c7             	mov    rdi,rax
    aab2:	e8 c9 7b ff ff       	call   2680 <strtol@plt>
    aab7:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    aabb:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    aac2:	00 00 
    aac4:	74 05                	je     aacb <homenet_toi+0xb6>
    aac6:	e8 55 7c ff ff       	call   2720 <__stack_chk_fail@plt>
    aacb:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    aacf:	c9                   	leave  
    aad0:	c3                   	ret    

000000000000aad1 <tcp_check_sum_passed>:
    aad1:	f3 0f 1e fa          	endbr64 
    aad5:	55                   	push   rbp
    aad6:	48 89 e5             	mov    rbp,rsp
    aad9:	41 54                	push   r12
    aadb:	53                   	push   rbx
    aadc:	48 83 ec 30          	sub    rsp,0x30
    aae0:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    aae4:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    aae8:	bb 00 00 00 00       	mov    ebx,0x0
    aaed:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aaf1:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    aaf5:	0f b7 c0             	movzx  eax,ax
    aaf8:	89 c7                	mov    edi,eax
    aafa:	e8 11 7b ff ff       	call   2610 <ntohs@plt>
    aaff:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    ab03:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    ab06:	83 e2 0f             	and    edx,0xf
    ab09:	0f b6 d2             	movzx  edx,dl
    ab0c:	c1 e2 02             	shl    edx,0x2
    ab0f:	29 d0                	sub    eax,edx
    ab11:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    ab15:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ab19:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    ab1d:	0f b7 c0             	movzx  eax,ax
    ab20:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    ab24:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    ab28:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    ab2c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ab30:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    ab36:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ab3a:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    ab3d:	c1 e8 10             	shr    eax,0x10
    ab40:	89 c0                	mov    eax,eax
    ab42:	0f b7 c0             	movzx  eax,ax
    ab45:	48 01 c3             	add    rbx,rax
    ab48:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ab4c:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    ab4f:	89 c0                	mov    eax,eax
    ab51:	0f b7 c0             	movzx  eax,ax
    ab54:	48 01 c3             	add    rbx,rax
    ab57:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ab5b:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    ab5e:	c1 e8 10             	shr    eax,0x10
    ab61:	89 c0                	mov    eax,eax
    ab63:	0f b7 c0             	movzx  eax,ax
    ab66:	48 01 c3             	add    rbx,rax
    ab69:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ab6d:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    ab70:	89 c0                	mov    eax,eax
    ab72:	0f b7 c0             	movzx  eax,ax
    ab75:	48 01 c3             	add    rbx,rax
    ab78:	bf 06 00 00 00       	mov    edi,0x6
    ab7d:	e8 4e 79 ff ff       	call   24d0 <htons@plt>
    ab82:	0f b7 c0             	movzx  eax,ax
    ab85:	48 01 c3             	add    rbx,rax
    ab88:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    ab8c:	89 c7                	mov    edi,eax
    ab8e:	e8 3d 79 ff ff       	call   24d0 <htons@plt>
    ab93:	0f b7 c0             	movzx  eax,ax
    ab96:	48 01 c3             	add    rbx,rax
    ab99:	eb 1a                	jmp    abb5 <tcp_check_sum_passed+0xe4>
    ab9b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ab9f:	48 8d 50 14          	lea    rdx,[rax+0x14]
    aba3:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    aba7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    abaa:	0f b6 c0             	movzx  eax,al
    abad:	48 01 c3             	add    rbx,rax
    abb0:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    abb5:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    abba:	77 df                	ja     ab9b <tcp_check_sum_passed+0xca>
    abbc:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    abc1:	74 1d                	je     abe0 <tcp_check_sum_passed+0x10f>
    abc3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    abc7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    abca:	0f b6 c0             	movzx  eax,al
    abcd:	48 01 c3             	add    rbx,rax
    abd0:	eb 0e                	jmp    abe0 <tcp_check_sum_passed+0x10f>
    abd2:	0f b7 c3             	movzx  eax,bx
    abd5:	48 c1 eb 10          	shr    rbx,0x10
    abd9:	48 89 da             	mov    rdx,rbx
    abdc:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    abe0:	48 89 d8             	mov    rax,rbx
    abe3:	48 c1 e8 10          	shr    rax,0x10
    abe7:	48 85 c0             	test   rax,rax
    abea:	75 e6                	jne    abd2 <tcp_check_sum_passed+0x101>
    abec:	48 f7 d3             	not    rbx
    abef:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    abf3:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    abf7:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    abfb:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    abff:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    ac03:	0f b7 c0             	movzx  eax,ax
    ac06:	89 c7                	mov    edi,eax
    ac08:	e8 03 7a ff ff       	call   2610 <ntohs@plt>
    ac0d:	44 0f b7 e0          	movzx  r12d,ax
    ac11:	89 d8                	mov    eax,ebx
    ac13:	0f b7 c0             	movzx  eax,ax
    ac16:	89 c7                	mov    edi,eax
    ac18:	e8 f3 79 ff ff       	call   2610 <ntohs@plt>
    ac1d:	0f b7 c0             	movzx  eax,ax
    ac20:	44 89 e2             	mov    edx,r12d
    ac23:	89 c6                	mov    esi,eax
    ac25:	48 8d 3d 37 31 00 00 	lea    rdi,[rip+0x3137]        # dd63 <_IO_stdin_used+0x1d63>
    ac2c:	b8 00 00 00 00       	mov    eax,0x0
    ac31:	e8 3a 78 ff ff       	call   2470 <printf@plt>
    ac36:	89 d8                	mov    eax,ebx
    ac38:	0f b7 c0             	movzx  eax,ax
    ac3b:	89 c7                	mov    edi,eax
    ac3d:	e8 ce 79 ff ff       	call   2610 <ntohs@plt>
    ac42:	89 c3                	mov    ebx,eax
    ac44:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    ac48:	0f b7 c0             	movzx  eax,ax
    ac4b:	89 c7                	mov    edi,eax
    ac4d:	e8 be 79 ff ff       	call   2610 <ntohs@plt>
    ac52:	66 39 c3             	cmp    bx,ax
    ac55:	75 07                	jne    ac5e <tcp_check_sum_passed+0x18d>
    ac57:	b8 01 00 00 00       	mov    eax,0x1
    ac5c:	eb 05                	jmp    ac63 <tcp_check_sum_passed+0x192>
    ac5e:	b8 00 00 00 00       	mov    eax,0x0
    ac63:	48 83 c4 30          	add    rsp,0x30
    ac67:	5b                   	pop    rbx
    ac68:	41 5c                	pop    r12
    ac6a:	5d                   	pop    rbp
    ac6b:	c3                   	ret    

000000000000ac6c <run_hello_script>:
    ac6c:	f3 0f 1e fa          	endbr64 
    ac70:	55                   	push   rbp
    ac71:	48 89 e5             	mov    rbp,rsp
    ac74:	48 83 ec 10          	sub    rsp,0x10
    ac78:	e8 73 7a ff ff       	call   26f0 <luaL_newstate@plt>
    ac7d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ac81:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac85:	48 89 c7             	mov    rdi,rax
    ac88:	e8 83 7a ff ff       	call   2710 <luaL_openlibs@plt>
    ac8d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac91:	ba 00 00 00 00       	mov    edx,0x0
    ac96:	48 8d 35 db 30 00 00 	lea    rsi,[rip+0x30db]        # dd78 <_IO_stdin_used+0x1d78>
    ac9d:	48 89 c7             	mov    rdi,rax
    aca0:	e8 eb 79 ff ff       	call   2690 <luaL_loadfilex@plt>
    aca5:	85 c0                	test   eax,eax
    aca7:	75 2b                	jne    acd4 <run_hello_script+0x68>
    aca9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acad:	41 b9 00 00 00 00    	mov    r9d,0x0
    acb3:	41 b8 00 00 00 00    	mov    r8d,0x0
    acb9:	b9 00 00 00 00       	mov    ecx,0x0
    acbe:	ba ff ff ff ff       	mov    edx,0xffffffff
    acc3:	be 00 00 00 00       	mov    esi,0x0
    acc8:	48 89 c7             	mov    rdi,rax
    accb:	e8 70 79 ff ff       	call   2640 <lua_pcallk@plt>
    acd0:	85 c0                	test   eax,eax
    acd2:	74 07                	je     acdb <run_hello_script+0x6f>
    acd4:	b8 01 00 00 00       	mov    eax,0x1
    acd9:	eb 05                	jmp    ace0 <run_hello_script+0x74>
    acdb:	b8 00 00 00 00       	mov    eax,0x0
    ace0:	85 c0                	test   eax,eax
    ace2:	75 1e                	jne    ad02 <run_hello_script+0x96>
    ace4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ace8:	48 89 c7             	mov    rdi,rax
    aceb:	e8 f0 79 ff ff       	call   26e0 <lua_gettop@plt>
    acf0:	f7 d0                	not    eax
    acf2:	89 c2                	mov    edx,eax
    acf4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acf8:	89 d6                	mov    esi,edx
    acfa:	48 89 c7             	mov    rdi,rax
    acfd:	e8 9e 78 ff ff       	call   25a0 <lua_settop@plt>
    ad02:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad06:	48 89 c7             	mov    rdi,rax
    ad09:	e8 62 7a ff ff       	call   2770 <lua_close@plt>
    ad0e:	90                   	nop
    ad0f:	c9                   	leave  
    ad10:	c3                   	ret    

000000000000ad11 <collect_scripts>:
    ad11:	f3 0f 1e fa          	endbr64 
    ad15:	55                   	push   rbp
    ad16:	48 89 e5             	mov    rbp,rsp
    ad19:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    ad20:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ad27:	00 00 
    ad29:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ad2d:	31 c0                	xor    eax,eax
    ad2f:	48 8d 35 60 30 00 00 	lea    rsi,[rip+0x3060]        # dd96 <_IO_stdin_used+0x1d96>
    ad36:	48 8d 3d 5b 30 00 00 	lea    rdi,[rip+0x305b]        # dd98 <_IO_stdin_used+0x1d98>
    ad3d:	e8 0e 78 ff ff       	call   2550 <fopen@plt>
    ad42:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    ad46:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    ad4b:	75 16                	jne    ad63 <collect_scripts+0x52>
    ad4d:	48 8d 3d 5c 30 00 00 	lea    rdi,[rip+0x305c]        # ddb0 <_IO_stdin_used+0x1db0>
    ad54:	e8 67 77 ff ff       	call   24c0 <puts@plt>
    ad59:	bf ff ff ff ff       	mov    edi,0xffffffff
    ad5e:	e8 7d 77 ff ff       	call   24e0 <exit@plt>
    ad63:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    ad6a:	00 00 00 00 
    ad6e:	48 8d 45 90          	lea    rax,[rbp-0x70]
    ad72:	ba 00 00 00 00       	mov    edx,0x0
    ad77:	48 8d 35 74 30 00 00 	lea    rsi,[rip+0x3074]        # ddf2 <_IO_stdin_used+0x1df2>
    ad7e:	48 89 c7             	mov    rdi,rax
    ad81:	e8 2a 79 ff ff       	call   26b0 <regcomp@plt>
    ad86:	e9 86 00 00 00       	jmp    ae11 <collect_scripts+0x100>
    ad8b:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    ad92:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ad95:	3c 23                	cmp    al,0x23
    ad97:	75 02                	jne    ad9b <collect_scripts+0x8a>
    ad99:	eb 76                	jmp    ae11 <collect_scripts+0x100>
    ad9b:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    ada2:	ba 0e 00 00 00       	mov    edx,0xe
    ada7:	48 8d 35 4e 30 00 00 	lea    rsi,[rip+0x304e]        # ddfc <_IO_stdin_used+0x1dfc>
    adae:	48 89 c7             	mov    rdi,rax
    adb1:	e8 7a 77 ff ff       	call   2530 <strncmp@plt>
    adb6:	85 c0                	test   eax,eax
    adb8:	75 34                	jne    adee <collect_scripts+0xdd>
    adba:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    adc1:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    adc5:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    adc9:	48 89 d6             	mov    rsi,rdx
    adcc:	48 89 c7             	mov    rdi,rax
    adcf:	e8 7c 79 ff ff       	call   2750 <strcpy@plt>
    add4:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    add8:	48 8d 35 2c 30 00 00 	lea    rsi,[rip+0x302c]        # de0b <_IO_stdin_used+0x1e0b>
    addf:	48 89 c7             	mov    rdi,rax
    ade2:	e8 c9 79 ff ff       	call   27b0 <strcspn@plt>
    ade7:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    adec:	eb 23                	jmp    ae11 <collect_scripts+0x100>
    adee:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    adf5:	48 8d 45 90          	lea    rax,[rbp-0x70]
    adf9:	41 b8 00 00 00 00    	mov    r8d,0x0
    adff:	b9 00 00 00 00       	mov    ecx,0x0
    ae04:	ba 00 00 00 00       	mov    edx,0x0
    ae09:	48 89 c7             	mov    rdi,rax
    ae0c:	e8 4f 77 ff ff       	call   2560 <regexec@plt>
    ae11:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    ae15:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    ae1c:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    ae23:	48 89 ce             	mov    rsi,rcx
    ae26:	48 89 c7             	mov    rdi,rax
    ae29:	e8 12 79 ff ff       	call   2740 <getline@plt>
    ae2e:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    ae32:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    ae37:	0f 85 4e ff ff ff    	jne    ad8b <collect_scripts+0x7a>
    ae3d:	90                   	nop
    ae3e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae42:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    ae49:	00 00 
    ae4b:	74 05                	je     ae52 <collect_scripts+0x141>
    ae4d:	e8 ce 78 ff ff       	call   2720 <__stack_chk_fail@plt>
    ae52:	c9                   	leave  
    ae53:	c3                   	ret    

000000000000ae54 <ip6decode>:
    ae54:	f3 0f 1e fa          	endbr64 
    ae58:	55                   	push   rbp
    ae59:	48 89 e5             	mov    rbp,rsp
    ae5c:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    ae63:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    ae6a:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    ae71:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ae78:	00 00 
    ae7a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ae7e:	31 c0                	xor    eax,eax
    ae80:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    ae87:	48 83 c0 0e          	add    rax,0xe
    ae8b:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    ae8f:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    ae93:	48 83 c0 08          	add    rax,0x8
    ae97:	48 89 c7             	mov    rdi,rax
    ae9a:	e8 b4 82 ff ff       	call   3153 <inet6_ntoa>
    ae9f:	48 89 c1             	mov    rcx,rax
    aea2:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    aea6:	ba 29 00 00 00       	mov    edx,0x29
    aeab:	48 89 ce             	mov    rsi,rcx
    aeae:	48 89 c7             	mov    rdi,rax
    aeb1:	e8 ea 78 ff ff       	call   27a0 <strncpy@plt>
    aeb6:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    aeba:	48 83 c0 18          	add    rax,0x18
    aebe:	48 89 c7             	mov    rdi,rax
    aec1:	e8 8d 82 ff ff       	call   3153 <inet6_ntoa>
    aec6:	48 89 c1             	mov    rcx,rax
    aec9:	48 8d 45 90          	lea    rax,[rbp-0x70]
    aecd:	ba 29 00 00 00       	mov    edx,0x29
    aed2:	48 89 ce             	mov    rsi,rcx
    aed5:	48 89 c7             	mov    rdi,rax
    aed8:	e8 c3 78 ff ff       	call   27a0 <strncpy@plt>
    aedd:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    aee1:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    aee5:	0f b6 c0             	movzx  eax,al
    aee8:	85 c0                	test   eax,eax
    aeea:	75 1c                	jne    af08 <ip6decode+0xb4>
    aeec:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    aef0:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    aef4:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    aefb:	48 89 ce             	mov    rsi,rcx
    aefe:	48 89 c7             	mov    rdi,rax
    af01:	e8 e8 8a ff ff       	call   39ee <ip6_icmp_decode>
    af06:	eb 28                	jmp    af30 <ip6decode+0xdc>
    af08:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    af0c:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    af10:	0f b6 c8             	movzx  ecx,al
    af13:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    af17:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    af1b:	48 89 c6             	mov    rsi,rax
    af1e:	48 8d 3d eb 2e 00 00 	lea    rdi,[rip+0x2eeb]        # de10 <_IO_stdin_used+0x1e10>
    af25:	b8 00 00 00 00       	mov    eax,0x0
    af2a:	e8 41 75 ff ff       	call   2470 <printf@plt>
    af2f:	90                   	nop
    af30:	90                   	nop
    af31:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af35:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    af3c:	00 00 
    af3e:	74 05                	je     af45 <ip6decode+0xf1>
    af40:	e8 db 77 ff ff       	call   2720 <__stack_chk_fail@plt>
    af45:	c9                   	leave  
    af46:	c3                   	ret    

000000000000af47 <crash_handler>:
    af47:	f3 0f 1e fa          	endbr64 
    af4b:	55                   	push   rbp
    af4c:	48 89 e5             	mov    rbp,rsp
    af4f:	41 54                	push   r12
    af51:	53                   	push   rbx
    af52:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    af59:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    af5f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    af66:	00 00 
    af68:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    af6c:	31 c0                	xor    eax,eax
    af6e:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    af75:	be 14 00 00 00       	mov    esi,0x14
    af7a:	48 89 c7             	mov    rdi,rax
    af7d:	e8 1e 75 ff ff       	call   24a0 <backtrace@plt>
    af82:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    af88:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    af8e:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    af95:	89 d6                	mov    esi,edx
    af97:	48 89 c7             	mov    rdi,rax
    af9a:	e8 21 76 ff ff       	call   25c0 <backtrace_symbols@plt>
    af9f:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    afa6:	b8 00 00 00 00       	mov    eax,0x0
    afab:	e8 6f 83 ff ff       	call   331f <get_formated_time>
    afb0:	48 89 c6             	mov    rsi,rax
    afb3:	48 8d 3d 7e 2e 00 00 	lea    rdi,[rip+0x2e7e]        # de38 <_IO_stdin_used+0x1e38>
    afba:	b8 00 00 00 00       	mov    eax,0x0
    afbf:	e8 ac 74 ff ff       	call   2470 <printf@plt>
    afc4:	48 8d 3d 9c 2e 00 00 	lea    rdi,[rip+0x2e9c]        # de67 <_IO_stdin_used+0x1e67>
    afcb:	e8 f0 74 ff ff       	call   24c0 <puts@plt>
    afd0:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    afd7:	00 
    afd8:	0f 84 56 01 00 00    	je     b134 <crash_handler+0x1ed>
    afde:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    afe5:	00 00 00 
    afe8:	e9 35 01 00 00       	jmp    b122 <crash_handler+0x1db>
    afed:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    aff3:	48 98                	cdqe   
    aff5:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    affc:	00 
    affd:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b004:	48 01 d0             	add    rax,rdx
    b007:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b00a:	48 8d 35 6a 2e 00 00 	lea    rsi,[rip+0x2e6a]        # de7b <_IO_stdin_used+0x1e7b>
    b011:	48 89 c7             	mov    rdi,rax
    b014:	e8 37 76 ff ff       	call   2650 <strstr@plt>
    b019:	48 85 c0             	test   rax,rax
    b01c:	0f 85 f8 00 00 00    	jne    b11a <crash_handler+0x1d3>
    b022:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b028:	48 98                	cdqe   
    b02a:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b031:	00 
    b032:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b039:	48 01 d0             	add    rax,rdx
    b03c:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b03f:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b045:	48 98                	cdqe   
    b047:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b04e:	00 
    b04f:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b056:	48 01 d0             	add    rax,rdx
    b059:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b05c:	be 2b 00 00 00       	mov    esi,0x2b
    b061:	48 89 c7             	mov    rdi,rax
    b064:	e8 51 84 ff ff       	call   34ba <strloc>
    b069:	48 98                	cdqe   
    b06b:	48 83 c0 01          	add    rax,0x1
    b06f:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b073:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b077:	48 8d 35 01 2e 00 00 	lea    rsi,[rip+0x2e01]        # de7f <_IO_stdin_used+0x1e7f>
    b07e:	48 89 c7             	mov    rdi,rax
    b081:	b8 00 00 00 00       	mov    eax,0x0
    b086:	e8 75 75 ff ff       	call   2600 <sprintf@plt>
    b08b:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b08f:	be 29 00 00 00       	mov    esi,0x29
    b094:	48 89 c7             	mov    rdi,rax
    b097:	e8 1e 84 ff ff       	call   34ba <strloc>
    b09c:	48 98                	cdqe   
    b09e:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b0a3:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b0a7:	ba 10 00 00 00       	mov    edx,0x10
    b0ac:	be 00 00 00 00       	mov    esi,0x0
    b0b1:	48 89 c7             	mov    rdi,rax
    b0b4:	e8 c7 75 ff ff       	call   2680 <strtol@plt>
    b0b9:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b0bf:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b0c5:	89 c7                	mov    edi,eax
    b0c7:	e8 09 01 00 00       	call   b1d5 <offset_search>
    b0cc:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b0d3:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b0da:	74 23                	je     b0ff <crash_handler+0x1b8>
    b0dc:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b0e3:	8b 95 1c ff ff ff    	mov    edx,DWORD PTR [rbp-0xe4]
    b0e9:	48 89 c6             	mov    rsi,rax
    b0ec:	48 8d 3d 90 2d 00 00 	lea    rdi,[rip+0x2d90]        # de83 <_IO_stdin_used+0x1e83>
    b0f3:	b8 00 00 00 00       	mov    eax,0x0
    b0f8:	e8 73 73 ff ff       	call   2470 <printf@plt>
    b0fd:	eb 1c                	jmp    b11b <crash_handler+0x1d4>
    b0ff:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b105:	89 c6                	mov    esi,eax
    b107:	48 8d 3d 92 2d 00 00 	lea    rdi,[rip+0x2d92]        # dea0 <_IO_stdin_used+0x1ea0>
    b10e:	b8 00 00 00 00       	mov    eax,0x0
    b113:	e8 58 73 ff ff       	call   2470 <printf@plt>
    b118:	eb 01                	jmp    b11b <crash_handler+0x1d4>
    b11a:	90                   	nop
    b11b:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b122:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b128:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b12e:	0f 8c b9 fe ff ff    	jl     afed <crash_handler+0xa6>
    b134:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b13b:	48 89 c7             	mov    rdi,rax
    b13e:	e8 8d 74 ff ff       	call   25d0 <free@plt>
    b143:	48 8d 3d 80 2d 00 00 	lea    rdi,[rip+0x2d80]        # deca <_IO_stdin_used+0x1eca>
    b14a:	e8 71 73 ff ff       	call   24c0 <puts@plt>
    b14f:	89 c6                	mov    esi,eax
    b151:	48 8d 3d 81 2d 00 00 	lea    rdi,[rip+0x2d81]        # ded9 <_IO_stdin_used+0x1ed9>
    b158:	b8 00 00 00 00       	mov    eax,0x0
    b15d:	e8 0e 73 ff ff       	call   2470 <printf@plt>
    b162:	89 d8                	mov    eax,ebx
    b164:	89 c6                	mov    esi,eax
    b166:	48 8d 3d 7c 2d 00 00 	lea    rdi,[rip+0x2d7c]        # dee9 <_IO_stdin_used+0x1ee9>
    b16d:	b8 00 00 00 00       	mov    eax,0x0
    b172:	e8 f9 72 ff ff       	call   2470 <printf@plt>
    b177:	89 d8                	mov    eax,ebx
    b179:	89 c6                	mov    esi,eax
    b17b:	48 8d 3d 77 2d 00 00 	lea    rdi,[rip+0x2d77]        # def9 <_IO_stdin_used+0x1ef9>
    b182:	b8 00 00 00 00       	mov    eax,0x0
    b187:	e8 e4 72 ff ff       	call   2470 <printf@plt>
    b18c:	89 c8                	mov    eax,ecx
    b18e:	89 c6                	mov    esi,eax
    b190:	48 8d 3d 72 2d 00 00 	lea    rdi,[rip+0x2d72]        # df09 <_IO_stdin_used+0x1f09>
    b197:	b8 00 00 00 00       	mov    eax,0x0
    b19c:	e8 cf 72 ff ff       	call   2470 <printf@plt>
    b1a1:	89 e0                	mov    eax,esp
    b1a3:	89 c6                	mov    esi,eax
    b1a5:	48 8d 3d 6d 2d 00 00 	lea    rdi,[rip+0x2d6d]        # df19 <_IO_stdin_used+0x1f19>
    b1ac:	b8 00 00 00 00       	mov    eax,0x0
    b1b1:	e8 ba 72 ff ff       	call   2470 <printf@plt>
    b1b6:	89 e8                	mov    eax,ebp
    b1b8:	89 c6                	mov    esi,eax
    b1ba:	48 8d 3d 68 2d 00 00 	lea    rdi,[rip+0x2d68]        # df29 <_IO_stdin_used+0x1f29>
    b1c1:	b8 00 00 00 00       	mov    eax,0x0
    b1c6:	e8 a5 72 ff ff       	call   2470 <printf@plt>
    b1cb:	bf 01 00 00 00       	mov    edi,0x1
    b1d0:	e8 0b 73 ff ff       	call   24e0 <exit@plt>

000000000000b1d5 <offset_search>:
    b1d5:	f3 0f 1e fa          	endbr64 
    b1d9:	55                   	push   rbp
    b1da:	48 89 e5             	mov    rbp,rsp
    b1dd:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b1e0:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b1e7:	eb 44                	jmp    b22d <offset_search+0x58>
    b1e9:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b1ec:	48 63 d0             	movsxd rdx,eax
    b1ef:	48 89 d0             	mov    rax,rdx
    b1f2:	48 c1 e0 02          	shl    rax,0x2
    b1f6:	48 01 d0             	add    rax,rdx
    b1f9:	48 c1 e0 03          	shl    rax,0x3
    b1fd:	48 8d 15 fc d5 12 00 	lea    rdx,[rip+0x12d5fc]        # 138800 <fn_mem_map>
    b204:	48 01 d0             	add    rax,rdx
    b207:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b20b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b20f:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b212:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b215:	76 12                	jbe    b229 <offset_search+0x54>
    b217:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b21b:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b21e:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b221:	73 06                	jae    b229 <offset_search+0x54>
    b223:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b227:	eb 14                	jmp    b23d <offset_search+0x68>
    b229:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b22d:	8b 05 cd fd 12 00    	mov    eax,DWORD PTR [rip+0x12fdcd]        # 13b000 <fn_num>
    b233:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b236:	7c b1                	jl     b1e9 <offset_search+0x14>
    b238:	b8 00 00 00 00       	mov    eax,0x0
    b23d:	5d                   	pop    rbp
    b23e:	c3                   	ret    

000000000000b23f <add_fn>:
    b23f:	f3 0f 1e fa          	endbr64 
    b243:	55                   	push   rbp
    b244:	48 89 e5             	mov    rbp,rsp
    b247:	48 83 ec 20          	sub    rsp,0x20
    b24b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b24f:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b252:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b255:	8b 05 a5 fd 12 00    	mov    eax,DWORD PTR [rip+0x12fda5]        # 13b000 <fn_num>
    b25b:	8d 50 01             	lea    edx,[rax+0x1]
    b25e:	89 15 9c fd 12 00    	mov    DWORD PTR [rip+0x12fd9c],edx        # 13b000 <fn_num>
    b264:	48 63 d0             	movsxd rdx,eax
    b267:	48 89 d0             	mov    rax,rdx
    b26a:	48 c1 e0 02          	shl    rax,0x2
    b26e:	48 01 d0             	add    rax,rdx
    b271:	48 c1 e0 03          	shl    rax,0x3
    b275:	48 8d 15 84 d5 12 00 	lea    rdx,[rip+0x12d584]        # 138800 <fn_mem_map>
    b27c:	48 01 d0             	add    rax,rdx
    b27f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b283:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b287:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b28b:	48 89 d6             	mov    rsi,rdx
    b28e:	48 89 c7             	mov    rdi,rax
    b291:	e8 ba 74 ff ff       	call   2750 <strcpy@plt>
    b296:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b29a:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b29d:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b2a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2a4:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b2a7:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b2aa:	90                   	nop
    b2ab:	c9                   	leave  
    b2ac:	c3                   	ret    

000000000000b2ad <print_mem_map>:
    b2ad:	f3 0f 1e fa          	endbr64 
    b2b1:	55                   	push   rbp
    b2b2:	48 89 e5             	mov    rbp,rsp
    b2b5:	48 83 ec 10          	sub    rsp,0x10
    b2b9:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b2c0:	eb 4c                	jmp    b30e <print_mem_map+0x61>
    b2c2:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b2c5:	48 63 d0             	movsxd rdx,eax
    b2c8:	48 89 d0             	mov    rax,rdx
    b2cb:	48 c1 e0 02          	shl    rax,0x2
    b2cf:	48 01 d0             	add    rax,rdx
    b2d2:	48 c1 e0 03          	shl    rax,0x3
    b2d6:	48 8d 15 23 d5 12 00 	lea    rdx,[rip+0x12d523]        # 138800 <fn_mem_map>
    b2dd:	48 01 d0             	add    rax,rdx
    b2e0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b2e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2e8:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b2eb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2ef:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b2f2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2f6:	48 89 c6             	mov    rsi,rax
    b2f9:	48 8d 3d 40 2c 00 00 	lea    rdi,[rip+0x2c40]        # df40 <_IO_stdin_used+0x1f40>
    b300:	b8 00 00 00 00       	mov    eax,0x0
    b305:	e8 66 71 ff ff       	call   2470 <printf@plt>
    b30a:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b30e:	8b 05 ec fc 12 00    	mov    eax,DWORD PTR [rip+0x12fcec]        # 13b000 <fn_num>
    b314:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b317:	7c a9                	jl     b2c2 <print_mem_map+0x15>
    b319:	90                   	nop
    b31a:	90                   	nop
    b31b:	c9                   	leave  
    b31c:	c3                   	ret    

000000000000b31d <load_fn_mem_map>:
    b31d:	f3 0f 1e fa          	endbr64 
    b321:	55                   	push   rbp
    b322:	48 89 e5             	mov    rbp,rsp
    b325:	53                   	push   rbx
    b326:	48 83 ec 78          	sub    rsp,0x78
    b32a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b331:	00 00 
    b333:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b337:	31 c0                	xor    eax,eax
    b339:	48 8d 35 18 2c 00 00 	lea    rsi,[rip+0x2c18]        # df58 <_IO_stdin_used+0x1f58>
    b340:	48 8d 3d 13 2c 00 00 	lea    rdi,[rip+0x2c13]        # df5a <_IO_stdin_used+0x1f5a>
    b347:	e8 04 72 ff ff       	call   2550 <fopen@plt>
    b34c:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b350:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b355:	75 16                	jne    b36d <load_fn_mem_map+0x50>
    b357:	48 8d 3d 1a 2c 00 00 	lea    rdi,[rip+0x2c1a]        # df78 <_IO_stdin_used+0x1f78>
    b35e:	e8 5d 71 ff ff       	call   24c0 <puts@plt>
    b363:	bf ff ff ff ff       	mov    edi,0xffffffff
    b368:	e8 73 71 ff ff       	call   24e0 <exit@plt>
    b36d:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b374:	00 
    b375:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b37c:	00 
    b37d:	e9 db 00 00 00       	jmp    b45d <load_fn_mem_map+0x140>
    b382:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b386:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b38a:	48 8d 35 4e 2c 00 00 	lea    rsi,[rip+0x2c4e]        # dfdf <_IO_stdin_used+0x1fdf>
    b391:	48 89 c7             	mov    rdi,rax
    b394:	e8 17 74 ff ff       	call   27b0 <strcspn@plt>
    b399:	48 01 d8             	add    rax,rbx
    b39c:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b39f:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b3a6:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b3aa:	48 8d 35 30 2c 00 00 	lea    rsi,[rip+0x2c30]        # dfe1 <_IO_stdin_used+0x1fe1>
    b3b1:	48 89 c7             	mov    rdi,rax
    b3b4:	e8 a7 73 ff ff       	call   2760 <strtok@plt>
    b3b9:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b3bd:	eb 7f                	jmp    b43e <load_fn_mem_map+0x121>
    b3bf:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b3c3:	74 44                	je     b409 <load_fn_mem_map+0xec>
    b3c5:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b3c9:	7f 59                	jg     b424 <load_fn_mem_map+0x107>
    b3cb:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b3cf:	74 08                	je     b3d9 <load_fn_mem_map+0xbc>
    b3d1:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b3d5:	74 17                	je     b3ee <load_fn_mem_map+0xd1>
    b3d7:	eb 4b                	jmp    b424 <load_fn_mem_map+0x107>
    b3d9:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b3dd:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b3e1:	48 89 d6             	mov    rsi,rdx
    b3e4:	48 89 c7             	mov    rdi,rax
    b3e7:	e8 64 73 ff ff       	call   2750 <strcpy@plt>
    b3ec:	eb 37                	jmp    b425 <load_fn_mem_map+0x108>
    b3ee:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b3f2:	ba 10 00 00 00       	mov    edx,0x10
    b3f7:	be 00 00 00 00       	mov    esi,0x0
    b3fc:	48 89 c7             	mov    rdi,rax
    b3ff:	e8 7c 72 ff ff       	call   2680 <strtol@plt>
    b404:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b407:	eb 1c                	jmp    b425 <load_fn_mem_map+0x108>
    b409:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b40d:	ba 10 00 00 00       	mov    edx,0x10
    b412:	be 00 00 00 00       	mov    esi,0x0
    b417:	48 89 c7             	mov    rdi,rax
    b41a:	e8 61 72 ff ff       	call   2680 <strtol@plt>
    b41f:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b422:	eb 01                	jmp    b425 <load_fn_mem_map+0x108>
    b424:	90                   	nop
    b425:	48 8d 35 b5 2b 00 00 	lea    rsi,[rip+0x2bb5]        # dfe1 <_IO_stdin_used+0x1fe1>
    b42c:	bf 00 00 00 00       	mov    edi,0x0
    b431:	e8 2a 73 ff ff       	call   2760 <strtok@plt>
    b436:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b43a:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b43e:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b443:	0f 85 76 ff ff ff    	jne    b3bf <load_fn_mem_map+0xa2>
    b449:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b44c:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b44f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b453:	89 ce                	mov    esi,ecx
    b455:	48 89 c7             	mov    rdi,rax
    b458:	e8 e2 fd ff ff       	call   b23f <add_fn>
    b45d:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b461:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b465:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b469:	48 89 ce             	mov    rsi,rcx
    b46c:	48 89 c7             	mov    rdi,rax
    b46f:	e8 cc 72 ff ff       	call   2740 <getline@plt>
    b474:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b478:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b47d:	0f 85 ff fe ff ff    	jne    b382 <load_fn_mem_map+0x65>
    b483:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b487:	48 89 c7             	mov    rdi,rax
    b48a:	e8 01 73 ff ff       	call   2790 <fclose@plt>
    b48f:	90                   	nop
    b490:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b494:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b49b:	00 00 
    b49d:	74 05                	je     b4a4 <load_fn_mem_map+0x187>
    b49f:	e8 7c 72 ff ff       	call   2720 <__stack_chk_fail@plt>
    b4a4:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    b4a8:	c9                   	leave  
    b4a9:	c3                   	ret    

Disassembly of section .fini:

000000000000b4ac <_fini>:
    b4ac:	f3 0f 1e fa          	endbr64 
    b4b0:	48 83 ec 08          	sub    rsp,0x8
    b4b4:	48 83 c4 08          	add    rsp,0x8
    b4b8:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1d1160>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d50a5>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ed1bd3>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e1a31f9>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520d11ff>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9cf3a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x25654415>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a51446a>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f3332c8>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f5925>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250d1338>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e1a334d>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723d3353>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x7312136d>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e1a337e>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ed1d84>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f503c2a>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d4f7d>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744e34ed>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d4ff3>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e1a353d>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ed1f43>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	3c 77                	cmp    al,0x77
    c8e2:	ff                   	(bad)  
    c8e3:	ff 5f 7a             	call   FWORD PTR [rdi+0x7a]
    c8e6:	ff                   	(bad)  
    c8e7:	ff 5f 7a             	call   FWORD PTR [rdi+0x7a]
    c8ea:	ff                   	(bad)  
    c8eb:	ff 4d 77             	dec    DWORD PTR [rbp+0x77]
    c8ee:	ff                   	(bad)  
    c8ef:	ff                   	(bad)  
    c8f0:	ba 78 ff ff cb       	mov    edx,0xcbffff78
    c8f5:	78 ff                	js     c8f6 <_IO_stdin_used+0x8f6>
    c8f7:	ff 5f 7a             	call   FWORD PTR [rdi+0x7a]
    c8fa:	ff                   	(bad)  
    c8fb:	ff 5f 7a             	call   FWORD PTR [rdi+0x7a]
    c8fe:	ff                   	(bad)  
    c8ff:	ff 68 79             	jmp    FWORD PTR [rax+0x79]
    c902:	ff                   	(bad)  
    c903:	ff                   	(bad)  
    c904:	79 79                	jns    c97f <_IO_stdin_used+0x97f>
    c906:	ff                   	(bad)  
    c907:	ff c4                	inc    esp
    c909:	79 ff                	jns    c90a <_IO_stdin_used+0x90a>
    c90b:	ff d5                	call   rbp
    c90d:	79 ff                	jns    c90e <_IO_stdin_used+0x90e>
    c90f:	ff 5f 7a             	call   FWORD PTR [rdi+0x7a]
    c912:	ff                   	(bad)  
    c913:	ff 43 7a             	inc    DWORD PTR [rbx+0x7a]
    c916:	ff                   	(bad)  
    c917:	ff 51 7a             	call   QWORD PTR [rcx+0x7a]
    c91a:	ff                   	(bad)  
    c91b:	ff 5c 77 ff          	call   FWORD PTR [rdi+rsi*2-0x1]
    c91f:	ff 6d 77             	jmp    FWORD PTR [rbp+0x77]
    c922:	ff                   	(bad)  
    c923:	ff                   	(bad)  
    c924:	7e 77                	jle    c99d <_IO_stdin_used+0x99d>
    c926:	ff                   	(bad)  
    c927:	ff 8f 77 ff ff a0    	dec    DWORD PTR [rdi-0x5f000089]
    c92d:	77 ff                	ja     c92e <_IO_stdin_used+0x92e>
    c92f:	ff b1 77 ff ff c2    	push   QWORD PTR [rcx-0x3d000089]
    c935:	77 ff                	ja     c936 <_IO_stdin_used+0x936>
    c937:	ff d3                	call   rbx
    c939:	77 ff                	ja     c93a <_IO_stdin_used+0x93a>
    c93b:	ff e4                	jmp    rsp
    c93d:	77 ff                	ja     c93e <_IO_stdin_used+0x93e>
    c93f:	ff f5                	push   rbp
    c941:	77 ff                	ja     c942 <_IO_stdin_used+0x942>
    c943:	ff 03                	inc    DWORD PTR [rbx]
    c945:	78 ff                	js     c946 <_IO_stdin_used+0x946>
    c947:	ff 11                	call   QWORD PTR [rcx]
    c949:	78 ff                	js     c94a <_IO_stdin_used+0x94a>
    c94b:	ff 1f                	call   FWORD PTR [rdi]
    c94d:	78 ff                	js     c94e <_IO_stdin_used+0x94e>
    c94f:	ff 2d 78 ff ff 3b    	jmp    FWORD PTR [rip+0x3bffff78]        # 3c00c8cd <_end+0x3bed18c5>
    c955:	78 ff                	js     c956 <_IO_stdin_used+0x956>
    c957:	ff 49 78             	dec    DWORD PTR [rcx+0x78]
    c95a:	ff                   	(bad)  
    c95b:	ff 00                	inc    DWORD PTR [rax]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x503619d6>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x641253de>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x731239af>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ed23db>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x49333a09>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533d3a17>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x52423a41>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x73123a45>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d4671>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x50361a96>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x6412549e>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x73123a6f>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x44423a9b>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e1a3ac2>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x483ac8>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a514d00>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e1a3b58>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ed255e>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e1a3b5c>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64125571>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755c1cb8>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f5a1cf9>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x4736730a>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ed2820>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	55                   	push   rbp
    ce22:	4e                   	rex.WRX
    ce23:	4e                   	rex.WRX
    ce24:	49                   	rex.WB
    ce25:	4e                   	rex.WRX
    ce26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce2e:	4f                   	rex.WRXB
    ce2f:	4e 53                	rex.WRX push rbx
    ce31:	54                   	push   rsp
    ce32:	52                   	push   rdx
    ce33:	41 54                	push   r12
    ce35:	49                   	rex.WB
    ce36:	4f                   	rex.WRXB
    ce37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce3b:	44                   	rex.R
    ce3c:	45                   	rex.RB
    ce3d:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce41:	55                   	push   rbp
    ce42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce45:	56                   	push   rsi
    ce46:	45 20 31             	and    BYTE PTR [r9],r14b
    ce49:	30 20                	xor    BYTE PTR [rax],ah
    ce4b:	53                   	push   rbx
    ce4c:	45                   	rex.RB
    ce4d:	43                   	rex.XB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e                   	rex.WRX
    ce50:	44 53                	rex.R push rbx
    ce52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce56:	41                   	rex.B
    ce57:	42                   	rex.X
    ce58:	4f 52                	rex.WRXB push r10
    ce5a:	54                   	push   rsp
    ce5b:	2e 00 00             	cs add BYTE PTR [rax],al
    ce5e:	00 00                	add    BYTE PTR [rax],al
    ce60:	52                   	push   rdx
    ce61:	55                   	push   rbp
    ce62:	4e                   	rex.WRX
    ce63:	4e                   	rex.WRX
    ce64:	49                   	rex.WB
    ce65:	4e                   	rex.WRX
    ce66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce6e:	54                   	push   rsp
    ce6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce72:	44                   	rex.R
    ce73:	45                   	rex.RB
    ce74:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce78:	55                   	push   rbp
    ce79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce7c:	56                   	push   rsi
    ce7d:	45 20 31             	and    BYTE PTR [r9],r14b
    ce80:	30 20                	xor    BYTE PTR [rax],ah
    ce82:	53                   	push   rbx
    ce83:	45                   	rex.RB
    ce84:	43                   	rex.XB
    ce85:	4f                   	rex.WRXB
    ce86:	4e                   	rex.WRX
    ce87:	44 53                	rex.R push rbx
    ce89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce8d:	41                   	rex.B
    ce8e:	42                   	rex.X
    ce8f:	4f 52                	rex.WRXB push r10
    ce91:	54                   	push   rsp
    ce92:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    ce96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ce9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ce9e:	67 75 6d             	addr32 jne cf0e <_IO_stdin_used+0xf0e>
    cea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cea3:	74 20                	je     cec5 <_IO_stdin_used+0xec5>
    cea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    ceaa:	70 64                	jo     cf10 <_IO_stdin_used+0xf10>
    ceac:	71 68                	jno    cf16 <_IO_stdin_used+0xf16>
    ceae:	74 65                	je     cf15 <_IO_stdin_used+0xf15>
    ceb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    ceb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ceb8:	76 69                	jbe    cf23 <_IO_stdin_used+0xf23>
    ceba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cec1:	79 2e 
    cec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ceca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cecb:	73 69                	jae    cf36 <_IO_stdin_used+0xf36>
    cecd:	73 68                	jae    cf37 <_IO_stdin_used+0xf37>
    cecf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ced5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cedc:	70 
    cedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    cede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee6:	79 20                	jns    cf08 <_IO_stdin_used+0xf08>
    cee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    ceef:	74 63                	je     cf54 <_IO_stdin_used+0xf54>
    cef1:	2f                   	(bad)  
    cef2:	76 69                	jbe    cf5d <_IO_stdin_used+0xf5d>
    cef4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cefb:	79 2e 
    cefd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf00:	66 29 00             	sub    WORD PTR [rax],ax
    cf03:	00 00                	add    BYTE PTR [rax],al
    cf05:	00 00                	add    BYTE PTR [rax],al
    cf07:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cf0a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf0b:	69 73 68 65 64 20 6c 	imul   esi,DWORD PTR [rbx+0x68],0x6c206465
    cf12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf13:	61                   	(bad)  
    cf14:	64 69 6e 67 20 43 53 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x56534320
    cf1b:	56 
    cf1c:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    cf1f:	70 20                	jo     cf41 <_IO_stdin_used+0xf41>
    cf21:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    cf24:	68 65 00 00 46       	push   0x46000065
    cf29:	61                   	(bad)  
    cf2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    cf31:	20 
    cf32:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf34:	61                   	(bad)  
    cf35:	64 20 43 53          	and    BYTE PTR fs:[rbx+0x53],al
    cf39:	56                   	push   rsi
    cf3a:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    cf3d:	70 20                	jo     cf5f <_IO_stdin_used+0xf5f>
    cf3f:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    cf42:	68 65 28 6e 6f       	push   0x6f6e2865
    cf47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf48:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    cf4b:	69 74 69 63 61 6c 20 	imul   esi,DWORD PTR [rcx+rbp*2+0x63],0x65206c61
    cf52:	65 
    cf53:	72 72                	jb     cfc7 <_IO_stdin_used+0xfc7>
    cf55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf56:	72 29                	jb     cf81 <_IO_stdin_used+0xf81>
    cf58:	00 2f                	add    BYTE PTR [rdi],ch
    cf5a:	65 74 63             	gs je  cfc0 <_IO_stdin_used+0xfc0>
    cf5d:	2f                   	(bad)  
    cf5e:	76 69                	jbe    cfc9 <_IO_stdin_used+0xfc9>
    cf60:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf67:	69 6c 
    cf69:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    cf6d:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf71:	72 73                	jb     cfe6 <_IO_stdin_used+0xfe6>
    cf73:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf78:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf79:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf7e:	65 73 00             	gs jae cf81 <_IO_stdin_used+0xf81>
    cf81:	00 00                	add    BYTE PTR [rax],al
    cf83:	00 00                	add    BYTE PTR [rax],al
    cf85:	00 00                	add    BYTE PTR [rax],al
    cf87:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf8a:	47                   	rex.RXB
    cf8b:	49                   	rex.WB
    cf8c:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf91:	74 65                	je     cff8 <_IO_stdin_used+0xff8>
    cf93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf94:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf9b:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cfa2:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cfa5:	25 73 0a 00 70       	and    eax,0x70000a73
    cfaa:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cfad:	5f                   	pop    rdi
    cfae:	6d                   	ins    DWORD PTR es:[rdi],dx
    cfaf:	67 72 20             	addr32 jb cfd2 <_IO_stdin_used+0xfd2>
    cfb2:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cfb9:	5f                   	pop    rdi
    cfba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cfbb:	70 65                	jo     d022 <_IO_stdin_used+0x1022>
    cfbd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cfbe:	5f                   	pop    rdi
    cfbf:	6c                   	ins    BYTE PTR es:[rdi],dx
    cfc0:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cfc7:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cfca:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cfce:	70 74                	jo     d044 <_IO_stdin_used+0x1044>
    cfd0:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cfd5:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cfd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cfda:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cfe0:	72 76                	jb     d058 <_IO_stdin_used+0x1058>
    cfe2:	65 72 20             	gs jb  d005 <_IO_stdin_used+0x1005>
    cfe5:	73 74                	jae    d05b <_IO_stdin_used+0x105b>
    cfe7:	61                   	(bad)  
    cfe8:	72 74                	jb     d05e <_IO_stdin_used+0x105e>
    cfea:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cfee:	31 32                	xor    DWORD PTR [rdx],esi
    cff0:	37                   	(bad)  
    cff1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    cff4:	30 2e                	xor    BYTE PTR [rsi],ch
    cff6:	31 3a                	xor    DWORD PTR [rdx],edi
    cff8:	32 33                	xor    dh,BYTE PTR [rbx]
    cffa:	00 00                	add    BYTE PTR [rax],al
    cffc:	e7 98                	out    0x98,eax
    cffe:	ff                   	(bad)  
    cfff:	ff 24 99             	jmp    QWORD PTR [rcx+rbx*4]
    d002:	ff                   	(bad)  
    d003:	ff 62 99             	jmp    QWORD PTR [rdx-0x67]
    d006:	ff                   	(bad)  
    d007:	ff 62 99             	jmp    QWORD PTR [rdx-0x67]
    d00a:	ff                   	(bad)  
    d00b:	ff f3                	push   rbx
    d00d:	98                   	cwde   
    d00e:	ff                   	(bad)  
    d00f:	ff 02                	inc    DWORD PTR [rdx]
    d011:	99                   	cdq    
    d012:	ff                   	(bad)  
    d013:	ff 62 99             	jmp    QWORD PTR [rdx-0x67]
    d016:	ff                   	(bad)  
    d017:	ff 62 99             	jmp    QWORD PTR [rdx-0x67]
    d01a:	ff                   	(bad)  
    d01b:	ff 62 99             	jmp    QWORD PTR [rdx-0x67]
    d01e:	ff                   	(bad)  
    d01f:	ff 62 99             	jmp    QWORD PTR [rdx-0x67]
    d022:	ff                   	(bad)  
    d023:	ff 62 99             	jmp    QWORD PTR [rdx-0x67]
    d026:	ff                   	(bad)  
    d027:	ff 62 99             	jmp    QWORD PTR [rdx-0x67]
    d02a:	ff                   	(bad)  
    d02b:	ff 12                	call   QWORD PTR [rdx]
    d02d:	99                   	cdq    
    d02e:	ff                   	(bad)  
    d02f:	ff 1b                	call   FWORD PTR [rbx]
    d031:	99                   	cdq    
    d032:	ff                   	(bad)  
    d033:	ff 62 99             	jmp    QWORD PTR [rdx-0x67]
    d036:	ff                   	(bad)  
    d037:	ff 62 99             	jmp    QWORD PTR [rdx-0x67]
    d03a:	ff                   	(bad)  
    d03b:	ff 43 99             	inc    DWORD PTR [rbx-0x67]
    d03e:	ff                   	(bad)  
    d03f:	ff 0a                	dec    DWORD PTR [rdx]
    d041:	43 61                	rex.XB (bad) 
    d043:	75 67                	jne    d0ac <_IO_stdin_used+0x10ac>
    d045:	68 74 20 73 69       	push   0x69732074
    d04a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    d04c:	61                   	(bad)  
    d04d:	6c                   	ins    BYTE PTR es:[rdi],dx
    d04e:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f0b8 <_end+0x744e40b0>
    d054:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fccd <_end+0x650d4cc5>
    d05a:	78 69                	js     d0c5 <_IO_stdin_used+0x10c5>
    d05c:	74 69                	je     d0c7 <_IO_stdin_used+0x10c7>
    d05e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d05f:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    d065:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d069:	61                   	(bad)  
    d06a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d06b:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d06e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d071:	74 73                	je     d0e6 <_IO_stdin_used+0x10e6>
    d073:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d076:	75 67                	jne    d0df <_IO_stdin_used+0x10df>
    d078:	68 74 3a 20 25       	push   0x25203a74
    d07d:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d080:	53                   	push   rbx
    d081:	74 61                	je     d0e4 <_IO_stdin_used+0x10e4>
    d083:	74 69                	je     d0ee <_IO_stdin_used+0x10ee>
    d085:	73 74                	jae    d0fb <_IO_stdin_used+0x10fb>
    d087:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d08e:	61                   	(bad)  
    d08f:	64 64 72 65          	fs fs jb d0f8 <_IO_stdin_used+0x10f8>
    d093:	73 73                	jae    d108 <_IO_stdin_used+0x1108>
    d095:	20 20                	and    BYTE PTR [rax],ah
    d097:	20 20                	and    BYTE PTR [rax],ah
    d099:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d09b:	75 6e                	jne    d10b <_IO_stdin_used+0x110b>
    d09d:	74 0a                	je     d0a9 <_IO_stdin_used+0x10a9>
    d09f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0a4:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0a9:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0ae:	2d 2d 00 00 00       	sub    eax,0x2d
    d0b3:	00 00                	add    BYTE PTR [rax],al
    d0b5:	00 00                	add    BYTE PTR [rax],al
    d0b7:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909db30 <_end+0x8f62b28>
    d0bd:	74 6f                	je     d12e <_IO_stdin_used+0x112e>
    d0bf:	74 61                	je     d122 <_IO_stdin_used+0x1122>
    d0c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0c2:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d0c5:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d0c8:	74 73                	je     d13d <_IO_stdin_used+0x113d>
    d0ca:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f5f0 <_end+0xa5145e8>
    d0d0:	09 09                	or     DWORD PTR [rcx],ecx
    d0d2:	74 6f                	je     d143 <_IO_stdin_used+0x1143>
    d0d4:	74 61                	je     d137 <_IO_stdin_used+0x1137>
    d0d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0d7:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0db:	74 20                	je     d0fd <_IO_stdin_used+0x10fd>
    d0dd:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0e2:	09 09                	or     DWORD PTR [rcx],ecx
    d0e4:	74 6f                	je     d155 <_IO_stdin_used+0x1155>
    d0e6:	74 61                	je     d149 <_IO_stdin_used+0x1149>
    d0e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0e9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0ec:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0ef:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0f4:	09 09                	or     DWORD PTR [rcx],ecx
    d0f6:	54                   	push   rsp
    d0f7:	43 50                	rex.XB push r8
    d0f9:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0fd:	74 20                	je     d11f <_IO_stdin_used+0x111f>
    d0ff:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d104:	09 09                	or     DWORD PTR [rcx],ecx
    d106:	54                   	push   rsp
    d107:	43 50                	rex.XB push r8
    d109:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d10c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d10f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d114:	09 09                	or     DWORD PTR [rcx],ecx
    d116:	55                   	push   rbp
    d117:	44 50                	rex.R push rax
    d119:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d11c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d11d:	74 20                	je     d13f <_IO_stdin_used+0x113f>
    d11f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d124:	09 09                	or     DWORD PTR [rcx],ecx
    d126:	55                   	push   rbp
    d127:	44 50                	rex.R push rax
    d129:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d12c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d12f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d134:	09 09                	or     DWORD PTR [rcx],ecx
    d136:	49                   	rex.WB
    d137:	43                   	rex.XB
    d138:	4d 50                	rex.WRB push r8
    d13a:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d13d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d13e:	74 20                	je     d160 <_IO_stdin_used+0x1160>
    d140:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d145:	09 09                	or     DWORD PTR [rcx],ecx
    d147:	49                   	rex.WB
    d148:	43                   	rex.XB
    d149:	4d 50                	rex.WRB push r8
    d14b:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d14e:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d151:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d156:	0a 00                	or     al,BYTE PTR [rax]
    d158:	77 00                	ja     d15a <_IO_stdin_used+0x115a>
    d15a:	2f                   	(bad)  
    d15b:	75 73                	jne    d1d0 <_IO_stdin_used+0x11d0>
    d15d:	72 2f                	jb     d18e <_IO_stdin_used+0x118e>
    d15f:	73 68                	jae    d1c9 <_IO_stdin_used+0x11c9>
    d161:	61                   	(bad)  
    d162:	72 65                	jb     d1c9 <_IO_stdin_used+0x11c9>
    d164:	2f                   	(bad)  
    d165:	76 69                	jbe    d1d0 <_IO_stdin_used+0x11d0>
    d167:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d16e:	63 61 
    d170:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d173:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d177:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d17a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d17b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d17c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d17d:	74 20                	je     d19f <_IO_stdin_used+0x119f>
    d17f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d180:	70 65                	jo     d1e7 <_IO_stdin_used+0x11e7>
    d182:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d183:	20 2f                	and    BYTE PTR [rdi],ch
    d185:	75 73                	jne    d1fa <_IO_stdin_used+0x11fa>
    d187:	72 2f                	jb     d1b8 <_IO_stdin_used+0x11b8>
    d189:	73 68                	jae    d1f3 <_IO_stdin_used+0x11f3>
    d18b:	61                   	(bad)  
    d18c:	72 65                	jb     d1f3 <_IO_stdin_used+0x11f3>
    d18e:	2f                   	(bad)  
    d18f:	76 69                	jbe    d1fa <_IO_stdin_used+0x11fa>
    d191:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d198:	63 61 
    d19a:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d19d:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d1a1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1a3:	70 72                	jo     d217 <_IO_stdin_used+0x1217>
    d1a5:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d1ac:	61                   	(bad)  
    d1ad:	72 70                	jb     d21f <_IO_stdin_used+0x121f>
    d1af:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d1b2:	68 65 20 74 6f       	push   0x6f742065
    d1b7:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d1ba:	72 65                	jb     d221 <_IO_stdin_used+0x1221>
    d1bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d1be:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df237 <_end+0x3e1a422f>
    d1c4:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dc3d <_end+0x24ed2c35>
    d1ca:	73 2c                	jae    d1f8 <_IO_stdin_used+0x11f8>
    d1cc:	25 73 0a 00 31       	and    eax,0x31000a73
    d1d1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d1d4:	30 00                	xor    BYTE PTR [rax],al
    d1d6:	00 00                	add    BYTE PTR [rax],al
    d1d8:	56                   	push   rsi
    d1d9:	49                   	rex.WB
    d1da:	47                   	rex.RXB
    d1db:	49                   	rex.WB
    d1dc:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d1e0:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc5a <_end+0x2cf62c52>
    d1e7:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d1ea:	64 65 62             	fs gs (bad) 
    d1ed:	75 67                	jne    d256 <_IO_stdin_used+0x1256>
    d1ef:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d1f2:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d1f6:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1fb:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d202:	74 68                	je     d26c <_IO_stdin_used+0x126c>
    d204:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d20b:	61                   	(bad)  
    d20c:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d210:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d215:	66 61                	data16 (bad) 
    d217:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d21a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d21c:	73 65                	jae    d283 <_IO_stdin_used+0x1283>
    d21e:	74 20                	je     d240 <_IO_stdin_used+0x1240>
    d220:	74 68                	je     d28a <_IO_stdin_used+0x128a>
    d222:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d226:	74 65                	je     d28d <_IO_stdin_used+0x128d>
    d228:	72 66                	jb     d290 <_IO_stdin_used+0x1290>
    d22a:	61                   	(bad)  
    d22b:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d22e:	74 6f                	je     d29f <_IO_stdin_used+0x129f>
    d230:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d234:	74 65                	je     d29b <_IO_stdin_used+0x129b>
    d236:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d237:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d23a:	0a 09                	or     cl,BYTE PTR [rcx]
    d23c:	2d 70 20 70 72       	sub    eax,0x72702070
    d241:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d248:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d24c:	0a 09                	or     cl,BYTE PTR [rcx]
    d24e:	2d 71 20 65 78       	sub    eax,0x78652071
    d253:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d25a:	74 
    d25b:	6c                   	ins    BYTE PTR es:[rdi],dx
    d25c:	79 0a                	jns    d268 <_IO_stdin_used+0x1268>
    d25e:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d261:	00 2f                	add    BYTE PTR [rdi],ch
    d263:	70 72                	jo     d2d7 <_IO_stdin_used+0x12d7>
    d265:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d266:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d268:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d26b:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d272:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d275:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d278:	6d                   	ins    DWORD PTR es:[rdi],dx
    d279:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d27d:	75 6e                	jne    d2ed <_IO_stdin_used+0x12ed>
    d27f:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f2ea <_end+0x705042e2>
    d286:	75 73                	jne    d2fb <_IO_stdin_used+0x12fb>
    d288:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d28a:	25 73 00 00 00       	and    eax,0x73
    d28f:	00 e2                	add    dl,ah
    d291:	96                   	xchg   esi,eax
    d292:	88 e2                	mov    dl,ah
    d294:	96                   	xchg   esi,eax
    d295:	88 e2                	mov    dl,ah
    d297:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d29e:	88 e2                	mov    dl,ah
    d2a0:	96                   	xchg   esi,eax
    d2a1:	88 e2                	mov    dl,ah
    d2a3:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2aa:	88 e2                	mov    dl,ah
    d2ac:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d2b3:	96                   	xchg   esi,eax
    d2b4:	88 e2                	mov    dl,ah
    d2b6:	96                   	xchg   esi,eax
    d2b7:	88 e2                	mov    dl,ah
    d2b9:	96                   	xchg   esi,eax
    d2ba:	88 e2                	mov    dl,ah
    d2bc:	96                   	xchg   esi,eax
    d2bd:	88 e2                	mov    dl,ah
    d2bf:	96                   	xchg   esi,eax
    d2c0:	88 e2                	mov    dl,ah
    d2c2:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d2c9:	96                   	xchg   esi,eax
    d2ca:	88 e2                	mov    dl,ah
    d2cc:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2d3:	88 0a                	mov    BYTE PTR [rdx],cl
    d2d5:	e2 96                	loop   d26d <_IO_stdin_used+0x126d>
    d2d7:	88 e2                	mov    dl,ah
    d2d9:	96                   	xchg   esi,eax
    d2da:	88 e2                	mov    dl,ah
    d2dc:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2e3:	88 e2                	mov    dl,ah
    d2e5:	96                   	xchg   esi,eax
    d2e6:	88 e2                	mov    dl,ah
    d2e8:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2ef:	88 e2                	mov    dl,ah
    d2f1:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2f8:	88 e2                	mov    dl,ah
    d2fa:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d301:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d307:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d30d:	96                   	xchg   esi,eax
    d30e:	88 e2                	mov    dl,ah
    d310:	96                   	xchg   esi,eax
    d311:	88 e2                	mov    dl,ah
    d313:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d31a:	88 0a                	mov    BYTE PTR [rdx],cl
    d31c:	e2 96                	loop   d2b4 <_IO_stdin_used+0x12b4>
    d31e:	88 e2                	mov    dl,ah
    d320:	96                   	xchg   esi,eax
    d321:	88 e2                	mov    dl,ah
    d323:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d32a:	88 e2                	mov    dl,ah
    d32c:	96                   	xchg   esi,eax
    d32d:	88 e2                	mov    dl,ah
    d32f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d336:	88 e2                	mov    dl,ah
    d338:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d33f:	88 e2                	mov    dl,ah
    d341:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d348:	e2 96                	loop   d2e0 <_IO_stdin_used+0x12e0>
    d34a:	88 e2                	mov    dl,ah
    d34c:	96                   	xchg   esi,eax
    d34d:	88 e2                	mov    dl,ah
    d34f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d356:	88 e2                	mov    dl,ah
    d358:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d35f:	88 0a                	mov    BYTE PTR [rdx],cl
    d361:	e2 80                	loop   d2e3 <_IO_stdin_used+0x12e3>
    d363:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d369:	88 e2                	mov    dl,ah
    d36b:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d372:	96                   	xchg   esi,eax
    d373:	88 e2                	mov    dl,ah
    d375:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d37c:	88 e2                	mov    dl,ah
    d37e:	96                   	xchg   esi,eax
    d37f:	88 e2                	mov    dl,ah
    d381:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d388:	88 e2                	mov    dl,ah
    d38a:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d391:	88 e2                	mov    dl,ah
    d393:	96                   	xchg   esi,eax
    d394:	88 e2                	mov    dl,ah
    d396:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d39d:	88 e2                	mov    dl,ah
    d39f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3a6:	88 0a                	mov    BYTE PTR [rdx],cl
    d3a8:	20 e2                	and    dl,ah
    d3aa:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3b1:	88 e2                	mov    dl,ah
    d3b3:	96                   	xchg   esi,eax
    d3b4:	88 e2                	mov    dl,ah
    d3b6:	96                   	xchg   esi,eax
    d3b7:	88 e2                	mov    dl,ah
    d3b9:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d3c0:	96                   	xchg   esi,eax
    d3c1:	88 e2                	mov    dl,ah
    d3c3:	96                   	xchg   esi,eax
    d3c4:	88 e2                	mov    dl,ah
    d3c6:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3cd:	88 e2                	mov    dl,ah
    d3cf:	96                   	xchg   esi,eax
    d3d0:	88 e2                	mov    dl,ah
    d3d2:	96                   	xchg   esi,eax
    d3d3:	88 e2                	mov    dl,ah
    d3d5:	96                   	xchg   esi,eax
    d3d6:	88 e2                	mov    dl,ah
    d3d8:	96                   	xchg   esi,eax
    d3d9:	88 e2                	mov    dl,ah
    d3db:	96                   	xchg   esi,eax
    d3dc:	88 e2                	mov    dl,ah
    d3de:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3e5:	88 e2                	mov    dl,ah
    d3e7:	96                   	xchg   esi,eax
    d3e8:	88 e2                	mov    dl,ah
    d3ea:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3f1:	88 e2                	mov    dl,ah
    d3f3:	96                   	xchg   esi,eax
    d3f4:	88 e2                	mov    dl,ah
    d3f6:	96                   	xchg   esi,eax
    d3f7:	88 e2                	mov    dl,ah
    d3f9:	96                   	xchg   esi,eax
    d3fa:	88 e2                	mov    dl,ah
    d3fc:	96                   	xchg   esi,eax
    d3fd:	88 e2                	mov    dl,ah
    d3ff:	96                   	xchg   esi,eax
    d400:	88 00                	mov    BYTE PTR [rax],al
    d402:	00 00                	add    BYTE PTR [rax],al
    d404:	00 00                	add    BYTE PTR [rax],al
    d406:	00 00                	add    BYTE PTR [rax],al
    d408:	0a 00                	or     al,BYTE PTR [rax]
    d40a:	0d 00 00 00 00       	or     eax,0x0
    d40f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d412:	68 5f 73 65 72       	push   0x7265735f
    d417:	76 65                	jbe    d47e <_IO_stdin_used+0x147e>
    d419:	72 2e                	jb     d449 <_IO_stdin_used+0x1449>
    d41b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d41d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d420:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d427:	20 
    d428:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d42b:	61                   	(bad)  
    d42c:	74 65                	je     d493 <_IO_stdin_used+0x1493>
    d42e:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d431:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d434:	74 00                	je     d436 <_IO_stdin_used+0x1436>
    d436:	00 00                	add    BYTE PTR [rax],al
    d438:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d439:	73 68                	jae    d4a3 <_IO_stdin_used+0x14a3>
    d43b:	5f                   	pop    rdi
    d43c:	73 65                	jae    d4a3 <_IO_stdin_used+0x14a3>
    d43e:	72 76                	jb     d4b6 <_IO_stdin_used+0x14b6>
    d440:	65 72 2e             	gs jb  d471 <_IO_stdin_used+0x1471>
    d443:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d445:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d448:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d44f:	6e 
    d450:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d453:	74 73                	je     d4c8 <_IO_stdin_used+0x14c8>
    d455:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d456:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d459:	70 74                	jo     d4cf <_IO_stdin_used+0x14cf>
    d45b:	00 00                	add    BYTE PTR [rax],al
    d45d:	00 00                	add    BYTE PTR [rax],al
    d45f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d462:	68 5f 73 65 72       	push   0x7265735f
    d467:	76 65                	jbe    d4ce <_IO_stdin_used+0x14ce>
    d469:	72 2e                	jb     d499 <_IO_stdin_used+0x1499>
    d46b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d46d:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d470:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d471:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d478:	20 
    d479:	73 6f                	jae    d4ea <_IO_stdin_used+0x14ea>
    d47b:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d47e:	74 20                	je     d4a0 <_IO_stdin_used+0x14a0>
    d480:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d482:	72 20                	jb     d4a4 <_IO_stdin_used+0x14a4>
    d484:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d485:	73 68                	jae    d4ef <_IO_stdin_used+0x14ef>
    d487:	5f                   	pop    rdi
    d488:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d48d:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d494:	00 
    d495:	00 00                	add    BYTE PTR [rax],al
    d497:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d49a:	68 5f 73 65 72       	push   0x7265735f
    d49f:	76 65                	jbe    d506 <_IO_stdin_used+0x1506>
    d4a1:	72 2e                	jb     d4d1 <_IO_stdin_used+0x14d1>
    d4a3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d4a5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d4a8:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d4af:	6e 
    d4b0:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d4b4:	74 65                	je     d51b <_IO_stdin_used+0x151b>
    d4b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4b7:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d4be:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d4c1:	68 5f 66 64 00       	push   0x64665f
    d4c6:	00 00                	add    BYTE PTR [rax],al
    d4c8:	46 61                	rex.RX (bad) 
    d4ca:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d4d1:	6f 
    d4d2:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d4d5:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d4d8:	74 20                	je     d4fa <_IO_stdin_used+0x14fa>
    d4da:	61                   	(bad)  
    d4db:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d4de:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d4e5:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df5e <_end+0x2fed2f56>
    d4eb:	78 25                	js     d512 <_IO_stdin_used+0x1512>
    d4ed:	30 32                	xor    BYTE PTR [rdx],dh
    d4ef:	78 0a                	js     d4fb <_IO_stdin_used+0x14fb>
    d4f1:	00 00                	add    BYTE PTR [rax],al
    d4f3:	00 00                	add    BYTE PTR [rax],al
    d4f5:	00 00                	add    BYTE PTR [rax],al
    d4f7:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4fa:	00 00                	add    BYTE PTR [rax],al
    d4fc:	00 00                	add    BYTE PTR [rax],al
    d4fe:	00 00                	add    BYTE PTR [rax],al
    d500:	42 61                	rex.X (bad) 
    d502:	73 69                	jae    d56d <_IO_stdin_used+0x156d>
    d504:	63 20                	movsxd esp,DWORD PTR [rax]
    d506:	70 6f                	jo     d577 <_IO_stdin_used+0x1577>
    d508:	72 74                	jb     d57e <_IO_stdin_used+0x157e>
    d50a:	73 63                	jae    d56f <_IO_stdin_used+0x156f>
    d50c:	61                   	(bad)  
    d50d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d50e:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d512:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d517:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d51a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d51b:	6d                   	ins    DWORD PTR es:[rdi],dx
    d51c:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d51f:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d522:	64 72 65             	fs jb  d58a <_IO_stdin_used+0x158a>
    d525:	73 73                	jae    d59a <_IO_stdin_used+0x159a>
    d527:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfa0 <_IO_stdin_used+0x1fa0>
    d52d:	00 00                	add    BYTE PTR [rax],al
    d52f:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d532:	72 74                	jb     d5a8 <_IO_stdin_used+0x15a8>
    d534:	73 63                	jae    d599 <_IO_stdin_used+0x1599>
    d536:	61                   	(bad)  
    d537:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d538:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d53c:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d541:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d544:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d545:	6d                   	ins    DWORD PTR es:[rdi],dx
    d546:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5bf <_end+0x744e45b7>
    d54c:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfc5 <_IO_stdin_used+0x1fc5>
    d552:	00 00                	add    BYTE PTR [rax],al
    d554:	00 00                	add    BYTE PTR [rax],al
    d556:	00 00                	add    BYTE PTR [rax],al
    d558:	46                   	rex.RX
    d559:	49                   	rex.WB
    d55a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d55e:	72 74                	jb     d5d4 <_IO_stdin_used+0x15d4>
    d560:	73 63                	jae    d5c5 <_IO_stdin_used+0x15c5>
    d562:	61                   	(bad)  
    d563:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d564:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d568:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d56d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d570:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d571:	6d                   	ins    DWORD PTR es:[rdi],dx
    d572:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d575:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d578:	64 72 65             	fs jb  d5e0 <_IO_stdin_used+0x15e0>
    d57b:	73 73                	jae    d5f0 <_IO_stdin_used+0x15f0>
    d57d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dff6 <__GNU_EH_FRAME_HDR+0x12>
    d583:	00 00                	add    BYTE PTR [rax],al
    d585:	00 00                	add    BYTE PTR [rax],al
    d587:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d58a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d58e:	72 74                	jb     d604 <_IO_stdin_used+0x1604>
    d590:	73 63                	jae    d5f5 <_IO_stdin_used+0x15f5>
    d592:	61                   	(bad)  
    d593:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d594:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d598:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d59d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d5a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5a1:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5a2:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f61b <_end+0x744e4613>
    d5a8:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000e021 <_end+0x2fed3019>
    d5ae:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d5b1:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b3:	31 00                	xor    DWORD PTR [rax],eax
    d5b5:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b7:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b9:	30 2e                	xor    BYTE PTR [rsi],ch
    d5bb:	31 00                	xor    DWORD PTR [rax],eax
    d5bd:	00 00                	add    BYTE PTR [rax],al
    d5bf:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d5c2:	70 20                	jo     d5e4 <_IO_stdin_used+0x15e4>
    d5c4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d5c6:	74 72                	je     d63a <_IO_stdin_used+0x163a>
    d5c8:	79 20                	jns    d5ea <_IO_stdin_used+0x15ea>
    d5ca:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d5cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5ce:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d5d4:	72 20                	jb     d5f6 <_IO_stdin_used+0x15f6>
    d5d6:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d5dd:	65 73 73             	gs jae d653 <_IO_stdin_used+0x1653>
    d5e0:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211059 <_end+0x770d6051>
    d5e6:	61                   	(bad)  
    d5e7:	73 20                	jae    d609 <_IO_stdin_used+0x1609>
    d5e9:	25 73 20 69 73       	and    eax,0x73692073
    d5ee:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d5f1:	77 20                	ja     d613 <_IO_stdin_used+0x1613>
    d5f3:	25 73 00 72 00       	and    eax,0x720073
    d5f8:	2f                   	(bad)  
    d5f9:	75 73                	jne    d66e <_IO_stdin_used+0x166e>
    d5fb:	72 2f                	jb     d62c <_IO_stdin_used+0x162c>
    d5fd:	73 68                	jae    d667 <_IO_stdin_used+0x1667>
    d5ff:	61                   	(bad)  
    d600:	72 65                	jb     d667 <_IO_stdin_used+0x1667>
    d602:	2f                   	(bad)  
    d603:	76 69                	jbe    d66e <_IO_stdin_used+0x166e>
    d605:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d60c:	63 61 
    d60e:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d611:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d615:	00 00                	add    BYTE PTR [rax],al
    d617:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d61a:	75 6c                	jne    d688 <_IO_stdin_used+0x1688>
    d61c:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d620:	74 20                	je     d642 <_IO_stdin_used+0x1642>
    d622:	6c                   	ins    BYTE PTR es:[rdi],dx
    d623:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d624:	61                   	(bad)  
    d625:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d629:	70 20                	jo     d64b <_IO_stdin_used+0x164b>
    d62b:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d62e:	68 65 20 66 72       	push   0x72662065
    d633:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d634:	6d                   	ins    DWORD PTR es:[rdi],dx
    d635:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d639:	61                   	(bad)  
    d63a:	62 61                	(bad)  
    d63c:	73 65                	jae    d6a3 <_IO_stdin_used+0x16a3>
    d63e:	2c 20                	sub    al,0x20
    d640:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d647:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d648:	65 78 69             	gs js  d6b4 <_IO_stdin_used+0x16b4>
    d64b:	73 74                	jae    d6c1 <_IO_stdin_used+0x16c1>
    d64d:	61                   	(bad)  
    d64e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d64f:	74 00                	je     d651 <_IO_stdin_used+0x1651>
    d651:	0a 00                	or     al,BYTE PTR [rax]
    d653:	2c 00                	sub    al,0x0
    d655:	00 00                	add    BYTE PTR [rax],al
    d657:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d65a:	64 61                	fs (bad) 
    d65c:	74 69                	je     d6c7 <_IO_stdin_used+0x16c7>
    d65e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d65f:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d664:	53                   	push   rbx
    d665:	51                   	push   rcx
    d666:	6c                   	ins    BYTE PTR es:[rdi],dx
    d667:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d66e:	6f 
    d66f:	72 3a                	jb     d6ab <_IO_stdin_used+0x16ab>
    d671:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e0ea <__GNU_EH_FRAME_HDR+0x106>
    d677:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d67a:	53                   	push   rbx
    d67b:	45 52                	rex.RB push r10
    d67d:	54                   	push   rsp
    d67e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d681:	54                   	push   rsp
    d682:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d686:	70 5f                	jo     d6e7 <_IO_stdin_used+0x16e7>
    d688:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d68b:	68 65 20 28 69       	push   0x69282065
    d690:	70 5f                	jo     d6f1 <_IO_stdin_used+0x16f1>
    d692:	61                   	(bad)  
    d693:	64 64 72 65          	fs fs jb d6fc <_IO_stdin_used+0x16fc>
    d697:	73 73                	jae    d70c <_IO_stdin_used+0x170c>
    d699:	2c 20                	sub    al,0x20
    d69b:	6d                   	ins    DWORD PTR es:[rdi],dx
    d69c:	61                   	(bad)  
    d69d:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d6a0:	64 64 72 65          	fs fs jb d709 <_IO_stdin_used+0x1709>
    d6a4:	73 73                	jae    d719 <_IO_stdin_used+0x1719>
    d6a6:	29 20                	sub    DWORD PTR [rax],esp
    d6a8:	56                   	push   rsi
    d6a9:	41                   	rex.B
    d6aa:	4c 55                	rex.WR push rbp
    d6ac:	45 53                	rex.RB push r11
    d6ae:	20 28                	and    BYTE PTR [rax],ch
    d6b0:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf929 <_end+0x20194921>
    d6b6:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f92f <_end+0x3b164927>
    d6bc:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d6bf:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d6c6:	63 6f 
    d6c8:	75 6e                	jne    d738 <_IO_stdin_used+0x1738>
    d6ca:	74 65                	je     d731 <_IO_stdin_used+0x1731>
    d6cc:	72 65                	jb     d733 <_IO_stdin_used+0x1733>
    d6ce:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d6d2:	72 6f                	jb     d743 <_IO_stdin_used+0x1743>
    d6d4:	72 3a                	jb     d710 <_IO_stdin_used+0x1710>
    d6d6:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e14f <_end+0x2eed3147>
    d6dc:	75 73                	jne    d751 <_IO_stdin_used+0x1751>
    d6de:	72 2f                	jb     d70f <_IO_stdin_used+0x170f>
    d6e0:	73 68                	jae    d74a <_IO_stdin_used+0x174a>
    d6e2:	61                   	(bad)  
    d6e3:	72 65                	jb     d74a <_IO_stdin_used+0x174a>
    d6e5:	2f                   	(bad)  
    d6e6:	76 69                	jbe    d751 <_IO_stdin_used+0x1751>
    d6e8:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d6ef:	2e 64 
    d6f1:	62                   	(bad)  
    d6f2:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d6f5:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d6fc:	72 6f 
    d6fe:	72 20                	jb     d720 <_IO_stdin_used+0x1720>
    d700:	25 73 0a 00 00       	and    eax,0xa73
    d705:	00 00                	add    BYTE PTR [rax],al
    d707:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d70a:	53                   	push   rbx
    d70b:	45 52                	rex.RB push r10
    d70d:	54                   	push   rsp
    d70e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d711:	54                   	push   rsp
    d712:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d716:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d71d:	20 28                	and    BYTE PTR [rax],ch
    d71f:	73 65                	jae    d786 <_IO_stdin_used+0x1786>
    d721:	72 76                	jb     d799 <_IO_stdin_used+0x1799>
    d723:	5f                   	pop    rdi
    d724:	61                   	(bad)  
    d725:	64 64 72 2c          	fs fs jb d755 <_IO_stdin_used+0x1755>
    d729:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d72c:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d733:	73 65                	jae    d79a <_IO_stdin_used+0x179a>
    d735:	72 76                	jb     d7ad <_IO_stdin_used+0x17ad>
    d737:	5f                   	pop    rdi
    d738:	70 6f                	jo     d7a9 <_IO_stdin_used+0x17a9>
    d73a:	72 74                	jb     d7b0 <_IO_stdin_used+0x17b0>
    d73c:	2c 63                	sub    al,0x63
    d73e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d73f:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d746:	73 65                	jae    d7ad <_IO_stdin_used+0x17ad>
    d748:	72 76                	jb     d7c0 <_IO_stdin_used+0x17c0>
    d74a:	5f                   	pop    rdi
    d74b:	70 6b                	jo     d7b8 <_IO_stdin_used+0x17b8>
    d74d:	74 5f                	je     d7ae <_IO_stdin_used+0x17ae>
    d74f:	73 65                	jae    d7b6 <_IO_stdin_used+0x17b6>
    d751:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d752:	74 2c                	je     d780 <_IO_stdin_used+0x1780>
    d754:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d758:	70 6b                	jo     d7c5 <_IO_stdin_used+0x17c5>
    d75a:	74 5f                	je     d7bb <_IO_stdin_used+0x17bb>
    d75c:	73 65                	jae    d7c3 <_IO_stdin_used+0x17c3>
    d75e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d75f:	74 2c                	je     d78d <_IO_stdin_used+0x178d>
    d761:	73 65                	jae    d7c8 <_IO_stdin_used+0x17c8>
    d763:	72 76                	jb     d7db <_IO_stdin_used+0x17db>
    d765:	5f                   	pop    rdi
    d766:	70 6b                	jo     d7d3 <_IO_stdin_used+0x17d3>
    d768:	74 5f                	je     d7c9 <_IO_stdin_used+0x17c9>
    d76a:	72 65                	jb     d7d1 <_IO_stdin_used+0x17d1>
    d76c:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d76f:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d773:	70 6b                	jo     d7e0 <_IO_stdin_used+0x17e0>
    d775:	74 5f                	je     d7d6 <_IO_stdin_used+0x17d6>
    d777:	72 65                	jb     d7de <_IO_stdin_used+0x17de>
    d779:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d77c:	70 72                	jo     d7f0 <_IO_stdin_used+0x17f0>
    d77e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d77f:	74 6f                	je     d7f0 <_IO_stdin_used+0x17f0>
    d781:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d784:	2c 61                	sub    al,0x61
    d786:	76 67                	jbe    d7ef <_IO_stdin_used+0x17ef>
    d788:	5f                   	pop    rdi
    d789:	70 70                	jo     d7fb <_IO_stdin_used+0x17fb>
    d78b:	73 2c                	jae    d7b9 <_IO_stdin_used+0x17b9>
    d78d:	73 74                	jae    d803 <_IO_stdin_used+0x1803>
    d78f:	61                   	(bad)  
    d790:	72 74                	jb     d806 <_IO_stdin_used+0x1806>
    d792:	5f                   	pop    rdi
    d793:	74 69                	je     d7fe <_IO_stdin_used+0x17fe>
    d795:	6d                   	ins    DWORD PTR es:[rdi],dx
    d796:	65 2c 65             	gs sub al,0x65
    d799:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d79a:	64 5f                	fs pop rdi
    d79c:	74 69                	je     d807 <_IO_stdin_used+0x1807>
    d79e:	6d                   	ins    DWORD PTR es:[rdi],dx
    d79f:	65 2c 64             	gs sub al,0x64
    d7a2:	61                   	(bad)  
    d7a3:	74 61                	je     d806 <_IO_stdin_used+0x1806>
    d7a5:	5f                   	pop    rdi
    d7a6:	70 6b                	jo     d813 <_IO_stdin_used+0x1813>
    d7a8:	74 73                	je     d81d <_IO_stdin_used+0x181d>
    d7aa:	2c 63                	sub    al,0x63
    d7ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7ae:	74 72                	je     d822 <_IO_stdin_used+0x1822>
    d7b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7b1:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7b2:	5f                   	pop    rdi
    d7b3:	70 6b                	jo     d820 <_IO_stdin_used+0x1820>
    d7b5:	74 73                	je     d82a <_IO_stdin_used+0x182a>
    d7b7:	29 20                	sub    DWORD PTR [rax],esp
    d7b9:	56                   	push   rsi
    d7ba:	41                   	rex.B
    d7bb:	4c 55                	rex.WR push rbp
    d7bd:	45 53                	rex.RB push r11
    d7bf:	20 28                	and    BYTE PTR [rax],ch
    d7c1:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfa3a <_end+0x22194a32>
    d7c7:	25 73 22 2c 25       	and    eax,0x252c2273
    d7cc:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7cd:	64 2c 25             	fs sub al,0x25
    d7d0:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7d1:	64 2c 25             	fs sub al,0x25
    d7d4:	64 2c 25             	fs sub al,0x25
    d7d7:	64 2c 25             	fs sub al,0x25
    d7da:	64 2c 25             	fs sub al,0x25
    d7dd:	64 2c 25             	fs sub al,0x25
    d7e0:	64 2c 25             	fs sub al,0x25
    d7e3:	64 2c 25             	fs sub al,0x25
    d7e6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7e7:	64 2c 25             	fs sub al,0x25
    d7ea:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7eb:	64 2c 25             	fs sub al,0x25
    d7ee:	64 2c 25             	fs sub al,0x25
    d7f1:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d7f4:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d7f7:	4c                   	rex.WR
    d7f8:	49 54                	rex.WB push r12
    d7fa:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d7fe:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d801:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d802:	74 65                	je     d869 <_IO_stdin_used+0x1869>
    d804:	72 65                	jb     d86b <_IO_stdin_used+0x186b>
    d806:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d80a:	72 6f                	jb     d87b <_IO_stdin_used+0x187b>
    d80c:	72 3a                	jb     d848 <_IO_stdin_used+0x1848>
    d80e:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e287 <_end+0x52ed327f>
    d814:	74 72                	je     d888 <_IO_stdin_used+0x1888>
    d816:	6c                   	ins    BYTE PTR es:[rdi],dx
    d817:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d818:	63 20                	movsxd esp,DWORD PTR [rax]
    d81a:	73 75                	jae    d891 <_IO_stdin_used+0x1891>
    d81c:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d81f:	73 73                	jae    d894 <_IO_stdin_used+0x1894>
    d821:	66 75 6c             	data16 jne d890 <_IO_stdin_used+0x1890>
    d824:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d827:	65 72 79             	gs jb  d8a3 <_IO_stdin_used+0x18a3>
    d82a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d82c:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d831:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d832:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d839:	6f 
    d83a:	72 72                	jb     d8ae <_IO_stdin_used+0x18ae>
    d83c:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d841:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d842:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d849:	6f 
    d84a:	72 72                	jb     d8be <_IO_stdin_used+0x18be>
    d84c:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d851:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d852:	73 73                	jae    d8c7 <_IO_stdin_used+0x18c7>
    d854:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d85b:	50                   	push   rax
    d85c:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d85f:	75 74                	jne    d8d5 <_IO_stdin_used+0x18d5>
    d861:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d865:	72 63                	jb     d8ca <_IO_stdin_used+0x18ca>
    d867:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d86b:	74 65                	je     d8d2 <_IO_stdin_used+0x18d2>
    d86d:	6d                   	ins    DWORD PTR es:[rdi],dx
    d86e:	70 74                	jo     d8e4 <_IO_stdin_used+0x18e4>
    d870:	3a 20                	cmp    ah,BYTE PTR [rax]
    d872:	25 73 28 73 75       	and    eax,0x75732873
    d877:	73 70                	jae    d8e9 <_IO_stdin_used+0x18e9>
    d879:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d87e:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d883:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 6166f8ee <_end+0x615348e6>
    d88a:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d891:	67 
    d892:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d899:	50                   	push   rax
    d89a:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d89f:	4c                   	rex.WR
    d8a0:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d8a4:	54                   	push   rsp
    d8a5:	52                   	push   rdx
    d8a6:	41                   	rex.B
    d8a7:	4e 53                	rex.WRX push rbx
    d8a9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8ab:	25 64 3a 20 25       	and    eax,0x25203a64
    d8b0:	73 3a                	jae    d8ec <_IO_stdin_used+0x18ec>
    d8b2:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d8b7:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261330 <_end+0x64126328>
    d8bd:	0a 00                	or     al,BYTE PTR [rax]
    d8bf:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d8c2:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d8c6:	57                   	push   rdi
    d8c7:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d8ca:	4e 56                	rex.WRX push rsi
    d8cc:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8ce:	25 64 3a 20 25       	and    eax,0x25203a64
    d8d3:	73 3a                	jae    d90f <_IO_stdin_used+0x190f>
    d8d5:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d8da:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261353 <_end+0x6412634b>
    d8e0:	0a 00                	or     al,BYTE PTR [rax]
    d8e2:	00 00                	add    BYTE PTR [rax],al
    d8e4:	00 00                	add    BYTE PTR [rax],al
    d8e6:	00 00                	add    BYTE PTR [rax],al
    d8e8:	53                   	push   rbx
    d8e9:	50                   	push   rax
    d8ea:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d8ef:	20 32                	and    BYTE PTR [rdx],dh
    d8f1:	2f                   	(bad)  
    d8f2:	33 3a                	xor    edi,DWORD PTR [rdx]
    d8f4:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 2521135e <_end+0x250d6356>
    d8fa:	73 3a                	jae    d936 <_IO_stdin_used+0x1936>
    d8fc:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d901:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426137a <_end+0x64126372>
    d907:	0a 00                	or     al,BYTE PTR [rax]
    d909:	00 00                	add    BYTE PTR [rax],al
    d90b:	00 00                	add    BYTE PTR [rax],al
    d90d:	00 00                	add    BYTE PTR [rax],al
    d90f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d912:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d916:	54                   	push   rsp
    d917:	52                   	push   rdx
    d918:	59                   	pop    rcx
    d919:	3a 20                	cmp    ah,BYTE PTR [rax]
    d91b:	25 64 3a 20 53       	and    eax,0x53203a64
    d920:	45 53                	rex.RB push r11
    d922:	53                   	push   rbx
    d923:	49                   	rex.WB
    d924:	4f                   	rex.WRXB
    d925:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d929:	54                   	push   rsp
    d92a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d92c:	25 73 3a 25 64       	and    eax,0x64253a73
    d931:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f975 <_end+0x7312496d>
    d937:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3a1 <__GNU_EH_FRAME_HDR+0x3bd>
    d93d:	00 00                	add    BYTE PTR [rax],al
    d93f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d942:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d946:	54                   	push   rsp
    d947:	52                   	push   rdx
    d948:	59                   	pop    rcx
    d949:	3a 20                	cmp    ah,BYTE PTR [rax]
    d94b:	25 64 3a 20 50       	and    eax,0x50203a64
    d950:	4f                   	rex.WRXB
    d951:	4c                   	rex.WR
    d952:	49 54                	rex.WB push r12
    d954:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d958:	4e 56                	rex.WRX push rsi
    d95a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d95d:	44 20 33             	and    BYTE PTR [rbx],r14b
    d960:	2f                   	(bad)  
    d961:	33 3a                	xor    edi,DWORD PTR [rdx]
    d963:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613dc <_end+0x641263d4>
    d969:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9ad <_end+0x731249a5>
    d96f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3d9 <__GNU_EH_FRAME_HDR+0x3f5>
    d975:	00 00                	add    BYTE PTR [rax],al
    d977:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d97a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d97e:	54                   	push   rsp
    d97f:	52                   	push   rdx
    d980:	59                   	pop    rcx
    d981:	3a 20                	cmp    ah,BYTE PTR [rax]
    d983:	25 64 3a 20 50       	and    eax,0x50203a64
    d988:	4f                   	rex.WRXB
    d989:	4c                   	rex.WR
    d98a:	49 54                	rex.WB push r12
    d98c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d990:	4e 56                	rex.WRX push rsi
    d992:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d995:	44 20 32             	and    BYTE PTR [rdx],r14b
    d998:	2f                   	(bad)  
    d999:	33 3a                	xor    edi,DWORD PTR [rdx]
    d99b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261414 <_end+0x6412640c>
    d9a1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9e5 <_end+0x731249dd>
    d9a7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e411 <__GNU_EH_FRAME_HDR+0x42d>
    d9ad:	00 00                	add    BYTE PTR [rax],al
    d9af:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9b2:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9b6:	54                   	push   rsp
    d9b7:	52                   	push   rdx
    d9b8:	59                   	pop    rcx
    d9b9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9bb:	25 64 3a 20 50       	and    eax,0x50203a64
    d9c0:	4f                   	rex.WRXB
    d9c1:	4c                   	rex.WR
    d9c2:	49 54                	rex.WB push r12
    d9c4:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9c8:	4e 56                	rex.WRX push rsi
    d9ca:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9cd:	44 20 31             	and    BYTE PTR [rcx],r14b
    d9d0:	2f                   	(bad)  
    d9d1:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9d3:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426144c <_end+0x64126444>
    d9d9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa1d <_end+0x73124a15>
    d9df:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e449 <__GNU_EH_FRAME_HDR+0x465>
    d9e5:	00 00                	add    BYTE PTR [rax],al
    d9e7:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d9ea:	00 00                	add    BYTE PTR [rax],al
    d9ec:	00 00                	add    BYTE PTR [rax],al
    d9ee:	00 00                	add    BYTE PTR [rax],al
    d9f0:	43 52                	rex.XB push r10
    d9f2:	49 54                	rex.WB push r12
    d9f4:	49                   	rex.WB
    d9f5:	43                   	rex.XB
    d9f6:	41                   	rex.B
    d9f7:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    d9fb:	49                   	rex.WB
    d9fc:	4c                   	rex.WR
    d9fd:	45                   	rex.RB
    d9fe:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    da03:	4f 50                	rex.WRXB push r8
    da05:	45                   	rex.RB
    da06:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    da0a:	4c                   	rex.WR
    da0b:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    da0f:	52                   	push   rdx
    da10:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    da14:	47                   	rex.RXB
    da15:	49                   	rex.WB
    da16:	4e                   	rex.WRX
    da17:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    da1a:	25 73 0a 00 25       	and    eax,0x25000a73
    da1f:	73 20                	jae    da41 <_IO_stdin_used+0x1a41>
    da21:	25 73 20 25 73       	and    eax,0x73252073
    da26:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa6a <_end+0x73124a62>
    da2c:	0a 00                	or     al,BYTE PTR [rax]
    da2e:	25 73 20 25 73       	and    eax,0x73252073
    da33:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614ac <_end+0x641264a4>
    da39:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa7d <_end+0x73124a75>
    da3f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4a9 <__GNU_EH_FRAME_HDR+0x4c5>
    da45:	00 00                	add    BYTE PTR [rax],al
    da47:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    da4a:	79 00                	jns    da4c <_IO_stdin_used+0x1a4c>
    da4c:	41                   	rex.B
    da4d:	4e 59                	rex.WRX pop rcx
    da4f:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    da52:	4d 50                	rex.WRB push r8
    da54:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    da58:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    da5b:	50                   	push   rax
    da5c:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    da5f:	72 5f                	jb     dac0 <_IO_stdin_used+0x1ac0>
    da61:	6d                   	ins    DWORD PTR es:[rdi],dx
    da62:	61                   	(bad)  
    da63:	74 63                	je     dac8 <_IO_stdin_used+0x1ac8>
    da65:	68 00 6e 6f 6e       	push   0x6e6f6e00
    da6a:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    da6e:	72 65                	jb     dad5 <_IO_stdin_used+0x1ad5>
    da70:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    da73:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    da77:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    da78:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    da7b:	6c                   	ins    BYTE PTR es:[rdi],dx
    da7c:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    da81:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    da84:	25 73 0a 00 3b       	and    eax,0x3b000a73
    da89:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    da8c:	75 6e                	jne    dafc <_IO_stdin_used+0x1afc>
    da8e:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    da92:	65 72 61             	gs jb  daf6 <_IO_stdin_used+0x1af6>
    da95:	74 6f                	je     db06 <_IO_stdin_used+0x1b06>
    da97:	72 00                	jb     da99 <_IO_stdin_used+0x1a99>
    da99:	61                   	(bad)  
    da9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    da9b:	65 72 74             	gs jb  db12 <_IO_stdin_used+0x1b12>
    da9e:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    daa1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daa2:	6d                   	ins    DWORD PTR es:[rdi],dx
    daa3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    daa5:	65 74 00             	gs je  daa8 <_IO_stdin_used+0x1aa8>
    daa8:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    daad:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    dab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dab5:	61                   	(bad)  
    dab6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dab7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dab8:	65 74 00             	gs je  dabb <_IO_stdin_used+0x1abb>
    dabb:	22 3b                	and    bh,BYTE PTR [rbx]
    dabd:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    dac0:	6d                   	ins    DWORD PTR es:[rdi],dx
    dac1:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    dac4:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    dac7:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    daca:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    dace:	74 68                	je     db38 <_IO_stdin_used+0x1b38>
    dad0:	3a 00                	cmp    al,BYTE PTR [rax]
    dad2:	74 79                	je     db4d <_IO_stdin_used+0x1b4d>
    dad4:	70 65                	jo     db3b <_IO_stdin_used+0x1b3b>
    dad6:	3a 00                	cmp    al,BYTE PTR [rax]
    dad8:	74 61                	je     db3b <_IO_stdin_used+0x1b3b>
    dada:	72 67                	jb     db43 <_IO_stdin_used+0x1b43>
    dadc:	65 74 3a             	gs je  db19 <_IO_stdin_used+0x1b19>
    dadf:	22 00                	and    al,BYTE PTR [rax]
    dae1:	73 65                	jae    db48 <_IO_stdin_used+0x1b48>
    dae3:	76 3a                	jbe    db1f <_IO_stdin_used+0x1b1f>
    dae5:	00 00                	add    BYTE PTR [rax],al
    dae7:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    daea:	6c                   	ins    BYTE PTR es:[rdi],dx
    daeb:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    daef:	76 65                	jbe    db56 <_IO_stdin_used+0x1b56>
    daf1:	72 69                	jb     db5c <_IO_stdin_used+0x1b5c>
    daf3:	74 79                	je     db6e <_IO_stdin_used+0x1b6e>
    daf5:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    daf8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daf9:	75 6c                	jne    db67 <_IO_stdin_used+0x1b67>
    dafb:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    daff:	20 3e                	and    BYTE PTR [rsi],bh
    db01:	20 30                	and    BYTE PTR [rax],dh
    db03:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    db06:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    db0d:	00 
    db0e:	00 00                	add    BYTE PTR [rax],al
    db10:	52                   	push   rdx
    db11:	75 6c                	jne    db7f <_IO_stdin_used+0x1b7f>
    db13:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db17:	76 65                	jbe    db7e <_IO_stdin_used+0x1b7e>
    db19:	72 69                	jb     db84 <_IO_stdin_used+0x1b84>
    db1b:	74 79                	je     db96 <_IO_stdin_used+0x1b96>
    db1d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db21:	75 6c                	jne    db8f <_IO_stdin_used+0x1b8f>
    db23:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db27:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    db2a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db2b:	75 6d                	jne    db9a <_IO_stdin_used+0x1b9a>
    db2d:	65 72 69             	gs jb  db99 <_IO_stdin_used+0x1b99>
    db30:	63 20                	movsxd esp,DWORD PTR [rax]
    db32:	76 61                	jbe    db95 <_IO_stdin_used+0x1b95>
    db34:	6c                   	ins    BYTE PTR es:[rdi],dx
    db35:	75 65                	jne    db9c <_IO_stdin_used+0x1b9c>
    db37:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    db3a:	79 70                	jns    dbac <_IO_stdin_used+0x1bac>
    db3c:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    db3f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db41:	76 61                	jbe    dba4 <_IO_stdin_used+0x1ba4>
    db43:	6c                   	ins    BYTE PTR es:[rdi],dx
    db44:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    db4b:	20 
    db4c:	74 79                	je     dbc7 <_IO_stdin_used+0x1bc7>
    db4e:	70 65                	jo     dbb5 <_IO_stdin_used+0x1bb5>
    db50:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    db53:	6c                   	ins    BYTE PTR es:[rdi],dx
    db54:	75 65                	jne    dbbb <_IO_stdin_used+0x1bbb>
    db56:	00 00                	add    BYTE PTR [rax],al
    db58:	25 73 3a 20 69       	and    eax,0x69203a73
    db5d:	74 79                	je     dbd8 <_IO_stdin_used+0x1bd8>
    db5f:	70 65                	jo     dbc6 <_IO_stdin_used+0x1bc6>
    db61:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    db64:	6c                   	ins    BYTE PTR es:[rdi],dx
    db65:	79 20                	jns    db87 <_IO_stdin_used+0x1b87>
    db67:	61                   	(bad)  
    db68:	70 70                	jo     dbda <_IO_stdin_used+0x1bda>
    db6a:	6c                   	ins    BYTE PTR es:[rdi],dx
    db6b:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    db72:	72 75                	jb     dbe9 <_IO_stdin_used+0x1be9>
    db74:	6c                   	ins    BYTE PTR es:[rdi],dx
    db75:	65 73 20             	gs jae db98 <_IO_stdin_used+0x1b98>
    db78:	77 69                	ja     dbe3 <_IO_stdin_used+0x1be3>
    db7a:	74 68                	je     dbe4 <_IO_stdin_used+0x1be4>
    db7c:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    db7f:	4d 50                	rex.WRB push r8
    db81:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    db84:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    db87:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db88:	74 6f                	je     dbf9 <_IO_stdin_used+0x1bf9>
    db8a:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    db8d:	0a 00                	or     al,BYTE PTR [rax]
    db8f:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    db96:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db98:	76 61                	jbe    dbfb <_IO_stdin_used+0x1bfb>
    db9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    db9b:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dba2:	70 
    dba3:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dba6:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dbab:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbac:	75 65                	jne    dc13 <_IO_stdin_used+0x1c13>
    dbae:	00 00                	add    BYTE PTR [rax],al
    dbb0:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dbb7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbb8:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb9:	79 20                	jns    dbdb <_IO_stdin_used+0x1bdb>
    dbbb:	61                   	(bad)  
    dbbc:	70 70                	jo     dc2e <_IO_stdin_used+0x1c2e>
    dbbe:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbbf:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dbc6:	72 75                	jb     dc3d <_IO_stdin_used+0x1c3d>
    dbc8:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbc9:	65 73 20             	gs jae dbec <_IO_stdin_used+0x1bec>
    dbcc:	77 69                	ja     dc37 <_IO_stdin_used+0x1c37>
    dbce:	74 68                	je     dc38 <_IO_stdin_used+0x1c38>
    dbd0:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dbd3:	4d 50                	rex.WRB push r8
    dbd5:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dbd8:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dbdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbdc:	74 6f                	je     dc4d <_IO_stdin_used+0x1c4d>
    dbde:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dbe1:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dbe4:	6d                   	ins    DWORD PTR es:[rdi],dx
    dbe5:	70 5f                	jo     dc46 <_IO_stdin_used+0x1c46>
    dbe7:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dbee:	61 
    dbef:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbf0:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dbf7:	20 
    dbf8:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dbff:	65 
	...
    dc08:	49                   	rex.WB
    dc09:	43                   	rex.XB
    dc0a:	4d 50                	rex.WRB push r8
    dc0c:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dc0f:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc12:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc13:	79 20                	jns    dc35 <_IO_stdin_used+0x1c35>
    dc15:	61                   	(bad)  
    dc16:	70 70                	jo     dc88 <_IO_stdin_used+0x1c88>
    dc18:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc19:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc20:	72 75                	jb     dc97 <_IO_stdin_used+0x1c97>
    dc22:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc23:	65 73 20             	gs jae dc46 <_IO_stdin_used+0x1c46>
    dc26:	77 69                	ja     dc91 <_IO_stdin_used+0x1c91>
    dc28:	74 68                	je     dc92 <_IO_stdin_used+0x1c92>
    dc2a:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc2d:	4d 50                	rex.WRB push r8
    dc2f:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc32:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc35:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc36:	74 6f                	je     dca7 <_IO_stdin_used+0x1ca7>
    dc38:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc3b:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc3e:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc3f:	70 5f                	jo     dca0 <_IO_stdin_used+0x1ca0>
    dc41:	73 65                	jae    dca8 <_IO_stdin_used+0x1ca8>
    dc43:	71 3a                	jno    dc7f <_IO_stdin_used+0x1c7f>
    dc45:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dc48:	76 61                	jbe    dcab <_IO_stdin_used+0x1cab>
    dc4a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc4b:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc52:	20 
    dc53:	73 65                	jae    dcba <_IO_stdin_used+0x1cba>
    dc55:	71 75                	jno    dccc <_IO_stdin_used+0x1ccc>
    dc57:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dc59:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dc5c:	76 61                	jbe    dcbf <_IO_stdin_used+0x1cbf>
    dc5e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc5f:	75 65                	jne    dcc6 <_IO_stdin_used+0x1cc6>
    dc61:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dc65:	3a 00                	cmp    al,BYTE PTR [rax]
    dc67:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dc69:	76 61                	jbe    dccc <_IO_stdin_used+0x1ccc>
    dc6b:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc6c:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dc73:	76 
    dc74:	61                   	(bad)  
    dc75:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc76:	75 65                	jne    dcdd <_IO_stdin_used+0x1cdd>
    dc78:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dc7b:	61                   	(bad)  
    dc7c:	67 73 3a             	addr32 jae dcb9 <_IO_stdin_used+0x1cb9>
    dc7f:	22 00                	and    al,BYTE PTR [rax]
    dc81:	00 00                	add    BYTE PTR [rax],al
    dc83:	00 00                	add    BYTE PTR [rax],al
    dc85:	00 00                	add    BYTE PTR [rax],al
    dc87:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dc8a:	61                   	(bad)  
    dc8b:	67 73 20             	addr32 jae dcae <_IO_stdin_used+0x1cae>
    dc8e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc8f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc90:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc91:	79 20                	jns    dcb3 <_IO_stdin_used+0x1cb3>
    dc93:	61                   	(bad)  
    dc94:	70 70                	jo     dd06 <_IO_stdin_used+0x1d06>
    dc96:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc97:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc9e:	72 75                	jb     dd15 <_IO_stdin_used+0x1d15>
    dca0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dca1:	65 73 20             	gs jae dcc4 <_IO_stdin_used+0x1cc4>
    dca4:	77 69                	ja     dd0f <_IO_stdin_used+0x1d0f>
    dca6:	74 68                	je     dd10 <_IO_stdin_used+0x1d10>
    dca8:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dcac:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dcaf:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dcb2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcb3:	74 6f                	je     dd24 <_IO_stdin_used+0x1d24>
    dcb5:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dcb8:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dcbb:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dcbe:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dcc0:	76 61                	jbe    dd23 <_IO_stdin_used+0x1d23>
    dcc2:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc3:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dcca:	76 
    dccb:	61                   	(bad)  
    dccc:	6c                   	ins    BYTE PTR es:[rdi],dx
    dccd:	75 65                	jne    dd34 <_IO_stdin_used+0x1d34>
    dccf:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dcd2:	72 65                	jb     dd39 <_IO_stdin_used+0x1d39>
    dcd4:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dcd6:	00 00                	add    BYTE PTR [rax],al
    dcd8:	46 61                	rex.RX (bad) 
    dcda:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dce1:	20 
    dce2:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dce5:	70 69                	jo     dd50 <_IO_stdin_used+0x1d50>
    dce7:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce8:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dcec:	67 75 6c             	addr32 jne dd5b <_IO_stdin_used+0x1d5b>
    dcef:	61                   	(bad)  
    dcf0:	72 20                	jb     dd12 <_IO_stdin_used+0x1d12>
    dcf2:	65 78 70             	gs js  dd65 <_IO_stdin_used+0x1d65>
    dcf5:	72 65                	jb     dd5c <_IO_stdin_used+0x1d5c>
    dcf7:	73 73                	jae    dd6c <_IO_stdin_used+0x1d6c>
    dcf9:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dd00:	7a 65                	jp     dd67 <_IO_stdin_used+0x1d67>
    dd02:	3a 00                	cmp    al,BYTE PTR [rax]
    dd04:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd05:	66 66 73 65          	data16 data16 jae dd6e <_IO_stdin_used+0x1d6e>
    dd09:	74 3a                	je     dd45 <_IO_stdin_used+0x1d45>
    dd0b:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    dd0e:	74 61                	je     dd71 <_IO_stdin_used+0x1d71>
    dd10:	62                   	(bad)  
    dd11:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd12:	69 73 68 65 64 00 25 	imul   esi,DWORD PTR [rbx+0x68],0x25006465
    dd19:	63 00                	movsxd eax,DWORD PTR [rax]
    dd1b:	25 30 32 78 00       	and    eax,0x783230
    dd20:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    dd24:	21 00                	and    DWORD PTR [rax],eax
    dd26:	3c 3d                	cmp    al,0x3d
    dd28:	00 3e                	add    BYTE PTR [rsi],bh
    dd2a:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dd2f:	75 70                	jne    dda1 <_IO_stdin_used+0x1da1>
    dd31:	70 6f                	jo     dda2 <_IO_stdin_used+0x1da2>
    dd33:	72 74                	jb     dda9 <_IO_stdin_used+0x1da9>
    dd35:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    dd3a:	65 72 61             	gs jb  dd9e <_IO_stdin_used+0x1d9e>
    dd3d:	74 6f                	je     ddae <_IO_stdin_used+0x1dae>
    dd3f:	72 00                	jb     dd41 <_IO_stdin_used+0x1d41>
    dd41:	00 00                	add    BYTE PTR [rax],al
    dd43:	00 1d cc ff ff 6f    	add    BYTE PTR [rip+0x6fffffcc],bl        # 7000dd15 <_end+0x6fed2d0d>
    dd49:	cc                   	int3   
    dd4a:	ff                   	(bad)  
    dd4b:	ff 88 cc ff ff 3d    	dec    DWORD PTR [rax+0x3dffffcc]
    dd51:	cc                   	int3   
    dd52:	ff                   	(bad)  
    dd53:	ff 56 cc             	call   QWORD PTR [rsi-0x34]
    dd56:	ff                   	(bad)  
    dd57:	ff a1 cc ff ff 2e    	jmp    QWORD PTR [rcx+0x2effffcc]
    dd5d:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 790f93 <_end+0x655f8b>
    dd63:	25 30 32 78 20       	and    eax,0x20783230
    dd68:	2d 2d 20 25 30       	sub    eax,0x3025202d
    dd6d:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
	...
    dd78:	73 72                	jae    ddec <_IO_stdin_used+0x1dec>
    dd7a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    dd7c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd7d:	75 61                	jne    dde0 <_IO_stdin_used+0x1de0>
    dd7f:	2f                   	(bad)  
    dd80:	73 63                	jae    dde5 <_IO_stdin_used+0x1de5>
    dd82:	72 69                	jb     dded <_IO_stdin_used+0x1ded>
    dd84:	70 74                	jo     ddfa <_IO_stdin_used+0x1dfa>
    dd86:	73 2f                	jae    ddb7 <_IO_stdin_used+0x1db7>
    dd88:	68 65 6c 6c 6f       	push   0x6f6c6c65
    dd8d:	74 65                	je     ddf4 <_IO_stdin_used+0x1df4>
    dd8f:	73 74                	jae    de05 <_IO_stdin_used+0x1e05>
    dd91:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    dd93:	75 61                	jne    ddf6 <_IO_stdin_used+0x1df6>
    dd95:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    dd98:	2f                   	(bad)  
    dd99:	65 74 63             	gs je  ddff <_IO_stdin_used+0x1dff>
    dd9c:	2f                   	(bad)  
    dd9d:	76 69                	jbe    de08 <_IO_stdin_used+0x1e08>
    dd9f:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    dda6:	72 69 
    dda8:	70 74                	jo     de1e <_IO_stdin_used+0x1e1e>
    ddaa:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    ddae:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    ddb2:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ddb9:	20 
    ddba:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    ddbd:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddbe:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    ddc3:	75 61                	jne    de26 <_IO_stdin_used+0x1e26>
    ddc5:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    ddc8:	72 69                	jb     de33 <_IO_stdin_used+0x1e33>
    ddca:	70 74                	jo     de40 <_IO_stdin_used+0x1e40>
    ddcc:	73 3a                	jae    de08 <_IO_stdin_used+0x1e08>
    ddce:	20 2f                	and    BYTE PTR [rdi],ch
    ddd0:	65 74 63             	gs je  de36 <_IO_stdin_used+0x1e36>
    ddd3:	2f                   	(bad)  
    ddd4:	76 69                	jbe    de3f <_IO_stdin_used+0x1e3f>
    ddd6:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    dddd:	72 69 
    dddf:	70 74                	jo     de55 <_IO_stdin_used+0x1e55>
    dde1:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    dde5:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    dde9:	74 20                	je     de0b <_IO_stdin_used+0x1e0b>
    ddeb:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    dded:	75 6e                	jne    de5d <_IO_stdin_used+0x1e5d>
    ddef:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    ddf3:	2a 2e                	sub    ch,BYTE PTR [rsi]
    ddf5:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddf6:	75 61                	jne    de59 <_IO_stdin_used+0x1e59>
    ddf8:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    ddfa:	2a 00                	sub    al,BYTE PTR [rax]
    ddfc:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddfd:	5f                   	pop    rdi
    ddfe:	73 63                	jae    de63 <_IO_stdin_used+0x1e63>
    de00:	72 69                	jb     de6b <_IO_stdin_used+0x1e6b>
    de02:	70 74                	jo     de78 <_IO_stdin_used+0x1e78>
    de04:	5f                   	pop    rdi
    de05:	72 6f                	jb     de76 <_IO_stdin_used+0x1e76>
    de07:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de08:	74 3d                	je     de47 <_IO_stdin_used+0x1e47>
    de0a:	00 0a                	add    BYTE PTR [rdx],cl
    de0c:	00 00                	add    BYTE PTR [rax],al
    de0e:	00 00                	add    BYTE PTR [rax],al
    de10:	49 50                	rex.WB push r8
    de12:	76 36                	jbe    de4a <_IO_stdin_used+0x1e4a>
    de14:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfe8d <_end+0x3e1a4e85>
    de1a:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250fe93 <_end+0x723d4e8b>
    de20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de21:	74 6f                	je     de92 <_IO_stdin_used+0x1e92>
    de23:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de26:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    de29:	6d                   	ins    DWORD PTR es:[rdi],dx
    de2a:	62                   	(bad)  
    de2b:	65 72 20             	gs jb  de4e <_IO_stdin_used+0x1e4e>
    de2e:	3d 20 25 64 0a       	cmp    eax,0xa642520
    de33:	00 00                	add    BYTE PTR [rax],al
    de35:	00 00                	add    BYTE PTR [rax],al
    de37:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    de3a:	67 6d                	ins    DWORD PTR es:[edi],dx
    de3c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    de3e:	74 61                	je     dea1 <_IO_stdin_used+0x1ea1>
    de40:	74 69                	je     deab <_IO_stdin_used+0x1eab>
    de42:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de43:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de44:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    de47:	75 6c                	jne    deb5 <_IO_stdin_used+0x1eb5>
    de49:	74 20                	je     de6b <_IO_stdin_used+0x1e6b>
    de4b:	61                   	(bad)  
    de4c:	74 20                	je     de6e <_IO_stdin_used+0x1e6e>
    de4e:	25 73 3a 20 61       	and    eax,0x61203a73
    de53:	70 70                	jo     dec5 <_IO_stdin_used+0x1ec5>
    de55:	6c                   	ins    BYTE PTR es:[rdi],dx
    de56:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    de5d:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    de60:	61                   	(bad)  
    de61:	73 68                	jae    decb <_IO_stdin_used+0x1ecb>
    de63:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    de67:	46 75 6e             	rex.RX jne ded8 <_IO_stdin_used+0x1ed8>
    de6a:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    de6e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de6f:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    de72:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    de75:	72 61                	jb     ded8 <_IO_stdin_used+0x1ed8>
    de77:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    de7a:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    de7e:	00 25 73 0a 00 25    	add    BYTE PTR [rip+0x25000a73],ah        # 2500e8f7 <_end+0x24ed38ef>
    de84:	73 28                	jae    deae <_IO_stdin_used+0x1eae>
    de86:	2e 2f                	cs (bad) 
    de88:	76 69                	jbe    def3 <_IO_stdin_used+0x1ef3>
    de8a:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    de91:	28 2b 
    de93:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    de96:	30 32                	xor    BYTE PTR [rdx],dh
    de98:	78 29                	js     dec3 <_IO_stdin_used+0x1ec3>
    de9a:	29 0a                	sub    DWORD PTR [rdx],ecx
    de9c:	00 00                	add    BYTE PTR [rax],al
    de9e:	00 00                	add    BYTE PTR [rax],al
    dea0:	55                   	push   rbp
    dea1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dea2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dea6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dea7:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    deaa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    deab:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    deaf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    deb0:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    deb3:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    deb6:	6d                   	ins    DWORD PTR es:[rdi],dx
    deb7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    deb8:	72 79                	jb     df33 <_IO_stdin_used+0x1f33>
    deba:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    debd:	66 73 65             	data16 jae df25 <_IO_stdin_used+0x1f25>
    dec0:	74 20                	je     dee2 <_IO_stdin_used+0x1ee2>
    dec2:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    dec5:	30 32                	xor    BYTE PTR [rdx],dh
    dec7:	78 0a                	js     ded3 <_IO_stdin_used+0x1ed3>
    dec9:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    decc:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    ded3:	44 
    ded4:	75 6d                	jne    df43 <_IO_stdin_used+0x1f43>
    ded6:	70 3a                	jo     df12 <_IO_stdin_used+0x1f12>
    ded8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dedb:	41 58                	pop    r8
    dedd:	5d                   	pop    rbp
    dede:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f04 <_end+0x25655efc>
    dee4:	30 32                	xor    BYTE PTR [rdx],dh
    dee6:	78 0a                	js     def2 <_IO_stdin_used+0x1ef2>
    dee8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    deeb:	42 58                	rex.X pop rax
    deed:	5d                   	pop    rbp
    deee:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f14 <_end+0x25655f0c>
    def4:	30 32                	xor    BYTE PTR [rdx],dh
    def6:	78 0a                	js     df02 <_IO_stdin_used+0x1f02>
    def8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    defb:	43 58                	rex.XB pop r8
    defd:	5d                   	pop    rbp
    defe:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f24 <_end+0x25655f1c>
    df04:	30 32                	xor    BYTE PTR [rdx],dh
    df06:	78 0a                	js     df12 <_IO_stdin_used+0x1f12>
    df08:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df0b:	44 58                	rex.R pop rax
    df0d:	5d                   	pop    rbp
    df0e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f34 <_end+0x25655f2c>
    df14:	30 32                	xor    BYTE PTR [rdx],dh
    df16:	78 0a                	js     df22 <_IO_stdin_used+0x1f22>
    df18:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df1b:	53                   	push   rbx
    df1c:	50                   	push   rax
    df1d:	5d                   	pop    rbp
    df1e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f44 <_end+0x25655f3c>
    df24:	30 32                	xor    BYTE PTR [rdx],dh
    df26:	78 0a                	js     df32 <_IO_stdin_used+0x1f32>
    df28:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df2b:	42 50                	rex.X push rax
    df2d:	5d                   	pop    rbp
    df2e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f54 <_end+0x25655f4c>
    df34:	30 32                	xor    BYTE PTR [rdx],dh
    df36:	78 0a                	js     df42 <_IO_stdin_used+0x1f42>
	...
    df40:	25 73 20 5b 73       	and    eax,0x735b2073
    df45:	74 61                	je     dfa8 <_IO_stdin_used+0x1fa8>
    df47:	72 74                	jb     dfbd <_IO_stdin_used+0x1fbd>
    df49:	20 25 64 5d 20 5b    	and    BYTE PTR [rip+0x5b205d64],ah        # 5b213cb3 <_end+0x5b0d8cab>
    df4f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    df51:	64 20 25 64 5d 0a 00 	and    BYTE PTR fs:[rip+0xa5d64],ah        # b3cbc <rules+0xa29dc>
    df58:	72 00                	jb     df5a <_IO_stdin_used+0x1f5a>
    df5a:	2f                   	(bad)  
    df5b:	75 73                	jne    dfd0 <_IO_stdin_used+0x1fd0>
    df5d:	72 2f                	jb     df8e <_IO_stdin_used+0x1f8e>
    df5f:	73 68                	jae    dfc9 <_IO_stdin_used+0x1fc9>
    df61:	61                   	(bad)  
    df62:	72 65                	jb     dfc9 <_IO_stdin_used+0x1fc9>
    df64:	2f                   	(bad)  
    df65:	76 69                	jbe    dfd0 <_IO_stdin_used+0x1fd0>
    df67:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    df6e:	6d 61 
    df70:	70 2e                	jo     dfa0 <_IO_stdin_used+0x1fa0>
    df72:	74 78                	je     dfec <__GNU_EH_FRAME_HDR+0x8>
    df74:	74 00                	je     df76 <_IO_stdin_used+0x1f76>
    df76:	00 00                	add    BYTE PTR [rax],al
    df78:	46                   	rex.RX
    df79:	41 54                	push   r12
    df7b:	41                   	rex.B
    df7c:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    df80:	52                   	push   rdx
    df81:	4f 52                	rex.WRXB push r10
    df83:	3a 20                	cmp    ah,BYTE PTR [rax]
    df85:	6d                   	ins    DWORD PTR es:[rdi],dx
    df86:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    df88:	6d                   	ins    DWORD PTR es:[rdi],dx
    df89:	61                   	(bad)  
    df8a:	70 2e                	jo     dfba <_IO_stdin_used+0x1fba>
    df8c:	74 78                	je     e006 <__GNU_EH_FRAME_HDR+0x22>
    df8e:	74 20                	je     dfb0 <_IO_stdin_used+0x1fb0>
    df90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df91:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df92:	74 20                	je     dfb4 <_IO_stdin_used+0x1fb4>
    df94:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    df96:	75 6e                	jne    e006 <__GNU_EH_FRAME_HDR+0x22>
    df98:	64 2e 50             	fs cs push rax
    df9b:	6c                   	ins    BYTE PTR es:[rdi],dx
    df9c:	65 61                	gs (bad) 
    df9e:	73 65                	jae    e005 <__GNU_EH_FRAME_HDR+0x21>
    dfa0:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    dfa3:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dfa6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfa7:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    dfaa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfab:	5f                   	pop    rdi
    dfac:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfad:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    dfaf:	5f                   	pop    rdi
    dfb0:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfb1:	61                   	(bad)  
    dfb2:	70 2e                	jo     dfe2 <_IO_stdin_used+0x1fe2>
    dfb4:	70 79                	jo     e02f <__GNU_EH_FRAME_HDR+0x4b>
    dfb6:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    dfb9:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    dfbd:	70 79                	jo     e038 <__GNU_EH_FRAME_HDR+0x54>
    dfbf:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    dfc2:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfc3:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfc4:	61                   	(bad)  
    dfc5:	70 2e                	jo     dff5 <__GNU_EH_FRAME_HDR+0x11>
    dfc7:	74 78                	je     e041 <__GNU_EH_FRAME_HDR+0x5d>
    dfc9:	74 20                	je     dfeb <__GNU_EH_FRAME_HDR+0x7>
    dfcb:	74 6f                	je     e03c <__GNU_EH_FRAME_HDR+0x58>
    dfcd:	20 2f                	and    BYTE PTR [rdi],ch
    dfcf:	75 73                	jne    e044 <__GNU_EH_FRAME_HDR+0x60>
    dfd1:	72 2f                	jb     e002 <__GNU_EH_FRAME_HDR+0x1e>
    dfd3:	73 68                	jae    e03d <__GNU_EH_FRAME_HDR+0x59>
    dfd5:	61                   	(bad)  
    dfd6:	72 65                	jb     e03d <__GNU_EH_FRAME_HDR+0x59>
    dfd8:	2f                   	(bad)  
    dfd9:	76 69                	jbe    e044 <__GNU_EH_FRAME_HDR+0x60>
    dfdb:	67                   	addr32
    dfdc:	69                   	.byte 0x69
    dfdd:	6c                   	ins    BYTE PTR es:[rdi],dx
    dfde:	00 0a                	add    BYTE PTR [rdx],cl
    dfe0:	00 20                	add    BYTE PTR [rax],ah
	...

Disassembly of section .eh_frame_hdr:

000000000000dfe4 <__GNU_EH_FRAME_HDR>:
    dfe4:	01 1b                	add    DWORD PTR [rbx],ebx
    dfe6:	03 3b                	add    edi,DWORD PTR [rbx]
    dfe8:	90                   	nop
    dfe9:	03 00                	add    eax,DWORD PTR [rax]
    dfeb:	00 71 00             	add    BYTE PTR [rcx+0x0],dh
    dfee:	00 00                	add    BYTE PTR [rax],al
    dff0:	3c 40                	cmp    al,0x40
    dff2:	ff                   	(bad)  
    dff3:	ff c4                	inc    esp
    dff5:	03 00                	add    eax,DWORD PTR [rax]
    dff7:	00 5c 44 ff          	add    BYTE PTR [rsp+rax*2-0x1],bl
    dffb:	ff                   	(bad)  
    dffc:	ec                   	in     al,dx
    dffd:	03 00                	add    eax,DWORD PTR [rax]
    dfff:	00 6c 44 ff          	add    BYTE PTR [rsp+rax*2-0x1],ch
    e003:	ff 04 04             	inc    DWORD PTR [rsp+rax*1]
    e006:	00 00                	add    BYTE PTR [rax],al
    e008:	7c 48                	jl     e052 <__GNU_EH_FRAME_HDR+0x6e>
    e00a:	ff                   	(bad)  
    e00b:	ff ac 03 00 00 65 49 	jmp    FWORD PTR [rbx+rax*1+0x49650000]
    e012:	ff                   	(bad)  
    e013:	ff 1c 04             	call   FWORD PTR [rsp+rax*1]
    e016:	00 00                	add    BYTE PTR [rax],al
    e018:	9f                   	lahf   
    e019:	49 ff                	rex.WB (bad) 
    e01b:	ff                   	(bad)  
    e01c:	3c 04                	cmp    al,0x4
    e01e:	00 00                	add    BYTE PTR [rax],al
    e020:	eb 4a                	jmp    e06c <__GNU_EH_FRAME_HDR+0x88>
    e022:	ff                   	(bad)  
    e023:	ff 64 04 00          	jmp    QWORD PTR [rsp+rax*1+0x0]
    e027:	00 df                	add    bh,bl
    e029:	4d ff                	rex.WRB (bad) 
    e02b:	ff 84 04 00 00 f2 4e 	inc    DWORD PTR [rsp+rax*1+0x4ef20000]
    e032:	ff                   	(bad)  
    e033:	ff a4 04 00 00 a0 4f 	jmp    QWORD PTR [rsp+rax*1+0x4fa00000]
    e03a:	ff                   	(bad)  
    e03b:	ff c4                	inc    esp
    e03d:	04 00                	add    al,0x0
    e03f:	00 46 50             	add    BYTE PTR [rsi+0x50],al
    e042:	ff                   	(bad)  
    e043:	ff e4                	jmp    rsp
    e045:	04 00                	add    al,0x0
    e047:	00 db                	add    bl,bl
    e049:	50                   	push   rax
    e04a:	ff                   	(bad)  
    e04b:	ff 04 05 00 00 6f 51 	inc    DWORD PTR [rax*1+0x516f0000]
    e052:	ff                   	(bad)  
    e053:	ff 24 05 00 00 3b 53 	jmp    QWORD PTR [rax*1+0x533b0000]
    e05a:	ff                   	(bad)  
    e05b:	ff 50 05             	call   QWORD PTR [rax+0x5]
    e05e:	00 00                	add    BYTE PTR [rax],al
    e060:	0f 54 ff             	andps  xmm7,xmm7
    e063:	ff 74 05 00          	push   QWORD PTR [rbp+rax*1+0x0]
    e067:	00 d6                	add    dh,dl
    e069:	54                   	push   rsp
    e06a:	ff                   	(bad)  
    e06b:	ff 98 05 00 00 29    	call   FWORD PTR [rax+0x29000005]
    e071:	55                   	push   rbp
    e072:	ff                   	(bad)  
    e073:	ff                   	(bad)  
    e074:	b8 05 00 00 5c       	mov    eax,0x5c000005
    e079:	55                   	push   rbp
    e07a:	ff                   	(bad)  
    e07b:	ff                   	(bad)  
    e07c:	d8 05 00 00 7d 55    	fadd   DWORD PTR [rip+0x557d0000]        # 557de082 <_end+0x556a307a>
    e082:	ff                   	(bad)  
    e083:	ff                   	(bad)  
    e084:	f8                   	clc    
    e085:	05 00 00 e5 55       	add    eax,0x55e50000
    e08a:	ff                   	(bad)  
    e08b:	ff 1c 06             	call   FWORD PTR [rsi+rax*1]
    e08e:	00 00                	add    BYTE PTR [rax],al
    e090:	0a 5a ff             	or     bl,BYTE PTR [rdx-0x1]
    e093:	ff                   	(bad)  
    e094:	3c 06                	cmp    al,0x6
    e096:	00 00                	add    BYTE PTR [rax],al
    e098:	67 5b                	addr32 pop rbx
    e09a:	ff                   	(bad)  
    e09b:	ff 5c 06 00          	call   FWORD PTR [rsi+rax*1+0x0]
    e09f:	00 ab 63 ff ff 7c    	add    BYTE PTR [rbx+0x7cffff63],ch
    e0a5:	06                   	(bad)  
    e0a6:	00 00                	add    BYTE PTR [rax],al
    e0a8:	2c 6c                	sub    al,0x6c
    e0aa:	ff                   	(bad)  
    e0ab:	ff a4 06 00 00 81 6d 	jmp    QWORD PTR [rsi+rax*1+0x6d810000]
    e0b2:	ff                   	(bad)  
    e0b3:	ff c4                	inc    esp
    e0b5:	06                   	(bad)  
    e0b6:	00 00                	add    BYTE PTR [rax],al
    e0b8:	80 6e ff ff          	sub    BYTE PTR [rsi-0x1],0xff
    e0bc:	e4 06                	in     al,0x6
    e0be:	00 00                	add    BYTE PTR [rax],al
    e0c0:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e0c2:	ff                   	(bad)  
    e0c3:	ff 04 07             	inc    DWORD PTR [rdi+rax*1]
    e0c6:	00 00                	add    BYTE PTR [rax],al
    e0c8:	1e                   	(bad)  
    e0c9:	73 ff                	jae    e0ca <__GNU_EH_FRAME_HDR+0xe6>
    e0cb:	ff 24 07             	jmp    QWORD PTR [rdi+rax*1]
    e0ce:	00 00                	add    BYTE PTR [rax],al
    e0d0:	a1 73 ff ff 44 07 00 	movabs eax,ds:0xcb00000744ffff73
    e0d7:	00 cb 
    e0d9:	75 ff                	jne    e0da <__GNU_EH_FRAME_HDR+0xf6>
    e0db:	ff 6c 07 00          	jmp    FWORD PTR [rdi+rax*1+0x0]
    e0df:	00 08                	add    BYTE PTR [rax],cl
    e0e1:	78 ff                	js     e0e2 <__GNU_EH_FRAME_HDR+0xfe>
    e0e3:	ff 90 07 00 00 6e    	call   QWORD PTR [rax+0x6e000007]
    e0e9:	78 ff                	js     e0ea <__GNU_EH_FRAME_HDR+0x106>
    e0eb:	ff b0 07 00 00 85    	push   QWORD PTR [rax-0x7afffff9]
    e0f1:	78 ff                	js     e0f2 <__GNU_EH_FRAME_HDR+0x10e>
    e0f3:	ff d0                	call   rax
    e0f5:	07                   	(bad)  
    e0f6:	00 00                	add    BYTE PTR [rax],al
    e0f8:	d6                   	(bad)  
    e0f9:	78 ff                	js     e0fa <__GNU_EH_FRAME_HDR+0x116>
    e0fb:	ff f4                	push   rsp
    e0fd:	07                   	(bad)  
    e0fe:	00 00                	add    BYTE PTR [rax],al
    e100:	13 7f ff             	adc    edi,DWORD PTR [rdi-0x1]
    e103:	ff 18                	call   FWORD PTR [rax]
    e105:	08 00                	or     BYTE PTR [rax],al
    e107:	00 2d 7f ff ff 38    	add    BYTE PTR [rip+0x38ffff7f],ch        # 3900e08c <_end+0x38ed3084>
    e10d:	08 00                	or     BYTE PTR [rax],al
    e10f:	00 56 7f             	add    BYTE PTR [rsi+0x7f],dl
    e112:	ff                   	(bad)  
    e113:	ff 58 08             	call   FWORD PTR [rax+0x8]
    e116:	00 00                	add    BYTE PTR [rax],al
    e118:	86 7f ff             	xchg   BYTE PTR [rdi-0x1],bh
    e11b:	ff                   	(bad)  
    e11c:	78 08                	js     e126 <__GNU_EH_FRAME_HDR+0x142>
    e11e:	00 00                	add    BYTE PTR [rax],al
    e120:	bd 7f ff ff 94       	mov    ebp,0x94ffff7f
    e125:	08 00                	or     BYTE PTR [rax],al
    e127:	00 02                	add    BYTE PTR [rdx],al
    e129:	81 ff ff b4 08 00    	cmp    edi,0x8b4ff
    e12f:	00 62 82             	add    BYTE PTR [rdx-0x7e],ah
    e132:	ff                   	(bad)  
    e133:	ff d4                	call   rsp
    e135:	08 00                	or     BYTE PTR [rax],al
    e137:	00 c3                	add    bl,al
    e139:	82                   	(bad)  
    e13a:	ff                   	(bad)  
    e13b:	ff f4                	push   rsp
    e13d:	08 00                	or     BYTE PTR [rax],al
    e13f:	00 81 83 ff ff 14    	add    BYTE PTR [rcx+0x14ffff83],al
    e145:	09 00                	or     DWORD PTR [rax],eax
    e147:	00 d3                	add    bl,dl
    e149:	85 ff                	test   edi,edi
    e14b:	ff 34 09             	push   QWORD PTR [rcx+rcx*1]
    e14e:	00 00                	add    BYTE PTR [rax],al
    e150:	cb                   	retf   
    e151:	87 ff                	xchg   edi,edi
    e153:	ff 54 09 00          	call   QWORD PTR [rcx+rcx*1+0x0]
    e157:	00 25 88 ff ff 74    	add    BYTE PTR [rip+0x74ffff88],ah        # 7500e0e5 <_end+0x74ed30dd>
    e15d:	09 00                	or     DWORD PTR [rax],eax
    e15f:	00 34 8b             	add    BYTE PTR [rbx+rcx*4],dh
    e162:	ff                   	(bad)  
    e163:	ff 94 09 00 00 85 8f 	call   QWORD PTR [rcx+rcx*1-0x707b0000]
    e16a:	ff                   	(bad)  
    e16b:	ff b4 09 00 00 af 8f 	push   QWORD PTR [rcx+rcx*1-0x70510000]
    e172:	ff                   	(bad)  
    e173:	ff d0                	call   rax
    e175:	09 00                	or     DWORD PTR [rax],eax
    e177:	00 61 91             	add    BYTE PTR [rcx-0x6f],ah
    e17a:	ff                   	(bad)  
    e17b:	ff f4                	push   rsp
    e17d:	09 00                	or     DWORD PTR [rax],eax
    e17f:	00 78 91             	add    BYTE PTR [rax-0x6f],bh
    e182:	ff                   	(bad)  
    e183:	ff 14 0a             	call   QWORD PTR [rdx+rcx*1]
    e186:	00 00                	add    BYTE PTR [rax],al
    e188:	c7                   	(bad)  
    e189:	91                   	xchg   ecx,eax
    e18a:	ff                   	(bad)  
    e18b:	ff 34 0a             	push   QWORD PTR [rdx+rcx*1]
    e18e:	00 00                	add    BYTE PTR [rax],al
    e190:	14 92                	adc    al,0x92
    e192:	ff                   	(bad)  
    e193:	ff 54 0a 00          	call   QWORD PTR [rdx+rcx*1+0x0]
    e197:	00 8b 93 ff ff 70    	add    BYTE PTR [rbx+0x70ffff93],cl
    e19d:	0a 00                	or     al,BYTE PTR [rax]
    e19f:	00 fd                	add    ch,bh
    e1a1:	93                   	xchg   ebx,eax
    e1a2:	ff                   	(bad)  
    e1a3:	ff 8c 0a 00 00 eb 95 	dec    DWORD PTR [rdx+rcx*1-0x6a150000]
    e1aa:	ff                   	(bad)  
    e1ab:	ff ac 0a 00 00 d3 97 	jmp    FWORD PTR [rdx+rcx*1-0x682d0000]
    e1b2:	ff                   	(bad)  
    e1b3:	ff cc                	dec    esp
    e1b5:	0a 00                	or     al,BYTE PTR [rax]
    e1b7:	00 3f                	add    BYTE PTR [rdi],bh
    e1b9:	98                   	cwde   
    e1ba:	ff                   	(bad)  
    e1bb:	ff                   	(bad)  
    e1bc:	ec                   	in     al,dx
    e1bd:	0a 00                	or     al,BYTE PTR [rax]
    e1bf:	00 b1 98 ff ff 0c    	add    BYTE PTR [rcx+0xcffff98],dh
    e1c5:	0b 00                	or     eax,DWORD PTR [rax]
    e1c7:	00 c2                	add    dl,al
    e1c9:	99                   	cdq    
    e1ca:	ff                   	(bad)  
    e1cb:	ff 2c 0b             	jmp    FWORD PTR [rbx+rcx*1]
    e1ce:	00 00                	add    BYTE PTR [rax],al
    e1d0:	1e                   	(bad)  
    e1d1:	9a                   	(bad)  
    e1d2:	ff                   	(bad)  
    e1d3:	ff 4c 0b 00          	dec    DWORD PTR [rbx+rcx*1+0x0]
    e1d7:	00 5c 9a ff          	add    BYTE PTR [rdx+rbx*4-0x1],bl
    e1db:	ff 6c 0b 00          	jmp    FWORD PTR [rbx+rcx*1+0x0]
    e1df:	00 e2                	add    dl,ah
    e1e1:	9a                   	(bad)  
    e1e2:	ff                   	(bad)  
    e1e3:	ff 8c 0b 00 00 c1 9b 	dec    DWORD PTR [rbx+rcx*1-0x643f0000]
    e1ea:	ff                   	(bad)  
    e1eb:	ff ac 0b 00 00 35 9c 	jmp    FWORD PTR [rbx+rcx*1-0x63cb0000]
    e1f2:	ff                   	(bad)  
    e1f3:	ff cc                	dec    esp
    e1f5:	0b 00                	or     eax,DWORD PTR [rax]
    e1f7:	00 d1                	add    cl,dl
    e1f9:	9c                   	pushf  
    e1fa:	ff                   	(bad)  
    e1fb:	ff                   	(bad)  
    e1fc:	ec                   	in     al,dx
    e1fd:	0b 00                	or     eax,DWORD PTR [rax]
    e1ff:	00 fa                	add    dl,bh
    e201:	9c                   	pushf  
    e202:	ff                   	(bad)  
    e203:	ff 0c 0c             	dec    DWORD PTR [rsp+rcx*1]
    e206:	00 00                	add    BYTE PTR [rax],al
    e208:	23 9d ff ff 2c 0c    	and    ebx,DWORD PTR [rbp+0xc2cffff]
    e20e:	00 00                	add    BYTE PTR [rax],al
    e210:	76 9e                	jbe    e1b0 <__GNU_EH_FRAME_HDR+0x1cc>
    e212:	ff                   	(bad)  
    e213:	ff 54 0c 00          	call   QWORD PTR [rsp+rcx*1+0x0]
    e217:	00 94 9e ff ff 74 0c 	add    BYTE PTR [rsi+rbx*4+0xc74ffff],dl
    e21e:	00 00                	add    BYTE PTR [rax],al
    e220:	f7 9f ff ff 94 0c    	neg    DWORD PTR [rdi+0xc94ffff]
    e226:	00 00                	add    BYTE PTR [rax],al
    e228:	05 a2 ff ff c4       	add    eax,0xc4ffffa2
    e22d:	0c 00                	or     al,0x0
    e22f:	00 b7 a2 ff ff e4    	add    BYTE PTR [rdi-0x1b00005e],dh
    e235:	0c 00                	or     al,0x0
    e237:	00 5c a3 ff          	add    BYTE PTR [rbx+riz*4-0x1],bl
    e23b:	ff 04 0d 00 00 f0 a3 	inc    DWORD PTR [rcx*1-0x5c100000]
    e242:	ff                   	(bad)  
    e243:	ff 2c 0d 00 00 c5 a4 	jmp    FWORD PTR [rcx*1-0x5b3b0000]
    e24a:	ff                   	(bad)  
    e24b:	ff 4c 0d 00          	dec    DWORD PTR [rbp+rcx*1+0x0]
    e24f:	00 a4 a5 ff ff 6c 0d 	add    BYTE PTR [rbp+riz*4+0xd6cffff],ah
    e256:	00 00                	add    BYTE PTR [rax],al
    e258:	21 a6 ff ff 8c 0d    	and    DWORD PTR [rsi+0xd8cffff],esp
    e25e:	00 00                	add    BYTE PTR [rax],al
    e260:	57                   	push   rdi
    e261:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    e262:	ff                   	(bad)  
    e263:	ff ac 0d 00 00 d5 a7 	jmp    FWORD PTR [rbp+rcx*1-0x582b0000]
    e26a:	ff                   	(bad)  
    e26b:	ff cc                	dec    esp
    e26d:	0d 00 00 ff a9       	or     eax,0xa9ff0000
    e272:	ff                   	(bad)  
    e273:	ff                   	(bad)  
    e274:	ec                   	in     al,dx
    e275:	0d 00 00 c2 aa       	or     eax,0xaac20000
    e27a:	ff                   	(bad)  
    e27b:	ff 0c 0e             	dec    DWORD PTR [rsi+rcx*1]
    e27e:	00 00                	add    BYTE PTR [rax],al
    e280:	5d                   	pop    rbp
    e281:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e282:	ff                   	(bad)  
    e283:	ff 2c 0e             	jmp    FWORD PTR [rsi+rcx*1]
    e286:	00 00                	add    BYTE PTR [rax],al
    e288:	6a ad                	push   0xffffffffffffffad
    e28a:	ff                   	(bad)  
    e28b:	ff 4c 0e 00          	dec    DWORD PTR [rsi+rcx*1+0x0]
    e28f:	00 d0                	add    al,dl
    e291:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e292:	ff                   	(bad)  
    e293:	ff 6c 0e 00          	jmp    FWORD PTR [rsi+rcx*1+0x0]
    e297:	00 45 ae             	add    BYTE PTR [rbp-0x52],al
    e29a:	ff                   	(bad)  
    e29b:	ff 8c 0e 00 00 20 af 	dec    DWORD PTR [rsi+rcx*1-0x50e00000]
    e2a2:	ff                   	(bad)  
    e2a3:	ff ac 0e 00 00 92 b0 	jmp    FWORD PTR [rsi+rcx*1-0x4f6e0000]
    e2aa:	ff                   	(bad)  
    e2ab:	ff cc                	dec    esp
    e2ad:	0e                   	(bad)  
    e2ae:	00 00                	add    BYTE PTR [rax],al
    e2b0:	fe                   	(bad)  
    e2b1:	b0 ff                	mov    al,0xff
    e2b3:	ff                   	(bad)  
    e2b4:	ec                   	in     al,dx
    e2b5:	0e                   	(bad)  
    e2b6:	00 00                	add    BYTE PTR [rax],al
    e2b8:	7e b1                	jle    e26b <__GNU_EH_FRAME_HDR+0x287>
    e2ba:	ff                   	(bad)  
    e2bb:	ff 0c 0f             	dec    DWORD PTR [rdi+rcx*1]
    e2be:	00 00                	add    BYTE PTR [rax],al
    e2c0:	94                   	xchg   esp,eax
    e2c1:	b1 ff                	mov    cl,0xff
    e2c3:	ff 2c 0f             	jmp    FWORD PTR [rdi+rcx*1]
    e2c6:	00 00                	add    BYTE PTR [rax],al
    e2c8:	ce                   	(bad)  
    e2c9:	b2 ff                	mov    dl,0xff
    e2cb:	ff 50 0f             	call   QWORD PTR [rax+0xf]
    e2ce:	00 00                	add    BYTE PTR [rax],al
    e2d0:	32 b3 ff ff 70 0f    	xor    dh,BYTE PTR [rbx+0xf70ffff]
    e2d6:	00 00                	add    BYTE PTR [rax],al
    e2d8:	85 b3 ff ff 90 0f    	test   DWORD PTR [rbx+0xf90ffff],esi
    e2de:	00 00                	add    BYTE PTR [rax],al
    e2e0:	36 b4 ff             	ss mov ah,0xff
    e2e3:	ff b0 0f 00 00 01    	push   QWORD PTR [rax+0x100000f]
    e2e9:	b5 ff                	mov    ch,0xff
    e2eb:	ff d0                	call   rax
    e2ed:	0f 00 00             	sldt   WORD PTR [rax]
    e2f0:	56                   	push   rsi
    e2f1:	b5 ff                	mov    ch,0xff
    e2f3:	ff f0                	push   rax
    e2f5:	0f 00 00             	sldt   WORD PTR [rax]
    e2f8:	86 b5 ff ff 10 10    	xchg   BYTE PTR [rbp+0x1010ffff],dh
    e2fe:	00 00                	add    BYTE PTR [rax],al
    e300:	ed                   	in     eax,dx
    e301:	b5 ff                	mov    ch,0xff
    e303:	ff 30                	push   QWORD PTR [rax]
    e305:	10 00                	adc    BYTE PTR [rax],al
    e307:	00 f9                	add    cl,bh
    e309:	c4                   	(bad)  
    e30a:	ff                   	(bad)  
    e30b:	ff 54 10 00          	call   QWORD PTR [rax+rdx*1+0x0]
    e30f:	00 3f                	add    BYTE PTR [rdi],bh
    e311:	c5 ff ff             	(bad)  
    e314:	74 10                	je     e326 <__GNU_EH_FRAME_HDR+0x342>
    e316:	00 00                	add    BYTE PTR [rax],al
    e318:	7a c7                	jp     e2e1 <__GNU_EH_FRAME_HDR+0x2fd>
    e31a:	ff                   	(bad)  
    e31b:	ff 9c 10 00 00 1f c9 	call   FWORD PTR [rax+rdx*1-0x36e10000]
    e322:	ff                   	(bad)  
    e323:	ff                   	(bad)  
    e324:	bc 10 00 00 31       	mov    esp,0x31000010
    e329:	ca ff ff             	retf   0xffff
    e32c:	dc 10                	fcom   QWORD PTR [rax]
    e32e:	00 00                	add    BYTE PTR [rax],al
    e330:	ed                   	in     eax,dx
    e331:	ca ff ff             	retf   0xffff
    e334:	04 11                	add    al,0x11
    e336:	00 00                	add    BYTE PTR [rax],al
    e338:	88 cc                	mov    ah,cl
    e33a:	ff                   	(bad)  
    e33b:	ff 2c 11             	jmp    FWORD PTR [rcx+rdx*1]
    e33e:	00 00                	add    BYTE PTR [rax],al
    e340:	2d cd ff ff 4c       	sub    eax,0x4cffffcd
    e345:	11 00                	adc    DWORD PTR [rax],eax
    e347:	00 70 ce             	add    BYTE PTR [rax-0x32],dh
    e34a:	ff                   	(bad)  
    e34b:	ff 6c 11 00          	jmp    FWORD PTR [rcx+rdx*1+0x0]
    e34f:	00 63 cf             	add    BYTE PTR [rbx-0x31],ah
    e352:	ff                   	(bad)  
    e353:	ff 8c 11 00 00 f1 d1 	dec    DWORD PTR [rcx+rdx*1-0x2e0f0000]
    e35a:	ff                   	(bad)  
    e35b:	ff ac 11 00 00 5b d2 	jmp    FWORD PTR [rcx+rdx*1-0x2da50000]
    e362:	ff                   	(bad)  
    e363:	ff cc                	dec    esp
    e365:	11 00                	adc    DWORD PTR [rax],eax
    e367:	00 c9                	add    cl,cl
    e369:	d2 ff                	sar    bh,cl
    e36b:	ff                   	(bad)  
    e36c:	ec                   	in     al,dx
    e36d:	11 00                	adc    DWORD PTR [rax],eax
    e36f:	00 39                	add    BYTE PTR [rcx],bh
    e371:	d3 ff                	sar    edi,cl
    e373:	ff 0c 12             	dec    DWORD PTR [rdx+rdx*1]
	...

Disassembly of section .eh_frame:

000000000000e378 <__FRAME_END__-0xe9c>:
    e378:	14 00                	adc    al,0x0
    e37a:	00 00                	add    BYTE PTR [rax],al
    e37c:	00 00                	add    BYTE PTR [rax],al
    e37e:	00 00                	add    BYTE PTR [rax],al
    e380:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e383:	00 01                	add    BYTE PTR [rcx],al
    e385:	78 10                	js     e397 <__GNU_EH_FRAME_HDR+0x3b3>
    e387:	01 1b                	add    DWORD PTR [rbx],ebx
    e389:	0c 07                	or     al,0x7
    e38b:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e391:	00 00                	add    BYTE PTR [rax],al
    e393:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e396:	00 00                	add    BYTE PTR [rax],al
    e398:	c8 44 ff ff          	enter  0xff44,0xff
    e39c:	26 00 00             	es add BYTE PTR [rax],al
    e39f:	00 00                	add    BYTE PTR [rax],al
    e3a1:	44 07                	rex.R (bad) 
    e3a3:	10 00                	adc    BYTE PTR [rax],al
    e3a5:	00 00                	add    BYTE PTR [rax],al
    e3a7:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e3aa:	00 00                	add    BYTE PTR [rax],al
    e3ac:	34 00                	xor    al,0x0
    e3ae:	00 00                	add    BYTE PTR [rax],al
    e3b0:	70 3c                	jo     e3ee <__GNU_EH_FRAME_HDR+0x40a>
    e3b2:	ff                   	(bad)  
    e3b3:	ff 20                	jmp    QWORD PTR [rax]
    e3b5:	04 00                	add    al,0x0
    e3b7:	00 00                	add    BYTE PTR [rax],al
    e3b9:	0e                   	(bad)  
    e3ba:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e3bd:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e3c0:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e3c3:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e3c6:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e3c8:	2a 33                	sub    dh,BYTE PTR [rbx]
    e3ca:	24 22                	and    al,0x22
    e3cc:	00 00                	add    BYTE PTR [rax],al
    e3ce:	00 00                	add    BYTE PTR [rax],al
    e3d0:	14 00                	adc    al,0x0
    e3d2:	00 00                	add    BYTE PTR [rax],al
    e3d4:	5c                   	pop    rsp
    e3d5:	00 00                	add    BYTE PTR [rax],al
    e3d7:	00 68 40             	add    BYTE PTR [rax+0x40],ch
    e3da:	ff                   	(bad)  
    e3db:	ff 10                	call   QWORD PTR [rax]
	...
    e3e5:	00 00                	add    BYTE PTR [rax],al
    e3e7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e3ea:	00 00                	add    BYTE PTR [rax],al
    e3ec:	74 00                	je     e3ee <__GNU_EH_FRAME_HDR+0x40a>
    e3ee:	00 00                	add    BYTE PTR [rax],al
    e3f0:	60                   	(bad)  
    e3f1:	40 ff                	rex (bad) 
    e3f3:	ff 10                	call   QWORD PTR [rax]
    e3f5:	04 00                	add    al,0x0
	...
    e3ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e402:	00 00                	add    BYTE PTR [rax],al
    e404:	8c 00                	mov    WORD PTR [rax],es
    e406:	00 00                	add    BYTE PTR [rax],al
    e408:	41                   	rex.B
    e409:	45 ff                	rex.RB (bad) 
    e40b:	ff                   	(bad)  
    e40c:	3a 00                	cmp    al,BYTE PTR [rax]
    e40e:	00 00                	add    BYTE PTR [rax],al
    e410:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e413:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e419:	71 0c                	jno    e427 <__GNU_EH_FRAME_HDR+0x443>
    e41b:	07                   	(bad)  
    e41c:	08 00                	or     BYTE PTR [rax],al
    e41e:	00 00                	add    BYTE PTR [rax],al
    e420:	24 00                	and    al,0x0
    e422:	00 00                	add    BYTE PTR [rax],al
    e424:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e425:	00 00                	add    BYTE PTR [rax],al
    e427:	00 5b 45             	add    BYTE PTR [rbx+0x45],bl
    e42a:	ff                   	(bad)  
    e42b:	ff 4c 01 00          	dec    DWORD PTR [rcx+rax*1+0x0]
    e42f:	00 00                	add    BYTE PTR [rax],al
    e431:	45 0e                	rex.RB (bad) 
    e433:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e439:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e43d:	3e 01 0c 07          	ds add DWORD PTR [rdi+rax*1],ecx
    e441:	08 00                	or     BYTE PTR [rax],al
    e443:	00 00                	add    BYTE PTR [rax],al
    e445:	00 00                	add    BYTE PTR [rax],al
    e447:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e44a:	00 00                	add    BYTE PTR [rax],al
    e44c:	d4                   	(bad)  
    e44d:	00 00                	add    BYTE PTR [rax],al
    e44f:	00 7f 46             	add    BYTE PTR [rdi+0x46],bh
    e452:	ff                   	(bad)  
    e453:	ff f4                	push   rsp
    e455:	02 00                	add    al,BYTE PTR [rax]
    e457:	00 00                	add    BYTE PTR [rax],al
    e459:	45 0e                	rex.RB (bad) 
    e45b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e461:	03 eb                	add    ebp,ebx
    e463:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e466:	08 00                	or     BYTE PTR [rax],al
    e468:	1c 00                	sbb    al,0x0
    e46a:	00 00                	add    BYTE PTR [rax],al
    e46c:	f4                   	hlt    
    e46d:	00 00                	add    BYTE PTR [rax],al
    e46f:	00 53 49             	add    BYTE PTR [rbx+0x49],dl
    e472:	ff                   	(bad)  
    e473:	ff 13                	call   QWORD PTR [rbx]
    e475:	01 00                	add    DWORD PTR [rax],eax
    e477:	00 00                	add    BYTE PTR [rax],al
    e479:	45 0e                	rex.RB (bad) 
    e47b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e481:	03 0a                	add    ecx,DWORD PTR [rdx]
    e483:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e486:	08 00                	or     BYTE PTR [rax],al
    e488:	1c 00                	sbb    al,0x0
    e48a:	00 00                	add    BYTE PTR [rax],al
    e48c:	14 01                	adc    al,0x1
    e48e:	00 00                	add    BYTE PTR [rax],al
    e490:	46                   	rex.RX
    e491:	4a ff                	rex.WX (bad) 
    e493:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    e499:	45 0e                	rex.RB (bad) 
    e49b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4a1:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e4a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4aa:	00 00                	add    BYTE PTR [rax],al
    e4ac:	34 01                	xor    al,0x1
    e4ae:	00 00                	add    BYTE PTR [rax],al
    e4b0:	d4                   	(bad)  
    e4b1:	4a ff                	rex.WX (bad) 
    e4b3:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    e4b9:	45 0e                	rex.RB (bad) 
    e4bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4c1:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e4c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4ca:	00 00                	add    BYTE PTR [rax],al
    e4cc:	54                   	push   rsp
    e4cd:	01 00                	add    DWORD PTR [rax],eax
    e4cf:	00 5a 4b             	add    BYTE PTR [rdx+0x4b],bl
    e4d2:	ff                   	(bad)  
    e4d3:	ff 95 00 00 00 00    	call   QWORD PTR [rbp+0x0]
    e4d9:	45 0e                	rex.RB (bad) 
    e4db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4e1:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e4e8:	1c 00                	sbb    al,0x0
    e4ea:	00 00                	add    BYTE PTR [rax],al
    e4ec:	74 01                	je     e4ef <__GNU_EH_FRAME_HDR+0x50b>
    e4ee:	00 00                	add    BYTE PTR [rax],al
    e4f0:	cf                   	iret   
    e4f1:	4b ff                	rex.WXB (bad) 
    e4f3:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e4fa:	0e                   	(bad)  
    e4fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e501:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e507:	00 28                	add    BYTE PTR [rax],ch
    e509:	00 00                	add    BYTE PTR [rax],al
    e50b:	00 94 01 00 00 43 4c 	add    BYTE PTR [rcx+rax*1+0x4c430000],dl
    e512:	ff                   	(bad)  
    e513:	ff cc                	dec    esp
    e515:	01 00                	add    DWORD PTR [rax],eax
    e517:	00 00                	add    BYTE PTR [rax],al
    e519:	45 0e                	rex.RB (bad) 
    e51b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e521:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e524:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e52b:	07                   	(bad)  
    e52c:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e532:	00 00                	add    BYTE PTR [rax],al
    e534:	20 00                	and    BYTE PTR [rax],al
    e536:	00 00                	add    BYTE PTR [rax],al
    e538:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e53b:	00 e3                	add    bl,ah
    e53d:	4d ff                	rex.WRB (bad) 
    e53f:	ff d4                	call   rsp
    e541:	00 00                	add    BYTE PTR [rax],al
    e543:	00 00                	add    BYTE PTR [rax],al
    e545:	45 0e                	rex.RB (bad) 
    e547:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e54d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e551:	c6                   	(bad)  
    e552:	0c 07                	or     al,0x7
    e554:	08 00                	or     BYTE PTR [rax],al
    e556:	00 00                	add    BYTE PTR [rax],al
    e558:	20 00                	and    BYTE PTR [rax],al
    e55a:	00 00                	add    BYTE PTR [rax],al
    e55c:	e4 01                	in     al,0x1
    e55e:	00 00                	add    BYTE PTR [rax],al
    e560:	93                   	xchg   ebx,eax
    e561:	4e ff                	rex.WRX (bad) 
    e563:	ff c7                	inc    edi
    e565:	00 00                	add    BYTE PTR [rax],al
    e567:	00 00                	add    BYTE PTR [rax],al
    e569:	45 0e                	rex.RB (bad) 
    e56b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e571:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e575:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e57a:	00 00                	add    BYTE PTR [rax],al
    e57c:	1c 00                	sbb    al,0x0
    e57e:	00 00                	add    BYTE PTR [rax],al
    e580:	08 02                	or     BYTE PTR [rdx],al
    e582:	00 00                	add    BYTE PTR [rax],al
    e584:	36 4f ff             	ss rex.WRXB (bad) 
    e587:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    e58a:	00 00                	add    BYTE PTR [rax],al
    e58c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e58f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e595:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e598:	07                   	(bad)  
    e599:	08 00                	or     BYTE PTR [rax],al
    e59b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e59e:	00 00                	add    BYTE PTR [rax],al
    e5a0:	28 02                	sub    BYTE PTR [rdx],al
    e5a2:	00 00                	add    BYTE PTR [rax],al
    e5a4:	69 4f ff ff 33 00 00 	imul   ecx,DWORD PTR [rdi-0x1],0x33ff
    e5ab:	00 00                	add    BYTE PTR [rax],al
    e5ad:	45 0e                	rex.RB (bad) 
    e5af:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5b5:	6a 0c                	push   0xc
    e5b7:	07                   	(bad)  
    e5b8:	08 00                	or     BYTE PTR [rax],al
    e5ba:	00 00                	add    BYTE PTR [rax],al
    e5bc:	1c 00                	sbb    al,0x0
    e5be:	00 00                	add    BYTE PTR [rax],al
    e5c0:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e5c3:	00 7c 4f ff          	add    BYTE PTR [rdi+rcx*2-0x1],bh
    e5c7:	ff 21                	jmp    QWORD PTR [rcx]
    e5c9:	00 00                	add    BYTE PTR [rax],al
    e5cb:	00 00                	add    BYTE PTR [rax],al
    e5cd:	45 0e                	rex.RB (bad) 
    e5cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5d5:	58                   	pop    rax
    e5d6:	0c 07                	or     al,0x7
    e5d8:	08 00                	or     BYTE PTR [rax],al
    e5da:	00 00                	add    BYTE PTR [rax],al
    e5dc:	20 00                	and    BYTE PTR [rax],al
    e5de:	00 00                	add    BYTE PTR [rax],al
    e5e0:	68 02 00 00 7d       	push   0x7d000002
    e5e5:	4f ff                	rex.WRXB (bad) 
    e5e7:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    e5ea:	00 00                	add    BYTE PTR [rax],al
    e5ec:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e5ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5f5:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e5f9:	5a                   	pop    rdx
    e5fa:	0c 07                	or     al,0x7
    e5fc:	08 00                	or     BYTE PTR [rax],al
    e5fe:	00 00                	add    BYTE PTR [rax],al
    e600:	1c 00                	sbb    al,0x0
    e602:	00 00                	add    BYTE PTR [rax],al
    e604:	8c 02                	mov    WORD PTR [rdx],es
    e606:	00 00                	add    BYTE PTR [rax],al
    e608:	c1 4f ff ff          	ror    DWORD PTR [rdi-0x1],0xff
    e60c:	25 04 00 00 00       	and    eax,0x4
    e611:	45 0e                	rex.RB (bad) 
    e613:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e619:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e61c:	0c 07                	or     al,0x7
    e61e:	08 00                	or     BYTE PTR [rax],al
    e620:	1c 00                	sbb    al,0x0
    e622:	00 00                	add    BYTE PTR [rax],al
    e624:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e625:	02 00                	add    al,BYTE PTR [rax]
    e627:	00 c6                	add    dh,al
    e629:	53                   	push   rbx
    e62a:	ff                   	(bad)  
    e62b:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    e62e:	00 00                	add    BYTE PTR [rax],al
    e630:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e633:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e639:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e63d:	07                   	(bad)  
    e63e:	08 00                	or     BYTE PTR [rax],al
    e640:	1c 00                	sbb    al,0x0
    e642:	00 00                	add    BYTE PTR [rax],al
    e644:	cc                   	int3   
    e645:	02 00                	add    al,BYTE PTR [rax]
    e647:	00 03                	add    BYTE PTR [rbx],al
    e649:	55                   	push   rbp
    e64a:	ff                   	(bad)  
    e64b:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    e64f:	00 00                	add    BYTE PTR [rax],al
    e651:	45 0e                	rex.RB (bad) 
    e653:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e659:	03 3b                	add    edi,DWORD PTR [rbx]
    e65b:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e65e:	08 00                	or     BYTE PTR [rax],al
    e660:	24 00                	and    al,0x0
    e662:	00 00                	add    BYTE PTR [rax],al
    e664:	ec                   	in     al,dx
    e665:	02 00                	add    al,BYTE PTR [rax]
    e667:	00 27                	add    BYTE PTR [rdi],ah
    e669:	5d                   	pop    rbp
    e66a:	ff                   	(bad)  
    e66b:	ff 81 08 00 00 00    	inc    DWORD PTR [rcx+0x8]
    e671:	45 0e                	rex.RB (bad) 
    e673:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e679:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e67d:	70 08                	jo     e687 <__GNU_EH_FRAME_HDR+0x6a3>
    e67f:	0c 07                	or     al,0x7
    e681:	08 00                	or     BYTE PTR [rax],al
    e683:	00 00                	add    BYTE PTR [rax],al
    e685:	00 00                	add    BYTE PTR [rax],al
    e687:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e68a:	00 00                	add    BYTE PTR [rax],al
    e68c:	14 03                	adc    al,0x3
    e68e:	00 00                	add    BYTE PTR [rax],al
    e690:	80 65 ff ff          	and    BYTE PTR [rbp-0x1],0xff
    e694:	55                   	push   rbp
    e695:	01 00                	add    DWORD PTR [rax],eax
    e697:	00 00                	add    BYTE PTR [rax],al
    e699:	45 0e                	rex.RB (bad) 
    e69b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6a1:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e6a5:	07                   	(bad)  
    e6a6:	08 00                	or     BYTE PTR [rax],al
    e6a8:	1c 00                	sbb    al,0x0
    e6aa:	00 00                	add    BYTE PTR [rax],al
    e6ac:	34 03                	xor    al,0x3
    e6ae:	00 00                	add    BYTE PTR [rax],al
    e6b0:	b5 66                	mov    ch,0x66
    e6b2:	ff                   	(bad)  
    e6b3:	ff                   	(bad)  
    e6b4:	ff 00                	inc    DWORD PTR [rax]
    e6b6:	00 00                	add    BYTE PTR [rax],al
    e6b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6c1:	02 f6                	add    dh,dh
    e6c3:	0c 07                	or     al,0x7
    e6c5:	08 00                	or     BYTE PTR [rax],al
    e6c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6ca:	00 00                	add    BYTE PTR [rax],al
    e6cc:	54                   	push   rsp
    e6cd:	03 00                	add    eax,DWORD PTR [rax]
    e6cf:	00 94 67 ff ff ec 00 	add    BYTE PTR [rdi+riz*2+0xecffff],dl
    e6d6:	00 00                	add    BYTE PTR [rax],al
    e6d8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6e1:	02 e3                	add    ah,bl
    e6e3:	0c 07                	or     al,0x7
    e6e5:	08 00                	or     BYTE PTR [rax],al
    e6e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6ea:	00 00                	add    BYTE PTR [rax],al
    e6ec:	74 03                	je     e6f1 <__GNU_EH_FRAME_HDR+0x70d>
    e6ee:	00 00                	add    BYTE PTR [rax],al
    e6f0:	60                   	(bad)  
    e6f1:	68 ff ff b2 03       	push   0x3b2ffff
    e6f6:	00 00                	add    BYTE PTR [rax],al
    e6f8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e701:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e707:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e70a:	00 00                	add    BYTE PTR [rax],al
    e70c:	94                   	xchg   esp,eax
    e70d:	03 00                	add    eax,DWORD PTR [rax]
    e70f:	00 f2                	add    dl,dh
    e711:	6b ff ff             	imul   edi,edi,0xffffffff
    e714:	83 00 00             	add    DWORD PTR [rax],0x0
    e717:	00 00                	add    BYTE PTR [rax],al
    e719:	45 0e                	rex.RB (bad) 
    e71b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e721:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e724:	07                   	(bad)  
    e725:	08 00                	or     BYTE PTR [rax],al
    e727:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e72a:	00 00                	add    BYTE PTR [rax],al
    e72c:	b4 03                	mov    ah,0x3
    e72e:	00 00                	add    BYTE PTR [rax],al
    e730:	55                   	push   rbp
    e731:	6c                   	ins    BYTE PTR es:[rdi],dx
    e732:	ff                   	(bad)  
    e733:	ff 2a                	jmp    FWORD PTR [rdx]
    e735:	02 00                	add    al,BYTE PTR [rax]
    e737:	00 00                	add    BYTE PTR [rax],al
    e739:	45 0e                	rex.RB (bad) 
    e73b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e741:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e745:	19 02                	sbb    DWORD PTR [rdx],eax
    e747:	0c 07                	or     al,0x7
    e749:	08 00                	or     BYTE PTR [rax],al
    e74b:	00 00                	add    BYTE PTR [rax],al
    e74d:	00 00                	add    BYTE PTR [rax],al
    e74f:	00 20                	add    BYTE PTR [rax],ah
    e751:	00 00                	add    BYTE PTR [rax],al
    e753:	00 dc                	add    ah,bl
    e755:	03 00                	add    eax,DWORD PTR [rax]
    e757:	00 57 6e             	add    BYTE PTR [rdi+0x6e],dl
    e75a:	ff                   	(bad)  
    e75b:	ff                   	(bad)  
    e75c:	3d 02 00 00 00       	cmp    eax,0x2
    e761:	45 0e                	rex.RB (bad) 
    e763:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e769:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e76d:	2f                   	(bad)  
    e76e:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e771:	08 00                	or     BYTE PTR [rax],al
    e773:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e776:	00 00                	add    BYTE PTR [rax],al
    e778:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    e77b:	00 70 70             	add    BYTE PTR [rax+0x70],dh
    e77e:	ff                   	(bad)  
    e77f:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    e782:	00 00                	add    BYTE PTR [rax],al
    e784:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e787:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e78d:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e790:	07                   	(bad)  
    e791:	08 00                	or     BYTE PTR [rax],al
    e793:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e796:	00 00                	add    BYTE PTR [rax],al
    e798:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    e79b:	00 b6 70 ff ff 17    	add    BYTE PTR [rsi+0x17ffff70],dh
    e7a1:	00 00                	add    BYTE PTR [rax],al
    e7a3:	00 00                	add    BYTE PTR [rax],al
    e7a5:	45 0e                	rex.RB (bad) 
    e7a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7ad:	4e 0c 07             	rex.WRX or al,0x7
    e7b0:	08 00                	or     BYTE PTR [rax],al
    e7b2:	00 00                	add    BYTE PTR [rax],al
    e7b4:	20 00                	and    BYTE PTR [rax],al
    e7b6:	00 00                	add    BYTE PTR [rax],al
    e7b8:	40 04 00             	rex add al,0x0
    e7bb:	00 ad 70 ff ff 51    	add    BYTE PTR [rbp+0x51ffff70],ch
    e7c1:	00 00                	add    BYTE PTR [rax],al
    e7c3:	00 00                	add    BYTE PTR [rax],al
    e7c5:	45 0e                	rex.RB (bad) 
    e7c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7cd:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e7d0:	07                   	(bad)  
    e7d1:	08 00                	or     BYTE PTR [rax],al
    e7d3:	00 00                	add    BYTE PTR [rax],al
    e7d5:	00 00                	add    BYTE PTR [rax],al
    e7d7:	00 20                	add    BYTE PTR [rax],ah
    e7d9:	00 00                	add    BYTE PTR [rax],al
    e7db:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    e7df:	00 da                	add    dl,bl
    e7e1:	70 ff                	jo     e7e2 <__GNU_EH_FRAME_HDR+0x7fe>
    e7e3:	ff                   	(bad)  
    e7e4:	3d 06 00 00 00       	cmp    eax,0x6
    e7e9:	45 0e                	rex.RB (bad) 
    e7eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7f1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e7f5:	2f                   	(bad)  
    e7f6:	06                   	(bad)  
    e7f7:	0c 07                	or     al,0x7
    e7f9:	08 00                	or     BYTE PTR [rax],al
    e7fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7fe:	00 00                	add    BYTE PTR [rax],al
    e800:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    e803:	00 f3                	add    bl,dh
    e805:	76 ff                	jbe    e806 <__GNU_EH_FRAME_HDR+0x822>
    e807:	ff 1a                	call   FWORD PTR [rdx]
    e809:	00 00                	add    BYTE PTR [rax],al
    e80b:	00 00                	add    BYTE PTR [rax],al
    e80d:	45 0e                	rex.RB (bad) 
    e80f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e815:	51                   	push   rcx
    e816:	0c 07                	or     al,0x7
    e818:	08 00                	or     BYTE PTR [rax],al
    e81a:	00 00                	add    BYTE PTR [rax],al
    e81c:	1c 00                	sbb    al,0x0
    e81e:	00 00                	add    BYTE PTR [rax],al
    e820:	a8 04                	test   al,0x4
    e822:	00 00                	add    BYTE PTR [rax],al
    e824:	ed                   	in     eax,dx
    e825:	76 ff                	jbe    e826 <__GNU_EH_FRAME_HDR+0x842>
    e827:	ff 29                	jmp    FWORD PTR [rcx]
    e829:	00 00                	add    BYTE PTR [rax],al
    e82b:	00 00                	add    BYTE PTR [rax],al
    e82d:	45 0e                	rex.RB (bad) 
    e82f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e835:	60                   	(bad)  
    e836:	0c 07                	or     al,0x7
    e838:	08 00                	or     BYTE PTR [rax],al
    e83a:	00 00                	add    BYTE PTR [rax],al
    e83c:	1c 00                	sbb    al,0x0
    e83e:	00 00                	add    BYTE PTR [rax],al
    e840:	c8 04 00 00          	enter  0x4,0x0
    e844:	f6 76 ff             	div    BYTE PTR [rsi-0x1]
    e847:	ff 30                	push   QWORD PTR [rax]
    e849:	00 00                	add    BYTE PTR [rax],al
    e84b:	00 00                	add    BYTE PTR [rax],al
    e84d:	45 0e                	rex.RB (bad) 
    e84f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e855:	67 0c 07             	addr32 or al,0x7
    e858:	08 00                	or     BYTE PTR [rax],al
    e85a:	00 00                	add    BYTE PTR [rax],al
    e85c:	18 00                	sbb    BYTE PTR [rax],al
    e85e:	00 00                	add    BYTE PTR [rax],al
    e860:	e8 04 00 00 06       	call   600e869 <_end+0x5ed3861>
    e865:	77 ff                	ja     e866 <__GNU_EH_FRAME_HDR+0x882>
    e867:	ff 37                	push   QWORD PTR [rdi]
    e869:	00 00                	add    BYTE PTR [rax],al
    e86b:	00 00                	add    BYTE PTR [rax],al
    e86d:	45 0e                	rex.RB (bad) 
    e86f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e875:	00 00                	add    BYTE PTR [rax],al
    e877:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e87a:	00 00                	add    BYTE PTR [rax],al
    e87c:	04 05                	add    al,0x5
    e87e:	00 00                	add    BYTE PTR [rax],al
    e880:	21 77 ff             	and    DWORD PTR [rdi-0x1],esi
    e883:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    e886:	00 00                	add    BYTE PTR [rax],al
    e888:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e88b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e891:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    e894:	0c 07                	or     al,0x7
    e896:	08 00                	or     BYTE PTR [rax],al
    e898:	1c 00                	sbb    al,0x0
    e89a:	00 00                	add    BYTE PTR [rax],al
    e89c:	24 05                	and    al,0x5
    e89e:	00 00                	add    BYTE PTR [rax],al
    e8a0:	46 78 ff             	rex.RX js e8a2 <__GNU_EH_FRAME_HDR+0x8be>
    e8a3:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    e8a6:	00 00                	add    BYTE PTR [rax],al
    e8a8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8b1:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    e8b4:	0c 07                	or     al,0x7
    e8b6:	08 00                	or     BYTE PTR [rax],al
    e8b8:	1c 00                	sbb    al,0x0
    e8ba:	00 00                	add    BYTE PTR [rax],al
    e8bc:	44 05 00 00 86 79    	rex.R add eax,0x79860000
    e8c2:	ff                   	(bad)  
    e8c3:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    e8c6:	00 00                	add    BYTE PTR [rax],al
    e8c8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8d1:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    e8d4:	07                   	(bad)  
    e8d5:	08 00                	or     BYTE PTR [rax],al
    e8d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8da:	00 00                	add    BYTE PTR [rax],al
    e8dc:	64 05 00 00 c7 79    	fs add eax,0x79c70000
    e8e2:	ff                   	(bad)  
    e8e3:	ff                   	(bad)  
    e8e4:	be 00 00 00 00       	mov    esi,0x0
    e8e9:	45 0e                	rex.RB (bad) 
    e8eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8f1:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    e8f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8fa:	00 00                	add    BYTE PTR [rax],al
    e8fc:	84 05 00 00 65 7a    	test   BYTE PTR [rip+0x7a650000],al        # 7a65e902 <_end+0x7a5238fa>
    e902:	ff                   	(bad)  
    e903:	ff 52 02             	call   QWORD PTR [rdx+0x2]
    e906:	00 00                	add    BYTE PTR [rax],al
    e908:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e90b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e911:	03 49 02             	add    ecx,DWORD PTR [rcx+0x2]
    e914:	0c 07                	or     al,0x7
    e916:	08 00                	or     BYTE PTR [rax],al
    e918:	1c 00                	sbb    al,0x0
    e91a:	00 00                	add    BYTE PTR [rax],al
    e91c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    e91d:	05 00 00 97 7c       	add    eax,0x7c970000
    e922:	ff                   	(bad)  
    e923:	ff                   	(bad)  
    e924:	f8                   	clc    
    e925:	01 00                	add    DWORD PTR [rax],eax
    e927:	00 00                	add    BYTE PTR [rax],al
    e929:	45 0e                	rex.RB (bad) 
    e92b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e931:	03 ef                	add    ebp,edi
    e933:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e936:	08 00                	or     BYTE PTR [rax],al
    e938:	1c 00                	sbb    al,0x0
    e93a:	00 00                	add    BYTE PTR [rax],al
    e93c:	c4                   	(bad)  
    e93d:	05 00 00 6f 7e       	add    eax,0x7e6f0000
    e942:	ff                   	(bad)  
    e943:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    e946:	00 00                	add    BYTE PTR [rax],al
    e948:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e94b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e951:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    e954:	07                   	(bad)  
    e955:	08 00                	or     BYTE PTR [rax],al
    e957:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e95a:	00 00                	add    BYTE PTR [rax],al
    e95c:	e4 05                	in     al,0x5
    e95e:	00 00                	add    BYTE PTR [rax],al
    e960:	a9 7e ff ff 0f       	test   eax,0xfffff7e
    e965:	03 00                	add    eax,DWORD PTR [rax]
    e967:	00 00                	add    BYTE PTR [rax],al
    e969:	45 0e                	rex.RB (bad) 
    e96b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e971:	03 06                	add    eax,DWORD PTR [rsi]
    e973:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    e976:	08 00                	or     BYTE PTR [rax],al
    e978:	1c 00                	sbb    al,0x0
    e97a:	00 00                	add    BYTE PTR [rax],al
    e97c:	04 06                	add    al,0x6
    e97e:	00 00                	add    BYTE PTR [rax],al
    e980:	98                   	cwde   
    e981:	81 ff ff 51 04 00    	cmp    edi,0x451ff
    e987:	00 00                	add    BYTE PTR [rax],al
    e989:	45 0e                	rex.RB (bad) 
    e98b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e991:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    e994:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    e998:	18 00                	sbb    BYTE PTR [rax],al
    e99a:	00 00                	add    BYTE PTR [rax],al
    e99c:	24 06                	and    al,0x6
    e99e:	00 00                	add    BYTE PTR [rax],al
    e9a0:	c9                   	leave  
    e9a1:	85 ff                	test   edi,edi
    e9a3:	ff 2a                	jmp    FWORD PTR [rdx]
    e9a5:	00 00                	add    BYTE PTR [rax],al
    e9a7:	00 00                	add    BYTE PTR [rax],al
    e9a9:	45 0e                	rex.RB (bad) 
    e9ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9b1:	00 00                	add    BYTE PTR [rax],al
    e9b3:	00 20                	add    BYTE PTR [rax],ah
    e9b5:	00 00                	add    BYTE PTR [rax],al
    e9b7:	00 40 06             	add    BYTE PTR [rax+0x6],al
    e9ba:	00 00                	add    BYTE PTR [rax],al
    e9bc:	d7                   	xlat   BYTE PTR ds:[rbx]
    e9bd:	85 ff                	test   edi,edi
    e9bf:	ff b2 01 00 00 00    	push   QWORD PTR [rdx+0x1]
    e9c5:	45 0e                	rex.RB (bad) 
    e9c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9cd:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e9d1:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    e9d8:	1c 00 
    e9da:	00 00                	add    BYTE PTR [rax],al
    e9dc:	64 06                	fs (bad) 
    e9de:	00 00                	add    BYTE PTR [rax],al
    e9e0:	65 87 ff             	gs xchg edi,edi
    e9e3:	ff 17                	call   QWORD PTR [rdi]
    e9e5:	00 00                	add    BYTE PTR [rax],al
    e9e7:	00 00                	add    BYTE PTR [rax],al
    e9e9:	45 0e                	rex.RB (bad) 
    e9eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9f1:	4e 0c 07             	rex.WRX or al,0x7
    e9f4:	08 00                	or     BYTE PTR [rax],al
    e9f6:	00 00                	add    BYTE PTR [rax],al
    e9f8:	1c 00                	sbb    al,0x0
    e9fa:	00 00                	add    BYTE PTR [rax],al
    e9fc:	84 06                	test   BYTE PTR [rsi],al
    e9fe:	00 00                	add    BYTE PTR [rax],al
    ea00:	5c                   	pop    rsp
    ea01:	87 ff                	xchg   edi,edi
    ea03:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    ea06:	00 00                	add    BYTE PTR [rax],al
    ea08:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea11:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    ea14:	07                   	(bad)  
    ea15:	08 00                	or     BYTE PTR [rax],al
    ea17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea1a:	00 00                	add    BYTE PTR [rax],al
    ea1c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ea1d:	06                   	(bad)  
    ea1e:	00 00                	add    BYTE PTR [rax],al
    ea20:	8b 87 ff ff 4d 00    	mov    eax,DWORD PTR [rdi+0x4dffff]
    ea26:	00 00                	add    BYTE PTR [rax],al
    ea28:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea31:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    ea35:	08 00                	or     BYTE PTR [rax],al
    ea37:	00 18                	add    BYTE PTR [rax],bl
    ea39:	00 00                	add    BYTE PTR [rax],al
    ea3b:	00 c4                	add    ah,al
    ea3d:	06                   	(bad)  
    ea3e:	00 00                	add    BYTE PTR [rax],al
    ea40:	b8 87 ff ff 77       	mov    eax,0x77ffff87
    ea45:	01 00                	add    DWORD PTR [rax],eax
    ea47:	00 00                	add    BYTE PTR [rax],al
    ea49:	45 0e                	rex.RB (bad) 
    ea4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea51:	00 00                	add    BYTE PTR [rax],al
    ea53:	00 18                	add    BYTE PTR [rax],bl
    ea55:	00 00                	add    BYTE PTR [rax],al
    ea57:	00 e0                	add    al,ah
    ea59:	06                   	(bad)  
    ea5a:	00 00                	add    BYTE PTR [rax],al
    ea5c:	13 89 ff ff 72 00    	adc    ecx,DWORD PTR [rcx+0x72ffff]
    ea62:	00 00                	add    BYTE PTR [rax],al
    ea64:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea67:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea6d:	00 00                	add    BYTE PTR [rax],al
    ea6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea72:	00 00                	add    BYTE PTR [rax],al
    ea74:	fc                   	cld    
    ea75:	06                   	(bad)  
    ea76:	00 00                	add    BYTE PTR [rax],al
    ea78:	69 89 ff ff ee 01 00 	imul   ecx,DWORD PTR [rcx+0x1eeffff],0x45000000
    ea7f:	00 00 45 
    ea82:	0e                   	(bad)  
    ea83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea89:	03 e5                	add    esp,ebp
    ea8b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ea8e:	08 00                	or     BYTE PTR [rax],al
    ea90:	1c 00                	sbb    al,0x0
    ea92:	00 00                	add    BYTE PTR [rax],al
    ea94:	1c 07                	sbb    al,0x7
    ea96:	00 00                	add    BYTE PTR [rax],al
    ea98:	37                   	(bad)  
    ea99:	8b ff                	mov    edi,edi
    ea9b:	ff                   	(bad)  
    ea9c:	e8 01 00 00 00       	call   eaa2 <__GNU_EH_FRAME_HDR+0xabe>
    eaa1:	45 0e                	rex.RB (bad) 
    eaa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaa9:	03 df                	add    ebx,edi
    eaab:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eaae:	08 00                	or     BYTE PTR [rax],al
    eab0:	1c 00                	sbb    al,0x0
    eab2:	00 00                	add    BYTE PTR [rax],al
    eab4:	3c 07                	cmp    al,0x7
    eab6:	00 00                	add    BYTE PTR [rax],al
    eab8:	ff 8c ff ff 6c 00 00 	dec    DWORD PTR [rdi+rdi*8+0x6cff]
    eabf:	00 00                	add    BYTE PTR [rax],al
    eac1:	45 0e                	rex.RB (bad) 
    eac3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eac9:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    eacc:	07                   	(bad)  
    eacd:	08 00                	or     BYTE PTR [rax],al
    eacf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ead2:	00 00                	add    BYTE PTR [rax],al
    ead4:	5c                   	pop    rsp
    ead5:	07                   	(bad)  
    ead6:	00 00                	add    BYTE PTR [rax],al
    ead8:	4b 8d                	rex.WXB (bad) 
    eada:	ff                   	(bad)  
    eadb:	ff 72 00             	push   QWORD PTR [rdx+0x0]
    eade:	00 00                	add    BYTE PTR [rax],al
    eae0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eae3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eae9:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    eaec:	07                   	(bad)  
    eaed:	08 00                	or     BYTE PTR [rax],al
    eaef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eaf2:	00 00                	add    BYTE PTR [rax],al
    eaf4:	7c 07                	jl     eafd <__GNU_EH_FRAME_HDR+0xb19>
    eaf6:	00 00                	add    BYTE PTR [rax],al
    eaf8:	9d                   	popf   
    eaf9:	8d                   	(bad)  
    eafa:	ff                   	(bad)  
    eafb:	ff 11                	call   QWORD PTR [rcx]
    eafd:	01 00                	add    DWORD PTR [rax],eax
    eaff:	00 00                	add    BYTE PTR [rax],al
    eb01:	45 0e                	rex.RB (bad) 
    eb03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb09:	03 08                	add    ecx,DWORD PTR [rax]
    eb0b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eb0e:	08 00                	or     BYTE PTR [rax],al
    eb10:	1c 00                	sbb    al,0x0
    eb12:	00 00                	add    BYTE PTR [rax],al
    eb14:	9c                   	pushf  
    eb15:	07                   	(bad)  
    eb16:	00 00                	add    BYTE PTR [rax],al
    eb18:	8e 8e ff ff 5c 00    	mov    cs,WORD PTR [rsi+0x5cffff]
    eb1e:	00 00                	add    BYTE PTR [rax],al
    eb20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb29:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    eb2c:	07                   	(bad)  
    eb2d:	08 00                	or     BYTE PTR [rax],al
    eb2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb32:	00 00                	add    BYTE PTR [rax],al
    eb34:	bc 07 00 00 ca       	mov    esp,0xca000007
    eb39:	8e ff                	mov    ?,edi
    eb3b:	ff                   	(bad)  
    eb3c:	3e 00 00             	ds add BYTE PTR [rax],al
    eb3f:	00 00                	add    BYTE PTR [rax],al
    eb41:	45 0e                	rex.RB (bad) 
    eb43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb49:	75 0c                	jne    eb57 <__GNU_EH_FRAME_HDR+0xb73>
    eb4b:	07                   	(bad)  
    eb4c:	08 00                	or     BYTE PTR [rax],al
    eb4e:	00 00                	add    BYTE PTR [rax],al
    eb50:	1c 00                	sbb    al,0x0
    eb52:	00 00                	add    BYTE PTR [rax],al
    eb54:	dc 07                	fadd   QWORD PTR [rdi]
    eb56:	00 00                	add    BYTE PTR [rax],al
    eb58:	e8 8e ff ff 86       	call   ffffffff8700eaeb <_end+0xffffffff86ed3ae3>
    eb5d:	00 00                	add    BYTE PTR [rax],al
    eb5f:	00 00                	add    BYTE PTR [rax],al
    eb61:	45 0e                	rex.RB (bad) 
    eb63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb69:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    eb6c:	07                   	(bad)  
    eb6d:	08 00                	or     BYTE PTR [rax],al
    eb6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb72:	00 00                	add    BYTE PTR [rax],al
    eb74:	fc                   	cld    
    eb75:	07                   	(bad)  
    eb76:	00 00                	add    BYTE PTR [rax],al
    eb78:	4e 8f                	rex.WRX (bad) 
    eb7a:	ff                   	(bad)  
    eb7b:	ff                   	(bad)  
    eb7c:	df 00                	fild   WORD PTR [rax]
    eb7e:	00 00                	add    BYTE PTR [rax],al
    eb80:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb89:	02 d6                	add    dl,dh
    eb8b:	0c 07                	or     al,0x7
    eb8d:	08 00                	or     BYTE PTR [rax],al
    eb8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb92:	00 00                	add    BYTE PTR [rax],al
    eb94:	1c 08                	sbb    al,0x8
    eb96:	00 00                	add    BYTE PTR [rax],al
    eb98:	0d 90 ff ff 74       	or     eax,0x74ffff90
    eb9d:	00 00                	add    BYTE PTR [rax],al
    eb9f:	00 00                	add    BYTE PTR [rax],al
    eba1:	45 0e                	rex.RB (bad) 
    eba3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eba9:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ebac:	07                   	(bad)  
    ebad:	08 00                	or     BYTE PTR [rax],al
    ebaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebb2:	00 00                	add    BYTE PTR [rax],al
    ebb4:	3c 08                	cmp    al,0x8
    ebb6:	00 00                	add    BYTE PTR [rax],al
    ebb8:	61                   	(bad)  
    ebb9:	90                   	nop
    ebba:	ff                   	(bad)  
    ebbb:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ebc2:	0e                   	(bad)  
    ebc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebc9:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ebcf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebd2:	00 00                	add    BYTE PTR [rax],al
    ebd4:	5c                   	pop    rsp
    ebd5:	08 00                	or     BYTE PTR [rax],al
    ebd7:	00 dd                	add    ch,bl
    ebd9:	90                   	nop
    ebda:	ff                   	(bad)  
    ebdb:	ff 29                	jmp    FWORD PTR [rcx]
    ebdd:	00 00                	add    BYTE PTR [rax],al
    ebdf:	00 00                	add    BYTE PTR [rax],al
    ebe1:	45 0e                	rex.RB (bad) 
    ebe3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebe9:	60                   	(bad)  
    ebea:	0c 07                	or     al,0x7
    ebec:	08 00                	or     BYTE PTR [rax],al
    ebee:	00 00                	add    BYTE PTR [rax],al
    ebf0:	1c 00                	sbb    al,0x0
    ebf2:	00 00                	add    BYTE PTR [rax],al
    ebf4:	7c 08                	jl     ebfe <__GNU_EH_FRAME_HDR+0xc1a>
    ebf6:	00 00                	add    BYTE PTR [rax],al
    ebf8:	e6 90                	out    0x90,al
    ebfa:	ff                   	(bad)  
    ebfb:	ff 29                	jmp    FWORD PTR [rcx]
    ebfd:	00 00                	add    BYTE PTR [rax],al
    ebff:	00 00                	add    BYTE PTR [rax],al
    ec01:	45 0e                	rex.RB (bad) 
    ec03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec09:	60                   	(bad)  
    ec0a:	0c 07                	or     al,0x7
    ec0c:	08 00                	or     BYTE PTR [rax],al
    ec0e:	00 00                	add    BYTE PTR [rax],al
    ec10:	24 00                	and    al,0x0
    ec12:	00 00                	add    BYTE PTR [rax],al
    ec14:	9c                   	pushf  
    ec15:	08 00                	or     BYTE PTR [rax],al
    ec17:	00 ef                	add    bh,ch
    ec19:	90                   	nop
    ec1a:	ff                   	(bad)  
    ec1b:	ff 53 01             	call   QWORD PTR [rbx+0x1]
    ec1e:	00 00                	add    BYTE PTR [rax],al
    ec20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec29:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ec2d:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
    ec31:	08 00                	or     BYTE PTR [rax],al
    ec33:	00 00                	add    BYTE PTR [rax],al
    ec35:	00 00                	add    BYTE PTR [rax],al
    ec37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec3a:	00 00                	add    BYTE PTR [rax],al
    ec3c:	c4                   	(bad)  
    ec3d:	08 00                	or     BYTE PTR [rax],al
    ec3f:	00 1a                	add    BYTE PTR [rdx],bl
    ec41:	92                   	xchg   edx,eax
    ec42:	ff                   	(bad)  
    ec43:	ff 1e                	call   FWORD PTR [rsi]
    ec45:	00 00                	add    BYTE PTR [rax],al
    ec47:	00 00                	add    BYTE PTR [rax],al
    ec49:	45 0e                	rex.RB (bad) 
    ec4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec51:	55                   	push   rbp
    ec52:	0c 07                	or     al,0x7
    ec54:	08 00                	or     BYTE PTR [rax],al
    ec56:	00 00                	add    BYTE PTR [rax],al
    ec58:	1c 00                	sbb    al,0x0
    ec5a:	00 00                	add    BYTE PTR [rax],al
    ec5c:	e4 08                	in     al,0x8
    ec5e:	00 00                	add    BYTE PTR [rax],al
    ec60:	18 92 ff ff 63 01    	sbb    BYTE PTR [rdx+0x163ffff],dl
    ec66:	00 00                	add    BYTE PTR [rax],al
    ec68:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec71:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    ec74:	0c 07                	or     al,0x7
    ec76:	08 00                	or     BYTE PTR [rax],al
    ec78:	2c 00                	sub    al,0x0
    ec7a:	00 00                	add    BYTE PTR [rax],al
    ec7c:	04 09                	add    al,0x9
    ec7e:	00 00                	add    BYTE PTR [rax],al
    ec80:	5b                   	pop    rbx
    ec81:	93                   	xchg   ebx,eax
    ec82:	ff                   	(bad)  
    ec83:	ff 0e                	dec    DWORD PTR [rsi]
    ec85:	02 00                	add    al,BYTE PTR [rax]
    ec87:	00 00                	add    BYTE PTR [rax],al
    ec89:	45 0e                	rex.RB (bad) 
    ec8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec91:	50                   	push   rax
    ec92:	8f 03                	pop    QWORD PTR [rbx]
    ec94:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    ec9b:	07                   	(bad)  
    ec9c:	03 f5                	add    esi,ebp
    ec9e:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eca1:	08 00                	or     BYTE PTR [rax],al
    eca3:	00 00                	add    BYTE PTR [rax],al
    eca5:	00 00                	add    BYTE PTR [rax],al
    eca7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecaa:	00 00                	add    BYTE PTR [rax],al
    ecac:	34 09                	xor    al,0x9
    ecae:	00 00                	add    BYTE PTR [rax],al
    ecb0:	39 95 ff ff b2 00    	cmp    DWORD PTR [rbp+0xb2ffff],edx
    ecb6:	00 00                	add    BYTE PTR [rax],al
    ecb8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ecbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecc1:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    ecc7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecca:	00 00                	add    BYTE PTR [rax],al
    eccc:	54                   	push   rsp
    eccd:	09 00                	or     DWORD PTR [rax],eax
    eccf:	00 cb                	add    bl,cl
    ecd1:	95                   	xchg   ebp,eax
    ecd2:	ff                   	(bad)  
    ecd3:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    ecd9:	45 0e                	rex.RB (bad) 
    ecdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ece1:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    ece8:	24 00                	and    al,0x0
    ecea:	00 00                	add    BYTE PTR [rax],al
    ecec:	74 09                	je     ecf7 <__GNU_EH_FRAME_HDR+0xd13>
    ecee:	00 00                	add    BYTE PTR [rax],al
    ecf0:	50                   	push   rax
    ecf1:	96                   	xchg   esi,eax
    ecf2:	ff                   	(bad)  
    ecf3:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    ecfa:	0e                   	(bad)  
    ecfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed01:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    ed05:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
    ed08:	08 00                	or     BYTE PTR [rax],al
    ed0a:	00 00                	add    BYTE PTR [rax],al
    ed0c:	00 00                	add    BYTE PTR [rax],al
    ed0e:	00 00                	add    BYTE PTR [rax],al
    ed10:	1c 00                	sbb    al,0x0
    ed12:	00 00                	add    BYTE PTR [rax],al
    ed14:	9c                   	pushf  
    ed15:	09 00                	or     DWORD PTR [rax],eax
    ed17:	00 bc 96 ff ff d5 00 	add    BYTE PTR [rsi+rdx*4+0xd5ffff],bh
    ed1e:	00 00                	add    BYTE PTR [rax],al
    ed20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed29:	02 cc                	add    cl,ah
    ed2b:	0c 07                	or     al,0x7
    ed2d:	08 00                	or     BYTE PTR [rax],al
    ed2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed32:	00 00                	add    BYTE PTR [rax],al
    ed34:	bc 09 00 00 71       	mov    esp,0x71000009
    ed39:	97                   	xchg   edi,eax
    ed3a:	ff                   	(bad)  
    ed3b:	ff                   	(bad)  
    ed3c:	df 00                	fild   WORD PTR [rax]
    ed3e:	00 00                	add    BYTE PTR [rax],al
    ed40:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed49:	02 d6                	add    dl,dh
    ed4b:	0c 07                	or     al,0x7
    ed4d:	08 00                	or     BYTE PTR [rax],al
    ed4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed52:	00 00                	add    BYTE PTR [rax],al
    ed54:	dc 09                	fmul   QWORD PTR [rcx]
    ed56:	00 00                	add    BYTE PTR [rax],al
    ed58:	30 98 ff ff 7d 00    	xor    BYTE PTR [rax+0x7dffff],bl
    ed5e:	00 00                	add    BYTE PTR [rax],al
    ed60:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed69:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    ed6d:	08 00                	or     BYTE PTR [rax],al
    ed6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed72:	00 00                	add    BYTE PTR [rax],al
    ed74:	fc                   	cld    
    ed75:	09 00                	or     DWORD PTR [rax],eax
    ed77:	00 8d 98 ff ff 36    	add    BYTE PTR [rbp+0x36ffff98],cl
    ed7d:	01 00                	add    DWORD PTR [rax],eax
    ed7f:	00 00                	add    BYTE PTR [rax],al
    ed81:	45 0e                	rex.RB (bad) 
    ed83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed89:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807f990 <_end+0x7f44988>
    ed8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed92:	00 00                	add    BYTE PTR [rax],al
    ed94:	1c 0a                	sbb    al,0xa
    ed96:	00 00                	add    BYTE PTR [rax],al
    ed98:	a3 99 ff ff 7e 00 00 	movabs ds:0x7effff99,eax
    ed9f:	00 00 
    eda1:	45 0e                	rex.RB (bad) 
    eda3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eda9:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    edac:	07                   	(bad)  
    edad:	08 00                	or     BYTE PTR [rax],al
    edaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edb2:	00 00                	add    BYTE PTR [rax],al
    edb4:	3c 0a                	cmp    al,0xa
    edb6:	00 00                	add    BYTE PTR [rax],al
    edb8:	01 9a ff ff 2a 02    	add    DWORD PTR [rdx+0x22affff],ebx
    edbe:	00 00                	add    BYTE PTR [rax],al
    edc0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    edc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edc9:	03 21                	add    esp,DWORD PTR [rcx]
    edcb:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    edce:	08 00                	or     BYTE PTR [rax],al
    edd0:	1c 00                	sbb    al,0x0
    edd2:	00 00                	add    BYTE PTR [rax],al
    edd4:	5c                   	pop    rsp
    edd5:	0a 00                	or     al,BYTE PTR [rax]
    edd7:	00 0b                	add    BYTE PTR [rbx],cl
    edd9:	9c                   	pushf  
    edda:	ff                   	(bad)  
    eddb:	ff c3                	inc    ebx
    eddd:	00 00                	add    BYTE PTR [rax],al
    eddf:	00 00                	add    BYTE PTR [rax],al
    ede1:	45 0e                	rex.RB (bad) 
    ede3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ede9:	02 ba 0c 07 08 00    	add    bh,BYTE PTR [rdx+0x8070c]
    edef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edf2:	00 00                	add    BYTE PTR [rax],al
    edf4:	7c 0a                	jl     ee00 <__GNU_EH_FRAME_HDR+0xe1c>
    edf6:	00 00                	add    BYTE PTR [rax],al
    edf8:	ae                   	scas   al,BYTE PTR es:[rdi]
    edf9:	9c                   	pushf  
    edfa:	ff                   	(bad)  
    edfb:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    ee01:	45 0e                	rex.RB (bad) 
    ee03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee09:	03 92 01 0c 07 08    	add    edx,DWORD PTR [rdx+0x8070c01]
    ee0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee12:	00 00                	add    BYTE PTR [rax],al
    ee14:	9c                   	pushf  
    ee15:	0a 00                	or     al,BYTE PTR [rax]
    ee17:	00 29                	add    BYTE PTR [rcx],ch
    ee19:	9e                   	sahf   
    ee1a:	ff                   	(bad)  
    ee1b:	ff 0d 01 00 00 00    	dec    DWORD PTR [rip+0x1]        # ee22 <__GNU_EH_FRAME_HDR+0xe3e>
    ee21:	45 0e                	rex.RB (bad) 
    ee23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee29:	03 04 01             	add    eax,DWORD PTR [rcx+rax*1]
    ee2c:	0c 07                	or     al,0x7
    ee2e:	08 00                	or     BYTE PTR [rax],al
    ee30:	1c 00                	sbb    al,0x0
    ee32:	00 00                	add    BYTE PTR [rax],al
    ee34:	bc 0a 00 00 16       	mov    esp,0x1600000a
    ee39:	9f                   	lahf   
    ee3a:	ff                   	(bad)  
    ee3b:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    ee3e:	00 00                	add    BYTE PTR [rax],al
    ee40:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee49:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    ee4c:	07                   	(bad)  
    ee4d:	08 00                	or     BYTE PTR [rax],al
    ee4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee52:	00 00                	add    BYTE PTR [rax],al
    ee54:	dc 0a                	fmul   QWORD PTR [rdx]
    ee56:	00 00                	add    BYTE PTR [rax],al
    ee58:	5c                   	pop    rsp
    ee59:	9f                   	lahf   
    ee5a:	ff                   	(bad)  
    ee5b:	ff 75 00             	push   QWORD PTR [rbp+0x0]
    ee5e:	00 00                	add    BYTE PTR [rax],al
    ee60:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee69:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    ee6d:	08 00                	or     BYTE PTR [rax],al
    ee6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee72:	00 00                	add    BYTE PTR [rax],al
    ee74:	fc                   	cld    
    ee75:	0a 00                	or     al,BYTE PTR [rax]
    ee77:	00 b1 9f ff ff db    	add    BYTE PTR [rcx-0x24000061],dh
    ee7d:	00 00                	add    BYTE PTR [rax],al
    ee7f:	00 00                	add    BYTE PTR [rax],al
    ee81:	45 0e                	rex.RB (bad) 
    ee83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee89:	02 d2                	add    dl,dl
    ee8b:	0c 07                	or     al,0x7
    ee8d:	08 00                	or     BYTE PTR [rax],al
    ee8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee92:	00 00                	add    BYTE PTR [rax],al
    ee94:	1c 0b                	sbb    al,0xb
    ee96:	00 00                	add    BYTE PTR [rax],al
    ee98:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee99:	a0 ff ff 72 01 00 00 	movabs al,ds:0x450000000172ffff
    eea0:	00 45 
    eea2:	0e                   	(bad)  
    eea3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eea9:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    eeac:	0c 07                	or     al,0x7
    eeae:	08 00                	or     BYTE PTR [rax],al
    eeb0:	1c 00                	sbb    al,0x0
    eeb2:	00 00                	add    BYTE PTR [rax],al
    eeb4:	3c 0b                	cmp    al,0xb
    eeb6:	00 00                	add    BYTE PTR [rax],al
    eeb8:	be a1 ff ff 6c       	mov    esi,0x6cffffa1
    eebd:	00 00                	add    BYTE PTR [rax],al
    eebf:	00 00                	add    BYTE PTR [rax],al
    eec1:	45 0e                	rex.RB (bad) 
    eec3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eec9:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    eecc:	07                   	(bad)  
    eecd:	08 00                	or     BYTE PTR [rax],al
    eecf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eed2:	00 00                	add    BYTE PTR [rax],al
    eed4:	5c                   	pop    rsp
    eed5:	0b 00                	or     eax,DWORD PTR [rax]
    eed7:	00 0a                	add    BYTE PTR [rdx],cl
    eed9:	a2 ff ff 80 00 00 00 	movabs ds:0x450000000080ffff,al
    eee0:	00 45 
    eee2:	0e                   	(bad)  
    eee3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eee9:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    eeec:	07                   	(bad)  
    eeed:	08 00                	or     BYTE PTR [rax],al
    eeef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eef2:	00 00                	add    BYTE PTR [rax],al
    eef4:	7c 0b                	jl     ef01 <__GNU_EH_FRAME_HDR+0xf1d>
    eef6:	00 00                	add    BYTE PTR [rax],al
    eef8:	6a a2                	push   0xffffffffffffffa2
    eefa:	ff                   	(bad)  
    eefb:	ff 16                	call   QWORD PTR [rsi]
    eefd:	00 00                	add    BYTE PTR [rax],al
    eeff:	00 00                	add    BYTE PTR [rax],al
    ef01:	45 0e                	rex.RB (bad) 
    ef03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef09:	4d 0c 07             	rex.WRB or al,0x7
    ef0c:	08 00                	or     BYTE PTR [rax],al
    ef0e:	00 00                	add    BYTE PTR [rax],al
    ef10:	20 00                	and    BYTE PTR [rax],al
    ef12:	00 00                	add    BYTE PTR [rax],al
    ef14:	9c                   	pushf  
    ef15:	0b 00                	or     eax,DWORD PTR [rax]
    ef17:	00 60 a2             	add    BYTE PTR [rax-0x5e],ah
    ef1a:	ff                   	(bad)  
    ef1b:	ff                   	(bad)  
    ef1c:	3a 01                	cmp    al,BYTE PTR [rcx]
    ef1e:	00 00                	add    BYTE PTR [rax],al
    ef20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef29:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ef2d:	2c 01                	sub    al,0x1
    ef2f:	0c 07                	or     al,0x7
    ef31:	08 00                	or     BYTE PTR [rax],al
    ef33:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef36:	00 00                	add    BYTE PTR [rax],al
    ef38:	c0 0b 00             	ror    BYTE PTR [rbx],0x0
    ef3b:	00 76 a3             	add    BYTE PTR [rsi-0x5d],dh
    ef3e:	ff                   	(bad)  
    ef3f:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
    ef43:	00 00                	add    BYTE PTR [rax],al
    ef45:	45 0e                	rex.RB (bad) 
    ef47:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef4d:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    ef50:	07                   	(bad)  
    ef51:	08 00                	or     BYTE PTR [rax],al
    ef53:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef56:	00 00                	add    BYTE PTR [rax],al
    ef58:	e0 0b                	loopne ef65 <__GNU_EH_FRAME_HDR+0xf81>
    ef5a:	00 00                	add    BYTE PTR [rax],al
    ef5c:	ba a3 ff ff 53       	mov    edx,0x53ffffa3
    ef61:	00 00                	add    BYTE PTR [rax],al
    ef63:	00 00                	add    BYTE PTR [rax],al
    ef65:	45 0e                	rex.RB (bad) 
    ef67:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef6d:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    ef70:	07                   	(bad)  
    ef71:	08 00                	or     BYTE PTR [rax],al
    ef73:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef76:	00 00                	add    BYTE PTR [rax],al
    ef78:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ef7b:	00 ed                	add    ch,ch
    ef7d:	a3 ff ff b1 00 00 00 	movabs ds:0x4500000000b1ffff,eax
    ef84:	00 45 
    ef86:	0e                   	(bad)  
    ef87:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef8d:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    ef93:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef96:	00 00                	add    BYTE PTR [rax],al
    ef98:	20 0c 00             	and    BYTE PTR [rax+rax*1],cl
    ef9b:	00 7e a4             	add    BYTE PTR [rsi-0x5c],bh
    ef9e:	ff                   	(bad)  
    ef9f:	ff cb                	dec    ebx
    efa1:	00 00                	add    BYTE PTR [rax],al
    efa3:	00 00                	add    BYTE PTR [rax],al
    efa5:	45 0e                	rex.RB (bad) 
    efa7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efad:	02 c2                	add    al,dl
    efaf:	0c 07                	or     al,0x7
    efb1:	08 00                	or     BYTE PTR [rax],al
    efb3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efb6:	00 00                	add    BYTE PTR [rax],al
    efb8:	40 0c 00             	rex or al,0x0
    efbb:	00 29                	add    BYTE PTR [rcx],ch
    efbd:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    efbe:	ff                   	(bad)  
    efbf:	ff 55 00             	call   QWORD PTR [rbp+0x0]
    efc2:	00 00                	add    BYTE PTR [rax],al
    efc4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    efc7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efcd:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    efd1:	08 00                	or     BYTE PTR [rax],al
    efd3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efd6:	00 00                	add    BYTE PTR [rax],al
    efd8:	60                   	(bad)  
    efd9:	0c 00                	or     al,0x0
    efdb:	00 5e a5             	add    BYTE PTR [rsi-0x5b],bl
    efde:	ff                   	(bad)  
    efdf:	ff 30                	push   QWORD PTR [rax]
    efe1:	00 00                	add    BYTE PTR [rax],al
    efe3:	00 00                	add    BYTE PTR [rax],al
    efe5:	45 0e                	rex.RB (bad) 
    efe7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efed:	67 0c 07             	addr32 or al,0x7
    eff0:	08 00                	or     BYTE PTR [rax],al
    eff2:	00 00                	add    BYTE PTR [rax],al
    eff4:	1c 00                	sbb    al,0x0
    eff6:	00 00                	add    BYTE PTR [rax],al
    eff8:	80 0c 00 00          	or     BYTE PTR [rax+rax*1],0x0
    effc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    effd:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    effe:	ff                   	(bad)  
    efff:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
    f002:	00 00                	add    BYTE PTR [rax],al
    f004:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f007:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f00d:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f010:	07                   	(bad)  
    f011:	08 00                	or     BYTE PTR [rax],al
    f013:	00 20                	add    BYTE PTR [rax],ah
    f015:	00 00                	add    BYTE PTR [rax],al
    f017:	00 a0 0c 00 00 b5    	add    BYTE PTR [rax-0x4afffff4],ah
    f01d:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f01e:	ff                   	(bad)  
    f01f:	ff 0c 0f             	dec    DWORD PTR [rdi+rcx*1]
    f022:	00 00                	add    BYTE PTR [rax],al
    f024:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f027:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f02d:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    f031:	fb                   	sti    
    f032:	0e                   	(bad)  
    f033:	0c 07                	or     al,0x7
    f035:	08 00                	or     BYTE PTR [rax],al
    f037:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f03a:	00 00                	add    BYTE PTR [rax],al
    f03c:	c4                   	(bad)  
    f03d:	0c 00                	or     al,0x0
    f03f:	00 9d b4 ff ff 46    	add    BYTE PTR [rbp+0x46ffffb4],bl
    f045:	00 00                	add    BYTE PTR [rax],al
    f047:	00 00                	add    BYTE PTR [rax],al
    f049:	45 0e                	rex.RB (bad) 
    f04b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f051:	7d 0c                	jge    f05f <__GNU_EH_FRAME_HDR+0x107b>
    f053:	07                   	(bad)  
    f054:	08 00                	or     BYTE PTR [rax],al
    f056:	00 00                	add    BYTE PTR [rax],al
    f058:	24 00                	and    al,0x0
    f05a:	00 00                	add    BYTE PTR [rax],al
    f05c:	e4 0c                	in     al,0xc
    f05e:	00 00                	add    BYTE PTR [rax],al
    f060:	c3                   	ret    
    f061:	b4 ff                	mov    ah,0xff
    f063:	ff                   	(bad)  
    f064:	3b 02                	cmp    eax,DWORD PTR [rdx]
    f066:	00 00                	add    BYTE PTR [rax],al
    f068:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f06b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f071:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f074:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f077:	05 83 06 03 27       	add    eax,0x27030683
    f07c:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f07f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f082:	00 00                	add    BYTE PTR [rax],al
    f084:	0c 0d                	or     al,0xd
    f086:	00 00                	add    BYTE PTR [rax],al
    f088:	d6                   	(bad)  
    f089:	b6 ff                	mov    dh,0xff
    f08b:	ff a5 01 00 00 00    	jmp    QWORD PTR [rbp+0x1]
    f091:	45 0e                	rex.RB (bad) 
    f093:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f099:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
    f0a0:	1c 00                	sbb    al,0x0
    f0a2:	00 00                	add    BYTE PTR [rax],al
    f0a4:	2c 0d                	sub    al,0xd
    f0a6:	00 00                	add    BYTE PTR [rax],al
    f0a8:	5b                   	pop    rbx
    f0a9:	b8 ff ff 12 01       	mov    eax,0x112ffff
    f0ae:	00 00                	add    BYTE PTR [rax],al
    f0b0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0b9:	03 09                	add    ecx,DWORD PTR [rcx]
    f0bb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f0be:	08 00                	or     BYTE PTR [rax],al
    f0c0:	24 00                	and    al,0x0
    f0c2:	00 00                	add    BYTE PTR [rax],al
    f0c4:	4c 0d 00 00 4d b9    	rex.WR or rax,0xffffffffb94d0000
    f0ca:	ff                   	(bad)  
    f0cb:	ff                   	(bad)  
    f0cc:	bc 00 00 00 00       	mov    esp,0x0
    f0d1:	45 0e                	rex.RB (bad) 
    f0d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0d9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f0dd:	ae                   	scas   al,BYTE PTR es:[rdi]
    f0de:	0c 07                	or     al,0x7
    f0e0:	08 00                	or     BYTE PTR [rax],al
    f0e2:	00 00                	add    BYTE PTR [rax],al
    f0e4:	00 00                	add    BYTE PTR [rax],al
    f0e6:	00 00                	add    BYTE PTR [rax],al
    f0e8:	24 00                	and    al,0x0
    f0ea:	00 00                	add    BYTE PTR [rax],al
    f0ec:	74 0d                	je     f0fb <__GNU_EH_FRAME_HDR+0x1117>
    f0ee:	00 00                	add    BYTE PTR [rax],al
    f0f0:	e1 b9                	loope  f0ab <__GNU_EH_FRAME_HDR+0x10c7>
    f0f2:	ff                   	(bad)  
    f0f3:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    f0f9:	45 0e                	rex.RB (bad) 
    f0fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f101:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f104:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f108:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f10b:	08 00                	or     BYTE PTR [rax],al
    f10d:	00 00                	add    BYTE PTR [rax],al
    f10f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f112:	00 00                	add    BYTE PTR [rax],al
    f114:	9c                   	pushf  
    f115:	0d 00 00 54 bb       	or     eax,0xbb540000
    f11a:	ff                   	(bad)  
    f11b:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    f121:	45 0e                	rex.RB (bad) 
    f123:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f129:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f130:	1c 00                	sbb    al,0x0
    f132:	00 00                	add    BYTE PTR [rax],al
    f134:	bc 0d 00 00 d9       	mov    esp,0xd900000d
    f139:	bb ff ff 43 01       	mov    ebx,0x143ffff
    f13e:	00 00                	add    BYTE PTR [rax],al
    f140:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f143:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f149:	03 3a                	add    edi,DWORD PTR [rdx]
    f14b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f14e:	08 00                	or     BYTE PTR [rax],al
    f150:	1c 00                	sbb    al,0x0
    f152:	00 00                	add    BYTE PTR [rax],al
    f154:	dc 0d 00 00 fc bc    	fmul   QWORD PTR [rip+0xffffffffbcfc0000]        # ffffffffbcfcf15a <_end+0xffffffffbce94152>
    f15a:	ff                   	(bad)  
    f15b:	ff f3                	push   rbx
    f15d:	00 00                	add    BYTE PTR [rax],al
    f15f:	00 00                	add    BYTE PTR [rax],al
    f161:	45 0e                	rex.RB (bad) 
    f163:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f169:	02 ea                	add    ch,dl
    f16b:	0c 07                	or     al,0x7
    f16d:	08 00                	or     BYTE PTR [rax],al
    f16f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f172:	00 00                	add    BYTE PTR [rax],al
    f174:	fc                   	cld    
    f175:	0d 00 00 cf bd       	or     eax,0xbdcf0000
    f17a:	ff                   	(bad)  
    f17b:	ff 8e 02 00 00 00    	dec    DWORD PTR [rsi+0x2]
    f181:	45 0e                	rex.RB (bad) 
    f183:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f189:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f18c:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f190:	1c 00                	sbb    al,0x0
    f192:	00 00                	add    BYTE PTR [rax],al
    f194:	1c 0e                	sbb    al,0xe
    f196:	00 00                	add    BYTE PTR [rax],al
    f198:	3d c0 ff ff 6a       	cmp    eax,0x6affffc0
    f19d:	00 00                	add    BYTE PTR [rax],al
    f19f:	00 00                	add    BYTE PTR [rax],al
    f1a1:	45 0e                	rex.RB (bad) 
    f1a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1a9:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f1ac:	07                   	(bad)  
    f1ad:	08 00                	or     BYTE PTR [rax],al
    f1af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1b2:	00 00                	add    BYTE PTR [rax],al
    f1b4:	3c 0e                	cmp    al,0xe
    f1b6:	00 00                	add    BYTE PTR [rax],al
    f1b8:	87 c0                	xchg   eax,eax
    f1ba:	ff                   	(bad)  
    f1bb:	ff 6e 00             	jmp    FWORD PTR [rsi+0x0]
    f1be:	00 00                	add    BYTE PTR [rax],al
    f1c0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1c9:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f1cc:	07                   	(bad)  
    f1cd:	08 00                	or     BYTE PTR [rax],al
    f1cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1d2:	00 00                	add    BYTE PTR [rax],al
    f1d4:	5c                   	pop    rsp
    f1d5:	0e                   	(bad)  
    f1d6:	00 00                	add    BYTE PTR [rax],al
    f1d8:	d5                   	(bad)  
    f1d9:	c0 ff ff             	sar    bh,0xff
    f1dc:	70 00                	jo     f1de <__GNU_EH_FRAME_HDR+0x11fa>
    f1de:	00 00                	add    BYTE PTR [rax],al
    f1e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1e9:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f1ec:	07                   	(bad)  
    f1ed:	08 00                	or     BYTE PTR [rax],al
    f1ef:	00 20                	add    BYTE PTR [rax],ah
    f1f1:	00 00                	add    BYTE PTR [rax],al
    f1f3:	00 7c 0e 00          	add    BYTE PTR [rsi+rcx*1+0x0],bh
    f1f7:	00 25 c1 ff ff 8d    	add    BYTE PTR [rip+0xffffffff8dffffc1],ah        # ffffffff8e00f1be <_end+0xffffffff8ded41b6>
    f1fd:	01 00                	add    DWORD PTR [rax],eax
    f1ff:	00 00                	add    BYTE PTR [rax],al
    f201:	45 0e                	rex.RB (bad) 
    f203:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f209:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f20d:	7f 01                	jg     f210 <__GNU_EH_FRAME_HDR+0x122c>
    f20f:	0c 07                	or     al,0x7
    f211:	08 00                	or     BYTE PTR [rax],al
	...

000000000000f214 <__FRAME_END__>:
    f214:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b88 <buffer.0+0x10b08>:
	...

Disassembly of section .init_array:

0000000000010b88 <__frame_dummy_init_array_entry>:
   10b88:	40 29 00             	rex sub DWORD PTR [rax],eax
   10b8b:	00 00                	add    BYTE PTR [rax],al
   10b8d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b90 <__do_global_dtors_aux_fini_array_entry>:
   10b90:	00 29                	add    BYTE PTR [rcx],ch
   10b92:	00 00                	add    BYTE PTR [rax],al
   10b94:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b98 <_DYNAMIC>:
   10b98:	01 00                	add    DWORD PTR [rax],eax
   10b9a:	00 00                	add    BYTE PTR [rax],al
   10b9c:	00 00                	add    BYTE PTR [rax],al
   10b9e:	00 00                	add    BYTE PTR [rax],al
   10ba0:	9e                   	sahf   
   10ba1:	02 00                	add    al,BYTE PTR [rax]
   10ba3:	00 00                	add    BYTE PTR [rax],al
   10ba5:	00 00                	add    BYTE PTR [rax],al
   10ba7:	00 01                	add    BYTE PTR [rcx],al
   10ba9:	00 00                	add    BYTE PTR [rax],al
   10bab:	00 00                	add    BYTE PTR [rax],al
   10bad:	00 00                	add    BYTE PTR [rax],al
   10baf:	00 ad 02 00 00 00    	add    BYTE PTR [rbp+0x2],ch
   10bb5:	00 00                	add    BYTE PTR [rax],al
   10bb7:	00 01                	add    BYTE PTR [rcx],al
   10bb9:	00 00                	add    BYTE PTR [rax],al
   10bbb:	00 00                	add    BYTE PTR [rax],al
   10bbd:	00 00                	add    BYTE PTR [rax],al
   10bbf:	00 bd 02 00 00 00    	add    BYTE PTR [rbp+0x2],bh
   10bc5:	00 00                	add    BYTE PTR [rax],al
   10bc7:	00 01                	add    BYTE PTR [rcx],al
   10bc9:	00 00                	add    BYTE PTR [rax],al
   10bcb:	00 00                	add    BYTE PTR [rax],al
   10bcd:	00 00                	add    BYTE PTR [rax],al
   10bcf:	00 cc                	add    ah,cl
   10bd1:	02 00                	add    al,BYTE PTR [rax]
   10bd3:	00 00                	add    BYTE PTR [rax],al
   10bd5:	00 00                	add    BYTE PTR [rax],al
   10bd7:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10bda:	00 00                	add    BYTE PTR [rax],al
   10bdc:	00 00                	add    BYTE PTR [rax],al
   10bde:	00 00                	add    BYTE PTR [rax],al
   10be0:	00 20                	add    BYTE PTR [rax],ah
   10be2:	00 00                	add    BYTE PTR [rax],al
   10be4:	00 00                	add    BYTE PTR [rax],al
   10be6:	00 00                	add    BYTE PTR [rax],al
   10be8:	0d 00 00 00 00       	or     eax,0x0
   10bed:	00 00                	add    BYTE PTR [rax],al
   10bef:	00 ac b4 00 00 00 00 	add    BYTE PTR [rsp+rsi*4+0x0],ch
   10bf6:	00 00                	add    BYTE PTR [rax],al
   10bf8:	19 00                	sbb    DWORD PTR [rax],eax
   10bfa:	00 00                	add    BYTE PTR [rax],al
   10bfc:	00 00                	add    BYTE PTR [rax],al
   10bfe:	00 00                	add    BYTE PTR [rax],al
   10c00:	88 0b                	mov    BYTE PTR [rbx],cl
   10c02:	01 00                	add    DWORD PTR [rax],eax
   10c04:	00 00                	add    BYTE PTR [rax],al
   10c06:	00 00                	add    BYTE PTR [rax],al
   10c08:	1b 00                	sbb    eax,DWORD PTR [rax]
   10c0a:	00 00                	add    BYTE PTR [rax],al
   10c0c:	00 00                	add    BYTE PTR [rax],al
   10c0e:	00 00                	add    BYTE PTR [rax],al
   10c10:	08 00                	or     BYTE PTR [rax],al
   10c12:	00 00                	add    BYTE PTR [rax],al
   10c14:	00 00                	add    BYTE PTR [rax],al
   10c16:	00 00                	add    BYTE PTR [rax],al
   10c18:	1a 00                	sbb    al,BYTE PTR [rax]
   10c1a:	00 00                	add    BYTE PTR [rax],al
   10c1c:	00 00                	add    BYTE PTR [rax],al
   10c1e:	00 00                	add    BYTE PTR [rax],al
   10c20:	90                   	nop
   10c21:	0b 01                	or     eax,DWORD PTR [rcx]
   10c23:	00 00                	add    BYTE PTR [rax],al
   10c25:	00 00                	add    BYTE PTR [rax],al
   10c27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10c2a:	00 00                	add    BYTE PTR [rax],al
   10c2c:	00 00                	add    BYTE PTR [rax],al
   10c2e:	00 00                	add    BYTE PTR [rax],al
   10c30:	08 00                	or     BYTE PTR [rax],al
   10c32:	00 00                	add    BYTE PTR [rax],al
   10c34:	00 00                	add    BYTE PTR [rax],al
   10c36:	00 00                	add    BYTE PTR [rax],al
   10c38:	f5                   	cmc    
   10c39:	fe                   	(bad)  
   10c3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 e8                	add    al,ch
   10c41:	03 00                	add    eax,DWORD PTR [rax]
   10c43:	00 00                	add    BYTE PTR [rax],al
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c4d <_DYNAMIC+0xb5>
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 f0                	add    al,dh
   10c51:	0a 00                	or     al,BYTE PTR [rax]
   10c53:	00 00                	add    BYTE PTR [rax],al
   10c55:	00 00                	add    BYTE PTR [rax],al
   10c57:	00 06                	add    BYTE PTR [rsi],al
   10c59:	00 00                	add    BYTE PTR [rax],al
   10c5b:	00 00                	add    BYTE PTR [rax],al
   10c5d:	00 00                	add    BYTE PTR [rax],al
   10c5f:	00 18                	add    BYTE PTR [rax],bl
   10c61:	04 00                	add    al,0x0
   10c63:	00 00                	add    BYTE PTR [rax],al
   10c65:	00 00                	add    BYTE PTR [rax],al
   10c67:	00 0a                	add    BYTE PTR [rdx],cl
   10c69:	00 00                	add    BYTE PTR [rax],al
   10c6b:	00 00                	add    BYTE PTR [rax],al
   10c6d:	00 00                	add    BYTE PTR [rax],al
   10c6f:	00 0b                	add    BYTE PTR [rbx],cl
   10c71:	03 00                	add    eax,DWORD PTR [rax]
   10c73:	00 00                	add    BYTE PTR [rax],al
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 0b                	add    BYTE PTR [rbx],cl
   10c79:	00 00                	add    BYTE PTR [rax],al
   10c7b:	00 00                	add    BYTE PTR [rax],al
   10c7d:	00 00                	add    BYTE PTR [rax],al
   10c7f:	00 18                	add    BYTE PTR [rax],bl
   10c81:	00 00                	add    BYTE PTR [rax],al
   10c83:	00 00                	add    BYTE PTR [rax],al
   10c85:	00 00                	add    BYTE PTR [rax],al
   10c87:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c8d <_DYNAMIC+0xf5>
	...
   10c95:	00 00                	add    BYTE PTR [rax],al
   10c97:	00 03                	add    BYTE PTR [rbx],al
   10c99:	00 00                	add    BYTE PTR [rax],al
   10c9b:	00 00                	add    BYTE PTR [rax],al
   10c9d:	00 00                	add    BYTE PTR [rax],al
   10c9f:	00 b8 0d 01 00 00    	add    BYTE PTR [rax+0x10d],bh
   10ca5:	00 00                	add    BYTE PTR [rax],al
   10ca7:	00 02                	add    BYTE PTR [rdx],al
   10ca9:	00 00                	add    BYTE PTR [rax],al
   10cab:	00 00                	add    BYTE PTR [rax],al
   10cad:	00 00                	add    BYTE PTR [rax],al
   10caf:	00 18                	add    BYTE PTR [rax],bl
   10cb1:	06                   	(bad)  
   10cb2:	00 00                	add    BYTE PTR [rax],al
   10cb4:	00 00                	add    BYTE PTR [rax],al
   10cb6:	00 00                	add    BYTE PTR [rax],al
   10cb8:	14 00                	adc    al,0x0
   10cba:	00 00                	add    BYTE PTR [rax],al
   10cbc:	00 00                	add    BYTE PTR [rax],al
   10cbe:	00 00                	add    BYTE PTR [rax],al
   10cc0:	07                   	(bad)  
   10cc1:	00 00                	add    BYTE PTR [rax],al
   10cc3:	00 00                	add    BYTE PTR [rax],al
   10cc5:	00 00                	add    BYTE PTR [rax],al
   10cc7:	00 17                	add    BYTE PTR [rdi],dl
   10cc9:	00 00                	add    BYTE PTR [rax],al
   10ccb:	00 00                	add    BYTE PTR [rax],al
   10ccd:	00 00                	add    BYTE PTR [rax],al
   10ccf:	00 20                	add    BYTE PTR [rax],ah
   10cd1:	10 00                	adc    BYTE PTR [rax],al
   10cd3:	00 00                	add    BYTE PTR [rax],al
   10cd5:	00 00                	add    BYTE PTR [rax],al
   10cd7:	00 07                	add    BYTE PTR [rdi],al
	...
   10ce1:	0f 00 00             	sldt   WORD PTR [rax]
   10ce4:	00 00                	add    BYTE PTR [rax],al
   10ce6:	00 00                	add    BYTE PTR [rax],al
   10ce8:	08 00                	or     BYTE PTR [rax],al
   10cea:	00 00                	add    BYTE PTR [rax],al
   10cec:	00 00                	add    BYTE PTR [rax],al
   10cee:	00 00                	add    BYTE PTR [rax],al
   10cf0:	20 01                	and    BYTE PTR [rcx],al
   10cf2:	00 00                	add    BYTE PTR [rax],al
   10cf4:	00 00                	add    BYTE PTR [rax],al
   10cf6:	00 00                	add    BYTE PTR [rax],al
   10cf8:	09 00                	or     DWORD PTR [rax],eax
   10cfa:	00 00                	add    BYTE PTR [rax],al
   10cfc:	00 00                	add    BYTE PTR [rax],al
   10cfe:	00 00                	add    BYTE PTR [rax],al
   10d00:	18 00                	sbb    BYTE PTR [rax],al
   10d02:	00 00                	add    BYTE PTR [rax],al
   10d04:	00 00                	add    BYTE PTR [rax],al
   10d06:	00 00                	add    BYTE PTR [rax],al
   10d08:	1e                   	(bad)  
   10d09:	00 00                	add    BYTE PTR [rax],al
   10d0b:	00 00                	add    BYTE PTR [rax],al
   10d0d:	00 00                	add    BYTE PTR [rax],al
   10d0f:	00 08                	add    BYTE PTR [rax],cl
   10d11:	00 00                	add    BYTE PTR [rax],al
   10d13:	00 00                	add    BYTE PTR [rax],al
   10d15:	00 00                	add    BYTE PTR [rax],al
   10d17:	00 fb                	add    bl,bh
   10d19:	ff                   	(bad)  
   10d1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d1d:	00 00                	add    BYTE PTR [rax],al
   10d1f:	00 01                	add    BYTE PTR [rcx],al
   10d21:	00 00                	add    BYTE PTR [rax],al
   10d23:	08 00                	or     BYTE PTR [rax],al
   10d25:	00 00                	add    BYTE PTR [rax],al
   10d27:	00 fe                	add    dh,bh
   10d29:	ff                   	(bad)  
   10d2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d2d:	00 00                	add    BYTE PTR [rax],al
   10d2f:	00 90 0e 00 00 00    	add    BYTE PTR [rax+0xe],dl
   10d35:	00 00                	add    BYTE PTR [rax],al
   10d37:	00 ff                	add    bh,bh
   10d39:	ff                   	(bad)  
   10d3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d3d:	00 00                	add    BYTE PTR [rax],al
   10d3f:	00 02                	add    BYTE PTR [rdx],al
   10d41:	00 00                	add    BYTE PTR [rax],al
   10d43:	00 00                	add    BYTE PTR [rax],al
   10d45:	00 00                	add    BYTE PTR [rax],al
   10d47:	00 f0                	add    al,dh
   10d49:	ff                   	(bad)  
   10d4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d4d:	00 00                	add    BYTE PTR [rax],al
   10d4f:	00 fc                	add    ah,bh
   10d51:	0d 00 00 00 00       	or     eax,0x0
   10d56:	00 00                	add    BYTE PTR [rax],al
   10d58:	f9                   	stc    
   10d59:	ff                   	(bad)  
   10d5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d5d:	00 00                	add    BYTE PTR [rax],al
   10d5f:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010db8 <_GLOBAL_OFFSET_TABLE_>:
   10db8:	98                   	cwde   
   10db9:	0b 01                	or     eax,DWORD PTR [rcx]
	...
   10dcf:	00 30                	add    BYTE PTR [rax],dh
   10dd1:	20 00                	and    BYTE PTR [rax],al
   10dd3:	00 00                	add    BYTE PTR [rax],al
   10dd5:	00 00                	add    BYTE PTR [rax],al
   10dd7:	00 40 20             	add    BYTE PTR [rax+0x20],al
   10dda:	00 00                	add    BYTE PTR [rax],al
   10ddc:	00 00                	add    BYTE PTR [rax],al
   10dde:	00 00                	add    BYTE PTR [rax],al
   10de0:	50                   	push   rax
   10de1:	20 00                	and    BYTE PTR [rax],al
   10de3:	00 00                	add    BYTE PTR [rax],al
   10de5:	00 00                	add    BYTE PTR [rax],al
   10de7:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   10dea:	00 00                	add    BYTE PTR [rax],al
   10dec:	00 00                	add    BYTE PTR [rax],al
   10dee:	00 00                	add    BYTE PTR [rax],al
   10df0:	70 20                	jo     10e12 <_GLOBAL_OFFSET_TABLE_+0x5a>
   10df2:	00 00                	add    BYTE PTR [rax],al
   10df4:	00 00                	add    BYTE PTR [rax],al
   10df6:	00 00                	add    BYTE PTR [rax],al
   10df8:	80 20 00             	and    BYTE PTR [rax],0x0
   10dfb:	00 00                	add    BYTE PTR [rax],al
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 c0                	add    al,al
   10e19:	20 00                	and    BYTE PTR [rax],al
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 d0                	add    al,dl
   10e21:	20 00                	and    BYTE PTR [rax],al
   10e23:	00 00                	add    BYTE PTR [rax],al
   10e25:	00 00                	add    BYTE PTR [rax],al
   10e27:	00 e0                	add    al,ah
   10e29:	20 00                	and    BYTE PTR [rax],al
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 f0                	add    al,dh
   10e31:	20 00                	and    BYTE PTR [rax],al
   10e33:	00 00                	add    BYTE PTR [rax],al
   10e35:	00 00                	add    BYTE PTR [rax],al
   10e37:	00 00                	add    BYTE PTR [rax],al
   10e39:	21 00                	and    DWORD PTR [rax],eax
   10e3b:	00 00                	add    BYTE PTR [rax],al
   10e3d:	00 00                	add    BYTE PTR [rax],al
   10e3f:	00 10                	add    BYTE PTR [rax],dl
   10e41:	21 00                	and    DWORD PTR [rax],eax
   10e43:	00 00                	add    BYTE PTR [rax],al
   10e45:	00 00                	add    BYTE PTR [rax],al
   10e47:	00 20                	add    BYTE PTR [rax],ah
   10e49:	21 00                	and    DWORD PTR [rax],eax
   10e4b:	00 00                	add    BYTE PTR [rax],al
   10e4d:	00 00                	add    BYTE PTR [rax],al
   10e4f:	00 30                	add    BYTE PTR [rax],dh
   10e51:	21 00                	and    DWORD PTR [rax],eax
   10e53:	00 00                	add    BYTE PTR [rax],al
   10e55:	00 00                	add    BYTE PTR [rax],al
   10e57:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e5a:	00 00                	add    BYTE PTR [rax],al
   10e5c:	00 00                	add    BYTE PTR [rax],al
   10e5e:	00 00                	add    BYTE PTR [rax],al
   10e60:	50                   	push   rax
   10e61:	21 00                	and    DWORD PTR [rax],eax
   10e63:	00 00                	add    BYTE PTR [rax],al
   10e65:	00 00                	add    BYTE PTR [rax],al
   10e67:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e6a:	00 00                	add    BYTE PTR [rax],al
   10e6c:	00 00                	add    BYTE PTR [rax],al
   10e6e:	00 00                	add    BYTE PTR [rax],al
   10e70:	70 21                	jo     10e93 <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e72:	00 00                	add    BYTE PTR [rax],al
   10e74:	00 00                	add    BYTE PTR [rax],al
   10e76:	00 00                	add    BYTE PTR [rax],al
   10e78:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e7b:	00 00                	add    BYTE PTR [rax],al
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 c0                	add    al,al
   10e99:	21 00                	and    DWORD PTR [rax],eax
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 d0                	add    al,dl
   10ea1:	21 00                	and    DWORD PTR [rax],eax
   10ea3:	00 00                	add    BYTE PTR [rax],al
   10ea5:	00 00                	add    BYTE PTR [rax],al
   10ea7:	00 e0                	add    al,ah
   10ea9:	21 00                	and    DWORD PTR [rax],eax
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 f0                	add    al,dh
   10eb1:	21 00                	and    DWORD PTR [rax],eax
   10eb3:	00 00                	add    BYTE PTR [rax],al
   10eb5:	00 00                	add    BYTE PTR [rax],al
   10eb7:	00 00                	add    BYTE PTR [rax],al
   10eb9:	22 00                	and    al,BYTE PTR [rax]
   10ebb:	00 00                	add    BYTE PTR [rax],al
   10ebd:	00 00                	add    BYTE PTR [rax],al
   10ebf:	00 10                	add    BYTE PTR [rax],dl
   10ec1:	22 00                	and    al,BYTE PTR [rax]
   10ec3:	00 00                	add    BYTE PTR [rax],al
   10ec5:	00 00                	add    BYTE PTR [rax],al
   10ec7:	00 20                	add    BYTE PTR [rax],ah
   10ec9:	22 00                	and    al,BYTE PTR [rax]
   10ecb:	00 00                	add    BYTE PTR [rax],al
   10ecd:	00 00                	add    BYTE PTR [rax],al
   10ecf:	00 30                	add    BYTE PTR [rax],dh
   10ed1:	22 00                	and    al,BYTE PTR [rax]
   10ed3:	00 00                	add    BYTE PTR [rax],al
   10ed5:	00 00                	add    BYTE PTR [rax],al
   10ed7:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10eda:	00 00                	add    BYTE PTR [rax],al
   10edc:	00 00                	add    BYTE PTR [rax],al
   10ede:	00 00                	add    BYTE PTR [rax],al
   10ee0:	50                   	push   rax
   10ee1:	22 00                	and    al,BYTE PTR [rax]
   10ee3:	00 00                	add    BYTE PTR [rax],al
   10ee5:	00 00                	add    BYTE PTR [rax],al
   10ee7:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10eea:	00 00                	add    BYTE PTR [rax],al
   10eec:	00 00                	add    BYTE PTR [rax],al
   10eee:	00 00                	add    BYTE PTR [rax],al
   10ef0:	70 22                	jo     10f14 <_GLOBAL_OFFSET_TABLE_+0x15c>
   10ef2:	00 00                	add    BYTE PTR [rax],al
   10ef4:	00 00                	add    BYTE PTR [rax],al
   10ef6:	00 00                	add    BYTE PTR [rax],al
   10ef8:	80 22 00             	and    BYTE PTR [rdx],0x0
   10efb:	00 00                	add    BYTE PTR [rax],al
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 c0                	add    al,al
   10f19:	22 00                	and    al,BYTE PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 d0                	add    al,dl
   10f21:	22 00                	and    al,BYTE PTR [rax]
   10f23:	00 00                	add    BYTE PTR [rax],al
   10f25:	00 00                	add    BYTE PTR [rax],al
   10f27:	00 e0                	add    al,ah
   10f29:	22 00                	and    al,BYTE PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 f0                	add    al,dh
   10f31:	22 00                	and    al,BYTE PTR [rax]
   10f33:	00 00                	add    BYTE PTR [rax],al
   10f35:	00 00                	add    BYTE PTR [rax],al
   10f37:	00 00                	add    BYTE PTR [rax],al
   10f39:	23 00                	and    eax,DWORD PTR [rax]
   10f3b:	00 00                	add    BYTE PTR [rax],al
   10f3d:	00 00                	add    BYTE PTR [rax],al
   10f3f:	00 10                	add    BYTE PTR [rax],dl
   10f41:	23 00                	and    eax,DWORD PTR [rax]
   10f43:	00 00                	add    BYTE PTR [rax],al
   10f45:	00 00                	add    BYTE PTR [rax],al
   10f47:	00 20                	add    BYTE PTR [rax],ah
   10f49:	23 00                	and    eax,DWORD PTR [rax]
   10f4b:	00 00                	add    BYTE PTR [rax],al
   10f4d:	00 00                	add    BYTE PTR [rax],al
   10f4f:	00 30                	add    BYTE PTR [rax],dh
   10f51:	23 00                	and    eax,DWORD PTR [rax]
   10f53:	00 00                	add    BYTE PTR [rax],al
   10f55:	00 00                	add    BYTE PTR [rax],al
   10f57:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f5a:	00 00                	add    BYTE PTR [rax],al
   10f5c:	00 00                	add    BYTE PTR [rax],al
   10f5e:	00 00                	add    BYTE PTR [rax],al
   10f60:	50                   	push   rax
   10f61:	23 00                	and    eax,DWORD PTR [rax]
   10f63:	00 00                	add    BYTE PTR [rax],al
   10f65:	00 00                	add    BYTE PTR [rax],al
   10f67:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f6a:	00 00                	add    BYTE PTR [rax],al
   10f6c:	00 00                	add    BYTE PTR [rax],al
   10f6e:	00 00                	add    BYTE PTR [rax],al
   10f70:	70 23                	jo     10f95 <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f72:	00 00                	add    BYTE PTR [rax],al
   10f74:	00 00                	add    BYTE PTR [rax],al
   10f76:	00 00                	add    BYTE PTR [rax],al
   10f78:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f7b:	00 00                	add    BYTE PTR [rax],al
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 c0                	add    al,al
   10f99:	23 00                	and    eax,DWORD PTR [rax]
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 d0                	add    al,dl
   10fa1:	23 00                	and    eax,DWORD PTR [rax]
   10fa3:	00 00                	add    BYTE PTR [rax],al
   10fa5:	00 00                	add    BYTE PTR [rax],al
   10fa7:	00 e0                	add    al,ah
   10fa9:	23 00                	and    eax,DWORD PTR [rax]
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 f0                	add    al,dh
   10fb1:	23 00                	and    eax,DWORD PTR [rax]
   10fb3:	00 00                	add    BYTE PTR [rax],al
   10fb5:	00 00                	add    BYTE PTR [rax],al
   10fb7:	00 00                	add    BYTE PTR [rax],al
   10fb9:	24 00                	and    al,0x0
   10fbb:	00 00                	add    BYTE PTR [rax],al
   10fbd:	00 00                	add    BYTE PTR [rax],al
   10fbf:	00 10                	add    BYTE PTR [rax],dl
   10fc1:	24 00                	and    al,0x0
   10fc3:	00 00                	add    BYTE PTR [rax],al
   10fc5:	00 00                	add    BYTE PTR [rax],al
   10fc7:	00 20                	add    BYTE PTR [rax],ah
   10fc9:	24 00                	and    al,0x0
   10fcb:	00 00                	add    BYTE PTR [rax],al
   10fcd:	00 00                	add    BYTE PTR [rax],al
   10fcf:	00 30                	add    BYTE PTR [rax],dh
   10fd1:	24 00                	and    al,0x0
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .bss:

0000000000011060 <optarg@GLIBC_2.2.5>:
	...

0000000000011068 <completed.0>:
	...

0000000000011080 <demo_mode>:
   11080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011084 <strict_icmp_timestamp_req>:
   11084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011088 <strict_nmap_host_alive_check>:
	...

00000000000110a0 <threads>:
	...

00000000000112a0 <thread_count>:
   112a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a4 <total_pkt_captured>:
   112a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a8 <is_running>:
	...

00000000000112b0 <last_clean_time>:
	...

00000000000112b8 <clean_delay>:
	...

00000000000112c0 <pkt_counter>:
	...

00000000000112e0 <rules>:
	...

00000000000f32e0 <blocked_ipv4_addrs>:
	...

00000000000f3520 <watchlist>:
	...

0000000000107d20 <arpcache>:
	...

0000000000109f00 <ip_addr>:
	...

0000000000109f20 <debug_mode>:
	...

0000000000109f21 <use_sqlite>:
	...

0000000000109f40 <sqlite_db_path>:
	...

0000000000109f60 <clean_delay_pkts>:
  109f60:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f64 <packet_print>:
	...

0000000000109f65 <quiet_exit>:
  109f65:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f68 <vigil_location>:
	...

0000000000109f70 <input_adapter>:
	...

0000000000109f80 <output_adapter>:
	...

0000000000109f90 <local_ip>:
	...

0000000000109fb0 <def_gw>:
	...

0000000000109fc2 <use_spi>:
	...

0000000000109fc4 <homenet>:
  109fc4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fc8 <homenetmask>:
  109fc8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fcc <in_test_mode>:
	...

0000000000109fe0 <spi_table>:
	...

0000000000137fe0 <lua_scripts>:
	...

0000000000138800 <fn_mem_map>:
	...

000000000013b000 <fn_num>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.0+0x1>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754ec541>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer.0+0x10>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
