
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.0+0x30d>
 360:	78 38                	js     39a <buffer.0+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 1f                	add    BYTE PTR [rdi],bl
 3b1:	00 a8 0d fe 20 a7    	add    BYTE PTR [rax-0x58df01f3],ch
 3b7:	32 f7                	xor    dh,bh
 3b9:	32 9c b4 45 e8 02 bc 	xor    bl,BYTE PTR [rsp+rsi*4-0x43fd17bb]
 3c0:	6b 30 75             	imul   esi,DWORD PTR [rax],0x75
 3c3:	fb                   	sti    

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	b2 a2                	mov    dl,0xa2
 412:	f7 12                	not    DWORD PTR [rdx]
 414:	33                   	.byte 0x33
 415:	b3 f0                	mov    bl,0xf0
 417:	a9                   	.byte 0xa9

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
 433:	00 12                	add    BYTE PTR [rdx],dl
	...
 445:	00 00                	add    BYTE PTR [rax],al
 447:	00 bb 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],bh
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 78 02             	add    BYTE PTR [rax+0x2],bh
 462:	00 00                	add    BYTE PTR [rax],al
 464:	12 00                	adc    al,BYTE PTR [rax]
	...
 476:	00 00                	add    BYTE PTR [rax],al
 478:	7f 01                	jg     47b <__abi_tag+0xb7>
 47a:	00 00                	add    BYTE PTR [rax],al
 47c:	12 00                	adc    al,BYTE PTR [rax]
	...
 48e:	00 00                	add    BYTE PTR [rax],al
 490:	6d                   	ins    DWORD PTR es:[rdi],dx
 491:	02 00                	add    al,BYTE PTR [rax]
 493:	00 12                	add    BYTE PTR [rdx],dl
	...
 4a5:	00 00                	add    BYTE PTR [rax],al
 4a7:	00 65 02             	add    BYTE PTR [rbp+0x2],ah
 4aa:	00 00                	add    BYTE PTR [rax],al
 4ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 4be:	00 00                	add    BYTE PTR [rax],al
 4c0:	2c 02                	sub    al,0x2
 4c2:	00 00                	add    BYTE PTR [rax],al
 4c4:	12 00                	adc    al,BYTE PTR [rax]
	...
 4d6:	00 00                	add    BYTE PTR [rax],al
 4d8:	6c                   	ins    BYTE PTR es:[rdi],dx
 4d9:	00 00                	add    BYTE PTR [rax],al
 4db:	00 12                	add    BYTE PTR [rdx],dl
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 e1                	add    cl,ah
 4f1:	01 00                	add    DWORD PTR [rax],eax
 4f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 c8                	add    al,cl
 509:	01 00                	add    DWORD PTR [rax],eax
 50b:	00 12                	add    BYTE PTR [rdx],dl
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 a4 02 00 00 12 00 	add    BYTE PTR [rdx+rax*1+0x120000],ah
	...
 536:	00 00                	add    BYTE PTR [rax],al
 538:	d5                   	(bad)  
 539:	00 00                	add    BYTE PTR [rax],al
 53b:	00 12                	add    BYTE PTR [rdx],dl
	...
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 5a 01             	add    BYTE PTR [rdx+0x1],bl
 552:	00 00                	add    BYTE PTR [rax],al
 554:	12 00                	adc    al,BYTE PTR [rax]
	...
 566:	00 00                	add    BYTE PTR [rax],al
 568:	50                   	push   rax
 569:	00 00                	add    BYTE PTR [rax],al
 56b:	00 12                	add    BYTE PTR [rdx],dl
	...
 57d:	00 00                	add    BYTE PTR [rax],al
 57f:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 582:	00 00                	add    BYTE PTR [rax],al
 584:	12 00                	adc    al,BYTE PTR [rax]
	...
 596:	00 00                	add    BYTE PTR [rax],al
 598:	4a 02 00             	rex.WX add al,BYTE PTR [rax]
 59b:	00 12                	add    BYTE PTR [rdx],dl
	...
 5ad:	00 00                	add    BYTE PTR [rax],al
 5af:	00 28                	add    BYTE PTR [rax],ch
 5b1:	01 00                	add    DWORD PTR [rax],eax
 5b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 1c 02             	add    BYTE PTR [rdx+rax*1],bl
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	60                   	(bad)  
 5e1:	02 00                	add    al,BYTE PTR [rax]
 5e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5f5:	00 00                	add    BYTE PTR [rax],al
 5f7:	00 af 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],ch
	...
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	00 42 02             	add    BYTE PTR [rdx+0x2],al
 612:	00 00                	add    BYTE PTR [rax],al
 614:	12 00                	adc    al,BYTE PTR [rax]
	...
 626:	00 00                	add    BYTE PTR [rax],al
 628:	f2 00 00             	repnz add BYTE PTR [rax],al
 62b:	00 12                	add    BYTE PTR [rdx],dl
	...
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 0e                	add    BYTE PTR [rsi],cl
 641:	02 00                	add    al,BYTE PTR [rax]
 643:	00 12                	add    BYTE PTR [rdx],dl
	...
 655:	00 00                	add    BYTE PTR [rax],al
 657:	00 32                	add    BYTE PTR [rdx],dh
 659:	01 00                	add    DWORD PTR [rax],eax
 65b:	00 12                	add    BYTE PTR [rdx],dl
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 61 01             	add    BYTE PTR [rcx+0x1],ah
 672:	00 00                	add    BYTE PTR [rax],al
 674:	12 00                	adc    al,BYTE PTR [rax]
	...
 686:	00 00                	add    BYTE PTR [rax],al
 688:	a1 01 00 00 12 00 00 	movabs eax,ds:0x12000001
 68f:	00 00 
	...
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 51 02             	add    BYTE PTR [rcx+0x2],dl
 6a2:	00 00                	add    BYTE PTR [rax],al
 6a4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6b6:	00 00                	add    BYTE PTR [rax],al
 6b8:	72 02                	jb     6bc <message_buffer+0x23c>
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	12 01                	adc    al,BYTE PTR [rcx]
 6d2:	00 00                	add    BYTE PTR [rax],al
 6d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	96                   	xchg   esi,eax
 6e9:	02 00                	add    al,BYTE PTR [rax]
 6eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 6fd:	00 00                	add    BYTE PTR [rax],al
 6ff:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
 702:	00 00                	add    BYTE PTR [rax],al
 704:	12 00                	adc    al,BYTE PTR [rax]
	...
 716:	00 00                	add    BYTE PTR [rax],al
 718:	66 01 00             	add    WORD PTR [rax],ax
 71b:	00 12                	add    BYTE PTR [rdx],dl
	...
 72d:	00 00                	add    BYTE PTR [rax],al
 72f:	00 ef                	add    bh,ch
 731:	01 00                	add    DWORD PTR [rax],eax
 733:	00 12                	add    BYTE PTR [rdx],dl
	...
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 86 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],al
	...
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	00 e8                	add    al,ch
 761:	01 00                	add    DWORD PTR [rax],eax
 763:	00 12                	add    BYTE PTR [rdx],dl
	...
 775:	00 00                	add    BYTE PTR [rax],al
 777:	00 b8 02 00 00 12    	add    BYTE PTR [rax+0x12000002],bh
	...
 78d:	00 00                	add    BYTE PTR [rax],al
 78f:	00 c2                	add    dl,al
 791:	01 00                	add    DWORD PTR [rax],eax
 793:	00 12                	add    BYTE PTR [rdx],dl
	...
 7a5:	00 00                	add    BYTE PTR [rax],al
 7a7:	00 8f 02 00 00 12    	add    BYTE PTR [rdi+0x12000002],cl
	...
 7bd:	00 00                	add    BYTE PTR [rax],al
 7bf:	00 99 01 00 00 12    	add    BYTE PTR [rcx+0x12000001],bl
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 db                	add    bl,bl
 7d9:	01 00                	add    DWORD PTR [rax],eax
 7db:	00 12                	add    BYTE PTR [rdx],dl
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 cf                	add    bh,cl
 7f1:	01 00                	add    DWORD PTR [rax],eax
 7f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 9d 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bl
	...
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 b3 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],dh
	...
 835:	00 00                	add    BYTE PTR [rax],al
 837:	00 87 02 00 00 12    	add    BYTE PTR [rdi+0x12000002],al
	...
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 95 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],dl
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 20                	add    BYTE PTR [rax],ah
 869:	01 00                	add    DWORD PTR [rax],eax
 86b:	00 12                	add    BYTE PTR [rdx],dl
	...
 87d:	00 00                	add    BYTE PTR [rax],al
 87f:	00 49 01             	add    BYTE PTR [rcx+0x1],cl
 882:	00 00                	add    BYTE PTR [rax],al
 884:	12 00                	adc    al,BYTE PTR [rax]
	...
 896:	00 00                	add    BYTE PTR [rax],al
 898:	6b 01 00             	imul   eax,DWORD PTR [rcx],0x0
 89b:	00 12                	add    BYTE PTR [rdx],dl
	...
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 a2 00 00 00 12    	add    BYTE PTR [rdx+0x12000000],ah
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 e4                	add    ah,ah
 8c9:	00 00                	add    BYTE PTR [rax],al
 8cb:	00 12                	add    BYTE PTR [rdx],dl
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 07                	add    BYTE PTR [rdi],al
 8e1:	01 00                	add    DWORD PTR [rax],eax
 8e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 ab 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],ch
	...
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 b3 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],dh
	...
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 07                	add    BYTE PTR [rdi],al
 929:	02 00                	add    al,BYTE PTR [rax]
 92b:	00 12                	add    BYTE PTR [rdx],dl
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 ca                	add    dl,cl
 941:	00 00                	add    BYTE PTR [rax],al
 943:	00 12                	add    BYTE PTR [rdx],dl
	...
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 ba 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],bh
	...
 96d:	00 00                	add    BYTE PTR [rax],al
 96f:	00 55 01             	add    BYTE PTR [rbp+0x1],dl
 972:	00 00                	add    BYTE PTR [rax],al
 974:	12 00                	adc    al,BYTE PTR [rax]
	...
 986:	00 00                	add    BYTE PTR [rax],al
 988:	f6 01 00             	test   BYTE PTR [rcx],0x0
 98b:	00 12                	add    BYTE PTR [rdx],dl
	...
 99d:	00 00                	add    BYTE PTR [rax],al
 99f:	00 87 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],al
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
 9ba:	00 00                	add    BYTE PTR [rax],al
 9bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 9ce:	00 00                	add    BYTE PTR [rax],al
 9d0:	c3                   	ret    
 9d1:	01 00                	add    DWORD PTR [rax],eax
 9d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9e5:	00 00                	add    BYTE PTR [rax],al
 9e7:	00 d6                	add    dh,dl
 9e9:	01 00                	add    DWORD PTR [rax],eax
 9eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 a01:	02 00                	add    al,BYTE PTR [rax]
 a03:	00 12                	add    BYTE PTR [rdx],dl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 7e 02             	add    BYTE PTR [rsi+0x2],bh
 a1a:	00 00                	add    BYTE PTR [rax],al
 a1c:	12 00                	adc    al,BYTE PTR [rax]
	...
 a2e:	00 00                	add    BYTE PTR [rax],al
 a30:	57                   	push   rdi
 a31:	02 00                	add    al,BYTE PTR [rax]
 a33:	00 12                	add    BYTE PTR [rdx],dl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 fc                	add    ah,bh
 a49:	00 00                	add    BYTE PTR [rax],al
 a4b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 bd 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bh
	...
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 01                	add    BYTE PTR [rcx],al
 a79:	00 00                	add    BYTE PTR [rax],al
 a7b:	00 20                	add    BYTE PTR [rax],ah
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 9d 02 00 00 12    	add    BYTE PTR [rbp+0x12000002],bl
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 c9                	add    cl,cl
 aa9:	02 00                	add    al,BYTE PTR [rax]
 aab:	00 12                	add    BYTE PTR [rdx],dl
	...
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 33                	add    BYTE PTR [rbx],dh
 ac1:	02 00                	add    al,BYTE PTR [rax]
 ac3:	00 12                	add    BYTE PTR [rdx],dl
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 4f 01             	add    BYTE PTR [rdi+0x1],cl
 ada:	00 00                	add    BYTE PTR [rax],al
 adc:	12 00                	adc    al,BYTE PTR [rax]
	...
 aee:	00 00                	add    BYTE PTR [rax],al
 af0:	1d 00 00 00 20       	sbb    eax,0x20000000
	...
 b05:	00 00                	add    BYTE PTR [rax],al
 b07:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 b0a:	00 00                	add    BYTE PTR [rax],al
 b0c:	20 00                	and    BYTE PTR [rax],al
	...
 b1e:	00 00                	add    BYTE PTR [rax],al
 b20:	b7 00                	mov    bh,0x0
 b22:	00 00                	add    BYTE PTR [rax],al
 b24:	12 00                	adc    al,BYTE PTR [rax]
	...
 b36:	00 00                	add    BYTE PTR [rax],al
 b38:	3a 01                	cmp    al,BYTE PTR [rcx]
 b3a:	00 00                	add    BYTE PTR [rax],al
 b3c:	22 00                	and    al,BYTE PTR [rax]
	...
 b4e:	00 00                	add    BYTE PTR [rax],al
 b50:	15 02 00 00 11       	adc    eax,0x11000002
 b55:	00 1b                	add    BYTE PTR [rbx],bl
 b57:	00 60 20             	add    BYTE PTR [rax+0x20],ah
 b5a:	01 00                	add    DWORD PTR [rax],eax
 b5c:	00 00                	add    BYTE PTR [rax],al
 b5e:	00 00                	add    BYTE PTR [rax],al
 b60:	08 00                	or     BYTE PTR [rax],al
 b62:	00 00                	add    BYTE PTR [rax],al
 b64:	00 00                	add    BYTE PTR [rax],al
 b66:	00 00                	add    BYTE PTR [rax],al
 b68:	24 02                	and    al,0x2
 b6a:	00 00                	add    BYTE PTR [rax],al
 b6c:	12 00                	adc    al,BYTE PTR [rax]
 b6e:	10 00                	adc    BYTE PTR [rax],al
 b70:	a2 ab 00 00 00 00 00 	movabs ds:0x3a000000000000ab,al
 b77:	00 3a 
 b79:	01 00                	add    DWORD PTR [rax],eax
 b7b:	00 00                	add    BYTE PTR [rax],al
 b7d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b80 <.dynstr>:
 b80:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b83:	54                   	push   rsp
 b84:	4d 5f                	rex.WRB pop r15
 b86:	64 65 72 65          	fs gs jb bef <message_buffer+0x76f>
 b8a:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b91:	4d 
 b92:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b94:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b95:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b96:	65 54                	gs push rsp
 b98:	61                   	(bad)  
 b99:	62                   	(bad)  
 b9a:	6c                   	ins    BYTE PTR es:[rdi],dx
 b9b:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b9f:	67 6d                	ins    DWORD PTR es:[edi],dx
 ba1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ba2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 ba3:	5f                   	pop    rdi
 ba4:	73 74                	jae    c1a <message_buffer+0x79a>
 ba6:	61                   	(bad)  
 ba7:	72 74                	jb     c1d <message_buffer+0x79d>
 ba9:	5f                   	pop    rdi
 baa:	5f                   	pop    rdi
 bab:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 bae:	54                   	push   rsp
 baf:	4d 5f                	rex.WRB pop r15
 bb1:	72 65                	jb     c18 <message_buffer+0x798>
 bb3:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 bba:	4d 
 bbb:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 bbd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bbe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bbf:	65 54                	gs push rsp
 bc1:	61                   	(bad)  
 bc2:	62                   	(bad)  
 bc3:	6c                   	ins    BYTE PTR es:[rdi],dx
 bc4:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 bc8:	61                   	(bad)  
 bc9:	70 5f                	jo     c2a <message_buffer+0x7aa>
 bcb:	6c                   	ins    BYTE PTR es:[rdi],dx
 bcc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bcd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bce:	70 00                	jo     bd0 <message_buffer+0x750>
 bd0:	70 63                	jo     c35 <message_buffer+0x7b5>
 bd2:	61                   	(bad)  
 bd3:	70 5f                	jo     c34 <message_buffer+0x7b4>
 bd5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bd6:	70 65                	jo     c3d <message_buffer+0x7bd>
 bd8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bd9:	5f                   	pop    rdi
 bda:	6c                   	ins    BYTE PTR es:[rdi],dx
 bdb:	69 76 65 00 53 48 41 	imul   esi,DWORD PTR [rsi+0x65],0x41485300
 be2:	35 31 32 5f 46       	xor    eax,0x465f3231
 be7:	69 6e 61 6c 00 53 48 	imul   ebp,DWORD PTR [rsi+0x61],0x4853006c
 bee:	41 35 31 32 5f 55    	rex.B xor eax,0x555f3231
 bf4:	70 64                	jo     c5a <message_buffer+0x7da>
 bf6:	61                   	(bad)  
 bf7:	74 65                	je     c5e <message_buffer+0x7de>
 bf9:	00 53 48             	add    BYTE PTR [rbx+0x48],dl
 bfc:	41 35 31 32 5f 49    	rex.B xor eax,0x495f3231
 c02:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c03:	69 74 00 73 71 6c 69 	imul   esi,DWORD PTR [rax+rax*1+0x73],0x74696c71
 c0a:	74 
 c0b:	65 33 5f 65          	xor    ebx,DWORD PTR gs:[rdi+0x65]
 c0f:	72 72                	jb     c83 <message_buffer+0x803>
 c11:	6d                   	ins    DWORD PTR es:[rdi],dx
 c12:	73 67                	jae    c7b <message_buffer+0x7fb>
 c14:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c17:	6c                   	ins    BYTE PTR es:[rdi],dx
 c18:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 c1f:	65 
 c20:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 c24:	6c                   	ins    BYTE PTR es:[rdi],dx
 c25:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 c2c:	65 
 c2d:	63 00                	movsxd eax,DWORD PTR [rax]
 c2f:	73 71                	jae    ca2 <message_buffer+0x822>
 c31:	6c                   	ins    BYTE PTR es:[rdi],dx
 c32:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 c39:	6f 
 c3a:	73 65                	jae    ca1 <message_buffer+0x821>
 c3c:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c3f:	6c                   	ins    BYTE PTR es:[rdi],dx
 c40:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 c47:	65 
 c48:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c49:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c4d:	5f                   	pop    rdi
 c4e:	73 65                	jae    cb5 <message_buffer+0x835>
 c50:	74 74                	je     cc6 <message_buffer+0x846>
 c52:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c53:	70 00                	jo     c55 <message_buffer+0x7d5>
 c55:	6c                   	ins    BYTE PTR es:[rdi],dx
 c56:	75 61                	jne    cb9 <message_buffer+0x839>
 c58:	4c 5f                	rex.WR pop rdi
 c5a:	6c                   	ins    BYTE PTR es:[rdi],dx
 c5b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c5c:	61                   	(bad)  
 c5d:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 c64:	6c 
 c65:	75 61                	jne    cc8 <message_buffer+0x848>
 c67:	4c 5f                	rex.WR pop rdi
 c69:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c6a:	65 77 73             	gs ja  ce0 <message_buffer+0x860>
 c6d:	74 61                	je     cd0 <message_buffer+0x850>
 c6f:	74 65                	je     cd6 <message_buffer+0x856>
 c71:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c75:	5f                   	pop    rdi
 c76:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 c7a:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 c7f:	5f                   	pop    rdi
 c80:	70 63                	jo     ce5 <message_buffer+0x865>
 c82:	61                   	(bad)  
 c83:	6c                   	ins    BYTE PTR es:[rdi],dx
 c84:	6c                   	ins    BYTE PTR es:[rdi],dx
 c85:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 c88:	75 61                	jne    ceb <message_buffer+0x86b>
 c8a:	5f                   	pop    rdi
 c8b:	67 65 74 74          	addr32 gs je d03 <message_buffer+0x883>
 c8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c90:	70 00                	jo     c92 <message_buffer+0x812>
 c92:	6c                   	ins    BYTE PTR es:[rdi],dx
 c93:	75 61                	jne    cf6 <message_buffer+0x876>
 c95:	4c 5f                	rex.WR pop rdi
 c97:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c98:	70 65                	jo     cff <message_buffer+0x87f>
 c9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c9b:	6c                   	ins    BYTE PTR es:[rdi],dx
 c9c:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 ca3:	6c                   	ins    BYTE PTR es:[rdi],dx
 ca4:	69 6e 65 00 69 6e 65 	imul   ebp,DWORD PTR [rsi+0x65],0x656e6900
 cab:	74 5f                	je     d0c <message_buffer+0x88c>
 cad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 cae:	74 6f                	je     d1f <message_buffer+0x89f>
 cb0:	61                   	(bad)  
 cb1:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cb4:	72 6e                	jb     d24 <message_buffer+0x8a4>
 cb6:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 cb9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 cbc:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 cbf:	5f                   	pop    rdi
 cc0:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 cc6:	7a 65                	jp     d2d <message_buffer+0x8ad>
 cc8:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 ccb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ccc:	68 6c 00 6e 74       	push   0x746e006c
 cd1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cd2:	68 73 00 72 65       	push   0x65720073
 cd7:	61                   	(bad)  
 cd8:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 cdc:	72 63                	jb     d41 <message_buffer+0x8c1>
 cde:	68 72 00 6c 6f       	push   0x6f6c0072
 ce3:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 ce6:	74 69                	je     d51 <message_buffer+0x8d1>
 ce8:	6d                   	ins    DWORD PTR es:[rdi],dx
 ce9:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 ced:	6c                   	ins    BYTE PTR es:[rdi],dx
 cee:	6c                   	ins    BYTE PTR es:[rdi],dx
 cef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cf0:	63 00                	movsxd eax,DWORD PTR [rax]
 cf2:	70 74                	jo     d68 <message_buffer+0x8e8>
 cf4:	68 72 65 61 64       	push   0x64616572
 cf9:	5f                   	pop    rdi
 cfa:	6a 6f                	push   0x6f
 cfc:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 d03:	73 70                	jae    d75 <message_buffer+0x8f5>
 d05:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d06:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 d09:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d0c:	72 61                	jb     d6f <message_buffer+0x8ef>
 d0e:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 d11:	73 79                	jae    d8c <message_buffer+0x90c>
 d13:	6d                   	ins    DWORD PTR es:[rdi],dx
 d14:	62                   	(bad)  
 d15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d16:	6c                   	ins    BYTE PTR es:[rdi],dx
 d17:	73 00                	jae    d19 <message_buffer+0x899>
 d19:	72 65                	jb     d80 <message_buffer+0x900>
 d1b:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 d1f:	70 00                	jo     d21 <message_buffer+0x8a1>
 d21:	5f                   	pop    rdi
 d22:	5f                   	pop    rdi
 d23:	6c                   	ins    BYTE PTR es:[rdi],dx
 d24:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 d2b:	72 74                	jb     da1 <message_buffer+0x921>
 d2d:	5f                   	pop    rdi
 d2e:	6d                   	ins    DWORD PTR es:[rdi],dx
 d2f:	61                   	(bad)  
 d30:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 d37:	6d                   	ins    DWORD PTR es:[rdi],dx
 d38:	70 00                	jo     d3a <message_buffer+0x8ba>
 d3a:	66 70 72             	data16 jo daf <message_buffer+0x92f>
 d3d:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 d44:	75 74                	jne    dba <message_buffer+0x93a>
 d46:	73 00                	jae    d48 <message_buffer+0x8c8>
 d48:	73 6f                	jae    db9 <message_buffer+0x939>
 d4a:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 d4d:	74 00                	je     d4f <message_buffer+0x8cf>
 d4f:	73 69                	jae    dba <message_buffer+0x93a>
 d51:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 d53:	61                   	(bad)  
 d54:	6c                   	ins    BYTE PTR es:[rdi],dx
 d55:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 d58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d59:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 d5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d60:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 d63:	74 6f                	je     dd4 <message_buffer+0x954>
 d65:	70 74                	jo     ddb <message_buffer+0x95b>
 d67:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 d6a:	6c                   	ins    BYTE PTR es:[rdi],dx
 d6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d6c:	73 65                	jae    dd3 <message_buffer+0x953>
 d6e:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d71:	72 63                	jb     dd6 <message_buffer+0x956>
 d73:	70 79                	jo     dee <message_buffer+0x96e>
 d75:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 d78:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d7b:	72 61                	jb     dde <message_buffer+0x95e>
 d7d:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 d80:	73 74                	jae    df6 <message_buffer+0x976>
 d82:	72 74                	jb     df8 <message_buffer+0x978>
 d84:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d85:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 d88:	74 72                	je     dfc <message_buffer+0x97c>
 d8a:	74 6f                	je     dfb <message_buffer+0x97b>
 d8c:	6c                   	ins    BYTE PTR es:[rdi],dx
 d8d:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 d90:	6d                   	ins    DWORD PTR es:[rdi],dx
 d91:	73 65                	jae    df8 <message_buffer+0x978>
 d93:	74 00                	je     d95 <message_buffer+0x915>
 d95:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d96:	70 74                	jo     e0c <message_buffer+0x98c>
 d98:	61                   	(bad)  
 d99:	72 67                	jb     e02 <message_buffer+0x982>
 d9b:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d9e:	72 6e                	jb     e0e <message_buffer+0x98e>
 da0:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 da3:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 da6:	64 69 67 69 74 00 73 	imul   esp,DWORD PTR fs:[rdi+0x69],0x74730074
 dad:	74 
 dae:	72 73                	jb     e23 <message_buffer+0x9a3>
 db0:	74 72                	je     e24 <message_buffer+0x9a4>
 db2:	00 70 74             	add    BYTE PTR [rax+0x74],dh
 db5:	68 72 65 61 64       	push   0x64616572
 dba:	5f                   	pop    rdi
 dbb:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 dbe:	61                   	(bad)  
 dbf:	74 65                	je     e26 <message_buffer+0x9a6>
 dc1:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 dc4:	72 6e                	jb     e34 <message_buffer+0x9b4>
 dc6:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 dc9:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 dcc:	72 6c                	jb     e3a <message_buffer+0x9ba>
 dce:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 dd0:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 dd3:	65 65 70 00          	gs gs jo dd7 <message_buffer+0x957>
 dd7:	67 65 74 64          	addr32 gs je e3f <message_buffer+0x9bf>
 ddb:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 ddd:	69 6d 00 73 65 6e 64 	imul   ebp,DWORD PTR [rbp+0x0],0x646e6573
 de4:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
 de7:	72 69                	jb     e52 <message_buffer+0x9d2>
 de9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dea:	74 66                	je     e52 <message_buffer+0x9d2>
 dec:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 def:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 df0:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 df4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 df5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 df6:	6c                   	ins    BYTE PTR es:[rdi],dx
 df7:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 dfa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 dfb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dfc:	73 00                	jae    dfe <message_buffer+0x97e>
 dfe:	73 6e                	jae    e6e <message_buffer+0x9ee>
 e00:	70 72                	jo     e74 <message_buffer+0x9f4>
 e02:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 e09:	67 65 78 65          	addr32 gs js e72 <message_buffer+0x9f2>
 e0d:	63 00                	movsxd eax,DWORD PTR [rax]
 e0f:	6c                   	ins    BYTE PTR es:[rdi],dx
 e10:	69 73 74 65 6e 00 70 	imul   esi,DWORD PTR [rbx+0x74],0x70006e65
 e17:	65 72 72             	gs jb  e8c <message_buffer+0xa0c>
 e1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e1b:	72 00                	jb     e1d <message_buffer+0x99d>
 e1d:	73 74                	jae    e93 <message_buffer+0xa13>
 e1f:	72 63                	jb     e84 <message_buffer+0xa04>
 e21:	61                   	(bad)  
 e22:	74 00                	je     e24 <message_buffer+0x9a4>
 e24:	61                   	(bad)  
 e25:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 e28:	70 74                	jo     e9e <message_buffer+0xa1e>
 e2a:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 e2d:	74 63                	je     e92 <message_buffer+0xa12>
 e2f:	68 61 72 00 65       	push   0x65007261
 e34:	78 69                	js     e9f <message_buffer+0xa1f>
 e36:	74 00                	je     e38 <message_buffer+0x9b8>
 e38:	5f                   	pop    rdi
 e39:	5f                   	pop    rdi
 e3a:	73 74                	jae    eb0 <message_buffer+0xa30>
 e3c:	61                   	(bad)  
 e3d:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 e40:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 e43:	5f                   	pop    rdi
 e44:	66 61                	data16 (bad) 
 e46:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 e4d:	6f 
 e4e:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 e51:	70 74                	jo     ec7 <message_buffer+0xa47>
 e53:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 e57:	70 63                	jo     ebc <message_buffer+0xa3c>
 e59:	61                   	(bad)  
 e5a:	70 2e                	jo     e8a <message_buffer+0xa0a>
 e5c:	73 6f                	jae    ecd <message_buffer+0xa4d>
 e5e:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 e61:	38 00                	cmp    BYTE PTR [rax],al
 e63:	6c                   	ins    BYTE PTR es:[rdi],dx
 e64:	69 62 63 72 79 70 74 	imul   esp,DWORD PTR [rdx+0x63],0x74707972
 e6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 e6c:	2e 73 6f             	cs jae ede <message_buffer+0xa5e>
 e6f:	2e 31 2e             	cs xor DWORD PTR [rsi],ebp
 e72:	31 00                	xor    DWORD PTR [rax],eax
 e74:	6c                   	ins    BYTE PTR es:[rdi],dx
 e75:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 e7c:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 e7f:	73 6f                	jae    ef0 <message_buffer+0xa70>
 e81:	2e 30 00             	cs xor BYTE PTR [rax],al
 e84:	6c                   	ins    BYTE PTR es:[rdi],dx
 e85:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 e8c:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e8e:	73 6f                	jae    eff <message_buffer+0xa7f>
 e90:	2e 30 00             	cs xor BYTE PTR [rax],al
 e93:	6c                   	ins    BYTE PTR es:[rdi],dx
 e94:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 e9b:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 ea0:	5f                   	pop    rdi
 ea1:	35 2e 33 00 4f       	xor    eax,0x4f00332e
 ea6:	50                   	push   rax
 ea7:	45                   	rex.RB
 ea8:	4e 53                	rex.WRX push rbx
 eaa:	53                   	push   rbx
 eab:	4c 5f                	rex.WR pop rdi
 ead:	31 5f 31             	xor    DWORD PTR [rdi+0x31],ebx
 eb0:	5f                   	pop    rdi
 eb1:	30 00                	xor    BYTE PTR [rax],al
 eb3:	47                   	rex.RXB
 eb4:	4c                   	rex.WR
 eb5:	49                   	rex.WB
 eb6:	42                   	rex.X
 eb7:	43 5f                	rex.XB pop r15
 eb9:	32 2e                	xor    ch,BYTE PTR [rsi]
 ebb:	33 2e                	xor    ebp,DWORD PTR [rsi]
 ebd:	34 00                	xor    al,0x0
 ebf:	47                   	rex.RXB
 ec0:	4c                   	rex.WR
 ec1:	49                   	rex.WB
 ec2:	42                   	rex.X
 ec3:	43 5f                	rex.XB pop r15
 ec5:	32 2e                	xor    ch,BYTE PTR [rsi]
 ec7:	34 00                	xor    al,0x0
 ec9:	47                   	rex.RXB
 eca:	4c                   	rex.WR
 ecb:	49                   	rex.WB
 ecc:	42                   	rex.X
 ecd:	43 5f                	rex.XB pop r15
 ecf:	32 2e                	xor    ch,BYTE PTR [rsi]
 ed1:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 ed4:	47                   	rex.RXB
 ed5:	4c                   	rex.WR
 ed6:	49                   	rex.WB
 ed7:	42                   	rex.X
 ed8:	43 5f                	rex.XB pop r15
 eda:	32 2e                	xor    ch,BYTE PTR [rsi]
 edc:	32 2e                	xor    ch,BYTE PTR [rsi]
 ede:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000000ee0 <.gnu.version>:
 ee0:	00 00                	add    BYTE PTR [rax],al
 ee2:	00 00                	add    BYTE PTR [rax],al
 ee4:	02 00                	add    al,BYTE PTR [rax]
 ee6:	02 00                	add    al,BYTE PTR [rax]
 ee8:	02 00                	add    al,BYTE PTR [rax]
 eea:	02 00                	add    al,BYTE PTR [rax]
 eec:	02 00                	add    al,BYTE PTR [rax]
 eee:	02 00                	add    al,BYTE PTR [rax]
 ef0:	03 00                	add    eax,DWORD PTR [rax]
 ef2:	02 00                	add    al,BYTE PTR [rax]
 ef4:	02 00                	add    al,BYTE PTR [rax]
 ef6:	02 00                	add    al,BYTE PTR [rax]
 ef8:	04 00                	add    al,0x0
 efa:	02 00                	add    al,BYTE PTR [rax]
 efc:	00 00                	add    BYTE PTR [rax],al
 efe:	03 00                	add    eax,DWORD PTR [rax]
 f00:	02 00                	add    al,BYTE PTR [rax]
 f02:	02 00                	add    al,BYTE PTR [rax]
 f04:	02 00                	add    al,BYTE PTR [rax]
 f06:	02 00                	add    al,BYTE PTR [rax]
 f08:	00 00                	add    BYTE PTR [rax],al
 f0a:	02 00                	add    al,BYTE PTR [rax]
 f0c:	04 00                	add    al,0x0
 f0e:	02 00                	add    al,BYTE PTR [rax]
 f10:	02 00                	add    al,BYTE PTR [rax]
 f12:	02 00                	add    al,BYTE PTR [rax]
 f14:	05 00 02 00 02       	add    eax,0x2000200
 f19:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 f1c:	02 00                	add    al,BYTE PTR [rax]
 f1e:	05 00 02 00 02       	add    eax,0x2000200
 f23:	00 00                	add    BYTE PTR [rax],al
 f25:	00 02                	add    BYTE PTR [rdx],al
 f27:	00 06                	add    BYTE PTR [rsi],al
 f29:	00 02                	add    BYTE PTR [rdx],al
 f2b:	00 02                	add    BYTE PTR [rdx],al
 f2d:	00 02                	add    BYTE PTR [rdx],al
 f2f:	00 02                	add    BYTE PTR [rdx],al
 f31:	00 02                	add    BYTE PTR [rdx],al
 f33:	00 02                	add    BYTE PTR [rdx],al
 f35:	00 02                	add    BYTE PTR [rdx],al
 f37:	00 07                	add    BYTE PTR [rdi],al
 f39:	00 00                	add    BYTE PTR [rax],al
 f3b:	00 02                	add    BYTE PTR [rdx],al
 f3d:	00 02                	add    BYTE PTR [rdx],al
 f3f:	00 02                	add    BYTE PTR [rdx],al
 f41:	00 00                	add    BYTE PTR [rax],al
 f43:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 f46:	04 00                	add    al,0x0
 f48:	02 00                	add    al,BYTE PTR [rax]
 f4a:	02 00                	add    al,BYTE PTR [rax]
 f4c:	02 00                	add    al,BYTE PTR [rax]
 f4e:	04 00                	add    al,0x0
 f50:	02 00                	add    al,BYTE PTR [rax]
 f52:	02 00                	add    al,BYTE PTR [rax]
 f54:	02 00                	add    al,BYTE PTR [rax]
 f56:	02 00                	add    al,BYTE PTR [rax]
 f58:	03 00                	add    eax,DWORD PTR [rax]
 f5a:	02 00                	add    al,BYTE PTR [rax]
 f5c:	02 00                	add    al,BYTE PTR [rax]
 f5e:	02 00                	add    al,BYTE PTR [rax]
 f60:	02 00                	add    al,BYTE PTR [rax]
 f62:	02 00                	add    al,BYTE PTR [rax]
 f64:	04 00                	add    al,0x0
 f66:	00 00                	add    BYTE PTR [rax],al
 f68:	00 00                	add    BYTE PTR [rax],al
 f6a:	02 00                	add    al,BYTE PTR [rax]
 f6c:	02 00                	add    al,BYTE PTR [rax]
 f6e:	05 00 02 00 00       	add    eax,0x200
 f73:	00 00                	add    BYTE PTR [rax],al
 f75:	00 02                	add    BYTE PTR [rdx],al
 f77:	00 02                	add    BYTE PTR [rdx],al
 f79:	00 02                	add    BYTE PTR [rdx],al
 f7b:	00 01                	add    BYTE PTR [rcx],al
	...

Disassembly of section .gnu.version_r:

0000000000000f80 <.gnu.version_r>:
     f80:	01 00                	add    DWORD PTR [rax],eax
     f82:	01 00                	add    DWORD PTR [rax],eax
     f84:	04 03                	add    al,0x3
     f86:	00 00                	add    BYTE PTR [rax],al
     f88:	10 00                	adc    BYTE PTR [rax],al
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	20 00                	and    BYTE PTR [rax],al
     f8e:	00 00                	add    BYTE PTR [rax],al
     f90:	43 28 97 01 00 00 04 	rex.XB sub BYTE PTR [r15+0x4000001],dl
     f97:	00 1d 03 00 00 00    	add    BYTE PTR [rip+0x3],bl        # fa0 <message_buffer+0xb20>
     f9d:	00 00                	add    BYTE PTR [rax],al
     f9f:	00 01                	add    BYTE PTR [rcx],al
     fa1:	00 01                	add    BYTE PTR [rcx],al
     fa3:	00 e3                	add    bl,ah
     fa5:	02 00                	add    al,BYTE PTR [rax]
     fa7:	00 10                	add    BYTE PTR [rax],dl
     fa9:	00 00                	add    BYTE PTR [rax],al
     fab:	00 20                	add    BYTE PTR [rax],ah
     fad:	00 00                	add    BYTE PTR [rax],al
     faf:	00 10                	add    BYTE PTR [rax],dl
     fb1:	1f                   	(bad)  
     fb2:	6d                   	ins    DWORD PTR es:[rdi],dx
     fb3:	06                   	(bad)  
     fb4:	00 00                	add    BYTE PTR [rax],al
     fb6:	03 00                	add    eax,DWORD PTR [rax]
     fb8:	25 03 00 00 00       	and    eax,0x3
     fbd:	00 00                	add    BYTE PTR [rax],al
     fbf:	00 01                	add    BYTE PTR [rcx],al
     fc1:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     fc4:	13 03                	adc    eax,DWORD PTR [rbx]
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	10 00                	adc    BYTE PTR [rax],al
     fca:	00 00                	add    BYTE PTR [rax],al
     fcc:	00 00                	add    BYTE PTR [rax],al
     fce:	00 00                	add    BYTE PTR [rax],al
     fd0:	74 19                	je     feb <message_buffer+0xb6b>
     fd2:	69 09 00 00 07 00    	imul   ecx,DWORD PTR [rcx],0x70000
     fd8:	33 03                	xor    eax,DWORD PTR [rbx]
     fda:	00 00                	add    BYTE PTR [rax],al
     fdc:	10 00                	adc    BYTE PTR [rax],al
     fde:	00 00                	add    BYTE PTR [rax],al
     fe0:	14 69                	adc    al,0x69
     fe2:	69 0d 00 00 06 00 3f 	imul   ecx,DWORD PTR [rip+0x60000],0x33f        # 60fec <rules+0x4ed0c>
     fe9:	03 00 00 
     fec:	10 00                	adc    BYTE PTR [rax],al
     fee:	00 00                	add    BYTE PTR [rax],al
     ff0:	b4 91                	mov    ah,0x91
     ff2:	96                   	xchg   esi,eax
     ff3:	06                   	(bad)  
     ff4:	00 00                	add    BYTE PTR [rax],al
     ff6:	05 00 49 03 00       	add    eax,0x34900
     ffb:	00 10                	add    BYTE PTR [rax],dl
     ffd:	00 00                	add    BYTE PTR [rax],al
     fff:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
    1002:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
    1008:	54                   	push   rsp
    1009:	03 00                	add    eax,DWORD PTR [rax]
    100b:	00 00                	add    BYTE PTR [rax],al
    100d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000001010 <.rela.dyn>:
    1010:	48 1b 01             	sbb    rax,QWORD PTR [rcx]
    1013:	00 00                	add    BYTE PTR [rax],al
    1015:	00 00                	add    BYTE PTR [rax],al
    1017:	00 08                	add    BYTE PTR [rax],cl
	...
    1021:	2a 00                	sub    al,BYTE PTR [rax]
    1023:	00 00                	add    BYTE PTR [rax],al
    1025:	00 00                	add    BYTE PTR [rax],al
    1027:	00 50 1b             	add    BYTE PTR [rax+0x1b],dl
    102a:	01 00                	add    DWORD PTR [rax],eax
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	00 00                	add    BYTE PTR [rax],al
    1030:	08 00                	or     BYTE PTR [rax],al
    1032:	00 00                	add    BYTE PTR [rax],al
    1034:	00 00                	add    BYTE PTR [rax],al
    1036:	00 00                	add    BYTE PTR [rax],al
    1038:	c0 29 00             	shr    BYTE PTR [rcx],0x0
    103b:	00 00                	add    BYTE PTR [rax],al
    103d:	00 00                	add    BYTE PTR [rax],al
    103f:	00 08                	add    BYTE PTR [rax],cl
    1041:	20 01                	and    BYTE PTR [rcx],al
    1043:	00 00                	add    BYTE PTR [rax],al
    1045:	00 00                	add    BYTE PTR [rax],al
    1047:	00 08                	add    BYTE PTR [rax],cl
    1049:	00 00                	add    BYTE PTR [rax],al
    104b:	00 00                	add    BYTE PTR [rax],al
    104d:	00 00                	add    BYTE PTR [rax],al
    104f:	00 08                	add    BYTE PTR [rax],cl
    1051:	20 01                	and    BYTE PTR [rcx],al
    1053:	00 00                	add    BYTE PTR [rax],al
    1055:	00 00                	add    BYTE PTR [rax],al
    1057:	00 30                	add    BYTE PTR [rax],dh
    1059:	20 01                	and    BYTE PTR [rcx],al
    105b:	00 00                	add    BYTE PTR [rax],al
    105d:	00 00                	add    BYTE PTR [rax],al
    105f:	00 08                	add    BYTE PTR [rax],cl
    1061:	00 00                	add    BYTE PTR [rax],al
    1063:	00 00                	add    BYTE PTR [rax],al
    1065:	00 00                	add    BYTE PTR [rax],al
    1067:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
    106a:	00 00                	add    BYTE PTR [rax],al
    106c:	00 00                	add    BYTE PTR [rax],al
    106e:	00 00                	add    BYTE PTR [rax],al
    1070:	38 20                	cmp    BYTE PTR [rax],ah
    1072:	01 00                	add    DWORD PTR [rax],eax
    1074:	00 00                	add    BYTE PTR [rax],al
    1076:	00 00                	add    BYTE PTR [rax],al
    1078:	08 00                	or     BYTE PTR [rax],al
    107a:	00 00                	add    BYTE PTR [rax],al
    107c:	00 00                	add    BYTE PTR [rax],al
    107e:	00 00                	add    BYTE PTR [rax],al
    1080:	1a d0                	sbb    dl,al
    1082:	00 00                	add    BYTE PTR [rax],al
    1084:	00 00                	add    BYTE PTR [rax],al
    1086:	00 00                	add    BYTE PTR [rax],al
    1088:	40 20 01             	rex and BYTE PTR [rcx],al
    108b:	00 00                	add    BYTE PTR [rax],al
    108d:	00 00                	add    BYTE PTR [rax],al
    108f:	00 08                	add    BYTE PTR [rax],cl
    1091:	00 00                	add    BYTE PTR [rax],al
    1093:	00 00                	add    BYTE PTR [rax],al
    1095:	00 00                	add    BYTE PTR [rax],al
    1097:	00 34 d0             	add    BYTE PTR [rax+rdx*8],dh
    109a:	00 00                	add    BYTE PTR [rax],al
    109c:	00 00                	add    BYTE PTR [rax],al
    109e:	00 00                	add    BYTE PTR [rax],al
    10a0:	48 20 01             	rex.W and BYTE PTR [rcx],al
    10a3:	00 00                	add    BYTE PTR [rax],al
    10a5:	00 00                	add    BYTE PTR [rax],al
    10a7:	00 08                	add    BYTE PTR [rax],cl
    10a9:	00 00                	add    BYTE PTR [rax],al
    10ab:	00 00                	add    BYTE PTR [rax],al
    10ad:	00 00                	add    BYTE PTR [rax],al
    10af:	00 08                	add    BYTE PTR [rax],cl
    10b1:	e6 00                	out    0x0,al
    10b3:	00 00                	add    BYTE PTR [rax],al
    10b5:	00 00                	add    BYTE PTR [rax],al
    10b7:	00 50 20             	add    BYTE PTR [rax+0x20],dl
    10ba:	01 00                	add    DWORD PTR [rax],eax
    10bc:	00 00                	add    BYTE PTR [rax],al
    10be:	00 00                	add    BYTE PTR [rax],al
    10c0:	08 00                	or     BYTE PTR [rax],al
    10c2:	00 00                	add    BYTE PTR [rax],al
    10c4:	00 00                	add    BYTE PTR [rax],al
    10c6:	00 00                	add    BYTE PTR [rax],al
    10c8:	e0 e6                	loopne 10b0 <message_buffer+0xc30>
    10ca:	00 00                	add    BYTE PTR [rax],al
    10cc:	00 00                	add    BYTE PTR [rax],al
    10ce:	00 00                	add    BYTE PTR [rax],al
    10d0:	d8 1f                	fcomp  DWORD PTR [rdi]
    10d2:	01 00                	add    DWORD PTR [rax],eax
    10d4:	00 00                	add    BYTE PTR [rax],al
    10d6:	00 00                	add    BYTE PTR [rax],al
    10d8:	06                   	(bad)  
    10d9:	00 00                	add    BYTE PTR [rax],al
    10db:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
	...
    10e7:	00 e0                	add    al,ah
    10e9:	1f                   	(bad)  
    10ea:	01 00                	add    DWORD PTR [rax],eax
    10ec:	00 00                	add    BYTE PTR [rax],al
    10ee:	00 00                	add    BYTE PTR [rax],al
    10f0:	06                   	(bad)  
    10f1:	00 00                	add    BYTE PTR [rax],al
    10f3:	00 1a                	add    BYTE PTR [rdx],bl
	...
    10fd:	00 00                	add    BYTE PTR [rax],al
    10ff:	00 e8                	add    al,ch
    1101:	1f                   	(bad)  
    1102:	01 00                	add    DWORD PTR [rax],eax
    1104:	00 00                	add    BYTE PTR [rax],al
    1106:	00 00                	add    BYTE PTR [rax],al
    1108:	06                   	(bad)  
    1109:	00 00                	add    BYTE PTR [rax],al
    110b:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    1117:	00 f0                	add    al,dh
    1119:	1f                   	(bad)  
    111a:	01 00                	add    DWORD PTR [rax],eax
    111c:	00 00                	add    BYTE PTR [rax],al
    111e:	00 00                	add    BYTE PTR [rax],al
    1120:	06                   	(bad)  
    1121:	00 00                	add    BYTE PTR [rax],al
    1123:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
	...
    112e:	00 00                	add    BYTE PTR [rax],al
    1130:	f8                   	clc    
    1131:	1f                   	(bad)  
    1132:	01 00                	add    DWORD PTR [rax],eax
    1134:	00 00                	add    BYTE PTR [rax],al
    1136:	00 00                	add    BYTE PTR [rax],al
    1138:	06                   	(bad)  
    1139:	00 00                	add    BYTE PTR [rax],al
    113b:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
	...
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	60                   	(bad)  
    1149:	20 01                	and    BYTE PTR [rcx],al
    114b:	00 00                	add    BYTE PTR [rax],al
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	00 05 00 00 00 4d    	add    BYTE PTR [rip+0x4d000000],al        # 4d001155 <_end+0x4cec514d>
	...

Disassembly of section .rela.plt:

0000000000001160 <.rela.plt>:
    1160:	a0 1d 01 00 00 00 00 	movabs al,ds:0x70000000000011d
    1167:	00 07 
    1169:	00 00                	add    BYTE PTR [rax],al
    116b:	00 01                	add    BYTE PTR [rcx],al
	...
    1175:	00 00                	add    BYTE PTR [rax],al
    1177:	00 a8 1d 01 00 00    	add    BYTE PTR [rax+0x11d],ch
    117d:	00 00                	add    BYTE PTR [rax],al
    117f:	00 07                	add    BYTE PTR [rdi],al
    1181:	00 00                	add    BYTE PTR [rax],al
    1183:	00 02                	add    BYTE PTR [rdx],al
	...
    118d:	00 00                	add    BYTE PTR [rax],al
    118f:	00 b0 1d 01 00 00    	add    BYTE PTR [rax+0x11d],dh
    1195:	00 00                	add    BYTE PTR [rax],al
    1197:	00 07                	add    BYTE PTR [rdi],al
    1199:	00 00                	add    BYTE PTR [rax],al
    119b:	00 03                	add    BYTE PTR [rbx],al
	...
    11a5:	00 00                	add    BYTE PTR [rax],al
    11a7:	00 b8 1d 01 00 00    	add    BYTE PTR [rax+0x11d],bh
    11ad:	00 00                	add    BYTE PTR [rax],al
    11af:	00 07                	add    BYTE PTR [rdi],al
    11b1:	00 00                	add    BYTE PTR [rax],al
    11b3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    11be:	00 00                	add    BYTE PTR [rax],al
    11c0:	c0 1d 01 00 00 00 00 	rcr    BYTE PTR [rip+0x1],0x0        # 11c8 <message_buffer+0xd48>
    11c7:	00 07                	add    BYTE PTR [rdi],al
    11c9:	00 00                	add    BYTE PTR [rax],al
    11cb:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 11d1 <message_buffer+0xd51>
    11d1:	00 00                	add    BYTE PTR [rax],al
    11d3:	00 00                	add    BYTE PTR [rax],al
    11d5:	00 00                	add    BYTE PTR [rax],al
    11d7:	00 c8                	add    al,cl
    11d9:	1d 01 00 00 00       	sbb    eax,0x1
    11de:	00 00                	add    BYTE PTR [rax],al
    11e0:	07                   	(bad)  
    11e1:	00 00                	add    BYTE PTR [rax],al
    11e3:	00 06                	add    BYTE PTR [rsi],al
	...
    11ed:	00 00                	add    BYTE PTR [rax],al
    11ef:	00 d0                	add    al,dl
    11f1:	1d 01 00 00 00       	sbb    eax,0x1
    11f6:	00 00                	add    BYTE PTR [rax],al
    11f8:	07                   	(bad)  
    11f9:	00 00                	add    BYTE PTR [rax],al
    11fb:	00 07                	add    BYTE PTR [rdi],al
	...
    1205:	00 00                	add    BYTE PTR [rax],al
    1207:	00 d8                	add    al,bl
    1209:	1d 01 00 00 00       	sbb    eax,0x1
    120e:	00 00                	add    BYTE PTR [rax],al
    1210:	07                   	(bad)  
    1211:	00 00                	add    BYTE PTR [rax],al
    1213:	00 08                	add    BYTE PTR [rax],cl
	...
    121d:	00 00                	add    BYTE PTR [rax],al
    121f:	00 e0                	add    al,ah
    1221:	1d 01 00 00 00       	sbb    eax,0x1
    1226:	00 00                	add    BYTE PTR [rax],al
    1228:	07                   	(bad)  
    1229:	00 00                	add    BYTE PTR [rax],al
    122b:	00 09                	add    BYTE PTR [rcx],cl
	...
    1235:	00 00                	add    BYTE PTR [rax],al
    1237:	00 e8                	add    al,ch
    1239:	1d 01 00 00 00       	sbb    eax,0x1
    123e:	00 00                	add    BYTE PTR [rax],al
    1240:	07                   	(bad)  
    1241:	00 00                	add    BYTE PTR [rax],al
    1243:	00 0a                	add    BYTE PTR [rdx],cl
	...
    124d:	00 00                	add    BYTE PTR [rax],al
    124f:	00 f0                	add    al,dh
    1251:	1d 01 00 00 00       	sbb    eax,0x1
    1256:	00 00                	add    BYTE PTR [rax],al
    1258:	07                   	(bad)  
    1259:	00 00                	add    BYTE PTR [rax],al
    125b:	00 0b                	add    BYTE PTR [rbx],cl
	...
    1265:	00 00                	add    BYTE PTR [rax],al
    1267:	00 f8                	add    al,bh
    1269:	1d 01 00 00 00       	sbb    eax,0x1
    126e:	00 00                	add    BYTE PTR [rax],al
    1270:	07                   	(bad)  
    1271:	00 00                	add    BYTE PTR [rax],al
    1273:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    127e:	00 00                	add    BYTE PTR [rax],al
    1280:	00 1e                	add    BYTE PTR [rsi],bl
    1282:	01 00                	add    DWORD PTR [rax],eax
    1284:	00 00                	add    BYTE PTR [rax],al
    1286:	00 00                	add    BYTE PTR [rax],al
    1288:	07                   	(bad)  
    1289:	00 00                	add    BYTE PTR [rax],al
    128b:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1291 <message_buffer+0xe11>
    1291:	00 00                	add    BYTE PTR [rax],al
    1293:	00 00                	add    BYTE PTR [rax],al
    1295:	00 00                	add    BYTE PTR [rax],al
    1297:	00 08                	add    BYTE PTR [rax],cl
    1299:	1e                   	(bad)  
    129a:	01 00                	add    DWORD PTR [rax],eax
    129c:	00 00                	add    BYTE PTR [rax],al
    129e:	00 00                	add    BYTE PTR [rax],al
    12a0:	07                   	(bad)  
    12a1:	00 00                	add    BYTE PTR [rax],al
    12a3:	00 0e                	add    BYTE PTR [rsi],cl
	...
    12ad:	00 00                	add    BYTE PTR [rax],al
    12af:	00 10                	add    BYTE PTR [rax],dl
    12b1:	1e                   	(bad)  
    12b2:	01 00                	add    DWORD PTR [rax],eax
    12b4:	00 00                	add    BYTE PTR [rax],al
    12b6:	00 00                	add    BYTE PTR [rax],al
    12b8:	07                   	(bad)  
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	00 0f                	add    BYTE PTR [rdi],cl
	...
    12c5:	00 00                	add    BYTE PTR [rax],al
    12c7:	00 18                	add    BYTE PTR [rax],bl
    12c9:	1e                   	(bad)  
    12ca:	01 00                	add    DWORD PTR [rax],eax
    12cc:	00 00                	add    BYTE PTR [rax],al
    12ce:	00 00                	add    BYTE PTR [rax],al
    12d0:	07                   	(bad)  
    12d1:	00 00                	add    BYTE PTR [rax],al
    12d3:	00 10                	add    BYTE PTR [rax],dl
	...
    12dd:	00 00                	add    BYTE PTR [rax],al
    12df:	00 20                	add    BYTE PTR [rax],ah
    12e1:	1e                   	(bad)  
    12e2:	01 00                	add    DWORD PTR [rax],eax
    12e4:	00 00                	add    BYTE PTR [rax],al
    12e6:	00 00                	add    BYTE PTR [rax],al
    12e8:	07                   	(bad)  
    12e9:	00 00                	add    BYTE PTR [rax],al
    12eb:	00 11                	add    BYTE PTR [rcx],dl
	...
    12f5:	00 00                	add    BYTE PTR [rax],al
    12f7:	00 28                	add    BYTE PTR [rax],ch
    12f9:	1e                   	(bad)  
    12fa:	01 00                	add    DWORD PTR [rax],eax
    12fc:	00 00                	add    BYTE PTR [rax],al
    12fe:	00 00                	add    BYTE PTR [rax],al
    1300:	07                   	(bad)  
    1301:	00 00                	add    BYTE PTR [rax],al
    1303:	00 12                	add    BYTE PTR [rdx],dl
	...
    130d:	00 00                	add    BYTE PTR [rax],al
    130f:	00 30                	add    BYTE PTR [rax],dh
    1311:	1e                   	(bad)  
    1312:	01 00                	add    DWORD PTR [rax],eax
    1314:	00 00                	add    BYTE PTR [rax],al
    1316:	00 00                	add    BYTE PTR [rax],al
    1318:	07                   	(bad)  
    1319:	00 00                	add    BYTE PTR [rax],al
    131b:	00 13                	add    BYTE PTR [rbx],dl
	...
    1325:	00 00                	add    BYTE PTR [rax],al
    1327:	00 38                	add    BYTE PTR [rax],bh
    1329:	1e                   	(bad)  
    132a:	01 00                	add    DWORD PTR [rax],eax
    132c:	00 00                	add    BYTE PTR [rax],al
    132e:	00 00                	add    BYTE PTR [rax],al
    1330:	07                   	(bad)  
    1331:	00 00                	add    BYTE PTR [rax],al
    1333:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    133e:	00 00                	add    BYTE PTR [rax],al
    1340:	40 1e                	rex (bad) 
    1342:	01 00                	add    DWORD PTR [rax],eax
    1344:	00 00                	add    BYTE PTR [rax],al
    1346:	00 00                	add    BYTE PTR [rax],al
    1348:	07                   	(bad)  
    1349:	00 00                	add    BYTE PTR [rax],al
    134b:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 1351 <message_buffer+0xed1>
    1351:	00 00                	add    BYTE PTR [rax],al
    1353:	00 00                	add    BYTE PTR [rax],al
    1355:	00 00                	add    BYTE PTR [rax],al
    1357:	00 48 1e             	add    BYTE PTR [rax+0x1e],cl
    135a:	01 00                	add    DWORD PTR [rax],eax
    135c:	00 00                	add    BYTE PTR [rax],al
    135e:	00 00                	add    BYTE PTR [rax],al
    1360:	07                   	(bad)  
    1361:	00 00                	add    BYTE PTR [rax],al
    1363:	00 16                	add    BYTE PTR [rsi],dl
	...
    136d:	00 00                	add    BYTE PTR [rax],al
    136f:	00 50 1e             	add    BYTE PTR [rax+0x1e],dl
    1372:	01 00                	add    DWORD PTR [rax],eax
    1374:	00 00                	add    BYTE PTR [rax],al
    1376:	00 00                	add    BYTE PTR [rax],al
    1378:	07                   	(bad)  
    1379:	00 00                	add    BYTE PTR [rax],al
    137b:	00 17                	add    BYTE PTR [rdi],dl
	...
    1385:	00 00                	add    BYTE PTR [rax],al
    1387:	00 58 1e             	add    BYTE PTR [rax+0x1e],bl
    138a:	01 00                	add    DWORD PTR [rax],eax
    138c:	00 00                	add    BYTE PTR [rax],al
    138e:	00 00                	add    BYTE PTR [rax],al
    1390:	07                   	(bad)  
    1391:	00 00                	add    BYTE PTR [rax],al
    1393:	00 18                	add    BYTE PTR [rax],bl
	...
    139d:	00 00                	add    BYTE PTR [rax],al
    139f:	00 60 1e             	add    BYTE PTR [rax+0x1e],ah
    13a2:	01 00                	add    DWORD PTR [rax],eax
    13a4:	00 00                	add    BYTE PTR [rax],al
    13a6:	00 00                	add    BYTE PTR [rax],al
    13a8:	07                   	(bad)  
    13a9:	00 00                	add    BYTE PTR [rax],al
    13ab:	00 19                	add    BYTE PTR [rcx],bl
	...
    13b5:	00 00                	add    BYTE PTR [rax],al
    13b7:	00 68 1e             	add    BYTE PTR [rax+0x1e],ch
    13ba:	01 00                	add    DWORD PTR [rax],eax
    13bc:	00 00                	add    BYTE PTR [rax],al
    13be:	00 00                	add    BYTE PTR [rax],al
    13c0:	07                   	(bad)  
    13c1:	00 00                	add    BYTE PTR [rax],al
    13c3:	00 1b                	add    BYTE PTR [rbx],bl
	...
    13cd:	00 00                	add    BYTE PTR [rax],al
    13cf:	00 70 1e             	add    BYTE PTR [rax+0x1e],dh
    13d2:	01 00                	add    DWORD PTR [rax],eax
    13d4:	00 00                	add    BYTE PTR [rax],al
    13d6:	00 00                	add    BYTE PTR [rax],al
    13d8:	07                   	(bad)  
    13d9:	00 00                	add    BYTE PTR [rax],al
    13db:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    13e6:	00 00                	add    BYTE PTR [rax],al
    13e8:	78 1e                	js     1408 <message_buffer+0xf88>
    13ea:	01 00                	add    DWORD PTR [rax],eax
    13ec:	00 00                	add    BYTE PTR [rax],al
    13ee:	00 00                	add    BYTE PTR [rax],al
    13f0:	07                   	(bad)  
    13f1:	00 00                	add    BYTE PTR [rax],al
    13f3:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 13f9 <message_buffer+0xf79>
    13f9:	00 00                	add    BYTE PTR [rax],al
    13fb:	00 00                	add    BYTE PTR [rax],al
    13fd:	00 00                	add    BYTE PTR [rax],al
    13ff:	00 80 1e 01 00 00    	add    BYTE PTR [rax+0x11e],al
    1405:	00 00                	add    BYTE PTR [rax],al
    1407:	00 07                	add    BYTE PTR [rdi],al
    1409:	00 00                	add    BYTE PTR [rax],al
    140b:	00 1e                	add    BYTE PTR [rsi],bl
	...
    1415:	00 00                	add    BYTE PTR [rax],al
    1417:	00 88 1e 01 00 00    	add    BYTE PTR [rax+0x11e],cl
    141d:	00 00                	add    BYTE PTR [rax],al
    141f:	00 07                	add    BYTE PTR [rdi],al
    1421:	00 00                	add    BYTE PTR [rax],al
    1423:	00 1f                	add    BYTE PTR [rdi],bl
	...
    142d:	00 00                	add    BYTE PTR [rax],al
    142f:	00 90 1e 01 00 00    	add    BYTE PTR [rax+0x11e],dl
    1435:	00 00                	add    BYTE PTR [rax],al
    1437:	00 07                	add    BYTE PTR [rdi],al
    1439:	00 00                	add    BYTE PTR [rax],al
    143b:	00 20                	add    BYTE PTR [rax],ah
	...
    1445:	00 00                	add    BYTE PTR [rax],al
    1447:	00 98 1e 01 00 00    	add    BYTE PTR [rax+0x11e],bl
    144d:	00 00                	add    BYTE PTR [rax],al
    144f:	00 07                	add    BYTE PTR [rdi],al
    1451:	00 00                	add    BYTE PTR [rax],al
    1453:	00 21                	add    BYTE PTR [rcx],ah
	...
    145d:	00 00                	add    BYTE PTR [rax],al
    145f:	00 a0 1e 01 00 00    	add    BYTE PTR [rax+0x11e],ah
    1465:	00 00                	add    BYTE PTR [rax],al
    1467:	00 07                	add    BYTE PTR [rdi],al
    1469:	00 00                	add    BYTE PTR [rax],al
    146b:	00 22                	add    BYTE PTR [rdx],ah
	...
    1475:	00 00                	add    BYTE PTR [rax],al
    1477:	00 a8 1e 01 00 00    	add    BYTE PTR [rax+0x11e],ch
    147d:	00 00                	add    BYTE PTR [rax],al
    147f:	00 07                	add    BYTE PTR [rdi],al
    1481:	00 00                	add    BYTE PTR [rax],al
    1483:	00 23                	add    BYTE PTR [rbx],ah
	...
    148d:	00 00                	add    BYTE PTR [rax],al
    148f:	00 b0 1e 01 00 00    	add    BYTE PTR [rax+0x11e],dh
    1495:	00 00                	add    BYTE PTR [rax],al
    1497:	00 07                	add    BYTE PTR [rdi],al
    1499:	00 00                	add    BYTE PTR [rax],al
    149b:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    14a6:	00 00                	add    BYTE PTR [rax],al
    14a8:	b8 1e 01 00 00       	mov    eax,0x11e
    14ad:	00 00                	add    BYTE PTR [rax],al
    14af:	00 07                	add    BYTE PTR [rdi],al
    14b1:	00 00                	add    BYTE PTR [rax],al
    14b3:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 14b9 <message_buffer+0x1039>
    14b9:	00 00                	add    BYTE PTR [rax],al
    14bb:	00 00                	add    BYTE PTR [rax],al
    14bd:	00 00                	add    BYTE PTR [rax],al
    14bf:	00 c0                	add    al,al
    14c1:	1e                   	(bad)  
    14c2:	01 00                	add    DWORD PTR [rax],eax
    14c4:	00 00                	add    BYTE PTR [rax],al
    14c6:	00 00                	add    BYTE PTR [rax],al
    14c8:	07                   	(bad)  
    14c9:	00 00                	add    BYTE PTR [rax],al
    14cb:	00 26                	add    BYTE PTR [rsi],ah
	...
    14d5:	00 00                	add    BYTE PTR [rax],al
    14d7:	00 c8                	add    al,cl
    14d9:	1e                   	(bad)  
    14da:	01 00                	add    DWORD PTR [rax],eax
    14dc:	00 00                	add    BYTE PTR [rax],al
    14de:	00 00                	add    BYTE PTR [rax],al
    14e0:	07                   	(bad)  
    14e1:	00 00                	add    BYTE PTR [rax],al
    14e3:	00 27                	add    BYTE PTR [rdi],ah
	...
    14ed:	00 00                	add    BYTE PTR [rax],al
    14ef:	00 d0                	add    al,dl
    14f1:	1e                   	(bad)  
    14f2:	01 00                	add    DWORD PTR [rax],eax
    14f4:	00 00                	add    BYTE PTR [rax],al
    14f6:	00 00                	add    BYTE PTR [rax],al
    14f8:	07                   	(bad)  
    14f9:	00 00                	add    BYTE PTR [rax],al
    14fb:	00 28                	add    BYTE PTR [rax],ch
	...
    1505:	00 00                	add    BYTE PTR [rax],al
    1507:	00 d8                	add    al,bl
    1509:	1e                   	(bad)  
    150a:	01 00                	add    DWORD PTR [rax],eax
    150c:	00 00                	add    BYTE PTR [rax],al
    150e:	00 00                	add    BYTE PTR [rax],al
    1510:	07                   	(bad)  
    1511:	00 00                	add    BYTE PTR [rax],al
    1513:	00 29                	add    BYTE PTR [rcx],ch
	...
    151d:	00 00                	add    BYTE PTR [rax],al
    151f:	00 e0                	add    al,ah
    1521:	1e                   	(bad)  
    1522:	01 00                	add    DWORD PTR [rax],eax
    1524:	00 00                	add    BYTE PTR [rax],al
    1526:	00 00                	add    BYTE PTR [rax],al
    1528:	07                   	(bad)  
    1529:	00 00                	add    BYTE PTR [rax],al
    152b:	00 2a                	add    BYTE PTR [rdx],ch
	...
    1535:	00 00                	add    BYTE PTR [rax],al
    1537:	00 e8                	add    al,ch
    1539:	1e                   	(bad)  
    153a:	01 00                	add    DWORD PTR [rax],eax
    153c:	00 00                	add    BYTE PTR [rax],al
    153e:	00 00                	add    BYTE PTR [rax],al
    1540:	07                   	(bad)  
    1541:	00 00                	add    BYTE PTR [rax],al
    1543:	00 2b                	add    BYTE PTR [rbx],ch
	...
    154d:	00 00                	add    BYTE PTR [rax],al
    154f:	00 f0                	add    al,dh
    1551:	1e                   	(bad)  
    1552:	01 00                	add    DWORD PTR [rax],eax
    1554:	00 00                	add    BYTE PTR [rax],al
    1556:	00 00                	add    BYTE PTR [rax],al
    1558:	07                   	(bad)  
    1559:	00 00                	add    BYTE PTR [rax],al
    155b:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    1566:	00 00                	add    BYTE PTR [rax],al
    1568:	f8                   	clc    
    1569:	1e                   	(bad)  
    156a:	01 00                	add    DWORD PTR [rax],eax
    156c:	00 00                	add    BYTE PTR [rax],al
    156e:	00 00                	add    BYTE PTR [rax],al
    1570:	07                   	(bad)  
    1571:	00 00                	add    BYTE PTR [rax],al
    1573:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 1579 <message_buffer+0x10f9>
	...
    1581:	1f                   	(bad)  
    1582:	01 00                	add    DWORD PTR [rax],eax
    1584:	00 00                	add    BYTE PTR [rax],al
    1586:	00 00                	add    BYTE PTR [rax],al
    1588:	07                   	(bad)  
    1589:	00 00                	add    BYTE PTR [rax],al
    158b:	00 2e                	add    BYTE PTR [rsi],ch
	...
    1595:	00 00                	add    BYTE PTR [rax],al
    1597:	00 08                	add    BYTE PTR [rax],cl
    1599:	1f                   	(bad)  
    159a:	01 00                	add    DWORD PTR [rax],eax
    159c:	00 00                	add    BYTE PTR [rax],al
    159e:	00 00                	add    BYTE PTR [rax],al
    15a0:	07                   	(bad)  
    15a1:	00 00                	add    BYTE PTR [rax],al
    15a3:	00 2f                	add    BYTE PTR [rdi],ch
	...
    15ad:	00 00                	add    BYTE PTR [rax],al
    15af:	00 10                	add    BYTE PTR [rax],dl
    15b1:	1f                   	(bad)  
    15b2:	01 00                	add    DWORD PTR [rax],eax
    15b4:	00 00                	add    BYTE PTR [rax],al
    15b6:	00 00                	add    BYTE PTR [rax],al
    15b8:	07                   	(bad)  
    15b9:	00 00                	add    BYTE PTR [rax],al
    15bb:	00 30                	add    BYTE PTR [rax],dh
	...
    15c5:	00 00                	add    BYTE PTR [rax],al
    15c7:	00 18                	add    BYTE PTR [rax],bl
    15c9:	1f                   	(bad)  
    15ca:	01 00                	add    DWORD PTR [rax],eax
    15cc:	00 00                	add    BYTE PTR [rax],al
    15ce:	00 00                	add    BYTE PTR [rax],al
    15d0:	07                   	(bad)  
    15d1:	00 00                	add    BYTE PTR [rax],al
    15d3:	00 31                	add    BYTE PTR [rcx],dh
	...
    15dd:	00 00                	add    BYTE PTR [rax],al
    15df:	00 20                	add    BYTE PTR [rax],ah
    15e1:	1f                   	(bad)  
    15e2:	01 00                	add    DWORD PTR [rax],eax
    15e4:	00 00                	add    BYTE PTR [rax],al
    15e6:	00 00                	add    BYTE PTR [rax],al
    15e8:	07                   	(bad)  
    15e9:	00 00                	add    BYTE PTR [rax],al
    15eb:	00 32                	add    BYTE PTR [rdx],dh
	...
    15f5:	00 00                	add    BYTE PTR [rax],al
    15f7:	00 28                	add    BYTE PTR [rax],ch
    15f9:	1f                   	(bad)  
    15fa:	01 00                	add    DWORD PTR [rax],eax
    15fc:	00 00                	add    BYTE PTR [rax],al
    15fe:	00 00                	add    BYTE PTR [rax],al
    1600:	07                   	(bad)  
    1601:	00 00                	add    BYTE PTR [rax],al
    1603:	00 33                	add    BYTE PTR [rbx],dh
	...
    160d:	00 00                	add    BYTE PTR [rax],al
    160f:	00 30                	add    BYTE PTR [rax],dh
    1611:	1f                   	(bad)  
    1612:	01 00                	add    DWORD PTR [rax],eax
    1614:	00 00                	add    BYTE PTR [rax],al
    1616:	00 00                	add    BYTE PTR [rax],al
    1618:	07                   	(bad)  
    1619:	00 00                	add    BYTE PTR [rax],al
    161b:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    1626:	00 00                	add    BYTE PTR [rax],al
    1628:	38 1f                	cmp    BYTE PTR [rdi],bl
    162a:	01 00                	add    DWORD PTR [rax],eax
    162c:	00 00                	add    BYTE PTR [rax],al
    162e:	00 00                	add    BYTE PTR [rax],al
    1630:	07                   	(bad)  
    1631:	00 00                	add    BYTE PTR [rax],al
    1633:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 1639 <message_buffer+0x11b9>
    1639:	00 00                	add    BYTE PTR [rax],al
    163b:	00 00                	add    BYTE PTR [rax],al
    163d:	00 00                	add    BYTE PTR [rax],al
    163f:	00 40 1f             	add    BYTE PTR [rax+0x1f],al
    1642:	01 00                	add    DWORD PTR [rax],eax
    1644:	00 00                	add    BYTE PTR [rax],al
    1646:	00 00                	add    BYTE PTR [rax],al
    1648:	07                   	(bad)  
    1649:	00 00                	add    BYTE PTR [rax],al
    164b:	00 36                	add    BYTE PTR [rsi],dh
	...
    1655:	00 00                	add    BYTE PTR [rax],al
    1657:	00 48 1f             	add    BYTE PTR [rax+0x1f],cl
    165a:	01 00                	add    DWORD PTR [rax],eax
    165c:	00 00                	add    BYTE PTR [rax],al
    165e:	00 00                	add    BYTE PTR [rax],al
    1660:	07                   	(bad)  
    1661:	00 00                	add    BYTE PTR [rax],al
    1663:	00 37                	add    BYTE PTR [rdi],dh
	...
    166d:	00 00                	add    BYTE PTR [rax],al
    166f:	00 50 1f             	add    BYTE PTR [rax+0x1f],dl
    1672:	01 00                	add    DWORD PTR [rax],eax
    1674:	00 00                	add    BYTE PTR [rax],al
    1676:	00 00                	add    BYTE PTR [rax],al
    1678:	07                   	(bad)  
    1679:	00 00                	add    BYTE PTR [rax],al
    167b:	00 38                	add    BYTE PTR [rax],bh
	...
    1685:	00 00                	add    BYTE PTR [rax],al
    1687:	00 58 1f             	add    BYTE PTR [rax+0x1f],bl
    168a:	01 00                	add    DWORD PTR [rax],eax
    168c:	00 00                	add    BYTE PTR [rax],al
    168e:	00 00                	add    BYTE PTR [rax],al
    1690:	07                   	(bad)  
    1691:	00 00                	add    BYTE PTR [rax],al
    1693:	00 39                	add    BYTE PTR [rcx],bh
	...
    169d:	00 00                	add    BYTE PTR [rax],al
    169f:	00 60 1f             	add    BYTE PTR [rax+0x1f],ah
    16a2:	01 00                	add    DWORD PTR [rax],eax
    16a4:	00 00                	add    BYTE PTR [rax],al
    16a6:	00 00                	add    BYTE PTR [rax],al
    16a8:	07                   	(bad)  
    16a9:	00 00                	add    BYTE PTR [rax],al
    16ab:	00 3a                	add    BYTE PTR [rdx],bh
	...
    16b5:	00 00                	add    BYTE PTR [rax],al
    16b7:	00 68 1f             	add    BYTE PTR [rax+0x1f],ch
    16ba:	01 00                	add    DWORD PTR [rax],eax
    16bc:	00 00                	add    BYTE PTR [rax],al
    16be:	00 00                	add    BYTE PTR [rax],al
    16c0:	07                   	(bad)  
    16c1:	00 00                	add    BYTE PTR [rax],al
    16c3:	00 3b                	add    BYTE PTR [rbx],bh
	...
    16cd:	00 00                	add    BYTE PTR [rax],al
    16cf:	00 70 1f             	add    BYTE PTR [rax+0x1f],dh
    16d2:	01 00                	add    DWORD PTR [rax],eax
    16d4:	00 00                	add    BYTE PTR [rax],al
    16d6:	00 00                	add    BYTE PTR [rax],al
    16d8:	07                   	(bad)  
    16d9:	00 00                	add    BYTE PTR [rax],al
    16db:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    16e6:	00 00                	add    BYTE PTR [rax],al
    16e8:	78 1f                	js     1709 <message_buffer+0x1289>
    16ea:	01 00                	add    DWORD PTR [rax],eax
    16ec:	00 00                	add    BYTE PTR [rax],al
    16ee:	00 00                	add    BYTE PTR [rax],al
    16f0:	07                   	(bad)  
    16f1:	00 00                	add    BYTE PTR [rax],al
    16f3:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 16f9 <message_buffer+0x1279>
    16f9:	00 00                	add    BYTE PTR [rax],al
    16fb:	00 00                	add    BYTE PTR [rax],al
    16fd:	00 00                	add    BYTE PTR [rax],al
    16ff:	00 80 1f 01 00 00    	add    BYTE PTR [rax+0x11f],al
    1705:	00 00                	add    BYTE PTR [rax],al
    1707:	00 07                	add    BYTE PTR [rdi],al
    1709:	00 00                	add    BYTE PTR [rax],al
    170b:	00 3e                	add    BYTE PTR [rsi],bh
	...
    1715:	00 00                	add    BYTE PTR [rax],al
    1717:	00 88 1f 01 00 00    	add    BYTE PTR [rax+0x11f],cl
    171d:	00 00                	add    BYTE PTR [rax],al
    171f:	00 07                	add    BYTE PTR [rdi],al
    1721:	00 00                	add    BYTE PTR [rax],al
    1723:	00 3f                	add    BYTE PTR [rdi],bh
	...
    172d:	00 00                	add    BYTE PTR [rax],al
    172f:	00 90 1f 01 00 00    	add    BYTE PTR [rax+0x11f],dl
    1735:	00 00                	add    BYTE PTR [rax],al
    1737:	00 07                	add    BYTE PTR [rdi],al
    1739:	00 00                	add    BYTE PTR [rax],al
    173b:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    1746:	00 00                	add    BYTE PTR [rax],al
    1748:	98                   	cwde   
    1749:	1f                   	(bad)  
    174a:	01 00                	add    DWORD PTR [rax],eax
    174c:	00 00                	add    BYTE PTR [rax],al
    174e:	00 00                	add    BYTE PTR [rax],al
    1750:	07                   	(bad)  
    1751:	00 00                	add    BYTE PTR [rax],al
    1753:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    175e:	00 00                	add    BYTE PTR [rax],al
    1760:	a0 1f 01 00 00 00 00 	movabs al,ds:0x70000000000011f
    1767:	00 07 
    1769:	00 00                	add    BYTE PTR [rax],al
    176b:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    1776:	00 00                	add    BYTE PTR [rax],al
    1778:	a8 1f                	test   al,0x1f
    177a:	01 00                	add    DWORD PTR [rax],eax
    177c:	00 00                	add    BYTE PTR [rax],al
    177e:	00 00                	add    BYTE PTR [rax],al
    1780:	07                   	(bad)  
    1781:	00 00                	add    BYTE PTR [rax],al
    1783:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    178e:	00 00                	add    BYTE PTR [rax],al
    1790:	b0 1f                	mov    al,0x1f
    1792:	01 00                	add    DWORD PTR [rax],eax
    1794:	00 00                	add    BYTE PTR [rax],al
    1796:	00 00                	add    BYTE PTR [rax],al
    1798:	07                   	(bad)  
    1799:	00 00                	add    BYTE PTR [rax],al
    179b:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    17a6:	00 00                	add    BYTE PTR [rax],al
    17a8:	b8 1f 01 00 00       	mov    eax,0x11f
    17ad:	00 00                	add    BYTE PTR [rax],al
    17af:	00 07                	add    BYTE PTR [rdi],al
    17b1:	00 00                	add    BYTE PTR [rax],al
    17b3:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
    17be:	00 00                	add    BYTE PTR [rax],al
    17c0:	c0 1f 01             	rcr    BYTE PTR [rdi],0x1
    17c3:	00 00                	add    BYTE PTR [rax],al
    17c5:	00 00                	add    BYTE PTR [rax],al
    17c7:	00 07                	add    BYTE PTR [rdi],al
    17c9:	00 00                	add    BYTE PTR [rax],al
    17cb:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    17d6:	00 00                	add    BYTE PTR [rax],al
    17d8:	c8 1f 01 00          	enter  0x11f,0x0
    17dc:	00 00                	add    BYTE PTR [rax],al
    17de:	00 00                	add    BYTE PTR [rax],al
    17e0:	07                   	(bad)  
    17e1:	00 00                	add    BYTE PTR [rax],al
    17e3:	00 48 00             	add    BYTE PTR [rax+0x0],cl
	...
    17ee:	00 00                	add    BYTE PTR [rax],al
    17f0:	d0 1f                	rcr    BYTE PTR [rdi],1
    17f2:	01 00                	add    DWORD PTR [rax],eax
    17f4:	00 00                	add    BYTE PTR [rax],al
    17f6:	00 00                	add    BYTE PTR [rax],al
    17f8:	07                   	(bad)  
    17f9:	00 00                	add    BYTE PTR [rax],al
    17fb:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 e1 ff 00 00 	mov    rax,QWORD PTR [rip+0xffe1]        # 11ff0 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 6a fd 00 00    	push   QWORD PTR [rip+0xfd6a]        # 11d90 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 6b fd 00 00 	bnd jmp QWORD PTR [rip+0xfd6b]        # 11d98 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    245f:	90                   	nop
    2460:	f3 0f 1e fa          	endbr64 
    2464:	68 43 00 00 00       	push   0x43
    2469:	f2 e9 b1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    246f:	90                   	nop
    2470:	f3 0f 1e fa          	endbr64 
    2474:	68 44 00 00 00       	push   0x44
    2479:	f2 e9 a1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    247f:	90                   	nop
    2480:	f3 0f 1e fa          	endbr64 
    2484:	68 45 00 00 00       	push   0x45
    2489:	f2 e9 91 fb ff ff    	bnd jmp 2020 <_init+0x20>
    248f:	90                   	nop
    2490:	f3 0f 1e fa          	endbr64 
    2494:	68 46 00 00 00       	push   0x46
    2499:	f2 e9 81 fb ff ff    	bnd jmp 2020 <_init+0x20>
    249f:	90                   	nop

Disassembly of section .plt.got:

00000000000024a0 <__cxa_finalize@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 2d fb 00 00 	bnd jmp QWORD PTR [rip+0xfb2d]        # 11fd8 <__cxa_finalize@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000024b0 <pcap_loop@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 e5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8e5]        # 11da0 <pcap_loop>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <printf@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 dd f8 00 00 	bnd jmp QWORD PTR [rip+0xf8dd]        # 11da8 <printf@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <htons@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 d5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8d5]        # 11db0 <htons@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <strcspn@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 cd f8 00 00 	bnd jmp QWORD PTR [rip+0xf8cd]        # 11db8 <strcspn@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <bind@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 c5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8c5]        # 11dc0 <bind@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <sprintf@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 bd f8 00 00 	bnd jmp QWORD PTR [rip+0xf8bd]        # 11dc8 <sprintf@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <strstr@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 b5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8b5]        # 11dd0 <strstr@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <SHA512_Update@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 ad f8 00 00 	bnd jmp QWORD PTR [rip+0xf8ad]        # 11dd8 <SHA512_Update@OPENSSL_1_1_0>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <getopt@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 a5 f8 00 00 	bnd jmp QWORD PTR [rip+0xf8a5]        # 11de0 <getopt@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <socket@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 9d f8 00 00 	bnd jmp QWORD PTR [rip+0xf89d]        # 11de8 <socket@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <accept@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 95 f8 00 00 	bnd jmp QWORD PTR [rip+0xf895]        # 11df0 <accept@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <luaL_loadfilex@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 8d f8 00 00 	bnd jmp QWORD PTR [rip+0xf88d]        # 11df8 <luaL_loadfilex@LUA_5.3>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <strchr@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 85 f8 00 00 	bnd jmp QWORD PTR [rip+0xf885]        # 11e00 <strchr@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <pcap_open_live@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 7d f8 00 00 	bnd jmp QWORD PTR [rip+0xf87d]        # 11e08 <pcap_open_live>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <SHA512_Final@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 75 f8 00 00 	bnd jmp QWORD PTR [rip+0xf875]        # 11e10 <SHA512_Final@OPENSSL_1_1_0>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <strlen@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 6d f8 00 00 	bnd jmp QWORD PTR [rip+0xf86d]        # 11e18 <strlen@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <inet_ntoa@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 65 f8 00 00 	bnd jmp QWORD PTR [rip+0xf865]        # 11e20 <inet_ntoa@GLIBC_2.2.5>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <strncmp@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 5d f8 00 00 	bnd jmp QWORD PTR [rip+0xf85d]        # 11e28 <strncmp@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <send@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 55 f8 00 00 	bnd jmp QWORD PTR [rip+0xf855]        # 11e30 <send@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <sqlite3_close@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 4d f8 00 00 	bnd jmp QWORD PTR [rip+0xf84d]        # 11e38 <sqlite3_close>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <strncpy@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 45 f8 00 00 	bnd jmp QWORD PTR [rip+0xf845]        # 11e40 <strncpy@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <lua_close@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 3d f8 00 00 	bnd jmp QWORD PTR [rip+0xf83d]        # 11e48 <lua_close@LUA_5.3>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <memset@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 35 f8 00 00 	bnd jmp QWORD PTR [rip+0xf835]        # 11e50 <memset@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <strncat@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 2d f8 00 00 	bnd jmp QWORD PTR [rip+0xf82d]        # 11e58 <strncat@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <localtime@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 25 f8 00 00 	bnd jmp QWORD PTR [rip+0xf825]        # 11e60 <localtime@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <sleep@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 1d f8 00 00 	bnd jmp QWORD PTR [rip+0xf81d]        # 11e68 <sleep@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <htonl@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 15 f8 00 00 	bnd jmp QWORD PTR [rip+0xf815]        # 11e70 <htonl@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <luaL_openlibs@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 0d f8 00 00 	bnd jmp QWORD PTR [rip+0xf80d]        # 11e78 <luaL_openlibs@LUA_5.3>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <perror@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 05 f8 00 00 	bnd jmp QWORD PTR [rip+0xf805]        # 11e80 <perror@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <pthread_join@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 fd f7 00 00 	bnd jmp QWORD PTR [rip+0xf7fd]        # 11e88 <pthread_join@GLIBC_2.34>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <time@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 f5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7f5]        # 11e90 <time@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <strcpy@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 ed f7 00 00 	bnd jmp QWORD PTR [rip+0xf7ed]        # 11e98 <strcpy@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <sqlite3_errmsg@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 e5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7e5]        # 11ea0 <sqlite3_errmsg>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <fclose@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 dd f7 00 00 	bnd jmp QWORD PTR [rip+0xf7dd]        # 11ea8 <fclose@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <__stack_chk_fail@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 d5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7d5]        # 11eb0 <__stack_chk_fail@GLIBC_2.4>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <fputs@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 cd f7 00 00 	bnd jmp QWORD PTR [rip+0xf7cd]        # 11eb8 <fputs@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <listen@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 c5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7c5]        # 11ec0 <listen@GLIBC_2.2.5>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <regcomp@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 bd f7 00 00 	bnd jmp QWORD PTR [rip+0xf7bd]        # 11ec8 <regcomp@GLIBC_2.2.5>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <fopen@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 b5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7b5]        # 11ed0 <fopen@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <signal@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 ad f7 00 00 	bnd jmp QWORD PTR [rip+0xf7ad]        # 11ed8 <signal@GLIBC_2.2.5>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <free@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 a5 f7 00 00 	bnd jmp QWORD PTR [rip+0xf7a5]        # 11ee0 <free@GLIBC_2.2.5>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <exit@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 9d f7 00 00 	bnd jmp QWORD PTR [rip+0xf79d]        # 11ee8 <exit@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <regexec@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 95 f7 00 00 	bnd jmp QWORD PTR [rip+0xf795]        # 11ef0 <regexec@GLIBC_2.3.4>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <sqlite3_free@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 8d f7 00 00 	bnd jmp QWORD PTR [rip+0xf78d]        # 11ef8 <sqlite3_free>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <getline@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 85 f7 00 00 	bnd jmp QWORD PTR [rip+0xf785]        # 11f00 <getline@GLIBC_2.2.5>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <ntohl@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 7d f7 00 00 	bnd jmp QWORD PTR [rip+0xf77d]        # 11f08 <ntohl@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <malloc@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 75 f7 00 00 	bnd jmp QWORD PTR [rip+0xf775]        # 11f10 <malloc@GLIBC_2.2.5>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <sqlite3_exec@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 6d f7 00 00 	bnd jmp QWORD PTR [rip+0xf76d]        # 11f18 <sqlite3_exec>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <luaL_newstate@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 65 f7 00 00 	bnd jmp QWORD PTR [rip+0xf765]        # 11f20 <luaL_newstate@LUA_5.3>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <lua_gettop@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 5d f7 00 00 	bnd jmp QWORD PTR [rip+0xf75d]        # 11f28 <lua_gettop@LUA_5.3>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <putchar@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 55 f7 00 00 	bnd jmp QWORD PTR [rip+0xf755]        # 11f30 <putchar@GLIBC_2.2.5>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <strcmp@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 4d f7 00 00 	bnd jmp QWORD PTR [rip+0xf74d]        # 11f38 <strcmp@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <strtol@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 45 f7 00 00 	bnd jmp QWORD PTR [rip+0xf745]        # 11f40 <strtol@GLIBC_2.2.5>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <lua_settop@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 3d f7 00 00 	bnd jmp QWORD PTR [rip+0xf73d]        # 11f48 <lua_settop@LUA_5.3>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <fprintf@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 35 f7 00 00 	bnd jmp QWORD PTR [rip+0xf735]        # 11f50 <fprintf@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <read@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 2d f7 00 00 	bnd jmp QWORD PTR [rip+0xf72d]        # 11f58 <read@GLIBC_2.2.5>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <backtrace@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 25 f7 00 00 	bnd jmp QWORD PTR [rip+0xf725]        # 11f60 <backtrace@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <backtrace_symbols@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 1d f7 00 00 	bnd jmp QWORD PTR [rip+0xf71d]        # 11f68 <backtrace_symbols@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <SHA512_Init@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 15 f7 00 00 	bnd jmp QWORD PTR [rip+0xf715]        # 11f70 <SHA512_Init@OPENSSL_1_1_0>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <puts@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 0d f7 00 00 	bnd jmp QWORD PTR [rip+0xf70d]        # 11f78 <puts@GLIBC_2.2.5>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <atoi@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 05 f7 00 00 	bnd jmp QWORD PTR [rip+0xf705]        # 11f80 <atoi@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <strtok@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 fd f6 00 00 	bnd jmp QWORD PTR [rip+0xf6fd]        # 11f88 <strtok@GLIBC_2.2.5>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <snprintf@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 f5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6f5]        # 11f90 <snprintf@GLIBC_2.2.5>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028a0 <getdelim@plt>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	f2 ff 25 ed f6 00 00 	bnd jmp QWORD PTR [rip+0xf6ed]        # 11f98 <getdelim@GLIBC_2.2.5>
    28ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028b0 <lua_pcallk@plt>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	f2 ff 25 e5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6e5]        # 11fa0 <lua_pcallk@LUA_5.3>
    28bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028c0 <sqlite3_open@plt>:
    28c0:	f3 0f 1e fa          	endbr64 
    28c4:	f2 ff 25 dd f6 00 00 	bnd jmp QWORD PTR [rip+0xf6dd]        # 11fa8 <sqlite3_open>
    28cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028d0 <strcat@plt>:
    28d0:	f3 0f 1e fa          	endbr64 
    28d4:	f2 ff 25 d5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6d5]        # 11fb0 <strcat@GLIBC_2.2.5>
    28db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028e0 <setsockopt@plt>:
    28e0:	f3 0f 1e fa          	endbr64 
    28e4:	f2 ff 25 cd f6 00 00 	bnd jmp QWORD PTR [rip+0xf6cd]        # 11fb8 <setsockopt@GLIBC_2.2.5>
    28eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028f0 <pthread_create@plt>:
    28f0:	f3 0f 1e fa          	endbr64 
    28f4:	f2 ff 25 c5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6c5]        # 11fc0 <pthread_create@GLIBC_2.34>
    28fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002900 <ntohs@plt>:
    2900:	f3 0f 1e fa          	endbr64 
    2904:	f2 ff 25 bd f6 00 00 	bnd jmp QWORD PTR [rip+0xf6bd]        # 11fc8 <ntohs@GLIBC_2.2.5>
    290b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002910 <close@plt>:
    2910:	f3 0f 1e fa          	endbr64 
    2914:	f2 ff 25 b5 f6 00 00 	bnd jmp QWORD PTR [rip+0xf6b5]        # 11fd0 <close@GLIBC_2.2.5>
    291b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002920 <_start>:
    2920:	f3 0f 1e fa          	endbr64 
    2924:	31 ed                	xor    ebp,ebp
    2926:	49 89 d1             	mov    r9,rdx
    2929:	5e                   	pop    rsi
    292a:	48 89 e2             	mov    rdx,rsp
    292d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2931:	50                   	push   rax
    2932:	54                   	push   rsp
    2933:	45 31 c0             	xor    r8d,r8d
    2936:	31 c9                	xor    ecx,ecx
    2938:	48 8d 3d 79 3f 00 00 	lea    rdi,[rip+0x3f79]        # 68b8 <main>
    293f:	ff 15 9b f6 00 00    	call   QWORD PTR [rip+0xf69b]        # 11fe0 <__libc_start_main@GLIBC_2.34>
    2945:	f4                   	hlt    
    2946:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    294d:	00 00 00 

0000000000002950 <deregister_tm_clones>:
    2950:	48 8d 3d 01 f7 00 00 	lea    rdi,[rip+0xf701]        # 12058 <__TMC_END__>
    2957:	48 8d 05 fa f6 00 00 	lea    rax,[rip+0xf6fa]        # 12058 <__TMC_END__>
    295e:	48 39 f8             	cmp    rax,rdi
    2961:	74 15                	je     2978 <deregister_tm_clones+0x28>
    2963:	48 8b 05 7e f6 00 00 	mov    rax,QWORD PTR [rip+0xf67e]        # 11fe8 <_ITM_deregisterTMCloneTable>
    296a:	48 85 c0             	test   rax,rax
    296d:	74 09                	je     2978 <deregister_tm_clones+0x28>
    296f:	ff e0                	jmp    rax
    2971:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2978:	c3                   	ret    
    2979:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002980 <register_tm_clones>:
    2980:	48 8d 3d d1 f6 00 00 	lea    rdi,[rip+0xf6d1]        # 12058 <__TMC_END__>
    2987:	48 8d 35 ca f6 00 00 	lea    rsi,[rip+0xf6ca]        # 12058 <__TMC_END__>
    298e:	48 29 fe             	sub    rsi,rdi
    2991:	48 89 f0             	mov    rax,rsi
    2994:	48 c1 ee 3f          	shr    rsi,0x3f
    2998:	48 c1 f8 03          	sar    rax,0x3
    299c:	48 01 c6             	add    rsi,rax
    299f:	48 d1 fe             	sar    rsi,1
    29a2:	74 14                	je     29b8 <register_tm_clones+0x38>
    29a4:	48 8b 05 4d f6 00 00 	mov    rax,QWORD PTR [rip+0xf64d]        # 11ff8 <_ITM_registerTMCloneTable>
    29ab:	48 85 c0             	test   rax,rax
    29ae:	74 08                	je     29b8 <register_tm_clones+0x38>
    29b0:	ff e0                	jmp    rax
    29b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    29b8:	c3                   	ret    
    29b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029c0 <__do_global_dtors_aux>:
    29c0:	f3 0f 1e fa          	endbr64 
    29c4:	80 3d 9d f6 00 00 00 	cmp    BYTE PTR [rip+0xf69d],0x0        # 12068 <completed.0>
    29cb:	75 2b                	jne    29f8 <__do_global_dtors_aux+0x38>
    29cd:	55                   	push   rbp
    29ce:	48 83 3d 02 f6 00 00 	cmp    QWORD PTR [rip+0xf602],0x0        # 11fd8 <__cxa_finalize@GLIBC_2.2.5>
    29d5:	00 
    29d6:	48 89 e5             	mov    rbp,rsp
    29d9:	74 0c                	je     29e7 <__do_global_dtors_aux+0x27>
    29db:	48 8b 3d 26 f6 00 00 	mov    rdi,QWORD PTR [rip+0xf626]        # 12008 <__dso_handle>
    29e2:	e8 b9 fa ff ff       	call   24a0 <__cxa_finalize@plt>
    29e7:	e8 64 ff ff ff       	call   2950 <deregister_tm_clones>
    29ec:	c6 05 75 f6 00 00 01 	mov    BYTE PTR [rip+0xf675],0x1        # 12068 <completed.0>
    29f3:	5d                   	pop    rbp
    29f4:	c3                   	ret    
    29f5:	0f 1f 00             	nop    DWORD PTR [rax]
    29f8:	c3                   	ret    
    29f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002a00 <frame_dummy>:
    2a00:	f3 0f 1e fa          	endbr64 
    2a04:	e9 77 ff ff ff       	jmp    2980 <register_tm_clones>

0000000000002a09 <add_thread>:
    2a09:	f3 0f 1e fa          	endbr64 
    2a0d:	55                   	push   rbp
    2a0e:	48 89 e5             	mov    rbp,rsp
    2a11:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2a15:	8b 05 85 f8 00 00    	mov    eax,DWORD PTR [rip+0xf885]        # 122a0 <thread_count>
    2a1b:	8d 50 01             	lea    edx,[rax+0x1]
    2a1e:	89 15 7c f8 00 00    	mov    DWORD PTR [rip+0xf87c],edx        # 122a0 <thread_count>
    2a24:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    2a28:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    2a2b:	48 98                	cdqe   
    2a2d:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2a34:	00 
    2a35:	48 8d 05 64 f6 00 00 	lea    rax,[rip+0xf664]        # 120a0 <threads>
    2a3c:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    2a40:	90                   	nop
    2a41:	5d                   	pop    rbp
    2a42:	c3                   	ret    

0000000000002a43 <pktmgr>:
    2a43:	f3 0f 1e fa          	endbr64 
    2a47:	55                   	push   rbp
    2a48:	48 89 e5             	mov    rbp,rsp
    2a4b:	53                   	push   rbx
    2a4c:	48 83 ec 38          	sub    rsp,0x38
    2a50:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    2a54:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    2a58:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    2a5c:	0f b6 05 01 85 10 00 	movzx  eax,BYTE PTR [rip+0x108501]        # 10af64 <packet_print>
    2a63:	84 c0                	test   al,al
    2a65:	74 0c                	je     2a73 <pktmgr+0x30>
    2a67:	48 8d 3d e2 a5 00 00 	lea    rdi,[rip+0xa5e2]        # d050 <_IO_stdin_used+0x50>
    2a6e:	e8 ed fd ff ff       	call   2860 <puts@plt>
    2a73:	8b 05 2b f8 00 00    	mov    eax,DWORD PTR [rip+0xf82b]        # 122a4 <total_pkt_captured>
    2a79:	83 c0 01             	add    eax,0x1
    2a7c:	89 05 22 f8 00 00    	mov    DWORD PTR [rip+0xf822],eax        # 122a4 <total_pkt_captured>
    2a82:	8b 05 38 f8 00 00    	mov    eax,DWORD PTR [rip+0xf838]        # 122c0 <pkt_counter>
    2a88:	83 c0 01             	add    eax,0x1
    2a8b:	89 05 2f f8 00 00    	mov    DWORD PTR [rip+0xf82f],eax        # 122c0 <pkt_counter>
    2a91:	8b 15 29 f8 00 00    	mov    edx,DWORD PTR [rip+0xf829]        # 122c0 <pkt_counter>
    2a97:	8b 05 c3 84 10 00    	mov    eax,DWORD PTR [rip+0x1084c3]        # 10af60 <clean_delay_pkts>
    2a9d:	39 c2                	cmp    edx,eax
    2a9f:	72 0a                	jb     2aab <pktmgr+0x68>
    2aa1:	c7 05 15 f8 00 00 00 	mov    DWORD PTR [rip+0xf815],0x0        # 122c0 <pkt_counter>
    2aa8:	00 00 00 
    2aab:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2aaf:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2ab3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ab7:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2abb:	0f b7 c0             	movzx  eax,ax
    2abe:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2ac3:	74 46                	je     2b0b <pktmgr+0xc8>
    2ac5:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2aca:	7f 77                	jg     2b43 <pktmgr+0x100>
    2acc:	3d 80 35 00 00       	cmp    eax,0x3580
    2ad1:	74 23                	je     2af6 <pktmgr+0xb3>
    2ad3:	3d 80 35 00 00       	cmp    eax,0x3580
    2ad8:	7f 69                	jg     2b43 <pktmgr+0x100>
    2ada:	3d 08 06 00 00       	cmp    eax,0x608
    2adf:	74 15                	je     2af6 <pktmgr+0xb3>
    2ae1:	3d 08 06 00 00       	cmp    eax,0x608
    2ae6:	7f 5b                	jg     2b43 <pktmgr+0x100>
    2ae8:	83 f8 08             	cmp    eax,0x8
    2aeb:	74 33                	je     2b20 <pktmgr+0xdd>
    2aed:	3d 90 00 00 00       	cmp    eax,0x90
    2af2:	74 41                	je     2b35 <pktmgr+0xf2>
    2af4:	eb 4d                	jmp    2b43 <pktmgr+0x100>
    2af6:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2afa:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2afe:	48 89 d6             	mov    rsi,rdx
    2b01:	48 89 c7             	mov    rdi,rax
    2b04:	e8 86 00 00 00       	call   2b8f <arpdecode>
    2b09:	eb 7d                	jmp    2b88 <pktmgr+0x145>
    2b0b:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b0f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b13:	48 89 d6             	mov    rsi,rdx
    2b16:	48 89 c7             	mov    rdi,rax
    2b19:	e8 60 9d 00 00       	call   c87e <ip6decode>
    2b1e:	eb 68                	jmp    2b88 <pktmgr+0x145>
    2b20:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b24:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b28:	48 89 d6             	mov    rsi,rdx
    2b2b:	48 89 c7             	mov    rdi,rax
    2b2e:	e8 56 0b 00 00       	call   3689 <ipv4pktmgr>
    2b33:	eb 53                	jmp    2b88 <pktmgr+0x145>
    2b35:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b39:	48 89 c7             	mov    rdi,rax
    2b3c:	e8 42 03 00 00       	call   2e83 <loopback_ctp_decode>
    2b41:	eb 45                	jmp    2b88 <pktmgr+0x145>
    2b43:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b47:	48 89 c7             	mov    rdi,rax
    2b4a:	e8 f5 04 00 00       	call   3044 <uc_mac_ntoa>
    2b4f:	48 89 c3             	mov    rbx,rax
    2b52:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b56:	48 83 c0 06          	add    rax,0x6
    2b5a:	48 89 c7             	mov    rdi,rax
    2b5d:	e8 e2 04 00 00       	call   3044 <uc_mac_ntoa>
    2b62:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2b68:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2b6e:	48 89 d9             	mov    rcx,rbx
    2b71:	48 89 c2             	mov    rdx,rax
    2b74:	48 8d 35 1d a5 00 00 	lea    rsi,[rip+0xa51d]        # d098 <_IO_stdin_used+0x98>
    2b7b:	48 8d 3d 48 a5 00 00 	lea    rdi,[rip+0xa548]        # d0ca <_IO_stdin_used+0xca>
    2b82:	e8 a7 7d 00 00       	call   a92e <lfprintf>
    2b87:	90                   	nop
    2b88:	90                   	nop
    2b89:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2b8d:	c9                   	leave  
    2b8e:	c3                   	ret    

0000000000002b8f <arpdecode>:
    2b8f:	f3 0f 1e fa          	endbr64 
    2b93:	55                   	push   rbp
    2b94:	48 89 e5             	mov    rbp,rsp
    2b97:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2b9e:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2ba5:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2bac:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2bb3:	00 00 
    2bb5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2bb9:	31 c0                	xor    eax,eax
    2bbb:	0f b6 05 a2 83 10 00 	movzx  eax,BYTE PTR [rip+0x1083a2]        # 10af64 <packet_print>
    2bc2:	84 c0                	test   al,al
    2bc4:	74 18                	je     2bde <arpdecode+0x4f>
    2bc6:	48 8d 35 1b a5 00 00 	lea    rsi,[rip+0xa51b]        # d0e8 <_IO_stdin_used+0xe8>
    2bcd:	48 8d 3d 1c a5 00 00 	lea    rdi,[rip+0xa51c]        # d0f0 <_IO_stdin_used+0xf0>
    2bd4:	b8 00 00 00 00       	mov    eax,0x0
    2bd9:	e8 e2 f8 ff ff       	call   24c0 <printf@plt>
    2bde:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2be5:	48 83 c0 0e          	add    rax,0xe
    2be9:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2bf0:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2bf7:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2bfb:	0f b7 c0             	movzx  eax,ax
    2bfe:	3d 00 18 00 00       	cmp    eax,0x1800
    2c03:	74 35                	je     2c3a <arpdecode+0xab>
    2c05:	3d 00 18 00 00       	cmp    eax,0x1800
    2c0a:	0f 8f 1d 02 00 00    	jg     2e2d <arpdecode+0x29e>
    2c10:	3d 00 02 00 00       	cmp    eax,0x200
    2c15:	0f 84 eb 00 00 00    	je     2d06 <arpdecode+0x177>
    2c1b:	3d 00 02 00 00       	cmp    eax,0x200
    2c20:	0f 8f 07 02 00 00    	jg     2e2d <arpdecode+0x29e>
    2c26:	83 f8 02             	cmp    eax,0x2
    2c29:	0f 84 d7 00 00 00    	je     2d06 <arpdecode+0x177>
    2c2f:	3d 00 01 00 00       	cmp    eax,0x100
    2c34:	0f 85 f3 01 00 00    	jne    2e2d <arpdecode+0x29e>
    2c3a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c41:	48 83 c0 18          	add    rax,0x18
    2c45:	48 89 c7             	mov    rdi,rax
    2c48:	e8 9d 04 00 00       	call   30ea <u8_ipv4_ntoa>
    2c4d:	48 89 c1             	mov    rcx,rax
    2c50:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c54:	ba 20 00 00 00       	mov    edx,0x20
    2c59:	48 89 ce             	mov    rsi,rcx
    2c5c:	48 89 c7             	mov    rdi,rax
    2c5f:	e8 8c f9 ff ff       	call   25f0 <strncpy@plt>
    2c64:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c6b:	48 83 c0 0e          	add    rax,0xe
    2c6f:	48 89 c7             	mov    rdi,rax
    2c72:	e8 73 04 00 00       	call   30ea <u8_ipv4_ntoa>
    2c77:	48 89 c1             	mov    rcx,rax
    2c7a:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c7e:	ba 20 00 00 00       	mov    edx,0x20
    2c83:	48 89 ce             	mov    rsi,rcx
    2c86:	48 89 c7             	mov    rdi,rax
    2c89:	e8 62 f9 ff ff       	call   25f0 <strncpy@plt>
    2c8e:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c92:	ba 05 00 00 00       	mov    edx,0x5
    2c97:	48 8d 35 55 a4 00 00 	lea    rsi,[rip+0xa455]        # d0f3 <_IO_stdin_used+0xf3>
    2c9e:	48 89 c7             	mov    rdi,rax
    2ca1:	e8 1a f9 ff ff       	call   25c0 <strncmp@plt>
    2ca6:	85 c0                	test   eax,eax
    2ca8:	75 2c                	jne    2cd6 <arpdecode+0x147>
    2caa:	0f b6 05 b3 82 10 00 	movzx  eax,BYTE PTR [rip+0x1082b3]        # 10af64 <packet_print>
    2cb1:	84 c0                	test   al,al
    2cb3:	0f 84 97 01 00 00    	je     2e50 <arpdecode+0x2c1>
    2cb9:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cbd:	48 89 c6             	mov    rsi,rax
    2cc0:	48 8d 3d 39 a4 00 00 	lea    rdi,[rip+0xa439]        # d100 <_IO_stdin_used+0x100>
    2cc7:	b8 00 00 00 00       	mov    eax,0x0
    2ccc:	e8 ef f7 ff ff       	call   24c0 <printf@plt>
    2cd1:	e9 7a 01 00 00       	jmp    2e50 <arpdecode+0x2c1>
    2cd6:	0f b6 05 87 82 10 00 	movzx  eax,BYTE PTR [rip+0x108287]        # 10af64 <packet_print>
    2cdd:	84 c0                	test   al,al
    2cdf:	0f 84 6b 01 00 00    	je     2e50 <arpdecode+0x2c1>
    2ce5:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2ce9:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2ced:	48 89 c6             	mov    rsi,rax
    2cf0:	48 8d 3d 29 a4 00 00 	lea    rdi,[rip+0xa429]        # d120 <_IO_stdin_used+0x120>
    2cf7:	b8 00 00 00 00       	mov    eax,0x0
    2cfc:	e8 bf f7 ff ff       	call   24c0 <printf@plt>
    2d01:	e9 4a 01 00 00       	jmp    2e50 <arpdecode+0x2c1>
    2d06:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d0d:	48 83 c0 08          	add    rax,0x8
    2d11:	48 89 c7             	mov    rdi,rax
    2d14:	e8 7d 02 00 00       	call   2f96 <mac_ntoa>
    2d19:	48 89 c1             	mov    rcx,rax
    2d1c:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d20:	ba 40 00 00 00       	mov    edx,0x40
    2d25:	48 89 ce             	mov    rsi,rcx
    2d28:	48 89 c7             	mov    rdi,rax
    2d2b:	e8 c0 f8 ff ff       	call   25f0 <strncpy@plt>
    2d30:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d37:	48 83 c0 0e          	add    rax,0xe
    2d3b:	48 89 c7             	mov    rdi,rax
    2d3e:	e8 a7 03 00 00       	call   30ea <u8_ipv4_ntoa>
    2d43:	48 89 c1             	mov    rcx,rax
    2d46:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d4a:	ba 20 00 00 00       	mov    edx,0x20
    2d4f:	48 89 ce             	mov    rsi,rcx
    2d52:	48 89 c7             	mov    rdi,rax
    2d55:	e8 96 f8 ff ff       	call   25f0 <strncpy@plt>
    2d5a:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d5e:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d62:	48 89 d6             	mov    rsi,rdx
    2d65:	48 89 c7             	mov    rdi,rax
    2d68:	e8 d6 68 00 00       	call   9643 <entry_exists>
    2d6d:	83 f8 ff             	cmp    eax,0xffffffff
    2d70:	74 15                	je     2d87 <arpdecode+0x1f8>
    2d72:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d76:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d7a:	48 89 d6             	mov    rsi,rdx
    2d7d:	48 89 c7             	mov    rdi,rax
    2d80:	e8 6b 67 00 00       	call   94f0 <compare_entries>
    2d85:	eb 7d                	jmp    2e04 <arpdecode+0x275>
    2d87:	0f b6 05 93 81 10 00 	movzx  eax,BYTE PTR [rip+0x108193]        # 10af21 <use_sqlite>
    2d8e:	84 c0                	test   al,al
    2d90:	74 5f                	je     2df1 <arpdecode+0x262>
    2d92:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2d99:	00 00 00 
    2d9c:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2da0:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2da7:	48 89 d6             	mov    rsi,rdx
    2daa:	48 89 c7             	mov    rdi,rax
    2dad:	e8 ee f8 ff ff       	call   26a0 <strcpy@plt>
    2db2:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2db6:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2dbd:	48 83 c2 10          	add    rdx,0x10
    2dc1:	48 89 c6             	mov    rsi,rax
    2dc4:	48 89 d7             	mov    rdi,rdx
    2dc7:	e8 d4 f8 ff ff       	call   26a0 <strcpy@plt>
    2dcc:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2dd3:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2dda:	48 89 d1             	mov    rcx,rdx
    2ddd:	48 8d 15 be 6a 00 00 	lea    rdx,[rip+0x6abe]        # 98a2 <update_db>
    2de4:	be 00 00 00 00       	mov    esi,0x0
    2de9:	48 89 c7             	mov    rdi,rax
    2dec:	e8 ff fa ff ff       	call   28f0 <pthread_create@plt>
    2df1:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2df5:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2df9:	48 89 d6             	mov    rsi,rdx
    2dfc:	48 89 c7             	mov    rdi,rax
    2dff:	e8 cb 67 00 00       	call   95cf <add_entry>
    2e04:	0f b6 05 59 81 10 00 	movzx  eax,BYTE PTR [rip+0x108159]        # 10af64 <packet_print>
    2e0b:	84 c0                	test   al,al
    2e0d:	74 44                	je     2e53 <arpdecode+0x2c4>
    2e0f:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2e13:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2e17:	48 89 c6             	mov    rsi,rax
    2e1a:	48 8d 3d 27 a3 00 00 	lea    rdi,[rip+0xa327]        # d148 <_IO_stdin_used+0x148>
    2e21:	b8 00 00 00 00       	mov    eax,0x0
    2e26:	e8 95 f6 ff ff       	call   24c0 <printf@plt>
    2e2b:	eb 26                	jmp    2e53 <arpdecode+0x2c4>
    2e2d:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2e34:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2e38:	0f b7 c0             	movzx  eax,ax
    2e3b:	89 c6                	mov    esi,eax
    2e3d:	48 8d 3d 23 a3 00 00 	lea    rdi,[rip+0xa323]        # d167 <_IO_stdin_used+0x167>
    2e44:	b8 00 00 00 00       	mov    eax,0x0
    2e49:	e8 72 f6 ff ff       	call   24c0 <printf@plt>
    2e4e:	eb 04                	jmp    2e54 <arpdecode+0x2c5>
    2e50:	90                   	nop
    2e51:	eb 01                	jmp    2e54 <arpdecode+0x2c5>
    2e53:	90                   	nop
    2e54:	48 8d 35 24 a3 00 00 	lea    rsi,[rip+0xa324]        # d17f <_IO_stdin_used+0x17f>
    2e5b:	48 8d 3d 8e a2 00 00 	lea    rdi,[rip+0xa28e]        # d0f0 <_IO_stdin_used+0xf0>
    2e62:	b8 00 00 00 00       	mov    eax,0x0
    2e67:	e8 54 f6 ff ff       	call   24c0 <printf@plt>
    2e6c:	90                   	nop
    2e6d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e71:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2e78:	00 00 
    2e7a:	74 05                	je     2e81 <arpdecode+0x2f2>
    2e7c:	e8 4f f8 ff ff       	call   26d0 <__stack_chk_fail@plt>
    2e81:	c9                   	leave  
    2e82:	c3                   	ret    

0000000000002e83 <loopback_ctp_decode>:
    2e83:	f3 0f 1e fa          	endbr64 
    2e87:	55                   	push   rbp
    2e88:	48 89 e5             	mov    rbp,rsp
    2e8b:	48 83 ec 60          	sub    rsp,0x60
    2e8f:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2e93:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2e9a:	00 00 
    2e9c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2ea0:	31 c0                	xor    eax,eax
    2ea2:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2ea6:	48 83 c0 0e          	add    rax,0xe
    2eaa:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2eae:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2eb2:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2eb6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2eba:	48 83 c0 06          	add    rax,0x6
    2ebe:	48 89 c7             	mov    rdi,rax
    2ec1:	e8 7e 01 00 00       	call   3044 <uc_mac_ntoa>
    2ec6:	48 89 c1             	mov    rcx,rax
    2ec9:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2ecd:	ba 18 00 00 00       	mov    edx,0x18
    2ed2:	48 89 ce             	mov    rsi,rcx
    2ed5:	48 89 c7             	mov    rdi,rax
    2ed8:	e8 13 f7 ff ff       	call   25f0 <strncpy@plt>
    2edd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2ee1:	48 89 c7             	mov    rdi,rax
    2ee4:	e8 5b 01 00 00       	call   3044 <uc_mac_ntoa>
    2ee9:	48 89 c1             	mov    rcx,rax
    2eec:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2ef0:	ba 18 00 00 00       	mov    edx,0x18
    2ef5:	48 89 ce             	mov    rsi,rcx
    2ef8:	48 89 c7             	mov    rdi,rax
    2efb:	e8 f0 f6 ff ff       	call   25f0 <strncpy@plt>
    2f00:	0f b6 05 5d 80 10 00 	movzx  eax,BYTE PTR [rip+0x10805d]        # 10af64 <packet_print>
    2f07:	84 c0                	test   al,al
    2f09:	74 1c                	je     2f27 <loopback_ctp_decode+0xa4>
    2f0b:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2f0f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2f13:	48 89 c6             	mov    rsi,rax
    2f16:	48 8d 3d 67 a2 00 00 	lea    rdi,[rip+0xa267]        # d184 <_IO_stdin_used+0x184>
    2f1d:	b8 00 00 00 00       	mov    eax,0x0
    2f22:	e8 99 f5 ff ff       	call   24c0 <printf@plt>
    2f27:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f2b:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f2f:	0f b7 c0             	movzx  eax,ax
    2f32:	83 f8 01             	cmp    eax,0x1
    2f35:	75 19                	jne    2f50 <loopback_ctp_decode+0xcd>
    2f37:	0f b6 05 26 80 10 00 	movzx  eax,BYTE PTR [rip+0x108026]        # 10af64 <packet_print>
    2f3e:	84 c0                	test   al,al
    2f40:	74 39                	je     2f7b <loopback_ctp_decode+0xf8>
    2f42:	48 8d 3d 49 a2 00 00 	lea    rdi,[rip+0xa249]        # d192 <_IO_stdin_used+0x192>
    2f49:	e8 12 f9 ff ff       	call   2860 <puts@plt>
    2f4e:	eb 2b                	jmp    2f7b <loopback_ctp_decode+0xf8>
    2f50:	0f b6 05 0d 80 10 00 	movzx  eax,BYTE PTR [rip+0x10800d]        # 10af64 <packet_print>
    2f57:	84 c0                	test   al,al
    2f59:	74 23                	je     2f7e <loopback_ctp_decode+0xfb>
    2f5b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f5f:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f63:	0f b7 c0             	movzx  eax,ax
    2f66:	89 c6                	mov    esi,eax
    2f68:	48 8d 3d 2b a2 00 00 	lea    rdi,[rip+0xa22b]        # d19a <_IO_stdin_used+0x19a>
    2f6f:	b8 00 00 00 00       	mov    eax,0x0
    2f74:	e8 47 f5 ff ff       	call   24c0 <printf@plt>
    2f79:	eb 03                	jmp    2f7e <loopback_ctp_decode+0xfb>
    2f7b:	90                   	nop
    2f7c:	eb 01                	jmp    2f7f <loopback_ctp_decode+0xfc>
    2f7e:	90                   	nop
    2f7f:	90                   	nop
    2f80:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f84:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2f8b:	00 00 
    2f8d:	74 05                	je     2f94 <loopback_ctp_decode+0x111>
    2f8f:	e8 3c f7 ff ff       	call   26d0 <__stack_chk_fail@plt>
    2f94:	c9                   	leave  
    2f95:	c3                   	ret    

0000000000002f96 <mac_ntoa>:
    2f96:	f3 0f 1e fa          	endbr64 
    2f9a:	55                   	push   rbp
    2f9b:	48 89 e5             	mov    rbp,rsp
    2f9e:	48 83 ec 20          	sub    rsp,0x20
    2fa2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2fa6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2faa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2fae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fb2:	48 83 c0 05          	add    rax,0x5
    2fb6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fb9:	0f b6 f0             	movzx  esi,al
    2fbc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fc0:	48 83 c0 04          	add    rax,0x4
    2fc4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fc7:	0f b6 c8             	movzx  ecx,al
    2fca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fce:	48 83 c0 03          	add    rax,0x3
    2fd2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fd5:	0f b6 d0             	movzx  edx,al
    2fd8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fdc:	48 83 c0 02          	add    rax,0x2
    2fe0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fe3:	44 0f b6 c8          	movzx  r9d,al
    2fe7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2feb:	48 83 c0 01          	add    rax,0x1
    2fef:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ff2:	44 0f b6 c0          	movzx  r8d,al
    2ff6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ffa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ffd:	0f b6 c0             	movzx  eax,al
    3000:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    3007:	00 00 
    3009:	48 81 c7 80 6b fe ff 	add    rdi,0xfffffffffffe6b80
    3010:	48 83 ec 08          	sub    rsp,0x8
    3014:	56                   	push   rsi
    3015:	51                   	push   rcx
    3016:	52                   	push   rdx
    3017:	89 c1                	mov    ecx,eax
    3019:	48 8d 15 98 a1 00 00 	lea    rdx,[rip+0xa198]        # d1b8 <_IO_stdin_used+0x1b8>
    3020:	be 80 00 00 00       	mov    esi,0x80
    3025:	b8 00 00 00 00       	mov    eax,0x0
    302a:	e8 61 f8 ff ff       	call   2890 <snprintf@plt>
    302f:	48 83 c4 20          	add    rsp,0x20
    3033:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    303a:	00 00 
    303c:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    3042:	c9                   	leave  
    3043:	c3                   	ret    

0000000000003044 <uc_mac_ntoa>:
    3044:	f3 0f 1e fa          	endbr64 
    3048:	55                   	push   rbp
    3049:	48 89 e5             	mov    rbp,rsp
    304c:	48 83 ec 10          	sub    rsp,0x10
    3050:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    3054:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3058:	48 83 c0 05          	add    rax,0x5
    305c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    305f:	0f b6 f0             	movzx  esi,al
    3062:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3066:	48 83 c0 04          	add    rax,0x4
    306a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    306d:	0f b6 c8             	movzx  ecx,al
    3070:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3074:	48 83 c0 03          	add    rax,0x3
    3078:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    307b:	0f b6 d0             	movzx  edx,al
    307e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3082:	48 83 c0 02          	add    rax,0x2
    3086:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3089:	44 0f b6 c8          	movzx  r9d,al
    308d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3091:	48 83 c0 01          	add    rax,0x1
    3095:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3098:	44 0f b6 c0          	movzx  r8d,al
    309c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30a0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30a3:	0f b6 c0             	movzx  eax,al
    30a6:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    30ad:	00 00 
    30af:	48 81 c7 80 6b fe ff 	add    rdi,0xfffffffffffe6b80
    30b6:	48 83 ec 08          	sub    rsp,0x8
    30ba:	56                   	push   rsi
    30bb:	51                   	push   rcx
    30bc:	52                   	push   rdx
    30bd:	89 c1                	mov    ecx,eax
    30bf:	48 8d 15 f2 a0 00 00 	lea    rdx,[rip+0xa0f2]        # d1b8 <_IO_stdin_used+0x1b8>
    30c6:	be 80 00 00 00       	mov    esi,0x80
    30cb:	b8 00 00 00 00       	mov    eax,0x0
    30d0:	e8 bb f7 ff ff       	call   2890 <snprintf@plt>
    30d5:	48 83 c4 20          	add    rsp,0x20
    30d9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    30e0:	00 00 
    30e2:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    30e8:	c9                   	leave  
    30e9:	c3                   	ret    

00000000000030ea <u8_ipv4_ntoa>:
    30ea:	f3 0f 1e fa          	endbr64 
    30ee:	55                   	push   rbp
    30ef:	48 89 e5             	mov    rbp,rsp
    30f2:	48 83 ec 20          	sub    rsp,0x20
    30f6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    30fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    30fe:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3102:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3106:	48 83 c0 03          	add    rax,0x3
    310a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    310d:	0f b6 d0             	movzx  edx,al
    3110:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3114:	48 83 c0 02          	add    rax,0x2
    3118:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    311b:	44 0f b6 c0          	movzx  r8d,al
    311f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3123:	48 83 c0 01          	add    rax,0x1
    3127:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    312a:	0f b6 f0             	movzx  esi,al
    312d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3131:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3134:	0f b6 c0             	movzx  eax,al
    3137:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    313e:	00 00 
    3140:	48 8d b9 80 6b fe ff 	lea    rdi,[rcx-0x19480]
    3147:	48 83 ec 08          	sub    rsp,0x8
    314b:	52                   	push   rdx
    314c:	45 89 c1             	mov    r9d,r8d
    314f:	41 89 f0             	mov    r8d,esi
    3152:	89 c1                	mov    ecx,eax
    3154:	48 8d 15 7b a0 00 00 	lea    rdx,[rip+0xa07b]        # d1d6 <_IO_stdin_used+0x1d6>
    315b:	be 80 00 00 00       	mov    esi,0x80
    3160:	b8 00 00 00 00       	mov    eax,0x0
    3165:	e8 26 f7 ff ff       	call   2890 <snprintf@plt>
    316a:	48 83 c4 10          	add    rsp,0x10
    316e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3175:	00 00 
    3177:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    317d:	c9                   	leave  
    317e:	c3                   	ret    

000000000000317f <ipv4_ntoa>:
    317f:	f3 0f 1e fa          	endbr64 
    3183:	55                   	push   rbp
    3184:	48 89 e5             	mov    rbp,rsp
    3187:	48 83 ec 20          	sub    rsp,0x20
    318b:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    318e:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    3192:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3196:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    319a:	48 83 c0 03          	add    rax,0x3
    319e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31a1:	0f b6 d0             	movzx  edx,al
    31a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31a8:	48 83 c0 02          	add    rax,0x2
    31ac:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31af:	44 0f b6 c0          	movzx  r8d,al
    31b3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31b7:	48 83 c0 01          	add    rax,0x1
    31bb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31be:	0f b6 f0             	movzx  esi,al
    31c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31c5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31c8:	0f b6 c0             	movzx  eax,al
    31cb:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    31d2:	00 00 
    31d4:	48 8d b9 80 6b fe ff 	lea    rdi,[rcx-0x19480]
    31db:	48 83 ec 08          	sub    rsp,0x8
    31df:	52                   	push   rdx
    31e0:	45 89 c1             	mov    r9d,r8d
    31e3:	41 89 f0             	mov    r8d,esi
    31e6:	89 c1                	mov    ecx,eax
    31e8:	48 8d 15 e7 9f 00 00 	lea    rdx,[rip+0x9fe7]        # d1d6 <_IO_stdin_used+0x1d6>
    31ef:	be 80 00 00 00       	mov    esi,0x80
    31f4:	b8 00 00 00 00       	mov    eax,0x0
    31f9:	e8 92 f6 ff ff       	call   2890 <snprintf@plt>
    31fe:	48 83 c4 10          	add    rsp,0x10
    3202:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3209:	00 00 
    320b:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    3211:	c9                   	leave  
    3212:	c3                   	ret    

0000000000003213 <inet6_ntoa>:
    3213:	f3 0f 1e fa          	endbr64 
    3217:	55                   	push   rbp
    3218:	48 89 e5             	mov    rbp,rsp
    321b:	41 57                	push   r15
    321d:	41 56                	push   r14
    321f:	41 55                	push   r13
    3221:	41 54                	push   r12
    3223:	53                   	push   rbx
    3224:	48 83 ec 38          	sub    rsp,0x38
    3228:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    322c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3233:	00 00 
    3235:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3239:	31 c0                	xor    eax,eax
    323b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3242:	00 00 
    3244:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    324a:	ba 80 00 00 00       	mov    edx,0x80
    324f:	be 00 00 00 00       	mov    esi,0x0
    3254:	48 89 c7             	mov    rdi,rax
    3257:	e8 b4 f3 ff ff       	call   2610 <memset@plt>
    325c:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    3263:	00 
    3264:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3268:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    326c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3270:	48 83 c0 0f          	add    rax,0xf
    3274:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3277:	0f b6 c8             	movzx  ecx,al
    327a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    327e:	48 83 c0 0e          	add    rax,0xe
    3282:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3285:	0f b6 f8             	movzx  edi,al
    3288:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    328c:	48 83 c0 0d          	add    rax,0xd
    3290:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3293:	0f b6 c0             	movzx  eax,al
    3296:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    3299:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    329d:	48 83 c0 0c          	add    rax,0xc
    32a1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32a4:	0f b6 d8             	movzx  ebx,al
    32a7:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    32aa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32ae:	48 83 c0 0b          	add    rax,0xb
    32b2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32b5:	44 0f b6 f8          	movzx  r15d,al
    32b9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32bd:	48 83 c0 0a          	add    rax,0xa
    32c1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32c4:	44 0f b6 f0          	movzx  r14d,al
    32c8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32cc:	48 83 c0 09          	add    rax,0x9
    32d0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32d3:	44 0f b6 e8          	movzx  r13d,al
    32d7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32db:	48 83 c0 08          	add    rax,0x8
    32df:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32e2:	44 0f b6 e0          	movzx  r12d,al
    32e6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32ea:	48 83 c0 07          	add    rax,0x7
    32ee:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32f1:	0f b6 d8             	movzx  ebx,al
    32f4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32f8:	48 83 c0 06          	add    rax,0x6
    32fc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ff:	44 0f b6 d8          	movzx  r11d,al
    3303:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3307:	48 83 c0 05          	add    rax,0x5
    330b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    330e:	44 0f b6 d0          	movzx  r10d,al
    3312:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3316:	48 83 c0 04          	add    rax,0x4
    331a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    331d:	44 0f b6 c8          	movzx  r9d,al
    3321:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3325:	48 83 c0 03          	add    rax,0x3
    3329:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    332c:	44 0f b6 c0          	movzx  r8d,al
    3330:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3334:	48 83 c0 02          	add    rax,0x2
    3338:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    333b:	0f b6 d0             	movzx  edx,al
    333e:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    3341:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3345:	48 83 c0 01          	add    rax,0x1
    3349:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    334c:	0f b6 f0             	movzx  esi,al
    334f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3353:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3356:	0f b6 d0             	movzx  edx,al
    3359:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3360:	00 00 
    3362:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    3368:	48 83 ec 08          	sub    rsp,0x8
    336c:	51                   	push   rcx
    336d:	57                   	push   rdi
    336e:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    3371:	51                   	push   rcx
    3372:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    3375:	51                   	push   rcx
    3376:	41 57                	push   r15
    3378:	41 56                	push   r14
    337a:	41 55                	push   r13
    337c:	41 54                	push   r12
    337e:	53                   	push   rbx
    337f:	41 53                	push   r11
    3381:	41 52                	push   r10
    3383:	41 51                	push   r9
    3385:	41 50                	push   r8
    3387:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    338b:	41 89 f0             	mov    r8d,esi
    338e:	89 d1                	mov    ecx,edx
    3390:	48 8d 15 51 9e 00 00 	lea    rdx,[rip+0x9e51]        # d1e8 <_IO_stdin_used+0x1e8>
    3397:	be 80 00 00 00       	mov    esi,0x80
    339c:	48 89 c7             	mov    rdi,rax
    339f:	b8 00 00 00 00       	mov    eax,0x0
    33a4:	e8 e7 f4 ff ff       	call   2890 <snprintf@plt>
    33a9:	48 83 c4 70          	add    rsp,0x70
    33ad:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    33b4:	00 00 
    33b6:	48 05 80 6b fe ff    	add    rax,0xfffffffffffe6b80
    33bc:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    33c0:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    33c7:	00 00 
    33c9:	74 05                	je     33d0 <inet6_ntoa+0x1bd>
    33cb:	e8 00 f3 ff ff       	call   26d0 <__stack_chk_fail@plt>
    33d0:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    33d4:	5b                   	pop    rbx
    33d5:	41 5c                	pop    r12
    33d7:	41 5d                	pop    r13
    33d9:	41 5e                	pop    r14
    33db:	41 5f                	pop    r15
    33dd:	5d                   	pop    rbp
    33de:	c3                   	ret    

00000000000033df <get_formated_time>:
    33df:	f3 0f 1e fa          	endbr64 
    33e3:	55                   	push   rbp
    33e4:	48 89 e5             	mov    rbp,rsp
    33e7:	53                   	push   rbx
    33e8:	48 83 ec 58          	sub    rsp,0x58
    33ec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    33f3:	00 00 
    33f5:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    33f9:	31 c0                	xor    eax,eax
    33fb:	bf ff 00 00 00       	mov    edi,0xff
    3400:	e8 8b f3 ff ff       	call   2790 <malloc@plt>
    3405:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3409:	bf 00 00 00 00       	mov    edi,0x0
    340e:	e8 7d f2 ff ff       	call   2690 <time@plt>
    3413:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3417:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    341b:	48 89 c7             	mov    rdi,rax
    341e:	e8 0d f2 ff ff       	call   2630 <localtime@plt>
    3423:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3426:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    342a:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    342e:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    3432:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3436:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    343a:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    343e:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    3442:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3446:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    344a:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    344e:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    3452:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3456:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    345a:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    345d:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    3460:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    3464:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3468:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    346b:	8d 48 01             	lea    ecx,[rax+0x1]
    346e:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    3471:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3477:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    347b:	57                   	push   rdi
    347c:	56                   	push   rsi
    347d:	48 8d 35 ac 9d 00 00 	lea    rsi,[rip+0x9dac]        # d230 <_IO_stdin_used+0x230>
    3484:	48 89 c7             	mov    rdi,rax
    3487:	b8 00 00 00 00       	mov    eax,0x0
    348c:	e8 6f f0 ff ff       	call   2500 <sprintf@plt>
    3491:	48 83 c4 10          	add    rsp,0x10
    3495:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3499:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    349d:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    34a4:	00 00 
    34a6:	74 05                	je     34ad <get_formated_time+0xce>
    34a8:	e8 23 f2 ff ff       	call   26d0 <__stack_chk_fail@plt>
    34ad:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    34b1:	c9                   	leave  
    34b2:	c3                   	ret    

00000000000034b3 <cb_get_formatted_time>:
    34b3:	f3 0f 1e fa          	endbr64 
    34b7:	55                   	push   rbp
    34b8:	48 89 e5             	mov    rbp,rsp
    34bb:	53                   	push   rbx
    34bc:	48 83 ec 68          	sub    rsp,0x68
    34c0:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    34c4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    34cb:	00 00 
    34cd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    34d1:	31 c0                	xor    eax,eax
    34d3:	bf 00 00 00 00       	mov    edi,0x0
    34d8:	e8 b3 f1 ff ff       	call   2690 <time@plt>
    34dd:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    34e1:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    34e5:	48 89 c7             	mov    rdi,rax
    34e8:	e8 43 f1 ff ff       	call   2630 <localtime@plt>
    34ed:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    34f0:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    34f4:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    34f8:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    34fc:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3500:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3504:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3508:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    350c:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3510:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3514:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3518:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    351c:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3520:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3524:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3527:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    352a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    352e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3532:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3535:	8d 48 01             	lea    ecx,[rax+0x1]
    3538:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    353b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3541:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3545:	57                   	push   rdi
    3546:	56                   	push   rsi
    3547:	48 8d 35 e2 9c 00 00 	lea    rsi,[rip+0x9ce2]        # d230 <_IO_stdin_used+0x230>
    354e:	48 89 c7             	mov    rdi,rax
    3551:	b8 00 00 00 00       	mov    eax,0x0
    3556:	e8 a5 ef ff ff       	call   2500 <sprintf@plt>
    355b:	48 83 c4 10          	add    rsp,0x10
    355f:	90                   	nop
    3560:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3564:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    356b:	00 00 
    356d:	74 05                	je     3574 <cb_get_formatted_time+0xc1>
    356f:	e8 5c f1 ff ff       	call   26d0 <__stack_chk_fail@plt>
    3574:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3578:	c9                   	leave  
    3579:	c3                   	ret    

000000000000357a <strloc>:
    357a:	f3 0f 1e fa          	endbr64 
    357e:	55                   	push   rbp
    357f:	48 89 e5             	mov    rbp,rsp
    3582:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    3586:	89 f0                	mov    eax,esi
    3588:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    358b:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    3592:	eb 1e                	jmp    35b2 <strloc+0x38>
    3594:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3597:	48 63 d0             	movsxd rdx,eax
    359a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    359e:	48 01 d0             	add    rax,rdx
    35a1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35a4:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    35a7:	75 05                	jne    35ae <strloc+0x34>
    35a9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35ac:	eb 1d                	jmp    35cb <strloc+0x51>
    35ae:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    35b2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    35b5:	48 63 d0             	movsxd rdx,eax
    35b8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    35bc:	48 01 d0             	add    rax,rdx
    35bf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35c2:	84 c0                	test   al,al
    35c4:	75 ce                	jne    3594 <strloc+0x1a>
    35c6:	b8 ff ff ff ff       	mov    eax,0xffffffff
    35cb:	5d                   	pop    rbp
    35cc:	c3                   	ret    

00000000000035cd <fail>:
    35cd:	f3 0f 1e fa          	endbr64 
    35d1:	55                   	push   rbp
    35d2:	48 89 e5             	mov    rbp,rsp
    35d5:	48 83 ec 10          	sub    rsp,0x10
    35d9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    35dd:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    35e1:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    35e5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    35e9:	48 89 c6             	mov    rsi,rax
    35ec:	48 8d 3d 59 9c 00 00 	lea    rdi,[rip+0x9c59]        # d24c <_IO_stdin_used+0x24c>
    35f3:	b8 00 00 00 00       	mov    eax,0x0
    35f8:	e8 c3 ee ff ff       	call   24c0 <printf@plt>
    35fd:	90                   	nop
    35fe:	c9                   	leave  
    35ff:	c3                   	ret    

0000000000003600 <char_is_printable>:
    3600:	f3 0f 1e fa          	endbr64 
    3604:	55                   	push   rbp
    3605:	48 89 e5             	mov    rbp,rsp
    3608:	89 f8                	mov    eax,edi
    360a:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    360d:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    3611:	7f 07                	jg     361a <char_is_printable+0x1a>
    3613:	b8 00 00 00 00       	mov    eax,0x0
    3618:	eb 05                	jmp    361f <char_is_printable+0x1f>
    361a:	b8 01 00 00 00       	mov    eax,0x1
    361f:	5d                   	pop    rbp
    3620:	c3                   	ret    

0000000000003621 <test_string_arr_print>:
    3621:	f3 0f 1e fa          	endbr64 
    3625:	55                   	push   rbp
    3626:	48 89 e5             	mov    rbp,rsp
    3629:	53                   	push   rbx
    362a:	48 83 ec 28          	sub    rsp,0x28
    362e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    3632:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3639:	eb 2c                	jmp    3667 <test_string_arr_print+0x46>
    363b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    363e:	48 63 d0             	movsxd rdx,eax
    3641:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    3645:	48 01 d0             	add    rax,rdx
    3648:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    364b:	0f be c0             	movsx  eax,al
    364e:	89 c7                	mov    edi,eax
    3650:	e8 ab ff ff ff       	call   3600 <char_is_printable>
    3655:	83 f0 01             	xor    eax,0x1
    3658:	84 c0                	test   al,al
    365a:	74 07                	je     3663 <test_string_arr_print+0x42>
    365c:	b8 00 00 00 00       	mov    eax,0x0
    3661:	eb 20                	jmp    3683 <test_string_arr_print+0x62>
    3663:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    3667:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    366a:	48 63 d8             	movsxd rbx,eax
    366d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    3671:	48 89 c7             	mov    rdi,rax
    3674:	e8 27 ef ff ff       	call   25a0 <strlen@plt>
    3679:	48 39 c3             	cmp    rbx,rax
    367c:	72 bd                	jb     363b <test_string_arr_print+0x1a>
    367e:	b8 01 00 00 00       	mov    eax,0x1
    3683:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3687:	c9                   	leave  
    3688:	c3                   	ret    

0000000000003689 <ipv4pktmgr>:
    3689:	f3 0f 1e fa          	endbr64 
    368d:	55                   	push   rbp
    368e:	48 89 e5             	mov    rbp,rsp
    3691:	48 81 ec d0 04 00 00 	sub    rsp,0x4d0
    3698:	48 89 bd 38 fb ff ff 	mov    QWORD PTR [rbp-0x4c8],rdi
    369f:	48 89 b5 30 fb ff ff 	mov    QWORD PTR [rbp-0x4d0],rsi
    36a6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    36ad:	00 00 
    36af:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    36b3:	31 c0                	xor    eax,eax
    36b5:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    36bc:	48 83 c0 0e          	add    rax,0xe
    36c0:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    36c7:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    36ce:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    36d1:	89 c7                	mov    edi,eax
    36d3:	e8 a8 f0 ff ff       	call   2780 <ntohl@plt>
    36d8:	89 85 7c fb ff ff    	mov    DWORD PTR [rbp-0x484],eax
    36de:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    36e5:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    36e8:	89 c7                	mov    edi,eax
    36ea:	e8 91 f0 ff ff       	call   2780 <ntohl@plt>
    36ef:	89 85 78 fb ff ff    	mov    DWORD PTR [rbp-0x488],eax
    36f5:	8b 95 78 fb ff ff    	mov    edx,DWORD PTR [rbp-0x488]
    36fb:	8b 05 d7 58 13 00    	mov    eax,DWORD PTR [rip+0x1358d7]        # 138fd8 <homenetmask>
    3701:	21 d0                	and    eax,edx
    3703:	89 85 4c fb ff ff    	mov    DWORD PTR [rbp-0x4b4],eax
    3709:	8b 95 7c fb ff ff    	mov    edx,DWORD PTR [rbp-0x484]
    370f:	8b 05 c3 58 13 00    	mov    eax,DWORD PTR [rip+0x1358c3]        # 138fd8 <homenetmask>
    3715:	21 d0                	and    eax,edx
    3717:	89 85 50 fb ff ff    	mov    DWORD PTR [rbp-0x4b0],eax
    371d:	8b 05 b1 58 13 00    	mov    eax,DWORD PTR [rip+0x1358b1]        # 138fd4 <homenet>
    3723:	39 85 4c fb ff ff    	cmp    DWORD PTR [rbp-0x4b4],eax
    3729:	75 0c                	jne    3737 <ipv4pktmgr+0xae>
    372b:	c7 85 80 fb ff ff 45 	mov    DWORD PTR [rbp-0x480],0x45
    3732:	00 00 00 
    3735:	eb 24                	jmp    375b <ipv4pktmgr+0xd2>
    3737:	8b 05 97 58 13 00    	mov    eax,DWORD PTR [rip+0x135897]        # 138fd4 <homenet>
    373d:	39 85 50 fb ff ff    	cmp    DWORD PTR [rbp-0x4b0],eax
    3743:	75 0c                	jne    3751 <ipv4pktmgr+0xc8>
    3745:	c7 85 80 fb ff ff 46 	mov    DWORD PTR [rbp-0x480],0x46
    374c:	00 00 00 
    374f:	eb 0a                	jmp    375b <ipv4pktmgr+0xd2>
    3751:	c7 85 80 fb ff ff 47 	mov    DWORD PTR [rbp-0x480],0x47
    3758:	00 00 00 
    375b:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    3762:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    3765:	89 85 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],eax
    376b:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3772:	48 89 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],rax
    3779:	48 8b 85 30 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d0]
    3780:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    3783:	48 8b 95 38 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4c8]
    378a:	48 83 c2 0e          	add    rdx,0xe
    378e:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    3791:	83 e2 0f             	and    edx,0xf
    3794:	0f b6 d2             	movzx  edx,dl
    3797:	c1 e2 02             	shl    edx,0x2
    379a:	29 d0                	sub    eax,edx
    379c:	83 e8 0e             	sub    eax,0xe
    379f:	89 85 54 fb ff ff    	mov    DWORD PTR [rbp-0x4ac],eax
    37a5:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    37ac:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    37af:	89 c7                	mov    edi,eax
    37b1:	e8 c9 f9 ff ff       	call   317f <ipv4_ntoa>
    37b6:	48 89 c1             	mov    rcx,rax
    37b9:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37c0:	ba 10 00 00 00       	mov    edx,0x10
    37c5:	48 89 ce             	mov    rsi,rcx
    37c8:	48 89 c7             	mov    rdi,rax
    37cb:	e8 20 ee ff ff       	call   25f0 <strncpy@plt>
    37d0:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    37d7:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    37da:	89 c7                	mov    edi,eax
    37dc:	e8 9e f9 ff ff       	call   317f <ipv4_ntoa>
    37e1:	48 89 c1             	mov    rcx,rax
    37e4:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37eb:	ba 10 00 00 00       	mov    edx,0x10
    37f0:	48 89 ce             	mov    rsi,rcx
    37f3:	48 89 c7             	mov    rdi,rax
    37f6:	e8 f5 ed ff ff       	call   25f0 <strncpy@plt>
    37fb:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3802:	48 89 c7             	mov    rdi,rax
    3805:	e8 b5 5a 00 00       	call   92bf <init_member>
    380a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3811:	48 89 c7             	mov    rdi,rax
    3814:	e8 a6 5a 00 00       	call   92bf <init_member>
    3819:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3820:	48 89 c7             	mov    rdi,rax
    3823:	e8 73 20 00 00       	call   589b <is_blocked_ipv4>
    3828:	84 c0                	test   al,al
    382a:	74 44                	je     3870 <ipv4pktmgr+0x1e7>
    382c:	b8 00 00 00 00       	mov    eax,0x0
    3831:	e8 a9 fb ff ff       	call   33df <get_formated_time>
    3836:	48 89 c6             	mov    rsi,rax
    3839:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3840:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3847:	48 89 d1             	mov    rcx,rdx
    384a:	48 89 f2             	mov    rdx,rsi
    384d:	48 8d 35 04 9a 00 00 	lea    rsi,[rip+0x9a04]        # d258 <_IO_stdin_used+0x258>
    3854:	48 89 c7             	mov    rdi,rax
    3857:	b8 00 00 00 00       	mov    eax,0x0
    385c:	e8 9f ec ff ff       	call   2500 <sprintf@plt>
    3861:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3868:	48 89 c7             	mov    rdi,rax
    386b:	e8 30 72 00 00       	call   aaa0 <saprintf>
    3870:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3877:	48 89 c7             	mov    rdi,rax
    387a:	e8 1c 20 00 00       	call   589b <is_blocked_ipv4>
    387f:	84 c0                	test   al,al
    3881:	74 44                	je     38c7 <ipv4pktmgr+0x23e>
    3883:	b8 00 00 00 00       	mov    eax,0x0
    3888:	e8 52 fb ff ff       	call   33df <get_formated_time>
    388d:	48 89 c6             	mov    rsi,rax
    3890:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    3897:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    389e:	48 89 d1             	mov    rcx,rdx
    38a1:	48 89 f2             	mov    rdx,rsi
    38a4:	48 8d 35 dd 99 00 00 	lea    rsi,[rip+0x99dd]        # d288 <_IO_stdin_used+0x288>
    38ab:	48 89 c7             	mov    rdi,rax
    38ae:	b8 00 00 00 00       	mov    eax,0x0
    38b3:	e8 48 ec ff ff       	call   2500 <sprintf@plt>
    38b8:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    38bf:	48 89 c7             	mov    rdi,rax
    38c2:	e8 d9 71 00 00       	call   aaa0 <saprintf>
    38c7:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38ce:	48 89 85 68 fb ff ff 	mov    QWORD PTR [rbp-0x498],rax
    38d5:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    38dc:	48 89 85 70 fb ff ff 	mov    QWORD PTR [rbp-0x490],rax
    38e3:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    38ea:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    38ee:	66 83 f8 20          	cmp    ax,0x20
    38f2:	74 11                	je     3905 <ipv4pktmgr+0x27c>
    38f4:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    38fb:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    38ff:	66 3d 02 01          	cmp    ax,0x102
    3903:	75 66                	jne    396b <ipv4pktmgr+0x2e2>
    3905:	48 8d 35 a4 99 00 00 	lea    rsi,[rip+0x99a4]        # d2b0 <_IO_stdin_used+0x2b0>
    390c:	48 8d 3d a2 99 00 00 	lea    rdi,[rip+0x99a2]        # d2b5 <_IO_stdin_used+0x2b5>
    3913:	b8 00 00 00 00       	mov    eax,0x0
    3918:	e8 a3 eb ff ff       	call   24c0 <printf@plt>
    391d:	0f b6 05 40 76 10 00 	movzx  eax,BYTE PTR [rip+0x107640]        # 10af64 <packet_print>
    3924:	84 c0                	test   al,al
    3926:	74 1a                	je     3942 <ipv4pktmgr+0x2b9>
    3928:	48 8d 35 94 99 00 00 	lea    rsi,[rip+0x9994]        # d2c3 <_IO_stdin_used+0x2c3>
    392f:	48 8d 3d 92 99 00 00 	lea    rdi,[rip+0x9992]        # d2c8 <_IO_stdin_used+0x2c8>
    3936:	b8 00 00 00 00       	mov    eax,0x0
    393b:	e8 80 eb ff ff       	call   24c0 <printf@plt>
    3940:	eb 29                	jmp    396b <ipv4pktmgr+0x2e2>
    3942:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3949:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3950:	48 8d 0d 6c 99 00 00 	lea    rcx,[rip+0x996c]        # d2c3 <_IO_stdin_used+0x2c3>
    3957:	48 89 c6             	mov    rsi,rax
    395a:	48 8d 3d 6a 99 00 00 	lea    rdi,[rip+0x996a]        # d2cb <_IO_stdin_used+0x2cb>
    3961:	b8 00 00 00 00       	mov    eax,0x0
    3966:	e8 55 eb ff ff       	call   24c0 <printf@plt>
    396b:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3972:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3976:	0f b6 c0             	movzx  eax,al
    3979:	83 f8 11             	cmp    eax,0x11
    397c:	0f 84 b8 00 00 00    	je     3a3a <ipv4pktmgr+0x3b1>
    3982:	83 f8 11             	cmp    eax,0x11
    3985:	0f 8f db 00 00 00    	jg     3a66 <ipv4pktmgr+0x3dd>
    398b:	83 f8 06             	cmp    eax,0x6
    398e:	74 7e                	je     3a0e <ipv4pktmgr+0x385>
    3990:	83 f8 06             	cmp    eax,0x6
    3993:	0f 8f cd 00 00 00    	jg     3a66 <ipv4pktmgr+0x3dd>
    3999:	83 f8 01             	cmp    eax,0x1
    399c:	74 0a                	je     39a8 <ipv4pktmgr+0x31f>
    399e:	83 f8 02             	cmp    eax,0x2
    39a1:	74 2d                	je     39d0 <ipv4pktmgr+0x347>
    39a3:	e9 be 00 00 00       	jmp    3a66 <ipv4pktmgr+0x3dd>
    39a8:	c7 85 8c fb ff ff 80 	mov    DWORD PTR [rbp-0x474],0x80
    39af:	00 00 00 
    39b2:	48 8d 95 60 fb ff ff 	lea    rdx,[rbp-0x4a0]
    39b9:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    39c0:	48 89 d6             	mov    rsi,rdx
    39c3:	48 89 c7             	mov    rdi,rax
    39c6:	e8 40 02 00 00       	call   3c0b <ip4_icmp_decode>
    39cb:	e9 c7 00 00 00       	jmp    3a97 <ipv4pktmgr+0x40e>
    39d0:	c7 85 8c fb ff ff ff 	mov    DWORD PTR [rbp-0x474],0xffffffff
    39d7:	ff ff ff 
    39da:	8b 05 44 e6 00 00    	mov    eax,DWORD PTR [rip+0xe644]        # 12024 <total_conversations>
    39e0:	83 e8 01             	sub    eax,0x1
    39e3:	89 05 3b e6 00 00    	mov    DWORD PTR [rip+0xe63b],eax        # 12024 <total_conversations>
    39e9:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    39f0:	48 8b 8d 68 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x498]
    39f7:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    39fe:	48 89 ce             	mov    rsi,rcx
    3a01:	48 89 c7             	mov    rdi,rax
    3a04:	e8 1c 14 00 00       	call   4e25 <ip4_igmp_decode>
    3a09:	e9 89 00 00 00       	jmp    3a97 <ipv4pktmgr+0x40e>
    3a0e:	c7 85 8c fb ff ff 7e 	mov    DWORD PTR [rbp-0x474],0x7e
    3a15:	00 00 00 
    3a18:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    3a1f:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    3a26:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    3a2d:	48 89 ce             	mov    rsi,rcx
    3a30:	48 89 c7             	mov    rdi,rax
    3a33:	e8 17 0a 00 00       	call   444f <ip4_tcp_decode>
    3a38:	eb 5d                	jmp    3a97 <ipv4pktmgr+0x40e>
    3a3a:	c7 85 8c fb ff ff 7f 	mov    DWORD PTR [rbp-0x474],0x7f
    3a41:	00 00 00 
    3a44:	48 8b 95 30 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d0]
    3a4b:	48 8d 8d 60 fb ff ff 	lea    rcx,[rbp-0x4a0]
    3a52:	48 8b 85 38 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4c8]
    3a59:	48 89 ce             	mov    rsi,rcx
    3a5c:	48 89 c7             	mov    rdi,rax
    3a5f:	e8 6c 12 00 00       	call   4cd0 <ip4_udp_decode>
    3a64:	eb 31                	jmp    3a97 <ipv4pktmgr+0x40e>
    3a66:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3a6d:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3a71:	0f b6 c8             	movzx  ecx,al
    3a74:	48 8b 95 70 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x490]
    3a7b:	48 8b 85 68 fb ff ff 	mov    rax,QWORD PTR [rbp-0x498]
    3a82:	48 89 c6             	mov    rsi,rax
    3a85:	48 8d 3d 4c 98 00 00 	lea    rdi,[rip+0x984c]        # d2d8 <_IO_stdin_used+0x2d8>
    3a8c:	b8 00 00 00 00       	mov    eax,0x0
    3a91:	e8 2a ea ff ff       	call   24c0 <printf@plt>
    3a96:	90                   	nop
    3a97:	90                   	nop
    3a98:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3a9c:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3aa3:	00 00 
    3aa5:	74 05                	je     3aac <ipv4pktmgr+0x423>
    3aa7:	e8 24 ec ff ff       	call   26d0 <__stack_chk_fail@plt>
    3aac:	c9                   	leave  
    3aad:	c3                   	ret    

0000000000003aae <ip6_icmp_decode>:
    3aae:	f3 0f 1e fa          	endbr64 
    3ab2:	55                   	push   rbp
    3ab3:	48 89 e5             	mov    rbp,rsp
    3ab6:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3aba:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3abe:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3ac2:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3ac6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3acd:	00 00 
    3acf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3ad3:	31 c0                	xor    eax,eax
    3ad5:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3ad9:	48 83 c0 36          	add    rax,0x36
    3add:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3ae1:	0f b6 05 7c 74 10 00 	movzx  eax,BYTE PTR [rip+0x10747c]        # 10af64 <packet_print>
    3ae8:	84 c0                	test   al,al
    3aea:	0f 84 04 01 00 00    	je     3bf4 <ip6_icmp_decode+0x146>
    3af0:	48 8d 35 09 98 00 00 	lea    rsi,[rip+0x9809]        # d300 <_IO_stdin_used+0x300>
    3af7:	48 8d 3d 08 98 00 00 	lea    rdi,[rip+0x9808]        # d306 <_IO_stdin_used+0x306>
    3afe:	b8 00 00 00 00       	mov    eax,0x0
    3b03:	e8 b8 e9 ff ff       	call   24c0 <printf@plt>
    3b08:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3b0c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3b10:	48 89 c6             	mov    rsi,rax
    3b13:	48 8d 3d ef 97 00 00 	lea    rdi,[rip+0x97ef]        # d309 <_IO_stdin_used+0x309>
    3b1a:	b8 00 00 00 00       	mov    eax,0x0
    3b1f:	e8 9c e9 ff ff       	call   24c0 <printf@plt>
    3b24:	48 8d 3d ed 97 00 00 	lea    rdi,[rip+0x97ed]        # d318 <_IO_stdin_used+0x318>
    3b2b:	b8 00 00 00 00       	mov    eax,0x0
    3b30:	e8 8b e9 ff ff       	call   24c0 <printf@plt>
    3b35:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b39:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3b3c:	0f b6 c0             	movzx  eax,al
    3b3f:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b44:	74 68                	je     3bae <ip6_icmp_decode+0x100>
    3b46:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b4b:	0f 8f 8b 00 00 00    	jg     3bdc <ip6_icmp_decode+0x12e>
    3b51:	3d 87 00 00 00       	cmp    eax,0x87
    3b56:	74 77                	je     3bcf <ip6_icmp_decode+0x121>
    3b58:	3d 87 00 00 00       	cmp    eax,0x87
    3b5d:	7f 7d                	jg     3bdc <ip6_icmp_decode+0x12e>
    3b5f:	3d 82 00 00 00       	cmp    eax,0x82
    3b64:	74 56                	je     3bbc <ip6_icmp_decode+0x10e>
    3b66:	3d 85 00 00 00       	cmp    eax,0x85
    3b6b:	75 6f                	jne    3bdc <ip6_icmp_decode+0x12e>
    3b6d:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b71:	48 83 c0 0a          	add    rax,0xa
    3b75:	48 89 c7             	mov    rdi,rax
    3b78:	e8 19 f4 ff ff       	call   2f96 <mac_ntoa>
    3b7d:	48 89 c1             	mov    rcx,rax
    3b80:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b84:	ba 40 00 00 00       	mov    edx,0x40
    3b89:	48 89 ce             	mov    rsi,rcx
    3b8c:	48 89 c7             	mov    rdi,rax
    3b8f:	e8 5c ea ff ff       	call   25f0 <strncpy@plt>
    3b94:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b98:	48 89 c6             	mov    rsi,rax
    3b9b:	48 8d 3d 7f 97 00 00 	lea    rdi,[rip+0x977f]        # d321 <_IO_stdin_used+0x321>
    3ba2:	b8 00 00 00 00       	mov    eax,0x0
    3ba7:	e8 14 e9 ff ff       	call   24c0 <printf@plt>
    3bac:	eb 2e                	jmp    3bdc <ip6_icmp_decode+0x12e>
    3bae:	48 8d 3d 8b 97 00 00 	lea    rdi,[rip+0x978b]        # d340 <_IO_stdin_used+0x340>
    3bb5:	e8 a6 ec ff ff       	call   2860 <puts@plt>
    3bba:	eb 20                	jmp    3bdc <ip6_icmp_decode+0x12e>
    3bbc:	48 8d 3d a2 97 00 00 	lea    rdi,[rip+0x97a2]        # d365 <_IO_stdin_used+0x365>
    3bc3:	b8 00 00 00 00       	mov    eax,0x0
    3bc8:	e8 f3 e8 ff ff       	call   24c0 <printf@plt>
    3bcd:	eb 0d                	jmp    3bdc <ip6_icmp_decode+0x12e>
    3bcf:	48 8d 3d a9 97 00 00 	lea    rdi,[rip+0x97a9]        # d37f <_IO_stdin_used+0x37f>
    3bd6:	e8 85 ec ff ff       	call   2860 <puts@plt>
    3bdb:	90                   	nop
    3bdc:	48 8d 35 b2 97 00 00 	lea    rsi,[rip+0x97b2]        # d395 <_IO_stdin_used+0x395>
    3be3:	48 8d 3d 1c 97 00 00 	lea    rdi,[rip+0x971c]        # d306 <_IO_stdin_used+0x306>
    3bea:	b8 00 00 00 00       	mov    eax,0x0
    3bef:	e8 cc e8 ff ff       	call   24c0 <printf@plt>
    3bf4:	90                   	nop
    3bf5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3bf9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3c00:	00 00 
    3c02:	74 05                	je     3c09 <ip6_icmp_decode+0x15b>
    3c04:	e8 c7 ea ff ff       	call   26d0 <__stack_chk_fail@plt>
    3c09:	c9                   	leave  
    3c0a:	c3                   	ret    

0000000000003c0b <ip4_icmp_decode>:
    3c0b:	f3 0f 1e fa          	endbr64 
    3c0f:	55                   	push   rbp
    3c10:	48 89 e5             	mov    rbp,rsp
    3c13:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3c1a:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3c21:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3c28:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3c2f:	00 00 
    3c31:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3c35:	31 c0                	xor    eax,eax
    3c37:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c3e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c42:	ba 5e 00 00 00       	mov    edx,0x5e
    3c47:	be 01 00 00 00       	mov    esi,0x1
    3c4c:	48 89 c7             	mov    rdi,rax
    3c4f:	e8 bf 12 00 00       	call   4f13 <add_ip_addr_or_inc_counter>
    3c54:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c5b:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c5f:	ba 5e 00 00 00       	mov    edx,0x5e
    3c64:	be 00 00 00 00       	mov    esi,0x0
    3c69:	48 89 c7             	mov    rdi,rax
    3c6c:	e8 a2 12 00 00       	call   4f13 <add_ip_addr_or_inc_counter>
    3c71:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c78:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c7c:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3c83:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c8a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c8e:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3c95:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c9c:	48 83 c0 22          	add    rax,0x22
    3ca0:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3ca7:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3cae:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3cb2:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cb9:	48 89 10             	mov    QWORD PTR [rax],rdx
    3cbc:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cc3:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3cca:	48 89 50 58          	mov    QWORD PTR [rax+0x58],rdx
    3cce:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cd5:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3cd8:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3cde:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ce5:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3ce8:	8d 50 d6             	lea    edx,[rax-0x2a]
    3ceb:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cf2:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3cf5:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3cfc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3cff:	3c 08                	cmp    al,0x8
    3d01:	0f 85 55 01 00 00    	jne    3e5c <ip4_icmp_decode+0x251>
    3d07:	8b 05 7b e3 00 00    	mov    eax,DWORD PTR [rip+0xe37b]        # 12088 <strict_nmap_host_alive_check>
    3d0d:	83 f8 01             	cmp    eax,0x1
    3d10:	0f 85 46 01 00 00    	jne    3e5c <ip4_icmp_decode+0x251>
    3d16:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d1d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3d21:	48 89 c7             	mov    rdi,rax
    3d24:	e8 24 55 00 00       	call   924d <member_exists>
    3d29:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3d2f:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3d36:	0f 84 83 00 00 00    	je     3dbf <ip4_icmp_decode+0x1b4>
    3d3c:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3d42:	48 63 d0             	movsxd rdx,eax
    3d45:	48 89 d0             	mov    rax,rdx
    3d48:	48 c1 e0 02          	shl    rax,0x2
    3d4c:	48 01 d0             	add    rax,rdx
    3d4f:	48 c1 e0 03          	shl    rax,0x3
    3d53:	48 01 d0             	add    rax,rdx
    3d56:	48 c1 e0 04          	shl    rax,0x4
    3d5a:	48 8d 15 bf 07 0f 00 	lea    rdx,[rip+0xf07bf]        # f4520 <watchlist>
    3d61:	48 01 d0             	add    rax,rdx
    3d64:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3d6b:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d72:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d75:	85 c0                	test   eax,eax
    3d77:	0f 85 a8 02 00 00    	jne    4025 <ip4_icmp_decode+0x41a>
    3d7d:	bf 00 00 00 00       	mov    edi,0x0
    3d82:	e8 09 e9 ff ff       	call   2690 <time@plt>
    3d87:	48 89 c2             	mov    rdx,rax
    3d8a:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d91:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d95:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d9c:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3da3:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3daa:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3dad:	8d 50 01             	lea    edx,[rax+0x1]
    3db0:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3db7:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3dba:	e9 66 02 00 00       	jmp    4025 <ip4_icmp_decode+0x41a>
    3dbf:	8b 05 53 e2 00 00    	mov    eax,DWORD PTR [rip+0xe253]        # 12018 <watchlist_num>
    3dc5:	83 c0 01             	add    eax,0x1
    3dc8:	89 05 4a e2 00 00    	mov    DWORD PTR [rip+0xe24a],eax        # 12018 <watchlist_num>
    3dce:	8b 05 44 e2 00 00    	mov    eax,DWORD PTR [rip+0xe244]        # 12018 <watchlist_num>
    3dd4:	48 63 d0             	movsxd rdx,eax
    3dd7:	48 89 d0             	mov    rax,rdx
    3dda:	48 c1 e0 02          	shl    rax,0x2
    3dde:	48 01 d0             	add    rax,rdx
    3de1:	48 c1 e0 03          	shl    rax,0x3
    3de5:	48 01 d0             	add    rax,rdx
    3de8:	48 c1 e0 04          	shl    rax,0x4
    3dec:	48 8d 15 2d 07 0f 00 	lea    rdx,[rip+0xf072d]        # f4520 <watchlist>
    3df3:	48 01 d0             	add    rax,rdx
    3df6:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3dfd:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e04:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3e08:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e0f:	48 89 c6             	mov    rsi,rax
    3e12:	48 89 d7             	mov    rdi,rdx
    3e15:	e8 86 e8 ff ff       	call   26a0 <strcpy@plt>
    3e1a:	bf 00 00 00 00       	mov    edi,0x0
    3e1f:	e8 6c e8 ff ff       	call   2690 <time@plt>
    3e24:	48 89 c2             	mov    rdx,rax
    3e27:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e2e:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3e32:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e39:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3e40:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e47:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e4a:	8d 50 01             	lea    edx,[rax+0x1]
    3e4d:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e54:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3e57:	e9 c9 01 00 00       	jmp    4025 <ip4_icmp_decode+0x41a>
    3e5c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3e63:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3e66:	3c 0d                	cmp    al,0xd
    3e68:	0f 85 ba 01 00 00    	jne    4028 <ip4_icmp_decode+0x41d>
    3e6e:	8b 05 10 e2 00 00    	mov    eax,DWORD PTR [rip+0xe210]        # 12084 <strict_icmp_timestamp_req>
    3e74:	83 f8 01             	cmp    eax,0x1
    3e77:	74 0f                	je     3e88 <ip4_icmp_decode+0x27d>
    3e79:	8b 05 09 e2 00 00    	mov    eax,DWORD PTR [rip+0xe209]        # 12088 <strict_nmap_host_alive_check>
    3e7f:	83 f8 01             	cmp    eax,0x1
    3e82:	0f 85 a0 01 00 00    	jne    4028 <ip4_icmp_decode+0x41d>
    3e88:	8b 05 f6 e1 00 00    	mov    eax,DWORD PTR [rip+0xe1f6]        # 12084 <strict_icmp_timestamp_req>
    3e8e:	85 c0                	test   eax,eax
    3e90:	74 22                	je     3eb4 <ip4_icmp_decode+0x2a9>
    3e92:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3e99:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ea0:	48 89 c6             	mov    rsi,rax
    3ea3:	48 8d 3d f6 94 00 00 	lea    rdi,[rip+0x94f6]        # d3a0 <_IO_stdin_used+0x3a0>
    3eaa:	b8 00 00 00 00       	mov    eax,0x0
    3eaf:	e8 0c e6 ff ff       	call   24c0 <printf@plt>
    3eb4:	8b 05 ce e1 00 00    	mov    eax,DWORD PTR [rip+0xe1ce]        # 12088 <strict_nmap_host_alive_check>
    3eba:	85 c0                	test   eax,eax
    3ebc:	0f 84 66 01 00 00    	je     4028 <ip4_icmp_decode+0x41d>
    3ec2:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ec9:	48 89 c7             	mov    rdi,rax
    3ecc:	e8 7c 53 00 00       	call   924d <member_exists>
    3ed1:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3ed7:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3ede:	0f 84 44 01 00 00    	je     4028 <ip4_icmp_decode+0x41d>
    3ee4:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3eea:	48 63 d0             	movsxd rdx,eax
    3eed:	48 89 d0             	mov    rax,rdx
    3ef0:	48 c1 e0 02          	shl    rax,0x2
    3ef4:	48 01 d0             	add    rax,rdx
    3ef7:	48 c1 e0 03          	shl    rax,0x3
    3efb:	48 01 d0             	add    rax,rdx
    3efe:	48 c1 e0 04          	shl    rax,0x4
    3f02:	48 8d 15 17 06 0f 00 	lea    rdx,[rip+0xf0617]        # f4520 <watchlist>
    3f09:	48 01 d0             	add    rax,rdx
    3f0c:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3f13:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f1a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3f1d:	83 f8 03             	cmp    eax,0x3
    3f20:	0f 85 05 01 00 00    	jne    402b <ip4_icmp_decode+0x420>
    3f26:	bf 00 00 00 00       	mov    edi,0x0
    3f2b:	e8 60 e7 ff ff       	call   2690 <time@plt>
    3f30:	48 89 c2             	mov    rdx,rax
    3f33:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f3a:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3f3e:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f45:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3f49:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f50:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3f54:	48 89 d0             	mov    rax,rdx
    3f57:	48 29 c8             	sub    rax,rcx
    3f5a:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3f60:	0f 87 c2 00 00 00    	ja     4028 <ip4_icmp_decode+0x41d>
    3f66:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3f6d:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3f74:	48 89 c6             	mov    rsi,rax
    3f77:	48 8d 3d 6a 94 00 00 	lea    rdi,[rip+0x946a]        # d3e8 <_IO_stdin_used+0x3e8>
    3f7e:	b8 00 00 00 00       	mov    eax,0x0
    3f83:	e8 38 e5 ff ff       	call   24c0 <printf@plt>
    3f88:	48 8b 05 a9 e0 00 00 	mov    rax,QWORD PTR [rip+0xe0a9]        # 12038 <def_log_file>
    3f8f:	48 8d 35 bc 94 00 00 	lea    rsi,[rip+0x94bc]        # d452 <_IO_stdin_used+0x452>
    3f96:	48 89 c7             	mov    rdi,rax
    3f99:	e8 72 e7 ff ff       	call   2710 <fopen@plt>
    3f9e:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3fa5:	b8 00 00 00 00       	mov    eax,0x0
    3faa:	e8 30 f4 ff ff       	call   33df <get_formated_time>
    3faf:	48 89 c6             	mov    rsi,rax
    3fb2:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3fb9:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3fc0:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3fc7:	49 89 f0             	mov    r8,rsi
    3fca:	48 8d 35 87 94 00 00 	lea    rsi,[rip+0x9487]        # d458 <_IO_stdin_used+0x458>
    3fd1:	48 89 c7             	mov    rdi,rax
    3fd4:	b8 00 00 00 00       	mov    eax,0x0
    3fd9:	e8 22 e5 ff ff       	call   2500 <sprintf@plt>
    3fde:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3fe5:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3fec:	48 89 d6             	mov    rsi,rdx
    3fef:	48 89 c7             	mov    rdi,rax
    3ff2:	e8 e9 e6 ff ff       	call   26e0 <fputs@plt>
    3ff7:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3ffe:	48 89 c7             	mov    rdi,rax
    4001:	e8 ba e6 ff ff       	call   26c0 <fclose@plt>
    4006:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    400d:	48 83 c0 28          	add    rax,0x28
    4011:	ba 28 00 00 00       	mov    edx,0x28
    4016:	be 00 00 00 00       	mov    esi,0x0
    401b:	48 89 c7             	mov    rdi,rax
    401e:	e8 ed e5 ff ff       	call   2610 <memset@plt>
    4023:	eb 07                	jmp    402c <ip4_icmp_decode+0x421>
    4025:	90                   	nop
    4026:	eb 04                	jmp    402c <ip4_icmp_decode+0x421>
    4028:	90                   	nop
    4029:	eb 01                	jmp    402c <ip4_icmp_decode+0x421>
    402b:	90                   	nop
    402c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    4033:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    403a:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    4041:	48 89 c7             	mov    rdi,rax
    4044:	e8 cb 23 00 00       	call   6414 <rulemgr>
    4049:	0f b6 05 14 6f 10 00 	movzx  eax,BYTE PTR [rip+0x106f14]        # 10af64 <packet_print>
    4050:	84 c0                	test   al,al
    4052:	0f 84 e0 03 00 00    	je     4438 <ip4_icmp_decode+0x82d>
    4058:	48 8d 35 a1 92 00 00 	lea    rsi,[rip+0x92a1]        # d300 <_IO_stdin_used+0x300>
    405f:	48 8d 3d a0 92 00 00 	lea    rdi,[rip+0x92a0]        # d306 <_IO_stdin_used+0x306>
    4066:	b8 00 00 00 00       	mov    eax,0x0
    406b:	e8 50 e4 ff ff       	call   24c0 <printf@plt>
    4070:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    4077:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    407e:	48 89 c6             	mov    rsi,rax
    4081:	48 8d 3d 40 94 00 00 	lea    rdi,[rip+0x9440]        # d4c8 <_IO_stdin_used+0x4c8>
    4088:	b8 00 00 00 00       	mov    eax,0x0
    408d:	e8 2e e4 ff ff       	call   24c0 <printf@plt>
    4092:	48 8d 3d 3e 94 00 00 	lea    rdi,[rip+0x943e]        # d4d7 <_IO_stdin_used+0x4d7>
    4099:	b8 00 00 00 00       	mov    eax,0x0
    409e:	e8 1d e4 ff ff       	call   24c0 <printf@plt>
    40a3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    40aa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    40ad:	0f b6 c0             	movzx  eax,al
    40b0:	83 f8 0e             	cmp    eax,0xe
    40b3:	0f 87 46 03 00 00    	ja     43ff <ip4_icmp_decode+0x7f4>
    40b9:	89 c0                	mov    eax,eax
    40bb:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    40c2:	00 
    40c3:	48 8d 05 16 98 00 00 	lea    rax,[rip+0x9816]        # d8e0 <_IO_stdin_used+0x8e0>
    40ca:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    40cd:	48 98                	cdqe   
    40cf:	48 8d 15 0a 98 00 00 	lea    rdx,[rip+0x980a]        # d8e0 <_IO_stdin_used+0x8e0>
    40d6:	48 01 d0             	add    rax,rdx
    40d9:	3e ff e0             	notrack jmp rax
    40dc:	48 8d 3d fb 93 00 00 	lea    rdi,[rip+0x93fb]        # d4de <_IO_stdin_used+0x4de>
    40e3:	e8 78 e7 ff ff       	call   2860 <puts@plt>
    40e8:	e9 33 03 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    40ed:	48 8d 3d f6 93 00 00 	lea    rdi,[rip+0x93f6]        # d4ea <_IO_stdin_used+0x4ea>
    40f4:	b8 00 00 00 00       	mov    eax,0x0
    40f9:	e8 c2 e3 ff ff       	call   24c0 <printf@plt>
    40fe:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4105:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4109:	0f b6 c0             	movzx  eax,al
    410c:	83 f8 0f             	cmp    eax,0xf
    410f:	0f 87 1e 01 00 00    	ja     4233 <ip4_icmp_decode+0x628>
    4115:	89 c0                	mov    eax,eax
    4117:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    411e:	00 
    411f:	48 8d 05 f6 97 00 00 	lea    rax,[rip+0x97f6]        # d91c <_IO_stdin_used+0x91c>
    4126:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4129:	48 98                	cdqe   
    412b:	48 8d 15 ea 97 00 00 	lea    rdx,[rip+0x97ea]        # d91c <_IO_stdin_used+0x91c>
    4132:	48 01 d0             	add    rax,rdx
    4135:	3e ff e0             	notrack jmp rax
    4138:	48 8d 3d c5 93 00 00 	lea    rdi,[rip+0x93c5]        # d504 <_IO_stdin_used+0x504>
    413f:	e8 1c e7 ff ff       	call   2860 <puts@plt>
    4144:	e9 0c 01 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    4149:	48 8d 3d cb 93 00 00 	lea    rdi,[rip+0x93cb]        # d51b <_IO_stdin_used+0x51b>
    4150:	e8 0b e7 ff ff       	call   2860 <puts@plt>
    4155:	e9 fb 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    415a:	48 8d 3d ce 93 00 00 	lea    rdi,[rip+0x93ce]        # d52f <_IO_stdin_used+0x52f>
    4161:	e8 fa e6 ff ff       	call   2860 <puts@plt>
    4166:	e9 ea 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    416b:	48 8d 3d d5 93 00 00 	lea    rdi,[rip+0x93d5]        # d547 <_IO_stdin_used+0x547>
    4172:	e8 e9 e6 ff ff       	call   2860 <puts@plt>
    4177:	e9 d9 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    417c:	48 8d 3d d8 93 00 00 	lea    rdi,[rip+0x93d8]        # d55b <_IO_stdin_used+0x55b>
    4183:	e8 d8 e6 ff ff       	call   2860 <puts@plt>
    4188:	e9 c8 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    418d:	48 8d 3d df 93 00 00 	lea    rdi,[rip+0x93df]        # d573 <_IO_stdin_used+0x573>
    4194:	e8 c7 e6 ff ff       	call   2860 <puts@plt>
    4199:	e9 b7 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    419e:	48 8d 3d eb 93 00 00 	lea    rdi,[rip+0x93eb]        # d590 <_IO_stdin_used+0x590>
    41a5:	e8 b6 e6 ff ff       	call   2860 <puts@plt>
    41aa:	e9 a6 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    41af:	48 8d 3d 02 94 00 00 	lea    rdi,[rip+0x9402]        # d5b8 <_IO_stdin_used+0x5b8>
    41b6:	e8 a5 e6 ff ff       	call   2860 <puts@plt>
    41bb:	e9 95 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    41c0:	48 8d 3d 11 94 00 00 	lea    rdi,[rip+0x9411]        # d5d8 <_IO_stdin_used+0x5d8>
    41c7:	e8 94 e6 ff ff       	call   2860 <puts@plt>
    41cc:	e9 84 00 00 00       	jmp    4255 <ip4_icmp_decode+0x64a>
    41d1:	48 8d 3d 18 94 00 00 	lea    rdi,[rip+0x9418]        # d5f0 <_IO_stdin_used+0x5f0>
    41d8:	e8 83 e6 ff ff       	call   2860 <puts@plt>
    41dd:	eb 76                	jmp    4255 <ip4_icmp_decode+0x64a>
    41df:	48 8d 3d 32 94 00 00 	lea    rdi,[rip+0x9432]        # d618 <_IO_stdin_used+0x618>
    41e6:	e8 75 e6 ff ff       	call   2860 <puts@plt>
    41eb:	eb 68                	jmp    4255 <ip4_icmp_decode+0x64a>
    41ed:	48 8d 3d 4c 94 00 00 	lea    rdi,[rip+0x944c]        # d640 <_IO_stdin_used+0x640>
    41f4:	e8 67 e6 ff ff       	call   2860 <puts@plt>
    41f9:	eb 5a                	jmp    4255 <ip4_icmp_decode+0x64a>
    41fb:	48 8d 3d 5d 94 00 00 	lea    rdi,[rip+0x945d]        # d65f <_IO_stdin_used+0x65f>
    4202:	e8 59 e6 ff ff       	call   2860 <puts@plt>
    4207:	eb 4c                	jmp    4255 <ip4_icmp_decode+0x64a>
    4209:	48 8d 3d 70 94 00 00 	lea    rdi,[rip+0x9470]        # d680 <_IO_stdin_used+0x680>
    4210:	e8 4b e6 ff ff       	call   2860 <puts@plt>
    4215:	eb 3e                	jmp    4255 <ip4_icmp_decode+0x64a>
    4217:	48 8d 3d 8f 94 00 00 	lea    rdi,[rip+0x948f]        # d6ad <_IO_stdin_used+0x6ad>
    421e:	e8 3d e6 ff ff       	call   2860 <puts@plt>
    4223:	eb 30                	jmp    4255 <ip4_icmp_decode+0x64a>
    4225:	48 8d 3d a4 94 00 00 	lea    rdi,[rip+0x94a4]        # d6d0 <_IO_stdin_used+0x6d0>
    422c:	e8 2f e6 ff ff       	call   2860 <puts@plt>
    4231:	eb 22                	jmp    4255 <ip4_icmp_decode+0x64a>
    4233:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    423a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    423e:	0f b6 c0             	movzx  eax,al
    4241:	89 c6                	mov    esi,eax
    4243:	48 8d 3d a5 94 00 00 	lea    rdi,[rip+0x94a5]        # d6ef <_IO_stdin_used+0x6ef>
    424a:	b8 00 00 00 00       	mov    eax,0x0
    424f:	e8 6c e2 ff ff       	call   24c0 <printf@plt>
    4254:	90                   	nop
    4255:	e9 c6 01 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    425a:	48 8d 3d a7 94 00 00 	lea    rdi,[rip+0x94a7]        # d708 <_IO_stdin_used+0x708>
    4261:	e8 fa e5 ff ff       	call   2860 <puts@plt>
    4266:	e9 b5 01 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    426b:	48 8d 3d b5 94 00 00 	lea    rdi,[rip+0x94b5]        # d727 <_IO_stdin_used+0x727>
    4272:	b8 00 00 00 00       	mov    eax,0x0
    4277:	e8 44 e2 ff ff       	call   24c0 <printf@plt>
    427c:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4283:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4287:	0f b6 c0             	movzx  eax,al
    428a:	83 f8 03             	cmp    eax,0x3
    428d:	74 44                	je     42d3 <ip4_icmp_decode+0x6c8>
    428f:	83 f8 03             	cmp    eax,0x3
    4292:	7f 4d                	jg     42e1 <ip4_icmp_decode+0x6d6>
    4294:	83 f8 02             	cmp    eax,0x2
    4297:	74 2c                	je     42c5 <ip4_icmp_decode+0x6ba>
    4299:	83 f8 02             	cmp    eax,0x2
    429c:	7f 43                	jg     42e1 <ip4_icmp_decode+0x6d6>
    429e:	85 c0                	test   eax,eax
    42a0:	74 07                	je     42a9 <ip4_icmp_decode+0x69e>
    42a2:	83 f8 01             	cmp    eax,0x1
    42a5:	74 10                	je     42b7 <ip4_icmp_decode+0x6ac>
    42a7:	eb 38                	jmp    42e1 <ip4_icmp_decode+0x6d6>
    42a9:	48 8d 3d 83 94 00 00 	lea    rdi,[rip+0x9483]        # d733 <_IO_stdin_used+0x733>
    42b0:	e8 ab e5 ff ff       	call   2860 <puts@plt>
    42b5:	eb 4c                	jmp    4303 <ip4_icmp_decode+0x6f8>
    42b7:	48 8d 3d 8d 94 00 00 	lea    rdi,[rip+0x948d]        # d74b <_IO_stdin_used+0x74b>
    42be:	e8 9d e5 ff ff       	call   2860 <puts@plt>
    42c3:	eb 3e                	jmp    4303 <ip4_icmp_decode+0x6f8>
    42c5:	48 8d 3d 94 94 00 00 	lea    rdi,[rip+0x9494]        # d760 <_IO_stdin_used+0x760>
    42cc:	e8 8f e5 ff ff       	call   2860 <puts@plt>
    42d1:	eb 30                	jmp    4303 <ip4_icmp_decode+0x6f8>
    42d3:	48 8d 3d a6 94 00 00 	lea    rdi,[rip+0x94a6]        # d780 <_IO_stdin_used+0x780>
    42da:	e8 81 e5 ff ff       	call   2860 <puts@plt>
    42df:	eb 22                	jmp    4303 <ip4_icmp_decode+0x6f8>
    42e1:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42e8:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42ec:	0f b6 c0             	movzx  eax,al
    42ef:	89 c6                	mov    esi,eax
    42f1:	48 8d 3d f7 93 00 00 	lea    rdi,[rip+0x93f7]        # d6ef <_IO_stdin_used+0x6ef>
    42f8:	b8 00 00 00 00       	mov    eax,0x0
    42fd:	e8 be e1 ff ff       	call   24c0 <printf@plt>
    4302:	90                   	nop
    4303:	e9 18 01 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    4308:	48 8d 3d 8e 94 00 00 	lea    rdi,[rip+0x948e]        # d79d <_IO_stdin_used+0x79d>
    430f:	e8 4c e5 ff ff       	call   2860 <puts@plt>
    4314:	e9 07 01 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    4319:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4320:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4324:	84 c0                	test   al,al
    4326:	75 16                	jne    433e <ip4_icmp_decode+0x733>
    4328:	48 8d 3d 81 94 00 00 	lea    rdi,[rip+0x9481]        # d7b0 <_IO_stdin_used+0x7b0>
    432f:	b8 00 00 00 00       	mov    eax,0x0
    4334:	e8 87 e1 ff ff       	call   24c0 <printf@plt>
    4339:	e9 e2 00 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    433e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4345:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4349:	0f b6 c0             	movzx  eax,al
    434c:	89 c6                	mov    esi,eax
    434e:	48 8d 3d 9b 94 00 00 	lea    rdi,[rip+0x949b]        # d7f0 <_IO_stdin_used+0x7f0>
    4355:	b8 00 00 00 00       	mov    eax,0x0
    435a:	e8 61 e1 ff ff       	call   24c0 <printf@plt>
    435f:	e9 bc 00 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    4364:	48 8d 3d b2 94 00 00 	lea    rdi,[rip+0x94b2]        # d81d <_IO_stdin_used+0x81d>
    436b:	e8 f0 e4 ff ff       	call   2860 <puts@plt>
    4370:	e9 ab 00 00 00       	jmp    4420 <ip4_icmp_decode+0x815>
    4375:	48 8d 3d b8 94 00 00 	lea    rdi,[rip+0x94b8]        # d834 <_IO_stdin_used+0x834>
    437c:	b8 00 00 00 00       	mov    eax,0x0
    4381:	e8 3a e1 ff ff       	call   24c0 <printf@plt>
    4386:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    438d:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4391:	84 c0                	test   al,al
    4393:	75 0e                	jne    43a3 <ip4_icmp_decode+0x798>
    4395:	48 8d 3d af 94 00 00 	lea    rdi,[rip+0x94af]        # d84b <_IO_stdin_used+0x84b>
    439c:	e8 bf e4 ff ff       	call   2860 <puts@plt>
    43a1:	eb 7d                	jmp    4420 <ip4_icmp_decode+0x815>
    43a3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43aa:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43ae:	3c 01                	cmp    al,0x1
    43b0:	75 0e                	jne    43c0 <ip4_icmp_decode+0x7b5>
    43b2:	48 8d 3d af 94 00 00 	lea    rdi,[rip+0x94af]        # d868 <_IO_stdin_used+0x868>
    43b9:	e8 a2 e4 ff ff       	call   2860 <puts@plt>
    43be:	eb 60                	jmp    4420 <ip4_icmp_decode+0x815>
    43c0:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43c7:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43cb:	0f b6 c0             	movzx  eax,al
    43ce:	89 c6                	mov    esi,eax
    43d0:	48 8d 3d b8 94 00 00 	lea    rdi,[rip+0x94b8]        # d88f <_IO_stdin_used+0x88f>
    43d7:	b8 00 00 00 00       	mov    eax,0x0
    43dc:	e8 df e0 ff ff       	call   24c0 <printf@plt>
    43e1:	eb 3d                	jmp    4420 <ip4_icmp_decode+0x815>
    43e3:	48 8d 3d bb 94 00 00 	lea    rdi,[rip+0x94bb]        # d8a5 <_IO_stdin_used+0x8a5>
    43ea:	e8 71 e4 ff ff       	call   2860 <puts@plt>
    43ef:	eb 2f                	jmp    4420 <ip4_icmp_decode+0x815>
    43f1:	48 8d 3d c0 94 00 00 	lea    rdi,[rip+0x94c0]        # d8b8 <_IO_stdin_used+0x8b8>
    43f8:	e8 63 e4 ff ff       	call   2860 <puts@plt>
    43fd:	eb 21                	jmp    4420 <ip4_icmp_decode+0x815>
    43ff:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4406:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4409:	0f b6 c0             	movzx  eax,al
    440c:	89 c6                	mov    esi,eax
    440e:	48 8d 3d b4 94 00 00 	lea    rdi,[rip+0x94b4]        # d8c9 <_IO_stdin_used+0x8c9>
    4415:	b8 00 00 00 00       	mov    eax,0x0
    441a:	e8 a1 e0 ff ff       	call   24c0 <printf@plt>
    441f:	90                   	nop
    4420:	48 8d 35 6e 8f 00 00 	lea    rsi,[rip+0x8f6e]        # d395 <_IO_stdin_used+0x395>
    4427:	48 8d 3d d8 8e 00 00 	lea    rdi,[rip+0x8ed8]        # d306 <_IO_stdin_used+0x306>
    442e:	b8 00 00 00 00       	mov    eax,0x0
    4433:	e8 88 e0 ff ff       	call   24c0 <printf@plt>
    4438:	90                   	nop
    4439:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    443d:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4444:	00 00 
    4446:	74 05                	je     444d <ip4_icmp_decode+0x842>
    4448:	e8 83 e2 ff ff       	call   26d0 <__stack_chk_fail@plt>
    444d:	c9                   	leave  
    444e:	c3                   	ret    

000000000000444f <ip4_tcp_decode>:
    444f:	f3 0f 1e fa          	endbr64 
    4453:	55                   	push   rbp
    4454:	48 89 e5             	mov    rbp,rsp
    4457:	53                   	push   rbx
    4458:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    445f:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    4463:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    4467:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    446e:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4472:	48 83 c0 22          	add    rax,0x22
    4476:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    447a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    447e:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4482:	c0 e8 04             	shr    al,0x4
    4485:	0f b6 c0             	movzx  eax,al
    4488:	c1 e0 02             	shl    eax,0x2
    448b:	48 98                	cdqe   
    448d:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4491:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4495:	48 01 c2             	add    rdx,rax
    4498:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    449c:	48 89 10             	mov    QWORD PTR [rax],rdx
    449f:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44a3:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    44a6:	89 c2                	mov    edx,eax
    44a8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44ac:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    44b0:	c0 e8 04             	shr    al,0x4
    44b3:	0f b6 c0             	movzx  eax,al
    44b6:	c1 e0 02             	shl    eax,0x2
    44b9:	89 c1                	mov    ecx,eax
    44bb:	89 d0                	mov    eax,edx
    44bd:	29 c8                	sub    eax,ecx
    44bf:	83 e8 22             	sub    eax,0x22
    44c2:	89 c2                	mov    edx,eax
    44c4:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44c8:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    44cb:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44cf:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    44d3:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    44d7:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44db:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    44df:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    44e3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    44e7:	ba 5c 00 00 00       	mov    edx,0x5c
    44ec:	be 01 00 00 00       	mov    esi,0x1
    44f1:	48 89 c7             	mov    rdi,rax
    44f4:	e8 1a 0a 00 00       	call   4f13 <add_ip_addr_or_inc_counter>
    44f9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    44fd:	ba 5c 00 00 00       	mov    edx,0x5c
    4502:	be 00 00 00 00       	mov    esi,0x0
    4507:	48 89 c7             	mov    rdi,rax
    450a:	e8 04 0a 00 00       	call   4f13 <add_ip_addr_or_inc_counter>
    450f:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
    4516:	c6 45 9f 00          	mov    BYTE PTR [rbp-0x61],0x0
    451a:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
    451e:	c6 45 a1 00          	mov    BYTE PTR [rbp-0x5f],0x0
    4522:	c6 45 a2 00          	mov    BYTE PTR [rbp-0x5e],0x0
    4526:	c6 45 a3 00          	mov    BYTE PTR [rbp-0x5d],0x0
    452a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    452e:	48 83 c0 60          	add    rax,0x60
    4532:	ba 08 00 00 00       	mov    edx,0x8
    4537:	be 00 00 00 00       	mov    esi,0x0
    453c:	48 89 c7             	mov    rdi,rax
    453f:	e8 cc e0 ff ff       	call   2610 <memset@plt>
    4544:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4548:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    454c:	0f b7 c0             	movzx  eax,ax
    454f:	89 c7                	mov    edi,eax
    4551:	e8 aa e3 ff ff       	call   2900 <ntohs@plt>
    4556:	0f b7 c0             	movzx  eax,ax
    4559:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    455c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4560:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4563:	0f b7 c0             	movzx  eax,ax
    4566:	89 c7                	mov    edi,eax
    4568:	e8 93 e3 ff ff       	call   2900 <ntohs@plt>
    456d:	0f b7 c0             	movzx  eax,ax
    4570:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    4573:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4577:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    457b:	0f b7 c0             	movzx  eax,ax
    457e:	89 c7                	mov    edi,eax
    4580:	e8 7b e3 ff ff       	call   2900 <ntohs@plt>
    4585:	0f b7 d0             	movzx  edx,ax
    4588:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    458c:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    458f:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4593:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    4596:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4599:	0f b6 05 c4 69 10 00 	movzx  eax,BYTE PTR [rip+0x1069c4]        # 10af64 <packet_print>
    45a0:	84 c0                	test   al,al
    45a2:	74 4e                	je     45f2 <ip4_tcp_decode+0x1a3>
    45a4:	48 8d 35 b5 93 00 00 	lea    rsi,[rip+0x93b5]        # d960 <_IO_stdin_used+0x960>
    45ab:	48 8d 3d b4 93 00 00 	lea    rdi,[rip+0x93b4]        # d966 <_IO_stdin_used+0x966>
    45b2:	b8 00 00 00 00       	mov    eax,0x0
    45b7:	e8 04 df ff ff       	call   24c0 <printf@plt>
    45bc:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
    45bf:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    45c3:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    45c6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    45ca:	41 89 f0             	mov    r8d,esi
    45cd:	48 89 c6             	mov    rsi,rax
    45d0:	48 8d 3d 92 93 00 00 	lea    rdi,[rip+0x9392]        # d969 <_IO_stdin_used+0x969>
    45d7:	b8 00 00 00 00       	mov    eax,0x0
    45dc:	e8 df de ff ff       	call   24c0 <printf@plt>
    45e1:	48 8d 3d 96 93 00 00 	lea    rdi,[rip+0x9396]        # d97e <_IO_stdin_used+0x97e>
    45e8:	b8 00 00 00 00       	mov    eax,0x0
    45ed:	e8 ce de ff ff       	call   24c0 <printf@plt>
    45f2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    45f6:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    45fa:	c0 e8 04             	shr    al,0x4
    45fd:	83 e0 01             	and    eax,0x1
    4600:	0f b6 c0             	movzx  eax,al
    4603:	89 c7                	mov    edi,eax
    4605:	e8 f6 e2 ff ff       	call   2900 <ntohs@plt>
    460a:	66 85 c0             	test   ax,ax
    460d:	74 43                	je     4652 <ip4_tcp_decode+0x203>
    460f:	0f b6 05 4e 69 10 00 	movzx  eax,BYTE PTR [rip+0x10694e]        # 10af64 <packet_print>
    4616:	84 c0                	test   al,al
    4618:	74 18                	je     4632 <ip4_tcp_decode+0x1e3>
    461a:	48 8d 35 64 93 00 00 	lea    rsi,[rip+0x9364]        # d985 <_IO_stdin_used+0x985>
    4621:	48 8d 3d 63 93 00 00 	lea    rdi,[rip+0x9363]        # d98b <_IO_stdin_used+0x98b>
    4628:	b8 00 00 00 00       	mov    eax,0x0
    462d:	e8 8e de ff ff       	call   24c0 <printf@plt>
    4632:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
    4636:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    463a:	48 8d 58 60          	lea    rbx,[rax+0x60]
    463e:	48 89 df             	mov    rdi,rbx
    4641:	e8 5a df ff ff       	call   25a0 <strlen@plt>
    4646:	48 01 d8             	add    rax,rbx
    4649:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    464e:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4652:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4656:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    465a:	83 e0 01             	and    eax,0x1
    465d:	0f b6 c0             	movzx  eax,al
    4660:	89 c7                	mov    edi,eax
    4662:	e8 99 e2 ff ff       	call   2900 <ntohs@plt>
    4667:	66 85 c0             	test   ax,ax
    466a:	74 43                	je     46af <ip4_tcp_decode+0x260>
    466c:	0f b6 05 f1 68 10 00 	movzx  eax,BYTE PTR [rip+0x1068f1]        # 10af64 <packet_print>
    4673:	84 c0                	test   al,al
    4675:	74 18                	je     468f <ip4_tcp_decode+0x240>
    4677:	48 8d 35 15 93 00 00 	lea    rsi,[rip+0x9315]        # d993 <_IO_stdin_used+0x993>
    467e:	48 8d 3d 14 93 00 00 	lea    rdi,[rip+0x9314]        # d999 <_IO_stdin_used+0x999>
    4685:	b8 00 00 00 00       	mov    eax,0x0
    468a:	e8 31 de ff ff       	call   24c0 <printf@plt>
    468f:	c6 45 a2 01          	mov    BYTE PTR [rbp-0x5e],0x1
    4693:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4697:	48 8d 58 60          	lea    rbx,[rax+0x60]
    469b:	48 89 df             	mov    rdi,rbx
    469e:	e8 fd de ff ff       	call   25a0 <strlen@plt>
    46a3:	48 01 d8             	add    rax,rbx
    46a6:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    46ab:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    46af:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46b3:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46b7:	c0 e8 03             	shr    al,0x3
    46ba:	83 e0 01             	and    eax,0x1
    46bd:	0f b6 c0             	movzx  eax,al
    46c0:	89 c7                	mov    edi,eax
    46c2:	e8 39 e2 ff ff       	call   2900 <ntohs@plt>
    46c7:	66 85 c0             	test   ax,ax
    46ca:	74 43                	je     470f <ip4_tcp_decode+0x2c0>
    46cc:	0f b6 05 91 68 10 00 	movzx  eax,BYTE PTR [rip+0x106891]        # 10af64 <packet_print>
    46d3:	84 c0                	test   al,al
    46d5:	74 18                	je     46ef <ip4_tcp_decode+0x2a0>
    46d7:	48 8d 35 c3 92 00 00 	lea    rsi,[rip+0x92c3]        # d9a1 <_IO_stdin_used+0x9a1>
    46de:	48 8d 3d c2 92 00 00 	lea    rdi,[rip+0x92c2]        # d9a7 <_IO_stdin_used+0x9a7>
    46e5:	b8 00 00 00 00       	mov    eax,0x0
    46ea:	e8 d1 dd ff ff       	call   24c0 <printf@plt>
    46ef:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    46f3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46f7:	48 8d 58 60          	lea    rbx,[rax+0x60]
    46fb:	48 89 df             	mov    rdi,rbx
    46fe:	e8 9d de ff ff       	call   25a0 <strlen@plt>
    4703:	48 01 d8             	add    rax,rbx
    4706:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    470b:	c6 45 a3 01          	mov    BYTE PTR [rbp-0x5d],0x1
    470f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4713:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4717:	c0 e8 02             	shr    al,0x2
    471a:	83 e0 01             	and    eax,0x1
    471d:	0f b6 c0             	movzx  eax,al
    4720:	89 c7                	mov    edi,eax
    4722:	e8 d9 e1 ff ff       	call   2900 <ntohs@plt>
    4727:	66 85 c0             	test   ax,ax
    472a:	74 43                	je     476f <ip4_tcp_decode+0x320>
    472c:	0f b6 05 31 68 10 00 	movzx  eax,BYTE PTR [rip+0x106831]        # 10af64 <packet_print>
    4733:	84 c0                	test   al,al
    4735:	74 18                	je     474f <ip4_tcp_decode+0x300>
    4737:	48 8d 35 71 92 00 00 	lea    rsi,[rip+0x9271]        # d9af <_IO_stdin_used+0x9af>
    473e:	48 8d 3d 70 92 00 00 	lea    rdi,[rip+0x9270]        # d9b5 <_IO_stdin_used+0x9b5>
    4745:	b8 00 00 00 00       	mov    eax,0x0
    474a:	e8 71 dd ff ff       	call   24c0 <printf@plt>
    474f:	c6 45 9f 01          	mov    BYTE PTR [rbp-0x61],0x1
    4753:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4757:	48 8d 58 60          	lea    rbx,[rax+0x60]
    475b:	48 89 df             	mov    rdi,rbx
    475e:	e8 3d de ff ff       	call   25a0 <strlen@plt>
    4763:	48 01 d8             	add    rax,rbx
    4766:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    476b:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    476f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4773:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4777:	d0 e8                	shr    al,1
    4779:	83 e0 01             	and    eax,0x1
    477c:	0f b6 c0             	movzx  eax,al
    477f:	89 c7                	mov    edi,eax
    4781:	e8 7a e1 ff ff       	call   2900 <ntohs@plt>
    4786:	66 85 c0             	test   ax,ax
    4789:	74 43                	je     47ce <ip4_tcp_decode+0x37f>
    478b:	0f b6 05 d2 67 10 00 	movzx  eax,BYTE PTR [rip+0x1067d2]        # 10af64 <packet_print>
    4792:	84 c0                	test   al,al
    4794:	74 18                	je     47ae <ip4_tcp_decode+0x35f>
    4796:	48 8d 35 20 92 00 00 	lea    rsi,[rip+0x9220]        # d9bd <_IO_stdin_used+0x9bd>
    479d:	48 8d 3d 1f 92 00 00 	lea    rdi,[rip+0x921f]        # d9c3 <_IO_stdin_used+0x9c3>
    47a4:	b8 00 00 00 00       	mov    eax,0x0
    47a9:	e8 12 dd ff ff       	call   24c0 <printf@plt>
    47ae:	c6 45 a1 01          	mov    BYTE PTR [rbp-0x5f],0x1
    47b2:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    47b6:	48 8d 58 60          	lea    rbx,[rax+0x60]
    47ba:	48 89 df             	mov    rdi,rbx
    47bd:	e8 de dd ff ff       	call   25a0 <strlen@plt>
    47c2:	48 01 d8             	add    rax,rbx
    47c5:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    47ca:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    47ce:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    47d2:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    47d6:	c0 e8 05             	shr    al,0x5
    47d9:	83 e0 01             	and    eax,0x1
    47dc:	0f b6 c0             	movzx  eax,al
    47df:	89 c7                	mov    edi,eax
    47e1:	e8 1a e1 ff ff       	call   2900 <ntohs@plt>
    47e6:	66 85 c0             	test   ax,ax
    47e9:	74 3f                	je     482a <ip4_tcp_decode+0x3db>
    47eb:	0f b6 05 72 67 10 00 	movzx  eax,BYTE PTR [rip+0x106772]        # 10af64 <packet_print>
    47f2:	84 c0                	test   al,al
    47f4:	74 18                	je     480e <ip4_tcp_decode+0x3bf>
    47f6:	48 8d 35 ce 91 00 00 	lea    rsi,[rip+0x91ce]        # d9cb <_IO_stdin_used+0x9cb>
    47fd:	48 8d 3d cd 91 00 00 	lea    rdi,[rip+0x91cd]        # d9d1 <_IO_stdin_used+0x9d1>
    4804:	b8 00 00 00 00       	mov    eax,0x0
    4809:	e8 b2 dc ff ff       	call   24c0 <printf@plt>
    480e:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4812:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4816:	48 8d 58 60          	lea    rbx,[rax+0x60]
    481a:	48 89 df             	mov    rdi,rbx
    481d:	e8 7e dd ff ff       	call   25a0 <strlen@plt>
    4822:	48 01 d8             	add    rax,rbx
    4825:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    482a:	0f b6 05 33 67 10 00 	movzx  eax,BYTE PTR [rip+0x106733]        # 10af64 <packet_print>
    4831:	84 c0                	test   al,al
    4833:	74 3c                	je     4871 <ip4_tcp_decode+0x422>
    4835:	48 8d 35 24 91 00 00 	lea    rsi,[rip+0x9124]        # d960 <_IO_stdin_used+0x960>
    483c:	48 8d 3d 23 91 00 00 	lea    rdi,[rip+0x9123]        # d966 <_IO_stdin_used+0x966>
    4843:	b8 00 00 00 00       	mov    eax,0x0
    4848:	e8 73 dc ff ff       	call   24c0 <printf@plt>
    484d:	48 8d 3d 85 91 00 00 	lea    rdi,[rip+0x9185]        # d9d9 <_IO_stdin_used+0x9d9>
    4854:	e8 07 e0 ff ff       	call   2860 <puts@plt>
    4859:	48 8d 35 7b 91 00 00 	lea    rsi,[rip+0x917b]        # d9db <_IO_stdin_used+0x9db>
    4860:	48 8d 3d ff 90 00 00 	lea    rdi,[rip+0x90ff]        # d966 <_IO_stdin_used+0x966>
    4867:	b8 00 00 00 00       	mov    eax,0x0
    486c:	e8 4f dc ff ff       	call   24c0 <printf@plt>
    4871:	83 7d a4 03          	cmp    DWORD PTR [rbp-0x5c],0x3
    4875:	7f 06                	jg     487d <ip4_tcp_decode+0x42e>
    4877:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
    487b:	75 41                	jne    48be <ip4_tcp_decode+0x46f>
    487d:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
    4880:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    4884:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    4887:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    488b:	48 8d 0d 49 91 00 00 	lea    rcx,[rip+0x9149]        # d9db <_IO_stdin_used+0x9db>
    4892:	51                   	push   rcx
    4893:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
    4896:	51                   	push   rcx
    4897:	41 89 f9             	mov    r9d,edi
    489a:	49 89 f0             	mov    r8,rsi
    489d:	89 d1                	mov    ecx,edx
    489f:	48 89 c2             	mov    rdx,rax
    48a2:	48 8d 35 06 91 00 00 	lea    rsi,[rip+0x9106]        # d9af <_IO_stdin_used+0x9af>
    48a9:	48 8d 3d 30 91 00 00 	lea    rdi,[rip+0x9130]        # d9e0 <_IO_stdin_used+0x9e0>
    48b0:	b8 00 00 00 00       	mov    eax,0x0
    48b5:	e8 06 dc ff ff       	call   24c0 <printf@plt>
    48ba:	48 83 c4 10          	add    rsp,0x10
    48be:	0f b6 05 0d 47 13 00 	movzx  eax,BYTE PTR [rip+0x13470d]        # 138fd2 <use_spi>
    48c5:	84 c0                	test   al,al
    48c7:	0f 84 8c 00 00 00    	je     4959 <ip4_tcp_decode+0x50a>
    48cd:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    48d1:	74 1a                	je     48ed <ip4_tcp_decode+0x49e>
    48d3:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48d7:	74 14                	je     48ed <ip4_tcp_decode+0x49e>
    48d9:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    48dd:	75 0e                	jne    48ed <ip4_tcp_decode+0x49e>
    48df:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48e3:	48 89 c7             	mov    rdi,rax
    48e6:	e8 8d 5e 00 00       	call   a778 <handle_data_pkt>
    48eb:	eb 6c                	jmp    4959 <ip4_tcp_decode+0x50a>
    48ed:	80 7d a2 00          	cmp    BYTE PTR [rbp-0x5e],0x0
    48f1:	74 14                	je     4907 <ip4_tcp_decode+0x4b8>
    48f3:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48f7:	74 0e                	je     4907 <ip4_tcp_decode+0x4b8>
    48f9:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48fd:	48 89 c7             	mov    rdi,rax
    4900:	e8 66 5d 00 00       	call   a66b <polite_end>
    4905:	eb 52                	jmp    4959 <ip4_tcp_decode+0x50a>
    4907:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    490b:	74 14                	je     4921 <ip4_tcp_decode+0x4d2>
    490d:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    4911:	75 0e                	jne    4921 <ip4_tcp_decode+0x4d2>
    4913:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4917:	48 89 c7             	mov    rdi,rax
    491a:	e8 c4 58 00 00       	call   a1e3 <add_new_conversation>
    491f:	eb 38                	jmp    4959 <ip4_tcp_decode+0x50a>
    4921:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4925:	74 1a                	je     4941 <ip4_tcp_decode+0x4f2>
    4927:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    492b:	74 14                	je     4941 <ip4_tcp_decode+0x4f2>
    492d:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4931:	75 0e                	jne    4941 <ip4_tcp_decode+0x4f2>
    4933:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4937:	48 89 c7             	mov    rdi,rax
    493a:	e8 ce 5a 00 00       	call   a40d <spi_ud_thw>
    493f:	eb 18                	jmp    4959 <ip4_tcp_decode+0x50a>
    4941:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4945:	74 12                	je     4959 <ip4_tcp_decode+0x50a>
    4947:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    494b:	75 0c                	jne    4959 <ip4_tcp_decode+0x50a>
    494d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4951:	48 89 c7             	mov    rdi,rax
    4954:	e8 77 5b 00 00       	call   a4d0 <update_table>
    4959:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    495d:	74 17                	je     4976 <ip4_tcp_decode+0x527>
    495f:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4963:	74 11                	je     4976 <ip4_tcp_decode+0x527>
    4965:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4969:	75 0b                	jne    4976 <ip4_tcp_decode+0x527>
    496b:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    496f:	c7 40 68 01 00 00 00 	mov    DWORD PTR [rax+0x68],0x1
    4976:	80 7d 9f 00          	cmp    BYTE PTR [rbp-0x61],0x0
    497a:	0f 84 8f 01 00 00    	je     4b0f <ip4_tcp_decode+0x6c0>
    4980:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4984:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4988:	48 89 c7             	mov    rdi,rax
    498b:	e8 bd 48 00 00       	call   924d <member_exists>
    4990:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    4993:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    4997:	0f 84 db 00 00 00    	je     4a78 <ip4_tcp_decode+0x629>
    499d:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    49a0:	48 63 d0             	movsxd rdx,eax
    49a3:	48 89 d0             	mov    rax,rdx
    49a6:	48 c1 e0 02          	shl    rax,0x2
    49aa:	48 01 d0             	add    rax,rdx
    49ad:	48 c1 e0 03          	shl    rax,0x3
    49b1:	48 01 d0             	add    rax,rdx
    49b4:	48 c1 e0 04          	shl    rax,0x4
    49b8:	48 8d 15 61 fb 0e 00 	lea    rdx,[rip+0xefb61]        # f4520 <watchlist>
    49bf:	48 01 d0             	add    rax,rdx
    49c2:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    49c6:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    49ca:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49ce:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    49d2:	48 83 c2 08          	add    rdx,0x8
    49d6:	48 89 c6             	mov    rsi,rax
    49d9:	48 89 d7             	mov    rdi,rdx
    49dc:	e8 bf dc ff ff       	call   26a0 <strcpy@plt>
    49e1:	bf 00 00 00 00       	mov    edi,0x0
    49e6:	e8 a5 dc ff ff       	call   2690 <time@plt>
    49eb:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    49ef:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    49f5:	8d 72 01             	lea    esi,[rdx+0x1]
    49f8:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    49fc:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a02:	48 89 c1             	mov    rcx,rax
    4a05:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a09:	89 d2                	mov    edx,edx
    4a0b:	48 83 c2 28          	add    rdx,0x28
    4a0f:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4a14:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a18:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a1e:	83 f8 1d             	cmp    eax,0x1d
    4a21:	0f 86 e8 00 00 00    	jbe    4b0f <ip4_tcp_decode+0x6c0>
    4a27:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a2b:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4a32:	00 00 00 
    4a35:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a39:	48 89 c7             	mov    rdi,rax
    4a3c:	e8 ca 43 00 00       	call   8e0b <tcp_rst_portscan_detect>
    4a41:	84 c0                	test   al,al
    4a43:	0f 84 c6 00 00 00    	je     4b0f <ip4_tcp_decode+0x6c0>
    4a49:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a4d:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a54:	00 00 00 
    4a57:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a5b:	48 05 50 01 00 00    	add    rax,0x150
    4a61:	ba f0 00 00 00       	mov    edx,0xf0
    4a66:	be 00 00 00 00       	mov    esi,0x0
    4a6b:	48 89 c7             	mov    rdi,rax
    4a6e:	e8 9d db ff ff       	call   2610 <memset@plt>
    4a73:	e9 97 00 00 00       	jmp    4b0f <ip4_tcp_decode+0x6c0>
    4a78:	8b 05 9a d5 00 00    	mov    eax,DWORD PTR [rip+0xd59a]        # 12018 <watchlist_num>
    4a7e:	83 c0 01             	add    eax,0x1
    4a81:	89 05 91 d5 00 00    	mov    DWORD PTR [rip+0xd591],eax        # 12018 <watchlist_num>
    4a87:	8b 05 8b d5 00 00    	mov    eax,DWORD PTR [rip+0xd58b]        # 12018 <watchlist_num>
    4a8d:	48 63 d0             	movsxd rdx,eax
    4a90:	48 89 d0             	mov    rax,rdx
    4a93:	48 c1 e0 02          	shl    rax,0x2
    4a97:	48 01 d0             	add    rax,rdx
    4a9a:	48 c1 e0 03          	shl    rax,0x3
    4a9e:	48 01 d0             	add    rax,rdx
    4aa1:	48 c1 e0 04          	shl    rax,0x4
    4aa5:	48 8d 15 74 fa 0e 00 	lea    rdx,[rip+0xefa74]        # f4520 <watchlist>
    4aac:	48 01 d0             	add    rax,rdx
    4aaf:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4ab3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4ab7:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4abb:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4abf:	48 83 c2 08          	add    rdx,0x8
    4ac3:	48 89 c6             	mov    rsi,rax
    4ac6:	48 89 d7             	mov    rdi,rdx
    4ac9:	e8 d2 db ff ff       	call   26a0 <strcpy@plt>
    4ace:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4ad2:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4ad9:	00 00 00 
    4adc:	bf 00 00 00 00       	mov    edi,0x0
    4ae1:	e8 aa db ff ff       	call   2690 <time@plt>
    4ae6:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4aea:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4af0:	8d 72 01             	lea    esi,[rdx+0x1]
    4af3:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4af7:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4afd:	48 89 c1             	mov    rcx,rax
    4b00:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4b04:	89 d2                	mov    edx,edx
    4b06:	48 83 c2 28          	add    rdx,0x28
    4b0a:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4b0f:	8b 05 73 d5 00 00    	mov    eax,DWORD PTR [rip+0xd573]        # 12088 <strict_nmap_host_alive_check>
    4b15:	83 f8 01             	cmp    eax,0x1
    4b18:	0f 85 f6 00 00 00    	jne    4c14 <ip4_tcp_decode+0x7c5>
    4b1e:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4b22:	74 0c                	je     4b30 <ip4_tcp_decode+0x6e1>
    4b24:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4b28:	74 26                	je     4b50 <ip4_tcp_decode+0x701>
    4b2a:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4b2e:	74 20                	je     4b50 <ip4_tcp_decode+0x701>
    4b30:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4b34:	0f 84 da 00 00 00    	je     4c14 <ip4_tcp_decode+0x7c5>
    4b3a:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4b41:	74 0d                	je     4b50 <ip4_tcp_decode+0x701>
    4b43:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4b4a:	0f 85 c4 00 00 00    	jne    4c14 <ip4_tcp_decode+0x7c5>
    4b50:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    4b53:	3b 45 ac             	cmp    eax,DWORD PTR [rbp-0x54]
    4b56:	76 0a                	jbe    4b62 <ip4_tcp_decode+0x713>
    4b58:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4b5c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b60:	eb 08                	jmp    4b6a <ip4_tcp_decode+0x71b>
    4b62:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4b66:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b6a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4b6e:	48 89 c7             	mov    rdi,rax
    4b71:	e8 d7 46 00 00       	call   924d <member_exists>
    4b76:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4b79:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    4b7d:	0f 84 91 00 00 00    	je     4c14 <ip4_tcp_decode+0x7c5>
    4b83:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4b86:	48 63 d0             	movsxd rdx,eax
    4b89:	48 89 d0             	mov    rax,rdx
    4b8c:	48 c1 e0 02          	shl    rax,0x2
    4b90:	48 01 d0             	add    rax,rdx
    4b93:	48 c1 e0 03          	shl    rax,0x3
    4b97:	48 01 d0             	add    rax,rdx
    4b9a:	48 c1 e0 04          	shl    rax,0x4
    4b9e:	48 8d 15 7b f9 0e 00 	lea    rdx,[rip+0xef97b]        # f4520 <watchlist>
    4ba5:	48 01 d0             	add    rax,rdx
    4ba8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4bac:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bb0:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4bb3:	85 c0                	test   eax,eax
    4bb5:	75 2a                	jne    4be1 <ip4_tcp_decode+0x792>
    4bb7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bbb:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bbe:	83 f8 01             	cmp    eax,0x1
    4bc1:	75 1e                	jne    4be1 <ip4_tcp_decode+0x792>
    4bc3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bc7:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4bce:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bd2:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bd5:	8d 50 01             	lea    edx,[rax+0x1]
    4bd8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bdc:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4bdf:	eb 33                	jmp    4c14 <ip4_tcp_decode+0x7c5>
    4be1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4be5:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4be8:	85 c0                	test   eax,eax
    4bea:	75 28                	jne    4c14 <ip4_tcp_decode+0x7c5>
    4bec:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bf0:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bf3:	83 f8 02             	cmp    eax,0x2
    4bf6:	75 1c                	jne    4c14 <ip4_tcp_decode+0x7c5>
    4bf8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bfc:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4c03:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c07:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c0a:	8d 50 01             	lea    edx,[rax+0x1]
    4c0d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c11:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c14:	0f b6 05 49 63 10 00 	movzx  eax,BYTE PTR [rip+0x106349]        # 10af64 <packet_print>
    4c1b:	84 c0                	test   al,al
    4c1d:	74 3a                	je     4c59 <ip4_tcp_decode+0x80a>
    4c1f:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4c23:	74 34                	je     4c59 <ip4_tcp_decode+0x80a>
    4c25:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4c29:	74 2e                	je     4c59 <ip4_tcp_decode+0x80a>
    4c2b:	0f b6 45 a2          	movzx  eax,BYTE PTR [rbp-0x5e]
    4c2f:	83 f0 01             	xor    eax,0x1
    4c32:	84 c0                	test   al,al
    4c34:	74 23                	je     4c59 <ip4_tcp_decode+0x80a>
    4c36:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4c3a:	74 06                	je     4c42 <ip4_tcp_decode+0x7f3>
    4c3c:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4c40:	75 17                	jne    4c59 <ip4_tcp_decode+0x80a>
    4c42:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4c46:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4c4a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c4e:	48 89 c6             	mov    rsi,rax
    4c51:	48 89 d7             	mov    rdi,rdx
    4c54:	e8 ba 4f 00 00       	call   9c13 <http_disect>
    4c59:	83 7d a8 15          	cmp    DWORD PTR [rbp-0x58],0x15
    4c5d:	74 06                	je     4c65 <ip4_tcp_decode+0x816>
    4c5f:	83 7d ac 15          	cmp    DWORD PTR [rbp-0x54],0x15
    4c63:	75 2d                	jne    4c92 <ip4_tcp_decode+0x843>
    4c65:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4c69:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c6d:	c0 e8 04             	shr    al,0x4
    4c70:	0f b6 c0             	movzx  eax,al
    4c73:	c1 e0 02             	shl    eax,0x2
    4c76:	48 98                	cdqe   
    4c78:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4c7c:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4c80:	48 01 c2             	add    rdx,rax
    4c83:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c87:	48 89 c6             	mov    rsi,rax
    4c8a:	48 89 d7             	mov    rdi,rdx
    4c8d:	e8 6c 51 00 00       	call   9dfe <ftp_disect>
    4c92:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4c99:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4c9c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4ca0:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4ca4:	c0 e8 04             	shr    al,0x4
    4ca7:	0f b6 c0             	movzx  eax,al
    4caa:	c1 e0 02             	shl    eax,0x2
    4cad:	89 c1                	mov    ecx,eax
    4caf:	89 d0                	mov    eax,edx
    4cb1:	29 c8                	sub    eax,ecx
    4cb3:	8d 50 de             	lea    edx,[rax-0x22]
    4cb6:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4cba:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4cbd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4cc1:	48 89 c7             	mov    rdi,rax
    4cc4:	e8 4b 17 00 00       	call   6414 <rulemgr>
    4cc9:	90                   	nop
    4cca:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4cce:	c9                   	leave  
    4ccf:	c3                   	ret    

0000000000004cd0 <ip4_udp_decode>:
    4cd0:	f3 0f 1e fa          	endbr64 
    4cd4:	55                   	push   rbp
    4cd5:	48 89 e5             	mov    rbp,rsp
    4cd8:	48 83 ec 30          	sub    rsp,0x30
    4cdc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4ce0:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4ce4:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4ce8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4cec:	48 83 c0 22          	add    rax,0x22
    4cf0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4cf4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4cf8:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4cfc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d00:	48 89 10             	mov    QWORD PTR [rax],rdx
    4d03:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d07:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d0b:	ba 5d 00 00 00       	mov    edx,0x5d
    4d10:	be 01 00 00 00       	mov    esi,0x1
    4d15:	48 89 c7             	mov    rdi,rax
    4d18:	e8 f6 01 00 00       	call   4f13 <add_ip_addr_or_inc_counter>
    4d1d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d21:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4d25:	ba 5d 00 00 00       	mov    edx,0x5d
    4d2a:	be 00 00 00 00       	mov    esi,0x0
    4d2f:	48 89 c7             	mov    rdi,rax
    4d32:	e8 dc 01 00 00       	call   4f13 <add_ip_addr_or_inc_counter>
    4d37:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d3b:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4d3e:	0f b7 c0             	movzx  eax,ax
    4d41:	89 c7                	mov    edi,eax
    4d43:	e8 b8 db ff ff       	call   2900 <ntohs@plt>
    4d48:	0f b7 c0             	movzx  eax,ax
    4d4b:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4d4e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d52:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4d56:	0f b7 c0             	movzx  eax,ax
    4d59:	89 c7                	mov    edi,eax
    4d5b:	e8 a0 db ff ff       	call   2900 <ntohs@plt>
    4d60:	0f b7 c0             	movzx  eax,ax
    4d63:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4d66:	0f b6 05 f7 61 10 00 	movzx  eax,BYTE PTR [rip+0x1061f7]        # 10af64 <packet_print>
    4d6d:	84 c0                	test   al,al
    4d6f:	74 5d                	je     4dce <ip4_udp_decode+0xfe>
    4d71:	48 8d 35 a8 8c 00 00 	lea    rsi,[rip+0x8ca8]        # da20 <_IO_stdin_used+0xa20>
    4d78:	48 8d 3d a7 8c 00 00 	lea    rdi,[rip+0x8ca7]        # da26 <_IO_stdin_used+0xa26>
    4d7f:	b8 00 00 00 00       	mov    eax,0x0
    4d84:	e8 37 d7 ff ff       	call   24c0 <printf@plt>
    4d89:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d8d:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4d91:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d95:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d99:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4d9c:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4d9f:	41 89 f0             	mov    r8d,esi
    4da2:	48 89 c6             	mov    rsi,rax
    4da5:	48 8d 3d 7d 8c 00 00 	lea    rdi,[rip+0x8c7d]        # da29 <_IO_stdin_used+0xa29>
    4dac:	b8 00 00 00 00       	mov    eax,0x0
    4db1:	e8 0a d7 ff ff       	call   24c0 <printf@plt>
    4db6:	48 8d 35 85 8c 00 00 	lea    rsi,[rip+0x8c85]        # da42 <_IO_stdin_used+0xa42>
    4dbd:	48 8d 3d 62 8c 00 00 	lea    rdi,[rip+0x8c62]        # da26 <_IO_stdin_used+0xa26>
    4dc4:	b8 00 00 00 00       	mov    eax,0x0
    4dc9:	e8 f2 d6 ff ff       	call   24c0 <printf@plt>
    4dce:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dd2:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4dd5:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4dd8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4ddc:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4ddf:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4de2:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4de6:	74 06                	je     4dee <ip4_udp_decode+0x11e>
    4de8:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4dec:	75 17                	jne    4e05 <ip4_udp_decode+0x135>
    4dee:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4df2:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4df6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dfa:	48 89 c6             	mov    rsi,rax
    4dfd:	48 89 d7             	mov    rdi,rdx
    4e00:	e8 c0 4e 00 00       	call   9cc5 <dns_disect>
    4e05:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4e09:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4e0c:	8d 50 d6             	lea    edx,[rax-0x2a]
    4e0f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e13:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4e16:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e1a:	48 89 c7             	mov    rdi,rax
    4e1d:	e8 f2 15 00 00       	call   6414 <rulemgr>
    4e22:	90                   	nop
    4e23:	c9                   	leave  
    4e24:	c3                   	ret    

0000000000004e25 <ip4_igmp_decode>:
    4e25:	f3 0f 1e fa          	endbr64 
    4e29:	55                   	push   rbp
    4e2a:	48 89 e5             	mov    rbp,rsp
    4e2d:	48 83 ec 60          	sub    rsp,0x60
    4e31:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4e35:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4e39:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4e3d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4e44:	00 00 
    4e46:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4e4a:	31 c0                	xor    eax,eax
    4e4c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4e50:	48 83 c0 26          	add    rax,0x26
    4e54:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4e58:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4e5c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4e60:	48 89 c6             	mov    rsi,rax
    4e63:	48 8d 3d de 8b 00 00 	lea    rdi,[rip+0x8bde]        # da48 <_IO_stdin_used+0xa48>
    4e6a:	b8 00 00 00 00       	mov    eax,0x0
    4e6f:	e8 4c d6 ff ff       	call   24c0 <printf@plt>
    4e74:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4e78:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4e7b:	0f b6 c0             	movzx  eax,al
    4e7e:	83 f8 11             	cmp    eax,0x11
    4e81:	74 07                	je     4e8a <ip4_igmp_decode+0x65>
    4e83:	83 f8 22             	cmp    eax,0x22
    4e86:	74 10                	je     4e98 <ip4_igmp_decode+0x73>
    4e88:	eb 54                	jmp    4ede <ip4_igmp_decode+0xb9>
    4e8a:	48 8d 3d cc 8b 00 00 	lea    rdi,[rip+0x8bcc]        # da5d <_IO_stdin_used+0xa5d>
    4e91:	e8 ca d9 ff ff       	call   2860 <puts@plt>
    4e96:	eb 64                	jmp    4efc <ip4_igmp_decode+0xd7>
    4e98:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4e9c:	48 83 c0 26          	add    rax,0x26
    4ea0:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4ea4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4ea8:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4eab:	89 c7                	mov    edi,eax
    4ead:	e8 cd e2 ff ff       	call   317f <ipv4_ntoa>
    4eb2:	48 89 c2             	mov    rdx,rax
    4eb5:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4eb9:	48 89 d6             	mov    rsi,rdx
    4ebc:	48 89 c7             	mov    rdi,rax
    4ebf:	e8 dc d7 ff ff       	call   26a0 <strcpy@plt>
    4ec4:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4ec8:	48 89 c6             	mov    rsi,rax
    4ecb:	48 8d 3d a6 8b 00 00 	lea    rdi,[rip+0x8ba6]        # da78 <_IO_stdin_used+0xa78>
    4ed2:	b8 00 00 00 00       	mov    eax,0x0
    4ed7:	e8 e4 d5 ff ff       	call   24c0 <printf@plt>
    4edc:	eb 1e                	jmp    4efc <ip4_igmp_decode+0xd7>
    4ede:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4ee2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4ee5:	0f b6 c0             	movzx  eax,al
    4ee8:	89 c6                	mov    esi,eax
    4eea:	48 8d 3d bd 8b 00 00 	lea    rdi,[rip+0x8bbd]        # daae <_IO_stdin_used+0xaae>
    4ef1:	b8 00 00 00 00       	mov    eax,0x0
    4ef6:	e8 c5 d5 ff ff       	call   24c0 <printf@plt>
    4efb:	90                   	nop
    4efc:	90                   	nop
    4efd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f01:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4f08:	00 00 
    4f0a:	74 05                	je     4f11 <ip4_igmp_decode+0xec>
    4f0c:	e8 bf d7 ff ff       	call   26d0 <__stack_chk_fail@plt>
    4f11:	c9                   	leave  
    4f12:	c3                   	ret    

0000000000004f13 <add_ip_addr_or_inc_counter>:
    4f13:	f3 0f 1e fa          	endbr64 
    4f17:	55                   	push   rbp
    4f18:	48 89 e5             	mov    rbp,rsp
    4f1b:	48 83 ec 60          	sub    rsp,0x60
    4f1f:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4f23:	89 f0                	mov    eax,esi
    4f25:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4f28:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4f2b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4f32:	00 00 
    4f34:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4f38:	31 c0                	xor    eax,eax
    4f3a:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f3e:	ba 08 00 00 00       	mov    edx,0x8
    4f43:	be 00 00 00 00       	mov    esi,0x0
    4f48:	48 89 c7             	mov    rdi,rax
    4f4b:	e8 c0 d6 ff ff       	call   2610 <memset@plt>
    4f50:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4f54:	ba 1c 00 00 00       	mov    edx,0x1c
    4f59:	be 00 00 00 00       	mov    esi,0x0
    4f5e:	48 89 c7             	mov    rdi,rax
    4f61:	e8 aa d6 ff ff       	call   2610 <memset@plt>
    4f66:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4f6a:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f6e:	ba 18 00 00 00       	mov    edx,0x18
    4f73:	48 89 ce             	mov    rsi,rcx
    4f76:	48 89 c7             	mov    rdi,rax
    4f79:	e8 72 d6 ff ff       	call   25f0 <strncpy@plt>
    4f7e:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4f82:	ba 1c 00 00 00       	mov    edx,0x1c
    4f87:	be 00 00 00 00       	mov    esi,0x0
    4f8c:	48 89 c7             	mov    rdi,rax
    4f8f:	e8 7c d6 ff ff       	call   2610 <memset@plt>
    4f94:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f98:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4f9c:	48 83 c2 08          	add    rdx,0x8
    4fa0:	48 89 c6             	mov    rsi,rax
    4fa3:	48 89 d7             	mov    rdi,rdx
    4fa6:	e8 f5 d6 ff ff       	call   26a0 <strcpy@plt>
    4fab:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    4faf:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    4fb2:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    4fb5:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4fb8:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4fbc:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    4fc0:	48 89 d1             	mov    rcx,rdx
    4fc3:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 4fff <verify_ip_addr>
    4fca:	be 00 00 00 00       	mov    esi,0x0
    4fcf:	48 89 c7             	mov    rdi,rax
    4fd2:	e8 19 d9 ff ff       	call   28f0 <pthread_create@plt>
    4fd7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4fdb:	be 00 00 00 00       	mov    esi,0x0
    4fe0:	48 89 c7             	mov    rdi,rax
    4fe3:	e8 98 d6 ff ff       	call   2680 <pthread_join@plt>
    4fe8:	90                   	nop
    4fe9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4fed:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4ff4:	00 00 
    4ff6:	74 05                	je     4ffd <add_ip_addr_or_inc_counter+0xea>
    4ff8:	e8 d3 d6 ff ff       	call   26d0 <__stack_chk_fail@plt>
    4ffd:	c9                   	leave  
    4ffe:	c3                   	ret    

0000000000004fff <verify_ip_addr>:
    4fff:	f3 0f 1e fa          	endbr64 
    5003:	55                   	push   rbp
    5004:	48 89 e5             	mov    rbp,rsp
    5007:	48 83 ec 30          	sub    rsp,0x30
    500b:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    500f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    5013:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    5017:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    501e:	e9 c9 00 00 00       	jmp    50ec <verify_ip_addr+0xed>
    5023:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5026:	48 63 d0             	movsxd rdx,eax
    5029:	48 89 d0             	mov    rax,rdx
    502c:	48 c1 e0 02          	shl    rax,0x2
    5030:	48 01 d0             	add    rax,rdx
    5033:	48 c1 e0 03          	shl    rax,0x3
    5037:	48 01 d0             	add    rax,rdx
    503a:	48 c1 e0 04          	shl    rax,0x4
    503e:	48 8d 15 db f4 0e 00 	lea    rdx,[rip+0xef4db]        # f4520 <watchlist>
    5045:	48 01 d0             	add    rax,rdx
    5048:	48 8d 50 08          	lea    rdx,[rax+0x8]
    504c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5050:	48 83 c0 08          	add    rax,0x8
    5054:	48 89 d6             	mov    rsi,rdx
    5057:	48 89 c7             	mov    rdi,rax
    505a:	e8 81 d7 ff ff       	call   27e0 <strcmp@plt>
    505f:	85 c0                	test   eax,eax
    5061:	0f 85 81 00 00 00    	jne    50e8 <verify_ip_addr+0xe9>
    5067:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    506a:	48 63 d0             	movsxd rdx,eax
    506d:	48 89 d0             	mov    rax,rdx
    5070:	48 c1 e0 02          	shl    rax,0x2
    5074:	48 01 d0             	add    rax,rdx
    5077:	48 c1 e0 03          	shl    rax,0x3
    507b:	48 01 d0             	add    rax,rdx
    507e:	48 c1 e0 04          	shl    rax,0x4
    5082:	48 89 c2             	mov    rdx,rax
    5085:	48 8d 05 ec f6 0e 00 	lea    rax,[rip+0xef6ec]        # f4778 <watchlist+0x258>
    508c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    508f:	8d 48 01             	lea    ecx,[rax+0x1]
    5092:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5095:	48 63 d0             	movsxd rdx,eax
    5098:	48 89 d0             	mov    rax,rdx
    509b:	48 c1 e0 02          	shl    rax,0x2
    509f:	48 01 d0             	add    rax,rdx
    50a2:	48 c1 e0 03          	shl    rax,0x3
    50a6:	48 01 d0             	add    rax,rdx
    50a9:	48 c1 e0 04          	shl    rax,0x4
    50ad:	48 89 c2             	mov    rdx,rax
    50b0:	48 8d 05 c1 f6 0e 00 	lea    rax,[rip+0xef6c1]        # f4778 <watchlist+0x258>
    50b7:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    50ba:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50bd:	48 63 d0             	movsxd rdx,eax
    50c0:	48 89 d0             	mov    rax,rdx
    50c3:	48 c1 e0 02          	shl    rax,0x2
    50c7:	48 01 d0             	add    rax,rdx
    50ca:	48 c1 e0 03          	shl    rax,0x3
    50ce:	48 01 d0             	add    rax,rdx
    50d1:	48 c1 e0 04          	shl    rax,0x4
    50d5:	48 8d 15 44 f4 0e 00 	lea    rdx,[rip+0xef444]        # f4520 <watchlist>
    50dc:	48 01 d0             	add    rax,rdx
    50df:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    50e3:	e9 f5 00 00 00       	jmp    51dd <verify_ip_addr+0x1de>
    50e8:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    50ec:	8b 05 26 cf 00 00    	mov    eax,DWORD PTR [rip+0xcf26]        # 12018 <watchlist_num>
    50f2:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    50f5:	0f 8e 28 ff ff ff    	jle    5023 <verify_ip_addr+0x24>
    50fb:	bf 90 02 00 00       	mov    edi,0x290
    5100:	e8 8b d6 ff ff       	call   2790 <malloc@plt>
    5105:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    5109:	8b 05 09 cf 00 00    	mov    eax,DWORD PTR [rip+0xcf09]        # 12018 <watchlist_num>
    510f:	83 c0 01             	add    eax,0x1
    5112:	89 05 00 cf 00 00    	mov    DWORD PTR [rip+0xcf00],eax        # 12018 <watchlist_num>
    5118:	8b 05 fa ce 00 00    	mov    eax,DWORD PTR [rip+0xcefa]        # 12018 <watchlist_num>
    511e:	48 63 d0             	movsxd rdx,eax
    5121:	48 89 d0             	mov    rax,rdx
    5124:	48 c1 e0 02          	shl    rax,0x2
    5128:	48 01 d0             	add    rax,rdx
    512b:	48 c1 e0 03          	shl    rax,0x3
    512f:	48 01 d0             	add    rax,rdx
    5132:	48 c1 e0 04          	shl    rax,0x4
    5136:	48 89 c1             	mov    rcx,rax
    5139:	48 8d 05 e0 f3 0e 00 	lea    rax,[rip+0xef3e0]        # f4520 <watchlist>
    5140:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5144:	48 01 c8             	add    rax,rcx
    5147:	48 89 d6             	mov    rsi,rdx
    514a:	ba 52 00 00 00       	mov    edx,0x52
    514f:	48 89 c7             	mov    rdi,rax
    5152:	48 89 d1             	mov    rcx,rdx
    5155:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    5158:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    515c:	48 83 c0 08          	add    rax,0x8
    5160:	ba 0f 00 00 00       	mov    edx,0xf
    5165:	be 00 00 00 00       	mov    esi,0x0
    516a:	48 89 c7             	mov    rdi,rax
    516d:	e8 9e d4 ff ff       	call   2610 <memset@plt>
    5172:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5176:	48 8d 48 08          	lea    rcx,[rax+0x8]
    517a:	8b 05 98 ce 00 00    	mov    eax,DWORD PTR [rip+0xce98]        # 12018 <watchlist_num>
    5180:	48 63 d0             	movsxd rdx,eax
    5183:	48 89 d0             	mov    rax,rdx
    5186:	48 c1 e0 02          	shl    rax,0x2
    518a:	48 01 d0             	add    rax,rdx
    518d:	48 c1 e0 03          	shl    rax,0x3
    5191:	48 01 d0             	add    rax,rdx
    5194:	48 c1 e0 04          	shl    rax,0x4
    5198:	48 8d 15 81 f3 0e 00 	lea    rdx,[rip+0xef381]        # f4520 <watchlist>
    519f:	48 01 d0             	add    rax,rdx
    51a2:	48 83 c0 08          	add    rax,0x8
    51a6:	48 89 ce             	mov    rsi,rcx
    51a9:	48 89 c7             	mov    rdi,rax
    51ac:	e8 ef d4 ff ff       	call   26a0 <strcpy@plt>
    51b1:	8b 05 61 ce 00 00    	mov    eax,DWORD PTR [rip+0xce61]        # 12018 <watchlist_num>
    51b7:	48 63 d0             	movsxd rdx,eax
    51ba:	48 89 d0             	mov    rax,rdx
    51bd:	48 c1 e0 02          	shl    rax,0x2
    51c1:	48 01 d0             	add    rax,rdx
    51c4:	48 c1 e0 03          	shl    rax,0x3
    51c8:	48 01 d0             	add    rax,rdx
    51cb:	48 c1 e0 04          	shl    rax,0x4
    51cf:	48 8d 15 4a f3 0e 00 	lea    rdx,[rip+0xef34a]        # f4520 <watchlist>
    51d6:	48 01 d0             	add    rax,rdx
    51d9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    51dd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51e1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    51e4:	84 c0                	test   al,al
    51e6:	74 36                	je     521e <verify_ip_addr+0x21f>
    51e8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51ec:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    51f2:	8d 50 01             	lea    edx,[rax+0x1]
    51f5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51f9:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    51ff:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5203:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    5209:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    520d:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5210:	01 c2                	add    edx,eax
    5212:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5216:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    521c:	eb 34                	jmp    5252 <verify_ip_addr+0x253>
    521e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5222:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    5228:	8d 50 01             	lea    edx,[rax+0x1]
    522b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    522f:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    5235:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5239:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    523f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5243:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5246:	01 c2                	add    edx,eax
    5248:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    524c:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    5252:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5256:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    525c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5260:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5263:	01 c2                	add    edx,eax
    5265:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5269:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    526f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5273:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    5279:	8d 14 00             	lea    edx,[rax+rax*1]
    527c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5280:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    5286:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    528a:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    528d:	83 f8 5e             	cmp    eax,0x5e
    5290:	0f 84 9b 00 00 00    	je     5331 <verify_ip_addr+0x332>
    5296:	83 f8 5e             	cmp    eax,0x5e
    5299:	0f 8f cf 00 00 00    	jg     536e <verify_ip_addr+0x36f>
    529f:	83 f8 5c             	cmp    eax,0x5c
    52a2:	74 0a                	je     52ae <verify_ip_addr+0x2af>
    52a4:	83 f8 5d             	cmp    eax,0x5d
    52a7:	74 48                	je     52f1 <verify_ip_addr+0x2f2>
    52a9:	e9 c0 00 00 00       	jmp    536e <verify_ip_addr+0x36f>
    52ae:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52b2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52b5:	84 c0                	test   al,al
    52b7:	74 1c                	je     52d5 <verify_ip_addr+0x2d6>
    52b9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52bd:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    52c3:	8d 50 01             	lea    edx,[rax+0x1]
    52c6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ca:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    52d0:	e9 d5 00 00 00       	jmp    53aa <verify_ip_addr+0x3ab>
    52d5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52d9:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    52df:	8d 50 01             	lea    edx,[rax+0x1]
    52e2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52e6:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    52ec:	e9 b9 00 00 00       	jmp    53aa <verify_ip_addr+0x3ab>
    52f1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52f5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52f8:	84 c0                	test   al,al
    52fa:	74 1c                	je     5318 <verify_ip_addr+0x319>
    52fc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5300:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    5306:	8d 50 01             	lea    edx,[rax+0x1]
    5309:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    530d:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5313:	e9 92 00 00 00       	jmp    53aa <verify_ip_addr+0x3ab>
    5318:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    531c:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5322:	8d 50 01             	lea    edx,[rax+0x1]
    5325:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5329:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    532f:	eb 79                	jmp    53aa <verify_ip_addr+0x3ab>
    5331:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5335:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5338:	84 c0                	test   al,al
    533a:	74 19                	je     5355 <verify_ip_addr+0x356>
    533c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5340:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    5346:	8d 50 01             	lea    edx,[rax+0x1]
    5349:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    534d:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    5353:	eb 55                	jmp    53aa <verify_ip_addr+0x3ab>
    5355:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5359:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    535f:	8d 50 01             	lea    edx,[rax+0x1]
    5362:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5366:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    536c:	eb 3c                	jmp    53aa <verify_ip_addr+0x3ab>
    536e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5372:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5375:	84 c0                	test   al,al
    5377:	74 19                	je     5392 <verify_ip_addr+0x393>
    5379:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    537d:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    5383:	8d 50 01             	lea    edx,[rax+0x1]
    5386:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    538a:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    5390:	eb 17                	jmp    53a9 <verify_ip_addr+0x3aa>
    5392:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5396:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    539c:	8d 50 01             	lea    edx,[rax+0x1]
    539f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53a3:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    53a9:	90                   	nop
    53aa:	b8 01 00 00 00       	mov    eax,0x1
    53af:	c9                   	leave  
    53b0:	c3                   	ret    

00000000000053b1 <ascii_hexdump>:
    53b1:	f3 0f 1e fa          	endbr64 
    53b5:	55                   	push   rbp
    53b6:	48 89 e5             	mov    rbp,rsp
    53b9:	48 83 ec 20          	sub    rsp,0x20
    53bd:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    53c1:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    53c4:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    53cb:	eb 52                	jmp    541f <ascii_hexdump+0x6e>
    53cd:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    53d0:	48 63 d0             	movsxd rdx,eax
    53d3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53d7:	48 01 d0             	add    rax,rdx
    53da:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53dd:	3c 20                	cmp    al,0x20
    53df:	76 30                	jbe    5411 <ascii_hexdump+0x60>
    53e1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    53e4:	48 63 d0             	movsxd rdx,eax
    53e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53eb:	48 01 d0             	add    rax,rdx
    53ee:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53f1:	3c 7e                	cmp    al,0x7e
    53f3:	77 1c                	ja     5411 <ascii_hexdump+0x60>
    53f5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    53f8:	48 63 d0             	movsxd rdx,eax
    53fb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53ff:	48 01 d0             	add    rax,rdx
    5402:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5405:	0f b6 c0             	movzx  eax,al
    5408:	89 c7                	mov    edi,eax
    540a:	e8 c1 d3 ff ff       	call   27d0 <putchar@plt>
    540f:	eb 0a                	jmp    541b <ascii_hexdump+0x6a>
    5411:	bf 2e 00 00 00       	mov    edi,0x2e
    5416:	e8 b5 d3 ff ff       	call   27d0 <putchar@plt>
    541b:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    541f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5422:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    5425:	7c a6                	jl     53cd <ascii_hexdump+0x1c>
    5427:	bf 0a 00 00 00       	mov    edi,0xa
    542c:	e8 9f d3 ff ff       	call   27d0 <putchar@plt>
    5431:	90                   	nop
    5432:	c9                   	leave  
    5433:	c3                   	ret    

0000000000005434 <stdout_alert>:
    5434:	f3 0f 1e fa          	endbr64 
    5438:	55                   	push   rbp
    5439:	48 89 e5             	mov    rbp,rsp
    543c:	53                   	push   rbx
    543d:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    5444:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    544b:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    5452:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    5458:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    545f:	00 00 
    5461:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5465:	31 c0                	xor    eax,eax
    5467:	bf 00 00 00 00       	mov    edi,0x0
    546c:	e8 1f d2 ff ff       	call   2690 <time@plt>
    5471:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    5478:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    547f:	48 89 c7             	mov    rdi,rax
    5482:	e8 a9 d1 ff ff       	call   2630 <localtime@plt>
    5487:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    548a:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    548e:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    5495:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    549c:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    54a0:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    54a4:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    54ab:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    54b2:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    54b6:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    54ba:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    54c1:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    54c8:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    54cc:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    54d3:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    54d9:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    54df:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    54e6:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    54ed:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    54f3:	8d 48 01             	lea    ecx,[rax+0x1]
    54f6:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    54fc:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5502:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    5509:	57                   	push   rdi
    550a:	56                   	push   rsi
    550b:	48 8d 35 b4 85 00 00 	lea    rsi,[rip+0x85b4]        # dac6 <_IO_stdin_used+0xac6>
    5512:	48 89 c7             	mov    rdi,rax
    5515:	b8 00 00 00 00       	mov    eax,0x0
    551a:	e8 e1 cf ff ff       	call   2500 <sprintf@plt>
    551f:	48 83 c4 10          	add    rsp,0x10
    5523:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    552a:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    552d:	3d 80 00 00 00       	cmp    eax,0x80
    5532:	75 4e                	jne    5582 <stdout_alert+0x14e>
    5534:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    553b:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    553f:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5546:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    554a:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5551:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    5558:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    555f:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5566:	49 89 f9             	mov    r9,rdi
    5569:	49 89 f0             	mov    r8,rsi
    556c:	48 8d 35 6f 85 00 00 	lea    rsi,[rip+0x856f]        # dae2 <_IO_stdin_used+0xae2>
    5573:	48 89 c7             	mov    rdi,rax
    5576:	b8 00 00 00 00       	mov    eax,0x0
    557b:	e8 80 cf ff ff       	call   2500 <sprintf@plt>
    5580:	eb 61                	jmp    55e3 <stdout_alert+0x1af>
    5582:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5589:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    558c:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5593:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    5597:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    559e:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    55a2:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55a9:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    55ad:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    55b4:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    55bb:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    55c2:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55c9:	57                   	push   rdi
    55ca:	56                   	push   rsi
    55cb:	48 8d 35 20 85 00 00 	lea    rsi,[rip+0x8520]        # daf2 <_IO_stdin_used+0xaf2>
    55d2:	48 89 c7             	mov    rdi,rax
    55d5:	b8 00 00 00 00       	mov    eax,0x0
    55da:	e8 21 cf ff ff       	call   2500 <sprintf@plt>
    55df:	48 83 c4 10          	add    rsp,0x10
    55e3:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55ea:	48 89 c6             	mov    rsi,rax
    55ed:	48 8d 3d 14 85 00 00 	lea    rdi,[rip+0x8514]        # db08 <_IO_stdin_used+0xb08>
    55f4:	b8 00 00 00 00       	mov    eax,0x0
    55f9:	e8 c2 ce ff ff       	call   24c0 <printf@plt>
    55fe:	48 8b 05 33 ca 00 00 	mov    rax,QWORD PTR [rip+0xca33]        # 12038 <def_log_file>
    5605:	48 8d 35 ff 84 00 00 	lea    rsi,[rip+0x84ff]        # db0b <_IO_stdin_used+0xb0b>
    560c:	48 89 c7             	mov    rdi,rax
    560f:	e8 fc d0 ff ff       	call   2710 <fopen@plt>
    5614:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    561b:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5622:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5629:	48 89 d6             	mov    rsi,rdx
    562c:	48 89 c7             	mov    rdi,rax
    562f:	e8 ac d0 ff ff       	call   26e0 <fputs@plt>
    5634:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    563b:	48 89 c7             	mov    rdi,rax
    563e:	e8 7d d0 ff ff       	call   26c0 <fclose@plt>
    5643:	90                   	nop
    5644:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5648:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    564f:	00 00 
    5651:	74 05                	je     5658 <stdout_alert+0x224>
    5653:	e8 78 d0 ff ff       	call   26d0 <__stack_chk_fail@plt>
    5658:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    565c:	c9                   	leave  
    565d:	c3                   	ret    

000000000000565e <str_match_parser>:
    565e:	f3 0f 1e fa          	endbr64 
    5662:	55                   	push   rbp
    5663:	48 89 e5             	mov    rbp,rsp
    5666:	53                   	push   rbx
    5667:	48 83 ec 48          	sub    rsp,0x48
    566b:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    566f:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    5673:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    567a:	00 00 
    567c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5680:	31 c0                	xor    eax,eax
    5682:	48 89 e0             	mov    rax,rsp
    5685:	48 89 c3             	mov    rbx,rax
    5688:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    568c:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    568f:	85 c0                	test   eax,eax
    5691:	75 0a                	jne    569d <str_match_parser+0x3f>
    5693:	b8 00 00 00 00       	mov    eax,0x0
    5698:	e9 e1 01 00 00       	jmp    587e <str_match_parser+0x220>
    569d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56a1:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56a4:	83 c0 01             	add    eax,0x1
    56a7:	01 c0                	add    eax,eax
    56a9:	48 98                	cdqe   
    56ab:	48 83 e8 01          	sub    rax,0x1
    56af:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    56b3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56b7:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56ba:	83 c0 01             	add    eax,0x1
    56bd:	01 c0                	add    eax,eax
    56bf:	48 98                	cdqe   
    56c1:	49 89 c2             	mov    r10,rax
    56c4:	41 bb 00 00 00 00    	mov    r11d,0x0
    56ca:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56ce:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56d1:	83 c0 01             	add    eax,0x1
    56d4:	01 c0                	add    eax,eax
    56d6:	48 98                	cdqe   
    56d8:	49 89 c0             	mov    r8,rax
    56db:	41 b9 00 00 00 00    	mov    r9d,0x0
    56e1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56e5:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56e8:	83 c0 01             	add    eax,0x1
    56eb:	01 c0                	add    eax,eax
    56ed:	48 98                	cdqe   
    56ef:	ba 10 00 00 00       	mov    edx,0x10
    56f4:	48 83 ea 01          	sub    rdx,0x1
    56f8:	48 01 d0             	add    rax,rdx
    56fb:	be 10 00 00 00       	mov    esi,0x10
    5700:	ba 00 00 00 00       	mov    edx,0x0
    5705:	48 f7 f6             	div    rsi
    5708:	48 6b c0 10          	imul   rax,rax,0x10
    570c:	48 89 c1             	mov    rcx,rax
    570f:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    5716:	48 89 e2             	mov    rdx,rsp
    5719:	48 29 ca             	sub    rdx,rcx
    571c:	48 39 d4             	cmp    rsp,rdx
    571f:	74 12                	je     5733 <str_match_parser+0xd5>
    5721:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    5728:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    572f:	00 00 
    5731:	eb e9                	jmp    571c <str_match_parser+0xbe>
    5733:	48 89 c2             	mov    rdx,rax
    5736:	81 e2 ff 0f 00 00    	and    edx,0xfff
    573c:	48 29 d4             	sub    rsp,rdx
    573f:	48 89 c2             	mov    rdx,rax
    5742:	81 e2 ff 0f 00 00    	and    edx,0xfff
    5748:	48 85 d2             	test   rdx,rdx
    574b:	74 10                	je     575d <str_match_parser+0xff>
    574d:	25 ff 0f 00 00       	and    eax,0xfff
    5752:	48 83 e8 08          	sub    rax,0x8
    5756:	48 01 e0             	add    rax,rsp
    5759:	48 83 08 00          	or     QWORD PTR [rax],0x0
    575d:	48 89 e0             	mov    rax,rsp
    5760:	48 83 c0 00          	add    rax,0x0
    5764:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5768:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    576c:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    576f:	83 c0 01             	add    eax,0x1
    5772:	01 c0                	add    eax,eax
    5774:	48 63 d0             	movsxd rdx,eax
    5777:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    577b:	be 00 00 00 00       	mov    esi,0x0
    5780:	48 89 c7             	mov    rdi,rax
    5783:	e8 88 ce ff ff       	call   2610 <memset@plt>
    5788:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    578f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5793:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    5799:	85 c0                	test   eax,eax
    579b:	74 5f                	je     57fc <str_match_parser+0x19e>
    579d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57a1:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    57a4:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    57a7:	eb 42                	jmp    57eb <str_match_parser+0x18d>
    57a9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57ad:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    57b0:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    57b3:	48 98                	cdqe   
    57b5:	48 01 d0             	add    rax,rdx
    57b8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    57bb:	0f b6 d0             	movzx  edx,al
    57be:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    57c1:	8d 48 01             	lea    ecx,[rax+0x1]
    57c4:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    57c7:	01 c0                	add    eax,eax
    57c9:	48 63 c8             	movsxd rcx,eax
    57cc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57d0:	48 01 c8             	add    rax,rcx
    57d3:	48 8d 35 33 83 00 00 	lea    rsi,[rip+0x8333]        # db0d <_IO_stdin_used+0xb0d>
    57da:	48 89 c7             	mov    rdi,rax
    57dd:	b8 00 00 00 00       	mov    eax,0x0
    57e2:	e8 19 cd ff ff       	call   2500 <sprintf@plt>
    57e7:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    57eb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57ef:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    57f5:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    57f8:	7c af                	jl     57a9 <str_match_parser+0x14b>
    57fa:	eb 5a                	jmp    5856 <str_match_parser+0x1f8>
    57fc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5800:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5803:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    5806:	eb 42                	jmp    584a <str_match_parser+0x1ec>
    5808:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    580c:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    580f:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    5812:	48 98                	cdqe   
    5814:	48 01 d0             	add    rax,rdx
    5817:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    581a:	0f b6 d0             	movzx  edx,al
    581d:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5820:	8d 48 01             	lea    ecx,[rax+0x1]
    5823:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    5826:	01 c0                	add    eax,eax
    5828:	48 63 c8             	movsxd rcx,eax
    582b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    582f:	48 01 c8             	add    rax,rcx
    5832:	48 8d 35 d4 82 00 00 	lea    rsi,[rip+0x82d4]        # db0d <_IO_stdin_used+0xb0d>
    5839:	48 89 c7             	mov    rdi,rax
    583c:	b8 00 00 00 00       	mov    eax,0x0
    5841:	e8 ba cc ff ff       	call   2500 <sprintf@plt>
    5846:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    584a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    584e:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5851:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    5854:	7c b2                	jl     5808 <str_match_parser+0x1aa>
    5856:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    585a:	48 8d 50 40          	lea    rdx,[rax+0x40]
    585e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5862:	48 89 d6             	mov    rsi,rdx
    5865:	48 89 c7             	mov    rdi,rax
    5868:	e8 a3 cc ff ff       	call   2510 <strstr@plt>
    586d:	48 85 c0             	test   rax,rax
    5870:	74 07                	je     5879 <str_match_parser+0x21b>
    5872:	b8 01 00 00 00       	mov    eax,0x1
    5877:	eb 05                	jmp    587e <str_match_parser+0x220>
    5879:	b8 00 00 00 00       	mov    eax,0x0
    587e:	48 89 dc             	mov    rsp,rbx
    5881:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    5885:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    588c:	00 00 
    588e:	74 05                	je     5895 <str_match_parser+0x237>
    5890:	e8 3b ce ff ff       	call   26d0 <__stack_chk_fail@plt>
    5895:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5899:	c9                   	leave  
    589a:	c3                   	ret    

000000000000589b <is_blocked_ipv4>:
    589b:	f3 0f 1e fa          	endbr64 
    589f:	55                   	push   rbp
    58a0:	48 89 e5             	mov    rbp,rsp
    58a3:	48 83 ec 20          	sub    rsp,0x20
    58a7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    58ab:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    58b2:	eb 3b                	jmp    58ef <is_blocked_ipv4+0x54>
    58b4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    58b7:	48 63 d0             	movsxd rdx,eax
    58ba:	48 89 d0             	mov    rax,rdx
    58bd:	48 c1 e0 03          	shl    rax,0x3
    58c1:	48 01 d0             	add    rax,rdx
    58c4:	48 01 c0             	add    rax,rax
    58c7:	48 8d 15 12 ea 0e 00 	lea    rdx,[rip+0xeea12]        # f42e0 <blocked_ipv4_addrs>
    58ce:	48 01 c2             	add    rdx,rax
    58d1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    58d5:	48 89 d6             	mov    rsi,rdx
    58d8:	48 89 c7             	mov    rdi,rax
    58db:	e8 00 cf ff ff       	call   27e0 <strcmp@plt>
    58e0:	85 c0                	test   eax,eax
    58e2:	75 07                	jne    58eb <is_blocked_ipv4+0x50>
    58e4:	b8 01 00 00 00       	mov    eax,0x1
    58e9:	eb 14                	jmp    58ff <is_blocked_ipv4+0x64>
    58eb:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    58ef:	8b 05 1b c7 00 00    	mov    eax,DWORD PTR [rip+0xc71b]        # 12010 <blk_ipv4_len>
    58f5:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    58f8:	7e ba                	jle    58b4 <is_blocked_ipv4+0x19>
    58fa:	b8 00 00 00 00       	mov    eax,0x0
    58ff:	c9                   	leave  
    5900:	c3                   	ret    

0000000000005901 <none>:
    5901:	f3 0f 1e fa          	endbr64 
    5905:	55                   	push   rbp
    5906:	48 89 e5             	mov    rbp,rsp
    5909:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    590d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5911:	b8 01 00 00 00       	mov    eax,0x1
    5916:	5d                   	pop    rbp
    5917:	c3                   	ret    

0000000000005918 <pcre_match>:
    5918:	f3 0f 1e fa          	endbr64 
    591c:	55                   	push   rbp
    591d:	48 89 e5             	mov    rbp,rsp
    5920:	48 83 ec 10          	sub    rsp,0x10
    5924:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5928:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    592c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5930:	48 8b 00             	mov    rax,QWORD PTR [rax]
    5933:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    5937:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    593e:	41 b8 00 00 00 00    	mov    r8d,0x0
    5944:	b9 00 00 00 00       	mov    ecx,0x0
    5949:	ba 00 00 00 00       	mov    edx,0x0
    594e:	48 89 c6             	mov    rsi,rax
    5951:	e8 fa cd ff ff       	call   2750 <regexec@plt>
    5956:	83 f8 01             	cmp    eax,0x1
    5959:	75 07                	jne    5962 <pcre_match+0x4a>
    595b:	b8 00 00 00 00       	mov    eax,0x0
    5960:	eb 05                	jmp    5967 <pcre_match+0x4f>
    5962:	b8 01 00 00 00       	mov    eax,0x1
    5967:	c9                   	leave  
    5968:	c3                   	ret    

0000000000005969 <rule_library_parser>:
    5969:	f3 0f 1e fa          	endbr64 
    596d:	55                   	push   rbp
    596e:	48 89 e5             	mov    rbp,rsp
    5971:	53                   	push   rbx
    5972:	48 83 ec 48          	sub    rsp,0x48
    5976:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    597a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5981:	00 00 
    5983:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5987:	31 c0                	xor    eax,eax
    5989:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    598d:	48 8d 35 84 81 00 00 	lea    rsi,[rip+0x8184]        # db18 <_IO_stdin_used+0xb18>
    5994:	48 89 c7             	mov    rdi,rax
    5997:	e8 74 cd ff ff       	call   2710 <fopen@plt>
    599c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    59a0:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    59a5:	75 22                	jne    59c9 <rule_library_parser+0x60>
    59a7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    59ab:	48 89 c6             	mov    rsi,rax
    59ae:	48 8d 3d 6b 81 00 00 	lea    rdi,[rip+0x816b]        # db20 <_IO_stdin_used+0xb20>
    59b5:	b8 00 00 00 00       	mov    eax,0x0
    59ba:	e8 01 cb ff ff       	call   24c0 <printf@plt>
    59bf:	bf 01 00 00 00       	mov    edi,0x1
    59c4:	e8 77 cd ff ff       	call   2740 <exit@plt>
    59c9:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    59d0:	00 
    59d1:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    59d8:	00 
    59d9:	e9 70 05 00 00       	jmp    5f4e <rule_library_parser+0x5e5>
    59de:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    59e2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59e6:	48 8d 35 59 81 00 00 	lea    rsi,[rip+0x8159]        # db46 <_IO_stdin_used+0xb46>
    59ed:	48 89 c7             	mov    rdi,rax
    59f0:	e8 eb ca ff ff       	call   24e0 <strcspn@plt>
    59f5:	48 01 d8             	add    rax,rbx
    59f8:	c6 00 00             	mov    BYTE PTR [rax],0x0
    59fb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59ff:	48 89 c7             	mov    rdi,rax
    5a02:	e8 b9 05 00 00       	call   5fc0 <is_comment>
    5a07:	84 c0                	test   al,al
    5a09:	74 05                	je     5a10 <rule_library_parser+0xa7>
    5a0b:	e9 3e 05 00 00       	jmp    5f4e <rule_library_parser+0x5e5>
    5a10:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a14:	ba 1a 00 00 00       	mov    edx,0x1a
    5a19:	48 8d 35 28 81 00 00 	lea    rsi,[rip+0x8128]        # db48 <_IO_stdin_used+0xb48>
    5a20:	48 89 c7             	mov    rdi,rax
    5a23:	e8 98 cb ff ff       	call   25c0 <strncmp@plt>
    5a28:	85 c0                	test   eax,eax
    5a2a:	75 39                	jne    5a65 <rule_library_parser+0xfc>
    5a2c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a30:	48 83 c0 1a          	add    rax,0x1a
    5a34:	48 8d 35 28 81 00 00 	lea    rsi,[rip+0x8128]        # db63 <_IO_stdin_used+0xb63>
    5a3b:	48 89 c7             	mov    rdi,rax
    5a3e:	e8 9d cd ff ff       	call   27e0 <strcmp@plt>
    5a43:	85 c0                	test   eax,eax
    5a45:	75 0f                	jne    5a56 <rule_library_parser+0xed>
    5a47:	c7 05 33 c6 00 00 01 	mov    DWORD PTR [rip+0xc633],0x1        # 12084 <strict_icmp_timestamp_req>
    5a4e:	00 00 00 
    5a51:	e9 e2 04 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5a56:	c7 05 24 c6 00 00 00 	mov    DWORD PTR [rip+0xc624],0x0        # 12084 <strict_icmp_timestamp_req>
    5a5d:	00 00 00 
    5a60:	e9 d3 04 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5a65:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a69:	ba 1d 00 00 00       	mov    edx,0x1d
    5a6e:	48 8d 35 f2 80 00 00 	lea    rsi,[rip+0x80f2]        # db67 <_IO_stdin_used+0xb67>
    5a75:	48 89 c7             	mov    rdi,rax
    5a78:	e8 43 cb ff ff       	call   25c0 <strncmp@plt>
    5a7d:	85 c0                	test   eax,eax
    5a7f:	75 39                	jne    5aba <rule_library_parser+0x151>
    5a81:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a85:	48 83 c0 1d          	add    rax,0x1d
    5a89:	48 8d 35 d3 80 00 00 	lea    rsi,[rip+0x80d3]        # db63 <_IO_stdin_used+0xb63>
    5a90:	48 89 c7             	mov    rdi,rax
    5a93:	e8 48 cd ff ff       	call   27e0 <strcmp@plt>
    5a98:	85 c0                	test   eax,eax
    5a9a:	75 0f                	jne    5aab <rule_library_parser+0x142>
    5a9c:	c7 05 e2 c5 00 00 01 	mov    DWORD PTR [rip+0xc5e2],0x1        # 12088 <strict_nmap_host_alive_check>
    5aa3:	00 00 00 
    5aa6:	e9 8d 04 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5aab:	c7 05 d3 c5 00 00 00 	mov    DWORD PTR [rip+0xc5d3],0x0        # 12088 <strict_nmap_host_alive_check>
    5ab2:	00 00 00 
    5ab5:	e9 7e 04 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5aba:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5abe:	ba 17 00 00 00       	mov    edx,0x17
    5ac3:	48 8d 35 bb 80 00 00 	lea    rsi,[rip+0x80bb]        # db85 <_IO_stdin_used+0xb85>
    5aca:	48 89 c7             	mov    rdi,rax
    5acd:	e8 ee ca ff ff       	call   25c0 <strncmp@plt>
    5ad2:	85 c0                	test   eax,eax
    5ad4:	75 43                	jne    5b19 <rule_library_parser+0x1b0>
    5ad6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ada:	48 89 c7             	mov    rdi,rax
    5add:	e8 be ca ff ff       	call   25a0 <strlen@plt>
    5ae2:	48 83 f8 17          	cmp    rax,0x17
    5ae6:	77 16                	ja     5afe <rule_library_parser+0x195>
    5ae8:	48 8d 3d ae 80 00 00 	lea    rdi,[rip+0x80ae]        # db9d <_IO_stdin_used+0xb9d>
    5aef:	e8 6c cd ff ff       	call   2860 <puts@plt>
    5af4:	bf 01 00 00 00       	mov    edi,0x1
    5af9:	e8 42 cc ff ff       	call   2740 <exit@plt>
    5afe:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b02:	48 83 c0 17          	add    rax,0x17
    5b06:	48 89 c7             	mov    rdi,rax
    5b09:	e8 62 cd ff ff       	call   2870 <atoi@plt>
    5b0e:	89 05 4c 54 10 00    	mov    DWORD PTR [rip+0x10544c],eax        # 10af60 <clean_delay_pkts>
    5b14:	e9 1f 04 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5b19:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b1d:	ba 18 00 00 00       	mov    edx,0x18
    5b22:	48 8d 35 8e 80 00 00 	lea    rsi,[rip+0x808e]        # dbb7 <_IO_stdin_used+0xbb7>
    5b29:	48 89 c7             	mov    rdi,rax
    5b2c:	e8 8f ca ff ff       	call   25c0 <strncmp@plt>
    5b31:	85 c0                	test   eax,eax
    5b33:	75 46                	jne    5b7b <rule_library_parser+0x212>
    5b35:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b39:	48 89 c7             	mov    rdi,rax
    5b3c:	e8 5f ca ff ff       	call   25a0 <strlen@plt>
    5b41:	48 83 f8 18          	cmp    rax,0x18
    5b45:	75 16                	jne    5b5d <rule_library_parser+0x1f4>
    5b47:	48 8d 3d 4f 80 00 00 	lea    rdi,[rip+0x804f]        # db9d <_IO_stdin_used+0xb9d>
    5b4e:	e8 0d cd ff ff       	call   2860 <puts@plt>
    5b53:	bf 01 00 00 00       	mov    edi,0x1
    5b58:	e8 e3 cb ff ff       	call   2740 <exit@plt>
    5b5d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b61:	48 83 c0 18          	add    rax,0x18
    5b65:	48 89 c7             	mov    rdi,rax
    5b68:	e8 03 cd ff ff       	call   2870 <atoi@plt>
    5b6d:	48 98                	cdqe   
    5b6f:	48 89 05 42 c7 00 00 	mov    QWORD PTR [rip+0xc742],rax        # 122b8 <clean_delay>
    5b76:	e9 bd 03 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5b7b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b7f:	ba 0b 00 00 00       	mov    edx,0xb
    5b84:	48 8d 35 45 80 00 00 	lea    rsi,[rip+0x8045]        # dbd0 <_IO_stdin_used+0xbd0>
    5b8b:	48 89 c7             	mov    rdi,rax
    5b8e:	e8 2d ca ff ff       	call   25c0 <strncmp@plt>
    5b93:	85 c0                	test   eax,eax
    5b95:	75 33                	jne    5bca <rule_library_parser+0x261>
    5b97:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b9b:	48 83 c0 0b          	add    rax,0xb
    5b9f:	48 8d 35 bd 7f 00 00 	lea    rsi,[rip+0x7fbd]        # db63 <_IO_stdin_used+0xb63>
    5ba6:	48 89 c7             	mov    rdi,rax
    5ba9:	e8 32 cc ff ff       	call   27e0 <strcmp@plt>
    5bae:	85 c0                	test   eax,eax
    5bb0:	75 0c                	jne    5bbe <rule_library_parser+0x255>
    5bb2:	c6 05 68 53 10 00 01 	mov    BYTE PTR [rip+0x105368],0x1        # 10af21 <use_sqlite>
    5bb9:	e9 7a 03 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5bbe:	c6 05 5c 53 10 00 00 	mov    BYTE PTR [rip+0x10535c],0x0        # 10af21 <use_sqlite>
    5bc5:	e9 6e 03 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5bca:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bce:	ba 15 00 00 00       	mov    edx,0x15
    5bd3:	48 8d 35 02 80 00 00 	lea    rsi,[rip+0x8002]        # dbdc <_IO_stdin_used+0xbdc>
    5bda:	48 89 c7             	mov    rdi,rax
    5bdd:	e8 de c9 ff ff       	call   25c0 <strncmp@plt>
    5be2:	85 c0                	test   eax,eax
    5be4:	75 34                	jne    5c1a <rule_library_parser+0x2b1>
    5be6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bea:	48 83 c0 15          	add    rax,0x15
    5bee:	48 89 c6             	mov    rsi,rax
    5bf1:	48 8d 3d 48 53 10 00 	lea    rdi,[rip+0x105348]        # 10af40 <sqlite_db_path>
    5bf8:	e8 a3 ca ff ff       	call   26a0 <strcpy@plt>
    5bfd:	48 8d 35 3c 53 10 00 	lea    rsi,[rip+0x10533c]        # 10af40 <sqlite_db_path>
    5c04:	48 8d 3d e7 7f 00 00 	lea    rdi,[rip+0x7fe7]        # dbf2 <_IO_stdin_used+0xbf2>
    5c0b:	b8 00 00 00 00       	mov    eax,0x0
    5c10:	e8 be 42 00 00       	call   9ed3 <livedebug>
    5c15:	e9 1e 03 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5c1a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c1e:	ba 0b 00 00 00       	mov    edx,0xb
    5c23:	48 8d 35 e1 7f 00 00 	lea    rsi,[rip+0x7fe1]        # dc0b <_IO_stdin_used+0xc0b>
    5c2a:	48 89 c7             	mov    rdi,rax
    5c2d:	e8 8e c9 ff ff       	call   25c0 <strncmp@plt>
    5c32:	85 c0                	test   eax,eax
    5c34:	75 34                	jne    5c6a <rule_library_parser+0x301>
    5c36:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c3a:	48 83 c0 0b          	add    rax,0xb
    5c3e:	48 89 c6             	mov    rsi,rax
    5c41:	48 8d 3d 38 33 13 00 	lea    rdi,[rip+0x133338]        # 138f80 <input_adapter>
    5c48:	e8 53 ca ff ff       	call   26a0 <strcpy@plt>
    5c4d:	48 8d 35 2c 33 13 00 	lea    rsi,[rip+0x13332c]        # 138f80 <input_adapter>
    5c54:	48 8d 3d bd 7f 00 00 	lea    rdi,[rip+0x7fbd]        # dc18 <_IO_stdin_used+0xc18>
    5c5b:	b8 00 00 00 00       	mov    eax,0x0
    5c60:	e8 6e 42 00 00       	call   9ed3 <livedebug>
    5c65:	e9 ce 02 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5c6a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c6e:	ba 0c 00 00 00       	mov    edx,0xc
    5c73:	48 8d 35 d1 7f 00 00 	lea    rsi,[rip+0x7fd1]        # dc4b <_IO_stdin_used+0xc4b>
    5c7a:	48 89 c7             	mov    rdi,rax
    5c7d:	e8 3e c9 ff ff       	call   25c0 <strncmp@plt>
    5c82:	85 c0                	test   eax,eax
    5c84:	75 34                	jne    5cba <rule_library_parser+0x351>
    5c86:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c8a:	48 83 c0 0c          	add    rax,0xc
    5c8e:	48 89 c6             	mov    rsi,rax
    5c91:	48 8d 3d f8 32 13 00 	lea    rdi,[rip+0x1332f8]        # 138f90 <output_adapter>
    5c98:	e8 03 ca ff ff       	call   26a0 <strcpy@plt>
    5c9d:	48 8d 35 ec 32 13 00 	lea    rsi,[rip+0x1332ec]        # 138f90 <output_adapter>
    5ca4:	48 8d 3d ad 7f 00 00 	lea    rdi,[rip+0x7fad]        # dc58 <_IO_stdin_used+0xc58>
    5cab:	b8 00 00 00 00       	mov    eax,0x0
    5cb0:	e8 1e 42 00 00       	call   9ed3 <livedebug>
    5cb5:	e9 7e 02 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5cba:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cbe:	ba 05 00 00 00       	mov    edx,0x5
    5cc3:	48 8d 35 c2 7f 00 00 	lea    rsi,[rip+0x7fc2]        # dc8c <_IO_stdin_used+0xc8c>
    5cca:	48 89 c7             	mov    rdi,rax
    5ccd:	e8 ee c8 ff ff       	call   25c0 <strncmp@plt>
    5cd2:	85 c0                	test   eax,eax
    5cd4:	0f 85 81 00 00 00    	jne    5d5b <rule_library_parser+0x3f2>
    5cda:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cde:	48 83 c0 05          	add    rax,0x5
    5ce2:	48 89 c6             	mov    rsi,rax
    5ce5:	48 8d 3d a6 7f 00 00 	lea    rdi,[rip+0x7fa6]        # dc92 <_IO_stdin_used+0xc92>
    5cec:	b8 00 00 00 00       	mov    eax,0x0
    5cf1:	e8 dd 41 00 00       	call   9ed3 <livedebug>
    5cf6:	48 8d 3d 9e 7f 00 00 	lea    rdi,[rip+0x7f9e]        # dc9b <_IO_stdin_used+0xc9b>
    5cfd:	b8 00 00 00 00       	mov    eax,0x0
    5d02:	e8 b9 c7 ff ff       	call   24c0 <printf@plt>
    5d07:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d0b:	48 83 c0 05          	add    rax,0x5
    5d0f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5d12:	0f b6 15 8e 7f 00 00 	movzx  edx,BYTE PTR [rip+0x7f8e]        # dca7 <_IO_stdin_used+0xca7>
    5d19:	0f b6 c0             	movzx  eax,al
    5d1c:	0f b6 d2             	movzx  edx,dl
    5d1f:	29 d0                	sub    eax,edx
    5d21:	85 c0                	test   eax,eax
    5d23:	75 1b                	jne    5d40 <rule_library_parser+0x3d7>
    5d25:	c7 05 f9 c2 00 00 02 	mov    DWORD PTR [rip+0xc2f9],0x2        # 12028 <VIGIL_MODE>
    5d2c:	00 00 00 
    5d2f:	48 8d 3d 73 7f 00 00 	lea    rdi,[rip+0x7f73]        # dca9 <_IO_stdin_used+0xca9>
    5d36:	e8 25 cb ff ff       	call   2860 <puts@plt>
    5d3b:	e9 f8 01 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5d40:	c7 05 de c2 00 00 01 	mov    DWORD PTR [rip+0xc2de],0x1        # 12028 <VIGIL_MODE>
    5d47:	00 00 00 
    5d4a:	48 8d 3d 6f 7f 00 00 	lea    rdi,[rip+0x7f6f]        # dcc0 <_IO_stdin_used+0xcc0>
    5d51:	e8 0a cb ff ff       	call   2860 <puts@plt>
    5d56:	e9 dd 01 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5d5b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d5f:	ba 08 00 00 00       	mov    edx,0x8
    5d64:	48 8d 35 6c 7f 00 00 	lea    rsi,[rip+0x7f6c]        # dcd7 <_IO_stdin_used+0xcd7>
    5d6b:	48 89 c7             	mov    rdi,rax
    5d6e:	e8 4d c8 ff ff       	call   25c0 <strncmp@plt>
    5d73:	85 c0                	test   eax,eax
    5d75:	75 34                	jne    5dab <rule_library_parser+0x442>
    5d77:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d7b:	48 83 c0 08          	add    rax,0x8
    5d7f:	48 89 c6             	mov    rsi,rax
    5d82:	48 8d 3d 17 32 13 00 	lea    rdi,[rip+0x133217]        # 138fa0 <local_ip>
    5d89:	e8 12 c9 ff ff       	call   26a0 <strcpy@plt>
    5d8e:	48 8d 35 0b 32 13 00 	lea    rsi,[rip+0x13320b]        # 138fa0 <local_ip>
    5d95:	48 8d 3d 44 7f 00 00 	lea    rdi,[rip+0x7f44]        # dce0 <_IO_stdin_used+0xce0>
    5d9c:	b8 00 00 00 00       	mov    eax,0x0
    5da1:	e8 2d 41 00 00       	call   9ed3 <livedebug>
    5da6:	e9 8d 01 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5dab:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5daf:	ba 06 00 00 00       	mov    edx,0x6
    5db4:	48 8d 35 40 7f 00 00 	lea    rsi,[rip+0x7f40]        # dcfb <_IO_stdin_used+0xcfb>
    5dbb:	48 89 c7             	mov    rdi,rax
    5dbe:	e8 fd c7 ff ff       	call   25c0 <strncmp@plt>
    5dc3:	85 c0                	test   eax,eax
    5dc5:	75 1c                	jne    5de3 <rule_library_parser+0x47a>
    5dc7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dcb:	48 83 c0 06          	add    rax,0x6
    5dcf:	48 89 c6             	mov    rsi,rax
    5dd2:	48 8d 3d e7 31 13 00 	lea    rdi,[rip+0x1331e7]        # 138fc0 <def_gw>
    5dd9:	e8 c2 c8 ff ff       	call   26a0 <strcpy@plt>
    5dde:	e9 55 01 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5de3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5de7:	ba 08 00 00 00       	mov    edx,0x8
    5dec:	48 8d 35 0f 7f 00 00 	lea    rsi,[rip+0x7f0f]        # dd02 <_IO_stdin_used+0xd02>
    5df3:	48 89 c7             	mov    rdi,rax
    5df6:	e8 c5 c7 ff ff       	call   25c0 <strncmp@plt>
    5dfb:	85 c0                	test   eax,eax
    5dfd:	75 3f                	jne    5e3e <rule_library_parser+0x4d5>
    5dff:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e03:	48 83 c0 08          	add    rax,0x8
    5e07:	48 8d 35 55 7d 00 00 	lea    rsi,[rip+0x7d55]        # db63 <_IO_stdin_used+0xb63>
    5e0e:	48 89 c7             	mov    rdi,rax
    5e11:	e8 ca c9 ff ff       	call   27e0 <strcmp@plt>
    5e16:	85 c0                	test   eax,eax
    5e18:	75 18                	jne    5e32 <rule_library_parser+0x4c9>
    5e1a:	c6 05 b1 31 13 00 01 	mov    BYTE PTR [rip+0x1331b1],0x1        # 138fd2 <use_spi>
    5e21:	48 8d 3d e3 7e 00 00 	lea    rdi,[rip+0x7ee3]        # dd0b <_IO_stdin_used+0xd0b>
    5e28:	e8 33 ca ff ff       	call   2860 <puts@plt>
    5e2d:	e9 06 01 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5e32:	c6 05 99 31 13 00 00 	mov    BYTE PTR [rip+0x133199],0x0        # 138fd2 <use_spi>
    5e39:	e9 fa 00 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5e3e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e42:	ba 09 00 00 00       	mov    edx,0x9
    5e47:	48 8d 35 d6 7e 00 00 	lea    rsi,[rip+0x7ed6]        # dd24 <_IO_stdin_used+0xd24>
    5e4e:	48 89 c7             	mov    rdi,rax
    5e51:	e8 6a c7 ff ff       	call   25c0 <strncmp@plt>
    5e56:	85 c0                	test   eax,eax
    5e58:	75 27                	jne    5e81 <rule_library_parser+0x518>
    5e5a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e5e:	48 89 c7             	mov    rdi,rax
    5e61:	e8 83 01 00 00       	call   5fe9 <rstrip>
    5e66:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e6a:	48 83 c0 09          	add    rax,0x9
    5e6e:	48 89 c7             	mov    rdi,rax
    5e71:	e8 c9 65 00 00       	call   c43f <homenet_toi>
    5e76:	89 05 58 31 13 00    	mov    DWORD PTR [rip+0x133158],eax        # 138fd4 <homenet>
    5e7c:	e9 b7 00 00 00       	jmp    5f38 <rule_library_parser+0x5cf>
    5e81:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e85:	ba 0e 00 00 00       	mov    edx,0xe
    5e8a:	48 8d 35 9d 7e 00 00 	lea    rsi,[rip+0x7e9d]        # dd2e <_IO_stdin_used+0xd2e>
    5e91:	48 89 c7             	mov    rdi,rax
    5e94:	e8 27 c7 ff ff       	call   25c0 <strncmp@plt>
    5e99:	85 c0                	test   eax,eax
    5e9b:	75 24                	jne    5ec1 <rule_library_parser+0x558>
    5e9d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ea1:	48 89 c7             	mov    rdi,rax
    5ea4:	e8 40 01 00 00       	call   5fe9 <rstrip>
    5ea9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ead:	48 83 c0 0e          	add    rax,0xe
    5eb1:	48 89 c7             	mov    rdi,rax
    5eb4:	e8 86 65 00 00       	call   c43f <homenet_toi>
    5eb9:	89 05 19 31 13 00    	mov    DWORD PTR [rip+0x133119],eax        # 138fd8 <homenetmask>
    5ebf:	eb 77                	jmp    5f38 <rule_library_parser+0x5cf>
    5ec1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ec5:	ba 09 00 00 00       	mov    edx,0x9
    5eca:	48 8d 35 6c 7e 00 00 	lea    rsi,[rip+0x7e6c]        # dd3d <_IO_stdin_used+0xd3d>
    5ed1:	48 89 c7             	mov    rdi,rax
    5ed4:	e8 e7 c6 ff ff       	call   25c0 <strncmp@plt>
    5ed9:	85 c0                	test   eax,eax
    5edb:	75 3f                	jne    5f1c <rule_library_parser+0x5b3>
    5edd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ee1:	48 89 c7             	mov    rdi,rax
    5ee4:	e8 00 01 00 00       	call   5fe9 <rstrip>
    5ee9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5eed:	48 83 c0 09          	add    rax,0x9
    5ef1:	48 8d 35 4f 7e 00 00 	lea    rsi,[rip+0x7e4f]        # dd47 <_IO_stdin_used+0xd47>
    5ef8:	48 89 c7             	mov    rdi,rax
    5efb:	e8 e0 c8 ff ff       	call   27e0 <strcmp@plt>
    5f00:	85 c0                	test   eax,eax
    5f02:	75 0c                	jne    5f10 <rule_library_parser+0x5a7>
    5f04:	c7 05 5a 50 10 00 04 	mov    DWORD PTR [rip+0x10505a],0x4        # 10af68 <vigil_location>
    5f0b:	00 00 00 
    5f0e:	eb 28                	jmp    5f38 <rule_library_parser+0x5cf>
    5f10:	c7 05 4e 50 10 00 03 	mov    DWORD PTR [rip+0x10504e],0x3        # 10af68 <vigil_location>
    5f17:	00 00 00 
    5f1a:	eb 1c                	jmp    5f38 <rule_library_parser+0x5cf>
    5f1c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f20:	48 89 c7             	mov    rdi,rax
    5f23:	e8 7e 00 00 00       	call   5fa6 <is_rule>
    5f28:	84 c0                	test   al,al
    5f2a:	74 0c                	je     5f38 <rule_library_parser+0x5cf>
    5f2c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f30:	48 89 c7             	mov    rdi,rax
    5f33:	e8 18 01 00 00       	call   6050 <rule_parser>
    5f38:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f3c:	ba 08 00 00 00       	mov    edx,0x8
    5f41:	be 00 00 00 00       	mov    esi,0x0
    5f46:	48 89 c7             	mov    rdi,rax
    5f49:	e8 c2 c6 ff ff       	call   2610 <memset@plt>
    5f4e:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5f52:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5f56:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5f5a:	48 89 ce             	mov    rsi,rcx
    5f5d:	48 89 c7             	mov    rdi,rax
    5f60:	e8 0b c8 ff ff       	call   2770 <getline@plt>
    5f65:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5f69:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5f6e:	0f 85 6a fa ff ff    	jne    59de <rule_library_parser+0x75>
    5f74:	8b 05 ae c0 00 00    	mov    eax,DWORD PTR [rip+0xc0ae]        # 12028 <VIGIL_MODE>
    5f7a:	3d ff ff 00 00       	cmp    eax,0xffff
    5f7f:	75 0a                	jne    5f8b <rule_library_parser+0x622>
    5f81:	c7 05 9d c0 00 00 01 	mov    DWORD PTR [rip+0xc09d],0x1        # 12028 <VIGIL_MODE>
    5f88:	00 00 00 
    5f8b:	90                   	nop
    5f8c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5f90:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5f97:	00 00 
    5f99:	74 05                	je     5fa0 <rule_library_parser+0x637>
    5f9b:	e8 30 c7 ff ff       	call   26d0 <__stack_chk_fail@plt>
    5fa0:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5fa4:	c9                   	leave  
    5fa5:	c3                   	ret    

0000000000005fa6 <is_rule>:
    5fa6:	f3 0f 1e fa          	endbr64 
    5faa:	55                   	push   rbp
    5fab:	48 89 e5             	mov    rbp,rsp
    5fae:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5fb2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5fb6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5fb9:	3c 24                	cmp    al,0x24
    5fbb:	0f 94 c0             	sete   al
    5fbe:	5d                   	pop    rbp
    5fbf:	c3                   	ret    

0000000000005fc0 <is_comment>:
    5fc0:	f3 0f 1e fa          	endbr64 
    5fc4:	55                   	push   rbp
    5fc5:	48 89 e5             	mov    rbp,rsp
    5fc8:	48 83 ec 10          	sub    rsp,0x10
    5fcc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5fd0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5fd4:	be 23 00 00 00       	mov    esi,0x23
    5fd9:	48 89 c7             	mov    rdi,rax
    5fdc:	e8 8f c5 ff ff       	call   2570 <strchr@plt>
    5fe1:	48 85 c0             	test   rax,rax
    5fe4:	0f 95 c0             	setne  al
    5fe7:	c9                   	leave  
    5fe8:	c3                   	ret    

0000000000005fe9 <rstrip>:
    5fe9:	f3 0f 1e fa          	endbr64 
    5fed:	55                   	push   rbp
    5fee:	48 89 e5             	mov    rbp,rsp
    5ff1:	48 83 ec 10          	sub    rsp,0x10
    5ff5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5ff9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5ffd:	48 8d 35 42 7b 00 00 	lea    rsi,[rip+0x7b42]        # db46 <_IO_stdin_used+0xb46>
    6004:	48 89 c7             	mov    rdi,rax
    6007:	e8 d4 c4 ff ff       	call   24e0 <strcspn@plt>
    600c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6010:	48 01 d0             	add    rax,rdx
    6013:	c6 00 00             	mov    BYTE PTR [rax],0x0
    6016:	90                   	nop
    6017:	c9                   	leave  
    6018:	c3                   	ret    

0000000000006019 <syntax_error>:
    6019:	f3 0f 1e fa          	endbr64 
    601d:	55                   	push   rbp
    601e:	48 89 e5             	mov    rbp,rsp
    6021:	48 83 ec 10          	sub    rsp,0x10
    6025:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6029:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    602c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6030:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6033:	89 c6                	mov    esi,eax
    6035:	48 8d 3d 14 7d 00 00 	lea    rdi,[rip+0x7d14]        # dd50 <_IO_stdin_used+0xd50>
    603c:	b8 00 00 00 00       	mov    eax,0x0
    6041:	e8 7a c4 ff ff       	call   24c0 <printf@plt>
    6046:	bf 01 00 00 00       	mov    edi,0x1
    604b:	e8 f0 c6 ff ff       	call   2740 <exit@plt>

0000000000006050 <rule_parser>:
    6050:	f3 0f 1e fa          	endbr64 
    6054:	55                   	push   rbp
    6055:	48 89 e5             	mov    rbp,rsp
    6058:	48 83 ec 40          	sub    rsp,0x40
    605c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    6060:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6067:	00 00 
    6069:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    606d:	31 c0                	xor    eax,eax
    606f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6073:	48 83 c0 01          	add    rax,0x1
    6077:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    607b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    607f:	48 8d 35 92 7a 00 00 	lea    rsi,[rip+0x7a92]        # db18 <_IO_stdin_used+0xb18>
    6086:	48 89 c7             	mov    rdi,rax
    6089:	e8 82 c6 ff ff       	call   2710 <fopen@plt>
    608e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6092:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    6097:	75 22                	jne    60bb <rule_parser+0x6b>
    6099:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    609d:	48 89 c6             	mov    rsi,rax
    60a0:	48 8d 3d c9 7c 00 00 	lea    rdi,[rip+0x7cc9]        # dd70 <_IO_stdin_used+0xd70>
    60a7:	b8 00 00 00 00       	mov    eax,0x0
    60ac:	e8 0f c4 ff ff       	call   24c0 <printf@plt>
    60b1:	bf 01 00 00 00       	mov    edi,0x1
    60b6:	e8 85 c6 ff ff       	call   2740 <exit@plt>
    60bb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60bf:	48 89 c6             	mov    rsi,rax
    60c2:	48 8d 3d da 7c 00 00 	lea    rdi,[rip+0x7cda]        # dda3 <_IO_stdin_used+0xda3>
    60c9:	b8 00 00 00 00       	mov    eax,0x0
    60ce:	e8 ed c3 ff ff       	call   24c0 <printf@plt>
    60d3:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    60da:	00 
    60db:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    60e2:	00 
    60e3:	eb 54                	jmp    6139 <rule_parser+0xe9>
    60e5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    60e9:	48 89 c7             	mov    rdi,rax
    60ec:	e8 cf fe ff ff       	call   5fc0 <is_comment>
    60f1:	84 c0                	test   al,al
    60f3:	74 02                	je     60f7 <rule_parser+0xa7>
    60f5:	eb 42                	jmp    6139 <rule_parser+0xe9>
    60f7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    60fb:	48 89 c7             	mov    rdi,rax
    60fe:	e8 e6 fe ff ff       	call   5fe9 <rstrip>
    6103:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6107:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    610a:	0f b6 c0             	movzx  eax,al
    610d:	f7 d8                	neg    eax
    610f:	85 c0                	test   eax,eax
    6111:	75 02                	jne    6115 <rule_parser+0xc5>
    6113:	eb 24                	jmp    6139 <rule_parser+0xe9>
    6115:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6119:	48 8d 35 94 7c 00 00 	lea    rsi,[rip+0x7c94]        # ddb4 <_IO_stdin_used+0xdb4>
    6120:	48 89 c7             	mov    rdi,rax
    6123:	e8 e8 c3 ff ff       	call   2510 <strstr@plt>
    6128:	48 85 c0             	test   rax,rax
    612b:	74 0c                	je     6139 <rule_parser+0xe9>
    612d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6131:	48 89 c7             	mov    rdi,rax
    6134:	e8 c2 4e 00 00       	call   affb <line_parser>
    6139:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    613d:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6141:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    6145:	48 89 ce             	mov    rsi,rcx
    6148:	48 89 c7             	mov    rdi,rax
    614b:	e8 20 c6 ff ff       	call   2770 <getline@plt>
    6150:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6154:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    6159:	75 8a                	jne    60e5 <rule_parser+0x95>
    615b:	0f b6 05 be 4d 10 00 	movzx  eax,BYTE PTR [rip+0x104dbe]        # 10af20 <debug_mode>
    6162:	84 c0                	test   al,al
    6164:	74 18                	je     617e <rule_parser+0x12e>
    6166:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    616a:	48 89 c6             	mov    rsi,rax
    616d:	48 8d 3d 46 7c 00 00 	lea    rdi,[rip+0x7c46]        # ddba <_IO_stdin_used+0xdba>
    6174:	b8 00 00 00 00       	mov    eax,0x0
    6179:	e8 42 c3 ff ff       	call   24c0 <printf@plt>
    617e:	90                   	nop
    617f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6183:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    618a:	00 00 
    618c:	74 05                	je     6193 <rule_parser+0x143>
    618e:	e8 3d c5 ff ff       	call   26d0 <__stack_chk_fail@plt>
    6193:	c9                   	leave  
    6194:	c3                   	ret    

0000000000006195 <deny_conf_parser>:
    6195:	f3 0f 1e fa          	endbr64 
    6199:	55                   	push   rbp
    619a:	48 89 e5             	mov    rbp,rsp
    619d:	48 83 ec 50          	sub    rsp,0x50
    61a1:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    61a5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    61ac:	00 00 
    61ae:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    61b2:	31 c0                	xor    eax,eax
    61b4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    61b8:	48 8d 35 59 79 00 00 	lea    rsi,[rip+0x7959]        # db18 <_IO_stdin_used+0xb18>
    61bf:	48 89 c7             	mov    rdi,rax
    61c2:	e8 49 c5 ff ff       	call   2710 <fopen@plt>
    61c7:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    61cb:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    61d0:	75 22                	jne    61f4 <deny_conf_parser+0x5f>
    61d2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    61d6:	48 89 c6             	mov    rsi,rax
    61d9:	48 8d 3d f0 7b 00 00 	lea    rdi,[rip+0x7bf0]        # ddd0 <_IO_stdin_used+0xdd0>
    61e0:	b8 00 00 00 00       	mov    eax,0x0
    61e5:	e8 d6 c2 ff ff       	call   24c0 <printf@plt>
    61ea:	bf 01 00 00 00       	mov    edi,0x1
    61ef:	e8 4c c5 ff ff       	call   2740 <exit@plt>
    61f4:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    61fb:	00 
    61fc:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6203:	00 
    6204:	e9 9a 00 00 00       	jmp    62a3 <deny_conf_parser+0x10e>
    6209:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    620d:	48 89 c7             	mov    rdi,rax
    6210:	e8 d4 fd ff ff       	call   5fe9 <rstrip>
    6215:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6219:	48 89 c7             	mov    rdi,rax
    621c:	e8 9f fd ff ff       	call   5fc0 <is_comment>
    6221:	84 c0                	test   al,al
    6223:	74 02                	je     6227 <deny_conf_parser+0x92>
    6225:	eb 7c                	jmp    62a3 <deny_conf_parser+0x10e>
    6227:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    622b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    622e:	0f b6 c0             	movzx  eax,al
    6231:	f7 d8                	neg    eax
    6233:	85 c0                	test   eax,eax
    6235:	75 02                	jne    6239 <deny_conf_parser+0xa4>
    6237:	eb 6a                	jmp    62a3 <deny_conf_parser+0x10e>
    6239:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    623d:	48 8d 35 bd 7b 00 00 	lea    rsi,[rip+0x7bbd]        # de01 <_IO_stdin_used+0xe01>
    6244:	48 89 c7             	mov    rdi,rax
    6247:	e8 c4 c2 ff ff       	call   2510 <strstr@plt>
    624c:	48 85 c0             	test   rax,rax
    624f:	74 52                	je     62a3 <deny_conf_parser+0x10e>
    6251:	8b 05 b9 bd 00 00    	mov    eax,DWORD PTR [rip+0xbdb9]        # 12010 <blk_ipv4_len>
    6257:	83 c0 01             	add    eax,0x1
    625a:	89 05 b0 bd 00 00    	mov    DWORD PTR [rip+0xbdb0],eax        # 12010 <blk_ipv4_len>
    6260:	8b 05 aa bd 00 00    	mov    eax,DWORD PTR [rip+0xbdaa]        # 12010 <blk_ipv4_len>
    6266:	48 63 d0             	movsxd rdx,eax
    6269:	48 89 d0             	mov    rax,rdx
    626c:	48 c1 e0 03          	shl    rax,0x3
    6270:	48 01 d0             	add    rax,rdx
    6273:	48 01 c0             	add    rax,rax
    6276:	48 8d 15 63 e0 0e 00 	lea    rdx,[rip+0xee063]        # f42e0 <blocked_ipv4_addrs>
    627d:	48 01 d0             	add    rax,rdx
    6280:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6284:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6288:	48 83 c0 05          	add    rax,0x5
    628c:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6290:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6294:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    6298:	48 89 d6             	mov    rsi,rdx
    629b:	48 89 c7             	mov    rdi,rax
    629e:	e8 fd c3 ff ff       	call   26a0 <strcpy@plt>
    62a3:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    62a7:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    62ab:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    62af:	48 89 ce             	mov    rsi,rcx
    62b2:	48 89 c7             	mov    rdi,rax
    62b5:	e8 b6 c4 ff ff       	call   2770 <getline@plt>
    62ba:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    62be:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    62c3:	0f 85 40 ff ff ff    	jne    6209 <deny_conf_parser+0x74>
    62c9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62cd:	48 85 c0             	test   rax,rax
    62d0:	74 0c                	je     62de <deny_conf_parser+0x149>
    62d2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62d6:	48 89 c7             	mov    rdi,rax
    62d9:	e8 52 c4 ff ff       	call   2730 <free@plt>
    62de:	90                   	nop
    62df:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    62e3:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    62ea:	00 00 
    62ec:	74 05                	je     62f3 <deny_conf_parser+0x15e>
    62ee:	e8 dd c3 ff ff       	call   26d0 <__stack_chk_fail@plt>
    62f3:	c9                   	leave  
    62f4:	c3                   	ret    

00000000000062f5 <host_mon_parser>:
    62f5:	f3 0f 1e fa          	endbr64 
    62f9:	55                   	push   rbp
    62fa:	48 89 e5             	mov    rbp,rsp
    62fd:	48 83 ec 10          	sub    rsp,0x10
    6301:	48 8b 05 38 bd 00 00 	mov    rax,QWORD PTR [rip+0xbd38]        # 12040 <default_host_conf>
    6308:	48 8d 35 09 78 00 00 	lea    rsi,[rip+0x7809]        # db18 <_IO_stdin_used+0xb18>
    630f:	48 89 c7             	mov    rdi,rax
    6312:	e8 f9 c3 ff ff       	call   2710 <fopen@plt>
    6317:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    631b:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    6320:	75 25                	jne    6347 <host_mon_parser+0x52>
    6322:	48 8b 05 17 bd 00 00 	mov    rax,QWORD PTR [rip+0xbd17]        # 12040 <default_host_conf>
    6329:	48 89 c6             	mov    rsi,rax
    632c:	48 8d 3d d3 7a 00 00 	lea    rdi,[rip+0x7ad3]        # de06 <_IO_stdin_used+0xe06>
    6333:	b8 00 00 00 00       	mov    eax,0x0
    6338:	e8 83 c1 ff ff       	call   24c0 <printf@plt>
    633d:	bf 01 00 00 00       	mov    edi,0x1
    6342:	e8 f9 c3 ff ff       	call   2740 <exit@plt>
    6347:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    634b:	48 89 c7             	mov    rdi,rax
    634e:	e8 6d c3 ff ff       	call   26c0 <fclose@plt>
    6353:	90                   	nop
    6354:	c9                   	leave  
    6355:	c3                   	ret    

0000000000006356 <rule_app>:
    6356:	f3 0f 1e fa          	endbr64 
    635a:	55                   	push   rbp
    635b:	48 89 e5             	mov    rbp,rsp
    635e:	48 83 ec 20          	sub    rsp,0x20
    6362:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6366:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    636a:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    636e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6372:	48 89 d6             	mov    rsi,rdx
    6375:	48 89 c7             	mov    rdi,rax
    6378:	e8 e9 02 00 00       	call   6666 <r_engine>
    637d:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    6380:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6384:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6388:	48 89 d6             	mov    rsi,rdx
    638b:	48 89 c7             	mov    rdi,rax
    638e:	e8 9a 5f 00 00       	call   c32d <d_engine>
    6393:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    6396:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    639a:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    63a1:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    63a5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    63a9:	48 89 d6             	mov    rsi,rdx
    63ac:	48 89 c7             	mov    rdi,rax
    63af:	ff d1                	call   rcx
    63b1:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    63b4:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    63b8:	74 40                	je     63fa <rule_app+0xa4>
    63ba:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    63be:	74 3a                	je     63fa <rule_app+0xa4>
    63c0:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    63c4:	74 34                	je     63fa <rule_app+0xa4>
    63c6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63ca:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    63d1:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    63d5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    63d9:	ba 00 00 00 00       	mov    edx,0x0
    63de:	48 89 ce             	mov    rsi,rcx
    63e1:	48 89 c7             	mov    rdi,rax
    63e4:	41 ff d0             	call   r8
    63e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63eb:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    63ee:	8d 50 01             	lea    edx,[rax+0x1]
    63f1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63f5:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    63f8:	eb 17                	jmp    6411 <rule_app+0xbb>
    63fa:	8b 05 28 bc 00 00    	mov    eax,DWORD PTR [rip+0xbc28]        # 12028 <VIGIL_MODE>
    6400:	83 f8 02             	cmp    eax,0x2
    6403:	75 0c                	jne    6411 <rule_app+0xbb>
    6405:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6409:	48 89 c7             	mov    rdi,rax
    640c:	e8 a1 3b 00 00       	call   9fb2 <forward_packet>
    6411:	90                   	nop
    6412:	c9                   	leave  
    6413:	c3                   	ret    

0000000000006414 <rulemgr>:
    6414:	f3 0f 1e fa          	endbr64 
    6418:	55                   	push   rbp
    6419:	48 89 e5             	mov    rbp,rsp
    641c:	48 83 ec 20          	sub    rsp,0x20
    6420:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6424:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    642b:	e9 23 02 00 00       	jmp    6653 <rulemgr+0x23f>
    6430:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6433:	8d 50 01             	lea    edx,[rax+0x1]
    6436:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    6439:	48 98                	cdqe   
    643b:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    6442:	48 8d 15 97 be 00 00 	lea    rdx,[rip+0xbe97]        # 122e0 <rules>
    6449:	48 01 d0             	add    rax,rdx
    644c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6450:	0f b6 05 85 2b 13 00 	movzx  eax,BYTE PTR [rip+0x132b85]        # 138fdc <in_test_mode>
    6457:	84 c0                	test   al,al
    6459:	74 30                	je     648b <rulemgr+0x77>
    645b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    645f:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6462:	83 f8 46             	cmp    eax,0x46
    6465:	75 0d                	jne    6474 <rulemgr+0x60>
    6467:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    646b:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    6472:	eb 17                	jmp    648b <rulemgr+0x77>
    6474:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6478:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    647b:	83 f8 45             	cmp    eax,0x45
    647e:	75 0b                	jne    648b <rulemgr+0x77>
    6480:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6484:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    648b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    648f:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6495:	83 f8 ff             	cmp    eax,0xffffffff
    6498:	74 19                	je     64b3 <rulemgr+0x9f>
    649a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    649e:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    64a1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64a5:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    64ab:	39 c2                	cmp    edx,eax
    64ad:	0f 85 a0 01 00 00    	jne    6653 <rulemgr+0x23f>
    64b3:	0f b6 05 c6 bb 00 00 	movzx  eax,BYTE PTR [rip+0xbbc6]        # 12080 <demo_mode>
    64ba:	84 c0                	test   al,al
    64bc:	75 0b                	jne    64c9 <rulemgr+0xb5>
    64be:	8b 05 a4 4a 10 00    	mov    eax,DWORD PTR [rip+0x104aa4]        # 10af68 <vigil_location>
    64c4:	83 f8 03             	cmp    eax,0x3
    64c7:	75 6b                	jne    6534 <rulemgr+0x120>
    64c9:	8b 05 99 4a 10 00    	mov    eax,DWORD PTR [rip+0x104a99]        # 10af68 <vigil_location>
    64cf:	83 f8 03             	cmp    eax,0x3
    64d2:	0f 85 7b 01 00 00    	jne    6653 <rulemgr+0x23f>
    64d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64dc:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    64df:	83 f8 ff             	cmp    eax,0xffffffff
    64e2:	74 16                	je     64fa <rulemgr+0xe6>
    64e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64e8:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    64eb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64ef:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    64f2:	39 c2                	cmp    edx,eax
    64f4:	0f 85 59 01 00 00    	jne    6653 <rulemgr+0x23f>
    64fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64fe:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6501:	83 f8 ff             	cmp    eax,0xffffffff
    6504:	74 16                	je     651c <rulemgr+0x108>
    6506:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    650a:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    650d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6511:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6514:	39 c2                	cmp    edx,eax
    6516:	0f 85 37 01 00 00    	jne    6653 <rulemgr+0x23f>
    651c:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6520:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6524:	48 89 d6             	mov    rsi,rdx
    6527:	48 89 c7             	mov    rdi,rax
    652a:	e8 27 fe ff ff       	call   6356 <rule_app>
    652f:	e9 1f 01 00 00       	jmp    6653 <rulemgr+0x23f>
    6534:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6538:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    653b:	83 f8 47             	cmp    eax,0x47
    653e:	74 16                	je     6556 <rulemgr+0x142>
    6540:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6544:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    6547:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    654b:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    654e:	39 c2                	cmp    edx,eax
    6550:	0f 85 fd 00 00 00    	jne    6653 <rulemgr+0x23f>
    6556:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    655a:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6560:	3d 80 00 00 00       	cmp    eax,0x80
    6565:	75 18                	jne    657f <rulemgr+0x16b>
    6567:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    656b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    656f:	48 89 d6             	mov    rsi,rdx
    6572:	48 89 c7             	mov    rdi,rax
    6575:	e8 dc fd ff ff       	call   6356 <rule_app>
    657a:	e9 d4 00 00 00       	jmp    6653 <rulemgr+0x23f>
    657f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6583:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6586:	83 f8 47             	cmp    eax,0x47
    6589:	75 79                	jne    6604 <rulemgr+0x1f0>
    658b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    658f:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6592:	83 f8 ff             	cmp    eax,0xffffffff
    6595:	74 28                	je     65bf <rulemgr+0x1ab>
    6597:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    659b:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    659e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65a2:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65a5:	39 c2                	cmp    edx,eax
    65a7:	74 16                	je     65bf <rulemgr+0x1ab>
    65a9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65ad:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    65b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65b4:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65b7:	39 c2                	cmp    edx,eax
    65b9:	0f 85 94 00 00 00    	jne    6653 <rulemgr+0x23f>
    65bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65c3:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65c6:	83 f8 ff             	cmp    eax,0xffffffff
    65c9:	74 24                	je     65ef <rulemgr+0x1db>
    65cb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65cf:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    65d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65d6:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65d9:	39 c2                	cmp    edx,eax
    65db:	74 12                	je     65ef <rulemgr+0x1db>
    65dd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65e1:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    65e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65e8:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65eb:	39 c2                	cmp    edx,eax
    65ed:	75 64                	jne    6653 <rulemgr+0x23f>
    65ef:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65f7:	48 89 d6             	mov    rsi,rdx
    65fa:	48 89 c7             	mov    rdi,rax
    65fd:	e8 54 fd ff ff       	call   6356 <rule_app>
    6602:	eb 4f                	jmp    6653 <rulemgr+0x23f>
    6604:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6608:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    660b:	83 f8 ff             	cmp    eax,0xffffffff
    660e:	74 12                	je     6622 <rulemgr+0x20e>
    6610:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6614:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6617:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    661b:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    661e:	39 c2                	cmp    edx,eax
    6620:	75 31                	jne    6653 <rulemgr+0x23f>
    6622:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6626:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6629:	83 f8 ff             	cmp    eax,0xffffffff
    662c:	74 12                	je     6640 <rulemgr+0x22c>
    662e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6632:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6635:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6639:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    663c:	39 c2                	cmp    edx,eax
    663e:	75 13                	jne    6653 <rulemgr+0x23f>
    6640:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6644:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6648:	48 89 d6             	mov    rsi,rdx
    664b:	48 89 c7             	mov    rdi,rax
    664e:	e8 03 fd ff ff       	call   6356 <rule_app>
    6653:	8b 05 bb b9 00 00    	mov    eax,DWORD PTR [rip+0xb9bb]        # 12014 <num_rules>
    6659:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    665c:	0f 8e ce fd ff ff    	jle    6430 <rulemgr+0x1c>
    6662:	90                   	nop
    6663:	90                   	nop
    6664:	c9                   	leave  
    6665:	c3                   	ret    

0000000000006666 <r_engine>:
    6666:	f3 0f 1e fa          	endbr64 
    666a:	55                   	push   rbp
    666b:	48 89 e5             	mov    rbp,rsp
    666e:	48 83 ec 10          	sub    rsp,0x10
    6672:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6676:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    667a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    667e:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6681:	3d 80 00 00 00       	cmp    eax,0x80
    6686:	0f 85 d9 00 00 00    	jne    6765 <r_engine+0xff>
    668c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6690:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    6697:	84 c0                	test   al,al
    6699:	74 25                	je     66c0 <r_engine+0x5a>
    669b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    669f:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    66a3:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    66a7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66ab:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    66b2:	38 c2                	cmp    dl,al
    66b4:	74 0a                	je     66c0 <r_engine+0x5a>
    66b6:	b8 00 00 00 00       	mov    eax,0x0
    66bb:	e9 9c 01 00 00       	jmp    685c <r_engine+0x1f6>
    66c0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66c4:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    66cb:	84 c0                	test   al,al
    66cd:	74 26                	je     66f5 <r_engine+0x8f>
    66cf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66d3:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    66d7:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    66db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66df:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    66e6:	66 39 c2             	cmp    dx,ax
    66e9:	74 0a                	je     66f5 <r_engine+0x8f>
    66eb:	b8 00 00 00 00       	mov    eax,0x0
    66f0:	e9 67 01 00 00       	jmp    685c <r_engine+0x1f6>
    66f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66f9:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    6700:	84 c0                	test   al,al
    6702:	74 26                	je     672a <r_engine+0xc4>
    6704:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6708:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    670c:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    6710:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6714:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    671b:	66 39 c2             	cmp    dx,ax
    671e:	74 0a                	je     672a <r_engine+0xc4>
    6720:	b8 00 00 00 00       	mov    eax,0x0
    6725:	e9 32 01 00 00       	jmp    685c <r_engine+0x1f6>
    672a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    672e:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    6735:	84 c0                	test   al,al
    6737:	0f 84 dc 00 00 00    	je     6819 <r_engine+0x1b3>
    673d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6741:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6745:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6748:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    674c:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    6753:	38 c2                	cmp    dl,al
    6755:	0f 84 be 00 00 00    	je     6819 <r_engine+0x1b3>
    675b:	b8 00 00 00 00       	mov    eax,0x0
    6760:	e9 f7 00 00 00       	jmp    685c <r_engine+0x1f6>
    6765:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6769:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    676c:	83 f8 7e             	cmp    eax,0x7e
    676f:	0f 85 a4 00 00 00    	jne    6819 <r_engine+0x1b3>
    6775:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6779:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    6780:	84 c0                	test   al,al
    6782:	74 2e                	je     67b2 <r_engine+0x14c>
    6784:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6788:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    678c:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    678f:	89 c7                	mov    edi,eax
    6791:	e8 ea bf ff ff       	call   2780 <ntohl@plt>
    6796:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    679a:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    67a1:	0f b7 d2             	movzx  edx,dx
    67a4:	39 d0                	cmp    eax,edx
    67a6:	74 0a                	je     67b2 <r_engine+0x14c>
    67a8:	b8 00 00 00 00       	mov    eax,0x0
    67ad:	e9 aa 00 00 00       	jmp    685c <r_engine+0x1f6>
    67b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67b6:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    67bd:	84 c0                	test   al,al
    67bf:	74 29                	je     67ea <r_engine+0x184>
    67c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67c5:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    67cc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67d0:	48 83 c0 60          	add    rax,0x60
    67d4:	48 89 d6             	mov    rsi,rdx
    67d7:	48 89 c7             	mov    rdi,rax
    67da:	e8 01 c0 ff ff       	call   27e0 <strcmp@plt>
    67df:	85 c0                	test   eax,eax
    67e1:	74 07                	je     67ea <r_engine+0x184>
    67e3:	b8 00 00 00 00       	mov    eax,0x0
    67e8:	eb 72                	jmp    685c <r_engine+0x1f6>
    67ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67ee:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    67f5:	84 c0                	test   al,al
    67f7:	74 20                	je     6819 <r_engine+0x1b3>
    67f9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67fd:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6801:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    6804:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6808:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    680e:	39 c2                	cmp    edx,eax
    6810:	74 07                	je     6819 <r_engine+0x1b3>
    6812:	b8 00 00 00 00       	mov    eax,0x0
    6817:	eb 43                	jmp    685c <r_engine+0x1f6>
    6819:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    681d:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    6821:	48 85 c0             	test   rax,rax
    6824:	74 31                	je     6857 <r_engine+0x1f1>
    6826:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    682a:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    6831:	84 c0                	test   al,al
    6833:	74 22                	je     6857 <r_engine+0x1f1>
    6835:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6839:	48 8b 40 48          	mov    rax,QWORD PTR [rax+0x48]
    683d:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    6841:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6845:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    684c:	38 c2                	cmp    dl,al
    684e:	74 07                	je     6857 <r_engine+0x1f1>
    6850:	b8 00 00 00 00       	mov    eax,0x0
    6855:	eb 05                	jmp    685c <r_engine+0x1f6>
    6857:	b8 01 00 00 00       	mov    eax,0x1
    685c:	c9                   	leave  
    685d:	c3                   	ret    

000000000000685e <test_tcp_session_status>:
    685e:	f3 0f 1e fa          	endbr64 
    6862:	55                   	push   rbp
    6863:	48 89 e5             	mov    rbp,rsp
    6866:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    686a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    686e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6872:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6878:	83 f8 7e             	cmp    eax,0x7e
    687b:	75 34                	jne    68b1 <test_tcp_session_status+0x53>
    687d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6881:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6884:	83 f8 7e             	cmp    eax,0x7e
    6887:	75 28                	jne    68b1 <test_tcp_session_status+0x53>
    6889:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    688d:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    6893:	83 f8 01             	cmp    eax,0x1
    6896:	75 12                	jne    68aa <test_tcp_session_status+0x4c>
    6898:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    689c:	8b 40 68             	mov    eax,DWORD PTR [rax+0x68]
    689f:	85 c0                	test   eax,eax
    68a1:	75 07                	jne    68aa <test_tcp_session_status+0x4c>
    68a3:	b8 00 00 00 00       	mov    eax,0x0
    68a8:	eb 0c                	jmp    68b6 <test_tcp_session_status+0x58>
    68aa:	b8 01 00 00 00       	mov    eax,0x1
    68af:	eb 05                	jmp    68b6 <test_tcp_session_status+0x58>
    68b1:	b8 01 00 00 00       	mov    eax,0x1
    68b6:	5d                   	pop    rbp
    68b7:	c3                   	ret    

00000000000068b8 <main>:
    68b8:	f3 0f 1e fa          	endbr64 
    68bc:	55                   	push   rbp
    68bd:	48 89 e5             	mov    rbp,rsp
    68c0:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    68c7:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    68cd:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    68d4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    68db:	00 00 
    68dd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    68e1:	31 c0                	xor    eax,eax
    68e3:	b8 00 00 00 00       	mov    eax,0x0
    68e8:	e8 8b 64 00 00       	call   cd78 <load_fn_mem_map>
    68ed:	b8 00 00 00 00       	mov    eax,0x0
    68f2:	e8 fd 08 00 00       	call   71f4 <print_logo>
    68f7:	b8 00 00 00 00       	mov    eax,0x0
    68fc:	e8 41 07 00 00       	call   7042 <print_cpu_info>
    6901:	c7 05 9d b9 00 00 01 	mov    DWORD PTR [rip+0xb99d],0x1        # 122a8 <is_running>
    6908:	00 00 00 
    690b:	bf 00 00 00 00       	mov    edi,0x0
    6910:	e8 7b bd ff ff       	call   2690 <time@plt>
    6915:	48 89 05 94 b9 00 00 	mov    QWORD PTR [rip+0xb994],rax        # 122b0 <last_clean_time>
    691c:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6923:	0f 85 e3 00 00 00    	jne    6a0c <main+0x154>
    6929:	b8 00 00 00 00       	mov    eax,0x0
    692e:	e8 e5 06 00 00       	call   7018 <print_help_and_exit>
    6933:	e9 d4 00 00 00       	jmp    6a0c <main+0x154>
    6938:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    693e:	83 e8 64             	sub    eax,0x64
    6941:	83 f8 10             	cmp    eax,0x10
    6944:	0f 87 9e 00 00 00    	ja     69e8 <main+0x130>
    694a:	89 c0                	mov    eax,eax
    694c:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    6953:	00 
    6954:	48 8d 05 a1 76 00 00 	lea    rax,[rip+0x76a1]        # dffc <_IO_stdin_used+0xffc>
    695b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    695e:	48 98                	cdqe   
    6960:	48 8d 15 95 76 00 00 	lea    rdx,[rip+0x7695]        # dffc <_IO_stdin_used+0xffc>
    6967:	48 01 d0             	add    rax,rdx
    696a:	3e ff e0             	notrack jmp rax
    696d:	c6 05 ac 45 10 00 01 	mov    BYTE PTR [rip+0x1045ac],0x1        # 10af20 <debug_mode>
    6974:	e9 93 00 00 00       	jmp    6a0c <main+0x154>
    6979:	b8 00 00 00 00       	mov    eax,0x0
    697e:	e8 95 06 00 00       	call   7018 <print_help_and_exit>
    6983:	e9 84 00 00 00       	jmp    6a0c <main+0x154>
    6988:	48 8b 05 d1 b6 00 00 	mov    rax,QWORD PTR [rip+0xb6d1]        # 12060 <optarg@@GLIBC_2.2.5>
    698f:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    6996:	eb 74                	jmp    6a0c <main+0x154>
    6998:	c6 05 c5 45 10 00 01 	mov    BYTE PTR [rip+0x1045c5],0x1        # 10af64 <packet_print>
    699f:	eb 6b                	jmp    6a0c <main+0x154>
    69a1:	c6 05 bd 45 10 00 01 	mov    BYTE PTR [rip+0x1045bd],0x1        # 10af65 <quiet_exit>
    69a8:	eb 62                	jmp    6a0c <main+0x154>
    69aa:	48 8d 3d 6f 74 00 00 	lea    rdi,[rip+0x746f]        # de20 <_IO_stdin_used+0xe20>
    69b1:	e8 aa be ff ff       	call   2860 <puts@plt>
    69b6:	bf 0a 00 00 00       	mov    edi,0xa
    69bb:	e8 80 bc ff ff       	call   2640 <sleep@plt>
    69c0:	c6 05 b9 b6 00 00 01 	mov    BYTE PTR [rip+0xb6b9],0x1        # 12080 <demo_mode>
    69c7:	eb 43                	jmp    6a0c <main+0x154>
    69c9:	48 8d 3d 90 74 00 00 	lea    rdi,[rip+0x7490]        # de60 <_IO_stdin_used+0xe60>
    69d0:	e8 8b be ff ff       	call   2860 <puts@plt>
    69d5:	bf 0a 00 00 00       	mov    edi,0xa
    69da:	e8 61 bc ff ff       	call   2640 <sleep@plt>
    69df:	c6 05 f6 25 13 00 01 	mov    BYTE PTR [rip+0x1325f6],0x1        # 138fdc <in_test_mode>
    69e6:	eb 24                	jmp    6a0c <main+0x154>
    69e8:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    69ee:	89 c6                	mov    esi,eax
    69f0:	48 8d 3d 9d 74 00 00 	lea    rdi,[rip+0x749d]        # de94 <_IO_stdin_used+0xe94>
    69f7:	b8 00 00 00 00       	mov    eax,0x0
    69fc:	e8 bf ba ff ff       	call   24c0 <printf@plt>
    6a01:	b8 00 00 00 00       	mov    eax,0x0
    6a06:	e8 0d 06 00 00       	call   7018 <print_help_and_exit>
    6a0b:	90                   	nop
    6a0c:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6a13:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    6a19:	48 8d 15 8a 74 00 00 	lea    rdx,[rip+0x748a]        # deaa <_IO_stdin_used+0xeaa>
    6a20:	48 89 ce             	mov    rsi,rcx
    6a23:	89 c7                	mov    edi,eax
    6a25:	e8 06 bb ff ff       	call   2530 <getopt@plt>
    6a2a:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6a30:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    6a37:	0f 85 fb fe ff ff    	jne    6938 <main+0x80>
    6a3d:	48 8d 35 83 01 00 00 	lea    rsi,[rip+0x183]        # 6bc7 <sigint_processor>
    6a44:	bf 02 00 00 00       	mov    edi,0x2
    6a49:	e8 d2 bc ff ff       	call   2720 <signal@plt>
    6a4e:	48 8d 05 1c 5f 00 00 	lea    rax,[rip+0x5f1c]        # c971 <crash_handler>
    6a55:	48 89 c6             	mov    rsi,rax
    6a58:	bf 0b 00 00 00       	mov    edi,0xb
    6a5d:	e8 be bc ff ff       	call   2720 <signal@plt>
    6a62:	48 8d 3d 4a 74 00 00 	lea    rdi,[rip+0x744a]        # deb3 <_IO_stdin_used+0xeb3>
    6a69:	e8 27 f7 ff ff       	call   6195 <deny_conf_parser>
    6a6e:	48 8d 3d 53 74 00 00 	lea    rdi,[rip+0x7453]        # dec8 <_IO_stdin_used+0xec8>
    6a75:	e8 e6 bd ff ff       	call   2860 <puts@plt>
    6a7a:	b8 00 00 00 00       	mov    eax,0x0
    6a7f:	e8 ad 2c 00 00       	call   9731 <load_csv_arp_cache>
    6a84:	83 f8 ff             	cmp    eax,0xffffffff
    6a87:	74 0e                	je     6a97 <main+0x1df>
    6a89:	48 8d 3d 78 74 00 00 	lea    rdi,[rip+0x7478]        # df08 <_IO_stdin_used+0xf08>
    6a90:	e8 cb bd ff ff       	call   2860 <puts@plt>
    6a95:	eb 0c                	jmp    6aa3 <main+0x1eb>
    6a97:	48 8d 3d 8a 74 00 00 	lea    rdi,[rip+0x748a]        # df28 <_IO_stdin_used+0xf28>
    6a9e:	e8 bd bd ff ff       	call   2860 <puts@plt>
    6aa3:	48 8d 3d af 74 00 00 	lea    rdi,[rip+0x74af]        # df59 <_IO_stdin_used+0xf59>
    6aaa:	e8 ba ee ff ff       	call   5969 <rule_library_parser>
    6aaf:	48 8d 3d b9 74 00 00 	lea    rdi,[rip+0x74b9]        # df6f <_IO_stdin_used+0xf6f>
    6ab6:	e8 a5 bd ff ff       	call   2860 <puts@plt>
    6abb:	b8 00 00 00 00       	mov    eax,0x0
    6ac0:	e8 42 54 00 00       	call   bf07 <rule_processor>
    6ac5:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6acc:	48 89 c6             	mov    rsi,rax
    6acf:	48 8d 3d b2 74 00 00 	lea    rdi,[rip+0x74b2]        # df88 <_IO_stdin_used+0xf88>
    6ad6:	b8 00 00 00 00       	mov    eax,0x0
    6adb:	e8 e0 b9 ff ff       	call   24c0 <printf@plt>
    6ae0:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6ae7:	00 00 00 00 
    6aeb:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6af2:	00 00 00 00 
    6af6:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6afd:	b8 00 00 00 00       	mov    eax,0x0
    6b02:	b9 fd 00 00 00       	mov    ecx,0xfd
    6b07:	48 89 d7             	mov    rdi,rdx
    6b0a:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6b0d:	48 89 fa             	mov    rdx,rdi
    6b10:	89 02                	mov    DWORD PTR [rdx],eax
    6b12:	48 83 c2 04          	add    rdx,0x4
    6b16:	66 89 02             	mov    WORD PTR [rdx],ax
    6b19:	48 83 c2 02          	add    rdx,0x2
    6b1d:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6b24:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6b2b:	49 89 d0             	mov    r8,rdx
    6b2e:	b9 64 00 00 00       	mov    ecx,0x64
    6b33:	ba 01 00 00 00       	mov    edx,0x1
    6b38:	be 00 04 00 00       	mov    esi,0x400
    6b3d:	48 89 c7             	mov    rdi,rax
    6b40:	e8 3b ba ff ff       	call   2580 <pcap_open_live@plt>
    6b45:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6b4c:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6b53:	00 
    6b54:	75 16                	jne    6b6c <main+0x2b4>
    6b56:	48 8d 3d 4c 74 00 00 	lea    rdi,[rip+0x744c]        # dfa9 <_IO_stdin_used+0xfa9>
    6b5d:	e8 0e bb ff ff       	call   2670 <perror@plt>
    6b62:	bf 01 00 00 00       	mov    edi,0x1
    6b67:	e8 d4 bb ff ff       	call   2740 <exit@plt>
    6b6c:	b8 00 00 00 00       	mov    eax,0x0
    6b71:	e8 c5 5b 00 00       	call   c73b <collect_scripts>
    6b76:	b8 00 00 00 00       	mov    eax,0x0
    6b7b:	e8 8b 06 00 00       	call   720b <start_nsh_server>
    6b80:	48 8d 3d 41 74 00 00 	lea    rdi,[rip+0x7441]        # dfc8 <_IO_stdin_used+0xfc8>
    6b87:	e8 d4 bc ff ff       	call   2860 <puts@plt>
    6b8c:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6b93:	b9 00 00 00 00       	mov    ecx,0x0
    6b98:	48 8d 15 a4 be ff ff 	lea    rdx,[rip+0xffffffffffffbea4]        # 2a43 <pktmgr>
    6b9f:	be ff ff ff ff       	mov    esi,0xffffffff
    6ba4:	48 89 c7             	mov    rdi,rax
    6ba7:	e8 04 b9 ff ff       	call   24b0 <pcap_loop@plt>
    6bac:	b8 00 00 00 00       	mov    eax,0x0
    6bb1:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6bb5:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6bbc:	00 00 
    6bbe:	74 05                	je     6bc5 <main+0x30d>
    6bc0:	e8 0b bb ff ff       	call   26d0 <__stack_chk_fail@plt>
    6bc5:	c9                   	leave  
    6bc6:	c3                   	ret    

0000000000006bc7 <sigint_processor>:
    6bc7:	f3 0f 1e fa          	endbr64 
    6bcb:	55                   	push   rbp
    6bcc:	48 89 e5             	mov    rbp,rsp
    6bcf:	41 54                	push   r12
    6bd1:	53                   	push   rbx
    6bd2:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6bd9:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6bdf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6be6:	00 00 
    6be8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6bec:	31 c0                	xor    eax,eax
    6bee:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6bf5:	00 00 00 
    6bf8:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6bff:	48 89 c7             	mov    rdi,rax
    6c02:	e8 ac c8 ff ff       	call   34b3 <cb_get_formatted_time>
    6c07:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6c0e:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6c14:	89 c6                	mov    esi,eax
    6c16:	48 8d 3d 23 74 00 00 	lea    rdi,[rip+0x7423]        # e040 <_IO_stdin_used+0x1040>
    6c1d:	b8 00 00 00 00       	mov    eax,0x0
    6c22:	e8 99 b8 ff ff       	call   24c0 <printf@plt>
    6c27:	48 8d 3d 37 74 00 00 	lea    rdi,[rip+0x7437]        # e065 <_IO_stdin_used+0x1065>
    6c2e:	e8 3d ba ff ff       	call   2670 <perror@plt>
    6c33:	0f b6 05 2b 43 10 00 	movzx  eax,BYTE PTR [rip+0x10432b]        # 10af65 <quiet_exit>
    6c3a:	83 f0 01             	xor    eax,0x1
    6c3d:	84 c0                	test   al,al
    6c3f:	0f 84 2e 02 00 00    	je     6e73 <sigint_processor+0x2ac>
    6c45:	8b 05 59 b6 00 00    	mov    eax,DWORD PTR [rip+0xb659]        # 122a4 <total_pkt_captured>
    6c4b:	89 c6                	mov    esi,eax
    6c4d:	48 8d 3d 12 74 00 00 	lea    rdi,[rip+0x7412]        # e066 <_IO_stdin_used+0x1066>
    6c54:	b8 00 00 00 00       	mov    eax,0x0
    6c59:	e8 62 b8 ff ff       	call   24c0 <printf@plt>
    6c5e:	48 8d 3d 1b 74 00 00 	lea    rdi,[rip+0x741b]        # e080 <_IO_stdin_used+0x1080>
    6c65:	e8 f6 bb ff ff       	call   2860 <puts@plt>
    6c6a:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6c71:	00 00 00 
    6c74:	e9 e8 01 00 00       	jmp    6e61 <sigint_processor+0x29a>
    6c79:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c7f:	48 63 d0             	movsxd rdx,eax
    6c82:	48 89 d0             	mov    rax,rdx
    6c85:	48 c1 e0 02          	shl    rax,0x2
    6c89:	48 01 d0             	add    rax,rdx
    6c8c:	48 c1 e0 03          	shl    rax,0x3
    6c90:	48 01 d0             	add    rax,rdx
    6c93:	48 c1 e0 04          	shl    rax,0x4
    6c97:	48 89 c2             	mov    rdx,rax
    6c9a:	48 8d 05 ef da 0e 00 	lea    rax,[rip+0xedaef]        # f4790 <watchlist+0x270>
    6ca1:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6ca5:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cab:	48 63 d0             	movsxd rdx,eax
    6cae:	48 89 d0             	mov    rax,rdx
    6cb1:	48 c1 e0 02          	shl    rax,0x2
    6cb5:	48 01 d0             	add    rax,rdx
    6cb8:	48 c1 e0 03          	shl    rax,0x3
    6cbc:	48 01 d0             	add    rax,rdx
    6cbf:	48 c1 e0 04          	shl    rax,0x4
    6cc3:	48 89 c2             	mov    rdx,rax
    6cc6:	48 8d 05 b7 da 0e 00 	lea    rax,[rip+0xedab7]        # f4784 <watchlist+0x264>
    6ccd:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6cd1:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cd7:	48 63 d0             	movsxd rdx,eax
    6cda:	48 89 d0             	mov    rax,rdx
    6cdd:	48 c1 e0 02          	shl    rax,0x2
    6ce1:	48 01 d0             	add    rax,rdx
    6ce4:	48 c1 e0 03          	shl    rax,0x3
    6ce8:	48 01 d0             	add    rax,rdx
    6ceb:	48 c1 e0 04          	shl    rax,0x4
    6cef:	48 89 c2             	mov    rdx,rax
    6cf2:	48 8d 05 93 da 0e 00 	lea    rax,[rip+0xeda93]        # f478c <watchlist+0x26c>
    6cf9:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6cfd:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d03:	48 63 d0             	movsxd rdx,eax
    6d06:	48 89 d0             	mov    rax,rdx
    6d09:	48 c1 e0 02          	shl    rax,0x2
    6d0d:	48 01 d0             	add    rax,rdx
    6d10:	48 c1 e0 03          	shl    rax,0x3
    6d14:	48 01 d0             	add    rax,rdx
    6d17:	48 c1 e0 04          	shl    rax,0x4
    6d1b:	48 89 c2             	mov    rdx,rax
    6d1e:	48 8d 05 5b da 0e 00 	lea    rax,[rip+0xeda5b]        # f4780 <watchlist+0x260>
    6d25:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6d29:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d2f:	48 63 d0             	movsxd rdx,eax
    6d32:	48 89 d0             	mov    rax,rdx
    6d35:	48 c1 e0 02          	shl    rax,0x2
    6d39:	48 01 d0             	add    rax,rdx
    6d3c:	48 c1 e0 03          	shl    rax,0x3
    6d40:	48 01 d0             	add    rax,rdx
    6d43:	48 c1 e0 04          	shl    rax,0x4
    6d47:	48 89 c2             	mov    rdx,rax
    6d4a:	48 8d 05 37 da 0e 00 	lea    rax,[rip+0xeda37]        # f4788 <watchlist+0x268>
    6d51:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6d54:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d5a:	48 63 d0             	movsxd rdx,eax
    6d5d:	48 89 d0             	mov    rax,rdx
    6d60:	48 c1 e0 02          	shl    rax,0x2
    6d64:	48 01 d0             	add    rax,rdx
    6d67:	48 c1 e0 03          	shl    rax,0x3
    6d6b:	48 01 d0             	add    rax,rdx
    6d6e:	48 c1 e0 04          	shl    rax,0x4
    6d72:	48 89 c2             	mov    rdx,rax
    6d75:	48 8d 05 00 da 0e 00 	lea    rax,[rip+0xeda00]        # f477c <watchlist+0x25c>
    6d7c:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6d80:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d86:	48 63 d0             	movsxd rdx,eax
    6d89:	48 89 d0             	mov    rax,rdx
    6d8c:	48 c1 e0 02          	shl    rax,0x2
    6d90:	48 01 d0             	add    rax,rdx
    6d93:	48 c1 e0 03          	shl    rax,0x3
    6d97:	48 01 d0             	add    rax,rdx
    6d9a:	48 c1 e0 04          	shl    rax,0x4
    6d9e:	48 89 c2             	mov    rdx,rax
    6da1:	48 8d 05 f4 d9 0e 00 	lea    rax,[rip+0xed9f4]        # f479c <watchlist+0x27c>
    6da8:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6dab:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6db1:	48 63 d0             	movsxd rdx,eax
    6db4:	48 89 d0             	mov    rax,rdx
    6db7:	48 c1 e0 02          	shl    rax,0x2
    6dbb:	48 01 d0             	add    rax,rdx
    6dbe:	48 c1 e0 03          	shl    rax,0x3
    6dc2:	48 01 d0             	add    rax,rdx
    6dc5:	48 c1 e0 04          	shl    rax,0x4
    6dc9:	48 89 c2             	mov    rdx,rax
    6dcc:	48 8d 05 cd d9 0e 00 	lea    rax,[rip+0xed9cd]        # f47a0 <watchlist+0x280>
    6dd3:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6dd6:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ddc:	48 63 d0             	movsxd rdx,eax
    6ddf:	48 89 d0             	mov    rax,rdx
    6de2:	48 c1 e0 02          	shl    rax,0x2
    6de6:	48 01 d0             	add    rax,rdx
    6de9:	48 c1 e0 03          	shl    rax,0x3
    6ded:	48 01 d0             	add    rax,rdx
    6df0:	48 c1 e0 04          	shl    rax,0x4
    6df4:	48 89 c2             	mov    rdx,rax
    6df7:	48 8d 05 7a d9 0e 00 	lea    rax,[rip+0xed97a]        # f4778 <watchlist+0x258>
    6dfe:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6e01:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e07:	48 63 d0             	movsxd rdx,eax
    6e0a:	48 89 d0             	mov    rax,rdx
    6e0d:	48 c1 e0 02          	shl    rax,0x2
    6e11:	48 01 d0             	add    rax,rdx
    6e14:	48 c1 e0 03          	shl    rax,0x3
    6e18:	48 01 d0             	add    rax,rdx
    6e1b:	48 c1 e0 04          	shl    rax,0x4
    6e1f:	48 8d 15 fa d6 0e 00 	lea    rdx,[rip+0xed6fa]        # f4520 <watchlist>
    6e26:	48 01 d0             	add    rax,rdx
    6e29:	48 83 c0 08          	add    rax,0x8
    6e2d:	48 83 ec 08          	sub    rsp,0x8
    6e31:	41 53                	push   r11
    6e33:	41 52                	push   r10
    6e35:	41 51                	push   r9
    6e37:	41 50                	push   r8
    6e39:	57                   	push   rdi
    6e3a:	45 89 e1             	mov    r9d,r12d
    6e3d:	41 89 d8             	mov    r8d,ebx
    6e40:	89 f2                	mov    edx,esi
    6e42:	48 89 c6             	mov    rsi,rax
    6e45:	48 8d 3d 6c 72 00 00 	lea    rdi,[rip+0x726c]        # e0b8 <_IO_stdin_used+0x10b8>
    6e4c:	b8 00 00 00 00       	mov    eax,0x0
    6e51:	e8 6a b6 ff ff       	call   24c0 <printf@plt>
    6e56:	48 83 c4 30          	add    rsp,0x30
    6e5a:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6e61:	8b 05 b1 b1 00 00    	mov    eax,DWORD PTR [rip+0xb1b1]        # 12018 <watchlist_num>
    6e67:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6e6d:	0f 8e 06 fe ff ff    	jle    6c79 <sigint_processor+0xb2>
    6e73:	48 8d 35 de 72 00 00 	lea    rsi,[rip+0x72de]        # e158 <_IO_stdin_used+0x1158>
    6e7a:	48 8d 3d d9 72 00 00 	lea    rdi,[rip+0x72d9]        # e15a <_IO_stdin_used+0x115a>
    6e81:	e8 8a b8 ff ff       	call   2710 <fopen@plt>
    6e86:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6e8d:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6e94:	00 
    6e95:	0f 85 99 00 00 00    	jne    6f34 <sigint_processor+0x36d>
    6e9b:	48 8d 3d d6 72 00 00 	lea    rdi,[rip+0x72d6]        # e178 <_IO_stdin_used+0x1178>
    6ea2:	e8 b9 b9 ff ff       	call   2860 <puts@plt>
    6ea7:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6eae:	48 89 c7             	mov    rdi,rax
    6eb1:	e8 0a b8 ff ff       	call   26c0 <fclose@plt>
    6eb6:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6ebd:	00 00 00 
    6ec0:	eb 5f                	jmp    6f21 <sigint_processor+0x35a>
    6ec2:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6ec8:	48 63 d0             	movsxd rdx,eax
    6ecb:	48 89 d0             	mov    rax,rdx
    6ece:	48 c1 e0 04          	shl    rax,0x4
    6ed2:	48 01 d0             	add    rax,rdx
    6ed5:	48 01 c0             	add    rax,rax
    6ed8:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6edc:	48 8d 05 3d 1e 10 00 	lea    rax,[rip+0x101e3d]        # 108d20 <arpcache>
    6ee3:	48 01 c2             	add    rdx,rax
    6ee6:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6eec:	48 63 c8             	movsxd rcx,eax
    6eef:	48 89 c8             	mov    rax,rcx
    6ef2:	48 c1 e0 04          	shl    rax,0x4
    6ef6:	48 01 c8             	add    rax,rcx
    6ef9:	48 01 c0             	add    rax,rax
    6efc:	48 8d 0d 1d 1e 10 00 	lea    rcx,[rip+0x101e1d]        # 108d20 <arpcache>
    6f03:	48 01 c8             	add    rax,rcx
    6f06:	48 89 c6             	mov    rsi,rax
    6f09:	48 8d 3d af 72 00 00 	lea    rdi,[rip+0x72af]        # e1bf <_IO_stdin_used+0x11bf>
    6f10:	b8 00 00 00 00       	mov    eax,0x0
    6f15:	e8 a6 b5 ff ff       	call   24c0 <printf@plt>
    6f1a:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    6f21:	8b 05 f5 b0 00 00    	mov    eax,DWORD PTR [rip+0xb0f5]        # 1201c <arp_entries>
    6f27:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    6f2d:	7e 93                	jle    6ec2 <sigint_processor+0x2fb>
    6f2f:	e9 da 00 00 00       	jmp    700e <sigint_processor+0x447>
    6f34:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    6f3b:	00 00 00 
    6f3e:	eb 67                	jmp    6fa7 <sigint_processor+0x3e0>
    6f40:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6f46:	48 63 d0             	movsxd rdx,eax
    6f49:	48 89 d0             	mov    rax,rdx
    6f4c:	48 c1 e0 04          	shl    rax,0x4
    6f50:	48 01 d0             	add    rax,rdx
    6f53:	48 01 c0             	add    rax,rax
    6f56:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6f5a:	48 8d 05 bf 1d 10 00 	lea    rax,[rip+0x101dbf]        # 108d20 <arpcache>
    6f61:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    6f65:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6f6b:	48 63 d0             	movsxd rdx,eax
    6f6e:	48 89 d0             	mov    rax,rdx
    6f71:	48 c1 e0 04          	shl    rax,0x4
    6f75:	48 01 d0             	add    rax,rdx
    6f78:	48 01 c0             	add    rax,rax
    6f7b:	48 8d 15 9e 1d 10 00 	lea    rdx,[rip+0x101d9e]        # 108d20 <arpcache>
    6f82:	48 01 c2             	add    rdx,rax
    6f85:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6f8c:	48 8d 35 36 72 00 00 	lea    rsi,[rip+0x7236]        # e1c9 <_IO_stdin_used+0x11c9>
    6f93:	48 89 c7             	mov    rdi,rax
    6f96:	b8 00 00 00 00       	mov    eax,0x0
    6f9b:	e8 70 b8 ff ff       	call   2810 <fprintf@plt>
    6fa0:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    6fa7:	8b 05 6f b0 00 00    	mov    eax,DWORD PTR [rip+0xb06f]        # 1201c <arp_entries>
    6fad:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    6fb3:	7e 8b                	jle    6f40 <sigint_processor+0x379>
    6fb5:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6fbc:	48 89 c7             	mov    rdi,rax
    6fbf:	e8 fc b6 ff ff       	call   26c0 <fclose@plt>
    6fc4:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    6fcb:	00 00 00 
    6fce:	eb 2f                	jmp    6fff <sigint_processor+0x438>
    6fd0:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    6fd6:	48 98                	cdqe   
    6fd8:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    6fdf:	00 
    6fe0:	48 8d 05 b9 b0 00 00 	lea    rax,[rip+0xb0b9]        # 120a0 <threads>
    6fe7:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    6feb:	be 00 00 00 00       	mov    esi,0x0
    6ff0:	48 89 c7             	mov    rdi,rax
    6ff3:	e8 88 b6 ff ff       	call   2680 <pthread_join@plt>
    6ff8:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    6fff:	8b 05 9b b2 00 00    	mov    eax,DWORD PTR [rip+0xb29b]        # 122a0 <thread_count>
    7005:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    700b:	7c c3                	jl     6fd0 <sigint_processor+0x409>
    700d:	90                   	nop
    700e:	bf 00 00 00 00       	mov    edi,0x0
    7013:	e8 28 b7 ff ff       	call   2740 <exit@plt>

0000000000007018 <print_help_and_exit>:
    7018:	f3 0f 1e fa          	endbr64 
    701c:	55                   	push   rbp
    701d:	48 89 e5             	mov    rbp,rsp
    7020:	48 8d 35 a9 71 00 00 	lea    rsi,[rip+0x71a9]        # e1d0 <_IO_stdin_used+0x11d0>
    7027:	48 8d 3d aa 71 00 00 	lea    rdi,[rip+0x71aa]        # e1d8 <_IO_stdin_used+0x11d8>
    702e:	b8 00 00 00 00       	mov    eax,0x0
    7033:	e8 88 b4 ff ff       	call   24c0 <printf@plt>
    7038:	bf 00 00 00 00       	mov    edi,0x0
    703d:	e8 fe b6 ff ff       	call   2740 <exit@plt>

0000000000007042 <print_cpu_info>:
    7042:	f3 0f 1e fa          	endbr64 
    7046:	55                   	push   rbp
    7047:	48 89 e5             	mov    rbp,rsp
    704a:	53                   	push   rbx
    704b:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    7052:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7059:	00 00 
    705b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    705f:	31 c0                	xor    eax,eax
    7061:	48 8d 35 f7 71 00 00 	lea    rsi,[rip+0x71f7]        # e25f <_IO_stdin_used+0x125f>
    7068:	48 8d 3d f3 71 00 00 	lea    rdi,[rip+0x71f3]        # e262 <_IO_stdin_used+0x1262>
    706f:	e8 9c b6 ff ff       	call   2710 <fopen@plt>
    7074:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    707b:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    7082:	00 00 00 00 
    7086:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    708d:	00 00 00 00 
    7091:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    7098:	00 00 00 
    709b:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    70a2:	ba 00 02 00 00       	mov    edx,0x200
    70a7:	be 00 00 00 00       	mov    esi,0x0
    70ac:	48 89 c7             	mov    rdi,rax
    70af:	e8 5c b5 ff ff       	call   2610 <memset@plt>
    70b4:	e9 b3 00 00 00       	jmp    716c <print_cpu_info+0x12a>
    70b9:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    70c0:	ba 0a 00 00 00       	mov    edx,0xa
    70c5:	48 89 c6             	mov    rsi,rax
    70c8:	48 8d 3d a1 71 00 00 	lea    rdi,[rip+0x71a1]        # e270 <_IO_stdin_used+0x1270>
    70cf:	e8 ec b4 ff ff       	call   25c0 <strncmp@plt>
    70d4:	85 c0                	test   eax,eax
    70d6:	0f 85 90 00 00 00    	jne    716c <print_cpu_info+0x12a>
    70dc:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    70e3:	00 00 00 
    70e6:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    70ed:	00 00 00 
    70f0:	eb 2e                	jmp    7120 <print_cpu_info+0xde>
    70f2:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    70f9:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    70ff:	48 98                	cdqe   
    7101:	48 01 d0             	add    rax,rdx
    7104:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7107:	3c 3a                	cmp    al,0x3a
    7109:	75 0e                	jne    7119 <print_cpu_info+0xd7>
    710b:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7111:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    7117:	eb 24                	jmp    713d <print_cpu_info+0xfb>
    7119:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    7120:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7126:	48 63 d8             	movsxd rbx,eax
    7129:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7130:	48 89 c7             	mov    rdi,rax
    7133:	e8 68 b4 ff ff       	call   25a0 <strlen@plt>
    7138:	48 39 c3             	cmp    rbx,rax
    713b:	72 b5                	jb     70f2 <print_cpu_info+0xb0>
    713d:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    7144:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    714b:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    7151:	48 98                	cdqe   
    7153:	48 83 c0 02          	add    rax,0x2
    7157:	48 01 c2             	add    rdx,rax
    715a:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7161:	48 89 d6             	mov    rsi,rdx
    7164:	48 89 c7             	mov    rdi,rax
    7167:	e8 64 b7 ff ff       	call   28d0 <strcat@plt>
    716c:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    7173:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    717a:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    7181:	48 89 d1             	mov    rcx,rdx
    7184:	ba 0a 00 00 00       	mov    edx,0xa
    7189:	48 89 c7             	mov    rdi,rax
    718c:	e8 0f b7 ff ff       	call   28a0 <getdelim@plt>
    7191:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    7195:	0f 85 1e ff ff ff    	jne    70b9 <print_cpu_info+0x77>
    719b:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    71a2:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    71a8:	89 c6                	mov    esi,eax
    71aa:	48 8d 3d ca 70 00 00 	lea    rdi,[rip+0x70ca]        # e27b <_IO_stdin_used+0x127b>
    71b1:	b8 00 00 00 00       	mov    eax,0x0
    71b6:	e8 05 b3 ff ff       	call   24c0 <printf@plt>
    71bb:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    71c2:	48 89 c7             	mov    rdi,rax
    71c5:	e8 66 b5 ff ff       	call   2730 <free@plt>
    71ca:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    71d1:	48 89 c7             	mov    rdi,rax
    71d4:	e8 e7 b4 ff ff       	call   26c0 <fclose@plt>
    71d9:	90                   	nop
    71da:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    71de:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    71e5:	00 00 
    71e7:	74 05                	je     71ee <print_cpu_info+0x1ac>
    71e9:	e8 e2 b4 ff ff       	call   26d0 <__stack_chk_fail@plt>
    71ee:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    71f2:	c9                   	leave  
    71f3:	c3                   	ret    

00000000000071f4 <print_logo>:
    71f4:	f3 0f 1e fa          	endbr64 
    71f8:	55                   	push   rbp
    71f9:	48 89 e5             	mov    rbp,rsp
    71fc:	48 8d 3d 8d 70 00 00 	lea    rdi,[rip+0x708d]        # e290 <_IO_stdin_used+0x1290>
    7203:	e8 58 b6 ff ff       	call   2860 <puts@plt>
    7208:	90                   	nop
    7209:	5d                   	pop    rbp
    720a:	c3                   	ret    

000000000000720b <start_nsh_server>:
    720b:	f3 0f 1e fa          	endbr64 
    720f:	55                   	push   rbp
    7210:	48 89 e5             	mov    rbp,rsp
    7213:	48 83 ec 10          	sub    rsp,0x10
    7217:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    721e:	00 00 
    7220:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7224:	31 c0                	xor    eax,eax
    7226:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    722a:	b9 00 00 00 00       	mov    ecx,0x0
    722f:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 72a7 <actually_start_nsh_server>
    7236:	be 00 00 00 00       	mov    esi,0x0
    723b:	48 89 c7             	mov    rdi,rax
    723e:	e8 ad b6 ff ff       	call   28f0 <pthread_create@plt>
    7243:	90                   	nop
    7244:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7248:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    724f:	00 00 
    7251:	74 05                	je     7258 <start_nsh_server+0x4d>
    7253:	e8 78 b4 ff ff       	call   26d0 <__stack_chk_fail@plt>
    7258:	c9                   	leave  
    7259:	c3                   	ret    

000000000000725a <rnstrip>:
    725a:	f3 0f 1e fa          	endbr64 
    725e:	55                   	push   rbp
    725f:	48 89 e5             	mov    rbp,rsp
    7262:	48 83 ec 10          	sub    rsp,0x10
    7266:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    726a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    726e:	48 8d 35 93 71 00 00 	lea    rsi,[rip+0x7193]        # e408 <_IO_stdin_used+0x1408>
    7275:	48 89 c7             	mov    rdi,rax
    7278:	e8 63 b2 ff ff       	call   24e0 <strcspn@plt>
    727d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    7281:	48 01 d0             	add    rax,rdx
    7284:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7287:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    728b:	48 8d 35 78 71 00 00 	lea    rsi,[rip+0x7178]        # e40a <_IO_stdin_used+0x140a>
    7292:	48 89 c7             	mov    rdi,rax
    7295:	e8 46 b2 ff ff       	call   24e0 <strcspn@plt>
    729a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    729e:	48 01 d0             	add    rax,rdx
    72a1:	c6 00 00             	mov    BYTE PTR [rax],0x0
    72a4:	90                   	nop
    72a5:	c9                   	leave  
    72a6:	c3                   	ret    

00000000000072a7 <actually_start_nsh_server>:
    72a7:	f3 0f 1e fa          	endbr64 
    72ab:	55                   	push   rbp
    72ac:	48 89 e5             	mov    rbp,rsp
    72af:	48 83 ec 50          	sub    rsp,0x50
    72b3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    72ba:	00 00 
    72bc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    72c0:	31 c0                	xor    eax,eax
    72c2:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    72c9:	ba 00 00 00 00       	mov    edx,0x0
    72ce:	be 01 00 00 00       	mov    esi,0x1
    72d3:	bf 02 00 00 00       	mov    edi,0x2
    72d8:	e8 63 b2 ff ff       	call   2540 <socket@plt>
    72dd:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    72e0:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    72e4:	75 16                	jne    72fc <actually_start_nsh_server+0x55>
    72e6:	48 8d 3d 23 71 00 00 	lea    rdi,[rip+0x7123]        # e410 <_IO_stdin_used+0x1410>
    72ed:	e8 6e b5 ff ff       	call   2860 <puts@plt>
    72f2:	bf 01 00 00 00       	mov    edi,0x1
    72f7:	e8 44 b4 ff ff       	call   2740 <exit@plt>
    72fc:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7300:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7303:	41 b8 04 00 00 00    	mov    r8d,0x4
    7309:	48 89 d1             	mov    rcx,rdx
    730c:	ba 02 00 00 00       	mov    edx,0x2
    7311:	be 01 00 00 00       	mov    esi,0x1
    7316:	89 c7                	mov    edi,eax
    7318:	e8 c3 b5 ff ff       	call   28e0 <setsockopt@plt>
    731d:	85 c0                	test   eax,eax
    731f:	74 16                	je     7337 <actually_start_nsh_server+0x90>
    7321:	48 8d 3d 10 71 00 00 	lea    rdi,[rip+0x7110]        # e438 <_IO_stdin_used+0x1438>
    7328:	e8 33 b5 ff ff       	call   2860 <puts@plt>
    732d:	bf 01 00 00 00       	mov    edi,0x1
    7332:	e8 09 b4 ff ff       	call   2740 <exit@plt>
    7337:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    733d:	bf 00 00 00 00       	mov    edi,0x0
    7342:	e8 09 b3 ff ff       	call   2650 <htonl@plt>
    7347:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    734a:	bf 17 00 00 00       	mov    edi,0x17
    734f:	e8 7c b1 ff ff       	call   24d0 <htons@plt>
    7354:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    7358:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    735c:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    735f:	ba 10 00 00 00       	mov    edx,0x10
    7364:	48 89 ce             	mov    rsi,rcx
    7367:	89 c7                	mov    edi,eax
    7369:	e8 82 b1 ff ff       	call   24f0 <bind@plt>
    736e:	85 c0                	test   eax,eax
    7370:	79 16                	jns    7388 <actually_start_nsh_server+0xe1>
    7372:	48 8d 3d e7 70 00 00 	lea    rdi,[rip+0x70e7]        # e460 <_IO_stdin_used+0x1460>
    7379:	e8 e2 b4 ff ff       	call   2860 <puts@plt>
    737e:	bf 01 00 00 00       	mov    edi,0x1
    7383:	e8 b8 b3 ff ff       	call   2740 <exit@plt>
    7388:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    738b:	be 05 00 00 00       	mov    esi,0x5
    7390:	89 c7                	mov    edi,eax
    7392:	e8 59 b3 ff ff       	call   26f0 <listen@plt>
    7397:	85 c0                	test   eax,eax
    7399:	79 16                	jns    73b1 <actually_start_nsh_server+0x10a>
    739b:	48 8d 3d f6 70 00 00 	lea    rdi,[rip+0x70f6]        # e498 <_IO_stdin_used+0x1498>
    73a2:	e8 b9 b4 ff ff       	call   2860 <puts@plt>
    73a7:	bf 01 00 00 00       	mov    edi,0x1
    73ac:	e8 8f b3 ff ff       	call   2740 <exit@plt>
    73b1:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    73b5:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    73b9:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    73bc:	48 89 ce             	mov    rsi,rcx
    73bf:	89 c7                	mov    edi,eax
    73c1:	e8 8a b1 ff ff       	call   2550 <accept@plt>
    73c6:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    73c9:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    73cd:	79 20                	jns    73ef <actually_start_nsh_server+0x148>
    73cf:	b8 00 00 00 00       	mov    eax,0x0
    73d4:	e8 06 c0 ff ff       	call   33df <get_formated_time>
    73d9:	48 89 c6             	mov    rsi,rax
    73dc:	48 8d 3d e5 70 00 00 	lea    rdi,[rip+0x70e5]        # e4c8 <_IO_stdin_used+0x14c8>
    73e3:	b8 00 00 00 00       	mov    eax,0x0
    73e8:	e8 d3 b0 ff ff       	call   24c0 <printf@plt>
    73ed:	eb c2                	jmp    73b1 <actually_start_nsh_server+0x10a>
    73ef:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    73f2:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    73f5:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    73f9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    73fd:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    7401:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    7405:	48 89 d1             	mov    rcx,rdx
    7408:	48 8d 15 8d 05 00 00 	lea    rdx,[rip+0x58d]        # 799c <nsh_shell>
    740f:	be 00 00 00 00       	mov    esi,0x0
    7414:	48 89 c7             	mov    rdi,rax
    7417:	e8 d4 b4 ff ff       	call   28f0 <pthread_create@plt>
    741c:	eb 93                	jmp    73b1 <actually_start_nsh_server+0x10a>

000000000000741e <nsh_do_login>:
    741e:	f3 0f 1e fa          	endbr64 
    7422:	55                   	push   rbp
    7423:	48 89 e5             	mov    rbp,rsp
    7426:	53                   	push   rbx
    7427:	48 81 ec c8 03 00 00 	sub    rsp,0x3c8
    742e:	89 bd 3c fc ff ff    	mov    DWORD PTR [rbp-0x3c4],edi
    7434:	48 89 b5 30 fc ff ff 	mov    QWORD PTR [rbp-0x3d0],rsi
    743b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7442:	00 00 
    7444:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7448:	31 c0                	xor    eax,eax
    744a:	48 8d 05 99 70 00 00 	lea    rax,[rip+0x7099]        # e4ea <_IO_stdin_used+0x14ea>
    7451:	48 89 85 68 fc ff ff 	mov    QWORD PTR [rbp-0x398],rax
    7458:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    745e:	b9 00 00 00 00       	mov    ecx,0x0
    7463:	ba 13 00 00 00       	mov    edx,0x13
    7468:	48 8d 35 7d 70 00 00 	lea    rsi,[rip+0x707d]        # e4ec <_IO_stdin_used+0x14ec>
    746f:	89 c7                	mov    edi,eax
    7471:	e8 5a b1 ff ff       	call   25d0 <send@plt>
    7476:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    747c:	b9 00 00 00 00       	mov    ecx,0x0
    7481:	ba 0b 00 00 00       	mov    edx,0xb
    7486:	48 8d 35 73 70 00 00 	lea    rsi,[rip+0x7073]        # e500 <_IO_stdin_used+0x1500>
    748d:	89 c7                	mov    edi,eax
    748f:	e8 3c b1 ff ff       	call   25d0 <send@plt>
    7494:	48 8d 8d d0 fd ff ff 	lea    rcx,[rbp-0x230]
    749b:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    74a1:	ba 10 00 00 00       	mov    edx,0x10
    74a6:	48 89 ce             	mov    rsi,rcx
    74a9:	89 c7                	mov    edi,eax
    74ab:	e8 70 b3 ff ff       	call   2820 <read@plt>
    74b0:	89 85 4c fc ff ff    	mov    DWORD PTR [rbp-0x3b4],eax
    74b6:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    74bc:	b9 00 00 00 00       	mov    ecx,0x0
    74c1:	ba 0b 00 00 00       	mov    edx,0xb
    74c6:	48 8d 35 3e 70 00 00 	lea    rsi,[rip+0x703e]        # e50b <_IO_stdin_used+0x150b>
    74cd:	89 c7                	mov    edi,eax
    74cf:	e8 fc b0 ff ff       	call   25d0 <send@plt>
    74d4:	48 8d 85 d0 fd ff ff 	lea    rax,[rbp-0x230]
    74db:	48 89 c7             	mov    rdi,rax
    74de:	e8 77 fd ff ff       	call   725a <rnstrip>
    74e3:	48 8d 8d f0 fd ff ff 	lea    rcx,[rbp-0x210]
    74ea:	8b 85 3c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3c4]
    74f0:	ba 10 00 00 00       	mov    edx,0x10
    74f5:	48 89 ce             	mov    rsi,rcx
    74f8:	89 c7                	mov    edi,eax
    74fa:	e8 21 b3 ff ff       	call   2820 <read@plt>
    74ff:	89 85 4c fc ff ff    	mov    DWORD PTR [rbp-0x3b4],eax
    7505:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    750c:	48 89 c7             	mov    rdi,rax
    750f:	e8 46 fd ff ff       	call   725a <rnstrip>
    7514:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    751b:	48 89 85 70 fc ff ff 	mov    QWORD PTR [rbp-0x390],rax
    7522:	48 8d 35 ed 6f 00 00 	lea    rsi,[rip+0x6fed]        # e516 <_IO_stdin_used+0x1516>
    7529:	48 8d 3d e8 6f 00 00 	lea    rdi,[rip+0x6fe8]        # e518 <_IO_stdin_used+0x1518>
    7530:	e8 db b1 ff ff       	call   2710 <fopen@plt>
    7535:	48 89 85 78 fc ff ff 	mov    QWORD PTR [rbp-0x388],rax
    753c:	48 83 bd 78 fc ff ff 	cmp    QWORD PTR [rbp-0x388],0x0
    7543:	00 
    7544:	75 16                	jne    755c <nsh_do_login+0x13e>
    7546:	48 8d 3d dd 6f 00 00 	lea    rdi,[rip+0x6fdd]        # e52a <_IO_stdin_used+0x152a>
    754d:	e8 0e b3 ff ff       	call   2860 <puts@plt>
    7552:	b8 00 00 00 00       	mov    eax,0x0
    7557:	e9 26 04 00 00       	jmp    7982 <nsh_do_login+0x564>
    755c:	48 c7 85 50 fc ff ff 	mov    QWORD PTR [rbp-0x3b0],0x0
    7563:	00 00 00 00 
    7567:	48 c7 85 58 fc ff ff 	mov    QWORD PTR [rbp-0x3a8],0x0
    756e:	00 00 00 00 
    7572:	bf 00 00 00 00       	mov    edi,0x0
    7577:	e8 14 b1 ff ff       	call   2690 <time@plt>
    757c:	48 89 85 60 fc ff ff 	mov    QWORD PTR [rbp-0x3a0],rax
    7583:	48 8d 85 60 fc ff ff 	lea    rax,[rbp-0x3a0]
    758a:	48 89 c7             	mov    rdi,rax
    758d:	e8 9e b0 ff ff       	call   2630 <localtime@plt>
    7592:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    7595:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    7599:	48 89 8d a0 fc ff ff 	mov    QWORD PTR [rbp-0x360],rcx
    75a0:	48 89 9d a8 fc ff ff 	mov    QWORD PTR [rbp-0x358],rbx
    75a7:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    75ab:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    75af:	48 89 8d b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rcx
    75b6:	48 89 9d b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rbx
    75bd:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    75c1:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    75c5:	48 89 8d c0 fc ff ff 	mov    QWORD PTR [rbp-0x340],rcx
    75cc:	48 89 9d c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rbx
    75d3:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    75d7:	48 89 85 d0 fc ff ff 	mov    QWORD PTR [rbp-0x330],rax
    75de:	8b bd a0 fc ff ff    	mov    edi,DWORD PTR [rbp-0x360]
    75e4:	8b b5 a4 fc ff ff    	mov    esi,DWORD PTR [rbp-0x35c]
    75ea:	44 8b 8d a8 fc ff ff 	mov    r9d,DWORD PTR [rbp-0x358]
    75f1:	44 8b 85 ac fc ff ff 	mov    r8d,DWORD PTR [rbp-0x354]
    75f8:	8b 85 b0 fc ff ff    	mov    eax,DWORD PTR [rbp-0x350]
    75fe:	8d 48 01             	lea    ecx,[rax+0x1]
    7601:	8b 85 b4 fc ff ff    	mov    eax,DWORD PTR [rbp-0x34c]
    7607:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    760d:	48 8d 85 10 fe ff ff 	lea    rax,[rbp-0x1f0]
    7614:	57                   	push   rdi
    7615:	56                   	push   rsi
    7616:	48 8d 35 2a 6f 00 00 	lea    rsi,[rip+0x6f2a]        # e547 <_IO_stdin_used+0x1547>
    761d:	48 89 c7             	mov    rdi,rax
    7620:	b8 00 00 00 00       	mov    eax,0x0
    7625:	e8 d6 ae ff ff       	call   2500 <sprintf@plt>
    762a:	48 83 c4 10          	add    rsp,0x10
    762e:	e9 76 02 00 00       	jmp    78a9 <nsh_do_login+0x48b>
    7633:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    763a:	ba 40 00 00 00       	mov    edx,0x40
    763f:	be 00 00 00 00       	mov    esi,0x0
    7644:	48 89 c7             	mov    rdi,rax
    7647:	e8 c4 af ff ff       	call   2610 <memset@plt>
    764c:	48 8d 85 e0 fc ff ff 	lea    rax,[rbp-0x320]
    7653:	ba d8 00 00 00       	mov    edx,0xd8
    7658:	be 00 00 00 00       	mov    esi,0x0
    765d:	48 89 c7             	mov    rdi,rax
    7660:	e8 ab af ff ff       	call   2610 <memset@plt>
    7665:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    766c:	ba 80 00 00 00       	mov    edx,0x80
    7671:	be 00 00 00 00       	mov    esi,0x0
    7676:	48 89 c7             	mov    rdi,rax
    7679:	e8 92 af ff ff       	call   2610 <memset@plt>
    767e:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    7685:	48 89 c7             	mov    rdi,rax
    7688:	e8 cd fb ff ff       	call   725a <rnstrip>
    768d:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    7694:	48 8b 95 68 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x398]
    769b:	48 89 d6             	mov    rsi,rdx
    769e:	48 89 c7             	mov    rdi,rax
    76a1:	e8 da b1 ff ff       	call   2880 <strtok@plt>
    76a6:	48 89 85 90 fc ff ff 	mov    QWORD PTR [rbp-0x370],rax
    76ad:	48 8b 95 90 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x370]
    76b4:	48 8d 85 c0 fd ff ff 	lea    rax,[rbp-0x240]
    76bb:	48 89 d6             	mov    rsi,rdx
    76be:	48 89 c7             	mov    rdi,rax
    76c1:	e8 da af ff ff       	call   26a0 <strcpy@plt>
    76c6:	48 8d 95 c0 fd ff ff 	lea    rdx,[rbp-0x240]
    76cd:	48 8d 85 d0 fd ff ff 	lea    rax,[rbp-0x230]
    76d4:	48 89 d6             	mov    rsi,rdx
    76d7:	48 89 c7             	mov    rdi,rax
    76da:	e8 01 b1 ff ff       	call   27e0 <strcmp@plt>
    76df:	85 c0                	test   eax,eax
    76e1:	74 05                	je     76e8 <nsh_do_login+0x2ca>
    76e3:	e9 c1 01 00 00       	jmp    78a9 <nsh_do_login+0x48b>
    76e8:	48 8b 85 68 fc ff ff 	mov    rax,QWORD PTR [rbp-0x398]
    76ef:	48 89 c6             	mov    rsi,rax
    76f2:	bf 00 00 00 00       	mov    edi,0x0
    76f7:	e8 84 b1 ff ff       	call   2880 <strtok@plt>
    76fc:	48 89 85 90 fc ff ff 	mov    QWORD PTR [rbp-0x370],rax
    7703:	48 8b 95 90 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x370]
    770a:	48 8d 85 90 fe ff ff 	lea    rax,[rbp-0x170]
    7711:	48 89 d6             	mov    rsi,rdx
    7714:	48 89 c7             	mov    rdi,rax
    7717:	e8 84 af ff ff       	call   26a0 <strcpy@plt>
    771c:	48 8d 85 90 fe ff ff 	lea    rax,[rbp-0x170]
    7723:	48 89 c7             	mov    rdi,rax
    7726:	e8 35 b1 ff ff       	call   2860 <puts@plt>
    772b:	48 8d 85 e0 fc ff ff 	lea    rax,[rbp-0x320]
    7732:	48 89 c7             	mov    rdi,rax
    7735:	e8 16 b1 ff ff       	call   2850 <SHA512_Init@plt>
    773a:	48 8b 8d 70 fc ff ff 	mov    rcx,QWORD PTR [rbp-0x390]
    7741:	48 8d 85 e0 fc ff ff 	lea    rax,[rbp-0x320]
    7748:	ba 08 00 00 00       	mov    edx,0x8
    774d:	48 89 ce             	mov    rsi,rcx
    7750:	48 89 c7             	mov    rdi,rax
    7753:	e8 c8 ad ff ff       	call   2520 <SHA512_Update@plt>
    7758:	48 8d 95 e0 fc ff ff 	lea    rdx,[rbp-0x320]
    775f:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    7766:	48 89 d6             	mov    rsi,rdx
    7769:	48 89 c7             	mov    rdi,rax
    776c:	e8 1f ae ff ff       	call   2590 <SHA512_Final@plt>
    7771:	c7 85 48 fc ff ff 00 	mov    DWORD PTR [rbp-0x3b8],0x0
    7778:	00 00 00 
    777b:	eb 45                	jmp    77c2 <nsh_do_login+0x3a4>
    777d:	8b 85 48 fc ff ff    	mov    eax,DWORD PTR [rbp-0x3b8]
    7783:	48 98                	cdqe   
    7785:	0f b6 84 05 50 fe ff 	movzx  eax,BYTE PTR [rbp+rax*1-0x1b0]
    778c:	ff 
    778d:	0f b6 c0             	movzx  eax,al
    7790:	8b 95 48 fc ff ff    	mov    edx,DWORD PTR [rbp-0x3b8]
    7796:	01 d2                	add    edx,edx
    7798:	48 63 d2             	movsxd rdx,edx
    779b:	48 8d 8d e0 fe ff ff 	lea    rcx,[rbp-0x120]
    77a2:	48 01 d1             	add    rcx,rdx
    77a5:	89 c2                	mov    edx,eax
    77a7:	48 8d 35 b5 6d 00 00 	lea    rsi,[rip+0x6db5]        # e563 <_IO_stdin_used+0x1563>
    77ae:	48 89 cf             	mov    rdi,rcx
    77b1:	b8 00 00 00 00       	mov    eax,0x0
    77b6:	e8 45 ad ff ff       	call   2500 <sprintf@plt>
    77bb:	83 85 48 fc ff ff 01 	add    DWORD PTR [rbp-0x3b8],0x1
    77c2:	83 bd 48 fc ff ff 7f 	cmp    DWORD PTR [rbp-0x3b8],0x7f
    77c9:	7e b2                	jle    777d <nsh_do_login+0x35f>
    77cb:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    77d2:	48 89 c7             	mov    rdi,rax
    77d5:	e8 86 b0 ff ff       	call   2860 <puts@plt>
    77da:	48 8d 8d 90 fe ff ff 	lea    rcx,[rbp-0x170]
    77e1:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    77e8:	ba 40 00 00 00       	mov    edx,0x40
    77ed:	48 89 ce             	mov    rsi,rcx
    77f0:	48 89 c7             	mov    rdi,rax
    77f3:	e8 c8 ad ff ff       	call   25c0 <strncmp@plt>
    77f8:	85 c0                	test   eax,eax
    77fa:	0f 85 a9 00 00 00    	jne    78a9 <nsh_do_login+0x48b>
    7800:	48 8d 35 61 6d 00 00 	lea    rsi,[rip+0x6d61]        # e568 <_IO_stdin_used+0x1568>
    7807:	48 8d 3d 5c 6d 00 00 	lea    rdi,[rip+0x6d5c]        # e56a <_IO_stdin_used+0x156a>
    780e:	e8 fd ae ff ff       	call   2710 <fopen@plt>
    7813:	48 89 85 98 fc ff ff 	mov    QWORD PTR [rbp-0x368],rax
    781a:	48 8b b5 30 fc ff ff 	mov    rsi,QWORD PTR [rbp-0x3d0]
    7821:	48 8d 8d 10 fe ff ff 	lea    rcx,[rbp-0x1f0]
    7828:	48 8d 95 d0 fd ff ff 	lea    rdx,[rbp-0x230]
    782f:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
    7836:	49 89 f0             	mov    r8,rsi
    7839:	48 8d 35 48 6d 00 00 	lea    rsi,[rip+0x6d48]        # e588 <_IO_stdin_used+0x1588>
    7840:	48 89 c7             	mov    rdi,rax
    7843:	b8 00 00 00 00       	mov    eax,0x0
    7848:	e8 b3 ac ff ff       	call   2500 <sprintf@plt>
    784d:	48 8b 95 98 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x368]
    7854:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
    785b:	48 89 d6             	mov    rsi,rdx
    785e:	48 89 c7             	mov    rdi,rax
    7861:	e8 7a ae ff ff       	call   26e0 <fputs@plt>
    7866:	48 8b 85 98 fc ff ff 	mov    rax,QWORD PTR [rbp-0x368]
    786d:	48 89 c7             	mov    rdi,rax
    7870:	e8 4b ae ff ff       	call   26c0 <fclose@plt>
    7875:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    787c:	48 85 c0             	test   rax,rax
    787f:	74 0f                	je     7890 <nsh_do_login+0x472>
    7881:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    7888:	48 89 c7             	mov    rdi,rax
    788b:	e8 a0 ae ff ff       	call   2730 <free@plt>
    7890:	48 8b 85 78 fc ff ff 	mov    rax,QWORD PTR [rbp-0x388]
    7897:	48 89 c7             	mov    rdi,rax
    789a:	e8 21 ae ff ff       	call   26c0 <fclose@plt>
    789f:	b8 01 00 00 00       	mov    eax,0x1
    78a4:	e9 d9 00 00 00       	jmp    7982 <nsh_do_login+0x564>
    78a9:	48 8b 95 78 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x388]
    78b0:	48 8d 8d 58 fc ff ff 	lea    rcx,[rbp-0x3a8]
    78b7:	48 8d 85 50 fc ff ff 	lea    rax,[rbp-0x3b0]
    78be:	48 89 ce             	mov    rsi,rcx
    78c1:	48 89 c7             	mov    rdi,rax
    78c4:	e8 a7 ae ff ff       	call   2770 <getline@plt>
    78c9:	48 89 85 80 fc ff ff 	mov    QWORD PTR [rbp-0x380],rax
    78d0:	48 83 bd 80 fc ff ff 	cmp    QWORD PTR [rbp-0x380],0xffffffffffffffff
    78d7:	ff 
    78d8:	0f 85 55 fd ff ff    	jne    7633 <nsh_do_login+0x215>
    78de:	48 8d 35 83 6c 00 00 	lea    rsi,[rip+0x6c83]        # e568 <_IO_stdin_used+0x1568>
    78e5:	48 8d 3d 7e 6c 00 00 	lea    rdi,[rip+0x6c7e]        # e56a <_IO_stdin_used+0x156a>
    78ec:	e8 1f ae ff ff       	call   2710 <fopen@plt>
    78f1:	48 89 85 88 fc ff ff 	mov    QWORD PTR [rbp-0x378],rax
    78f8:	48 8b b5 30 fc ff ff 	mov    rsi,QWORD PTR [rbp-0x3d0]
    78ff:	48 8d 8d 10 fe ff ff 	lea    rcx,[rbp-0x1f0]
    7906:	48 8d 95 d0 fd ff ff 	lea    rdx,[rbp-0x230]
    790d:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
    7914:	49 89 f0             	mov    r8,rsi
    7917:	48 8d 35 92 6c 00 00 	lea    rsi,[rip+0x6c92]        # e5b0 <_IO_stdin_used+0x15b0>
    791e:	48 89 c7             	mov    rdi,rax
    7921:	b8 00 00 00 00       	mov    eax,0x0
    7926:	e8 d5 ab ff ff       	call   2500 <sprintf@plt>
    792b:	48 8b 95 88 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x378]
    7932:	48 8d 85 60 ff ff ff 	lea    rax,[rbp-0xa0]
    7939:	48 89 d6             	mov    rsi,rdx
    793c:	48 89 c7             	mov    rdi,rax
    793f:	e8 9c ad ff ff       	call   26e0 <fputs@plt>
    7944:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    794b:	48 85 c0             	test   rax,rax
    794e:	74 0f                	je     795f <nsh_do_login+0x541>
    7950:	48 8b 85 50 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3b0]
    7957:	48 89 c7             	mov    rdi,rax
    795a:	e8 d1 ad ff ff       	call   2730 <free@plt>
    795f:	48 8b 85 78 fc ff ff 	mov    rax,QWORD PTR [rbp-0x388]
    7966:	48 89 c7             	mov    rdi,rax
    7969:	e8 52 ad ff ff       	call   26c0 <fclose@plt>
    796e:	48 8b 85 88 fc ff ff 	mov    rax,QWORD PTR [rbp-0x378]
    7975:	48 89 c7             	mov    rdi,rax
    7978:	e8 43 ad ff ff       	call   26c0 <fclose@plt>
    797d:	b8 00 00 00 00       	mov    eax,0x0
    7982:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    7986:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    798d:	00 00 
    798f:	74 05                	je     7996 <nsh_do_login+0x578>
    7991:	e8 3a ad ff ff       	call   26d0 <__stack_chk_fail@plt>
    7996:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    799a:	c9                   	leave  
    799b:	c3                   	ret    

000000000000799c <nsh_shell>:
    799c:	f3 0f 1e fa          	endbr64 
    79a0:	55                   	push   rbp
    79a1:	48 89 e5             	mov    rbp,rsp
    79a4:	53                   	push   rbx
    79a5:	48 83 ec 38          	sub    rsp,0x38
    79a9:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    79ad:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    79b1:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    79b5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    79b9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    79bd:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    79c1:	0f b7 c0             	movzx  eax,ax
    79c4:	89 c7                	mov    edi,eax
    79c6:	e8 05 ab ff ff       	call   24d0 <htons@plt>
    79cb:	0f b7 d8             	movzx  ebx,ax
    79ce:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    79d2:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    79d6:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    79d9:	89 c7                	mov    edi,eax
    79db:	e8 d0 ab ff ff       	call   25b0 <inet_ntoa@plt>
    79e0:	89 da                	mov    edx,ebx
    79e2:	48 89 c6             	mov    rsi,rax
    79e5:	48 8d 3d e7 6b 00 00 	lea    rdi,[rip+0x6be7]        # e5d3 <_IO_stdin_used+0x15d3>
    79ec:	b8 00 00 00 00       	mov    eax,0x0
    79f1:	e8 ca aa ff ff       	call   24c0 <printf@plt>
    79f6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    79fa:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    79fe:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    7a01:	89 c7                	mov    edi,eax
    7a03:	e8 a8 ab ff ff       	call   25b0 <inet_ntoa@plt>
    7a08:	48 89 c2             	mov    rdx,rax
    7a0b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a0f:	8b 00                	mov    eax,DWORD PTR [rax]
    7a11:	48 89 d6             	mov    rsi,rdx
    7a14:	89 c7                	mov    edi,eax
    7a16:	e8 03 fa ff ff       	call   741e <nsh_do_login>
    7a1b:	83 f0 01             	xor    eax,0x1
    7a1e:	84 c0                	test   al,al
    7a20:	74 30                	je     7a52 <nsh_shell+0xb6>
    7a22:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a26:	8b 00                	mov    eax,DWORD PTR [rax]
    7a28:	b9 00 00 00 00       	mov    ecx,0x0
    7a2d:	ba 10 00 00 00       	mov    edx,0x10
    7a32:	48 8d 35 b3 6b 00 00 	lea    rsi,[rip+0x6bb3]        # e5ec <_IO_stdin_used+0x15ec>
    7a39:	89 c7                	mov    edi,eax
    7a3b:	e8 90 ab ff ff       	call   25d0 <send@plt>
    7a40:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a44:	8b 00                	mov    eax,DWORD PTR [rax]
    7a46:	89 c7                	mov    edi,eax
    7a48:	e8 c3 ae ff ff       	call   2910 <close@plt>
    7a4d:	e9 ed 00 00 00       	jmp    7b3f <nsh_shell+0x1a3>
    7a52:	48 8d 05 a3 6b 00 00 	lea    rax,[rip+0x6ba3]        # e5fc <_IO_stdin_used+0x15fc>
    7a59:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7a5d:	e9 a5 00 00 00       	jmp    7b07 <nsh_shell+0x16b>
    7a62:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a66:	48 89 c7             	mov    rdi,rax
    7a69:	e8 32 ab ff ff       	call   25a0 <strlen@plt>
    7a6e:	48 89 c2             	mov    rdx,rax
    7a71:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7a75:	8b 00                	mov    eax,DWORD PTR [rax]
    7a77:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
    7a7b:	b9 00 00 00 00       	mov    ecx,0x0
    7a80:	89 c7                	mov    edi,eax
    7a82:	e8 49 ab ff ff       	call   25d0 <send@plt>
    7a87:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7a8e:	00 00 
    7a90:	48 05 00 6c fe ff    	add    rax,0xfffffffffffe6c00
    7a96:	ba 00 04 00 00       	mov    edx,0x400
    7a9b:	be 00 00 00 00       	mov    esi,0x0
    7aa0:	48 89 c7             	mov    rdi,rax
    7aa3:	e8 68 ab ff ff       	call   2610 <memset@plt>
    7aa8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7aac:	8b 00                	mov    eax,DWORD PTR [rax]
    7aae:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    7ab5:	00 00 
    7ab7:	48 8d 8a 00 6c fe ff 	lea    rcx,[rdx-0x19400]
    7abe:	ba 00 04 00 00       	mov    edx,0x400
    7ac3:	48 89 ce             	mov    rsi,rcx
    7ac6:	89 c7                	mov    edi,eax
    7ac8:	e8 53 ad ff ff       	call   2820 <read@plt>
    7acd:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
    7ad0:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7ad7:	00 00 
    7ad9:	48 05 00 6c fe ff    	add    rax,0xfffffffffffe6c00
    7adf:	48 89 c7             	mov    rdi,rax
    7ae2:	e8 73 f7 ff ff       	call   725a <rnstrip>
    7ae7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7aeb:	8b 00                	mov    eax,DWORD PTR [rax]
    7aed:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    7af4:	00 00 
    7af6:	48 81 c2 00 6c fe ff 	add    rdx,0xfffffffffffe6c00
    7afd:	89 c6                	mov    esi,eax
    7aff:	48 89 d7             	mov    rdi,rdx
    7b02:	e8 8a 00 00 00       	call   7b91 <nsh_cmd_interpret>
    7b07:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7b0e:	00 00 
    7b10:	48 05 00 6c fe ff    	add    rax,0xfffffffffffe6c00
    7b16:	ba 04 00 00 00       	mov    edx,0x4
    7b1b:	48 8d 35 e0 6a 00 00 	lea    rsi,[rip+0x6ae0]        # e602 <_IO_stdin_used+0x1602>
    7b22:	48 89 c7             	mov    rdi,rax
    7b25:	e8 96 aa ff ff       	call   25c0 <strncmp@plt>
    7b2a:	85 c0                	test   eax,eax
    7b2c:	0f 85 30 ff ff ff    	jne    7a62 <nsh_shell+0xc6>
    7b32:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7b36:	8b 00                	mov    eax,DWORD PTR [rax]
    7b38:	89 c7                	mov    edi,eax
    7b3a:	e8 d1 ad ff ff       	call   2910 <close@plt>
    7b3f:	b8 01 00 00 00       	mov    eax,0x1
    7b44:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7b48:	c9                   	leave  
    7b49:	c3                   	ret    

0000000000007b4a <vsh_set_int>:
    7b4a:	f3 0f 1e fa          	endbr64 
    7b4e:	55                   	push   rbp
    7b4f:	48 89 e5             	mov    rbp,rsp
    7b52:	48 83 ec 10          	sub    rsp,0x10
    7b56:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
    7b59:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7b5d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7b61:	ba 06 00 00 00       	mov    edx,0x6
    7b66:	48 8d 35 c7 6b 00 00 	lea    rsi,[rip+0x6bc7]        # e734 <_IO_stdin_used+0x1734>
    7b6d:	48 89 c7             	mov    rdi,rax
    7b70:	e8 4b aa ff ff       	call   25c0 <strncmp@plt>
    7b75:	85 c0                	test   eax,eax
    7b77:	75 15                	jne    7b8e <vsh_set_int+0x44>
    7b79:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7b7d:	48 8d 50 06          	lea    rdx,[rax+0x6]
    7b81:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7b84:	48 89 d6             	mov    rsi,rdx
    7b87:	89 c7                	mov    edi,eax
    7b89:	e8 f9 10 00 00       	call   8c87 <set_spi_max>
    7b8e:	90                   	nop
    7b8f:	c9                   	leave  
    7b90:	c3                   	ret    

0000000000007b91 <nsh_cmd_interpret>:
    7b91:	f3 0f 1e fa          	endbr64 
    7b95:	55                   	push   rbp
    7b96:	48 89 e5             	mov    rbp,rsp
    7b99:	41 57                	push   r15
    7b9b:	41 56                	push   r14
    7b9d:	41 55                	push   r13
    7b9f:	41 54                	push   r12
    7ba1:	53                   	push   rbx
    7ba2:	48 83 ec 68          	sub    rsp,0x68
    7ba6:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    7bad:	89 b5 74 ff ff ff    	mov    DWORD PTR [rbp-0x8c],esi
    7bb3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7bba:	00 00 
    7bbc:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    7bc0:	31 c0                	xor    eax,eax
    7bc2:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7bc9:	48 8d 35 6b 6b 00 00 	lea    rsi,[rip+0x6b6b]        # e73b <_IO_stdin_used+0x173b>
    7bd0:	48 89 c7             	mov    rdi,rax
    7bd3:	e8 08 ac ff ff       	call   27e0 <strcmp@plt>
    7bd8:	85 c0                	test   eax,eax
    7bda:	75 23                	jne    7bff <nsh_cmd_interpret+0x6e>
    7bdc:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7be2:	b9 00 00 00 00       	mov    ecx,0x0
    7be7:	ba 07 00 00 00       	mov    edx,0x7
    7bec:	48 8d 35 52 6b 00 00 	lea    rsi,[rip+0x6b52]        # e745 <_IO_stdin_used+0x1745>
    7bf3:	89 c7                	mov    edi,eax
    7bf5:	e8 d6 a9 ff ff       	call   25d0 <send@plt>
    7bfa:	e9 85 04 00 00       	jmp    8084 <nsh_cmd_interpret+0x4f3>
    7bff:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7c06:	ba 08 00 00 00       	mov    edx,0x8
    7c0b:	48 8d 35 3b 6b 00 00 	lea    rsi,[rip+0x6b3b]        # e74d <_IO_stdin_used+0x174d>
    7c12:	48 89 c7             	mov    rdi,rax
    7c15:	e8 a6 a9 ff ff       	call   25c0 <strncmp@plt>
    7c1a:	85 c0                	test   eax,eax
    7c1c:	75 0a                	jne    7c28 <nsh_cmd_interpret+0x97>
    7c1e:	bf 01 00 00 00       	mov    edi,0x1
    7c23:	e8 18 ab ff ff       	call   2740 <exit@plt>
    7c28:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7c2f:	ba 04 00 00 00       	mov    edx,0x4
    7c34:	48 8d 35 1b 6b 00 00 	lea    rsi,[rip+0x6b1b]        # e756 <_IO_stdin_used+0x1756>
    7c3b:	48 89 c7             	mov    rdi,rax
    7c3e:	e8 7d a9 ff ff       	call   25c0 <strncmp@plt>
    7c43:	85 c0                	test   eax,eax
    7c45:	0f 84 38 04 00 00    	je     8083 <nsh_cmd_interpret+0x4f2>
    7c4b:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7c52:	ba 03 00 00 00       	mov    edx,0x3
    7c57:	48 8d 35 fd 6a 00 00 	lea    rsi,[rip+0x6afd]        # e75b <_IO_stdin_used+0x175b>
    7c5e:	48 89 c7             	mov    rdi,rax
    7c61:	e8 5a a9 ff ff       	call   25c0 <strncmp@plt>
    7c66:	85 c0                	test   eax,eax
    7c68:	0f 85 e1 01 00 00    	jne    7e4f <nsh_cmd_interpret+0x2be>
    7c6e:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7c75:	48 89 c7             	mov    rdi,rax
    7c78:	e8 23 a9 ff ff       	call   25a0 <strlen@plt>
    7c7d:	48 83 f8 02          	cmp    rax,0x2
    7c81:	77 30                	ja     7cb3 <nsh_cmd_interpret+0x122>
    7c83:	48 8b 05 be a3 00 00 	mov    rax,QWORD PTR [rip+0xa3be]        # 12048 <get_cmd_help>
    7c8a:	48 89 c7             	mov    rdi,rax
    7c8d:	e8 0e a9 ff ff       	call   25a0 <strlen@plt>
    7c92:	48 89 c2             	mov    rdx,rax
    7c95:	48 8b 35 ac a3 00 00 	mov    rsi,QWORD PTR [rip+0xa3ac]        # 12048 <get_cmd_help>
    7c9c:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7ca2:	b9 00 00 00 00       	mov    ecx,0x0
    7ca7:	89 c7                	mov    edi,eax
    7ca9:	e8 22 a9 ff ff       	call   25d0 <send@plt>
    7cae:	e9 d1 03 00 00       	jmp    8084 <nsh_cmd_interpret+0x4f3>
    7cb3:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7cba:	48 83 c0 04          	add    rax,0x4
    7cbe:	ba 09 00 00 00       	mov    edx,0x9
    7cc3:	48 8d 35 95 6a 00 00 	lea    rsi,[rip+0x6a95]        # e75f <_IO_stdin_used+0x175f>
    7cca:	48 89 c7             	mov    rdi,rax
    7ccd:	e8 ee a8 ff ff       	call   25c0 <strncmp@plt>
    7cd2:	85 c0                	test   eax,eax
    7cd4:	75 14                	jne    7cea <nsh_cmd_interpret+0x159>
    7cd6:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7cdd:	48 89 c7             	mov    rdi,rax
    7ce0:	e8 c2 03 00 00       	call   80a7 <send_blacklist>
    7ce5:	e9 9a 03 00 00       	jmp    8084 <nsh_cmd_interpret+0x4f3>
    7cea:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7cf1:	48 83 c0 04          	add    rax,0x4
    7cf5:	48 8d 35 6d 6a 00 00 	lea    rsi,[rip+0x6a6d]        # e769 <_IO_stdin_used+0x1769>
    7cfc:	48 89 c7             	mov    rdi,rax
    7cff:	e8 dc aa ff ff       	call   27e0 <strcmp@plt>
    7d04:	85 c0                	test   eax,eax
    7d06:	75 14                	jne    7d1c <nsh_cmd_interpret+0x18b>
    7d08:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7d0f:	48 89 c7             	mov    rdi,rax
    7d12:	e8 46 06 00 00       	call   835d <get_loaded_rules>
    7d17:	e9 68 03 00 00       	jmp    8084 <nsh_cmd_interpret+0x4f3>
    7d1c:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7d23:	48 83 c0 04          	add    rax,0x4
    7d27:	48 89 c2             	mov    rdx,rax
    7d2a:	48 8d 05 3e 6a 00 00 	lea    rax,[rip+0x6a3e]        # e76f <_IO_stdin_used+0x176f>
    7d31:	b9 08 00 00 00       	mov    ecx,0x8
    7d36:	48 89 d6             	mov    rsi,rdx
    7d39:	48 89 c7             	mov    rdi,rax
    7d3c:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7d3e:	0f 97 c0             	seta   al
    7d41:	0f 92 c2             	setb   dl
    7d44:	29 d0                	sub    eax,edx
    7d46:	0f be c0             	movsx  eax,al
    7d49:	85 c0                	test   eax,eax
    7d4b:	75 22                	jne    7d6f <nsh_cmd_interpret+0x1de>
    7d4d:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7d54:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    7d58:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7d5f:	48 89 d6             	mov    rsi,rdx
    7d62:	48 89 c7             	mov    rdi,rax
    7d65:	e8 01 0a 00 00       	call   876b <get_rule_matches>
    7d6a:	e9 15 03 00 00       	jmp    8084 <nsh_cmd_interpret+0x4f3>
    7d6f:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7d76:	48 83 c0 04          	add    rax,0x4
    7d7a:	48 89 c2             	mov    rdx,rax
    7d7d:	48 8d 05 f3 69 00 00 	lea    rax,[rip+0x69f3]        # e777 <_IO_stdin_used+0x1777>
    7d84:	b9 08 00 00 00       	mov    ecx,0x8
    7d89:	48 89 d6             	mov    rsi,rdx
    7d8c:	48 89 c7             	mov    rdi,rax
    7d8f:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7d91:	0f 97 c0             	seta   al
    7d94:	0f 92 c2             	setb   dl
    7d97:	29 d0                	sub    eax,edx
    7d99:	0f be c0             	movsx  eax,al
    7d9c:	85 c0                	test   eax,eax
    7d9e:	75 48                	jne    7de8 <nsh_cmd_interpret+0x257>
    7da0:	8b 15 fe a4 00 00    	mov    edx,DWORD PTR [rip+0xa4fe]        # 122a4 <total_pkt_captured>
    7da6:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    7daa:	48 8d 35 ce 69 00 00 	lea    rsi,[rip+0x69ce]        # e77f <_IO_stdin_used+0x177f>
    7db1:	48 89 c7             	mov    rdi,rax
    7db4:	b8 00 00 00 00       	mov    eax,0x0
    7db9:	e8 42 a7 ff ff       	call   2500 <sprintf@plt>
    7dbe:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    7dc2:	48 89 c7             	mov    rdi,rax
    7dc5:	e8 d6 a7 ff ff       	call   25a0 <strlen@plt>
    7dca:	48 89 c2             	mov    rdx,rax
    7dcd:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7dd3:	48 8d 75 a0          	lea    rsi,[rbp-0x60]
    7dd7:	b9 00 00 00 00       	mov    ecx,0x0
    7ddc:	89 c7                	mov    edi,eax
    7dde:	e8 ed a7 ff ff       	call   25d0 <send@plt>
    7de3:	e9 9c 02 00 00       	jmp    8084 <nsh_cmd_interpret+0x4f3>
    7de8:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7def:	48 83 c0 04          	add    rax,0x4
    7df3:	ba 03 00 00 00       	mov    edx,0x3
    7df8:	48 8d 35 9b 69 00 00 	lea    rsi,[rip+0x699b]        # e79a <_IO_stdin_used+0x179a>
    7dff:	48 89 c7             	mov    rdi,rax
    7e02:	e8 b9 a7 ff ff       	call   25c0 <strncmp@plt>
    7e07:	85 c0                	test   eax,eax
    7e09:	75 14                	jne    7e1f <nsh_cmd_interpret+0x28e>
    7e0b:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7e12:	48 89 c7             	mov    rdi,rax
    7e15:	e8 c2 0c 00 00       	call   8adc <get_arp_cache>
    7e1a:	e9 65 02 00 00       	jmp    8084 <nsh_cmd_interpret+0x4f3>
    7e1f:	48 8b 05 22 a2 00 00 	mov    rax,QWORD PTR [rip+0xa222]        # 12048 <get_cmd_help>
    7e26:	48 89 c7             	mov    rdi,rax
    7e29:	e8 72 a7 ff ff       	call   25a0 <strlen@plt>
    7e2e:	48 89 c2             	mov    rdx,rax
    7e31:	48 8b 35 10 a2 00 00 	mov    rsi,QWORD PTR [rip+0xa210]        # 12048 <get_cmd_help>
    7e38:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7e3e:	b9 00 00 00 00       	mov    ecx,0x0
    7e43:	89 c7                	mov    edi,eax
    7e45:	e8 86 a7 ff ff       	call   25d0 <send@plt>
    7e4a:	e9 35 02 00 00       	jmp    8084 <nsh_cmd_interpret+0x4f3>
    7e4f:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7e56:	ba 03 00 00 00       	mov    edx,0x3
    7e5b:	48 8d 35 3c 69 00 00 	lea    rsi,[rip+0x693c]        # e79e <_IO_stdin_used+0x179e>
    7e62:	48 89 c7             	mov    rdi,rax
    7e65:	e8 56 a7 ff ff       	call   25c0 <strncmp@plt>
    7e6a:	85 c0                	test   eax,eax
    7e6c:	0f 85 d3 00 00 00    	jne    7f45 <nsh_cmd_interpret+0x3b4>
    7e72:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7e79:	48 89 c7             	mov    rdi,rax
    7e7c:	e8 1f a7 ff ff       	call   25a0 <strlen@plt>
    7e81:	48 83 f8 03          	cmp    rax,0x3
    7e85:	77 30                	ja     7eb7 <nsh_cmd_interpret+0x326>
    7e87:	48 8b 05 c2 a1 00 00 	mov    rax,QWORD PTR [rip+0xa1c2]        # 12050 <add_cmd_help>
    7e8e:	48 89 c7             	mov    rdi,rax
    7e91:	e8 0a a7 ff ff       	call   25a0 <strlen@plt>
    7e96:	48 89 c2             	mov    rdx,rax
    7e99:	48 8b 35 b0 a1 00 00 	mov    rsi,QWORD PTR [rip+0xa1b0]        # 12050 <add_cmd_help>
    7ea0:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7ea6:	b9 00 00 00 00       	mov    ecx,0x0
    7eab:	89 c7                	mov    edi,eax
    7ead:	e8 1e a7 ff ff       	call   25d0 <send@plt>
    7eb2:	e9 cd 01 00 00       	jmp    8084 <nsh_cmd_interpret+0x4f3>
    7eb7:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7ebe:	48 83 c0 04          	add    rax,0x4
    7ec2:	ba 09 00 00 00       	mov    edx,0x9
    7ec7:	48 8d 35 91 68 00 00 	lea    rsi,[rip+0x6891]        # e75f <_IO_stdin_used+0x175f>
    7ece:	48 89 c7             	mov    rdi,rax
    7ed1:	e8 ea a6 ff ff       	call   25c0 <strncmp@plt>
    7ed6:	85 c0                	test   eax,eax
    7ed8:	75 22                	jne    7efc <nsh_cmd_interpret+0x36b>
    7eda:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7ee1:	48 8d 50 04          	lea    rdx,[rax+0x4]
    7ee5:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7eec:	48 89 d6             	mov    rsi,rdx
    7eef:	48 89 c7             	mov    rdi,rax
    7ef2:	e8 54 03 00 00       	call   824b <add_to_blacklist>
    7ef7:	e9 88 01 00 00       	jmp    8084 <nsh_cmd_interpret+0x4f3>
    7efc:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f03:	48 83 c0 04          	add    rax,0x4
    7f07:	ba 04 00 00 00       	mov    edx,0x4
    7f0c:	48 8d 35 8f 68 00 00 	lea    rsi,[rip+0x688f]        # e7a2 <_IO_stdin_used+0x17a2>
    7f13:	48 89 c7             	mov    rdi,rax
    7f16:	e8 a5 a6 ff ff       	call   25c0 <strncmp@plt>
    7f1b:	85 c0                	test   eax,eax
    7f1d:	0f 85 61 01 00 00    	jne    8084 <nsh_cmd_interpret+0x4f3>
    7f23:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f2a:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7f2e:	48 8d 85 74 ff ff ff 	lea    rax,[rbp-0x8c]
    7f35:	48 89 d6             	mov    rsi,rdx
    7f38:	48 89 c7             	mov    rdi,rax
    7f3b:	e8 f6 06 00 00       	call   8636 <load_new_rule>
    7f40:	e9 3f 01 00 00       	jmp    8084 <nsh_cmd_interpret+0x4f3>
    7f45:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f4c:	ba 03 00 00 00       	mov    edx,0x3
    7f51:	48 8d 35 4f 68 00 00 	lea    rsi,[rip+0x684f]        # e7a7 <_IO_stdin_used+0x17a7>
    7f58:	48 89 c7             	mov    rdi,rax
    7f5b:	e8 60 a6 ff ff       	call   25c0 <strncmp@plt>
    7f60:	85 c0                	test   eax,eax
    7f62:	75 20                	jne    7f84 <nsh_cmd_interpret+0x3f3>
    7f64:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f6b:	48 8d 50 04          	lea    rdx,[rax+0x4]
    7f6f:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    7f75:	48 89 d6             	mov    rsi,rdx
    7f78:	89 c7                	mov    edi,eax
    7f7a:	e8 cb fb ff ff       	call   7b4a <vsh_set_int>
    7f7f:	e9 00 01 00 00       	jmp    8084 <nsh_cmd_interpret+0x4f3>
    7f84:	48 89 e0             	mov    rax,rsp
    7f87:	48 89 c3             	mov    rbx,rax
    7f8a:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    7f91:	48 89 c7             	mov    rdi,rax
    7f94:	e8 07 a6 ff ff       	call   25a0 <strlen@plt>
    7f99:	83 c0 1c             	add    eax,0x1c
    7f9c:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    7f9f:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    7fa2:	83 c0 02             	add    eax,0x2
    7fa5:	48 63 d0             	movsxd rdx,eax
    7fa8:	48 83 ea 01          	sub    rdx,0x1
    7fac:	48 89 55 90          	mov    QWORD PTR [rbp-0x70],rdx
    7fb0:	48 63 d0             	movsxd rdx,eax
    7fb3:	49 89 d6             	mov    r14,rdx
    7fb6:	41 bf 00 00 00 00    	mov    r15d,0x0
    7fbc:	48 63 d0             	movsxd rdx,eax
    7fbf:	49 89 d4             	mov    r12,rdx
    7fc2:	41 bd 00 00 00 00    	mov    r13d,0x0
    7fc8:	48 98                	cdqe   
    7fca:	ba 10 00 00 00       	mov    edx,0x10
    7fcf:	48 83 ea 01          	sub    rdx,0x1
    7fd3:	48 01 d0             	add    rax,rdx
    7fd6:	b9 10 00 00 00       	mov    ecx,0x10
    7fdb:	ba 00 00 00 00       	mov    edx,0x0
    7fe0:	48 f7 f1             	div    rcx
    7fe3:	48 6b c0 10          	imul   rax,rax,0x10
    7fe7:	48 89 c1             	mov    rcx,rax
    7fea:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    7ff1:	48 89 e2             	mov    rdx,rsp
    7ff4:	48 29 ca             	sub    rdx,rcx
    7ff7:	48 39 d4             	cmp    rsp,rdx
    7ffa:	74 12                	je     800e <nsh_cmd_interpret+0x47d>
    7ffc:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    8003:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    800a:	00 00 
    800c:	eb e9                	jmp    7ff7 <nsh_cmd_interpret+0x466>
    800e:	48 89 c2             	mov    rdx,rax
    8011:	81 e2 ff 0f 00 00    	and    edx,0xfff
    8017:	48 29 d4             	sub    rsp,rdx
    801a:	48 89 c2             	mov    rdx,rax
    801d:	81 e2 ff 0f 00 00    	and    edx,0xfff
    8023:	48 85 d2             	test   rdx,rdx
    8026:	74 10                	je     8038 <nsh_cmd_interpret+0x4a7>
    8028:	25 ff 0f 00 00       	and    eax,0xfff
    802d:	48 83 e8 08          	sub    rax,0x8
    8031:	48 01 e0             	add    rax,rsp
    8034:	48 83 08 00          	or     QWORD PTR [rax],0x0
    8038:	48 89 e0             	mov    rax,rsp
    803b:	48 83 c0 00          	add    rax,0x0
    803f:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    8043:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
    804a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    804e:	48 8d 35 5b 67 00 00 	lea    rsi,[rip+0x675b]        # e7b0 <_IO_stdin_used+0x17b0>
    8055:	48 89 c7             	mov    rdi,rax
    8058:	b8 00 00 00 00       	mov    eax,0x0
    805d:	e8 9e a4 ff ff       	call   2500 <sprintf@plt>
    8062:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    8065:	48 63 d0             	movsxd rdx,eax
    8068:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [rbp-0x8c]
    806e:	48 8b 75 98          	mov    rsi,QWORD PTR [rbp-0x68]
    8072:	b9 00 00 00 00       	mov    ecx,0x0
    8077:	89 c7                	mov    edi,eax
    8079:	e8 52 a5 ff ff       	call   25d0 <send@plt>
    807e:	48 89 dc             	mov    rsp,rbx
    8081:	eb 01                	jmp    8084 <nsh_cmd_interpret+0x4f3>
    8083:	90                   	nop
    8084:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    8088:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    808f:	00 00 
    8091:	74 05                	je     8098 <nsh_cmd_interpret+0x507>
    8093:	e8 38 a6 ff ff       	call   26d0 <__stack_chk_fail@plt>
    8098:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    809c:	5b                   	pop    rbx
    809d:	41 5c                	pop    r12
    809f:	41 5d                	pop    r13
    80a1:	41 5e                	pop    r14
    80a3:	41 5f                	pop    r15
    80a5:	5d                   	pop    rbp
    80a6:	c3                   	ret    

00000000000080a7 <send_blacklist>:
    80a7:	f3 0f 1e fa          	endbr64 
    80ab:	55                   	push   rbp
    80ac:	48 89 e5             	mov    rbp,rsp
    80af:	48 83 ec 20          	sub    rsp,0x20
    80b3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    80b7:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    80be:	00 00 
    80c0:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    80c6:	ba 00 90 01 00       	mov    edx,0x19000
    80cb:	be 00 00 00 00       	mov    esi,0x0
    80d0:	48 89 c7             	mov    rdi,rax
    80d3:	e8 38 a5 ff ff       	call   2610 <memset@plt>
    80d8:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    80df:	00 00 
    80e1:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    80e7:	48 89 c7             	mov    rdi,rax
    80ea:	e8 b1 a4 ff ff       	call   25a0 <strlen@plt>
    80ef:	48 89 c2             	mov    rdx,rax
    80f2:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    80f9:	00 00 
    80fb:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8101:	48 01 d0             	add    rax,rdx
    8104:	48 be 42 6c 61 63 6b 	movabs rsi,0x73696c6b63616c42
    810b:	6c 69 73 
    810e:	48 bf 74 20 66 6f 72 	movabs rdi,0x736e20726f662074
    8115:	20 6e 73 
    8118:	48 89 30             	mov    QWORD PTR [rax],rsi
    811b:	48 89 78 08          	mov    QWORD PTR [rax+0x8],rdi
    811f:	48 b9 68 20 73 65 72 	movabs rcx,0x7265767265732068
    8126:	76 65 72 
    8129:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    812d:	c7 40 18 3a 0a 09 00 	mov    DWORD PTR [rax+0x18],0x90a3a
    8134:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    813b:	e9 88 00 00 00       	jmp    81c8 <send_blacklist+0x121>
    8140:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8143:	48 63 d0             	movsxd rdx,eax
    8146:	48 89 d0             	mov    rax,rdx
    8149:	48 c1 e0 03          	shl    rax,0x3
    814d:	48 01 d0             	add    rax,rdx
    8150:	48 01 c0             	add    rax,rax
    8153:	48 8d 15 86 c1 0e 00 	lea    rdx,[rip+0xec186]        # f42e0 <blocked_ipv4_addrs>
    815a:	48 01 d0             	add    rax,rdx
    815d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8161:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8165:	48 89 c7             	mov    rdi,rax
    8168:	e8 33 a4 ff ff       	call   25a0 <strlen@plt>
    816d:	48 89 c2             	mov    rdx,rax
    8170:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8174:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    817b:	00 00 
    817d:	48 81 c1 00 70 fe ff 	add    rcx,0xfffffffffffe7000
    8184:	48 89 c6             	mov    rsi,rax
    8187:	48 89 cf             	mov    rdi,rcx
    818a:	e8 91 a4 ff ff       	call   2620 <strncat@plt>
    818f:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8196:	00 00 
    8198:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    819e:	48 89 c7             	mov    rdi,rax
    81a1:	e8 fa a3 ff ff       	call   25a0 <strlen@plt>
    81a6:	48 89 c2             	mov    rdx,rax
    81a9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    81b0:	00 00 
    81b2:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    81b8:	48 01 d0             	add    rax,rdx
    81bb:	66 c7 00 0a 09       	mov    WORD PTR [rax],0x90a
    81c0:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    81c4:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    81c8:	8b 05 42 9e 00 00    	mov    eax,DWORD PTR [rip+0x9e42]        # 12010 <blk_ipv4_len>
    81ce:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    81d1:	0f 8e 69 ff ff ff    	jle    8140 <send_blacklist+0x99>
    81d7:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    81de:	00 00 
    81e0:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    81e6:	48 89 c7             	mov    rdi,rax
    81e9:	e8 b2 a3 ff ff       	call   25a0 <strlen@plt>
    81ee:	48 89 c2             	mov    rdx,rax
    81f1:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    81f8:	00 00 
    81fa:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8200:	48 01 d0             	add    rax,rdx
    8203:	66 c7 00 0d 0a       	mov    WORD PTR [rax],0xa0d
    8208:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    820c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8213:	00 00 
    8215:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    821b:	48 89 c7             	mov    rdi,rax
    821e:	e8 7d a3 ff ff       	call   25a0 <strlen@plt>
    8223:	48 89 c2             	mov    rdx,rax
    8226:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    822a:	8b 00                	mov    eax,DWORD PTR [rax]
    822c:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8233:	00 00 
    8235:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    823c:	b9 00 00 00 00       	mov    ecx,0x0
    8241:	89 c7                	mov    edi,eax
    8243:	e8 88 a3 ff ff       	call   25d0 <send@plt>
    8248:	90                   	nop
    8249:	c9                   	leave  
    824a:	c3                   	ret    

000000000000824b <add_to_blacklist>:
    824b:	f3 0f 1e fa          	endbr64 
    824f:	55                   	push   rbp
    8250:	48 89 e5             	mov    rbp,rsp
    8253:	48 83 ec 50          	sub    rsp,0x50
    8257:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    825b:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    825f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8266:	00 00 
    8268:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    826c:	31 c0                	xor    eax,eax
    826e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8275:	00 00 
    8277:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    827d:	ba 00 90 01 00       	mov    edx,0x19000
    8282:	be 00 00 00 00       	mov    esi,0x0
    8287:	48 89 c7             	mov    rdi,rax
    828a:	e8 81 a3 ff ff       	call   2610 <memset@plt>
    828f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    8293:	48 83 c0 0a          	add    rax,0xa
    8297:	ba 04 00 00 00       	mov    edx,0x4
    829c:	48 8d 35 2c 65 00 00 	lea    rsi,[rip+0x652c]        # e7cf <_IO_stdin_used+0x17cf>
    82a3:	48 89 c7             	mov    rdi,rax
    82a6:	e8 15 a3 ff ff       	call   25c0 <strncmp@plt>
    82ab:	85 c0                	test   eax,eax
    82ad:	0f 85 93 00 00 00    	jne    8346 <add_to_blacklist+0xfb>
    82b3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    82b7:	48 83 c0 0f          	add    rax,0xf
    82bb:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    82bf:	8b 05 4b 9d 00 00    	mov    eax,DWORD PTR [rip+0x9d4b]        # 12010 <blk_ipv4_len>
    82c5:	83 c0 01             	add    eax,0x1
    82c8:	89 05 42 9d 00 00    	mov    DWORD PTR [rip+0x9d42],eax        # 12010 <blk_ipv4_len>
    82ce:	8b 05 3c 9d 00 00    	mov    eax,DWORD PTR [rip+0x9d3c]        # 12010 <blk_ipv4_len>
    82d4:	48 63 d0             	movsxd rdx,eax
    82d7:	48 89 d0             	mov    rax,rdx
    82da:	48 c1 e0 03          	shl    rax,0x3
    82de:	48 01 d0             	add    rax,rdx
    82e1:	48 01 c0             	add    rax,rax
    82e4:	48 8d 15 f5 bf 0e 00 	lea    rdx,[rip+0xebff5]        # f42e0 <blocked_ipv4_addrs>
    82eb:	48 01 d0             	add    rax,rdx
    82ee:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    82f2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    82f6:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    82fa:	48 89 d6             	mov    rsi,rdx
    82fd:	48 89 c7             	mov    rdi,rax
    8300:	e8 9b a3 ff ff       	call   26a0 <strcpy@plt>
    8305:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    8309:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    830d:	48 8d 35 c0 64 00 00 	lea    rsi,[rip+0x64c0]        # e7d4 <_IO_stdin_used+0x17d4>
    8314:	48 89 c7             	mov    rdi,rax
    8317:	b8 00 00 00 00       	mov    eax,0x0
    831c:	e8 df a1 ff ff       	call   2500 <sprintf@plt>
    8321:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    8325:	48 89 c7             	mov    rdi,rax
    8328:	e8 73 a2 ff ff       	call   25a0 <strlen@plt>
    832d:	48 89 c2             	mov    rdx,rax
    8330:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    8334:	8b 00                	mov    eax,DWORD PTR [rax]
    8336:	48 8d 75 d0          	lea    rsi,[rbp-0x30]
    833a:	b9 00 00 00 00       	mov    ecx,0x0
    833f:	89 c7                	mov    edi,eax
    8341:	e8 8a a2 ff ff       	call   25d0 <send@plt>
    8346:	90                   	nop
    8347:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    834b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8352:	00 00 
    8354:	74 05                	je     835b <add_to_blacklist+0x110>
    8356:	e8 75 a3 ff ff       	call   26d0 <__stack_chk_fail@plt>
    835b:	c9                   	leave  
    835c:	c3                   	ret    

000000000000835d <get_loaded_rules>:
    835d:	f3 0f 1e fa          	endbr64 
    8361:	55                   	push   rbp
    8362:	48 89 e5             	mov    rbp,rsp
    8365:	53                   	push   rbx
    8366:	48 81 ec f8 00 00 00 	sub    rsp,0xf8
    836d:	48 89 bd 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rdi
    8374:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    837b:	00 00 
    837d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8381:	31 c0                	xor    eax,eax
    8383:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    838a:	00 00 
    838c:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8392:	ba 00 90 01 00       	mov    edx,0x19000
    8397:	be 00 00 00 00       	mov    esi,0x0
    839c:	48 89 c7             	mov    rdi,rax
    839f:	e8 6c a2 ff ff       	call   2610 <memset@plt>
    83a4:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    83ab:	00 00 
    83ad:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    83b3:	48 89 c7             	mov    rdi,rax
    83b6:	e8 e5 a1 ff ff       	call   25a0 <strlen@plt>
    83bb:	48 89 c2             	mov    rdx,rax
    83be:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    83c5:	00 00 
    83c7:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    83cd:	48 01 d0             	add    rax,rdx
    83d0:	48 bb 4c 6f 61 64 65 	movabs rbx,0x7220646564616f4c
    83d7:	64 20 72 
    83da:	48 be 75 6c 65 73 20 	movabs rsi,0x726f662073656c75
    83e1:	66 6f 72 
    83e4:	48 89 18             	mov    QWORD PTR [rax],rbx
    83e7:	48 89 70 08          	mov    QWORD PTR [rax+0x8],rsi
    83eb:	48 bb 20 56 49 47 49 	movabs rbx,0x49204c4947495620
    83f2:	4c 20 49 
    83f5:	48 89 58 10          	mov    QWORD PTR [rax+0x10],rbx
    83f9:	c7 40 18 44 53 3a 0a 	mov    DWORD PTR [rax+0x18],0xa3a5344
    8400:	66 c7 40 1c 09 00    	mov    WORD PTR [rax+0x1c],0x9
    8406:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    840d:	00 00 00 
    8410:	e9 80 01 00 00       	jmp    8595 <get_loaded_rules+0x238>
    8415:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    841b:	8d 50 01             	lea    edx,[rax+0x1]
    841e:	89 95 14 ff ff ff    	mov    DWORD PTR [rbp-0xec],edx
    8424:	48 98                	cdqe   
    8426:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    842d:	48 8d 15 ac 9e 00 00 	lea    rdx,[rip+0x9eac]        # 122e0 <rules>
    8434:	48 01 d0             	add    rax,rdx
    8437:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    843e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    8445:	48 83 c0 20          	add    rax,0x20
    8449:	48 89 c7             	mov    rdi,rax
    844c:	e8 4f a1 ff ff       	call   25a0 <strlen@plt>
    8451:	48 89 c2             	mov    rdx,rax
    8454:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    845b:	48 8d 48 20          	lea    rcx,[rax+0x20]
    845f:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8466:	00 00 
    8468:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    846e:	48 89 ce             	mov    rsi,rcx
    8471:	48 89 c7             	mov    rdi,rax
    8474:	e8 a7 a1 ff ff       	call   2620 <strncat@plt>
    8479:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    8480:	8b 88 40 01 00 00    	mov    ecx,DWORD PTR [rax+0x140]
    8486:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    848d:	8b 90 44 01 00 00    	mov    edx,DWORD PTR [rax+0x144]
    8493:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    849a:	48 8d 35 4b 63 00 00 	lea    rsi,[rip+0x634b]        # e7ec <_IO_stdin_used+0x17ec>
    84a1:	48 89 c7             	mov    rdi,rax
    84a4:	b8 00 00 00 00       	mov    eax,0x0
    84a9:	e8 52 a0 ff ff       	call   2500 <sprintf@plt>
    84ae:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    84b5:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    84bc:	84 c0                	test   al,al
    84be:	74 40                	je     8500 <get_loaded_rules+0x1a3>
    84c0:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    84c7:	48 8d 98 10 02 00 00 	lea    rbx,[rax+0x210]
    84ce:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    84d5:	48 89 c7             	mov    rdi,rax
    84d8:	e8 c3 a0 ff ff       	call   25a0 <strlen@plt>
    84dd:	48 8d 95 20 ff ff ff 	lea    rdx,[rbp-0xe0]
    84e4:	48 01 d0             	add    rax,rdx
    84e7:	48 89 da             	mov    rdx,rbx
    84ea:	48 8d 35 0d 63 00 00 	lea    rsi,[rip+0x630d]        # e7fe <_IO_stdin_used+0x17fe>
    84f1:	48 89 c7             	mov    rdi,rax
    84f4:	b8 00 00 00 00       	mov    eax,0x0
    84f9:	e8 02 a0 ff ff       	call   2500 <sprintf@plt>
    84fe:	eb 3e                	jmp    853e <get_loaded_rules+0x1e1>
    8500:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    8507:	48 8d 98 c8 02 00 00 	lea    rbx,[rax+0x2c8]
    850e:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    8515:	48 89 c7             	mov    rdi,rax
    8518:	e8 83 a0 ff ff       	call   25a0 <strlen@plt>
    851d:	48 8d 95 20 ff ff ff 	lea    rdx,[rbp-0xe0]
    8524:	48 01 d0             	add    rax,rdx
    8527:	48 89 da             	mov    rdx,rbx
    852a:	48 8d 35 cd 62 00 00 	lea    rsi,[rip+0x62cd]        # e7fe <_IO_stdin_used+0x17fe>
    8531:	48 89 c7             	mov    rdi,rax
    8534:	b8 00 00 00 00       	mov    eax,0x0
    8539:	e8 c2 9f ff ff       	call   2500 <sprintf@plt>
    853e:	48 8d 85 20 ff ff ff 	lea    rax,[rbp-0xe0]
    8545:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    854c:	00 00 
    854e:	48 81 c2 00 70 fe ff 	add    rdx,0xfffffffffffe7000
    8555:	48 89 c6             	mov    rsi,rax
    8558:	48 89 d7             	mov    rdi,rdx
    855b:	e8 70 a3 ff ff       	call   28d0 <strcat@plt>
    8560:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8567:	00 00 
    8569:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    856f:	48 89 c7             	mov    rdi,rax
    8572:	e8 29 a0 ff ff       	call   25a0 <strlen@plt>
    8577:	48 89 c2             	mov    rdx,rax
    857a:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8581:	00 00 
    8583:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8589:	48 01 d0             	add    rax,rdx
    858c:	66 c7 00 0a 09       	mov    WORD PTR [rax],0x90a
    8591:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    8595:	8b 05 79 9a 00 00    	mov    eax,DWORD PTR [rip+0x9a79]        # 12014 <num_rules>
    859b:	39 85 14 ff ff ff    	cmp    DWORD PTR [rbp-0xec],eax
    85a1:	0f 8e 6e fe ff ff    	jle    8415 <get_loaded_rules+0xb8>
    85a7:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    85ae:	00 00 
    85b0:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    85b6:	48 89 c7             	mov    rdi,rax
    85b9:	e8 e2 9f ff ff       	call   25a0 <strlen@plt>
    85be:	48 89 c2             	mov    rdx,rax
    85c1:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    85c8:	00 00 
    85ca:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    85d0:	48 01 d0             	add    rax,rdx
    85d3:	66 c7 00 0d 0a       	mov    WORD PTR [rax],0xa0d
    85d8:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    85dc:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    85e3:	00 00 
    85e5:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    85eb:	48 89 c7             	mov    rdi,rax
    85ee:	e8 ad 9f ff ff       	call   25a0 <strlen@plt>
    85f3:	48 89 c2             	mov    rdx,rax
    85f6:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    85fd:	8b 00                	mov    eax,DWORD PTR [rax]
    85ff:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8606:	00 00 
    8608:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    860f:	b9 00 00 00 00       	mov    ecx,0x0
    8614:	89 c7                	mov    edi,eax
    8616:	e8 b5 9f ff ff       	call   25d0 <send@plt>
    861b:	90                   	nop
    861c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8620:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8627:	00 00 
    8629:	74 05                	je     8630 <get_loaded_rules+0x2d3>
    862b:	e8 a0 a0 ff ff       	call   26d0 <__stack_chk_fail@plt>
    8630:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    8634:	c9                   	leave  
    8635:	c3                   	ret    

0000000000008636 <load_new_rule>:
    8636:	f3 0f 1e fa          	endbr64 
    863a:	55                   	push   rbp
    863b:	48 89 e5             	mov    rbp,rsp
    863e:	48 83 ec 20          	sub    rsp,0x20
    8642:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8646:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    864a:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8651:	00 00 
    8653:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8659:	ba 00 90 01 00       	mov    edx,0x19000
    865e:	be 00 00 00 00       	mov    esi,0x0
    8663:	48 89 c7             	mov    rdi,rax
    8666:	e8 a5 9f ff ff       	call   2610 <memset@plt>
    866b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    866f:	48 83 c0 01          	add    rax,0x1
    8673:	48 8d 35 8a 61 00 00 	lea    rsi,[rip+0x618a]        # e804 <_IO_stdin_used+0x1804>
    867a:	48 89 c7             	mov    rdi,rax
    867d:	e8 8e a0 ff ff       	call   2710 <fopen@plt>
    8682:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8686:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    868b:	75 69                	jne    86f6 <load_new_rule+0xc0>
    868d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8691:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    8698:	00 00 
    869a:	48 8d 8a 00 70 fe ff 	lea    rcx,[rdx-0x19000]
    86a1:	48 89 c2             	mov    rdx,rax
    86a4:	48 8d 35 5b 61 00 00 	lea    rsi,[rip+0x615b]        # e806 <_IO_stdin_used+0x1806>
    86ab:	48 89 cf             	mov    rdi,rcx
    86ae:	b8 00 00 00 00       	mov    eax,0x0
    86b3:	e8 48 9e ff ff       	call   2500 <sprintf@plt>
    86b8:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    86bf:	00 00 
    86c1:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    86c7:	48 89 c7             	mov    rdi,rax
    86ca:	e8 d1 9e ff ff       	call   25a0 <strlen@plt>
    86cf:	48 89 c2             	mov    rdx,rax
    86d2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86d6:	8b 00                	mov    eax,DWORD PTR [rax]
    86d8:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    86df:	00 00 
    86e1:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    86e8:	b9 00 00 00 00       	mov    ecx,0x0
    86ed:	89 c7                	mov    edi,eax
    86ef:	e8 dc 9e ff ff       	call   25d0 <send@plt>
    86f4:	eb 73                	jmp    8769 <load_new_rule+0x133>
    86f6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    86fa:	48 89 c7             	mov    rdi,rax
    86fd:	e8 4e d9 ff ff       	call   6050 <rule_parser>
    8702:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8706:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    870d:	00 00 
    870f:	48 8d 8a 00 70 fe ff 	lea    rcx,[rdx-0x19000]
    8716:	48 89 c2             	mov    rdx,rax
    8719:	48 8d 35 00 61 00 00 	lea    rsi,[rip+0x6100]        # e820 <_IO_stdin_used+0x1820>
    8720:	48 89 cf             	mov    rdi,rcx
    8723:	b8 00 00 00 00       	mov    eax,0x0
    8728:	e8 d3 9d ff ff       	call   2500 <sprintf@plt>
    872d:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8734:	00 00 
    8736:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    873c:	48 89 c7             	mov    rdi,rax
    873f:	e8 5c 9e ff ff       	call   25a0 <strlen@plt>
    8744:	48 89 c2             	mov    rdx,rax
    8747:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    874b:	8b 00                	mov    eax,DWORD PTR [rax]
    874d:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8754:	00 00 
    8756:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    875d:	b9 00 00 00 00       	mov    ecx,0x0
    8762:	89 c7                	mov    edi,eax
    8764:	e8 67 9e ff ff       	call   25d0 <send@plt>
    8769:	c9                   	leave  
    876a:	c3                   	ret    

000000000000876b <get_rule_matches>:
    876b:	f3 0f 1e fa          	endbr64 
    876f:	55                   	push   rbp
    8770:	48 89 e5             	mov    rbp,rsp
    8773:	48 81 ec 30 01 00 00 	sub    rsp,0x130
    877a:	48 89 bd d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rdi
    8781:	48 89 b5 d0 fe ff ff 	mov    QWORD PTR [rbp-0x130],rsi
    8788:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    878f:	00 00 
    8791:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8795:	31 c0                	xor    eax,eax
    8797:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    879e:	00 00 
    87a0:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    87a6:	ba 00 90 01 00       	mov    edx,0x19000
    87ab:	be 00 00 00 00       	mov    esi,0x0
    87b0:	48 89 c7             	mov    rdi,rax
    87b3:	e8 58 9e ff ff       	call   2610 <memset@plt>
    87b8:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    87bf:	48 89 c7             	mov    rdi,rax
    87c2:	e8 d9 9d ff ff       	call   25a0 <strlen@plt>
    87c7:	48 83 f8 02          	cmp    rax,0x2
    87cb:	0f 86 5b 01 00 00    	jbe    892c <get_rule_matches+0x1c1>
    87d1:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    87d8:	00 00 00 
    87db:	e9 c8 00 00 00       	jmp    88a8 <get_rule_matches+0x13d>
    87e0:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    87e6:	48 98                	cdqe   
    87e8:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    87ef:	48 8d 50 20          	lea    rdx,[rax+0x20]
    87f3:	48 8d 05 e6 9a 00 00 	lea    rax,[rip+0x9ae6]        # 122e0 <rules>
    87fa:	48 01 c2             	add    rdx,rax
    87fd:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    8804:	48 89 c6             	mov    rsi,rax
    8807:	48 89 d7             	mov    rdi,rdx
    880a:	e8 d1 9f ff ff       	call   27e0 <strcmp@plt>
    880f:	85 c0                	test   eax,eax
    8811:	0f 85 8a 00 00 00    	jne    88a1 <get_rule_matches+0x136>
    8817:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    881d:	48 98                	cdqe   
    881f:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    8826:	48 8d 15 ef 9a 00 00 	lea    rdx,[rip+0x9aef]        # 1231c <rules+0x3c>
    882d:	8b 14 10             	mov    edx,DWORD PTR [rax+rdx*1]
    8830:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    8837:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    883e:	00 00 
    8840:	48 8d b9 00 70 fe ff 	lea    rdi,[rcx-0x19000]
    8847:	89 d1                	mov    ecx,edx
    8849:	48 89 c2             	mov    rdx,rax
    884c:	48 8d 35 e3 5f 00 00 	lea    rsi,[rip+0x5fe3]        # e836 <_IO_stdin_used+0x1836>
    8853:	b8 00 00 00 00       	mov    eax,0x0
    8858:	e8 a3 9c ff ff       	call   2500 <sprintf@plt>
    885d:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8864:	00 00 
    8866:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    886c:	48 89 c7             	mov    rdi,rax
    886f:	e8 2c 9d ff ff       	call   25a0 <strlen@plt>
    8874:	48 89 c2             	mov    rdx,rax
    8877:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    887e:	8b 00                	mov    eax,DWORD PTR [rax]
    8880:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8887:	00 00 
    8889:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    8890:	b9 00 00 00 00       	mov    ecx,0x0
    8895:	89 c7                	mov    edi,eax
    8897:	e8 34 9d ff ff       	call   25d0 <send@plt>
    889c:	e9 25 02 00 00       	jmp    8ac6 <get_rule_matches+0x35b>
    88a1:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    88a8:	8b 05 66 97 00 00    	mov    eax,DWORD PTR [rip+0x9766]        # 12014 <num_rules>
    88ae:	39 85 e0 fe ff ff    	cmp    DWORD PTR [rbp-0x120],eax
    88b4:	0f 8e 26 ff ff ff    	jle    87e0 <get_rule_matches+0x75>
    88ba:	48 8b 85 d0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x130]
    88c1:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    88c8:	00 00 
    88ca:	48 8d 8a 00 70 fe ff 	lea    rcx,[rdx-0x19000]
    88d1:	48 89 c2             	mov    rdx,rax
    88d4:	48 8d 35 75 5f 00 00 	lea    rsi,[rip+0x5f75]        # e850 <_IO_stdin_used+0x1850>
    88db:	48 89 cf             	mov    rdi,rcx
    88de:	b8 00 00 00 00       	mov    eax,0x0
    88e3:	e8 18 9c ff ff       	call   2500 <sprintf@plt>
    88e8:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    88ef:	00 00 
    88f1:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    88f7:	48 89 c7             	mov    rdi,rax
    88fa:	e8 a1 9c ff ff       	call   25a0 <strlen@plt>
    88ff:	48 89 c2             	mov    rdx,rax
    8902:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    8909:	8b 00                	mov    eax,DWORD PTR [rax]
    890b:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8912:	00 00 
    8914:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    891b:	b9 00 00 00 00       	mov    ecx,0x0
    8920:	89 c7                	mov    edi,eax
    8922:	e8 a9 9c ff ff       	call   25d0 <send@plt>
    8927:	e9 9a 01 00 00       	jmp    8ac6 <get_rule_matches+0x35b>
    892c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8933:	00 00 
    8935:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    893b:	48 89 c7             	mov    rdi,rax
    893e:	e8 5d 9c ff ff       	call   25a0 <strlen@plt>
    8943:	48 89 c2             	mov    rdx,rax
    8946:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    894d:	00 00 
    894f:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8955:	48 01 d0             	add    rax,rdx
    8958:	48 be 52 75 6c 65 73 	movabs rsi,0x6e612073656c7552
    895f:	20 61 6e 
    8962:	48 bf 64 20 74 68 65 	movabs rdi,0x756e206568742064
    8969:	20 6e 75 
    896c:	48 89 30             	mov    QWORD PTR [rax],rsi
    896f:	48 89 78 08          	mov    QWORD PTR [rax+0x8],rdi
    8973:	48 be 6d 62 65 72 20 	movabs rsi,0x20666f207265626d
    897a:	6f 66 20 
    897d:	48 bf 74 69 6d 65 73 	movabs rdi,0x68742073656d6974
    8984:	20 74 68 
    8987:	48 89 70 10          	mov    QWORD PTR [rax+0x10],rsi
    898b:	48 89 78 18          	mov    QWORD PTR [rax+0x18],rdi
    898f:	48 be 65 79 20 77 65 	movabs rsi,0x2065726577207965
    8996:	72 65 20 
    8999:	48 bf 6d 61 74 63 68 	movabs rdi,0x3a6465686374616d
    89a0:	65 64 3a 
    89a3:	48 89 70 20          	mov    QWORD PTR [rax+0x20],rsi
    89a7:	48 89 78 28          	mov    QWORD PTR [rax+0x28],rdi
    89ab:	66 c7 40 30 0a 00    	mov    WORD PTR [rax+0x30],0xa
    89b1:	c7 85 e4 fe ff ff 00 	mov    DWORD PTR [rbp-0x11c],0x0
    89b8:	00 00 00 
    89bb:	e9 80 00 00 00       	jmp    8a40 <get_rule_matches+0x2d5>
    89c0:	8b 85 e4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x11c]
    89c6:	8d 50 01             	lea    edx,[rax+0x1]
    89c9:	89 95 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],edx
    89cf:	48 98                	cdqe   
    89d1:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    89d8:	48 8d 15 01 99 00 00 	lea    rdx,[rip+0x9901]        # 122e0 <rules>
    89df:	48 01 d0             	add    rax,rdx
    89e2:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    89e9:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    89f0:	8b 50 3c             	mov    edx,DWORD PTR [rax+0x3c]
    89f3:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    89fa:	48 8d 70 20          	lea    rsi,[rax+0x20]
    89fe:	48 8d 85 f0 fe ff ff 	lea    rax,[rbp-0x110]
    8a05:	89 d1                	mov    ecx,edx
    8a07:	48 89 f2             	mov    rdx,rsi
    8a0a:	48 8d 35 54 5e 00 00 	lea    rsi,[rip+0x5e54]        # e865 <_IO_stdin_used+0x1865>
    8a11:	48 89 c7             	mov    rdi,rax
    8a14:	b8 00 00 00 00       	mov    eax,0x0
    8a19:	e8 e2 9a ff ff       	call   2500 <sprintf@plt>
    8a1e:	48 8d 85 f0 fe ff ff 	lea    rax,[rbp-0x110]
    8a25:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    8a2c:	00 00 
    8a2e:	48 81 c2 00 70 fe ff 	add    rdx,0xfffffffffffe7000
    8a35:	48 89 c6             	mov    rsi,rax
    8a38:	48 89 d7             	mov    rdi,rdx
    8a3b:	e8 90 9e ff ff       	call   28d0 <strcat@plt>
    8a40:	8b 05 ce 95 00 00    	mov    eax,DWORD PTR [rip+0x95ce]        # 12014 <num_rules>
    8a46:	39 85 e4 fe ff ff    	cmp    DWORD PTR [rbp-0x11c],eax
    8a4c:	0f 8e 6e ff ff ff    	jle    89c0 <get_rule_matches+0x255>
    8a52:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8a59:	00 00 
    8a5b:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8a61:	48 89 c7             	mov    rdi,rax
    8a64:	e8 37 9b ff ff       	call   25a0 <strlen@plt>
    8a69:	48 89 c2             	mov    rdx,rax
    8a6c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8a73:	00 00 
    8a75:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8a7b:	48 01 d0             	add    rax,rdx
    8a7e:	66 c7 00 0d 0a       	mov    WORD PTR [rax],0xa0d
    8a83:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    8a87:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8a8e:	00 00 
    8a90:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8a96:	48 89 c7             	mov    rdi,rax
    8a99:	e8 02 9b ff ff       	call   25a0 <strlen@plt>
    8a9e:	48 89 c2             	mov    rdx,rax
    8aa1:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    8aa8:	8b 00                	mov    eax,DWORD PTR [rax]
    8aaa:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8ab1:	00 00 
    8ab3:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    8aba:	b9 00 00 00 00       	mov    ecx,0x0
    8abf:	89 c7                	mov    edi,eax
    8ac1:	e8 0a 9b ff ff       	call   25d0 <send@plt>
    8ac6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8aca:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8ad1:	00 00 
    8ad3:	74 05                	je     8ada <get_rule_matches+0x36f>
    8ad5:	e8 f6 9b ff ff       	call   26d0 <__stack_chk_fail@plt>
    8ada:	c9                   	leave  
    8adb:	c3                   	ret    

0000000000008adc <get_arp_cache>:
    8adc:	f3 0f 1e fa          	endbr64 
    8ae0:	55                   	push   rbp
    8ae1:	48 89 e5             	mov    rbp,rsp
    8ae4:	48 83 ec 70          	sub    rsp,0x70
    8ae8:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    8aec:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8af3:	00 00 
    8af5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8af9:	31 c0                	xor    eax,eax
    8afb:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8b02:	00 00 
    8b04:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8b0a:	ba 00 90 01 00       	mov    edx,0x19000
    8b0f:	be 00 00 00 00       	mov    esi,0x0
    8b14:	48 89 c7             	mov    rdi,rax
    8b17:	e8 f4 9a ff ff       	call   2610 <memset@plt>
    8b1c:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8b23:	00 00 
    8b25:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8b2b:	48 89 c7             	mov    rdi,rax
    8b2e:	e8 6d 9a ff ff       	call   25a0 <strlen@plt>
    8b33:	48 89 c2             	mov    rdx,rax
    8b36:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8b3d:	00 00 
    8b3f:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8b45:	48 01 d0             	add    rax,rdx
    8b48:	48 be 43 75 72 72 65 	movabs rsi,0x20746e6572727543
    8b4f:	6e 74 20 
    8b52:	48 bf 41 52 50 20 63 	movabs rdi,0x6863616320505241
    8b59:	61 63 68 
    8b5c:	48 89 30             	mov    QWORD PTR [rax],rsi
    8b5f:	48 89 78 08          	mov    QWORD PTR [rax+0x8],rdi
    8b63:	66 c7 40 10 65 3a    	mov    WORD PTR [rax+0x10],0x3a65
    8b69:	c6 40 12 00          	mov    BYTE PTR [rax+0x12],0x0
    8b6d:	c7 45 ac 00 00 00 00 	mov    DWORD PTR [rbp-0x54],0x0
    8b74:	eb 7a                	jmp    8bf0 <get_arp_cache+0x114>
    8b76:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
    8b79:	48 63 d0             	movsxd rdx,eax
    8b7c:	48 89 d0             	mov    rax,rdx
    8b7f:	48 c1 e0 04          	shl    rax,0x4
    8b83:	48 01 d0             	add    rax,rdx
    8b86:	48 01 c0             	add    rax,rax
    8b89:	48 8d 50 10          	lea    rdx,[rax+0x10]
    8b8d:	48 8d 05 8c 01 10 00 	lea    rax,[rip+0x10018c]        # 108d20 <arpcache>
    8b94:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    8b98:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
    8b9b:	48 63 d0             	movsxd rdx,eax
    8b9e:	48 89 d0             	mov    rax,rdx
    8ba1:	48 c1 e0 04          	shl    rax,0x4
    8ba5:	48 01 d0             	add    rax,rdx
    8ba8:	48 01 c0             	add    rax,rax
    8bab:	48 8d 15 6e 01 10 00 	lea    rdx,[rip+0x10016e]        # 108d20 <arpcache>
    8bb2:	48 01 c2             	add    rdx,rax
    8bb5:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    8bb9:	48 8d 35 bb 5c 00 00 	lea    rsi,[rip+0x5cbb]        # e87b <_IO_stdin_used+0x187b>
    8bc0:	48 89 c7             	mov    rdi,rax
    8bc3:	b8 00 00 00 00       	mov    eax,0x0
    8bc8:	e8 33 99 ff ff       	call   2500 <sprintf@plt>
    8bcd:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    8bd1:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    8bd8:	00 00 
    8bda:	48 81 c2 00 70 fe ff 	add    rdx,0xfffffffffffe7000
    8be1:	48 89 c6             	mov    rsi,rax
    8be4:	48 89 d7             	mov    rdi,rdx
    8be7:	e8 e4 9c ff ff       	call   28d0 <strcat@plt>
    8bec:	83 45 ac 01          	add    DWORD PTR [rbp-0x54],0x1
    8bf0:	8b 05 26 94 00 00    	mov    eax,DWORD PTR [rip+0x9426]        # 1201c <arp_entries>
    8bf6:	39 45 ac             	cmp    DWORD PTR [rbp-0x54],eax
    8bf9:	0f 8e 77 ff ff ff    	jle    8b76 <get_arp_cache+0x9a>
    8bff:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8c06:	00 00 
    8c08:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8c0e:	48 89 c7             	mov    rdi,rax
    8c11:	e8 8a 99 ff ff       	call   25a0 <strlen@plt>
    8c16:	48 89 c2             	mov    rdx,rax
    8c19:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8c20:	00 00 
    8c22:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8c28:	48 01 d0             	add    rax,rdx
    8c2b:	66 c7 00 0d 0a       	mov    WORD PTR [rax],0xa0d
    8c30:	c6 40 02 00          	mov    BYTE PTR [rax+0x2],0x0
    8c34:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8c3b:	00 00 
    8c3d:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8c43:	48 89 c7             	mov    rdi,rax
    8c46:	e8 55 99 ff ff       	call   25a0 <strlen@plt>
    8c4b:	48 89 c2             	mov    rdx,rax
    8c4e:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    8c52:	8b 00                	mov    eax,DWORD PTR [rax]
    8c54:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    8c5b:	00 00 
    8c5d:	48 8d b1 00 70 fe ff 	lea    rsi,[rcx-0x19000]
    8c64:	b9 00 00 00 00       	mov    ecx,0x0
    8c69:	89 c7                	mov    edi,eax
    8c6b:	e8 60 99 ff ff       	call   25d0 <send@plt>
    8c70:	90                   	nop
    8c71:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c75:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8c7c:	00 00 
    8c7e:	74 05                	je     8c85 <get_arp_cache+0x1a9>
    8c80:	e8 4b 9a ff ff       	call   26d0 <__stack_chk_fail@plt>
    8c85:	c9                   	leave  
    8c86:	c3                   	ret    

0000000000008c87 <set_spi_max>:
    8c87:	f3 0f 1e fa          	endbr64 
    8c8b:	55                   	push   rbp
    8c8c:	48 89 e5             	mov    rbp,rsp
    8c8f:	53                   	push   rbx
    8c90:	48 83 ec 18          	sub    rsp,0x18
    8c94:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    8c97:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8c9b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8ca2:	00 00 
    8ca4:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8caa:	ba 00 90 01 00       	mov    edx,0x19000
    8caf:	be 00 00 00 00       	mov    esi,0x0
    8cb4:	48 89 c7             	mov    rdi,rax
    8cb7:	e8 54 99 ff ff       	call   2610 <memset@plt>
    8cbc:	8b 05 5e 93 00 00    	mov    eax,DWORD PTR [rip+0x935e]        # 12020 <spi_max>
    8cc2:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    8cc9:	00 00 
    8ccb:	48 8d 8a 00 70 fe ff 	lea    rcx,[rdx-0x19000]
    8cd2:	89 c2                	mov    edx,eax
    8cd4:	48 8d 35 ab 5b 00 00 	lea    rsi,[rip+0x5bab]        # e886 <_IO_stdin_used+0x1886>
    8cdb:	48 89 cf             	mov    rdi,rcx
    8cde:	b8 00 00 00 00       	mov    eax,0x0
    8ce3:	e8 18 98 ff ff       	call   2500 <sprintf@plt>
    8ce8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8cec:	48 89 c7             	mov    rdi,rax
    8cef:	e8 ac 98 ff ff       	call   25a0 <strlen@plt>
    8cf4:	48 83 f8 01          	cmp    rax,0x1
    8cf8:	77 77                	ja     8d71 <set_spi_max+0xea>
    8cfa:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8d01:	00 00 
    8d03:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8d09:	48 89 c7             	mov    rdi,rax
    8d0c:	e8 8f 98 ff ff       	call   25a0 <strlen@plt>
    8d11:	48 89 c2             	mov    rdx,rax
    8d14:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8d1b:	00 00 
    8d1d:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8d23:	48 01 d0             	add    rax,rdx
    8d26:	48 bb 53 50 49 20 4e 	movabs rbx,0x626d754e20495053
    8d2d:	75 6d 62 
    8d30:	48 be 65 72 20 74 6f 	movabs rsi,0x73206f6f74207265
    8d37:	6f 20 73 
    8d3a:	48 89 18             	mov    QWORD PTR [rax],rbx
    8d3d:	48 89 70 08          	mov    QWORD PTR [rax+0x8],rsi
    8d41:	48 b9 68 6f 72 74 20 	movabs rcx,0x20726f2074726f68
    8d48:	6f 72 20 
    8d4b:	48 bb 69 73 20 6e 6f 	movabs rbx,0x6120746f6e207369
    8d52:	74 20 61 
    8d55:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
    8d59:	48 89 58 18          	mov    QWORD PTR [rax+0x18],rbx
    8d5d:	48 b9 20 6e 75 6d 62 	movabs rcx,0xa7265626d756e20
    8d64:	65 72 0a 
    8d67:	48 89 48 20          	mov    QWORD PTR [rax+0x20],rcx
    8d6b:	c6 40 28 00          	mov    BYTE PTR [rax+0x28],0x0
    8d6f:	eb 5a                	jmp    8dcb <set_spi_max+0x144>
    8d71:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8d75:	48 89 c7             	mov    rdi,rax
    8d78:	e8 f3 9a ff ff       	call   2870 <atoi@plt>
    8d7d:	89 05 9d 92 00 00    	mov    DWORD PTR [rip+0x929d],eax        # 12020 <spi_max>
    8d83:	8b 1d 97 92 00 00    	mov    ebx,DWORD PTR [rip+0x9297]        # 12020 <spi_max>
    8d89:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8d90:	00 00 
    8d92:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8d98:	48 89 c7             	mov    rdi,rax
    8d9b:	e8 00 98 ff ff       	call   25a0 <strlen@plt>
    8da0:	48 89 c2             	mov    rdx,rax
    8da3:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8daa:	00 00 
    8dac:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8db2:	48 01 d0             	add    rax,rdx
    8db5:	89 da                	mov    edx,ebx
    8db7:	48 8d 35 dd 5a 00 00 	lea    rsi,[rip+0x5add]        # e89b <_IO_stdin_used+0x189b>
    8dbe:	48 89 c7             	mov    rdi,rax
    8dc1:	b8 00 00 00 00       	mov    eax,0x0
    8dc6:	e8 35 97 ff ff       	call   2500 <sprintf@plt>
    8dcb:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8dd2:	00 00 
    8dd4:	48 05 00 70 fe ff    	add    rax,0xfffffffffffe7000
    8dda:	48 89 c7             	mov    rdi,rax
    8ddd:	e8 be 97 ff ff       	call   25a0 <strlen@plt>
    8de2:	48 89 c2             	mov    rdx,rax
    8de5:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    8dec:	00 00 
    8dee:	48 8d b0 00 70 fe ff 	lea    rsi,[rax-0x19000]
    8df5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8df8:	b9 00 00 00 00       	mov    ecx,0x0
    8dfd:	89 c7                	mov    edi,eax
    8dff:	e8 cc 97 ff ff       	call   25d0 <send@plt>
    8e04:	90                   	nop
    8e05:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    8e09:	c9                   	leave  
    8e0a:	c3                   	ret    

0000000000008e0b <tcp_rst_portscan_detect>:
    8e0b:	f3 0f 1e fa          	endbr64 
    8e0f:	55                   	push   rbp
    8e10:	48 89 e5             	mov    rbp,rsp
    8e13:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    8e1a:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    8e21:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8e28:	00 00 
    8e2a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8e2e:	31 c0                	xor    eax,eax
    8e30:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    8e37:	00 00 00 
    8e3a:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8e41:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    8e47:	83 f8 1e             	cmp    eax,0x1e
    8e4a:	74 0a                	je     8e56 <tcp_rst_portscan_detect+0x4b>
    8e4c:	b8 00 00 00 00       	mov    eax,0x0
    8e51:	e9 8d 01 00 00       	jmp    8fe3 <tcp_rst_portscan_detect+0x1d8>
    8e56:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8e5d:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    8e63:	83 e8 01             	sub    eax,0x1
    8e66:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    8e6c:	eb 6c                	jmp    8eda <tcp_rst_portscan_detect+0xcf>
    8e6e:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    8e74:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    8e7a:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8e81:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    8e87:	48 63 d2             	movsxd rdx,edx
    8e8a:	48 83 c2 28          	add    rdx,0x28
    8e8e:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    8e93:	89 c1                	mov    ecx,eax
    8e95:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    8e9c:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8ea3:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    8ea9:	48 63 d2             	movsxd rdx,edx
    8eac:	48 83 c2 28          	add    rdx,0x28
    8eb0:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    8eb5:	29 c1                	sub    ecx,eax
    8eb7:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    8ebd:	8d 50 01             	lea    edx,[rax+0x1]
    8ec0:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    8ec6:	89 ca                	mov    edx,ecx
    8ec8:	48 98                	cdqe   
    8eca:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    8ed1:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    8ed8:	74 0b                	je     8ee5 <tcp_rst_portscan_detect+0xda>
    8eda:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    8ee1:	75 8b                	jne    8e6e <tcp_rst_portscan_detect+0x63>
    8ee3:	eb 01                	jmp    8ee6 <tcp_rst_portscan_detect+0xdb>
    8ee5:	90                   	nop
    8ee6:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    8eed:	00 00 00 
    8ef0:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    8ef7:	00 00 00 
    8efa:	eb 24                	jmp    8f20 <tcp_rst_portscan_detect+0x115>
    8efc:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    8f02:	48 98                	cdqe   
    8f04:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    8f0b:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    8f10:	7f 07                	jg     8f19 <tcp_rst_portscan_detect+0x10e>
    8f12:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    8f19:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    8f20:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    8f26:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    8f2c:	7c ce                	jl     8efc <tcp_rst_portscan_detect+0xf1>
    8f2e:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    8f34:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    8f3a:	0f 85 9e 00 00 00    	jne    8fde <tcp_rst_portscan_detect+0x1d3>
    8f40:	48 8b 05 f1 90 00 00 	mov    rax,QWORD PTR [rip+0x90f1]        # 12038 <def_log_file>
    8f47:	48 8d 35 62 59 00 00 	lea    rsi,[rip+0x5962]        # e8b0 <_IO_stdin_used+0x18b0>
    8f4e:	48 89 c7             	mov    rdi,rax
    8f51:	e8 ba 97 ff ff       	call   2710 <fopen@plt>
    8f56:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    8f5d:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8f64:	48 83 c0 08          	add    rax,0x8
    8f68:	48 89 c6             	mov    rsi,rax
    8f6b:	48 8d 3d 46 59 00 00 	lea    rdi,[rip+0x5946]        # e8b8 <_IO_stdin_used+0x18b8>
    8f72:	b8 00 00 00 00       	mov    eax,0x0
    8f77:	e8 44 95 ff ff       	call   24c0 <printf@plt>
    8f7c:	b8 00 00 00 00       	mov    eax,0x0
    8f81:	e8 59 a4 ff ff       	call   33df <get_formated_time>
    8f86:	48 89 c1             	mov    rcx,rax
    8f89:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    8f90:	48 8d 50 08          	lea    rdx,[rax+0x8]
    8f94:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    8f9b:	48 8d 35 46 59 00 00 	lea    rsi,[rip+0x5946]        # e8e8 <_IO_stdin_used+0x18e8>
    8fa2:	48 89 c7             	mov    rdi,rax
    8fa5:	b8 00 00 00 00       	mov    eax,0x0
    8faa:	e8 51 95 ff ff       	call   2500 <sprintf@plt>
    8faf:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    8fb6:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    8fbd:	48 89 d6             	mov    rsi,rdx
    8fc0:	48 89 c7             	mov    rdi,rax
    8fc3:	e8 18 97 ff ff       	call   26e0 <fputs@plt>
    8fc8:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    8fcf:	48 89 c7             	mov    rdi,rax
    8fd2:	e8 e9 96 ff ff       	call   26c0 <fclose@plt>
    8fd7:	b8 01 00 00 00       	mov    eax,0x1
    8fdc:	eb 05                	jmp    8fe3 <tcp_rst_portscan_detect+0x1d8>
    8fde:	b8 00 00 00 00       	mov    eax,0x0
    8fe3:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    8fe7:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    8fee:	00 00 
    8ff0:	74 05                	je     8ff7 <tcp_rst_portscan_detect+0x1ec>
    8ff2:	e8 d9 96 ff ff       	call   26d0 <__stack_chk_fail@plt>
    8ff7:	c9                   	leave  
    8ff8:	c3                   	ret    

0000000000008ff9 <fin_rst_portscan_detect>:
    8ff9:	f3 0f 1e fa          	endbr64 
    8ffd:	55                   	push   rbp
    8ffe:	48 89 e5             	mov    rbp,rsp
    9001:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    9008:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    900f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9016:	00 00 
    9018:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    901c:	31 c0                	xor    eax,eax
    901e:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    9025:	00 00 00 
    9028:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    902f:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    9032:	83 f8 1e             	cmp    eax,0x1e
    9035:	74 0a                	je     9041 <fin_rst_portscan_detect+0x48>
    9037:	b8 00 00 00 00       	mov    eax,0x0
    903c:	e9 8a 01 00 00       	jmp    91cb <fin_rst_portscan_detect+0x1d2>
    9041:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    9048:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    904b:	83 e8 01             	sub    eax,0x1
    904e:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    9054:	eb 6c                	jmp    90c2 <fin_rst_portscan_detect+0xc9>
    9056:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    905c:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    9062:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    9069:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    906f:	48 63 d2             	movsxd rdx,edx
    9072:	48 83 c2 0a          	add    rdx,0xa
    9076:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    907b:	89 c1                	mov    ecx,eax
    907d:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    9084:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    908b:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    9091:	48 63 d2             	movsxd rdx,edx
    9094:	48 83 c2 0a          	add    rdx,0xa
    9098:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    909d:	29 c1                	sub    ecx,eax
    909f:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    90a5:	8d 50 01             	lea    edx,[rax+0x1]
    90a8:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    90ae:	89 ca                	mov    edx,ecx
    90b0:	48 98                	cdqe   
    90b2:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    90b9:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    90c0:	74 0b                	je     90cd <fin_rst_portscan_detect+0xd4>
    90c2:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    90c9:	75 8b                	jne    9056 <fin_rst_portscan_detect+0x5d>
    90cb:	eb 01                	jmp    90ce <fin_rst_portscan_detect+0xd5>
    90cd:	90                   	nop
    90ce:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    90d5:	00 00 00 
    90d8:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    90df:	00 00 00 
    90e2:	eb 24                	jmp    9108 <fin_rst_portscan_detect+0x10f>
    90e4:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    90ea:	48 98                	cdqe   
    90ec:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    90f3:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    90f8:	7f 07                	jg     9101 <fin_rst_portscan_detect+0x108>
    90fa:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    9101:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    9108:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    910e:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    9114:	7c ce                	jl     90e4 <fin_rst_portscan_detect+0xeb>
    9116:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    911c:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    9122:	0f 85 9e 00 00 00    	jne    91c6 <fin_rst_portscan_detect+0x1cd>
    9128:	48 8b 05 09 8f 00 00 	mov    rax,QWORD PTR [rip+0x8f09]        # 12038 <def_log_file>
    912f:	48 8d 35 7a 57 00 00 	lea    rsi,[rip+0x577a]        # e8b0 <_IO_stdin_used+0x18b0>
    9136:	48 89 c7             	mov    rdi,rax
    9139:	e8 d2 95 ff ff       	call   2710 <fopen@plt>
    913e:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    9145:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    914c:	48 83 c0 08          	add    rax,0x8
    9150:	48 89 c6             	mov    rsi,rax
    9153:	48 8d 3d b6 57 00 00 	lea    rdi,[rip+0x57b6]        # e910 <_IO_stdin_used+0x1910>
    915a:	b8 00 00 00 00       	mov    eax,0x0
    915f:	e8 5c 93 ff ff       	call   24c0 <printf@plt>
    9164:	b8 00 00 00 00       	mov    eax,0x0
    9169:	e8 71 a2 ff ff       	call   33df <get_formated_time>
    916e:	48 89 c1             	mov    rcx,rax
    9171:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    9178:	48 8d 50 08          	lea    rdx,[rax+0x8]
    917c:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    9183:	48 8d 35 b6 57 00 00 	lea    rsi,[rip+0x57b6]        # e940 <_IO_stdin_used+0x1940>
    918a:	48 89 c7             	mov    rdi,rax
    918d:	b8 00 00 00 00       	mov    eax,0x0
    9192:	e8 69 93 ff ff       	call   2500 <sprintf@plt>
    9197:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    919e:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    91a5:	48 89 d6             	mov    rsi,rdx
    91a8:	48 89 c7             	mov    rdi,rax
    91ab:	e8 30 95 ff ff       	call   26e0 <fputs@plt>
    91b0:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    91b7:	48 89 c7             	mov    rdi,rax
    91ba:	e8 01 95 ff ff       	call   26c0 <fclose@plt>
    91bf:	b8 01 00 00 00       	mov    eax,0x1
    91c4:	eb 05                	jmp    91cb <fin_rst_portscan_detect+0x1d2>
    91c6:	b8 00 00 00 00       	mov    eax,0x0
    91cb:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    91cf:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    91d6:	00 00 
    91d8:	74 05                	je     91df <fin_rst_portscan_detect+0x1e6>
    91da:	e8 f1 94 ff ff       	call   26d0 <__stack_chk_fail@plt>
    91df:	c9                   	leave  
    91e0:	c3                   	ret    

00000000000091e1 <member_ready_for_scan>:
    91e1:	f3 0f 1e fa          	endbr64 
    91e5:	55                   	push   rbp
    91e6:	48 89 e5             	mov    rbp,rsp
    91e9:	48 83 ec 10          	sub    rsp,0x10
    91ed:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    91f4:	eb 48                	jmp    923e <member_ready_for_scan+0x5d>
    91f6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    91f9:	48 63 d0             	movsxd rdx,eax
    91fc:	48 89 d0             	mov    rax,rdx
    91ff:	48 c1 e0 02          	shl    rax,0x2
    9203:	48 01 d0             	add    rax,rdx
    9206:	48 c1 e0 03          	shl    rax,0x3
    920a:	48 01 d0             	add    rax,rdx
    920d:	48 c1 e0 04          	shl    rax,0x4
    9211:	48 8d 15 08 b3 0e 00 	lea    rdx,[rip+0xeb308]        # f4520 <watchlist>
    9218:	48 01 d0             	add    rax,rdx
    921b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    921f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9223:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    9229:	83 f8 1d             	cmp    eax,0x1d
    922c:	76 0c                	jbe    923a <member_ready_for_scan+0x59>
    922e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9232:	48 89 c7             	mov    rdi,rax
    9235:	e8 d1 fb ff ff       	call   8e0b <tcp_rst_portscan_detect>
    923a:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    923e:	8b 05 d4 8d 00 00    	mov    eax,DWORD PTR [rip+0x8dd4]        # 12018 <watchlist_num>
    9244:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    9247:	7e ad                	jle    91f6 <member_ready_for_scan+0x15>
    9249:	90                   	nop
    924a:	90                   	nop
    924b:	c9                   	leave  
    924c:	c3                   	ret    

000000000000924d <member_exists>:
    924d:	f3 0f 1e fa          	endbr64 
    9251:	55                   	push   rbp
    9252:	48 89 e5             	mov    rbp,rsp
    9255:	48 83 ec 20          	sub    rsp,0x20
    9259:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    925d:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    9264:	eb 47                	jmp    92ad <member_exists+0x60>
    9266:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9269:	8d 50 01             	lea    edx,[rax+0x1]
    926c:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    926f:	48 63 d0             	movsxd rdx,eax
    9272:	48 89 d0             	mov    rax,rdx
    9275:	48 c1 e0 02          	shl    rax,0x2
    9279:	48 01 d0             	add    rax,rdx
    927c:	48 c1 e0 03          	shl    rax,0x3
    9280:	48 01 d0             	add    rax,rdx
    9283:	48 c1 e0 04          	shl    rax,0x4
    9287:	48 8d 15 92 b2 0e 00 	lea    rdx,[rip+0xeb292]        # f4520 <watchlist>
    928e:	48 01 d0             	add    rax,rdx
    9291:	48 8d 50 08          	lea    rdx,[rax+0x8]
    9295:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9299:	48 89 c6             	mov    rsi,rax
    929c:	48 89 d7             	mov    rdi,rdx
    929f:	e8 3c 95 ff ff       	call   27e0 <strcmp@plt>
    92a4:	85 c0                	test   eax,eax
    92a6:	75 05                	jne    92ad <member_exists+0x60>
    92a8:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    92ab:	eb 10                	jmp    92bd <member_exists+0x70>
    92ad:	8b 05 65 8d 00 00    	mov    eax,DWORD PTR [rip+0x8d65]        # 12018 <watchlist_num>
    92b3:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    92b6:	7e ae                	jle    9266 <member_exists+0x19>
    92b8:	b8 ff ff ff ff       	mov    eax,0xffffffff
    92bd:	c9                   	leave  
    92be:	c3                   	ret    

00000000000092bf <init_member>:
    92bf:	f3 0f 1e fa          	endbr64 
    92c3:	55                   	push   rbp
    92c4:	48 89 e5             	mov    rbp,rsp
    92c7:	48 83 ec 20          	sub    rsp,0x20
    92cb:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    92cf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    92d3:	48 89 c7             	mov    rdi,rax
    92d6:	e8 72 ff ff ff       	call   924d <member_exists>
    92db:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    92de:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    92e2:	74 42                	je     9326 <init_member+0x67>
    92e4:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    92e7:	48 63 d0             	movsxd rdx,eax
    92ea:	48 89 d0             	mov    rax,rdx
    92ed:	48 c1 e0 02          	shl    rax,0x2
    92f1:	48 01 d0             	add    rax,rdx
    92f4:	48 c1 e0 03          	shl    rax,0x3
    92f8:	48 01 d0             	add    rax,rdx
    92fb:	48 c1 e0 04          	shl    rax,0x4
    92ff:	48 8d 15 1a b2 0e 00 	lea    rdx,[rip+0xeb21a]        # f4520 <watchlist>
    9306:	48 01 d0             	add    rax,rdx
    9309:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    930d:	bf 00 00 00 00       	mov    edi,0x0
    9312:	e8 79 93 ff ff       	call   2690 <time@plt>
    9317:	48 89 c2             	mov    rdx,rax
    931a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    931e:	48 89 10             	mov    QWORD PTR [rax],rdx
    9321:	e9 a8 00 00 00       	jmp    93ce <init_member+0x10f>
    9326:	48 8d 3d 38 56 00 00 	lea    rdi,[rip+0x5638]        # e965 <_IO_stdin_used+0x1965>
    932d:	e8 1b ff ff ff       	call   924d <member_exists>
    9332:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9335:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    9339:	74 2b                	je     9366 <init_member+0xa7>
    933b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    933e:	48 63 d0             	movsxd rdx,eax
    9341:	48 89 d0             	mov    rax,rdx
    9344:	48 c1 e0 02          	shl    rax,0x2
    9348:	48 01 d0             	add    rax,rdx
    934b:	48 c1 e0 03          	shl    rax,0x3
    934f:	48 01 d0             	add    rax,rdx
    9352:	48 c1 e0 04          	shl    rax,0x4
    9356:	48 8d 15 c3 b1 0e 00 	lea    rdx,[rip+0xeb1c3]        # f4520 <watchlist>
    935d:	48 01 d0             	add    rax,rdx
    9360:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9364:	eb 3b                	jmp    93a1 <init_member+0xe2>
    9366:	8b 05 ac 8c 00 00    	mov    eax,DWORD PTR [rip+0x8cac]        # 12018 <watchlist_num>
    936c:	83 c0 01             	add    eax,0x1
    936f:	89 05 a3 8c 00 00    	mov    DWORD PTR [rip+0x8ca3],eax        # 12018 <watchlist_num>
    9375:	8b 05 9d 8c 00 00    	mov    eax,DWORD PTR [rip+0x8c9d]        # 12018 <watchlist_num>
    937b:	48 63 d0             	movsxd rdx,eax
    937e:	48 89 d0             	mov    rax,rdx
    9381:	48 c1 e0 02          	shl    rax,0x2
    9385:	48 01 d0             	add    rax,rdx
    9388:	48 c1 e0 03          	shl    rax,0x3
    938c:	48 01 d0             	add    rax,rdx
    938f:	48 c1 e0 04          	shl    rax,0x4
    9393:	48 8d 15 86 b1 0e 00 	lea    rdx,[rip+0xeb186]        # f4520 <watchlist>
    939a:	48 01 d0             	add    rax,rdx
    939d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    93a1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93a5:	ba 08 00 00 00       	mov    edx,0x8
    93aa:	be 00 00 00 00       	mov    esi,0x0
    93af:	48 89 c7             	mov    rdi,rax
    93b2:	e8 59 92 ff ff       	call   2610 <memset@plt>
    93b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93bb:	48 8d 50 08          	lea    rdx,[rax+0x8]
    93bf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    93c3:	48 89 c6             	mov    rsi,rax
    93c6:	48 89 d7             	mov    rdi,rdx
    93c9:	e8 d2 92 ff ff       	call   26a0 <strcpy@plt>
    93ce:	c9                   	leave  
    93cf:	c3                   	ret    

00000000000093d0 <ready_for_clean>:
    93d0:	f3 0f 1e fa          	endbr64 
    93d4:	55                   	push   rbp
    93d5:	48 89 e5             	mov    rbp,rsp
    93d8:	48 83 ec 10          	sub    rsp,0x10
    93dc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    93e0:	bf 00 00 00 00       	mov    edi,0x0
    93e5:	e8 a6 92 ff ff       	call   2690 <time@plt>
    93ea:	48 89 c2             	mov    rdx,rax
    93ed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93f1:	48 8b 00             	mov    rax,QWORD PTR [rax]
    93f4:	48 29 c2             	sub    rdx,rax
    93f7:	48 8b 05 ba 8e 00 00 	mov    rax,QWORD PTR [rip+0x8eba]        # 122b8 <clean_delay>
    93fe:	48 39 c2             	cmp    rdx,rax
    9401:	72 22                	jb     9425 <ready_for_clean+0x55>
    9403:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9407:	48 83 c0 08          	add    rax,0x8
    940b:	48 8d 35 5b 55 00 00 	lea    rsi,[rip+0x555b]        # e96d <_IO_stdin_used+0x196d>
    9412:	48 89 c7             	mov    rdi,rax
    9415:	e8 c6 93 ff ff       	call   27e0 <strcmp@plt>
    941a:	85 c0                	test   eax,eax
    941c:	74 07                	je     9425 <ready_for_clean+0x55>
    941e:	b8 01 00 00 00       	mov    eax,0x1
    9423:	eb 05                	jmp    942a <ready_for_clean+0x5a>
    9425:	b8 ff ff ff ff       	mov    eax,0xffffffff
    942a:	c9                   	leave  
    942b:	c3                   	ret    

000000000000942c <clean>:
    942c:	f3 0f 1e fa          	endbr64 
    9430:	55                   	push   rbp
    9431:	48 89 e5             	mov    rbp,rsp
    9434:	48 83 ec 10          	sub    rsp,0x10
    9438:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    943c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9440:	ba 08 00 00 00       	mov    edx,0x8
    9445:	be 00 00 00 00       	mov    esi,0x0
    944a:	48 89 c7             	mov    rdi,rax
    944d:	e8 be 91 ff ff       	call   2610 <memset@plt>
    9452:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9456:	48 83 c0 08          	add    rax,0x8
    945a:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    9461:	2e 31 00 
    9464:	48 89 08             	mov    QWORD PTR [rax],rcx
    9467:	90                   	nop
    9468:	c9                   	leave  
    9469:	c3                   	ret    

000000000000946a <scan_for_clean>:
    946a:	f3 0f 1e fa          	endbr64 
    946e:	55                   	push   rbp
    946f:	48 89 e5             	mov    rbp,rsp
    9472:	48 83 ec 10          	sub    rsp,0x10
    9476:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    947d:	eb 62                	jmp    94e1 <scan_for_clean+0x77>
    947f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9482:	48 63 d0             	movsxd rdx,eax
    9485:	48 89 d0             	mov    rax,rdx
    9488:	48 c1 e0 02          	shl    rax,0x2
    948c:	48 01 d0             	add    rax,rdx
    948f:	48 c1 e0 03          	shl    rax,0x3
    9493:	48 01 d0             	add    rax,rdx
    9496:	48 c1 e0 04          	shl    rax,0x4
    949a:	48 8d 15 7f b0 0e 00 	lea    rdx,[rip+0xeb07f]        # f4520 <watchlist>
    94a1:	48 01 d0             	add    rax,rdx
    94a4:	48 89 c7             	mov    rdi,rax
    94a7:	e8 24 ff ff ff       	call   93d0 <ready_for_clean>
    94ac:	85 c0                	test   eax,eax
    94ae:	7e 2d                	jle    94dd <scan_for_clean+0x73>
    94b0:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    94b3:	48 63 d0             	movsxd rdx,eax
    94b6:	48 89 d0             	mov    rax,rdx
    94b9:	48 c1 e0 02          	shl    rax,0x2
    94bd:	48 01 d0             	add    rax,rdx
    94c0:	48 c1 e0 03          	shl    rax,0x3
    94c4:	48 01 d0             	add    rax,rdx
    94c7:	48 c1 e0 04          	shl    rax,0x4
    94cb:	48 8d 15 4e b0 0e 00 	lea    rdx,[rip+0xeb04e]        # f4520 <watchlist>
    94d2:	48 01 d0             	add    rax,rdx
    94d5:	48 89 c7             	mov    rdi,rax
    94d8:	e8 4f ff ff ff       	call   942c <clean>
    94dd:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    94e1:	8b 05 31 8b 00 00    	mov    eax,DWORD PTR [rip+0x8b31]        # 12018 <watchlist_num>
    94e7:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    94ea:	7e 93                	jle    947f <scan_for_clean+0x15>
    94ec:	90                   	nop
    94ed:	90                   	nop
    94ee:	c9                   	leave  
    94ef:	c3                   	ret    

00000000000094f0 <compare_entries>:
    94f0:	f3 0f 1e fa          	endbr64 
    94f4:	55                   	push   rbp
    94f5:	48 89 e5             	mov    rbp,rsp
    94f8:	48 83 ec 20          	sub    rsp,0x20
    94fc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9500:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    9504:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    950b:	e9 ac 00 00 00       	jmp    95bc <compare_entries+0xcc>
    9510:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9513:	48 63 d0             	movsxd rdx,eax
    9516:	48 89 d0             	mov    rax,rdx
    9519:	48 c1 e0 04          	shl    rax,0x4
    951d:	48 01 d0             	add    rax,rdx
    9520:	48 01 c0             	add    rax,rax
    9523:	48 8d 15 f6 f7 0f 00 	lea    rdx,[rip+0xff7f6]        # 108d20 <arpcache>
    952a:	48 01 c2             	add    rdx,rax
    952d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9531:	48 89 c6             	mov    rsi,rax
    9534:	48 89 d7             	mov    rdi,rdx
    9537:	e8 a3 01 00 00       	call   96df <compare_ip_entry>
    953c:	85 c0                	test   eax,eax
    953e:	74 78                	je     95b8 <compare_entries+0xc8>
    9540:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9543:	48 63 d0             	movsxd rdx,eax
    9546:	48 89 d0             	mov    rax,rdx
    9549:	48 c1 e0 04          	shl    rax,0x4
    954d:	48 01 d0             	add    rax,rdx
    9550:	48 01 c0             	add    rax,rax
    9553:	48 8d 50 10          	lea    rdx,[rax+0x10]
    9557:	48 8d 05 c2 f7 0f 00 	lea    rax,[rip+0xff7c2]        # 108d20 <arpcache>
    955e:	48 01 c2             	add    rdx,rax
    9561:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9565:	48 89 c6             	mov    rsi,rax
    9568:	48 89 d7             	mov    rdi,rdx
    956b:	e8 98 01 00 00       	call   9708 <compare_mac_entry>
    9570:	85 c0                	test   eax,eax
    9572:	75 44                	jne    95b8 <compare_entries+0xc8>
    9574:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9577:	48 63 d0             	movsxd rdx,eax
    957a:	48 89 d0             	mov    rax,rdx
    957d:	48 c1 e0 04          	shl    rax,0x4
    9581:	48 01 d0             	add    rax,rdx
    9584:	48 01 c0             	add    rax,rax
    9587:	48 8d 50 10          	lea    rdx,[rax+0x10]
    958b:	48 8d 05 8e f7 0f 00 	lea    rax,[rip+0xff78e]        # 108d20 <arpcache>
    9592:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    9596:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    959a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    959e:	48 89 d1             	mov    rcx,rdx
    95a1:	48 89 f2             	mov    rdx,rsi
    95a4:	48 89 c6             	mov    rsi,rax
    95a7:	48 8d 3d ca 53 00 00 	lea    rdi,[rip+0x53ca]        # e978 <_IO_stdin_used+0x1978>
    95ae:	b8 00 00 00 00       	mov    eax,0x0
    95b3:	e8 08 8f ff ff       	call   24c0 <printf@plt>
    95b8:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    95bc:	8b 05 5a 8a 00 00    	mov    eax,DWORD PTR [rip+0x8a5a]        # 1201c <arp_entries>
    95c2:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    95c5:	0f 8e 45 ff ff ff    	jle    9510 <compare_entries+0x20>
    95cb:	90                   	nop
    95cc:	90                   	nop
    95cd:	c9                   	leave  
    95ce:	c3                   	ret    

00000000000095cf <add_entry>:
    95cf:	f3 0f 1e fa          	endbr64 
    95d3:	55                   	push   rbp
    95d4:	48 89 e5             	mov    rbp,rsp
    95d7:	48 83 ec 20          	sub    rsp,0x20
    95db:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    95df:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    95e3:	8b 05 33 8a 00 00    	mov    eax,DWORD PTR [rip+0x8a33]        # 1201c <arp_entries>
    95e9:	83 c0 01             	add    eax,0x1
    95ec:	89 05 2a 8a 00 00    	mov    DWORD PTR [rip+0x8a2a],eax        # 1201c <arp_entries>
    95f2:	8b 05 24 8a 00 00    	mov    eax,DWORD PTR [rip+0x8a24]        # 1201c <arp_entries>
    95f8:	48 63 d0             	movsxd rdx,eax
    95fb:	48 89 d0             	mov    rax,rdx
    95fe:	48 c1 e0 04          	shl    rax,0x4
    9602:	48 01 d0             	add    rax,rdx
    9605:	48 01 c0             	add    rax,rax
    9608:	48 8d 15 11 f7 0f 00 	lea    rdx,[rip+0xff711]        # 108d20 <arpcache>
    960f:	48 01 d0             	add    rax,rdx
    9612:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9616:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    961a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    961e:	48 89 d6             	mov    rsi,rdx
    9621:	48 89 c7             	mov    rdi,rax
    9624:	e8 77 90 ff ff       	call   26a0 <strcpy@plt>
    9629:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    962d:	48 8d 50 10          	lea    rdx,[rax+0x10]
    9631:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9635:	48 89 c6             	mov    rsi,rax
    9638:	48 89 d7             	mov    rdi,rdx
    963b:	e8 60 90 ff ff       	call   26a0 <strcpy@plt>
    9640:	90                   	nop
    9641:	c9                   	leave  
    9642:	c3                   	ret    

0000000000009643 <entry_exists>:
    9643:	f3 0f 1e fa          	endbr64 
    9647:	55                   	push   rbp
    9648:	48 89 e5             	mov    rbp,rsp
    964b:	48 83 ec 20          	sub    rsp,0x20
    964f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9653:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    9657:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    965e:	eb 6d                	jmp    96cd <entry_exists+0x8a>
    9660:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9663:	48 63 d0             	movsxd rdx,eax
    9666:	48 89 d0             	mov    rax,rdx
    9669:	48 c1 e0 04          	shl    rax,0x4
    966d:	48 01 d0             	add    rax,rdx
    9670:	48 01 c0             	add    rax,rax
    9673:	48 8d 15 a6 f6 0f 00 	lea    rdx,[rip+0xff6a6]        # 108d20 <arpcache>
    967a:	48 01 c2             	add    rdx,rax
    967d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9681:	48 89 c6             	mov    rsi,rax
    9684:	48 89 d7             	mov    rdi,rdx
    9687:	e8 53 00 00 00       	call   96df <compare_ip_entry>
    968c:	85 c0                	test   eax,eax
    968e:	75 39                	jne    96c9 <entry_exists+0x86>
    9690:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9693:	48 63 d0             	movsxd rdx,eax
    9696:	48 89 d0             	mov    rax,rdx
    9699:	48 c1 e0 04          	shl    rax,0x4
    969d:	48 01 d0             	add    rax,rdx
    96a0:	48 01 c0             	add    rax,rax
    96a3:	48 8d 50 10          	lea    rdx,[rax+0x10]
    96a7:	48 8d 05 72 f6 0f 00 	lea    rax,[rip+0xff672]        # 108d20 <arpcache>
    96ae:	48 01 c2             	add    rdx,rax
    96b1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    96b5:	48 89 c6             	mov    rsi,rax
    96b8:	48 89 d7             	mov    rdi,rdx
    96bb:	e8 48 00 00 00       	call   9708 <compare_mac_entry>
    96c0:	85 c0                	test   eax,eax
    96c2:	75 05                	jne    96c9 <entry_exists+0x86>
    96c4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    96c7:	eb 14                	jmp    96dd <entry_exists+0x9a>
    96c9:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    96cd:	8b 05 49 89 00 00    	mov    eax,DWORD PTR [rip+0x8949]        # 1201c <arp_entries>
    96d3:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    96d6:	7e 88                	jle    9660 <entry_exists+0x1d>
    96d8:	b8 ff ff ff ff       	mov    eax,0xffffffff
    96dd:	c9                   	leave  
    96de:	c3                   	ret    

00000000000096df <compare_ip_entry>:
    96df:	f3 0f 1e fa          	endbr64 
    96e3:	55                   	push   rbp
    96e4:	48 89 e5             	mov    rbp,rsp
    96e7:	48 83 ec 10          	sub    rsp,0x10
    96eb:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    96ef:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    96f3:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    96f7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    96fb:	48 89 d6             	mov    rsi,rdx
    96fe:	48 89 c7             	mov    rdi,rax
    9701:	e8 da 90 ff ff       	call   27e0 <strcmp@plt>
    9706:	c9                   	leave  
    9707:	c3                   	ret    

0000000000009708 <compare_mac_entry>:
    9708:	f3 0f 1e fa          	endbr64 
    970c:	55                   	push   rbp
    970d:	48 89 e5             	mov    rbp,rsp
    9710:	48 83 ec 10          	sub    rsp,0x10
    9714:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9718:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    971c:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    9720:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9724:	48 89 d6             	mov    rsi,rdx
    9727:	48 89 c7             	mov    rdi,rax
    972a:	e8 b1 90 ff ff       	call   27e0 <strcmp@plt>
    972f:	c9                   	leave  
    9730:	c3                   	ret    

0000000000009731 <load_csv_arp_cache>:
    9731:	f3 0f 1e fa          	endbr64 
    9735:	55                   	push   rbp
    9736:	48 89 e5             	mov    rbp,rsp
    9739:	53                   	push   rbx
    973a:	48 83 ec 68          	sub    rsp,0x68
    973e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9745:	00 00 
    9747:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    974b:	31 c0                	xor    eax,eax
    974d:	48 8d 35 5a 52 00 00 	lea    rsi,[rip+0x525a]        # e9ae <_IO_stdin_used+0x19ae>
    9754:	48 8d 3d 55 52 00 00 	lea    rdi,[rip+0x5255]        # e9b0 <_IO_stdin_used+0x19b0>
    975b:	e8 b0 8f ff ff       	call   2710 <fopen@plt>
    9760:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    9764:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    9769:	75 22                	jne    978d <load_csv_arp_cache+0x5c>
    976b:	48 8d 3d 5e 52 00 00 	lea    rdi,[rip+0x525e]        # e9d0 <_IO_stdin_used+0x19d0>
    9772:	e8 e9 90 ff ff       	call   2860 <puts@plt>
    9777:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    977b:	48 89 c7             	mov    rdi,rax
    977e:	e8 3d 8f ff ff       	call   26c0 <fclose@plt>
    9783:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9788:	e9 dd 00 00 00       	jmp    986a <load_csv_arp_cache+0x139>
    978d:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    9794:	00 
    9795:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    979c:	00 
    979d:	eb 7c                	jmp    981b <load_csv_arp_cache+0xea>
    979f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    97a3:	48 85 c0             	test   rax,rax
    97a6:	0f 84 97 00 00 00    	je     9843 <load_csv_arp_cache+0x112>
    97ac:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    97b0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    97b4:	48 8d 35 4e 52 00 00 	lea    rsi,[rip+0x524e]        # ea09 <_IO_stdin_used+0x1a09>
    97bb:	48 89 c7             	mov    rdi,rax
    97be:	e8 1d 8d ff ff       	call   24e0 <strcspn@plt>
    97c3:	48 01 d8             	add    rax,rbx
    97c6:	c6 00 00             	mov    BYTE PTR [rax],0x0
    97c9:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    97cd:	48 8d 35 37 52 00 00 	lea    rsi,[rip+0x5237]        # ea0b <_IO_stdin_used+0x1a0b>
    97d4:	48 89 c7             	mov    rdi,rax
    97d7:	e8 a4 90 ff ff       	call   2880 <strtok@plt>
    97dc:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    97e0:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    97e4:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    97e8:	48 89 d6             	mov    rsi,rdx
    97eb:	48 89 c7             	mov    rdi,rax
    97ee:	e8 ad 8e ff ff       	call   26a0 <strcpy@plt>
    97f3:	48 8d 35 11 52 00 00 	lea    rsi,[rip+0x5211]        # ea0b <_IO_stdin_used+0x1a0b>
    97fa:	bf 00 00 00 00       	mov    edi,0x0
    97ff:	e8 7c 90 ff ff       	call   2880 <strtok@plt>
    9804:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    9808:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    980c:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    9810:	48 89 d6             	mov    rsi,rdx
    9813:	48 89 c7             	mov    rdi,rax
    9816:	e8 85 8e ff ff       	call   26a0 <strcpy@plt>
    981b:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    981f:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    9823:	48 8d 45 98          	lea    rax,[rbp-0x68]
    9827:	48 89 ce             	mov    rsi,rcx
    982a:	48 89 c7             	mov    rdi,rax
    982d:	e8 3e 8f ff ff       	call   2770 <getline@plt>
    9832:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9836:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    983b:	0f 85 5e ff ff ff    	jne    979f <load_csv_arp_cache+0x6e>
    9841:	eb 01                	jmp    9844 <load_csv_arp_cache+0x113>
    9843:	90                   	nop
    9844:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    9848:	48 85 c0             	test   rax,rax
    984b:	74 0c                	je     9859 <load_csv_arp_cache+0x128>
    984d:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    9851:	48 89 c7             	mov    rdi,rax
    9854:	e8 d7 8e ff ff       	call   2730 <free@plt>
    9859:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    985d:	48 89 c7             	mov    rdi,rax
    9860:	e8 5b 8e ff ff       	call   26c0 <fclose@plt>
    9865:	b8 01 00 00 00       	mov    eax,0x1
    986a:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    986e:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    9875:	00 00 
    9877:	74 05                	je     987e <load_csv_arp_cache+0x14d>
    9879:	e8 52 8e ff ff       	call   26d0 <__stack_chk_fail@plt>
    987e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    9882:	c9                   	leave  
    9883:	c3                   	ret    

0000000000009884 <callback>:
    9884:	f3 0f 1e fa          	endbr64 
    9888:	55                   	push   rbp
    9889:	48 89 e5             	mov    rbp,rsp
    988c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9890:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    9893:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    9897:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    989b:	b8 00 00 00 00       	mov    eax,0x0
    98a0:	5d                   	pop    rbp
    98a1:	c3                   	ret    

00000000000098a2 <update_db>:
    98a2:	f3 0f 1e fa          	endbr64 
    98a6:	55                   	push   rbp
    98a7:	48 89 e5             	mov    rbp,rsp
    98aa:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    98b1:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    98b8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    98bf:	00 00 
    98c1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    98c5:	31 c0                	xor    eax,eax
    98c7:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    98ce:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    98d5:	48 8d 3d 34 51 00 00 	lea    rdi,[rip+0x5134]        # ea10 <_IO_stdin_used+0x1a10>
    98dc:	e8 7f 8f ff ff       	call   2860 <puts@plt>
    98e1:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    98e8:	00 00 00 00 
    98ec:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    98f3:	48 89 c6             	mov    rsi,rax
    98f6:	48 8d 3d 43 16 10 00 	lea    rdi,[rip+0x101643]        # 10af40 <sqlite_db_path>
    98fd:	e8 be 8f ff ff       	call   28c0 <sqlite3_open@plt>
    9902:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    9908:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    990f:	74 28                	je     9939 <update_db+0x97>
    9911:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    9918:	48 89 c7             	mov    rdi,rax
    991b:	e8 90 8d ff ff       	call   26b0 <sqlite3_errmsg@plt>
    9920:	48 89 c6             	mov    rsi,rax
    9923:	48 8d 3d f2 50 00 00 	lea    rdi,[rip+0x50f2]        # ea1c <_IO_stdin_used+0x1a1c>
    992a:	b8 00 00 00 00       	mov    eax,0x0
    992f:	e8 8c 8b ff ff       	call   24c0 <printf@plt>
    9934:	e9 a2 00 00 00       	jmp    99db <update_db+0x139>
    9939:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    9940:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    9943:	85 c0                	test   eax,eax
    9945:	75 2e                	jne    9975 <update_db+0xd3>
    9947:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    994e:	48 8d 48 10          	lea    rcx,[rax+0x10]
    9952:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    9959:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    9960:	48 8d 35 c9 50 00 00 	lea    rsi,[rip+0x50c9]        # ea30 <_IO_stdin_used+0x1a30>
    9967:	48 89 c7             	mov    rdi,rax
    996a:	b8 00 00 00 00       	mov    eax,0x0
    996f:	e8 8c 8b ff ff       	call   2500 <sprintf@plt>
    9974:	90                   	nop
    9975:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    997c:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    9983:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    998a:	49 89 d0             	mov    r8,rdx
    998d:	b9 00 00 00 00       	mov    ecx,0x0
    9992:	ba 00 00 00 00       	mov    edx,0x0
    9997:	48 89 c7             	mov    rdi,rax
    999a:	e8 01 8e ff ff       	call   27a0 <sqlite3_exec@plt>
    999f:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    99a5:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    99ac:	74 2c                	je     99da <update_db+0x138>
    99ae:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    99b5:	48 89 c6             	mov    rsi,rax
    99b8:	48 8d 3d b6 50 00 00 	lea    rdi,[rip+0x50b6]        # ea75 <_IO_stdin_used+0x1a75>
    99bf:	b8 00 00 00 00       	mov    eax,0x0
    99c4:	e8 f7 8a ff ff       	call   24c0 <printf@plt>
    99c9:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    99d0:	48 89 c7             	mov    rdi,rax
    99d3:	e8 88 8d ff ff       	call   2760 <sqlite3_free@plt>
    99d8:	eb 01                	jmp    99db <update_db+0x139>
    99da:	90                   	nop
    99db:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    99e2:	48 89 c7             	mov    rdi,rax
    99e5:	e8 f6 8b ff ff       	call   25e0 <sqlite3_close@plt>
    99ea:	b8 01 00 00 00       	mov    eax,0x1
    99ef:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    99f3:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    99fa:	00 00 
    99fc:	74 05                	je     9a03 <update_db+0x161>
    99fe:	e8 cd 8c ff ff       	call   26d0 <__stack_chk_fail@plt>
    9a03:	c9                   	leave  
    9a04:	c3                   	ret    

0000000000009a05 <update_spi_db>:
    9a05:	f3 0f 1e fa          	endbr64 
    9a09:	55                   	push   rbp
    9a0a:	48 89 e5             	mov    rbp,rsp
    9a0d:	41 57                	push   r15
    9a0f:	41 56                	push   r14
    9a11:	41 55                	push   r13
    9a13:	41 54                	push   r12
    9a15:	53                   	push   rbx
    9a16:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    9a1d:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    9a24:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9a2b:	00 00 
    9a2d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9a31:	31 c0                	xor    eax,eax
    9a33:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    9a3a:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    9a41:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    9a48:	48 89 c6             	mov    rsi,rax
    9a4b:	48 8d 3d 41 50 00 00 	lea    rdi,[rip+0x5041]        # ea93 <_IO_stdin_used+0x1a93>
    9a52:	e8 69 8e ff ff       	call   28c0 <sqlite3_open@plt>
    9a57:	85 c0                	test   eax,eax
    9a59:	74 3c                	je     9a97 <update_spi_db+0x92>
    9a5b:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    9a62:	48 89 c7             	mov    rdi,rax
    9a65:	e8 46 8c ff ff       	call   26b0 <sqlite3_errmsg@plt>
    9a6a:	48 89 c6             	mov    rsi,rax
    9a6d:	48 8d 3d 37 50 00 00 	lea    rdi,[rip+0x5037]        # eaab <_IO_stdin_used+0x1aab>
    9a74:	b8 00 00 00 00       	mov    eax,0x0
    9a79:	e8 42 8a ff ff       	call   24c0 <printf@plt>
    9a7e:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    9a85:	48 89 c7             	mov    rdi,rax
    9a88:	e8 53 8b ff ff       	call   25e0 <sqlite3_close@plt>
    9a8d:	b8 00 00 00 00       	mov    eax,0x0
    9a92:	e9 59 01 00 00       	jmp    9bf0 <update_spi_db+0x1eb>
    9a97:	48 8d 05 22 50 00 00 	lea    rax,[rip+0x5022]        # eac0 <_IO_stdin_used+0x1ac0>
    9a9e:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    9aa5:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9aac:	8b 50 7c             	mov    edx,DWORD PTR [rax+0x7c]
    9aaf:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9ab6:	44 8b 78 78          	mov    r15d,DWORD PTR [rax+0x78]
    9aba:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9ac1:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    9ac8:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9acf:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    9ad6:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9add:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    9ae4:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9aeb:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    9af1:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9af8:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    9afc:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    9aff:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b06:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    9b0a:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b11:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    9b15:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    9b18:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b1f:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    9b23:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b2a:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    9b2d:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    9b33:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b3a:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    9b3d:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    9b43:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    9b4a:	48 8d 48 29          	lea    rcx,[rax+0x29]
    9b4e:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    9b55:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    9b5c:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    9b63:	52                   	push   rdx
    9b64:	41 57                	push   r15
    9b66:	41 56                	push   r14
    9b68:	41 55                	push   r13
    9b6a:	41 54                	push   r12
    9b6c:	53                   	push   rbx
    9b6d:	41 53                	push   r11
    9b6f:	41 52                	push   r10
    9b71:	41 51                	push   r9
    9b73:	41 50                	push   r8
    9b75:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    9b7c:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    9b83:	48 89 fa             	mov    rdx,rdi
    9b86:	48 89 c7             	mov    rdi,rax
    9b89:	b8 00 00 00 00       	mov    eax,0x0
    9b8e:	e8 6d 89 ff ff       	call   2500 <sprintf@plt>
    9b93:	48 83 c4 50          	add    rsp,0x50
    9b97:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    9b9e:	00 00 00 00 
    9ba2:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    9ba9:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    9bb0:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    9bb7:	49 89 d0             	mov    r8,rdx
    9bba:	b9 00 00 00 00       	mov    ecx,0x0
    9bbf:	ba 00 00 00 00       	mov    edx,0x0
    9bc4:	48 89 c7             	mov    rdi,rax
    9bc7:	e8 d4 8b ff ff       	call   27a0 <sqlite3_exec@plt>
    9bcc:	85 c0                	test   eax,eax
    9bce:	74 1b                	je     9beb <update_spi_db+0x1e6>
    9bd0:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    9bd7:	48 89 c6             	mov    rsi,rax
    9bda:	48 8d 3d cc 4f 00 00 	lea    rdi,[rip+0x4fcc]        # ebad <_IO_stdin_used+0x1bad>
    9be1:	b8 00 00 00 00       	mov    eax,0x0
    9be6:	e8 d5 88 ff ff       	call   24c0 <printf@plt>
    9beb:	b8 00 00 00 00       	mov    eax,0x0
    9bf0:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    9bf4:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    9bfb:	00 00 
    9bfd:	74 05                	je     9c04 <update_spi_db+0x1ff>
    9bff:	e8 cc 8a ff ff       	call   26d0 <__stack_chk_fail@plt>
    9c04:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    9c08:	5b                   	pop    rbx
    9c09:	41 5c                	pop    r12
    9c0b:	41 5d                	pop    r13
    9c0d:	41 5e                	pop    r14
    9c0f:	41 5f                	pop    r15
    9c11:	5d                   	pop    rbp
    9c12:	c3                   	ret    

0000000000009c13 <http_disect>:
    9c13:	f3 0f 1e fa          	endbr64 
    9c17:	55                   	push   rbp
    9c18:	48 89 e5             	mov    rbp,rsp
    9c1b:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    9c22:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    9c29:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    9c30:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9c37:	00 00 
    9c39:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9c3d:	31 c0                	xor    eax,eax
    9c3f:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    9c46:	be 0d 00 00 00       	mov    esi,0xd
    9c4b:	48 89 c7             	mov    rdi,rax
    9c4e:	e8 27 99 ff ff       	call   357a <strloc>
    9c53:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    9c59:	48 8d 3d 6b 4f 00 00 	lea    rdi,[rip+0x4f6b]        # ebcb <_IO_stdin_used+0x1bcb>
    9c60:	e8 fb 8b ff ff       	call   2860 <puts@plt>
    9c65:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    9c6c:	48 89 c7             	mov    rdi,rax
    9c6f:	e8 ad 99 ff ff       	call   3621 <test_string_arr_print>
    9c74:	83 f0 01             	xor    eax,0x1
    9c77:	84 c0                	test   al,al
    9c79:	75 33                	jne    9cae <http_disect+0x9b>
    9c7b:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    9c81:	48 63 d0             	movsxd rdx,eax
    9c84:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    9c8b:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    9c92:	48 89 ce             	mov    rsi,rcx
    9c95:	48 89 c7             	mov    rdi,rax
    9c98:	e8 53 89 ff ff       	call   25f0 <strncpy@plt>
    9c9d:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    9ca4:	48 89 c7             	mov    rdi,rax
    9ca7:	e8 b4 8b ff ff       	call   2860 <puts@plt>
    9cac:	eb 01                	jmp    9caf <http_disect+0x9c>
    9cae:	90                   	nop
    9caf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9cb3:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9cba:	00 00 
    9cbc:	74 05                	je     9cc3 <http_disect+0xb0>
    9cbe:	e8 0d 8a ff ff       	call   26d0 <__stack_chk_fail@plt>
    9cc3:	c9                   	leave  
    9cc4:	c3                   	ret    

0000000000009cc5 <dns_disect>:
    9cc5:	f3 0f 1e fa          	endbr64 
    9cc9:	55                   	push   rbp
    9cca:	48 89 e5             	mov    rbp,rsp
    9ccd:	48 83 ec 30          	sub    rsp,0x30
    9cd1:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9cd5:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    9cd9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9cdd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    9ce1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9ce5:	48 83 c0 0c          	add    rax,0xc
    9ce9:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    9ced:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9cf1:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    9cf5:	66 85 c0             	test   ax,ax
    9cf8:	75 6d                	jne    9d67 <dns_disect+0xa2>
    9cfa:	bf 00 04 00 00       	mov    edi,0x400
    9cff:	e8 8c 8a ff ff       	call   2790 <malloc@plt>
    9d04:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9d08:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9d0c:	ba 08 00 00 00       	mov    edx,0x8
    9d11:	be 00 00 00 00       	mov    esi,0x0
    9d16:	48 89 c7             	mov    rdi,rax
    9d19:	e8 f2 88 ff ff       	call   2610 <memset@plt>
    9d1e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9d22:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9d26:	48 89 d6             	mov    rsi,rdx
    9d29:	48 89 c7             	mov    rdi,rax
    9d2c:	e8 39 00 00 00       	call   9d6a <get_dns_name>
    9d31:	0f b6 05 2c 12 10 00 	movzx  eax,BYTE PTR [rip+0x10122c]        # 10af64 <packet_print>
    9d38:	84 c0                	test   al,al
    9d3a:	74 18                	je     9d54 <dns_disect+0x8f>
    9d3c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9d40:	48 89 c6             	mov    rsi,rax
    9d43:	48 8d 3d 93 4e 00 00 	lea    rdi,[rip+0x4e93]        # ebdd <_IO_stdin_used+0x1bdd>
    9d4a:	b8 00 00 00 00       	mov    eax,0x0
    9d4f:	e8 6c 87 ff ff       	call   24c0 <printf@plt>
    9d54:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    9d59:	74 0c                	je     9d67 <dns_disect+0xa2>
    9d5b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9d5f:	48 89 c7             	mov    rdi,rax
    9d62:	e8 c9 89 ff ff       	call   2730 <free@plt>
    9d67:	90                   	nop
    9d68:	c9                   	leave  
    9d69:	c3                   	ret    

0000000000009d6a <get_dns_name>:
    9d6a:	f3 0f 1e fa          	endbr64 
    9d6e:	55                   	push   rbp
    9d6f:	48 89 e5             	mov    rbp,rsp
    9d72:	53                   	push   rbx
    9d73:	48 83 ec 28          	sub    rsp,0x28
    9d77:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    9d7b:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    9d7f:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    9d86:	eb 57                	jmp    9ddf <get_dns_name+0x75>
    9d88:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9d8b:	48 63 d0             	movsxd rdx,eax
    9d8e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9d92:	48 01 d0             	add    rax,rdx
    9d95:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9d98:	3c 20                	cmp    al,0x20
    9d9a:	7e 24                	jle    9dc0 <get_dns_name+0x56>
    9d9c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9d9f:	48 63 d0             	movsxd rdx,eax
    9da2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9da6:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    9daa:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9dae:	ba 01 00 00 00       	mov    edx,0x1
    9db3:	48 89 ce             	mov    rsi,rcx
    9db6:	48 89 c7             	mov    rdi,rax
    9db9:	e8 62 88 ff ff       	call   2620 <strncat@plt>
    9dbe:	eb 1b                	jmp    9ddb <get_dns_name+0x71>
    9dc0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9dc4:	48 89 c7             	mov    rdi,rax
    9dc7:	e8 d4 87 ff ff       	call   25a0 <strlen@plt>
    9dcc:	48 89 c2             	mov    rdx,rax
    9dcf:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9dd3:	48 01 d0             	add    rax,rdx
    9dd6:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    9ddb:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    9ddf:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9de2:	48 63 d8             	movsxd rbx,eax
    9de5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9de9:	48 89 c7             	mov    rdi,rax
    9dec:	e8 af 87 ff ff       	call   25a0 <strlen@plt>
    9df1:	48 39 c3             	cmp    rbx,rax
    9df4:	72 92                	jb     9d88 <get_dns_name+0x1e>
    9df6:	90                   	nop
    9df7:	90                   	nop
    9df8:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    9dfc:	c9                   	leave  
    9dfd:	c3                   	ret    

0000000000009dfe <ftp_disect>:
    9dfe:	f3 0f 1e fa          	endbr64 
    9e02:	55                   	push   rbp
    9e03:	48 89 e5             	mov    rbp,rsp
    9e06:	48 83 ec 20          	sub    rsp,0x20
    9e0a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9e0e:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    9e12:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9e16:	48 8d 35 cb 4d 00 00 	lea    rsi,[rip+0x4dcb]        # ebe8 <_IO_stdin_used+0x1be8>
    9e1d:	48 89 c7             	mov    rdi,rax
    9e20:	e8 eb 86 ff ff       	call   2510 <strstr@plt>
    9e25:	48 85 c0             	test   rax,rax
    9e28:	75 1c                	jne    9e46 <ftp_disect+0x48>
    9e2a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9e2e:	48 8d 35 c3 4d 00 00 	lea    rsi,[rip+0x4dc3]        # ebf8 <_IO_stdin_used+0x1bf8>
    9e35:	48 89 c7             	mov    rdi,rax
    9e38:	e8 d3 86 ff ff       	call   2510 <strstr@plt>
    9e3d:	48 85 c0             	test   rax,rax
    9e40:	0f 84 8a 00 00 00    	je     9ed0 <ftp_disect+0xd2>
    9e46:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9e4a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    9e4e:	48 89 c7             	mov    rdi,rax
    9e51:	e8 f7 f3 ff ff       	call   924d <member_exists>
    9e56:	48 63 d0             	movsxd rdx,eax
    9e59:	48 89 d0             	mov    rax,rdx
    9e5c:	48 c1 e0 02          	shl    rax,0x2
    9e60:	48 01 d0             	add    rax,rdx
    9e63:	48 c1 e0 03          	shl    rax,0x3
    9e67:	48 01 d0             	add    rax,rdx
    9e6a:	48 c1 e0 04          	shl    rax,0x4
    9e6e:	48 8d 15 ab a6 0e 00 	lea    rdx,[rip+0xea6ab]        # f4520 <watchlist>
    9e75:	48 01 d0             	add    rax,rdx
    9e78:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9e7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9e80:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    9e86:	8d 50 01             	lea    edx,[rax+0x1]
    9e89:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9e8d:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    9e93:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9e97:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    9e9d:	83 f8 04             	cmp    eax,0x4
    9ea0:	7e 2e                	jle    9ed0 <ftp_disect+0xd2>
    9ea2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9ea6:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    9eac:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9eb0:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9eb4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    9eb8:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    9ebc:	48 89 c6             	mov    rsi,rax
    9ebf:	48 8d 3d 42 4d 00 00 	lea    rdi,[rip+0x4d42]        # ec08 <_IO_stdin_used+0x1c08>
    9ec6:	b8 00 00 00 00       	mov    eax,0x0
    9ecb:	e8 f0 85 ff ff       	call   24c0 <printf@plt>
    9ed0:	90                   	nop
    9ed1:	c9                   	leave  
    9ed2:	c3                   	ret    

0000000000009ed3 <livedebug>:
    9ed3:	f3 0f 1e fa          	endbr64 
    9ed7:	55                   	push   rbp
    9ed8:	48 89 e5             	mov    rbp,rsp
    9edb:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    9ee2:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    9ee9:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    9ef0:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    9ef7:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    9efe:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    9f05:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    9f0c:	84 c0                	test   al,al
    9f0e:	74 20                	je     9f30 <livedebug+0x5d>
    9f10:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    9f14:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    9f18:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    9f1c:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    9f20:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    9f24:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    9f28:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    9f2c:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    9f30:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9f37:	00 00 
    9f39:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    9f40:	31 c0                	xor    eax,eax
    9f42:	0f b6 05 d7 0f 10 00 	movzx  eax,BYTE PTR [rip+0x100fd7]        # 10af20 <debug_mode>
    9f49:	84 c0                	test   al,al
    9f4b:	74 4b                	je     9f98 <livedebug+0xc5>
    9f4d:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    9f54:	00 00 00 
    9f57:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    9f5e:	00 00 00 
    9f61:	48 8d 45 10          	lea    rax,[rbp+0x10]
    9f65:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    9f6c:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    9f73:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    9f7a:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    9f81:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    9f88:	48 89 d6             	mov    rsi,rdx
    9f8b:	48 89 c7             	mov    rdi,rax
    9f8e:	b8 00 00 00 00       	mov    eax,0x0
    9f93:	e8 28 85 ff ff       	call   24c0 <printf@plt>
    9f98:	90                   	nop
    9f99:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    9fa0:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9fa7:	00 00 
    9fa9:	74 05                	je     9fb0 <livedebug+0xdd>
    9fab:	e8 20 87 ff ff       	call   26d0 <__stack_chk_fail@plt>
    9fb0:	c9                   	leave  
    9fb1:	c3                   	ret    

0000000000009fb2 <forward_packet>:
    9fb2:	f3 0f 1e fa          	endbr64 
    9fb6:	55                   	push   rbp
    9fb7:	48 89 e5             	mov    rbp,rsp
    9fba:	48 83 ec 20          	sub    rsp,0x20
    9fbe:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9fc2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9fc6:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    9fca:	48 8d 35 cf ef 12 00 	lea    rsi,[rip+0x12efcf]        # 138fa0 <local_ip>
    9fd1:	48 89 c7             	mov    rdi,rax
    9fd4:	e8 07 88 ff ff       	call   27e0 <strcmp@plt>
    9fd9:	85 c0                	test   eax,eax
    9fdb:	74 4f                	je     a02c <forward_packet+0x7a>
    9fdd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9fe1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    9fe5:	48 8d 35 b4 ef 12 00 	lea    rsi,[rip+0x12efb4]        # 138fa0 <local_ip>
    9fec:	48 89 c7             	mov    rdi,rax
    9fef:	e8 ec 87 ff ff       	call   27e0 <strcmp@plt>
    9ff4:	85 c0                	test   eax,eax
    9ff6:	74 34                	je     a02c <forward_packet+0x7a>
    9ff8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9ffc:	48 8b 00             	mov    rax,QWORD PTR [rax]
    9fff:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    a003:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a007:	48 89 d6             	mov    rsi,rdx
    a00a:	48 89 c7             	mov    rdi,rax
    a00d:	e8 8e 86 ff ff       	call   26a0 <strcpy@plt>
    a012:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a016:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    a019:	83 e8 0e             	sub    eax,0xe
    a01c:	89 c2                	mov    edx,eax
    a01e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a022:	89 d6                	mov    esi,edx
    a024:	48 89 c7             	mov    rdi,rax
    a027:	e8 85 b3 ff ff       	call   53b1 <ascii_hexdump>
    a02c:	90                   	nop
    a02d:	c9                   	leave  
    a02e:	c3                   	ret    

000000000000a02f <conversation_exists>:
    a02f:	f3 0f 1e fa          	endbr64 
    a033:	55                   	push   rbp
    a034:	48 89 e5             	mov    rbp,rsp
    a037:	48 83 ec 20          	sub    rsp,0x20
    a03b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a03f:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    a046:	e9 ff 00 00 00       	jmp    a14a <conversation_exists+0x11b>
    a04b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a04e:	48 98                	cdqe   
    a050:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a057:	48 8d 15 22 0f 10 00 	lea    rdx,[rip+0x100f22]        # 10af80 <spi_table>
    a05e:	48 01 d0             	add    rax,rdx
    a061:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a065:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a069:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    a070:	84 c0                	test   al,al
    a072:	0f 84 ce 00 00 00    	je     a146 <conversation_exists+0x117>
    a078:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a07c:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    a07f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a083:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    a086:	39 c2                	cmp    edx,eax
    a088:	75 58                	jne    a0e2 <conversation_exists+0xb3>
    a08a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a08e:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    a091:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a095:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    a098:	39 c2                	cmp    edx,eax
    a09a:	75 46                	jne    a0e2 <conversation_exists+0xb3>
    a09c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a0a0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a0a4:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a0a8:	48 89 d6             	mov    rsi,rdx
    a0ab:	48 89 c7             	mov    rdi,rax
    a0ae:	e8 2d 87 ff ff       	call   27e0 <strcmp@plt>
    a0b3:	85 c0                	test   eax,eax
    a0b5:	0f 85 8a 00 00 00    	jne    a145 <conversation_exists+0x116>
    a0bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a0bf:	48 8d 50 29          	lea    rdx,[rax+0x29]
    a0c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a0c7:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    a0cb:	48 89 d6             	mov    rsi,rdx
    a0ce:	48 89 c7             	mov    rdi,rax
    a0d1:	e8 0a 87 ff ff       	call   27e0 <strcmp@plt>
    a0d6:	85 c0                	test   eax,eax
    a0d8:	75 6b                	jne    a145 <conversation_exists+0x116>
    a0da:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a0dd:	e9 81 00 00 00       	jmp    a163 <conversation_exists+0x134>
    a0e2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a0e6:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    a0e9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a0ed:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    a0f0:	39 c2                	cmp    edx,eax
    a0f2:	75 52                	jne    a146 <conversation_exists+0x117>
    a0f4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a0f8:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    a0fb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a0ff:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    a102:	39 c2                	cmp    edx,eax
    a104:	75 40                	jne    a146 <conversation_exists+0x117>
    a106:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a10a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a10e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    a112:	48 89 d6             	mov    rsi,rdx
    a115:	48 89 c7             	mov    rdi,rax
    a118:	e8 c3 86 ff ff       	call   27e0 <strcmp@plt>
    a11d:	85 c0                	test   eax,eax
    a11f:	75 25                	jne    a146 <conversation_exists+0x117>
    a121:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a125:	48 8d 50 29          	lea    rdx,[rax+0x29]
    a129:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a12d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a131:	48 89 d6             	mov    rsi,rdx
    a134:	48 89 c7             	mov    rdi,rax
    a137:	e8 a4 86 ff ff       	call   27e0 <strcmp@plt>
    a13c:	85 c0                	test   eax,eax
    a13e:	75 06                	jne    a146 <conversation_exists+0x117>
    a140:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a143:	eb 1e                	jmp    a163 <conversation_exists+0x134>
    a145:	90                   	nop
    a146:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    a14a:	8b 05 d4 7e 00 00    	mov    eax,DWORD PTR [rip+0x7ed4]        # 12024 <total_conversations>
    a150:	8d 50 01             	lea    edx,[rax+0x1]
    a153:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a156:	39 c2                	cmp    edx,eax
    a158:	0f 87 ed fe ff ff    	ja     a04b <conversation_exists+0x1c>
    a15e:	b8 ff ff ff ff       	mov    eax,0xffffffff
    a163:	c9                   	leave  
    a164:	c3                   	ret    

000000000000a165 <get_new_spi_location>:
    a165:	f3 0f 1e fa          	endbr64 
    a169:	55                   	push   rbp
    a16a:	48 89 e5             	mov    rbp,rsp
    a16d:	8b 05 b1 7e 00 00    	mov    eax,DWORD PTR [rip+0x7eb1]        # 12024 <total_conversations>
    a173:	83 f8 ff             	cmp    eax,0xffffffff
    a176:	75 17                	jne    a18f <get_new_spi_location+0x2a>
    a178:	8b 05 a6 7e 00 00    	mov    eax,DWORD PTR [rip+0x7ea6]        # 12024 <total_conversations>
    a17e:	83 c0 01             	add    eax,0x1
    a181:	89 05 9d 7e 00 00    	mov    DWORD PTR [rip+0x7e9d],eax        # 12024 <total_conversations>
    a187:	8b 05 97 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e97]        # 12024 <total_conversations>
    a18d:	eb 52                	jmp    a1e1 <get_new_spi_location+0x7c>
    a18f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    a196:	eb 27                	jmp    a1bf <get_new_spi_location+0x5a>
    a198:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a19b:	48 98                	cdqe   
    a19d:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a1a4:	48 8d 15 85 0e 10 00 	lea    rdx,[rip+0x100e85]        # 10b030 <spi_table+0xb0>
    a1ab:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    a1af:	83 f0 01             	xor    eax,0x1
    a1b2:	84 c0                	test   al,al
    a1b4:	74 05                	je     a1bb <get_new_spi_location+0x56>
    a1b6:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a1b9:	eb 26                	jmp    a1e1 <get_new_spi_location+0x7c>
    a1bb:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    a1bf:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    a1c2:	8b 05 5c 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e5c]        # 12024 <total_conversations>
    a1c8:	39 c2                	cmp    edx,eax
    a1ca:	72 cc                	jb     a198 <get_new_spi_location+0x33>
    a1cc:	8b 05 52 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e52]        # 12024 <total_conversations>
    a1d2:	83 c0 01             	add    eax,0x1
    a1d5:	89 05 49 7e 00 00    	mov    DWORD PTR [rip+0x7e49],eax        # 12024 <total_conversations>
    a1db:	8b 05 43 7e 00 00    	mov    eax,DWORD PTR [rip+0x7e43]        # 12024 <total_conversations>
    a1e1:	5d                   	pop    rbp
    a1e2:	c3                   	ret    

000000000000a1e3 <add_new_conversation>:
    a1e3:	f3 0f 1e fa          	endbr64 
    a1e7:	55                   	push   rbp
    a1e8:	48 89 e5             	mov    rbp,rsp
    a1eb:	48 83 ec 20          	sub    rsp,0x20
    a1ef:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a1f3:	0f b6 05 d8 ed 12 00 	movzx  eax,BYTE PTR [rip+0x12edd8]        # 138fd2 <use_spi>
    a1fa:	84 c0                	test   al,al
    a1fc:	0f 84 08 02 00 00    	je     a40a <add_new_conversation+0x227>
    a202:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a206:	48 89 c7             	mov    rdi,rax
    a209:	e8 21 fe ff ff       	call   a02f <conversation_exists>
    a20e:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a211:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    a215:	0f 84 82 00 00 00    	je     a29d <add_new_conversation+0xba>
    a21b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a21e:	48 98                	cdqe   
    a220:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a227:	48 8d 15 52 0d 10 00 	lea    rdx,[rip+0x100d52]        # 10af80 <spi_table>
    a22e:	48 01 d0             	add    rax,rdx
    a231:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a235:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a239:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    a23f:	8d 50 01             	lea    edx,[rax+0x1]
    a242:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a246:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    a24c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a250:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a253:	8d 50 01             	lea    edx,[rax+0x1]
    a256:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a25a:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a25d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a261:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    a264:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a268:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a26c:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    a26f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a273:	48 8d 70 29          	lea    rsi,[rax+0x29]
    a277:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a27a:	41 89 f9             	mov    r9d,edi
    a27d:	49 89 c8             	mov    r8,rcx
    a280:	89 d1                	mov    ecx,edx
    a282:	48 89 f2             	mov    rdx,rsi
    a285:	89 c6                	mov    esi,eax
    a287:	48 8d 3d c2 49 00 00 	lea    rdi,[rip+0x49c2]        # ec50 <_IO_stdin_used+0x1c50>
    a28e:	b8 00 00 00 00       	mov    eax,0x0
    a293:	e8 28 82 ff ff       	call   24c0 <printf@plt>
    a298:	e9 6d 01 00 00       	jmp    a40a <add_new_conversation+0x227>
    a29d:	b8 00 00 00 00       	mov    eax,0x0
    a2a2:	e8 be fe ff ff       	call   a165 <get_new_spi_location>
    a2a7:	48 98                	cdqe   
    a2a9:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a2b0:	48 8d 15 c9 0c 10 00 	lea    rdx,[rip+0x100cc9]        # 10af80 <spi_table>
    a2b7:	48 01 d0             	add    rax,rdx
    a2ba:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a2be:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a2c2:	ba 08 00 00 00       	mov    edx,0x8
    a2c7:	be 00 00 00 00       	mov    esi,0x0
    a2cc:	48 89 c7             	mov    rdi,rax
    a2cf:	e8 3c 83 ff ff       	call   2610 <memset@plt>
    a2d4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a2d8:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    a2df:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a2e3:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a2e7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a2eb:	48 83 c2 29          	add    rdx,0x29
    a2ef:	48 89 c6             	mov    rsi,rax
    a2f2:	48 89 d7             	mov    rdi,rdx
    a2f5:	e8 a6 83 ff ff       	call   26a0 <strcpy@plt>
    a2fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a2fe:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    a302:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a306:	48 89 d6             	mov    rsi,rdx
    a309:	48 89 c7             	mov    rdi,rax
    a30c:	e8 8f 83 ff ff       	call   26a0 <strcpy@plt>
    a311:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a315:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    a318:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a31c:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    a31f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a323:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    a326:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a32a:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    a32d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a331:	c7 40 78 00 00 00 00 	mov    DWORD PTR [rax+0x78],0x0
    a338:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a33c:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    a340:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a344:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    a348:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a34c:	48 8d 50 60          	lea    rdx,[rax+0x60]
    a350:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a354:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    a358:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a35c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a360:	48 89 d6             	mov    rsi,rdx
    a363:	48 89 c7             	mov    rdi,rax
    a366:	e8 73 04 00 00       	call   a7de <increment_stats>
    a36b:	bf 00 00 00 00       	mov    edi,0x0
    a370:	e8 1b 83 ff ff       	call   2690 <time@plt>
    a375:	48 89 c2             	mov    rdx,rax
    a378:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a37c:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    a383:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a387:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    a38e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a392:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a395:	8d 50 01             	lea    edx,[rax+0x1]
    a398:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a39c:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a39f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a3a3:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    a3a6:	89 c2                	mov    edx,eax
    a3a8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3ac:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    a3b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3b6:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    a3b9:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    a3bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3c1:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    a3c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a3c8:	48 8d 70 29          	lea    rsi,[rax+0x29]
    a3cc:	8b 05 52 7c 00 00    	mov    eax,DWORD PTR [rip+0x7c52]        # 12024 <total_conversations>
    a3d2:	41 89 f9             	mov    r9d,edi
    a3d5:	49 89 c8             	mov    r8,rcx
    a3d8:	89 d1                	mov    ecx,edx
    a3da:	48 89 f2             	mov    rdx,rsi
    a3dd:	89 c6                	mov    esi,eax
    a3df:	48 8d 3d 92 48 00 00 	lea    rdi,[rip+0x4892]        # ec78 <_IO_stdin_used+0x1c78>
    a3e6:	b8 00 00 00 00       	mov    eax,0x0
    a3eb:	e8 d0 80 ff ff       	call   24c0 <printf@plt>
    a3f0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a3f4:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    a3f7:	83 f8 7e             	cmp    eax,0x7e
    a3fa:	75 0e                	jne    a40a <add_new_conversation+0x227>
    a3fc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a400:	c7 80 88 00 00 00 f3 	mov    DWORD PTR [rax+0x88],0xf3
    a407:	00 00 00 
    a40a:	90                   	nop
    a40b:	c9                   	leave  
    a40c:	c3                   	ret    

000000000000a40d <spi_ud_thw>:
    a40d:	f3 0f 1e fa          	endbr64 
    a411:	55                   	push   rbp
    a412:	48 89 e5             	mov    rbp,rsp
    a415:	48 83 ec 20          	sub    rsp,0x20
    a419:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a41d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a421:	48 89 c7             	mov    rdi,rax
    a424:	e8 06 fc ff ff       	call   a02f <conversation_exists>
    a429:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a42c:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    a430:	0f 84 97 00 00 00    	je     a4cd <spi_ud_thw+0xc0>
    a436:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a439:	48 98                	cdqe   
    a43b:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a442:	48 8d 15 37 0b 10 00 	lea    rdx,[rip+0x100b37]        # 10af80 <spi_table>
    a449:	48 01 d0             	add    rax,rdx
    a44c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a450:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a454:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a457:	8d 50 01             	lea    edx,[rax+0x1]
    a45a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a45e:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a461:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a465:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a469:	48 89 d6             	mov    rsi,rdx
    a46c:	48 89 c7             	mov    rdi,rax
    a46f:	e8 6a 03 00 00       	call   a7de <increment_stats>
    a474:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a478:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a47b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a47f:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a483:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a487:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a48a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a48e:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a492:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a495:	41 89 f9             	mov    r9d,edi
    a498:	49 89 f0             	mov    r8,rsi
    a49b:	89 c6                	mov    esi,eax
    a49d:	48 8d 3d fc 47 00 00 	lea    rdi,[rip+0x47fc]        # eca0 <_IO_stdin_used+0x1ca0>
    a4a4:	b8 00 00 00 00       	mov    eax,0x0
    a4a9:	e8 12 80 ff ff       	call   24c0 <printf@plt>
    a4ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a4b2:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    a4b8:	3d f3 00 00 00       	cmp    eax,0xf3
    a4bd:	75 0e                	jne    a4cd <spi_ud_thw+0xc0>
    a4bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a4c3:	c7 80 88 00 00 00 f4 	mov    DWORD PTR [rax+0x88],0xf4
    a4ca:	00 00 00 
    a4cd:	90                   	nop
    a4ce:	c9                   	leave  
    a4cf:	c3                   	ret    

000000000000a4d0 <update_table>:
    a4d0:	f3 0f 1e fa          	endbr64 
    a4d4:	55                   	push   rbp
    a4d5:	48 89 e5             	mov    rbp,rsp
    a4d8:	48 83 ec 30          	sub    rsp,0x30
    a4dc:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    a4e0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a4e7:	00 00 
    a4e9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a4ed:	31 c0                	xor    eax,eax
    a4ef:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a4f3:	48 89 c7             	mov    rdi,rax
    a4f6:	e8 34 fb ff ff       	call   a02f <conversation_exists>
    a4fb:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    a4fe:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    a502:	0f 84 4c 01 00 00    	je     a654 <update_table+0x184>
    a508:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    a50b:	48 98                	cdqe   
    a50d:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a514:	48 8d 15 65 0a 10 00 	lea    rdx,[rip+0x100a65]        # 10af80 <spi_table>
    a51b:	48 01 d0             	add    rax,rdx
    a51e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    a522:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a526:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a529:	8d 50 01             	lea    edx,[rax+0x1]
    a52c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a530:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a533:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    a537:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a53b:	48 89 d6             	mov    rsi,rdx
    a53e:	48 89 c7             	mov    rdi,rax
    a541:	e8 98 02 00 00       	call   a7de <increment_stats>
    a546:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a54a:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    a550:	3d f4 00 00 00       	cmp    eax,0xf4
    a555:	75 4d                	jne    a5a4 <update_table+0xd4>
    a557:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a55b:	c7 80 88 00 00 00 f1 	mov    DWORD PTR [rax+0x88],0xf1
    a562:	00 00 00 
    a565:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a569:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a56c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a570:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a574:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a578:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a57b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a57f:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a583:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    a586:	41 89 f9             	mov    r9d,edi
    a589:	49 89 f0             	mov    r8,rsi
    a58c:	89 c6                	mov    esi,eax
    a58e:	48 8d 3d 33 47 00 00 	lea    rdi,[rip+0x4733]        # ecc8 <_IO_stdin_used+0x1cc8>
    a595:	b8 00 00 00 00       	mov    eax,0x0
    a59a:	e8 21 7f ff ff       	call   24c0 <printf@plt>
    a59f:	e9 b0 00 00 00       	jmp    a654 <update_table+0x184>
    a5a4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a5a8:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    a5ae:	3d f6 00 00 00       	cmp    eax,0xf6
    a5b3:	0f 85 9b 00 00 00    	jne    a654 <update_table+0x184>
    a5b9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a5bd:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a5c0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a5c4:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a5c8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a5cc:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a5cf:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a5d3:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a5d7:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    a5da:	41 89 f9             	mov    r9d,edi
    a5dd:	49 89 f0             	mov    r8,rsi
    a5e0:	89 c6                	mov    esi,eax
    a5e2:	48 8d 3d 0f 47 00 00 	lea    rdi,[rip+0x470f]        # ecf8 <_IO_stdin_used+0x1cf8>
    a5e9:	b8 00 00 00 00       	mov    eax,0x0
    a5ee:	e8 cd 7e ff ff       	call   24c0 <printf@plt>
    a5f3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a5f7:	c7 80 88 00 00 00 fa 	mov    DWORD PTR [rax+0x88],0xfa
    a5fe:	00 00 00 
    a601:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a605:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    a60c:	bf 00 00 00 00       	mov    edi,0x0
    a611:	e8 7a 80 ff ff       	call   2690 <time@plt>
    a616:	48 89 c2             	mov    rdx,rax
    a619:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a61d:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    a624:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    a628:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    a62c:	48 89 d1             	mov    rcx,rdx
    a62f:	48 8d 15 cf f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3cf]        # 9a05 <update_spi_db>
    a636:	be 00 00 00 00       	mov    esi,0x0
    a63b:	48 89 c7             	mov    rdi,rax
    a63e:	e8 ad 82 ff ff       	call   28f0 <pthread_create@plt>
    a643:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a647:	be 00 00 00 00       	mov    esi,0x0
    a64c:	48 89 c7             	mov    rdi,rax
    a64f:	e8 2c 80 ff ff       	call   2680 <pthread_join@plt>
    a654:	90                   	nop
    a655:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a659:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a660:	00 00 
    a662:	74 05                	je     a669 <update_table+0x199>
    a664:	e8 67 80 ff ff       	call   26d0 <__stack_chk_fail@plt>
    a669:	c9                   	leave  
    a66a:	c3                   	ret    

000000000000a66b <polite_end>:
    a66b:	f3 0f 1e fa          	endbr64 
    a66f:	55                   	push   rbp
    a670:	48 89 e5             	mov    rbp,rsp
    a673:	48 83 ec 20          	sub    rsp,0x20
    a677:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a67b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a67f:	48 89 c7             	mov    rdi,rax
    a682:	e8 a8 f9 ff ff       	call   a02f <conversation_exists>
    a687:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a68a:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    a68e:	0f 84 e1 00 00 00    	je     a775 <polite_end+0x10a>
    a694:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a697:	48 98                	cdqe   
    a699:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a6a0:	48 8d 15 d9 08 10 00 	lea    rdx,[rip+0x1008d9]        # 10af80 <spi_table>
    a6a7:	48 01 d0             	add    rax,rdx
    a6aa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a6ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a6b2:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    a6b5:	8d 50 01             	lea    edx,[rax+0x1]
    a6b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a6bc:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    a6bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a6c3:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [rax+0x88]
    a6c9:	3d f5 00 00 00       	cmp    eax,0xf5
    a6ce:	75 4a                	jne    a71a <polite_end+0xaf>
    a6d0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a6d4:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a6d7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a6db:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a6df:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a6e3:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a6e6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a6ea:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a6ee:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a6f1:	41 89 f9             	mov    r9d,edi
    a6f4:	49 89 f0             	mov    r8,rsi
    a6f7:	89 c6                	mov    esi,eax
    a6f9:	48 8d 3d 30 46 00 00 	lea    rdi,[rip+0x4630]        # ed30 <_IO_stdin_used+0x1d30>
    a700:	b8 00 00 00 00       	mov    eax,0x0
    a705:	e8 b6 7d ff ff       	call   24c0 <printf@plt>
    a70a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a70e:	c7 80 88 00 00 00 f6 	mov    DWORD PTR [rax+0x88],0xf6
    a715:	00 00 00 
    a718:	eb 48                	jmp    a762 <polite_end+0xf7>
    a71a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a71e:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    a721:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a725:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    a729:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a72d:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    a730:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a734:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    a738:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a73b:	41 89 f9             	mov    r9d,edi
    a73e:	49 89 f0             	mov    r8,rsi
    a741:	89 c6                	mov    esi,eax
    a743:	48 8d 3d 1e 46 00 00 	lea    rdi,[rip+0x461e]        # ed68 <_IO_stdin_used+0x1d68>
    a74a:	b8 00 00 00 00       	mov    eax,0x0
    a74f:	e8 6c 7d ff ff       	call   24c0 <printf@plt>
    a754:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a758:	c7 80 88 00 00 00 f5 	mov    DWORD PTR [rax+0x88],0xf5
    a75f:	00 00 00 
    a762:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a766:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a76a:	48 89 d6             	mov    rsi,rdx
    a76d:	48 89 c7             	mov    rdi,rax
    a770:	e8 69 00 00 00       	call   a7de <increment_stats>
    a775:	90                   	nop
    a776:	c9                   	leave  
    a777:	c3                   	ret    

000000000000a778 <handle_data_pkt>:
    a778:	f3 0f 1e fa          	endbr64 
    a77c:	55                   	push   rbp
    a77d:	48 89 e5             	mov    rbp,rsp
    a780:	48 83 ec 20          	sub    rsp,0x20
    a784:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    a788:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a78c:	48 89 c7             	mov    rdi,rax
    a78f:	e8 9b f8 ff ff       	call   a02f <conversation_exists>
    a794:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    a797:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    a79b:	74 3e                	je     a7db <handle_data_pkt+0x63>
    a79d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    a7a0:	48 98                	cdqe   
    a7a2:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    a7a9:	48 8d 15 d0 07 10 00 	lea    rdx,[rip+0x1007d0]        # 10af80 <spi_table>
    a7b0:	48 01 d0             	add    rax,rdx
    a7b3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a7b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a7bb:	8b 40 78             	mov    eax,DWORD PTR [rax+0x78]
    a7be:	8d 50 01             	lea    edx,[rax+0x1]
    a7c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a7c5:	89 50 78             	mov    DWORD PTR [rax+0x78],edx
    a7c8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    a7cc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a7d0:	48 89 d6             	mov    rsi,rdx
    a7d3:	48 89 c7             	mov    rdi,rax
    a7d6:	e8 03 00 00 00       	call   a7de <increment_stats>
    a7db:	90                   	nop
    a7dc:	c9                   	leave  
    a7dd:	c3                   	ret    

000000000000a7de <increment_stats>:
    a7de:	f3 0f 1e fa          	endbr64 
    a7e2:	55                   	push   rbp
    a7e3:	48 89 e5             	mov    rbp,rsp
    a7e6:	48 83 ec 10          	sub    rsp,0x10
    a7ea:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    a7ee:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    a7f2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a7f6:	48 8d 50 29          	lea    rdx,[rax+0x29]
    a7fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a7fe:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a802:	48 89 d6             	mov    rsi,rdx
    a805:	48 89 c7             	mov    rdi,rax
    a808:	e8 d3 7f ff ff       	call   27e0 <strcmp@plt>
    a80d:	85 c0                	test   eax,eax
    a80f:	75 13                	jne    a824 <increment_stats+0x46>
    a811:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a815:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    a818:	8d 50 01             	lea    edx,[rax+0x1]
    a81b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a81f:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    a822:	eb 2c                	jmp    a850 <increment_stats+0x72>
    a824:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    a828:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a82c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    a830:	48 89 d6             	mov    rsi,rdx
    a833:	48 89 c7             	mov    rdi,rax
    a836:	e8 a5 7f ff ff       	call   27e0 <strcmp@plt>
    a83b:	85 c0                	test   eax,eax
    a83d:	75 11                	jne    a850 <increment_stats+0x72>
    a83f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a843:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    a846:	8d 50 01             	lea    edx,[rax+0x1]
    a849:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    a84d:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    a850:	90                   	nop
    a851:	c9                   	leave  
    a852:	c3                   	ret    

000000000000a853 <lprintf>:
    a853:	f3 0f 1e fa          	endbr64 
    a857:	55                   	push   rbp
    a858:	48 89 e5             	mov    rbp,rsp
    a85b:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    a862:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    a869:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    a870:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    a877:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    a87e:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    a885:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    a88c:	84 c0                	test   al,al
    a88e:	74 20                	je     a8b0 <lprintf+0x5d>
    a890:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    a894:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    a898:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    a89c:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    a8a0:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    a8a4:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    a8a8:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    a8ac:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    a8b0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a8b7:	00 00 
    a8b9:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    a8c0:	31 c0                	xor    eax,eax
    a8c2:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    a8c9:	00 00 00 
    a8cc:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    a8d3:	00 00 00 
    a8d6:	48 8d 45 10          	lea    rax,[rbp+0x10]
    a8da:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    a8e1:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    a8e8:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    a8ef:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    a8f6:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    a8fd:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    a904:	48 89 ce             	mov    rsi,rcx
    a907:	48 89 c7             	mov    rdi,rax
    a90a:	b8 00 00 00 00       	mov    eax,0x0
    a90f:	e8 fc 7e ff ff       	call   2810 <fprintf@plt>
    a914:	90                   	nop
    a915:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    a91c:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a923:	00 00 
    a925:	74 05                	je     a92c <lprintf+0xd9>
    a927:	e8 a4 7d ff ff       	call   26d0 <__stack_chk_fail@plt>
    a92c:	c9                   	leave  
    a92d:	c3                   	ret    

000000000000a92e <lfprintf>:
    a92e:	f3 0f 1e fa          	endbr64 
    a932:	55                   	push   rbp
    a933:	48 89 e5             	mov    rbp,rsp
    a936:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    a93d:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    a944:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    a94b:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    a952:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    a959:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    a960:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    a967:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a96e:	00 00 
    a970:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    a974:	31 c0                	xor    eax,eax
    a976:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    a97d:	48 8d 35 1c 44 00 00 	lea    rsi,[rip+0x441c]        # eda0 <_IO_stdin_used+0x1da0>
    a984:	48 89 c7             	mov    rdi,rax
    a987:	e8 84 7d ff ff       	call   2710 <fopen@plt>
    a98c:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    a993:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    a99a:	00 
    a99b:	75 20                	jne    a9bd <lfprintf+0x8f>
    a99d:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    a9a4:	48 89 c6             	mov    rsi,rax
    a9a7:	48 8d 3d fa 43 00 00 	lea    rdi,[rip+0x43fa]        # eda8 <_IO_stdin_used+0x1da8>
    a9ae:	b8 00 00 00 00       	mov    eax,0x0
    a9b3:	e8 08 7b ff ff       	call   24c0 <printf@plt>
    a9b8:	e9 cd 00 00 00       	jmp    aa8a <lfprintf+0x15c>
    a9bd:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    a9c4:	48 89 c7             	mov    rdi,rax
    a9c7:	e8 e7 8a ff ff       	call   34b3 <cb_get_formatted_time>
    a9cc:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    a9d3:	75 3f                	jne    aa14 <lfprintf+0xe6>
    a9d5:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    a9dc:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    a9e3:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    a9ea:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    a9f1:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    a9f8:	49 89 f9             	mov    r9,rdi
    a9fb:	49 89 f0             	mov    r8,rsi
    a9fe:	48 8d 35 d1 43 00 00 	lea    rsi,[rip+0x43d1]        # edd6 <_IO_stdin_used+0x1dd6>
    aa05:	48 89 c7             	mov    rdi,rax
    aa08:	b8 00 00 00 00       	mov    eax,0x0
    aa0d:	e8 ee 7a ff ff       	call   2500 <sprintf@plt>
    aa12:	eb 4e                	jmp    aa62 <lfprintf+0x134>
    aa14:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    aa1b:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    aa22:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    aa29:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    aa30:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    aa37:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    aa3d:	56                   	push   rsi
    aa3e:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    aa44:	45 89 c1             	mov    r9d,r8d
    aa47:	49 89 f8             	mov    r8,rdi
    aa4a:	48 8d 35 95 43 00 00 	lea    rsi,[rip+0x4395]        # ede6 <_IO_stdin_used+0x1de6>
    aa51:	48 89 c7             	mov    rdi,rax
    aa54:	b8 00 00 00 00       	mov    eax,0x0
    aa59:	e8 a2 7a ff ff       	call   2500 <sprintf@plt>
    aa5e:	48 83 c4 10          	add    rsp,0x10
    aa62:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    aa69:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    aa70:	48 89 d6             	mov    rsi,rdx
    aa73:	48 89 c7             	mov    rdi,rax
    aa76:	e8 65 7c ff ff       	call   26e0 <fputs@plt>
    aa7b:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    aa82:	48 89 c7             	mov    rdi,rax
    aa85:	e8 36 7c ff ff       	call   26c0 <fclose@plt>
    aa8a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aa8e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    aa95:	00 00 
    aa97:	74 05                	je     aa9e <lfprintf+0x170>
    aa99:	e8 32 7c ff ff       	call   26d0 <__stack_chk_fail@plt>
    aa9e:	c9                   	leave  
    aa9f:	c3                   	ret    

000000000000aaa0 <saprintf>:
    aaa0:	f3 0f 1e fa          	endbr64 
    aaa4:	55                   	push   rbp
    aaa5:	48 89 e5             	mov    rbp,rsp
    aaa8:	48 83 ec 20          	sub    rsp,0x20
    aaac:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    aab0:	48 8b 05 81 75 00 00 	mov    rax,QWORD PTR [rip+0x7581]        # 12038 <def_log_file>
    aab7:	48 8d 35 e2 42 00 00 	lea    rsi,[rip+0x42e2]        # eda0 <_IO_stdin_used+0x1da0>
    aabe:	48 89 c7             	mov    rdi,rax
    aac1:	e8 4a 7c ff ff       	call   2710 <fopen@plt>
    aac6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    aaca:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    aacf:	75 1a                	jne    aaeb <saprintf+0x4b>
    aad1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    aad5:	48 89 c6             	mov    rsi,rax
    aad8:	48 8d 3d c9 42 00 00 	lea    rdi,[rip+0x42c9]        # eda8 <_IO_stdin_used+0x1da8>
    aadf:	b8 00 00 00 00       	mov    eax,0x0
    aae4:	e8 d7 79 ff ff       	call   24c0 <printf@plt>
    aae9:	eb 1f                	jmp    ab0a <saprintf+0x6a>
    aaeb:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    aaef:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    aaf3:	48 89 d6             	mov    rsi,rdx
    aaf6:	48 89 c7             	mov    rdi,rax
    aaf9:	e8 e2 7b ff ff       	call   26e0 <fputs@plt>
    aafe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab02:	48 89 c7             	mov    rdi,rax
    ab05:	e8 b6 7b ff ff       	call   26c0 <fclose@plt>
    ab0a:	c9                   	leave  
    ab0b:	c3                   	ret    

000000000000ab0c <substr>:
    ab0c:	f3 0f 1e fa          	endbr64 
    ab10:	55                   	push   rbp
    ab11:	48 89 e5             	mov    rbp,rsp
    ab14:	48 83 ec 20          	sub    rsp,0x20
    ab18:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    ab1c:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    ab1f:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    ab22:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    ab25:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    ab28:	83 c0 02             	add    eax,0x2
    ab2b:	48 98                	cdqe   
    ab2d:	48 89 c7             	mov    rdi,rax
    ab30:	e8 5b 7c ff ff       	call   2790 <malloc@plt>
    ab35:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ab39:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    ab3c:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    ab3f:	eb 27                	jmp    ab68 <substr+0x5c>
    ab41:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    ab44:	48 63 d0             	movsxd rdx,eax
    ab47:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ab4b:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    ab4f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    ab52:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    ab55:	48 63 d0             	movsxd rdx,eax
    ab58:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab5c:	48 01 c2             	add    rdx,rax
    ab5f:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    ab62:	88 02                	mov    BYTE PTR [rdx],al
    ab64:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    ab68:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    ab6b:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    ab6e:	7e d1                	jle    ab41 <substr+0x35>
    ab70:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    ab73:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    ab76:	48 98                	cdqe   
    ab78:	48 8d 50 01          	lea    rdx,[rax+0x1]
    ab7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab80:	48 01 d0             	add    rax,rdx
    ab83:	c6 00 00             	mov    BYTE PTR [rax],0x0
    ab86:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab8a:	c9                   	leave  
    ab8b:	c3                   	ret    

000000000000ab8c <delimit>:
    ab8c:	f3 0f 1e fa          	endbr64 
    ab90:	55                   	push   rbp
    ab91:	48 89 e5             	mov    rbp,rsp
    ab94:	89 f8                	mov    eax,edi
    ab96:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    ab99:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    ab9d:	0f 94 c0             	sete   al
    aba0:	5d                   	pop    rbp
    aba1:	c3                   	ret    

000000000000aba2 <isdigit>:
    aba2:	f3 0f 1e fa          	endbr64 
    aba6:	55                   	push   rbp
    aba7:	48 89 e5             	mov    rbp,rsp
    abaa:	53                   	push   rbx
    abab:	48 83 ec 28          	sub    rsp,0x28
    abaf:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    abb3:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    abba:	e9 f7 00 00 00       	jmp    acb6 <isdigit+0x114>
    abbf:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    abc2:	48 63 d0             	movsxd rdx,eax
    abc5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    abc9:	48 01 d0             	add    rax,rdx
    abcc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    abcf:	3c 30                	cmp    al,0x30
    abd1:	0f 84 db 00 00 00    	je     acb2 <isdigit+0x110>
    abd7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    abda:	48 63 d0             	movsxd rdx,eax
    abdd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    abe1:	48 01 d0             	add    rax,rdx
    abe4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    abe7:	3c 31                	cmp    al,0x31
    abe9:	0f 84 c3 00 00 00    	je     acb2 <isdigit+0x110>
    abef:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    abf2:	48 63 d0             	movsxd rdx,eax
    abf5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    abf9:	48 01 d0             	add    rax,rdx
    abfc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    abff:	3c 32                	cmp    al,0x32
    ac01:	0f 84 ab 00 00 00    	je     acb2 <isdigit+0x110>
    ac07:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac0a:	48 63 d0             	movsxd rdx,eax
    ac0d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac11:	48 01 d0             	add    rax,rdx
    ac14:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac17:	3c 33                	cmp    al,0x33
    ac19:	0f 84 93 00 00 00    	je     acb2 <isdigit+0x110>
    ac1f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac22:	48 63 d0             	movsxd rdx,eax
    ac25:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac29:	48 01 d0             	add    rax,rdx
    ac2c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac2f:	3c 34                	cmp    al,0x34
    ac31:	74 7f                	je     acb2 <isdigit+0x110>
    ac33:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac36:	48 63 d0             	movsxd rdx,eax
    ac39:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac3d:	48 01 d0             	add    rax,rdx
    ac40:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac43:	3c 34                	cmp    al,0x34
    ac45:	74 6b                	je     acb2 <isdigit+0x110>
    ac47:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac4a:	48 63 d0             	movsxd rdx,eax
    ac4d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac51:	48 01 d0             	add    rax,rdx
    ac54:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac57:	3c 35                	cmp    al,0x35
    ac59:	74 57                	je     acb2 <isdigit+0x110>
    ac5b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac5e:	48 63 d0             	movsxd rdx,eax
    ac61:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac65:	48 01 d0             	add    rax,rdx
    ac68:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac6b:	3c 36                	cmp    al,0x36
    ac6d:	74 43                	je     acb2 <isdigit+0x110>
    ac6f:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac72:	48 63 d0             	movsxd rdx,eax
    ac75:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac79:	48 01 d0             	add    rax,rdx
    ac7c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac7f:	3c 37                	cmp    al,0x37
    ac81:	74 2f                	je     acb2 <isdigit+0x110>
    ac83:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac86:	48 63 d0             	movsxd rdx,eax
    ac89:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac8d:	48 01 d0             	add    rax,rdx
    ac90:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac93:	3c 38                	cmp    al,0x38
    ac95:	74 1b                	je     acb2 <isdigit+0x110>
    ac97:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    ac9a:	48 63 d0             	movsxd rdx,eax
    ac9d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    aca1:	48 01 d0             	add    rax,rdx
    aca4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    aca7:	3c 39                	cmp    al,0x39
    aca9:	74 07                	je     acb2 <isdigit+0x110>
    acab:	b8 00 00 00 00       	mov    eax,0x0
    acb0:	eb 24                	jmp    acd6 <isdigit+0x134>
    acb2:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    acb6:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    acb9:	48 63 d8             	movsxd rbx,eax
    acbc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    acc0:	48 89 c7             	mov    rdi,rax
    acc3:	e8 d8 78 ff ff       	call   25a0 <strlen@plt>
    acc8:	48 39 c3             	cmp    rbx,rax
    accb:	0f 82 ee fe ff ff    	jb     abbf <isdigit+0x1d>
    acd1:	b8 01 00 00 00       	mov    eax,0x1
    acd6:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    acda:	c9                   	leave  
    acdb:	c3                   	ret    

000000000000acdc <assign_port_number>:
    acdc:	f3 0f 1e fa          	endbr64 
    ace0:	55                   	push   rbp
    ace1:	48 89 e5             	mov    rbp,rsp
    ace4:	48 83 ec 10          	sub    rsp,0x10
    ace8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    acec:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    acf0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acf4:	48 89 c7             	mov    rdi,rax
    acf7:	e8 a6 fe ff ff       	call   aba2 <isdigit>
    acfc:	84 c0                	test   al,al
    acfe:	74 18                	je     ad18 <assign_port_number+0x3c>
    ad00:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad04:	48 89 c7             	mov    rdi,rax
    ad07:	e8 64 7b ff ff       	call   2870 <atoi@plt>
    ad0c:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    ad10:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    ad16:	eb 25                	jmp    ad3d <assign_port_number+0x61>
    ad18:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad1c:	48 8d 35 dd 40 00 00 	lea    rsi,[rip+0x40dd]        # ee00 <_IO_stdin_used+0x1e00>
    ad23:	48 89 c7             	mov    rdi,rax
    ad26:	e8 b5 7a ff ff       	call   27e0 <strcmp@plt>
    ad2b:	85 c0                	test   eax,eax
    ad2d:	75 0e                	jne    ad3d <assign_port_number+0x61>
    ad2f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad33:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    ad3a:	ff ff ff 
    ad3d:	90                   	nop
    ad3e:	c9                   	leave  
    ad3f:	c3                   	ret    

000000000000ad40 <check_port_number>:
    ad40:	f3 0f 1e fa          	endbr64 
    ad44:	55                   	push   rbp
    ad45:	48 89 e5             	mov    rbp,rsp
    ad48:	48 83 ec 10          	sub    rsp,0x10
    ad4c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ad50:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad54:	48 89 c7             	mov    rdi,rax
    ad57:	e8 46 fe ff ff       	call   aba2 <isdigit>
    ad5c:	84 c0                	test   al,al
    ad5e:	74 0e                	je     ad6e <check_port_number+0x2e>
    ad60:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad64:	48 89 c7             	mov    rdi,rax
    ad67:	e8 04 7b ff ff       	call   2870 <atoi@plt>
    ad6c:	eb 23                	jmp    ad91 <check_port_number+0x51>
    ad6e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad72:	48 8d 35 87 40 00 00 	lea    rsi,[rip+0x4087]        # ee00 <_IO_stdin_used+0x1e00>
    ad79:	48 89 c7             	mov    rdi,rax
    ad7c:	e8 5f 7a ff ff       	call   27e0 <strcmp@plt>
    ad81:	85 c0                	test   eax,eax
    ad83:	75 07                	jne    ad8c <check_port_number+0x4c>
    ad85:	b8 ff ff ff ff       	mov    eax,0xffffffff
    ad8a:	eb 05                	jmp    ad91 <check_port_number+0x51>
    ad8c:	b8 ff ff ff ff       	mov    eax,0xffffffff
    ad91:	c9                   	leave  
    ad92:	c3                   	ret    

000000000000ad93 <assign_protocol>:
    ad93:	f3 0f 1e fa          	endbr64 
    ad97:	55                   	push   rbp
    ad98:	48 89 e5             	mov    rbp,rsp
    ad9b:	48 83 ec 10          	sub    rsp,0x10
    ad9f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ada3:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ada7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adab:	48 8d 35 52 40 00 00 	lea    rsi,[rip+0x4052]        # ee04 <_IO_stdin_used+0x1e04>
    adb2:	48 89 c7             	mov    rdi,rax
    adb5:	e8 26 7a ff ff       	call   27e0 <strcmp@plt>
    adba:	85 c0                	test   eax,eax
    adbc:	75 10                	jne    adce <assign_protocol+0x3b>
    adbe:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adc2:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    adc9:	ff ff ff 
    adcc:	eb 73                	jmp    ae41 <assign_protocol+0xae>
    adce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    add2:	48 8d 35 2f 40 00 00 	lea    rsi,[rip+0x402f]        # ee08 <_IO_stdin_used+0x1e08>
    add9:	48 89 c7             	mov    rdi,rax
    addc:	e8 ff 79 ff ff       	call   27e0 <strcmp@plt>
    ade1:	85 c0                	test   eax,eax
    ade3:	75 10                	jne    adf5 <assign_protocol+0x62>
    ade5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ade9:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    adf0:	00 00 00 
    adf3:	eb 4c                	jmp    ae41 <assign_protocol+0xae>
    adf5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adf9:	48 8d 35 0d 40 00 00 	lea    rsi,[rip+0x400d]        # ee0d <_IO_stdin_used+0x1e0d>
    ae00:	48 89 c7             	mov    rdi,rax
    ae03:	e8 d8 79 ff ff       	call   27e0 <strcmp@plt>
    ae08:	85 c0                	test   eax,eax
    ae0a:	75 10                	jne    ae1c <assign_protocol+0x89>
    ae0c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae10:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    ae17:	00 00 00 
    ae1a:	eb 25                	jmp    ae41 <assign_protocol+0xae>
    ae1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae20:	48 8d 35 ea 3f 00 00 	lea    rsi,[rip+0x3fea]        # ee11 <_IO_stdin_used+0x1e11>
    ae27:	48 89 c7             	mov    rdi,rax
    ae2a:	e8 b1 79 ff ff       	call   27e0 <strcmp@plt>
    ae2f:	85 c0                	test   eax,eax
    ae31:	75 0e                	jne    ae41 <assign_protocol+0xae>
    ae33:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae37:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    ae3e:	00 00 00 
    ae41:	90                   	nop
    ae42:	c9                   	leave  
    ae43:	c3                   	ret    

000000000000ae44 <get_ruletype>:
    ae44:	f3 0f 1e fa          	endbr64 
    ae48:	55                   	push   rbp
    ae49:	48 89 e5             	mov    rbp,rsp
    ae4c:	48 83 ec 10          	sub    rsp,0x10
    ae50:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ae54:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ae58:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae5c:	ba 09 00 00 00       	mov    edx,0x9
    ae61:	48 8d 35 ad 3f 00 00 	lea    rsi,[rip+0x3fad]        # ee15 <_IO_stdin_used+0x1e15>
    ae68:	48 89 c7             	mov    rdi,rax
    ae6b:	e8 50 77 ff ff       	call   25c0 <strncmp@plt>
    ae70:	85 c0                	test   eax,eax
    ae72:	75 17                	jne    ae8b <get_ruletype+0x47>
    ae74:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae78:	48 8d 15 df a7 ff ff 	lea    rdx,[rip+0xffffffffffffa7df]        # 565e <str_match_parser>
    ae7f:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    ae86:	e9 82 00 00 00       	jmp    af0d <get_ruletype+0xc9>
    ae8b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae8f:	ba 04 00 00 00       	mov    edx,0x4
    ae94:	48 8d 35 84 3f 00 00 	lea    rsi,[rip+0x3f84]        # ee1f <_IO_stdin_used+0x1e1f>
    ae9b:	48 89 c7             	mov    rdi,rax
    ae9e:	e8 1d 77 ff ff       	call   25c0 <strncmp@plt>
    aea3:	85 c0                	test   eax,eax
    aea5:	75 14                	jne    aebb <get_ruletype+0x77>
    aea7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aeab:	48 8d 15 4f aa ff ff 	lea    rdx,[rip+0xffffffffffffaa4f]        # 5901 <none>
    aeb2:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    aeb9:	eb 52                	jmp    af0d <get_ruletype+0xc9>
    aebb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aebf:	ba 04 00 00 00       	mov    edx,0x4
    aec4:	48 8d 35 59 3f 00 00 	lea    rsi,[rip+0x3f59]        # ee24 <_IO_stdin_used+0x1e24>
    aecb:	48 89 c7             	mov    rdi,rax
    aece:	e8 ed 76 ff ff       	call   25c0 <strncmp@plt>
    aed3:	85 c0                	test   eax,eax
    aed5:	75 14                	jne    aeeb <get_ruletype+0xa7>
    aed7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aedb:	48 8d 15 36 aa ff ff 	lea    rdx,[rip+0xffffffffffffaa36]        # 5918 <pcre_match>
    aee2:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    aee9:	eb 22                	jmp    af0d <get_ruletype+0xc9>
    aeeb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aeef:	48 89 c6             	mov    rsi,rax
    aef2:	48 8d 3d 30 3f 00 00 	lea    rdi,[rip+0x3f30]        # ee29 <_IO_stdin_used+0x1e29>
    aef9:	b8 00 00 00 00       	mov    eax,0x0
    aefe:	e8 bd 75 ff ff       	call   24c0 <printf@plt>
    af03:	bf 01 00 00 00       	mov    edi,0x1
    af08:	e8 33 78 ff ff       	call   2740 <exit@plt>
    af0d:	c9                   	leave  
    af0e:	c3                   	ret    

000000000000af0f <numeric_check>:
    af0f:	f3 0f 1e fa          	endbr64 
    af13:	55                   	push   rbp
    af14:	48 89 e5             	mov    rbp,rsp
    af17:	48 83 ec 30          	sub    rsp,0x30
    af1b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    af1f:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    af22:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    af26:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    af2a:	48 89 c7             	mov    rdi,rax
    af2d:	e8 70 fc ff ff       	call   aba2 <isdigit>
    af32:	84 c0                	test   al,al
    af34:	74 27                	je     af5d <numeric_check+0x4e>
    af36:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    af3a:	48 89 c7             	mov    rdi,rax
    af3d:	e8 2e 79 ff ff       	call   2870 <atoi@plt>
    af42:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    af45:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    af48:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    af4b:	77 10                	ja     af5d <numeric_check+0x4e>
    af4d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    af50:	48 98                	cdqe   
    af52:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    af56:	72 05                	jb     af5d <numeric_check+0x4e>
    af58:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    af5b:	eb 05                	jmp    af62 <numeric_check+0x53>
    af5d:	b8 ff ff ff ff       	mov    eax,0xffffffff
    af62:	c9                   	leave  
    af63:	c3                   	ret    

000000000000af64 <sc_strip>:
    af64:	f3 0f 1e fa          	endbr64 
    af68:	55                   	push   rbp
    af69:	48 89 e5             	mov    rbp,rsp
    af6c:	48 83 ec 10          	sub    rsp,0x10
    af70:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    af74:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    af78:	48 8d 35 c1 3e 00 00 	lea    rsi,[rip+0x3ec1]        # ee40 <_IO_stdin_used+0x1e40>
    af7f:	48 89 c7             	mov    rdi,rax
    af82:	e8 59 75 ff ff       	call   24e0 <strcspn@plt>
    af87:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    af8b:	48 01 d0             	add    rax,rdx
    af8e:	c6 00 00             	mov    BYTE PTR [rax],0x0
    af91:	90                   	nop
    af92:	c9                   	leave  
    af93:	c3                   	ret    

000000000000af94 <void_rule>:
    af94:	f3 0f 1e fa          	endbr64 
    af98:	55                   	push   rbp
    af99:	48 89 e5             	mov    rbp,rsp
    af9c:	48 83 ec 10          	sub    rsp,0x10
    afa0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    afa4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afa8:	48 05 6e 03 00 00    	add    rax,0x36e
    afae:	ba 0a 00 00 00       	mov    edx,0xa
    afb3:	be 00 00 00 00       	mov    esi,0x0
    afb8:	48 89 c7             	mov    rdi,rax
    afbb:	e8 50 76 ff ff       	call   2610 <memset@plt>
    afc0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afc4:	48 05 68 03 00 00    	add    rax,0x368
    afca:	ba 06 00 00 00       	mov    edx,0x6
    afcf:	be 00 00 00 00       	mov    esi,0x0
    afd4:	48 89 c7             	mov    rdi,rax
    afd7:	e8 34 76 ff ff       	call   2610 <memset@plt>
    afdc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afe0:	48 05 50 03 00 00    	add    rax,0x350
    afe6:	ba 18 00 00 00       	mov    edx,0x18
    afeb:	be 00 00 00 00       	mov    esi,0x0
    aff0:	48 89 c7             	mov    rdi,rax
    aff3:	e8 18 76 ff ff       	call   2610 <memset@plt>
    aff8:	90                   	nop
    aff9:	c9                   	leave  
    affa:	c3                   	ret    

000000000000affb <line_parser>:
    affb:	f3 0f 1e fa          	endbr64 
    afff:	55                   	push   rbp
    b000:	48 89 e5             	mov    rbp,rsp
    b003:	53                   	push   rbx
    b004:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    b00b:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    b012:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b019:	00 00 
    b01b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b01f:	31 c0                	xor    eax,eax
    b021:	8b 05 ed 6f 00 00    	mov    eax,DWORD PTR [rip+0x6fed]        # 12014 <num_rules>
    b027:	83 c0 01             	add    eax,0x1
    b02a:	89 05 e4 6f 00 00    	mov    DWORD PTR [rip+0x6fe4],eax        # 12014 <num_rules>
    b030:	8b 05 de 6f 00 00    	mov    eax,DWORD PTR [rip+0x6fde]        # 12014 <num_rules>
    b036:	48 98                	cdqe   
    b038:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    b03f:	48 8d 15 9a 72 00 00 	lea    rdx,[rip+0x729a]        # 122e0 <rules>
    b046:	48 01 d0             	add    rax,rdx
    b049:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b04d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b051:	ba 08 00 00 00       	mov    edx,0x8
    b056:	be 00 00 00 00       	mov    esi,0x0
    b05b:	48 89 c7             	mov    rdi,rax
    b05e:	e8 ad 75 ff ff       	call   2610 <memset@plt>
    b063:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b067:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    b06e:	ff ff ff 
    b071:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b075:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    b07c:	ff ff ff 
    b07f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b083:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    b08a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b08e:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    b095:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b099:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    b0a0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0a4:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    b0ab:	00 00 00 
    b0ae:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0b2:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    b0b8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0bc:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    b0c3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b0c7:	48 89 c7             	mov    rdi,rax
    b0ca:	e8 c5 fe ff ff       	call   af94 <void_rule>
    b0cf:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    b0d6:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    b0dd:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    b0e4:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    b0eb:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b0f2:	48 89 c7             	mov    rdi,rax
    b0f5:	e8 a6 74 ff ff       	call   25a0 <strlen@plt>
    b0fa:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b0fd:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    b104:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    b10b:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    b112:	e9 98 0d 00 00       	jmp    beaf <line_parser+0xeb4>
    b117:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b11a:	48 63 d0             	movsxd rdx,eax
    b11d:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b124:	48 01 d0             	add    rax,rdx
    b127:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b12a:	0f be c0             	movsx  eax,al
    b12d:	89 c7                	mov    edi,eax
    b12f:	e8 58 fa ff ff       	call   ab8c <delimit>
    b134:	83 f0 01             	xor    eax,0x1
    b137:	84 c0                	test   al,al
    b139:	74 04                	je     b13f <line_parser+0x144>
    b13b:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    b13f:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b142:	48 63 d0             	movsxd rdx,eax
    b145:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b14c:	48 01 d0             	add    rax,rdx
    b14f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b152:	0f be c0             	movsx  eax,al
    b155:	89 c7                	mov    edi,eax
    b157:	e8 30 fa ff ff       	call   ab8c <delimit>
    b15c:	84 c0                	test   al,al
    b15e:	74 3f                	je     b19f <line_parser+0x1a4>
    b160:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b163:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    b166:	75 37                	jne    b19f <line_parser+0x1a4>
    b168:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b16b:	48 63 d0             	movsxd rdx,eax
    b16e:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b175:	48 01 d0             	add    rax,rdx
    b178:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b17b:	3c 3a                	cmp    al,0x3a
    b17d:	75 11                	jne    b190 <line_parser+0x195>
    b17f:	48 8d 3d bc 3c 00 00 	lea    rdi,[rip+0x3cbc]        # ee42 <_IO_stdin_used+0x1e42>
    b186:	b8 00 00 00 00       	mov    eax,0x0
    b18b:	e8 30 73 ff ff       	call   24c0 <printf@plt>
    b190:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    b194:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b197:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    b19a:	e9 10 0d 00 00       	jmp    beaf <line_parser+0xeb4>
    b19f:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b1a2:	48 63 d0             	movsxd rdx,eax
    b1a5:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b1ac:	48 01 d0             	add    rax,rdx
    b1af:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b1b2:	0f be c0             	movsx  eax,al
    b1b5:	89 c7                	mov    edi,eax
    b1b7:	e8 d0 f9 ff ff       	call   ab8c <delimit>
    b1bc:	84 c0                	test   al,al
    b1be:	74 08                	je     b1c8 <line_parser+0x1cd>
    b1c0:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    b1c3:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    b1c6:	75 18                	jne    b1e0 <line_parser+0x1e5>
    b1c8:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b1cb:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    b1ce:	0f 85 db 0c 00 00    	jne    beaf <line_parser+0xeb4>
    b1d4:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    b1d7:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    b1da:	0f 84 cf 0c 00 00    	je     beaf <line_parser+0xeb4>
    b1e0:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    b1e3:	8d 50 ff             	lea    edx,[rax-0x1]
    b1e6:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    b1e9:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    b1f0:	89 ce                	mov    esi,ecx
    b1f2:	48 89 c7             	mov    rdi,rax
    b1f5:	e8 12 f9 ff ff       	call   ab0c <substr>
    b1fa:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    b1fe:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    b205:	83 f0 01             	xor    eax,0x1
    b208:	84 c0                	test   al,al
    b20a:	0f 84 ea 02 00 00    	je     b4fa <line_parser+0x4ff>
    b210:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b214:	48 8d 35 36 3c 00 00 	lea    rsi,[rip+0x3c36]        # ee51 <_IO_stdin_used+0x1e51>
    b21b:	48 89 c7             	mov    rdi,rax
    b21e:	e8 bd 75 ff ff       	call   27e0 <strcmp@plt>
    b223:	85 c0                	test   eax,eax
    b225:	75 33                	jne    b25a <line_parser+0x25f>
    b227:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    b22e:	83 f0 01             	xor    eax,0x1
    b231:	84 c0                	test   al,al
    b233:	74 25                	je     b25a <line_parser+0x25f>
    b235:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    b23c:	83 f0 01             	xor    eax,0x1
    b23f:	84 c0                	test   al,al
    b241:	74 17                	je     b25a <line_parser+0x25f>
    b243:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b247:	48 8d 15 e6 a1 ff ff 	lea    rdx,[rip+0xffffffffffffa1e6]        # 5434 <stdout_alert>
    b24e:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    b255:	e9 31 0c 00 00       	jmp    be8b <line_parser+0xe90>
    b25a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b25e:	48 8d 35 a3 3b 00 00 	lea    rsi,[rip+0x3ba3]        # ee08 <_IO_stdin_used+0x1e08>
    b265:	48 89 c7             	mov    rdi,rax
    b268:	e8 73 75 ff ff       	call   27e0 <strcmp@plt>
    b26d:	85 c0                	test   eax,eax
    b26f:	74 45                	je     b2b6 <line_parser+0x2bb>
    b271:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b275:	48 8d 35 88 3b 00 00 	lea    rsi,[rip+0x3b88]        # ee04 <_IO_stdin_used+0x1e04>
    b27c:	48 89 c7             	mov    rdi,rax
    b27f:	e8 5c 75 ff ff       	call   27e0 <strcmp@plt>
    b284:	85 c0                	test   eax,eax
    b286:	74 2e                	je     b2b6 <line_parser+0x2bb>
    b288:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b28c:	48 8d 35 7a 3b 00 00 	lea    rsi,[rip+0x3b7a]        # ee0d <_IO_stdin_used+0x1e0d>
    b293:	48 89 c7             	mov    rdi,rax
    b296:	e8 45 75 ff ff       	call   27e0 <strcmp@plt>
    b29b:	85 c0                	test   eax,eax
    b29d:	74 17                	je     b2b6 <line_parser+0x2bb>
    b29f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b2a3:	48 8d 35 67 3b 00 00 	lea    rsi,[rip+0x3b67]        # ee11 <_IO_stdin_used+0x1e11>
    b2aa:	48 89 c7             	mov    rdi,rax
    b2ad:	e8 2e 75 ff ff       	call   27e0 <strcmp@plt>
    b2b2:	85 c0                	test   eax,eax
    b2b4:	75 34                	jne    b2ea <line_parser+0x2ef>
    b2b6:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    b2bd:	83 f0 01             	xor    eax,0x1
    b2c0:	84 c0                	test   al,al
    b2c2:	74 26                	je     b2ea <line_parser+0x2ef>
    b2c4:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    b2cb:	83 f0 01             	xor    eax,0x1
    b2ce:	84 c0                	test   al,al
    b2d0:	74 18                	je     b2ea <line_parser+0x2ef>
    b2d2:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b2d6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b2da:	48 89 d6             	mov    rsi,rdx
    b2dd:	48 89 c7             	mov    rdi,rax
    b2e0:	e8 ae fa ff ff       	call   ad93 <assign_protocol>
    b2e5:	e9 a1 0b 00 00       	jmp    be8b <line_parser+0xe90>
    b2ea:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b2ee:	48 89 c7             	mov    rdi,rax
    b2f1:	e8 ac f8 ff ff       	call   aba2 <isdigit>
    b2f6:	84 c0                	test   al,al
    b2f8:	75 17                	jne    b311 <line_parser+0x316>
    b2fa:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b2fe:	48 8d 35 fb 3a 00 00 	lea    rsi,[rip+0x3afb]        # ee00 <_IO_stdin_used+0x1e00>
    b305:	48 89 c7             	mov    rdi,rax
    b308:	e8 d3 74 ff ff       	call   27e0 <strcmp@plt>
    b30d:	85 c0                	test   eax,eax
    b30f:	75 34                	jne    b345 <line_parser+0x34a>
    b311:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    b318:	83 f0 01             	xor    eax,0x1
    b31b:	84 c0                	test   al,al
    b31d:	74 26                	je     b345 <line_parser+0x34a>
    b31f:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    b326:	83 f0 01             	xor    eax,0x1
    b329:	84 c0                	test   al,al
    b32b:	74 18                	je     b345 <line_parser+0x34a>
    b32d:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b331:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b335:	48 89 d6             	mov    rsi,rdx
    b338:	48 89 c7             	mov    rdi,rax
    b33b:	e8 9c f9 ff ff       	call   acdc <assign_port_number>
    b340:	e9 46 0b 00 00       	jmp    be8b <line_parser+0xe90>
    b345:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b349:	ba 08 00 00 00       	mov    edx,0x8
    b34e:	48 8d 35 02 3b 00 00 	lea    rsi,[rip+0x3b02]        # ee57 <_IO_stdin_used+0x1e57>
    b355:	48 89 c7             	mov    rdi,rax
    b358:	e8 63 72 ff ff       	call   25c0 <strncmp@plt>
    b35d:	85 c0                	test   eax,eax
    b35f:	75 75                	jne    b3d6 <line_parser+0x3db>
    b361:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b365:	48 8d 50 09          	lea    rdx,[rax+0x9]
    b369:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b36d:	48 89 d6             	mov    rsi,rdx
    b370:	48 89 c7             	mov    rdi,rax
    b373:	e8 28 73 ff ff       	call   26a0 <strcpy@plt>
    b378:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b37c:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    b37f:	85 c0                	test   eax,eax
    b381:	75 2e                	jne    b3b1 <line_parser+0x3b6>
    b383:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b387:	8b 00                	mov    eax,DWORD PTR [rax]
    b389:	85 c0                	test   eax,eax
    b38b:	75 24                	jne    b3b1 <line_parser+0x3b6>
    b38d:	8b 15 41 dc 12 00    	mov    edx,DWORD PTR [rip+0x12dc41]        # 138fd4 <homenet>
    b393:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b397:	89 10                	mov    DWORD PTR [rax],edx
    b399:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b39d:	48 89 c7             	mov    rdi,rax
    b3a0:	e8 9b f9 ff ff       	call   ad40 <check_port_number>
    b3a5:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b3a9:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    b3ac:	e9 da 0a 00 00       	jmp    be8b <line_parser+0xe90>
    b3b1:	8b 15 1d dc 12 00    	mov    edx,DWORD PTR [rip+0x12dc1d]        # 138fd4 <homenet>
    b3b7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b3bb:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    b3be:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b3c2:	48 89 c7             	mov    rdi,rax
    b3c5:	e8 76 f9 ff ff       	call   ad40 <check_port_number>
    b3ca:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b3ce:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    b3d1:	e9 b5 0a 00 00       	jmp    be8b <line_parser+0xe90>
    b3d6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b3da:	48 8d 35 7f 3a 00 00 	lea    rsi,[rip+0x3a7f]        # ee60 <_IO_stdin_used+0x1e60>
    b3e1:	48 89 c7             	mov    rdi,rax
    b3e4:	e8 f7 73 ff ff       	call   27e0 <strcmp@plt>
    b3e9:	85 c0                	test   eax,eax
    b3eb:	75 30                	jne    b41d <line_parser+0x422>
    b3ed:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b3f1:	8b 10                	mov    edx,DWORD PTR [rax]
    b3f3:	8b 05 db db 12 00    	mov    eax,DWORD PTR [rip+0x12dbdb]        # 138fd4 <homenet>
    b3f9:	39 c2                	cmp    edx,eax
    b3fb:	75 10                	jne    b40d <line_parser+0x412>
    b3fd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b401:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    b408:	e9 7e 0a 00 00       	jmp    be8b <line_parser+0xe90>
    b40d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b411:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    b418:	e9 6e 0a 00 00       	jmp    be8b <line_parser+0xe90>
    b41d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b421:	48 8d 35 3b 3a 00 00 	lea    rsi,[rip+0x3a3b]        # ee63 <_IO_stdin_used+0x1e63>
    b428:	48 89 c7             	mov    rdi,rax
    b42b:	e8 b0 73 ff ff       	call   27e0 <strcmp@plt>
    b430:	85 c0                	test   eax,eax
    b432:	75 10                	jne    b444 <line_parser+0x449>
    b434:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b438:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    b43f:	e9 47 0a 00 00       	jmp    be8b <line_parser+0xe90>
    b444:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b448:	ba 0c 00 00 00       	mov    edx,0xc
    b44d:	48 8d 35 12 3a 00 00 	lea    rsi,[rip+0x3a12]        # ee66 <_IO_stdin_used+0x1e66>
    b454:	48 89 c7             	mov    rdi,rax
    b457:	e8 64 71 ff ff       	call   25c0 <strncmp@plt>
    b45c:	85 c0                	test   eax,eax
    b45e:	75 7f                	jne    b4df <line_parser+0x4e4>
    b460:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b464:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    b468:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b46c:	48 89 d6             	mov    rsi,rdx
    b46f:	48 89 c7             	mov    rdi,rax
    b472:	e8 29 72 ff ff       	call   26a0 <strcpy@plt>
    b477:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b47b:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    b47e:	85 c0                	test   eax,eax
    b480:	75 37                	jne    b4b9 <line_parser+0x4be>
    b482:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b486:	8b 10                	mov    edx,DWORD PTR [rax]
    b488:	8b 05 46 db 12 00    	mov    eax,DWORD PTR [rip+0x12db46]        # 138fd4 <homenet>
    b48e:	39 c2                	cmp    edx,eax
    b490:	75 27                	jne    b4b9 <line_parser+0x4be>
    b492:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b496:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    b49d:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b4a1:	48 83 c0 01          	add    rax,0x1
    b4a5:	48 89 c7             	mov    rdi,rax
    b4a8:	e8 93 f8 ff ff       	call   ad40 <check_port_number>
    b4ad:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b4b1:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    b4b4:	e9 d2 09 00 00       	jmp    be8b <line_parser+0xe90>
    b4b9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b4bd:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    b4c3:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b4c7:	48 83 c0 01          	add    rax,0x1
    b4cb:	48 89 c7             	mov    rdi,rax
    b4ce:	e8 6d f8 ff ff       	call   ad40 <check_port_number>
    b4d3:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b4d7:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    b4da:	e9 ac 09 00 00       	jmp    be8b <line_parser+0xe90>
    b4df:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b4e3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b4e6:	3c 28                	cmp    al,0x28
    b4e8:	0f 85 9d 09 00 00    	jne    be8b <line_parser+0xe90>
    b4ee:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    b4f5:	e9 b5 09 00 00       	jmp    beaf <line_parser+0xeb4>
    b4fa:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b4fe:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b501:	3c 28                	cmp    al,0x28
    b503:	75 0e                	jne    b513 <line_parser+0x518>
    b505:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b509:	48 83 c0 01          	add    rax,0x1
    b50d:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b511:	eb 08                	jmp    b51b <line_parser+0x520>
    b513:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b517:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b51b:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    b522:	0f 84 8e 00 00 00    	je     b5b6 <line_parser+0x5bb>
    b528:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b52c:	48 89 c7             	mov    rdi,rax
    b52f:	e8 6c 70 ff ff       	call   25a0 <strlen@plt>
    b534:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    b538:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b53c:	48 01 d0             	add    rax,rdx
    b53f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b542:	3c 3b                	cmp    al,0x3b
    b544:	75 36                	jne    b57c <line_parser+0x581>
    b546:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b54a:	48 89 c7             	mov    rdi,rax
    b54d:	e8 4e 70 ff ff       	call   25a0 <strlen@plt>
    b552:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    b556:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b55a:	48 8d 88 4c 01 00 00 	lea    rcx,[rax+0x14c]
    b561:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b565:	48 89 c6             	mov    rsi,rax
    b568:	48 89 cf             	mov    rdi,rcx
    b56b:	e8 b0 70 ff ff       	call   2620 <strncat@plt>
    b570:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    b577:	e9 33 09 00 00       	jmp    beaf <line_parser+0xeb4>
    b57c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b580:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    b587:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b58b:	48 89 c6             	mov    rsi,rax
    b58e:	48 89 d7             	mov    rdi,rdx
    b591:	e8 3a 73 ff ff       	call   28d0 <strcat@plt>
    b596:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b59a:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    b5a1:	48 89 df             	mov    rdi,rbx
    b5a4:	e8 f7 6f ff ff       	call   25a0 <strlen@plt>
    b5a9:	48 01 d8             	add    rax,rbx
    b5ac:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    b5b1:	e9 d5 08 00 00       	jmp    be8b <line_parser+0xe90>
    b5b6:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    b5bd:	74 7f                	je     b63e <line_parser+0x643>
    b5bf:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b5c3:	48 8d 35 a9 38 00 00 	lea    rsi,[rip+0x38a9]        # ee73 <_IO_stdin_used+0x1e73>
    b5ca:	48 89 c7             	mov    rdi,rax
    b5cd:	e8 3e 6f ff ff       	call   2510 <strstr@plt>
    b5d2:	48 85 c0             	test   rax,rax
    b5d5:	74 33                	je     b60a <line_parser+0x60f>
    b5d7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b5db:	48 89 c7             	mov    rdi,rax
    b5de:	e8 bd 6f ff ff       	call   25a0 <strlen@plt>
    b5e3:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    b5e7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b5eb:	48 8d 48 40          	lea    rcx,[rax+0x40]
    b5ef:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b5f3:	48 89 c6             	mov    rsi,rax
    b5f6:	48 89 cf             	mov    rdi,rcx
    b5f9:	e8 22 70 ff ff       	call   2620 <strncat@plt>
    b5fe:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    b605:	e9 a5 08 00 00       	jmp    beaf <line_parser+0xeb4>
    b60a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b60e:	48 8d 50 40          	lea    rdx,[rax+0x40]
    b612:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b616:	48 89 c6             	mov    rsi,rax
    b619:	48 89 d7             	mov    rdi,rdx
    b61c:	e8 af 72 ff ff       	call   28d0 <strcat@plt>
    b621:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b625:	48 8d 58 40          	lea    rbx,[rax+0x40]
    b629:	48 89 df             	mov    rdi,rbx
    b62c:	e8 6f 6f ff ff       	call   25a0 <strlen@plt>
    b631:	48 01 d8             	add    rax,rbx
    b634:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    b639:	e9 4d 08 00 00       	jmp    be8b <line_parser+0xe90>
    b63e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b642:	ba 06 00 00 00       	mov    edx,0x6
    b647:	48 8d 35 28 38 00 00 	lea    rsi,[rip+0x3828]        # ee76 <_IO_stdin_used+0x1e76>
    b64e:	48 89 c7             	mov    rdi,rax
    b651:	e8 6a 6f ff ff       	call   25c0 <strncmp@plt>
    b656:	85 c0                	test   eax,eax
    b658:	75 37                	jne    b691 <line_parser+0x696>
    b65a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b65e:	48 89 c7             	mov    rdi,rax
    b661:	e8 3a 6f ff ff       	call   25a0 <strlen@plt>
    b666:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    b66a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b66e:	48 8d 48 06          	lea    rcx,[rax+0x6]
    b672:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b676:	48 83 c0 20          	add    rax,0x20
    b67a:	48 89 ce             	mov    rsi,rcx
    b67d:	48 89 c7             	mov    rdi,rax
    b680:	e8 6b 6f ff ff       	call   25f0 <strncpy@plt>
    b685:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    b68c:	e9 fa 07 00 00       	jmp    be8b <line_parser+0xe90>
    b691:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b695:	ba 05 00 00 00       	mov    edx,0x5
    b69a:	48 8d 35 dc 37 00 00 	lea    rsi,[rip+0x37dc]        # ee7d <_IO_stdin_used+0x1e7d>
    b6a1:	48 89 c7             	mov    rdi,rax
    b6a4:	e8 17 6f ff ff       	call   25c0 <strncmp@plt>
    b6a9:	85 c0                	test   eax,eax
    b6ab:	75 4d                	jne    b6fa <line_parser+0x6ff>
    b6ad:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    b6b4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b6b8:	48 83 c0 05          	add    rax,0x5
    b6bc:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    b6c0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b6c4:	48 8d 90 4c 01 00 00 	lea    rdx,[rax+0x14c]
    b6cb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    b6cf:	48 89 c6             	mov    rsi,rax
    b6d2:	48 89 d7             	mov    rdi,rdx
    b6d5:	e8 f6 71 ff ff       	call   28d0 <strcat@plt>
    b6da:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b6de:	48 8d 98 4c 01 00 00 	lea    rbx,[rax+0x14c]
    b6e5:	48 89 df             	mov    rdi,rbx
    b6e8:	e8 b3 6e ff ff       	call   25a0 <strlen@plt>
    b6ed:	48 01 d8             	add    rax,rbx
    b6f0:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    b6f5:	e9 91 07 00 00       	jmp    be8b <line_parser+0xe90>
    b6fa:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b6fe:	ba 06 00 00 00       	mov    edx,0x6
    b703:	48 8d 35 79 37 00 00 	lea    rsi,[rip+0x3779]        # ee83 <_IO_stdin_used+0x1e83>
    b70a:	48 89 c7             	mov    rdi,rax
    b70d:	e8 ae 6e ff ff       	call   25c0 <strncmp@plt>
    b712:	85 c0                	test   eax,eax
    b714:	75 31                	jne    b747 <line_parser+0x74c>
    b716:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b71a:	48 89 c7             	mov    rdi,rax
    b71d:	e8 42 f8 ff ff       	call   af64 <sc_strip>
    b722:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b726:	48 83 c0 06          	add    rax,0x6
    b72a:	48 89 c7             	mov    rdi,rax
    b72d:	e8 3e 71 ff ff       	call   2870 <atoi@plt>
    b732:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    b735:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b739:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    b73c:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    b742:	e9 44 07 00 00       	jmp    be8b <line_parser+0xe90>
    b747:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b74b:	ba 05 00 00 00       	mov    edx,0x5
    b750:	48 8d 35 33 37 00 00 	lea    rsi,[rip+0x3733]        # ee8a <_IO_stdin_used+0x1e8a>
    b757:	48 89 c7             	mov    rdi,rax
    b75a:	e8 61 6e ff ff       	call   25c0 <strncmp@plt>
    b75f:	85 c0                	test   eax,eax
    b761:	75 3f                	jne    b7a2 <line_parser+0x7a7>
    b763:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b767:	48 89 c7             	mov    rdi,rax
    b76a:	e8 31 6e ff ff       	call   25a0 <strlen@plt>
    b76f:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    b773:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b777:	48 8d 48 05          	lea    rcx,[rax+0x5]
    b77b:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b77f:	48 89 ce             	mov    rsi,rcx
    b782:	48 89 c7             	mov    rdi,rax
    b785:	e8 66 6e ff ff       	call   25f0 <strncpy@plt>
    b78a:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    b78e:	48 8d 45 de          	lea    rax,[rbp-0x22]
    b792:	48 89 d6             	mov    rsi,rdx
    b795:	48 89 c7             	mov    rdi,rax
    b798:	e8 a7 f6 ff ff       	call   ae44 <get_ruletype>
    b79d:	e9 e9 06 00 00       	jmp    be8b <line_parser+0xe90>
    b7a2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b7a6:	ba 08 00 00 00       	mov    edx,0x8
    b7ab:	48 8d 35 de 36 00 00 	lea    rsi,[rip+0x36de]        # ee90 <_IO_stdin_used+0x1e90>
    b7b2:	48 89 c7             	mov    rdi,rax
    b7b5:	e8 06 6e ff ff       	call   25c0 <strncmp@plt>
    b7ba:	85 c0                	test   eax,eax
    b7bc:	0f 85 8f 00 00 00    	jne    b851 <line_parser+0x856>
    b7c2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b7c6:	48 83 c0 08          	add    rax,0x8
    b7ca:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    b7ce:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b7d2:	48 8d 35 9a 36 00 00 	lea    rsi,[rip+0x369a]        # ee73 <_IO_stdin_used+0x1e73>
    b7d9:	48 89 c7             	mov    rdi,rax
    b7dc:	e8 2f 6d ff ff       	call   2510 <strstr@plt>
    b7e1:	48 85 c0             	test   rax,rax
    b7e4:	74 30                	je     b816 <line_parser+0x81b>
    b7e6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b7ea:	48 89 c7             	mov    rdi,rax
    b7ed:	e8 ae 6d ff ff       	call   25a0 <strlen@plt>
    b7f2:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    b7f6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b7fa:	48 8d 48 08          	lea    rcx,[rax+0x8]
    b7fe:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b802:	48 83 c0 40          	add    rax,0x40
    b806:	48 89 ce             	mov    rsi,rcx
    b809:	48 89 c7             	mov    rdi,rax
    b80c:	e8 df 6d ff ff       	call   25f0 <strncpy@plt>
    b811:	e9 75 06 00 00       	jmp    be8b <line_parser+0xe90>
    b816:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    b81d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b821:	48 8d 50 40          	lea    rdx,[rax+0x40]
    b825:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b829:	48 89 c6             	mov    rsi,rax
    b82c:	48 89 d7             	mov    rdi,rdx
    b82f:	e8 9c 70 ff ff       	call   28d0 <strcat@plt>
    b834:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b838:	48 8d 58 40          	lea    rbx,[rax+0x40]
    b83c:	48 89 df             	mov    rdi,rbx
    b83f:	e8 5c 6d ff ff       	call   25a0 <strlen@plt>
    b844:	48 01 d8             	add    rax,rbx
    b847:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    b84c:	e9 3a 06 00 00       	jmp    be8b <line_parser+0xe90>
    b851:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b855:	ba 04 00 00 00       	mov    edx,0x4
    b85a:	48 8d 35 38 36 00 00 	lea    rsi,[rip+0x3638]        # ee99 <_IO_stdin_used+0x1e99>
    b861:	48 89 c7             	mov    rdi,rax
    b864:	e8 57 6d ff ff       	call   25c0 <strncmp@plt>
    b869:	85 c0                	test   eax,eax
    b86b:	0f 85 8e 00 00 00    	jne    b8ff <line_parser+0x904>
    b871:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b875:	48 8d 35 c4 35 00 00 	lea    rsi,[rip+0x35c4]        # ee40 <_IO_stdin_used+0x1e40>
    b87c:	48 89 c7             	mov    rdi,rax
    b87f:	e8 5c 6c ff ff       	call   24e0 <strcspn@plt>
    b884:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b888:	48 01 d0             	add    rax,rdx
    b88b:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b88e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b892:	48 83 c0 04          	add    rax,0x4
    b896:	48 89 c7             	mov    rdi,rax
    b899:	e8 04 f3 ff ff       	call   aba2 <isdigit>
    b89e:	84 c0                	test   al,al
    b8a0:	74 47                	je     b8e9 <line_parser+0x8ee>
    b8a2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b8a6:	48 83 c0 04          	add    rax,0x4
    b8aa:	48 89 c7             	mov    rdi,rax
    b8ad:	e8 be 6f ff ff       	call   2870 <atoi@plt>
    b8b2:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    b8b5:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    b8b9:	7e 18                	jle    b8d3 <line_parser+0x8d8>
    b8bb:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    b8bf:	7f 12                	jg     b8d3 <line_parser+0x8d8>
    b8c1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b8c5:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    b8c8:	89 90 48 01 00 00    	mov    DWORD PTR [rax+0x148],edx
    b8ce:	e9 b8 05 00 00       	jmp    be8b <line_parser+0xe90>
    b8d3:	48 8d 3d c6 35 00 00 	lea    rdi,[rip+0x35c6]        # eea0 <_IO_stdin_used+0x1ea0>
    b8da:	e8 81 6f ff ff       	call   2860 <puts@plt>
    b8df:	bf ff ff ff ff       	mov    edi,0xffffffff
    b8e4:	e8 57 6e ff ff       	call   2740 <exit@plt>
    b8e9:	48 8d 3d d8 35 00 00 	lea    rdi,[rip+0x35d8]        # eec8 <_IO_stdin_used+0x1ec8>
    b8f0:	e8 6b 6f ff ff       	call   2860 <puts@plt>
    b8f5:	bf ff ff ff ff       	mov    edi,0xffffffff
    b8fa:	e8 41 6e ff ff       	call   2740 <exit@plt>
    b8ff:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b903:	ba 06 00 00 00       	mov    edx,0x6
    b908:	48 8d 35 e1 35 00 00 	lea    rsi,[rip+0x35e1]        # eef0 <_IO_stdin_used+0x1ef0>
    b90f:	48 89 c7             	mov    rdi,rax
    b912:	e8 a9 6c ff ff       	call   25c0 <strncmp@plt>
    b917:	85 c0                	test   eax,eax
    b919:	0f 85 9b 00 00 00    	jne    b9ba <line_parser+0x9bf>
    b91f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b923:	48 89 c7             	mov    rdi,rax
    b926:	e8 39 f6 ff ff       	call   af64 <sc_strip>
    b92b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b92f:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    b935:	3d 80 00 00 00       	cmp    eax,0x80
    b93a:	75 58                	jne    b994 <line_parser+0x999>
    b93c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b940:	48 83 c0 06          	add    rax,0x6
    b944:	ba ff 00 00 00       	mov    edx,0xff
    b949:	be 00 00 00 00       	mov    esi,0x0
    b94e:	48 89 c7             	mov    rdi,rax
    b951:	e8 b9 f5 ff ff       	call   af0f <numeric_check>
    b956:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    b959:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    b95d:	75 16                	jne    b975 <line_parser+0x97a>
    b95f:	48 8d 3d 91 35 00 00 	lea    rdi,[rip+0x3591]        # eef7 <_IO_stdin_used+0x1ef7>
    b966:	e8 f5 6e ff ff       	call   2860 <puts@plt>
    b96b:	bf ff ff ff ff       	mov    edi,0xffffffff
    b970:	e8 cb 6d ff ff       	call   2740 <exit@plt>
    b975:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    b978:	89 c2                	mov    edx,eax
    b97a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b97e:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    b984:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b988:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    b98f:	e9 f7 04 00 00       	jmp    be8b <line_parser+0xe90>
    b994:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b998:	48 83 c0 20          	add    rax,0x20
    b99c:	48 89 c6             	mov    rsi,rax
    b99f:	48 8d 3d 6a 35 00 00 	lea    rdi,[rip+0x356a]        # ef10 <_IO_stdin_used+0x1f10>
    b9a6:	b8 00 00 00 00       	mov    eax,0x0
    b9ab:	e8 10 6b ff ff       	call   24c0 <printf@plt>
    b9b0:	bf ff ff ff ff       	mov    edi,0xffffffff
    b9b5:	e8 86 6d ff ff       	call   2740 <exit@plt>
    b9ba:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b9be:	ba 06 00 00 00       	mov    edx,0x6
    b9c3:	48 8d 35 7d 35 00 00 	lea    rsi,[rip+0x357d]        # ef47 <_IO_stdin_used+0x1f47>
    b9ca:	48 89 c7             	mov    rdi,rax
    b9cd:	e8 ee 6b ff ff       	call   25c0 <strncmp@plt>
    b9d2:	85 c0                	test   eax,eax
    b9d4:	0f 85 86 00 00 00    	jne    ba60 <line_parser+0xa65>
    b9da:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b9de:	48 89 c7             	mov    rdi,rax
    b9e1:	e8 7e f5 ff ff       	call   af64 <sc_strip>
    b9e6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    b9ea:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    b9f0:	3d 80 00 00 00       	cmp    eax,0x80
    b9f5:	75 58                	jne    ba4f <line_parser+0xa54>
    b9f7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b9fb:	48 83 c0 06          	add    rax,0x6
    b9ff:	ba ff 00 00 00       	mov    edx,0xff
    ba04:	be 00 00 00 00       	mov    esi,0x0
    ba09:	48 89 c7             	mov    rdi,rax
    ba0c:	e8 fe f4 ff ff       	call   af0f <numeric_check>
    ba11:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    ba14:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    ba18:	75 16                	jne    ba30 <line_parser+0xa35>
    ba1a:	48 8d 3d 2d 35 00 00 	lea    rdi,[rip+0x352d]        # ef4e <_IO_stdin_used+0x1f4e>
    ba21:	e8 3a 6e ff ff       	call   2860 <puts@plt>
    ba26:	bf ff ff ff ff       	mov    edi,0xffffffff
    ba2b:	e8 10 6d ff ff       	call   2740 <exit@plt>
    ba30:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    ba33:	89 c2                	mov    edx,eax
    ba35:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ba39:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    ba3f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ba43:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    ba4a:	e9 3c 04 00 00       	jmp    be8b <line_parser+0xe90>
    ba4f:	48 8d 3d 12 35 00 00 	lea    rdi,[rip+0x3512]        # ef68 <_IO_stdin_used+0x1f68>
    ba56:	e8 05 6e ff ff       	call   2860 <puts@plt>
    ba5b:	e9 2b 04 00 00       	jmp    be8b <line_parser+0xe90>
    ba60:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ba64:	ba 08 00 00 00       	mov    edx,0x8
    ba69:	48 8d 35 2a 35 00 00 	lea    rsi,[rip+0x352a]        # ef9a <_IO_stdin_used+0x1f9a>
    ba70:	48 89 c7             	mov    rdi,rax
    ba73:	e8 48 6b ff ff       	call   25c0 <strncmp@plt>
    ba78:	85 c0                	test   eax,eax
    ba7a:	0f 85 8c 00 00 00    	jne    bb0c <line_parser+0xb11>
    ba80:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    ba84:	48 89 c7             	mov    rdi,rax
    ba87:	e8 d8 f4 ff ff       	call   af64 <sc_strip>
    ba8c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ba90:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    ba96:	3d 80 00 00 00       	cmp    eax,0x80
    ba9b:	75 59                	jne    baf6 <line_parser+0xafb>
    ba9d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    baa1:	48 83 c0 08          	add    rax,0x8
    baa5:	ba ff ff 00 00       	mov    edx,0xffff
    baaa:	be 00 00 00 00       	mov    esi,0x0
    baaf:	48 89 c7             	mov    rdi,rax
    bab2:	e8 58 f4 ff ff       	call   af0f <numeric_check>
    bab7:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    baba:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    babe:	75 16                	jne    bad6 <line_parser+0xadb>
    bac0:	48 8d 3d dc 34 00 00 	lea    rdi,[rip+0x34dc]        # efa3 <_IO_stdin_used+0x1fa3>
    bac7:	e8 94 6d ff ff       	call   2860 <puts@plt>
    bacc:	bf ff ff ff ff       	mov    edi,0xffffffff
    bad1:	e8 6a 6c ff ff       	call   2740 <exit@plt>
    bad6:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    bad9:	89 c2                	mov    edx,eax
    badb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    badf:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    bae6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    baea:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    baf1:	e9 95 03 00 00       	jmp    be8b <line_parser+0xe90>
    baf6:	48 8d 3d c3 34 00 00 	lea    rdi,[rip+0x34c3]        # efc0 <_IO_stdin_used+0x1fc0>
    bafd:	e8 5e 6d ff ff       	call   2860 <puts@plt>
    bb02:	bf ff ff ff ff       	mov    edi,0xffffffff
    bb07:	e8 34 6c ff ff       	call   2740 <exit@plt>
    bb0c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bb10:	ba 09 00 00 00       	mov    edx,0x9
    bb15:	48 8d 35 d8 34 00 00 	lea    rsi,[rip+0x34d8]        # eff4 <_IO_stdin_used+0x1ff4>
    bb1c:	48 89 c7             	mov    rdi,rax
    bb1f:	e8 9c 6a ff ff       	call   25c0 <strncmp@plt>
    bb24:	85 c0                	test   eax,eax
    bb26:	75 7a                	jne    bba2 <line_parser+0xba7>
    bb28:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bb2c:	48 89 c7             	mov    rdi,rax
    bb2f:	e8 30 f4 ff ff       	call   af64 <sc_strip>
    bb34:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bb38:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    bb3e:	3d 80 00 00 00       	cmp    eax,0x80
    bb43:	0f 85 42 03 00 00    	jne    be8b <line_parser+0xe90>
    bb49:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bb4d:	48 83 c0 09          	add    rax,0x9
    bb51:	ba ff ff 00 00       	mov    edx,0xffff
    bb56:	be 00 00 00 00       	mov    esi,0x0
    bb5b:	48 89 c7             	mov    rdi,rax
    bb5e:	e8 ac f3 ff ff       	call   af0f <numeric_check>
    bb63:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    bb66:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    bb6a:	75 16                	jne    bb82 <line_parser+0xb87>
    bb6c:	48 8d 3d 8b 34 00 00 	lea    rdi,[rip+0x348b]        # effe <_IO_stdin_used+0x1ffe>
    bb73:	e8 e8 6c ff ff       	call   2860 <puts@plt>
    bb78:	bf ff ff ff ff       	mov    edi,0xffffffff
    bb7d:	e8 be 6b ff ff       	call   2740 <exit@plt>
    bb82:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    bb85:	89 c2                	mov    edx,eax
    bb87:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bb8b:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    bb92:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bb96:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    bb9d:	e9 e9 02 00 00       	jmp    be8b <line_parser+0xe90>
    bba2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bba6:	ba 04 00 00 00       	mov    edx,0x4
    bbab:	48 8d 35 68 34 00 00 	lea    rsi,[rip+0x3468]        # f01a <_IO_stdin_used+0x201a>
    bbb2:	48 89 c7             	mov    rdi,rax
    bbb5:	e8 06 6a ff ff       	call   25c0 <strncmp@plt>
    bbba:	85 c0                	test   eax,eax
    bbbc:	75 64                	jne    bc22 <line_parser+0xc27>
    bbbe:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bbc2:	48 89 c7             	mov    rdi,rax
    bbc5:	e8 9a f3 ff ff       	call   af64 <sc_strip>
    bbca:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bbce:	48 83 c0 04          	add    rax,0x4
    bbd2:	ba ff 00 00 00       	mov    edx,0xff
    bbd7:	be 00 00 00 00       	mov    esi,0x0
    bbdc:	48 89 c7             	mov    rdi,rax
    bbdf:	e8 2b f3 ff ff       	call   af0f <numeric_check>
    bbe4:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    bbe7:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    bbeb:	75 16                	jne    bc03 <line_parser+0xc08>
    bbed:	48 8d 3d 2b 34 00 00 	lea    rdi,[rip+0x342b]        # f01f <_IO_stdin_used+0x201f>
    bbf4:	e8 67 6c ff ff       	call   2860 <puts@plt>
    bbf9:	bf ff ff ff ff       	mov    edi,0xffffffff
    bbfe:	e8 3d 6b ff ff       	call   2740 <exit@plt>
    bc03:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    bc06:	89 c2                	mov    edx,eax
    bc08:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bc0c:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    bc12:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bc16:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    bc1d:	e9 69 02 00 00       	jmp    be8b <line_parser+0xe90>
    bc22:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bc26:	ba 07 00 00 00       	mov    edx,0x7
    bc2b:	48 8d 35 ff 33 00 00 	lea    rsi,[rip+0x33ff]        # f031 <_IO_stdin_used+0x2031>
    bc32:	48 89 c7             	mov    rdi,rax
    bc35:	e8 86 69 ff ff       	call   25c0 <strncmp@plt>
    bc3a:	85 c0                	test   eax,eax
    bc3c:	75 6e                	jne    bcac <line_parser+0xcb1>
    bc3e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bc42:	48 89 c7             	mov    rdi,rax
    bc45:	e8 1a f3 ff ff       	call   af64 <sc_strip>
    bc4a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bc4e:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    bc54:	83 f8 7e             	cmp    eax,0x7e
    bc57:	75 3d                	jne    bc96 <line_parser+0xc9b>
    bc59:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bc5d:	48 89 c7             	mov    rdi,rax
    bc60:	e8 3b 69 ff ff       	call   25a0 <strlen@plt>
    bc65:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    bc69:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bc6d:	48 8d 48 07          	lea    rcx,[rax+0x7]
    bc71:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bc75:	48 05 53 03 00 00    	add    rax,0x353
    bc7b:	48 89 ce             	mov    rsi,rcx
    bc7e:	48 89 c7             	mov    rdi,rax
    bc81:	e8 6a 69 ff ff       	call   25f0 <strncpy@plt>
    bc86:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bc8a:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    bc91:	e9 f5 01 00 00       	jmp    be8b <line_parser+0xe90>
    bc96:	48 8d 3d a3 33 00 00 	lea    rdi,[rip+0x33a3]        # f040 <_IO_stdin_used+0x2040>
    bc9d:	e8 be 6b ff ff       	call   2860 <puts@plt>
    bca2:	bf ff ff ff ff       	mov    edi,0xffffffff
    bca7:	e8 94 6a ff ff       	call   2740 <exit@plt>
    bcac:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bcb0:	ba 04 00 00 00       	mov    edx,0x4
    bcb5:	48 8d 35 b5 33 00 00 	lea    rsi,[rip+0x33b5]        # f071 <_IO_stdin_used+0x2071>
    bcbc:	48 89 c7             	mov    rdi,rax
    bcbf:	e8 fc 68 ff ff       	call   25c0 <strncmp@plt>
    bcc4:	85 c0                	test   eax,eax
    bcc6:	75 78                	jne    bd40 <line_parser+0xd45>
    bcc8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bccc:	48 89 c7             	mov    rdi,rax
    bccf:	e8 90 f2 ff ff       	call   af64 <sc_strip>
    bcd4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bcd8:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    bcde:	83 f8 7e             	cmp    eax,0x7e
    bce1:	0f 85 a4 01 00 00    	jne    be8b <line_parser+0xe90>
    bce7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bceb:	48 83 c0 04          	add    rax,0x4
    bcef:	ba ff ff ff ff       	mov    edx,0xffffffff
    bcf4:	be 00 00 00 00       	mov    esi,0x0
    bcf9:	48 89 c7             	mov    rdi,rax
    bcfc:	e8 0e f2 ff ff       	call   af0f <numeric_check>
    bd01:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    bd04:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    bd08:	75 16                	jne    bd20 <line_parser+0xd25>
    bd0a:	48 8d 3d 65 33 00 00 	lea    rdi,[rip+0x3365]        # f076 <_IO_stdin_used+0x2076>
    bd11:	e8 4a 6b ff ff       	call   2860 <puts@plt>
    bd16:	bf ff ff ff ff       	mov    edi,0xffffffff
    bd1b:	e8 20 6a ff ff       	call   2740 <exit@plt>
    bd20:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    bd23:	89 c2                	mov    edx,eax
    bd25:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bd29:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    bd30:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bd34:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    bd3b:	e9 4b 01 00 00       	jmp    be8b <line_parser+0xe90>
    bd40:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bd44:	ba 06 00 00 00       	mov    edx,0x6
    bd49:	48 8d 35 38 33 00 00 	lea    rsi,[rip+0x3338]        # f088 <_IO_stdin_used+0x2088>
    bd50:	48 89 c7             	mov    rdi,rax
    bd53:	e8 68 68 ff ff       	call   25c0 <strncmp@plt>
    bd58:	85 c0                	test   eax,eax
    bd5a:	75 7c                	jne    bdd8 <line_parser+0xddd>
    bd5c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bd60:	48 89 c7             	mov    rdi,rax
    bd63:	e8 38 68 ff ff       	call   25a0 <strlen@plt>
    bd68:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    bd6c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bd70:	48 8d 48 06          	lea    rcx,[rax+0x6]
    bd74:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bd78:	48 05 10 02 00 00    	add    rax,0x210
    bd7e:	48 89 ce             	mov    rsi,rcx
    bd81:	48 89 c7             	mov    rdi,rax
    bd84:	e8 67 68 ff ff       	call   25f0 <strncpy@plt>
    bd89:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bd8d:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    bd94:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bd98:	48 05 d0 01 00 00    	add    rax,0x1d0
    bd9e:	ba 00 00 00 00       	mov    edx,0x0
    bda3:	48 89 ce             	mov    rsi,rcx
    bda6:	48 89 c7             	mov    rdi,rax
    bda9:	e8 52 69 ff ff       	call   2700 <regcomp@plt>
    bdae:	85 c0                	test   eax,eax
    bdb0:	74 16                	je     bdc8 <line_parser+0xdcd>
    bdb2:	48 8d 3d d7 32 00 00 	lea    rdi,[rip+0x32d7]        # f090 <_IO_stdin_used+0x2090>
    bdb9:	e8 a2 6a ff ff       	call   2860 <puts@plt>
    bdbe:	bf ff ff ff ff       	mov    edi,0xffffffff
    bdc3:	e8 78 69 ff ff       	call   2740 <exit@plt>
    bdc8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bdcc:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    bdd3:	e9 b3 00 00 00       	jmp    be8b <line_parser+0xe90>
    bdd8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bddc:	ba 06 00 00 00       	mov    edx,0x6
    bde1:	48 8d 35 cd 32 00 00 	lea    rsi,[rip+0x32cd]        # f0b5 <_IO_stdin_used+0x20b5>
    bde8:	48 89 c7             	mov    rdi,rax
    bdeb:	e8 d0 67 ff ff       	call   25c0 <strncmp@plt>
    bdf0:	85 c0                	test   eax,eax
    bdf2:	75 2a                	jne    be1e <line_parser+0xe23>
    bdf4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    bdf8:	48 89 c7             	mov    rdi,rax
    bdfb:	e8 64 f1 ff ff       	call   af64 <sc_strip>
    be00:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be04:	48 8d 48 06          	lea    rcx,[rax+0x6]
    be08:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    be0c:	ba 01 00 00 00       	mov    edx,0x1
    be11:	48 89 ce             	mov    rsi,rcx
    be14:	48 89 c7             	mov    rdi,rax
    be17:	e8 6c 03 00 00       	call   c188 <d_op_parser>
    be1c:	eb 6d                	jmp    be8b <line_parser+0xe90>
    be1e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be22:	ba 07 00 00 00       	mov    edx,0x7
    be27:	48 8d 35 8e 32 00 00 	lea    rsi,[rip+0x328e]        # f0bc <_IO_stdin_used+0x20bc>
    be2e:	48 89 c7             	mov    rdi,rax
    be31:	e8 8a 67 ff ff       	call   25c0 <strncmp@plt>
    be36:	85 c0                	test   eax,eax
    be38:	75 27                	jne    be61 <line_parser+0xe66>
    be3a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be3e:	48 89 c7             	mov    rdi,rax
    be41:	e8 1e f1 ff ff       	call   af64 <sc_strip>
    be46:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be4a:	48 83 c0 07          	add    rax,0x7
    be4e:	48 89 c7             	mov    rdi,rax
    be51:	e8 1a 6a ff ff       	call   2870 <atoi@plt>
    be56:	89 c2                	mov    edx,eax
    be58:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    be5c:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    be5f:	eb 2a                	jmp    be8b <line_parser+0xe90>
    be61:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    be65:	ba 0b 00 00 00       	mov    edx,0xb
    be6a:	48 8d 35 53 32 00 00 	lea    rsi,[rip+0x3253]        # f0c4 <_IO_stdin_used+0x20c4>
    be71:	48 89 c7             	mov    rdi,rax
    be74:	e8 47 67 ff ff       	call   25c0 <strncmp@plt>
    be79:	85 c0                	test   eax,eax
    be7b:	75 0e                	jne    be8b <line_parser+0xe90>
    be7d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    be81:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    be88:	00 00 00 
    be8b:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    be8e:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    be91:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    be95:	48 89 c7             	mov    rdi,rax
    be98:	e8 03 67 ff ff       	call   25a0 <strlen@plt>
    be9d:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    bea1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    bea5:	48 01 d0             	add    rax,rdx
    bea8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    beab:	3c 29                	cmp    al,0x29
    bead:	74 3d                	je     beec <line_parser+0xef1>
    beaf:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    beb2:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    beb5:	7f 0c                	jg     bec3 <line_parser+0xec8>
    beb7:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    beba:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    bebd:	0f 8e 54 f2 ff ff    	jle    b117 <line_parser+0x11c>
    bec3:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    beca:	83 f0 01             	xor    eax,0x1
    becd:	84 c0                	test   al,al
    becf:	74 1c                	je     beed <line_parser+0xef2>
    bed1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bed5:	48 83 c0 20          	add    rax,0x20
    bed9:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    bee0:	6c 65 64 
    bee3:	48 89 18             	mov    QWORD PTR [rax],rbx
    bee6:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    beea:	eb 01                	jmp    beed <line_parser+0xef2>
    beec:	90                   	nop
    beed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    bef1:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    bef8:	00 00 
    befa:	74 05                	je     bf01 <line_parser+0xf06>
    befc:	e8 cf 67 ff ff       	call   26d0 <__stack_chk_fail@plt>
    bf01:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    bf05:	c9                   	leave  
    bf06:	c3                   	ret    

000000000000bf07 <rule_processor>:
    bf07:	f3 0f 1e fa          	endbr64 
    bf0b:	55                   	push   rbp
    bf0c:	48 89 e5             	mov    rbp,rsp
    bf0f:	48 83 ec 10          	sub    rsp,0x10
    bf13:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    bf1a:	eb 22                	jmp    bf3e <rule_processor+0x37>
    bf1c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    bf1f:	48 98                	cdqe   
    bf21:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    bf28:	48 8d 15 b1 63 00 00 	lea    rdx,[rip+0x63b1]        # 122e0 <rules>
    bf2f:	48 01 d0             	add    rax,rdx
    bf32:	48 89 c7             	mov    rdi,rax
    bf35:	e8 13 00 00 00       	call   bf4d <process_rule>
    bf3a:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    bf3e:	8b 05 d0 60 00 00    	mov    eax,DWORD PTR [rip+0x60d0]        # 12014 <num_rules>
    bf44:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    bf47:	7e d3                	jle    bf1c <rule_processor+0x15>
    bf49:	90                   	nop
    bf4a:	90                   	nop
    bf4b:	c9                   	leave  
    bf4c:	c3                   	ret    

000000000000bf4d <process_rule>:
    bf4d:	f3 0f 1e fa          	endbr64 
    bf51:	55                   	push   rbp
    bf52:	48 89 e5             	mov    rbp,rsp
    bf55:	41 57                	push   r15
    bf57:	41 56                	push   r14
    bf59:	41 54                	push   r12
    bf5b:	53                   	push   rbx
    bf5c:	48 83 ec 40          	sub    rsp,0x40
    bf60:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    bf64:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    bf6b:	00 00 
    bf6d:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    bf71:	31 c0                	xor    eax,eax
    bf73:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bf77:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    bf7e:	83 f0 01             	xor    eax,0x1
    bf81:	84 c0                	test   al,al
    bf83:	0f 84 dd 01 00 00    	je     c166 <process_rule+0x219>
    bf89:	48 89 e0             	mov    rax,rsp
    bf8c:	49 89 c4             	mov    r12,rax
    bf8f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    bf93:	48 83 c0 40          	add    rax,0x40
    bf97:	48 89 c7             	mov    rdi,rax
    bf9a:	e8 01 66 ff ff       	call   25a0 <strlen@plt>
    bf9f:	48 83 c0 01          	add    rax,0x1
    bfa3:	48 01 c0             	add    rax,rax
    bfa6:	48 89 c2             	mov    rdx,rax
    bfa9:	48 83 ea 01          	sub    rdx,0x1
    bfad:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    bfb1:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    bfb5:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    bfbc:	00 
    bfbd:	49 89 c6             	mov    r14,rax
    bfc0:	41 bf 00 00 00 00    	mov    r15d,0x0
    bfc6:	ba 10 00 00 00       	mov    edx,0x10
    bfcb:	48 83 ea 01          	sub    rdx,0x1
    bfcf:	48 01 d0             	add    rax,rdx
    bfd2:	bb 10 00 00 00       	mov    ebx,0x10
    bfd7:	ba 00 00 00 00       	mov    edx,0x0
    bfdc:	48 f7 f3             	div    rbx
    bfdf:	48 6b c0 10          	imul   rax,rax,0x10
    bfe3:	48 89 c1             	mov    rcx,rax
    bfe6:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    bfed:	48 89 e2             	mov    rdx,rsp
    bff0:	48 29 ca             	sub    rdx,rcx
    bff3:	48 39 d4             	cmp    rsp,rdx
    bff6:	74 12                	je     c00a <process_rule+0xbd>
    bff8:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    bfff:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    c006:	00 00 
    c008:	eb e9                	jmp    bff3 <process_rule+0xa6>
    c00a:	48 89 c2             	mov    rdx,rax
    c00d:	81 e2 ff 0f 00 00    	and    edx,0xfff
    c013:	48 29 d4             	sub    rsp,rdx
    c016:	48 89 c2             	mov    rdx,rax
    c019:	81 e2 ff 0f 00 00    	and    edx,0xfff
    c01f:	48 85 d2             	test   rdx,rdx
    c022:	74 10                	je     c034 <process_rule+0xe7>
    c024:	25 ff 0f 00 00       	and    eax,0xfff
    c029:	48 83 e8 08          	sub    rax,0x8
    c02d:	48 01 e0             	add    rax,rsp
    c030:	48 83 08 00          	or     QWORD PTR [rax],0x0
    c034:	48 89 e0             	mov    rax,rsp
    c037:	48 83 c0 00          	add    rax,0x0
    c03b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    c03f:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    c046:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c04a:	48 8d 50 40          	lea    rdx,[rax+0x40]
    c04e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c052:	48 05 c8 02 00 00    	add    rax,0x2c8
    c058:	48 89 d6             	mov    rsi,rdx
    c05b:	48 89 c7             	mov    rdi,rax
    c05e:	e8 3d 66 ff ff       	call   26a0 <strcpy@plt>
    c063:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    c06a:	e9 a4 00 00 00       	jmp    c113 <process_rule+0x1c6>
    c06f:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    c073:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    c076:	48 98                	cdqe   
    c078:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    c07d:	3c 7c                	cmp    al,0x7c
    c07f:	75 18                	jne    c099 <process_rule+0x14c>
    c081:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    c085:	74 09                	je     c090 <process_rule+0x143>
    c087:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    c08e:	eb 7f                	jmp    c10f <process_rule+0x1c2>
    c090:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    c097:	eb 76                	jmp    c10f <process_rule+0x1c2>
    c099:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    c09d:	75 3a                	jne    c0d9 <process_rule+0x18c>
    c09f:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    c0a3:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    c0a6:	48 98                	cdqe   
    c0a8:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    c0ad:	0f be c0             	movsx  eax,al
    c0b0:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    c0b3:	48 63 d2             	movsxd rdx,edx
    c0b6:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    c0ba:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    c0be:	48 01 d1             	add    rcx,rdx
    c0c1:	89 c2                	mov    edx,eax
    c0c3:	48 8d 35 06 30 00 00 	lea    rsi,[rip+0x3006]        # f0d0 <_IO_stdin_used+0x20d0>
    c0ca:	48 89 cf             	mov    rdi,rcx
    c0cd:	b8 00 00 00 00       	mov    eax,0x0
    c0d2:	e8 29 64 ff ff       	call   2500 <sprintf@plt>
    c0d7:	eb 36                	jmp    c10f <process_rule+0x1c2>
    c0d9:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    c0dd:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    c0e0:	48 98                	cdqe   
    c0e2:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    c0e7:	0f be c0             	movsx  eax,al
    c0ea:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    c0ed:	01 d2                	add    edx,edx
    c0ef:	48 63 ca             	movsxd rcx,edx
    c0f2:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    c0f6:	48 01 d1             	add    rcx,rdx
    c0f9:	89 c2                	mov    edx,eax
    c0fb:	48 8d 35 d1 2f 00 00 	lea    rsi,[rip+0x2fd1]        # f0d3 <_IO_stdin_used+0x20d3>
    c102:	48 89 cf             	mov    rdi,rcx
    c105:	b8 00 00 00 00       	mov    eax,0x0
    c10a:	e8 f1 63 ff ff       	call   2500 <sprintf@plt>
    c10f:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    c113:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    c116:	48 63 d8             	movsxd rbx,eax
    c119:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c11d:	48 83 c0 40          	add    rax,0x40
    c121:	48 89 c7             	mov    rdi,rax
    c124:	e8 77 64 ff ff       	call   25a0 <strlen@plt>
    c129:	48 39 c3             	cmp    rbx,rax
    c12c:	0f 82 3d ff ff ff    	jb     c06f <process_rule+0x122>
    c132:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c136:	48 83 c0 40          	add    rax,0x40
    c13a:	ba ff 00 00 00       	mov    edx,0xff
    c13f:	be 00 00 00 00       	mov    esi,0x0
    c144:	48 89 c7             	mov    rdi,rax
    c147:	e8 c4 64 ff ff       	call   2610 <memset@plt>
    c14c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    c150:	48 8d 50 40          	lea    rdx,[rax+0x40]
    c154:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    c158:	48 89 c6             	mov    rsi,rax
    c15b:	48 89 d7             	mov    rdi,rdx
    c15e:	e8 3d 65 ff ff       	call   26a0 <strcpy@plt>
    c163:	4c 89 e4             	mov    rsp,r12
    c166:	90                   	nop
    c167:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    c16b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    c172:	00 00 
    c174:	74 05                	je     c17b <process_rule+0x22e>
    c176:	e8 55 65 ff ff       	call   26d0 <__stack_chk_fail@plt>
    c17b:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    c17f:	5b                   	pop    rbx
    c180:	41 5c                	pop    r12
    c182:	41 5e                	pop    r14
    c184:	41 5f                	pop    r15
    c186:	5d                   	pop    rbp
    c187:	c3                   	ret    

000000000000c188 <d_op_parser>:
    c188:	f3 0f 1e fa          	endbr64 
    c18c:	55                   	push   rbp
    c18d:	48 89 e5             	mov    rbp,rsp
    c190:	48 83 ec 20          	sub    rsp,0x20
    c194:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    c198:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    c19c:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    c19f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c1a3:	48 89 c7             	mov    rdi,rax
    c1a6:	e8 f7 e9 ff ff       	call   aba2 <isdigit>
    c1ab:	84 c0                	test   al,al
    c1ad:	74 23                	je     c1d2 <d_op_parser+0x4a>
    c1af:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c1b3:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    c1ba:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c1be:	48 89 c7             	mov    rdi,rax
    c1c1:	e8 aa 66 ff ff       	call   2870 <atoi@plt>
    c1c6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c1ca:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c1cd:	e9 59 01 00 00       	jmp    c32b <d_op_parser+0x1a3>
    c1d2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c1d6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c1d9:	0f b6 15 f8 2e 00 00 	movzx  edx,BYTE PTR [rip+0x2ef8]        # f0d8 <_IO_stdin_used+0x20d8>
    c1e0:	0f b6 c0             	movzx  eax,al
    c1e3:	0f b6 d2             	movzx  edx,dl
    c1e6:	29 d0                	sub    eax,edx
    c1e8:	85 c0                	test   eax,eax
    c1ea:	75 27                	jne    c213 <d_op_parser+0x8b>
    c1ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c1f0:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    c1f7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c1fb:	48 83 c0 01          	add    rax,0x1
    c1ff:	48 89 c7             	mov    rdi,rax
    c202:	e8 69 66 ff ff       	call   2870 <atoi@plt>
    c207:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c20b:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c20e:	e9 18 01 00 00       	jmp    c32b <d_op_parser+0x1a3>
    c213:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c217:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c21a:	0f b6 15 b9 2e 00 00 	movzx  edx,BYTE PTR [rip+0x2eb9]        # f0da <_IO_stdin_used+0x20da>
    c221:	0f b6 c0             	movzx  eax,al
    c224:	0f b6 d2             	movzx  edx,dl
    c227:	29 d0                	sub    eax,edx
    c229:	85 c0                	test   eax,eax
    c22b:	75 27                	jne    c254 <d_op_parser+0xcc>
    c22d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c231:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    c238:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c23c:	48 83 c0 01          	add    rax,0x1
    c240:	48 89 c7             	mov    rdi,rax
    c243:	e8 28 66 ff ff       	call   2870 <atoi@plt>
    c248:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c24c:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c24f:	e9 d7 00 00 00       	jmp    c32b <d_op_parser+0x1a3>
    c254:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c258:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c25b:	0f b6 15 7a 2e 00 00 	movzx  edx,BYTE PTR [rip+0x2e7a]        # f0dc <_IO_stdin_used+0x20dc>
    c262:	0f b6 c0             	movzx  eax,al
    c265:	0f b6 d2             	movzx  edx,dl
    c268:	29 d0                	sub    eax,edx
    c26a:	85 c0                	test   eax,eax
    c26c:	75 27                	jne    c295 <d_op_parser+0x10d>
    c26e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c272:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    c279:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c27d:	48 83 c0 01          	add    rax,0x1
    c281:	48 89 c7             	mov    rdi,rax
    c284:	e8 e7 65 ff ff       	call   2870 <atoi@plt>
    c289:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c28d:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c290:	e9 96 00 00 00       	jmp    c32b <d_op_parser+0x1a3>
    c295:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c299:	ba 02 00 00 00       	mov    edx,0x2
    c29e:	48 8d 35 39 2e 00 00 	lea    rsi,[rip+0x2e39]        # f0de <_IO_stdin_used+0x20de>
    c2a5:	48 89 c7             	mov    rdi,rax
    c2a8:	e8 13 63 ff ff       	call   25c0 <strncmp@plt>
    c2ad:	85 c0                	test   eax,eax
    c2af:	75 24                	jne    c2d5 <d_op_parser+0x14d>
    c2b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c2b5:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    c2bc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c2c0:	48 83 c0 02          	add    rax,0x2
    c2c4:	48 89 c7             	mov    rdi,rax
    c2c7:	e8 a4 65 ff ff       	call   2870 <atoi@plt>
    c2cc:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c2d0:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c2d3:	eb 56                	jmp    c32b <d_op_parser+0x1a3>
    c2d5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c2d9:	ba 02 00 00 00       	mov    edx,0x2
    c2de:	48 8d 35 fc 2d 00 00 	lea    rsi,[rip+0x2dfc]        # f0e1 <_IO_stdin_used+0x20e1>
    c2e5:	48 89 c7             	mov    rdi,rax
    c2e8:	e8 d3 62 ff ff       	call   25c0 <strncmp@plt>
    c2ed:	85 c0                	test   eax,eax
    c2ef:	75 24                	jne    c315 <d_op_parser+0x18d>
    c2f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c2f5:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    c2fc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c300:	48 83 c0 02          	add    rax,0x2
    c304:	48 89 c7             	mov    rdi,rax
    c307:	e8 64 65 ff ff       	call   2870 <atoi@plt>
    c30c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    c310:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    c313:	eb 16                	jmp    c32b <d_op_parser+0x1a3>
    c315:	48 8d 3d c8 2d 00 00 	lea    rdi,[rip+0x2dc8]        # f0e4 <_IO_stdin_used+0x20e4>
    c31c:	e8 3f 65 ff ff       	call   2860 <puts@plt>
    c321:	bf ff ff ff ff       	mov    edi,0xffffffff
    c326:	e8 15 64 ff ff       	call   2740 <exit@plt>
    c32b:	c9                   	leave  
    c32c:	c3                   	ret    

000000000000c32d <d_engine>:
    c32d:	f3 0f 1e fa          	endbr64 
    c331:	55                   	push   rbp
    c332:	48 89 e5             	mov    rbp,rsp
    c335:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    c339:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    c33d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c341:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    c344:	83 f8 ff             	cmp    eax,0xffffffff
    c347:	75 0a                	jne    c353 <d_engine+0x26>
    c349:	b8 01 00 00 00       	mov    eax,0x1
    c34e:	e9 ea 00 00 00       	jmp    c43d <d_engine+0x110>
    c353:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c357:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    c35a:	2d a1 00 00 00       	sub    eax,0xa1
    c35f:	83 f8 05             	cmp    eax,0x5
    c362:	0f 87 d0 00 00 00    	ja     c438 <d_engine+0x10b>
    c368:	89 c0                	mov    eax,eax
    c36a:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    c371:	00 
    c372:	48 8d 05 83 2d 00 00 	lea    rax,[rip+0x2d83]        # f0fc <_IO_stdin_used+0x20fc>
    c379:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    c37c:	48 98                	cdqe   
    c37e:	48 8d 15 77 2d 00 00 	lea    rdx,[rip+0x2d77]        # f0fc <_IO_stdin_used+0x20fc>
    c385:	48 01 d0             	add    rax,rdx
    c388:	3e ff e0             	notrack jmp rax
    c38b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c38f:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    c392:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c396:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    c399:	39 c2                	cmp    edx,eax
    c39b:	0f 85 87 00 00 00    	jne    c428 <d_engine+0xfb>
    c3a1:	b8 01 00 00 00       	mov    eax,0x1
    c3a6:	e9 92 00 00 00       	jmp    c43d <d_engine+0x110>
    c3ab:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c3af:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c3b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c3b6:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c3b9:	39 c2                	cmp    edx,eax
    c3bb:	76 6e                	jbe    c42b <d_engine+0xfe>
    c3bd:	b8 01 00 00 00       	mov    eax,0x1
    c3c2:	eb 79                	jmp    c43d <d_engine+0x110>
    c3c4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c3c8:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c3cb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c3cf:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c3d2:	39 c2                	cmp    edx,eax
    c3d4:	72 58                	jb     c42e <d_engine+0x101>
    c3d6:	b8 01 00 00 00       	mov    eax,0x1
    c3db:	eb 60                	jmp    c43d <d_engine+0x110>
    c3dd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c3e1:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c3e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c3e8:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c3eb:	39 c2                	cmp    edx,eax
    c3ed:	73 42                	jae    c431 <d_engine+0x104>
    c3ef:	b8 01 00 00 00       	mov    eax,0x1
    c3f4:	eb 47                	jmp    c43d <d_engine+0x110>
    c3f6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c3fa:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c3fd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c401:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c404:	39 c2                	cmp    edx,eax
    c406:	77 2c                	ja     c434 <d_engine+0x107>
    c408:	b8 01 00 00 00       	mov    eax,0x1
    c40d:	eb 2e                	jmp    c43d <d_engine+0x110>
    c40f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    c413:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    c416:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c41a:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    c41d:	39 c2                	cmp    edx,eax
    c41f:	74 16                	je     c437 <d_engine+0x10a>
    c421:	b8 01 00 00 00       	mov    eax,0x1
    c426:	eb 15                	jmp    c43d <d_engine+0x110>
    c428:	90                   	nop
    c429:	eb 0d                	jmp    c438 <d_engine+0x10b>
    c42b:	90                   	nop
    c42c:	eb 0a                	jmp    c438 <d_engine+0x10b>
    c42e:	90                   	nop
    c42f:	eb 07                	jmp    c438 <d_engine+0x10b>
    c431:	90                   	nop
    c432:	eb 04                	jmp    c438 <d_engine+0x10b>
    c434:	90                   	nop
    c435:	eb 01                	jmp    c438 <d_engine+0x10b>
    c437:	90                   	nop
    c438:	b8 00 00 00 00       	mov    eax,0x0
    c43d:	5d                   	pop    rbp
    c43e:	c3                   	ret    

000000000000c43f <homenet_toi>:
    c43f:	f3 0f 1e fa          	endbr64 
    c443:	55                   	push   rbp
    c444:	48 89 e5             	mov    rbp,rsp
    c447:	53                   	push   rbx
    c448:	48 83 ec 38          	sub    rsp,0x38
    c44c:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    c450:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c457:	00 00 
    c459:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    c45d:	31 c0                	xor    eax,eax
    c45f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c463:	48 8d 35 aa 2c 00 00 	lea    rsi,[rip+0x2caa]        # f114 <_IO_stdin_used+0x2114>
    c46a:	48 89 c7             	mov    rdi,rax
    c46d:	e8 0e 64 ff ff       	call   2880 <strtok@plt>
    c472:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    c476:	eb 4c                	jmp    c4c4 <homenet_toi+0x85>
    c478:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    c47c:	48 89 c7             	mov    rdi,rax
    c47f:	e8 ec 63 ff ff       	call   2870 <atoi@plt>
    c484:	89 c3                	mov    ebx,eax
    c486:	48 8d 45 df          	lea    rax,[rbp-0x21]
    c48a:	48 89 c7             	mov    rdi,rax
    c48d:	e8 0e 61 ff ff       	call   25a0 <strlen@plt>
    c492:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    c496:	48 01 d0             	add    rax,rdx
    c499:	89 da                	mov    edx,ebx
    c49b:	48 8d 35 74 2c 00 00 	lea    rsi,[rip+0x2c74]        # f116 <_IO_stdin_used+0x2116>
    c4a2:	48 89 c7             	mov    rdi,rax
    c4a5:	b8 00 00 00 00       	mov    eax,0x0
    c4aa:	e8 51 60 ff ff       	call   2500 <sprintf@plt>
    c4af:	48 8d 35 5e 2c 00 00 	lea    rsi,[rip+0x2c5e]        # f114 <_IO_stdin_used+0x2114>
    c4b6:	bf 00 00 00 00       	mov    edi,0x0
    c4bb:	e8 c0 63 ff ff       	call   2880 <strtok@plt>
    c4c0:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    c4c4:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    c4c9:	75 ad                	jne    c478 <homenet_toi+0x39>
    c4cb:	48 8d 45 df          	lea    rax,[rbp-0x21]
    c4cf:	ba 10 00 00 00       	mov    edx,0x10
    c4d4:	be 00 00 00 00       	mov    esi,0x0
    c4d9:	48 89 c7             	mov    rdi,rax
    c4dc:	e8 0f 63 ff ff       	call   27f0 <strtol@plt>
    c4e1:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    c4e5:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    c4ec:	00 00 
    c4ee:	74 05                	je     c4f5 <homenet_toi+0xb6>
    c4f0:	e8 db 61 ff ff       	call   26d0 <__stack_chk_fail@plt>
    c4f5:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    c4f9:	c9                   	leave  
    c4fa:	c3                   	ret    

000000000000c4fb <tcp_check_sum_passed>:
    c4fb:	f3 0f 1e fa          	endbr64 
    c4ff:	55                   	push   rbp
    c500:	48 89 e5             	mov    rbp,rsp
    c503:	41 54                	push   r12
    c505:	53                   	push   rbx
    c506:	48 83 ec 30          	sub    rsp,0x30
    c50a:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    c50e:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    c512:	bb 00 00 00 00       	mov    ebx,0x0
    c517:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c51b:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    c51f:	0f b7 c0             	movzx  eax,ax
    c522:	89 c7                	mov    edi,eax
    c524:	e8 d7 63 ff ff       	call   2900 <ntohs@plt>
    c529:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    c52d:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    c530:	83 e2 0f             	and    edx,0xf
    c533:	0f b6 d2             	movzx  edx,dl
    c536:	c1 e2 02             	shl    edx,0x2
    c539:	29 d0                	sub    eax,edx
    c53b:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    c53f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c543:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    c547:	0f b7 c0             	movzx  eax,ax
    c54a:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    c54e:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    c552:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    c556:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c55a:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    c560:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c564:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    c567:	c1 e8 10             	shr    eax,0x10
    c56a:	89 c0                	mov    eax,eax
    c56c:	0f b7 c0             	movzx  eax,ax
    c56f:	48 01 c3             	add    rbx,rax
    c572:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c576:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    c579:	89 c0                	mov    eax,eax
    c57b:	0f b7 c0             	movzx  eax,ax
    c57e:	48 01 c3             	add    rbx,rax
    c581:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c585:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    c588:	c1 e8 10             	shr    eax,0x10
    c58b:	89 c0                	mov    eax,eax
    c58d:	0f b7 c0             	movzx  eax,ax
    c590:	48 01 c3             	add    rbx,rax
    c593:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    c597:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    c59a:	89 c0                	mov    eax,eax
    c59c:	0f b7 c0             	movzx  eax,ax
    c59f:	48 01 c3             	add    rbx,rax
    c5a2:	bf 06 00 00 00       	mov    edi,0x6
    c5a7:	e8 24 5f ff ff       	call   24d0 <htons@plt>
    c5ac:	0f b7 c0             	movzx  eax,ax
    c5af:	48 01 c3             	add    rbx,rax
    c5b2:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    c5b6:	89 c7                	mov    edi,eax
    c5b8:	e8 13 5f ff ff       	call   24d0 <htons@plt>
    c5bd:	0f b7 c0             	movzx  eax,ax
    c5c0:	48 01 c3             	add    rbx,rax
    c5c3:	eb 1a                	jmp    c5df <tcp_check_sum_passed+0xe4>
    c5c5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c5c9:	48 8d 50 14          	lea    rdx,[rax+0x14]
    c5cd:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    c5d1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c5d4:	0f b6 c0             	movzx  eax,al
    c5d7:	48 01 c3             	add    rbx,rax
    c5da:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    c5df:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    c5e4:	77 df                	ja     c5c5 <tcp_check_sum_passed+0xca>
    c5e6:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    c5eb:	74 1d                	je     c60a <tcp_check_sum_passed+0x10f>
    c5ed:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c5f1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c5f4:	0f b6 c0             	movzx  eax,al
    c5f7:	48 01 c3             	add    rbx,rax
    c5fa:	eb 0e                	jmp    c60a <tcp_check_sum_passed+0x10f>
    c5fc:	0f b7 c3             	movzx  eax,bx
    c5ff:	48 c1 eb 10          	shr    rbx,0x10
    c603:	48 89 da             	mov    rdx,rbx
    c606:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    c60a:	48 89 d8             	mov    rax,rbx
    c60d:	48 c1 e8 10          	shr    rax,0x10
    c611:	48 85 c0             	test   rax,rax
    c614:	75 e6                	jne    c5fc <tcp_check_sum_passed+0x101>
    c616:	48 f7 d3             	not    rbx
    c619:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c61d:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    c621:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    c625:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    c629:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    c62d:	0f b7 c0             	movzx  eax,ax
    c630:	89 c7                	mov    edi,eax
    c632:	e8 c9 62 ff ff       	call   2900 <ntohs@plt>
    c637:	44 0f b7 e0          	movzx  r12d,ax
    c63b:	89 d8                	mov    eax,ebx
    c63d:	0f b7 c0             	movzx  eax,ax
    c640:	89 c7                	mov    edi,eax
    c642:	e8 b9 62 ff ff       	call   2900 <ntohs@plt>
    c647:	0f b7 c0             	movzx  eax,ax
    c64a:	44 89 e2             	mov    edx,r12d
    c64d:	89 c6                	mov    esi,eax
    c64f:	48 8d 3d c5 2a 00 00 	lea    rdi,[rip+0x2ac5]        # f11b <_IO_stdin_used+0x211b>
    c656:	b8 00 00 00 00       	mov    eax,0x0
    c65b:	e8 60 5e ff ff       	call   24c0 <printf@plt>
    c660:	89 d8                	mov    eax,ebx
    c662:	0f b7 c0             	movzx  eax,ax
    c665:	89 c7                	mov    edi,eax
    c667:	e8 94 62 ff ff       	call   2900 <ntohs@plt>
    c66c:	89 c3                	mov    ebx,eax
    c66e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    c672:	0f b7 c0             	movzx  eax,ax
    c675:	89 c7                	mov    edi,eax
    c677:	e8 84 62 ff ff       	call   2900 <ntohs@plt>
    c67c:	66 39 c3             	cmp    bx,ax
    c67f:	75 07                	jne    c688 <tcp_check_sum_passed+0x18d>
    c681:	b8 01 00 00 00       	mov    eax,0x1
    c686:	eb 05                	jmp    c68d <tcp_check_sum_passed+0x192>
    c688:	b8 00 00 00 00       	mov    eax,0x0
    c68d:	48 83 c4 30          	add    rsp,0x30
    c691:	5b                   	pop    rbx
    c692:	41 5c                	pop    r12
    c694:	5d                   	pop    rbp
    c695:	c3                   	ret    

000000000000c696 <run_hello_script>:
    c696:	f3 0f 1e fa          	endbr64 
    c69a:	55                   	push   rbp
    c69b:	48 89 e5             	mov    rbp,rsp
    c69e:	48 83 ec 10          	sub    rsp,0x10
    c6a2:	e8 09 61 ff ff       	call   27b0 <luaL_newstate@plt>
    c6a7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c6ab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c6af:	48 89 c7             	mov    rdi,rax
    c6b2:	e8 a9 5f ff ff       	call   2660 <luaL_openlibs@plt>
    c6b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c6bb:	ba 00 00 00 00       	mov    edx,0x0
    c6c0:	48 8d 35 69 2a 00 00 	lea    rsi,[rip+0x2a69]        # f130 <_IO_stdin_used+0x2130>
    c6c7:	48 89 c7             	mov    rdi,rax
    c6ca:	e8 91 5e ff ff       	call   2560 <luaL_loadfilex@plt>
    c6cf:	85 c0                	test   eax,eax
    c6d1:	75 2b                	jne    c6fe <run_hello_script+0x68>
    c6d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c6d7:	41 b9 00 00 00 00    	mov    r9d,0x0
    c6dd:	41 b8 00 00 00 00    	mov    r8d,0x0
    c6e3:	b9 00 00 00 00       	mov    ecx,0x0
    c6e8:	ba ff ff ff ff       	mov    edx,0xffffffff
    c6ed:	be 00 00 00 00       	mov    esi,0x0
    c6f2:	48 89 c7             	mov    rdi,rax
    c6f5:	e8 b6 61 ff ff       	call   28b0 <lua_pcallk@plt>
    c6fa:	85 c0                	test   eax,eax
    c6fc:	74 07                	je     c705 <run_hello_script+0x6f>
    c6fe:	b8 01 00 00 00       	mov    eax,0x1
    c703:	eb 05                	jmp    c70a <run_hello_script+0x74>
    c705:	b8 00 00 00 00       	mov    eax,0x0
    c70a:	85 c0                	test   eax,eax
    c70c:	75 1e                	jne    c72c <run_hello_script+0x96>
    c70e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c712:	48 89 c7             	mov    rdi,rax
    c715:	e8 a6 60 ff ff       	call   27c0 <lua_gettop@plt>
    c71a:	f7 d0                	not    eax
    c71c:	89 c2                	mov    edx,eax
    c71e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c722:	89 d6                	mov    esi,edx
    c724:	48 89 c7             	mov    rdi,rax
    c727:	e8 d4 60 ff ff       	call   2800 <lua_settop@plt>
    c72c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c730:	48 89 c7             	mov    rdi,rax
    c733:	e8 c8 5e ff ff       	call   2600 <lua_close@plt>
    c738:	90                   	nop
    c739:	c9                   	leave  
    c73a:	c3                   	ret    

000000000000c73b <collect_scripts>:
    c73b:	f3 0f 1e fa          	endbr64 
    c73f:	55                   	push   rbp
    c740:	48 89 e5             	mov    rbp,rsp
    c743:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    c74a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c751:	00 00 
    c753:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c757:	31 c0                	xor    eax,eax
    c759:	48 8d 35 ee 29 00 00 	lea    rsi,[rip+0x29ee]        # f14e <_IO_stdin_used+0x214e>
    c760:	48 8d 3d e9 29 00 00 	lea    rdi,[rip+0x29e9]        # f150 <_IO_stdin_used+0x2150>
    c767:	e8 a4 5f ff ff       	call   2710 <fopen@plt>
    c76c:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    c770:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    c775:	75 16                	jne    c78d <collect_scripts+0x52>
    c777:	48 8d 3d ea 29 00 00 	lea    rdi,[rip+0x29ea]        # f168 <_IO_stdin_used+0x2168>
    c77e:	e8 dd 60 ff ff       	call   2860 <puts@plt>
    c783:	bf ff ff ff ff       	mov    edi,0xffffffff
    c788:	e8 b3 5f ff ff       	call   2740 <exit@plt>
    c78d:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    c794:	00 00 00 00 
    c798:	48 8d 45 90          	lea    rax,[rbp-0x70]
    c79c:	ba 00 00 00 00       	mov    edx,0x0
    c7a1:	48 8d 35 02 2a 00 00 	lea    rsi,[rip+0x2a02]        # f1aa <_IO_stdin_used+0x21aa>
    c7a8:	48 89 c7             	mov    rdi,rax
    c7ab:	e8 50 5f ff ff       	call   2700 <regcomp@plt>
    c7b0:	e9 86 00 00 00       	jmp    c83b <collect_scripts+0x100>
    c7b5:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c7bc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    c7bf:	3c 23                	cmp    al,0x23
    c7c1:	75 02                	jne    c7c5 <collect_scripts+0x8a>
    c7c3:	eb 76                	jmp    c83b <collect_scripts+0x100>
    c7c5:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c7cc:	ba 0e 00 00 00       	mov    edx,0xe
    c7d1:	48 8d 35 dc 29 00 00 	lea    rsi,[rip+0x29dc]        # f1b4 <_IO_stdin_used+0x21b4>
    c7d8:	48 89 c7             	mov    rdi,rax
    c7db:	e8 e0 5d ff ff       	call   25c0 <strncmp@plt>
    c7e0:	85 c0                	test   eax,eax
    c7e2:	75 34                	jne    c818 <collect_scripts+0xdd>
    c7e4:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c7eb:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    c7ef:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    c7f3:	48 89 d6             	mov    rsi,rdx
    c7f6:	48 89 c7             	mov    rdi,rax
    c7f9:	e8 a2 5e ff ff       	call   26a0 <strcpy@plt>
    c7fe:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    c802:	48 8d 35 ba 29 00 00 	lea    rsi,[rip+0x29ba]        # f1c3 <_IO_stdin_used+0x21c3>
    c809:	48 89 c7             	mov    rdi,rax
    c80c:	e8 cf 5c ff ff       	call   24e0 <strcspn@plt>
    c811:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    c816:	eb 23                	jmp    c83b <collect_scripts+0x100>
    c818:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    c81f:	48 8d 45 90          	lea    rax,[rbp-0x70]
    c823:	41 b8 00 00 00 00    	mov    r8d,0x0
    c829:	b9 00 00 00 00       	mov    ecx,0x0
    c82e:	ba 00 00 00 00       	mov    edx,0x0
    c833:	48 89 c7             	mov    rdi,rax
    c836:	e8 15 5f ff ff       	call   2750 <regexec@plt>
    c83b:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    c83f:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    c846:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    c84d:	48 89 ce             	mov    rsi,rcx
    c850:	48 89 c7             	mov    rdi,rax
    c853:	e8 18 5f ff ff       	call   2770 <getline@plt>
    c858:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    c85c:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    c861:	0f 85 4e ff ff ff    	jne    c7b5 <collect_scripts+0x7a>
    c867:	90                   	nop
    c868:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c86c:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    c873:	00 00 
    c875:	74 05                	je     c87c <collect_scripts+0x141>
    c877:	e8 54 5e ff ff       	call   26d0 <__stack_chk_fail@plt>
    c87c:	c9                   	leave  
    c87d:	c3                   	ret    

000000000000c87e <ip6decode>:
    c87e:	f3 0f 1e fa          	endbr64 
    c882:	55                   	push   rbp
    c883:	48 89 e5             	mov    rbp,rsp
    c886:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    c88d:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    c894:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    c89b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c8a2:	00 00 
    c8a4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    c8a8:	31 c0                	xor    eax,eax
    c8aa:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c8b1:	48 83 c0 0e          	add    rax,0xe
    c8b5:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    c8b9:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    c8bd:	48 83 c0 08          	add    rax,0x8
    c8c1:	48 89 c7             	mov    rdi,rax
    c8c4:	e8 4a 69 ff ff       	call   3213 <inet6_ntoa>
    c8c9:	48 89 c1             	mov    rcx,rax
    c8cc:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    c8d0:	ba 29 00 00 00       	mov    edx,0x29
    c8d5:	48 89 ce             	mov    rsi,rcx
    c8d8:	48 89 c7             	mov    rdi,rax
    c8db:	e8 10 5d ff ff       	call   25f0 <strncpy@plt>
    c8e0:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    c8e4:	48 83 c0 18          	add    rax,0x18
    c8e8:	48 89 c7             	mov    rdi,rax
    c8eb:	e8 23 69 ff ff       	call   3213 <inet6_ntoa>
    c8f0:	48 89 c1             	mov    rcx,rax
    c8f3:	48 8d 45 90          	lea    rax,[rbp-0x70]
    c8f7:	ba 29 00 00 00       	mov    edx,0x29
    c8fc:	48 89 ce             	mov    rsi,rcx
    c8ff:	48 89 c7             	mov    rdi,rax
    c902:	e8 e9 5c ff ff       	call   25f0 <strncpy@plt>
    c907:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    c90b:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    c90f:	0f b6 c0             	movzx  eax,al
    c912:	85 c0                	test   eax,eax
    c914:	75 1c                	jne    c932 <ip6decode+0xb4>
    c916:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    c91a:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    c91e:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    c925:	48 89 ce             	mov    rsi,rcx
    c928:	48 89 c7             	mov    rdi,rax
    c92b:	e8 7e 71 ff ff       	call   3aae <ip6_icmp_decode>
    c930:	eb 28                	jmp    c95a <ip6decode+0xdc>
    c932:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    c936:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    c93a:	0f b6 c8             	movzx  ecx,al
    c93d:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    c941:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    c945:	48 89 c6             	mov    rsi,rax
    c948:	48 8d 3d 79 28 00 00 	lea    rdi,[rip+0x2879]        # f1c8 <_IO_stdin_used+0x21c8>
    c94f:	b8 00 00 00 00       	mov    eax,0x0
    c954:	e8 67 5b ff ff       	call   24c0 <printf@plt>
    c959:	90                   	nop
    c95a:	90                   	nop
    c95b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    c95f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    c966:	00 00 
    c968:	74 05                	je     c96f <ip6decode+0xf1>
    c96a:	e8 61 5d ff ff       	call   26d0 <__stack_chk_fail@plt>
    c96f:	c9                   	leave  
    c970:	c3                   	ret    

000000000000c971 <crash_handler>:
    c971:	f3 0f 1e fa          	endbr64 
    c975:	55                   	push   rbp
    c976:	48 89 e5             	mov    rbp,rsp
    c979:	41 54                	push   r12
    c97b:	53                   	push   rbx
    c97c:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    c983:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    c989:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    c990:	00 00 
    c992:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    c996:	31 c0                	xor    eax,eax
    c998:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    c99f:	be 14 00 00 00       	mov    esi,0x14
    c9a4:	48 89 c7             	mov    rdi,rax
    c9a7:	e8 84 5e ff ff       	call   2830 <backtrace@plt>
    c9ac:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    c9b2:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    c9b8:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    c9bf:	89 d6                	mov    esi,edx
    c9c1:	48 89 c7             	mov    rdi,rax
    c9c4:	e8 77 5e ff ff       	call   2840 <backtrace_symbols@plt>
    c9c9:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    c9d0:	b8 00 00 00 00       	mov    eax,0x0
    c9d5:	e8 05 6a ff ff       	call   33df <get_formated_time>
    c9da:	48 89 c6             	mov    rsi,rax
    c9dd:	48 8d 3d 0c 28 00 00 	lea    rdi,[rip+0x280c]        # f1f0 <_IO_stdin_used+0x21f0>
    c9e4:	b8 00 00 00 00       	mov    eax,0x0
    c9e9:	e8 d2 5a ff ff       	call   24c0 <printf@plt>
    c9ee:	48 8d 3d 2a 28 00 00 	lea    rdi,[rip+0x282a]        # f21f <_IO_stdin_used+0x221f>
    c9f5:	e8 66 5e ff ff       	call   2860 <puts@plt>
    c9fa:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    ca01:	00 
    ca02:	0f 84 56 01 00 00    	je     cb5e <crash_handler+0x1ed>
    ca08:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    ca0f:	00 00 00 
    ca12:	e9 35 01 00 00       	jmp    cb4c <crash_handler+0x1db>
    ca17:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    ca1d:	48 98                	cdqe   
    ca1f:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    ca26:	00 
    ca27:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    ca2e:	48 01 d0             	add    rax,rdx
    ca31:	48 8b 00             	mov    rax,QWORD PTR [rax]
    ca34:	48 8d 35 f8 27 00 00 	lea    rsi,[rip+0x27f8]        # f233 <_IO_stdin_used+0x2233>
    ca3b:	48 89 c7             	mov    rdi,rax
    ca3e:	e8 cd 5a ff ff       	call   2510 <strstr@plt>
    ca43:	48 85 c0             	test   rax,rax
    ca46:	0f 85 f8 00 00 00    	jne    cb44 <crash_handler+0x1d3>
    ca4c:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    ca52:	48 98                	cdqe   
    ca54:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    ca5b:	00 
    ca5c:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    ca63:	48 01 d0             	add    rax,rdx
    ca66:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    ca69:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    ca6f:	48 98                	cdqe   
    ca71:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    ca78:	00 
    ca79:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    ca80:	48 01 d0             	add    rax,rdx
    ca83:	48 8b 00             	mov    rax,QWORD PTR [rax]
    ca86:	be 2b 00 00 00       	mov    esi,0x2b
    ca8b:	48 89 c7             	mov    rdi,rax
    ca8e:	e8 e7 6a ff ff       	call   357a <strloc>
    ca93:	48 98                	cdqe   
    ca95:	48 83 c0 01          	add    rax,0x1
    ca99:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    ca9d:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    caa1:	48 8d 35 8f 27 00 00 	lea    rsi,[rip+0x278f]        # f237 <_IO_stdin_used+0x2237>
    caa8:	48 89 c7             	mov    rdi,rax
    caab:	b8 00 00 00 00       	mov    eax,0x0
    cab0:	e8 4b 5a ff ff       	call   2500 <sprintf@plt>
    cab5:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    cab9:	be 29 00 00 00       	mov    esi,0x29
    cabe:	48 89 c7             	mov    rdi,rax
    cac1:	e8 b4 6a ff ff       	call   357a <strloc>
    cac6:	48 98                	cdqe   
    cac8:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    cacd:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    cad1:	ba 10 00 00 00       	mov    edx,0x10
    cad6:	be 00 00 00 00       	mov    esi,0x0
    cadb:	48 89 c7             	mov    rdi,rax
    cade:	e8 0d 5d ff ff       	call   27f0 <strtol@plt>
    cae3:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    cae9:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    caef:	89 c7                	mov    edi,eax
    caf1:	e8 3a 01 00 00       	call   cc30 <offset_search>
    caf6:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    cafd:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    cb04:	74 23                	je     cb29 <crash_handler+0x1b8>
    cb06:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    cb0d:	8b 95 1c ff ff ff    	mov    edx,DWORD PTR [rbp-0xe4]
    cb13:	48 89 c6             	mov    rsi,rax
    cb16:	48 8d 3d 1e 27 00 00 	lea    rdi,[rip+0x271e]        # f23b <_IO_stdin_used+0x223b>
    cb1d:	b8 00 00 00 00       	mov    eax,0x0
    cb22:	e8 99 59 ff ff       	call   24c0 <printf@plt>
    cb27:	eb 1c                	jmp    cb45 <crash_handler+0x1d4>
    cb29:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    cb2f:	89 c6                	mov    esi,eax
    cb31:	48 8d 3d 20 27 00 00 	lea    rdi,[rip+0x2720]        # f258 <_IO_stdin_used+0x2258>
    cb38:	b8 00 00 00 00       	mov    eax,0x0
    cb3d:	e8 7e 59 ff ff       	call   24c0 <printf@plt>
    cb42:	eb 01                	jmp    cb45 <crash_handler+0x1d4>
    cb44:	90                   	nop
    cb45:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    cb4c:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    cb52:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    cb58:	0f 8c b9 fe ff ff    	jl     ca17 <crash_handler+0xa6>
    cb5e:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    cb65:	48 89 c7             	mov    rdi,rax
    cb68:	e8 c3 5b ff ff       	call   2730 <free@plt>
    cb6d:	48 8d 3d 0e 27 00 00 	lea    rdi,[rip+0x270e]        # f282 <_IO_stdin_used+0x2282>
    cb74:	e8 e7 5c ff ff       	call   2860 <puts@plt>
    cb79:	89 c6                	mov    esi,eax
    cb7b:	48 8d 3d 0f 27 00 00 	lea    rdi,[rip+0x270f]        # f291 <_IO_stdin_used+0x2291>
    cb82:	b8 00 00 00 00       	mov    eax,0x0
    cb87:	e8 34 59 ff ff       	call   24c0 <printf@plt>
    cb8c:	89 d8                	mov    eax,ebx
    cb8e:	89 c6                	mov    esi,eax
    cb90:	48 8d 3d 0a 27 00 00 	lea    rdi,[rip+0x270a]        # f2a1 <_IO_stdin_used+0x22a1>
    cb97:	b8 00 00 00 00       	mov    eax,0x0
    cb9c:	e8 1f 59 ff ff       	call   24c0 <printf@plt>
    cba1:	89 d8                	mov    eax,ebx
    cba3:	89 c6                	mov    esi,eax
    cba5:	48 8d 3d 05 27 00 00 	lea    rdi,[rip+0x2705]        # f2b1 <_IO_stdin_used+0x22b1>
    cbac:	b8 00 00 00 00       	mov    eax,0x0
    cbb1:	e8 0a 59 ff ff       	call   24c0 <printf@plt>
    cbb6:	89 c8                	mov    eax,ecx
    cbb8:	89 c6                	mov    esi,eax
    cbba:	48 8d 3d 00 27 00 00 	lea    rdi,[rip+0x2700]        # f2c1 <_IO_stdin_used+0x22c1>
    cbc1:	b8 00 00 00 00       	mov    eax,0x0
    cbc6:	e8 f5 58 ff ff       	call   24c0 <printf@plt>
    cbcb:	89 e0                	mov    eax,esp
    cbcd:	89 c6                	mov    esi,eax
    cbcf:	48 8d 3d fb 26 00 00 	lea    rdi,[rip+0x26fb]        # f2d1 <_IO_stdin_used+0x22d1>
    cbd6:	b8 00 00 00 00       	mov    eax,0x0
    cbdb:	e8 e0 58 ff ff       	call   24c0 <printf@plt>
    cbe0:	89 e8                	mov    eax,ebp
    cbe2:	89 c6                	mov    esi,eax
    cbe4:	48 8d 3d f6 26 00 00 	lea    rdi,[rip+0x26f6]        # f2e1 <_IO_stdin_used+0x22e1>
    cbeb:	b8 00 00 00 00       	mov    eax,0x0
    cbf0:	e8 cb 58 ff ff       	call   24c0 <printf@plt>
    cbf5:	48 8d 35 75 fd ff ff 	lea    rsi,[rip+0xfffffffffffffd75]        # c971 <crash_handler>
    cbfc:	48 8d 3d ee 26 00 00 	lea    rdi,[rip+0x26ee]        # f2f1 <_IO_stdin_used+0x22f1>
    cc03:	b8 00 00 00 00       	mov    eax,0x0
    cc08:	e8 b3 58 ff ff       	call   24c0 <printf@plt>
    cc0d:	89 e8                	mov    eax,ebp
    cc0f:	89 e2                	mov    edx,esp
    cc11:	29 d0                	sub    eax,edx
    cc13:	89 c6                	mov    esi,eax
    cc15:	48 8d 3d d9 26 00 00 	lea    rdi,[rip+0x26d9]        # f2f5 <_IO_stdin_used+0x22f5>
    cc1c:	b8 00 00 00 00       	mov    eax,0x0
    cc21:	e8 9a 58 ff ff       	call   24c0 <printf@plt>
    cc26:	bf 01 00 00 00       	mov    edi,0x1
    cc2b:	e8 10 5b ff ff       	call   2740 <exit@plt>

000000000000cc30 <offset_search>:
    cc30:	f3 0f 1e fa          	endbr64 
    cc34:	55                   	push   rbp
    cc35:	48 89 e5             	mov    rbp,rsp
    cc38:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    cc3b:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    cc42:	eb 44                	jmp    cc88 <offset_search+0x58>
    cc44:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    cc47:	48 63 d0             	movsxd rdx,eax
    cc4a:	48 89 d0             	mov    rax,rdx
    cc4d:	48 c1 e0 02          	shl    rax,0x2
    cc51:	48 01 d0             	add    rax,rdx
    cc54:	48 c1 e0 03          	shl    rax,0x3
    cc58:	48 8d 15 a1 cb 12 00 	lea    rdx,[rip+0x12cba1]        # 139800 <fn_mem_map>
    cc5f:	48 01 d0             	add    rax,rdx
    cc62:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cc66:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cc6a:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    cc6d:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    cc70:	76 12                	jbe    cc84 <offset_search+0x54>
    cc72:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cc76:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    cc79:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    cc7c:	73 06                	jae    cc84 <offset_search+0x54>
    cc7e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cc82:	eb 14                	jmp    cc98 <offset_search+0x68>
    cc84:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    cc88:	8b 05 72 f3 12 00    	mov    eax,DWORD PTR [rip+0x12f372]        # 13c000 <fn_num>
    cc8e:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    cc91:	7c b1                	jl     cc44 <offset_search+0x14>
    cc93:	b8 00 00 00 00       	mov    eax,0x0
    cc98:	5d                   	pop    rbp
    cc99:	c3                   	ret    

000000000000cc9a <add_fn>:
    cc9a:	f3 0f 1e fa          	endbr64 
    cc9e:	55                   	push   rbp
    cc9f:	48 89 e5             	mov    rbp,rsp
    cca2:	48 83 ec 20          	sub    rsp,0x20
    cca6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    ccaa:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    ccad:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    ccb0:	8b 05 4a f3 12 00    	mov    eax,DWORD PTR [rip+0x12f34a]        # 13c000 <fn_num>
    ccb6:	8d 50 01             	lea    edx,[rax+0x1]
    ccb9:	89 15 41 f3 12 00    	mov    DWORD PTR [rip+0x12f341],edx        # 13c000 <fn_num>
    ccbf:	48 63 d0             	movsxd rdx,eax
    ccc2:	48 89 d0             	mov    rax,rdx
    ccc5:	48 c1 e0 02          	shl    rax,0x2
    ccc9:	48 01 d0             	add    rax,rdx
    cccc:	48 c1 e0 03          	shl    rax,0x3
    ccd0:	48 8d 15 29 cb 12 00 	lea    rdx,[rip+0x12cb29]        # 139800 <fn_mem_map>
    ccd7:	48 01 d0             	add    rax,rdx
    ccda:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    ccde:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cce2:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    cce6:	48 89 d6             	mov    rsi,rdx
    cce9:	48 89 c7             	mov    rdi,rax
    ccec:	e8 af 59 ff ff       	call   26a0 <strcpy@plt>
    ccf1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ccf5:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    ccf8:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    ccfb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ccff:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    cd02:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    cd05:	90                   	nop
    cd06:	c9                   	leave  
    cd07:	c3                   	ret    

000000000000cd08 <print_mem_map>:
    cd08:	f3 0f 1e fa          	endbr64 
    cd0c:	55                   	push   rbp
    cd0d:	48 89 e5             	mov    rbp,rsp
    cd10:	48 83 ec 10          	sub    rsp,0x10
    cd14:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    cd1b:	eb 4c                	jmp    cd69 <print_mem_map+0x61>
    cd1d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    cd20:	48 63 d0             	movsxd rdx,eax
    cd23:	48 89 d0             	mov    rax,rdx
    cd26:	48 c1 e0 02          	shl    rax,0x2
    cd2a:	48 01 d0             	add    rax,rdx
    cd2d:	48 c1 e0 03          	shl    rax,0x3
    cd31:	48 8d 15 c8 ca 12 00 	lea    rdx,[rip+0x12cac8]        # 139800 <fn_mem_map>
    cd38:	48 01 d0             	add    rax,rdx
    cd3b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    cd3f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cd43:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    cd46:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cd4a:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    cd4d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    cd51:	48 89 c6             	mov    rsi,rax
    cd54:	48 8d 3d a5 25 00 00 	lea    rdi,[rip+0x25a5]        # f300 <_IO_stdin_used+0x2300>
    cd5b:	b8 00 00 00 00       	mov    eax,0x0
    cd60:	e8 5b 57 ff ff       	call   24c0 <printf@plt>
    cd65:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    cd69:	8b 05 91 f2 12 00    	mov    eax,DWORD PTR [rip+0x12f291]        # 13c000 <fn_num>
    cd6f:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    cd72:	7c a9                	jl     cd1d <print_mem_map+0x15>
    cd74:	90                   	nop
    cd75:	90                   	nop
    cd76:	c9                   	leave  
    cd77:	c3                   	ret    

000000000000cd78 <load_fn_mem_map>:
    cd78:	f3 0f 1e fa          	endbr64 
    cd7c:	55                   	push   rbp
    cd7d:	48 89 e5             	mov    rbp,rsp
    cd80:	53                   	push   rbx
    cd81:	48 83 ec 78          	sub    rsp,0x78
    cd85:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    cd8c:	00 00 
    cd8e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    cd92:	31 c0                	xor    eax,eax
    cd94:	48 8d 35 7d 25 00 00 	lea    rsi,[rip+0x257d]        # f318 <_IO_stdin_used+0x2318>
    cd9b:	48 8d 3d 78 25 00 00 	lea    rdi,[rip+0x2578]        # f31a <_IO_stdin_used+0x231a>
    cda2:	e8 69 59 ff ff       	call   2710 <fopen@plt>
    cda7:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    cdab:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    cdb0:	75 16                	jne    cdc8 <load_fn_mem_map+0x50>
    cdb2:	48 8d 3d 7f 25 00 00 	lea    rdi,[rip+0x257f]        # f338 <_IO_stdin_used+0x2338>
    cdb9:	e8 a2 5a ff ff       	call   2860 <puts@plt>
    cdbe:	bf ff ff ff ff       	mov    edi,0xffffffff
    cdc3:	e8 78 59 ff ff       	call   2740 <exit@plt>
    cdc8:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    cdcf:	00 
    cdd0:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    cdd7:	00 
    cdd8:	e9 db 00 00 00       	jmp    ceb8 <load_fn_mem_map+0x140>
    cddd:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    cde1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    cde5:	48 8d 35 b3 25 00 00 	lea    rsi,[rip+0x25b3]        # f39f <_IO_stdin_used+0x239f>
    cdec:	48 89 c7             	mov    rdi,rax
    cdef:	e8 ec 56 ff ff       	call   24e0 <strcspn@plt>
    cdf4:	48 01 d8             	add    rax,rbx
    cdf7:	c6 00 00             	mov    BYTE PTR [rax],0x0
    cdfa:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    ce01:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    ce05:	48 8d 35 95 25 00 00 	lea    rsi,[rip+0x2595]        # f3a1 <_IO_stdin_used+0x23a1>
    ce0c:	48 89 c7             	mov    rdi,rax
    ce0f:	e8 6c 5a ff ff       	call   2880 <strtok@plt>
    ce14:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    ce18:	eb 7f                	jmp    ce99 <load_fn_mem_map+0x121>
    ce1a:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    ce1e:	74 44                	je     ce64 <load_fn_mem_map+0xec>
    ce20:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    ce24:	7f 59                	jg     ce7f <load_fn_mem_map+0x107>
    ce26:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    ce2a:	74 08                	je     ce34 <load_fn_mem_map+0xbc>
    ce2c:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    ce30:	74 17                	je     ce49 <load_fn_mem_map+0xd1>
    ce32:	eb 4b                	jmp    ce7f <load_fn_mem_map+0x107>
    ce34:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    ce38:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    ce3c:	48 89 d6             	mov    rsi,rdx
    ce3f:	48 89 c7             	mov    rdi,rax
    ce42:	e8 59 58 ff ff       	call   26a0 <strcpy@plt>
    ce47:	eb 37                	jmp    ce80 <load_fn_mem_map+0x108>
    ce49:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    ce4d:	ba 10 00 00 00       	mov    edx,0x10
    ce52:	be 00 00 00 00       	mov    esi,0x0
    ce57:	48 89 c7             	mov    rdi,rax
    ce5a:	e8 91 59 ff ff       	call   27f0 <strtol@plt>
    ce5f:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    ce62:	eb 1c                	jmp    ce80 <load_fn_mem_map+0x108>
    ce64:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    ce68:	ba 10 00 00 00       	mov    edx,0x10
    ce6d:	be 00 00 00 00       	mov    esi,0x0
    ce72:	48 89 c7             	mov    rdi,rax
    ce75:	e8 76 59 ff ff       	call   27f0 <strtol@plt>
    ce7a:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    ce7d:	eb 01                	jmp    ce80 <load_fn_mem_map+0x108>
    ce7f:	90                   	nop
    ce80:	48 8d 35 1a 25 00 00 	lea    rsi,[rip+0x251a]        # f3a1 <_IO_stdin_used+0x23a1>
    ce87:	bf 00 00 00 00       	mov    edi,0x0
    ce8c:	e8 ef 59 ff ff       	call   2880 <strtok@plt>
    ce91:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    ce95:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    ce99:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    ce9e:	0f 85 76 ff ff ff    	jne    ce1a <load_fn_mem_map+0xa2>
    cea4:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    cea7:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    ceaa:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    ceae:	89 ce                	mov    esi,ecx
    ceb0:	48 89 c7             	mov    rdi,rax
    ceb3:	e8 e2 fd ff ff       	call   cc9a <add_fn>
    ceb8:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    cebc:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    cec0:	48 8d 45 98          	lea    rax,[rbp-0x68]
    cec4:	48 89 ce             	mov    rsi,rcx
    cec7:	48 89 c7             	mov    rdi,rax
    ceca:	e8 a1 58 ff ff       	call   2770 <getline@plt>
    cecf:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    ced3:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    ced8:	0f 85 ff fe ff ff    	jne    cddd <load_fn_mem_map+0x65>
    cede:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    cee2:	48 89 c7             	mov    rdi,rax
    cee5:	e8 d6 57 ff ff       	call   26c0 <fclose@plt>
    ceea:	90                   	nop
    ceeb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    ceef:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    cef6:	00 00 
    cef8:	74 05                	je     ceff <load_fn_mem_map+0x187>
    cefa:	e8 d1 57 ff ff       	call   26d0 <__stack_chk_fail@plt>
    ceff:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    cf03:	c9                   	leave  
    cf04:	c3                   	ret    

Disassembly of section .fini:

000000000000cf08 <_fini>:
    cf08:	f3 0f 1e fa          	endbr64 
    cf0c:	48 83 ec 08          	sub    rsp,0x8
    cf10:	48 83 c4 08          	add    rsp,0x8
    cf14:	c3                   	ret    

Disassembly of section .rodata:

000000000000d000 <_IO_stdin_used>:
    d000:	01 00                	add    DWORD PTR [rax],eax
    d002:	02 00                	add    al,BYTE PTR [rax]
    d004:	2f                   	(bad)  
    d005:	65 74 63             	gs je  d06b <_IO_stdin_used+0x6b>
    d008:	2f                   	(bad)  
    d009:	76 69                	jbe    d074 <_IO_stdin_used+0x74>
    d00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    d012:	69 6c 
    d014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    d018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    d01b:	76 61                	jbe    d07e <_IO_stdin_used+0x7e>
    d01d:	72 2f                	jb     d04e <_IO_stdin_used+0x4e>
    d01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    d020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d021:	67 2f                	addr32 (bad) 
    d023:	76 69                	jbe    d08e <_IO_stdin_used+0x8e>
    d025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    d02c:	6c 6f 
    d02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    d031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d032:	67 00 2f             	add    BYTE PTR [edi],ch
    d035:	65 74 63             	gs je  d09b <_IO_stdin_used+0x9b>
    d038:	2f                   	(bad)  
    d039:	76 69                	jbe    d0a4 <_IO_stdin_used+0xa4>
    d03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    d042:	74 73 
    d044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    d048:	66 00 00             	data16 add BYTE PTR [rax],al
    d04b:	00 00                	add    BYTE PTR [rax],al
    d04d:	00 00                	add    BYTE PTR [rax],al
    d04f:	00 1b                	add    BYTE PTR [rbx],bl
    d051:	5b                   	pop    rbx
    d052:	39 30                	cmp    DWORD PTR [rax],esi
    d054:	6d                   	ins    DWORD PTR es:[rdi],dx
    d055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    d08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    d091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    d096:	00 00                	add    BYTE PTR [rax],al
    d098:	42                   	rex.X
    d099:	41                   	rex.B
    d09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    d0a0:	46                   	rex.RX
    d0a1:	49                   	rex.WB
    d0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    d0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    d0ae:	68 65 72 6e 74       	push   0x746e7265
    d0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    d0b6:	61                   	(bad)  
    d0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    d0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    d0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d0bd:	74 6f                	je     d12e <_IO_stdin_used+0x12e>
    d0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    d0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    d0c6:	62                   	(bad)  
    d0c7:	65 72 00             	gs jb  d0ca <_IO_stdin_used+0xca>
    d0ca:	2f                   	(bad)  
    d0cb:	76 61                	jbe    d12e <_IO_stdin_used+0x12e>
    d0cd:	72 2f                	jb     d0fe <_IO_stdin_used+0xfe>
    d0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d0d1:	67 2f                	addr32 (bad) 
    d0d3:	76 69                	jbe    d13e <_IO_stdin_used+0x13e>
    d0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    d0dc:	6c 6f 
    d0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    d0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d0e2:	67 00 00             	add    BYTE PTR [eax],al
    d0e5:	00 00                	add    BYTE PTR [rax],al
    d0e7:	00 1b                	add    BYTE PTR [rbx],bl
    d0e9:	5b                   	pop    rbx
    d0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    d0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    d0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    d0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30d168 <_end+0x2e1d1160>
    d0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    d0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    d0f9:	30 00                	xor    BYTE PTR [rax],al
    d0fb:	00 00                	add    BYTE PTR [rax],al
    d0fd:	00 00                	add    BYTE PTR [rax],al
    d0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    d102:	4f 54                	rex.WRXB push r12
    d104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    d108:	50                   	push   rax
    d109:	3a 20                	cmp    ah,BYTE PTR [rax]
    d10b:	50                   	push   rax
    d10c:	52                   	push   rdx
    d10d:	4f                   	rex.WRXB
    d10e:	42                   	rex.X
    d10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    d112:	57                   	push   rdi
    d113:	68 6f 20 68 61       	push   0x6168206f
    d118:	73 20                	jae    d13a <_IO_stdin_used+0x13a>
    d11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    d11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    d122:	4f 54                	rex.WRXB push r12
    d124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    d128:	50                   	push   rax
    d129:	3a 20                	cmp    ah,BYTE PTR [rax]
    d12b:	57                   	push   rdi
    d12c:	68 6f 20 69 73       	push   0x7369206f
    d131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    d134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542110ad <_end+0x540d50a5>
    d13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dbb6 <_IO_stdin_used+0xbb6>
    d143:	00 00                	add    BYTE PTR [rax],al
    d145:	00 00                	add    BYTE PTR [rax],al
    d147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    d14a:	4f 54                	rex.WRXB push r12
    d14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    d150:	50                   	push   rax
    d151:	3a 20                	cmp    ah,BYTE PTR [rax]
    d153:	52                   	push   rdx
    d154:	45 50                	rex.RB push r8
    d156:	4c 59                	rex.WR pop rcx
    d158:	3a 20                	cmp    ah,BYTE PTR [rax]
    d15a:	25 73 20 69 73       	and    eax,0x73692073
    d15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    d162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500dbdb <_end+0x54ed1bd3>
    d168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    d171:	50                   	push   rax
    d172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    d175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    d178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    d17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    d180:	5b                   	pop    rbx
    d181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    d184:	4c                   	rex.WR
    d185:	4f                   	rex.WRXB
    d186:	4f 50                	rex.WRXB push r8
    d188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df201 <_end+0x3e1a31f9>
    d18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220d207 <_end+0x520d11ff>
    d194:	45 50                	rex.RB push r8
    d196:	4c 59                	rex.WR pop rcx
    d198:	20 00                	and    BYTE PTR [rax],al
    d19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    d19d:	4b                   	rex.WXB
    d19e:	4e                   	rex.WRX
    d19f:	4f 57                	rex.WRXB push r15
    d1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    d1a6:	50                   	push   rax
    d1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    d1aa:	4e                   	rex.WRX
    d1ab:	43 54                	rex.XB push r12
    d1ad:	49                   	rex.WB
    d1ae:	4f                   	rex.WRXB
    d1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # af21a <rules+0x9cf3a>
    d1b6:	00 00                	add    BYTE PTR [rax],al
    d1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    d1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    d1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    d1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    d1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    d1d1:	25 30 32 78 00       	and    eax,0x783230
    d1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    d1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    d1e1:	00 00                	add    BYTE PTR [rax],al
    d1e3:	00 00                	add    BYTE PTR [rax],al
    d1e5:	00 00                	add    BYTE PTR [rax],al
    d1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2579041d <_end+0x25654415>
    d1ed:	30 32                	xor    BYTE PTR [rdx],dh
    d1ef:	78 3a                	js     d22b <_IO_stdin_used+0x22b>
    d1f1:	25 30 32 78 25       	and    eax,0x25783230
    d1f6:	30 32                	xor    BYTE PTR [rdx],dh
    d1f8:	78 3a                	js     d234 <_IO_stdin_used+0x234>
    d1fa:	25 30 32 78 25       	and    eax,0x25783230
    d1ff:	30 32                	xor    BYTE PTR [rdx],dh
    d201:	78 3a                	js     d23d <_IO_stdin_used+0x23d>
    d203:	25 30 32 78 25       	and    eax,0x25783230
    d208:	30 32                	xor    BYTE PTR [rdx],dh
    d20a:	78 3a                	js     d246 <_IO_stdin_used+0x246>
    d20c:	25 30 32 78 25       	and    eax,0x25783230
    d211:	30 32                	xor    BYTE PTR [rdx],dh
    d213:	78 3a                	js     d24f <_IO_stdin_used+0x24f>
    d215:	25 30 32 78 25       	and    eax,0x25783230
    d21a:	30 32                	xor    BYTE PTR [rdx],dh
    d21c:	78 3a                	js     d258 <_IO_stdin_used+0x258>
    d21e:	25 30 32 78 25       	and    eax,0x25783230
    d223:	30 32                	xor    BYTE PTR [rdx],dh
    d225:	78 3a                	js     d261 <_IO_stdin_used+0x261>
    d227:	25 30 32 78 25       	and    eax,0x25783230
    d22c:	30 32                	xor    BYTE PTR [rdx],dh
    d22e:	78 00                	js     d230 <_IO_stdin_used+0x230>
    d230:	25 64 2d 25 30       	and    eax,0x30252d64
    d235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    d239:	30 32                	xor    BYTE PTR [rdx],dh
    d23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a650472 <_end+0x3a51446a>
    d242:	25 30 32 64 3a       	and    eax,0x3a643230
    d247:	25 30 32 64 00       	and    eax,0x643230
    d24c:	25 73 3a 20 25       	and    eax,0x25203a73
    d251:	73 0a                	jae    d25d <_IO_stdin_used+0x25d>
    d253:	00 00                	add    BYTE PTR [rax],al
    d255:	00 00                	add    BYTE PTR [rax],al
    d257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46f2d0 <_end+0x6f3332c8>
    d25d:	75 6e                	jne    d2cd <_IO_stdin_used+0x2cd>
    d25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    d263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    d26b:	76 34                	jbe    d2a1 <_IO_stdin_used+0x2a1>
    d26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    d270:	64 72 65             	fs jb  d2d8 <_IO_stdin_used+0x2d8>
    d273:	73 73                	jae    d2e8 <_IO_stdin_used+0x2e8>
    d275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    d279:	74 29                	je     d2a4 <_IO_stdin_used+0x2a4>
    d27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    d27d:	25 73 0a 00 00       	and    eax,0xa73
    d282:	00 00                	add    BYTE PTR [rax],al
    d284:	00 00                	add    BYTE PTR [rax],al
    d286:	00 00                	add    BYTE PTR [rax],al
    d288:	25 73 20 46 6f       	and    eax,0x6f462073
    d28d:	75 6e                	jne    d2fd <_IO_stdin_used+0x2fd>
    d28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    d293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    d29b:	76 34                	jbe    d2d1 <_IO_stdin_used+0x2d1>
    d29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    d2a0:	64 72 65             	fs jb  d308 <_IO_stdin_used+0x308>
    d2a3:	73 73                	jae    d318 <_IO_stdin_used+0x318>
    d2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    d2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    d2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    d2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    d2b1:	5b                   	pop    rbx
    d2b2:	34 6d                	xor    al,0x6d
    d2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173192d <_end+0x615f5925>
    d2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    d2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d2be:	74 65                	je     d325 <_IO_stdin_used+0x325>
    d2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    d2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    d2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    d2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520d340 <_end+0x250d1338>
    d2cd:	73 20                	jae    d2ef <_IO_stdin_used+0x2ef>
    d2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    d2d9:	50                   	push   rax
    d2da:	76 34                	jbe    d310 <_IO_stdin_used+0x310>
    d2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df355 <_end+0x3e1a334d>
    d2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250f35b <_end+0x723d3353>
    d2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d2e9:	74 6f                	je     d35a <_IO_stdin_used+0x35a>
    d2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    d2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    d2f2:	62                   	(bad)  
    d2f3:	65 72 20             	gs jb  d316 <_IO_stdin_used+0x316>
    d2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d2fb:	00 00                	add    BYTE PTR [rax],al
    d2fd:	00 00                	add    BYTE PTR [rax],al
    d2ff:	00 1b                	add    BYTE PTR [rbx],bl
    d301:	5b                   	pop    rbx
    d302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325d375 <_end+0x7312136d>
    d308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    d30b:	76 36                	jbe    d343 <_IO_stdin_used+0x343>
    d30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df386 <_end+0x3e1a337e>
    d313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900dd8c <_end+0x8ed1d84>
    d319:	49                   	rex.WB
    d31a:	43                   	rex.XB
    d31b:	4d 50                	rex.WRB push r8
    d31d:	76 36                	jbe    d355 <_IO_stdin_used+0x355>
    d31f:	20 00                	and    BYTE PTR [rax],al
    d321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    d324:	75 74                	jne    d39a <_IO_stdin_used+0x39a>
    d326:	65 72 20             	gs jb  d349 <_IO_stdin_used+0x349>
    d329:	53                   	push   rbx
    d32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    d32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    d333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d339:	6d                   	ins    DWORD PTR es:[rdi],dx
    d33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # ddb3 <_IO_stdin_used+0xdb3>
    d340:	4d 75 6c             	rex.WRB jne d3af <_IO_stdin_used+0x3af>
    d343:	74 69                	je     d3ae <_IO_stdin_used+0x3ae>
    d345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    d348:	74 20                	je     d36a <_IO_stdin_used+0x36a>
    d34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    d351:	72 
    d352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    d355:	70 6f                	jo     d3c6 <_IO_stdin_used+0x3c6>
    d357:	72 74                	jb     d3cd <_IO_stdin_used+0x3cd>
    d359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    d35c:	73 73                	jae    d3d1 <_IO_stdin_used+0x3d1>
    d35e:	61                   	(bad)  
    d35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    d364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    d367:	6c                   	ins    BYTE PTR es:[rdi],dx
    d368:	74 69                	je     d3d3 <_IO_stdin_used+0x3d3>
    d36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    d36d:	74 20                	je     d38f <_IO_stdin_used+0x38f>
    d36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    d373:	74 65                	je     d3da <_IO_stdin_used+0x3da>
    d375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d376:	65 72 20             	gs jb  d399 <_IO_stdin_used+0x399>
    d379:	51                   	push   rcx
    d37a:	75 65                	jne    d3e1 <_IO_stdin_used+0x3e1>
    d37c:	72 79                	jb     d3f7 <_IO_stdin_used+0x3f7>
    d37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    d388:	53                   	push   rbx
    d389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    d392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d394:	00 1b                	add    BYTE PTR [rbx],bl
    d396:	5b                   	pop    rbx
    d397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    d39a:	00 00                	add    BYTE PTR [rax],al
    d39c:	00 00                	add    BYTE PTR [rax],al
    d39e:	00 00                	add    BYTE PTR [rax],al
    d3a0:	54                   	push   rsp
    d3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    d3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    d3a9:	70 20                	jo     d3cb <_IO_stdin_used+0x3cb>
    d3ab:	72 65                	jb     d412 <_IO_stdin_used+0x412>
    d3ad:	71 75                	jno    d424 <_IO_stdin_used+0x424>
    d3af:	65 73 74             	gs jae d426 <_IO_stdin_used+0x426>
    d3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    d3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63fc32 <_end+0x6f503c2a>
    d3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    d3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    d3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    d3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    d3d8:	65 73 74             	gs jae d44f <_IO_stdin_used+0x44f>
    d3db:	61                   	(bad)  
    d3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    d3dd:	70 20                	jo     d3ff <_IO_stdin_used+0x3ff>
    d3df:	61                   	(bad)  
    d3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    d3e1:	65 72 74             	gs jb  d458 <_IO_stdin_used+0x458>
    d3e4:	73 29                	jae    d40f <_IO_stdin_used+0x40f>
    d3e6:	0a 00                	or     al,BYTE PTR [rax]
    d3e8:	50                   	push   rax
    d3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d3ea:	73 73                	jae    d45f <_IO_stdin_used+0x45f>
    d3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    d3f3:	61                   	(bad)  
    d3f4:	70 20                	jo     d416 <_IO_stdin_used+0x416>
    d3f6:	68 6f 73 74 20       	push   0x2074736f
    d3fb:	61                   	(bad)  
    d3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    d3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    d404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    d407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    d40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d210f85 <_end+0x6d0d4f7d>
    d412:	61                   	(bad)  
    d413:	74 63                	je     d478 <_IO_stdin_used+0x478>
    d415:	68 65 64 20 49       	push   0x49206465
    d41a:	43                   	rex.XB
    d41b:	4d 50                	rex.WRB push r8
    d41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    d420:	68 6f 2c 20 54       	push   0x54202c6f
    d425:	43 50                	rex.XB push r8
    d427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    d42a:	4e 2c 20             	rex.WRX sub al,0x20
    d42d:	54                   	push   rsp
    d42e:	43 50                	rex.XB push r8
    d430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    d433:	4b 2c 20             	rex.WXB sub al,0x20
    d436:	61                   	(bad)  
    d437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    d43c:	4d 50                	rex.WRB push r8
    d43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    d442:	65 73 74             	gs jae d4b9 <_IO_stdin_used+0x4b9>
    d445:	61                   	(bad)  
    d446:	6d                   	ins    DWORD PTR es:[rdi],dx
    d447:	70 20                	jo     d469 <_IO_stdin_used+0x469>
    d449:	72 65                	jb     d4b0 <_IO_stdin_used+0x4b0>
    d44b:	71 75                	jno    d4c2 <_IO_stdin_used+0x4c2>
    d44d:	65 73 74             	gs jae d4c4 <_IO_stdin_used+0x4c4>
    d450:	0a 00                	or     al,BYTE PTR [rax]
    d452:	61                   	(bad)  
    d453:	00 00                	add    BYTE PTR [rax],al
    d455:	00 00                	add    BYTE PTR [rax],al
    d457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d45a:	73 73                	jae    d4cf <_IO_stdin_used+0x4cf>
    d45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    d463:	61                   	(bad)  
    d464:	70 20                	jo     d486 <_IO_stdin_used+0x486>
    d466:	68 6f 73 74 20       	push   0x2074736f
    d46b:	61                   	(bad)  
    d46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    d474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    d477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    d47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f4f5 <_end+0x744e34ed>
    d482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d210ffb <_end+0x6d0d4ff3>
    d488:	61                   	(bad)  
    d489:	74 63                	je     d4ee <_IO_stdin_used+0x4ee>
    d48b:	68 65 64 20 49       	push   0x49206465
    d490:	43                   	rex.XB
    d491:	4d 50                	rex.WRB push r8
    d493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    d496:	68 6f 2c 20 54       	push   0x54202c6f
    d49b:	43 50                	rex.XB push r8
    d49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    d4a0:	4e 2c 20             	rex.WRX sub al,0x20
    d4a3:	54                   	push   rsp
    d4a4:	43 50                	rex.XB push r8
    d4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    d4a9:	4b 2c 20             	rex.WXB sub al,0x20
    d4ac:	61                   	(bad)  
    d4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    d4b2:	4d 50                	rex.WRB push r8
    d4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    d4b8:	65 73 74             	gs jae d52f <_IO_stdin_used+0x52f>
    d4bb:	61                   	(bad)  
    d4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4bd:	70 20                	jo     d4df <_IO_stdin_used+0x4df>
    d4bf:	72 65                	jb     d526 <_IO_stdin_used+0x526>
    d4c1:	71 75                	jno    d538 <_IO_stdin_used+0x538>
    d4c3:	65 73 74             	gs jae d53a <_IO_stdin_used+0x53a>
    d4c6:	0a 00                	or     al,BYTE PTR [rax]
    d4c8:	49 50                	rex.WB push r8
    d4ca:	76 34                	jbe    d500 <_IO_stdin_used+0x500>
    d4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df545 <_end+0x3e1a353d>
    d4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900df4b <_end+0x8ed1f43>
    d4d8:	49                   	rex.WB
    d4d9:	43                   	rex.XB
    d4da:	4d 50                	rex.WRB push r8
    d4dc:	20 00                	and    BYTE PTR [rax],al
    d4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    d4e1:	68 6f 20 72 65       	push   0x6572206f
    d4e6:	70 6c                	jo     d554 <_IO_stdin_used+0x554>
    d4e8:	79 00                	jns    d4ea <_IO_stdin_used+0x4ea>
    d4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    d4ee:	74 69                	je     d559 <_IO_stdin_used+0x559>
    d4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4f1:	61                   	(bad)  
    d4f2:	74 69                	je     d55d <_IO_stdin_used+0x55d>
    d4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    d4f9:	72 65                	jb     d560 <_IO_stdin_used+0x560>
    d4fb:	61                   	(bad)  
    d4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d4ff:	62                   	(bad)  
    d500:	6c                   	ins    BYTE PTR es:[rdi],dx
    d501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    d504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    d507:	74 77                	je     d580 <_IO_stdin_used+0x580>
    d509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d50a:	72 6b                	jb     d577 <_IO_stdin_used+0x577>
    d50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d50f:	72 65                	jb     d576 <_IO_stdin_used+0x576>
    d511:	61                   	(bad)  
    d512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d515:	62                   	(bad)  
    d516:	6c                   	ins    BYTE PTR es:[rdi],dx
    d517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d51a:	00 20                	add    BYTE PTR [rax],ah
    d51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d51e:	73 74                	jae    d594 <_IO_stdin_used+0x594>
    d520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d523:	72 65                	jb     d58a <_IO_stdin_used+0x58a>
    d525:	61                   	(bad)  
    d526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d529:	62                   	(bad)  
    d52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d52e:	00 20                	add    BYTE PTR [rax],ah
    d530:	50                   	push   rax
    d531:	72 6f                	jb     d5a2 <_IO_stdin_used+0x5a2>
    d533:	74 6f                	je     d5a4 <_IO_stdin_used+0x5a4>
    d535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d53b:	72 65                	jb     d5a2 <_IO_stdin_used+0x5a2>
    d53d:	61                   	(bad)  
    d53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d541:	62                   	(bad)  
    d542:	6c                   	ins    BYTE PTR es:[rdi],dx
    d543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d546:	00 20                	add    BYTE PTR [rax],ah
    d548:	50                   	push   rax
    d549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d54a:	72 74                	jb     d5c0 <_IO_stdin_used+0x5c0>
    d54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d54f:	72 65                	jb     d5b6 <_IO_stdin_used+0x5b6>
    d551:	61                   	(bad)  
    d552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d555:	62                   	(bad)  
    d556:	6c                   	ins    BYTE PTR es:[rdi],dx
    d557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d55a:	00 20                	add    BYTE PTR [rax],ah
    d55c:	46 72 61             	rex.RX jb d5c0 <_IO_stdin_used+0x5c0>
    d55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    d561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d563:	74 61                	je     d5c6 <_IO_stdin_used+0x5c6>
    d565:	74 69                	je     d5d0 <_IO_stdin_used+0x5d0>
    d567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    d56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    d572:	00 20                	add    BYTE PTR [rax],ah
    d574:	53                   	push   rbx
    d575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d576:	75 72                	jne    d5ea <_IO_stdin_used+0x5ea>
    d578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d57b:	52                   	push   rdx
    d57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d57d:	75 74                	jne    d5f3 <_IO_stdin_used+0x5f3>
    d57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    d583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    d58a:	00 
    d58b:	00 00                	add    BYTE PTR [rax],al
    d58d:	00 00                	add    BYTE PTR [rax],al
    d58f:	00 20                	add    BYTE PTR [rax],ah
    d591:	44                   	rex.R
    d592:	65 73 74             	gs jae d609 <_IO_stdin_used+0x609>
    d595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    d59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    d59f:	74 77                	je     d618 <_IO_stdin_used+0x618>
    d5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5a2:	72 6b                	jb     d60f <_IO_stdin_used+0x60f>
    d5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d5a7:	72 65                	jb     d60e <_IO_stdin_used+0x60e>
    d5a9:	61                   	(bad)  
    d5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d5ad:	62                   	(bad)  
    d5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d5b2:	00 00                	add    BYTE PTR [rax],al
    d5b4:	00 00                	add    BYTE PTR [rax],al
    d5b6:	00 00                	add    BYTE PTR [rax],al
    d5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    d5bc:	74 69                	je     d627 <_IO_stdin_used+0x627>
    d5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5bf:	61                   	(bad)  
    d5c0:	74 69                	je     d62b <_IO_stdin_used+0x62b>
    d5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    d5c7:	73 74                	jae    d63d <_IO_stdin_used+0x63d>
    d5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d5cc:	72 65                	jb     d633 <_IO_stdin_used+0x633>
    d5ce:	61                   	(bad)  
    d5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d5d2:	62                   	(bad)  
    d5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    d5d7:	00 20                	add    BYTE PTR [rax],ah
    d5d9:	53                   	push   rbx
    d5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5db:	75 72                	jne    d64f <_IO_stdin_used+0x64f>
    d5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d5e2:	73 74                	jae    d658 <_IO_stdin_used+0x658>
    d5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    d5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5e9:	61                   	(bad)  
    d5ea:	74 65                	je     d651 <_IO_stdin_used+0x651>
    d5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    d5ef:	00 20                	add    BYTE PTR [rax],ah
    d5f1:	4e                   	rex.WRX
    d5f2:	65 74 77             	gs je  d66c <_IO_stdin_used+0x66c>
    d5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5f6:	72 6b                	jb     d663 <_IO_stdin_used+0x663>
    d5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    d603:	74 69                	je     d66e <_IO_stdin_used+0x66e>
    d605:	76 65                	jbe    d66c <_IO_stdin_used+0x66c>
    d607:	6c                   	ins    BYTE PTR es:[rdi],dx
    d608:	79 20                	jns    d62a <_IO_stdin_used+0x62a>
    d60a:	50                   	push   rax
    d60b:	72 6f                	jb     d67c <_IO_stdin_used+0x67c>
    d60d:	68 69 62 69 74       	push   0x74696269
    d612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    d616:	00 00                	add    BYTE PTR [rax],al
    d618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    d61b:	73 74                	jae    d691 <_IO_stdin_used+0x691>
    d61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d620:	6d                   	ins    DWORD PTR es:[rdi],dx
    d621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    d628:	74 69                	je     d693 <_IO_stdin_used+0x693>
    d62a:	76 65                	jbe    d691 <_IO_stdin_used+0x691>
    d62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d62d:	79 20                	jns    d64f <_IO_stdin_used+0x64f>
    d62f:	50                   	push   rax
    d630:	72 6f                	jb     d6a1 <_IO_stdin_used+0x6a1>
    d632:	68 69 62 69 74       	push   0x74696269
    d637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    d63b:	00 00                	add    BYTE PTR [rax],al
    d63d:	00 00                	add    BYTE PTR [rax],al
    d63f:	00 20                	add    BYTE PTR [rax],ah
    d641:	4e                   	rex.WRX
    d642:	65 74 77             	gs je  d6bc <_IO_stdin_used+0x6bc>
    d645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d646:	72 6b                	jb     d6b3 <_IO_stdin_used+0x6b3>
    d648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d64b:	72 65                	jb     d6b2 <_IO_stdin_used+0x6b2>
    d64d:	61                   	(bad)  
    d64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d651:	62                   	(bad)  
    d652:	6c                   	ins    BYTE PTR es:[rdi],dx
    d653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d657:	72 20                	jb     d679 <_IO_stdin_used+0x679>
    d659:	54                   	push   rsp
    d65a:	4f 53                	rex.WRXB push r11
    d65c:	20 29                	and    BYTE PTR [rcx],ch
    d65e:	00 20                	add    BYTE PTR [rax],ah
    d660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d662:	73 74                	jae    d6d8 <_IO_stdin_used+0x6d8>
    d664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    d667:	72 65                	jb     d6ce <_IO_stdin_used+0x6ce>
    d669:	61                   	(bad)  
    d66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d66d:	62                   	(bad)  
    d66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d673:	72 20                	jb     d695 <_IO_stdin_used+0x695>
    d675:	54                   	push   rsp
    d676:	4f 53                	rex.WRXB push r11
    d678:	20 29                	and    BYTE PTR [rcx],ch
    d67a:	00 00                	add    BYTE PTR [rax],al
    d67c:	00 00                	add    BYTE PTR [rax],al
    d67e:	00 00                	add    BYTE PTR [rax],al
    d680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    d683:	6d                   	ins    DWORD PTR es:[rdi],dx
    d684:	6d                   	ins    DWORD PTR es:[rdi],dx
    d685:	75 6e                	jne    d6f5 <_IO_stdin_used+0x6f5>
    d687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    d68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d691:	6d                   	ins    DWORD PTR es:[rdi],dx
    d692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    d699:	74 69                	je     d704 <_IO_stdin_used+0x704>
    d69b:	76 65                	jbe    d702 <_IO_stdin_used+0x702>
    d69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    d69e:	79 20                	jns    d6c0 <_IO_stdin_used+0x6c0>
    d6a0:	50                   	push   rax
    d6a1:	72 6f                	jb     d712 <_IO_stdin_used+0x712>
    d6a3:	68 69 62 69 74       	push   0x74696269
    d6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    d6ac:	00 20                	add    BYTE PTR [rax],ah
    d6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d6b0:	73 74                	jae    d726 <_IO_stdin_used+0x726>
    d6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    d6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    d6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d6be:	56                   	push   rsi
    d6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    d6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6c7:	20 29                	and    BYTE PTR [rcx],ch
    d6c9:	00 00                	add    BYTE PTR [rax],al
    d6cb:	00 00                	add    BYTE PTR [rax],al
    d6cd:	00 00                	add    BYTE PTR [rax],al
    d6cf:	00 20                	add    BYTE PTR [rax],ah
    d6d1:	50                   	push   rax
    d6d2:	72 65                	jb     d739 <_IO_stdin_used+0x739>
    d6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    d6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d6dc:	43 75 74             	rex.XB jne d753 <_IO_stdin_used+0x753>
    d6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    d6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    d6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    d6ee:	00 20                	add    BYTE PTR [rax],ah
    d6f0:	55                   	push   rbp
    d6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    d6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    d701:	0a 00                	or     al,BYTE PTR [rax]
    d703:	00 00                	add    BYTE PTR [rax],al
    d705:	00 00                	add    BYTE PTR [rax],al
    d707:	00 20                	add    BYTE PTR [rax],ah
    d709:	53                   	push   rbx
    d70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d70b:	75 72                	jne    d77f <_IO_stdin_used+0x77f>
    d70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d710:	51                   	push   rcx
    d711:	75 65                	jne    d778 <_IO_stdin_used+0x778>
    d713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    d717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    d71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d71b:	77 20                	ja     d73d <_IO_stdin_used+0x73d>
    d71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    d720:	74 72                	je     d794 <_IO_stdin_used+0x794>
    d722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d723:	6c                   	ins    BYTE PTR es:[rdi],dx
    d724:	20 29                	and    BYTE PTR [rcx],ch
    d726:	00 20                	add    BYTE PTR [rax],ah
    d728:	52                   	push   rdx
    d729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    d730:	20 28 
    d732:	00 20                	add    BYTE PTR [rax],ah
    d734:	52                   	push   rdx
    d735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    d73c:	20 66 
    d73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d73f:	72 20                	jb     d761 <_IO_stdin_used+0x761>
    d741:	4e                   	rex.WRX
    d742:	65 74 77             	gs je  d7bc <_IO_stdin_used+0x7bc>
    d745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d746:	72 6b                	jb     d7b3 <_IO_stdin_used+0x7b3>
    d748:	20 29                	and    BYTE PTR [rcx],ch
    d74a:	00 20                	add    BYTE PTR [rax],ah
    d74c:	52                   	push   rdx
    d74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    d754:	20 66 
    d756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d757:	72 20                	jb     d779 <_IO_stdin_used+0x779>
    d759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    d75b:	73 74                	jae    d7d1 <_IO_stdin_used+0x7d1>
    d75d:	20 29                	and    BYTE PTR [rcx],ch
    d75f:	00 20                	add    BYTE PTR [rax],ah
    d761:	52                   	push   rdx
    d762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    d769:	20 66 
    d76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d76c:	72 20                	jb     d78e <_IO_stdin_used+0x78e>
    d76e:	54                   	push   rsp
    d76f:	4f 53                	rex.WRXB push r11
    d771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    d774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    d778:	74 77                	je     d7f1 <_IO_stdin_used+0x7f1>
    d77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d77b:	72 6b                	jb     d7e8 <_IO_stdin_used+0x7e8>
    d77d:	20 29                	and    BYTE PTR [rcx],ch
    d77f:	00 20                	add    BYTE PTR [rax],ah
    d781:	52                   	push   rdx
    d782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    d789:	20 66 
    d78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d78c:	72 20                	jb     d7ae <_IO_stdin_used+0x7ae>
    d78e:	54                   	push   rsp
    d78f:	4f 53                	rex.WRXB push r11
    d791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    d794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    d798:	73 74                	jae    d80e <_IO_stdin_used+0x80e>
    d79a:	20 29                	and    BYTE PTR [rcx],ch
    d79c:	00 20                	add    BYTE PTR [rax],ah
    d79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    d7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d7a5:	71 75                	jno    d81c <_IO_stdin_used+0x81c>
    d7a7:	65 73 74             	gs jae d81e <_IO_stdin_used+0x81e>
    d7aa:	00 00                	add    BYTE PTR [rax],al
    d7ac:	00 00                	add    BYTE PTR [rax],al
    d7ae:	00 00                	add    BYTE PTR [rax],al
    d7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    d7b3:	62                   	(bad)  
    d7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    d7bb:	41 
    d7bc:	64 76 65             	fs jbe d824 <_IO_stdin_used+0x824>
    d7bf:	72 74                	jb     d835 <_IO_stdin_used+0x835>
    d7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    d7c8:	20 28                	and    BYTE PTR [rax],ch
    d7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    d7cc:	72 6d                	jb     d83b <_IO_stdin_used+0x83b>
    d7ce:	61                   	(bad)  
    d7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    d7d3:	75 74                	jne    d849 <_IO_stdin_used+0x849>
    d7d5:	65 72 20             	gs jb  d7f8 <_IO_stdin_used+0x7f8>
    d7d8:	41                   	rex.B
    d7d9:	64 76 65             	fs jbe d841 <_IO_stdin_used+0x841>
    d7dc:	72 74                	jb     d852 <_IO_stdin_used+0x852>
    d7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    d7e5:	20 29                	and    BYTE PTR [rcx],ch
    d7e7:	20 29                	and    BYTE PTR [rcx],ch
    d7e9:	0a 20                	or     ah,BYTE PTR [rax]
    d7eb:	00 00                	add    BYTE PTR [rax],al
    d7ed:	00 00                	add    BYTE PTR [rax],al
    d7ef:	00 20                	add    BYTE PTR [rax],ah
    d7f1:	52                   	push   rdx
    d7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7f3:	75 74                	jne    d869 <_IO_stdin_used+0x869>
    d7f5:	65 72 20             	gs jb  d818 <_IO_stdin_used+0x818>
    d7f8:	41                   	rex.B
    d7f9:	64 76 65             	fs jbe d861 <_IO_stdin_used+0x861>
    d7fc:	72 74                	jb     d872 <_IO_stdin_used+0x872>
    d7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    d805:	20 28                	and    BYTE PTR [rax],ch
    d807:	55                   	push   rbp
    d808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    d811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    d815:	25 64 20 29 20       	and    eax,0x20292064
    d81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    d81c:	00 20                	add    BYTE PTR [rax],ah
    d81e:	52                   	push   rdx
    d81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d820:	75 74                	jne    d896 <_IO_stdin_used+0x896>
    d822:	65 72 20             	gs jb  d845 <_IO_stdin_used+0x845>
    d825:	53                   	push   rbx
    d826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d827:	6c                   	ins    BYTE PTR es:[rdi],dx
    d828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    d82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d831:	20 29                	and    BYTE PTR [rcx],ch
    d833:	00 20                	add    BYTE PTR [rax],ah
    d835:	54                   	push   rsp
    d836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    d83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    d844:	63 
    d845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    d84c:	28 20                	sub    BYTE PTR [rax],ah
    d84e:	74 74                	je     d8c4 <_IO_stdin_used+0x8c4>
    d850:	6c                   	ins    BYTE PTR es:[rdi],dx
    d851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    d854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    d857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    d85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    d861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d862:	73 69                	jae    d8cd <_IO_stdin_used+0x8cd>
    d864:	74 20                	je     d886 <_IO_stdin_used+0x886>
    d866:	29 00                	sub    DWORD PTR [rax],eax
    d868:	20 28                	and    BYTE PTR [rax],ch
    d86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    d86d:	61                   	(bad)  
    d86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    d870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d872:	74 20                	je     d894 <_IO_stdin_used+0x894>
    d874:	52                   	push   rdx
    d875:	65 61                	gs (bad) 
    d877:	73 73                	jae    d8ec <_IO_stdin_used+0x8ec>
    d879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    d87b:	62                   	(bad)  
    d87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d87d:	79 20                	jns    d89f <_IO_stdin_used+0x89f>
    d87f:	74 69                	je     d8ea <_IO_stdin_used+0x8ea>
    d881:	6d                   	ins    DWORD PTR es:[rdi],dx
    d882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    d886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    d889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    d88e:	00 20                	add    BYTE PTR [rax],ah
    d890:	28 20                	sub    BYTE PTR [rax],ah
    d892:	55                   	push   rbp
    d893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    d89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    d8a0:	25 64 29 0a 00       	and    eax,0xa2964
    d8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    d8a9:	65 73 74             	gs jae d920 <_IO_stdin_used+0x920>
    d8ac:	61                   	(bad)  
    d8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8ae:	70 20                	jo     d8d0 <_IO_stdin_used+0x8d0>
    d8b0:	72 65                	jb     d917 <_IO_stdin_used+0x917>
    d8b2:	71 75                	jno    d929 <_IO_stdin_used+0x929>
    d8b4:	65 73 74             	gs jae d92b <_IO_stdin_used+0x92b>
    d8b7:	00 20                	add    BYTE PTR [rax],ah
    d8b9:	74 69                	je     d924 <_IO_stdin_used+0x924>
    d8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8bc:	65 73 74             	gs jae d933 <_IO_stdin_used+0x933>
    d8bf:	61                   	(bad)  
    d8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8c1:	70 20                	jo     d8e3 <_IO_stdin_used+0x8e3>
    d8c3:	72 65                	jb     d92a <_IO_stdin_used+0x92a>
    d8c5:	70 6c                	jo     d933 <_IO_stdin_used+0x933>
    d8c7:	79 00                	jns    d8c9 <_IO_stdin_used+0x8c9>
    d8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    d8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    d8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    d8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8d5:	70 20                	jo     d8f7 <_IO_stdin_used+0x8f7>
    d8d7:	74 79                	je     d952 <_IO_stdin_used+0x952>
    d8d9:	70 65                	jo     d940 <_IO_stdin_used+0x940>
    d8db:	3d 25 64 00 00       	cmp    eax,0x6425
    d8e0:	fc                   	cld    
    d8e1:	67 ff                	addr32 (bad) 
    d8e3:	ff 1f                	call   FWORD PTR [rdi]
    d8e5:	6b ff ff             	imul   edi,edi,0xffffffff
    d8e8:	1f                   	(bad)  
    d8e9:	6b ff ff             	imul   edi,edi,0xffffffff
    d8ec:	0d 68 ff ff 7a       	or     eax,0x7affff68
    d8f1:	69 ff ff 8b 69 ff    	imul   edi,edi,0xff698bff
    d8f7:	ff 1f                	call   FWORD PTR [rdi]
    d8f9:	6b ff ff             	imul   edi,edi,0xffffffff
    d8fc:	1f                   	(bad)  
    d8fd:	6b ff ff             	imul   edi,edi,0xffffffff
    d900:	28 6a ff             	sub    BYTE PTR [rdx-0x1],ch
    d903:	ff                   	(bad)  
    d904:	39 6a ff             	cmp    DWORD PTR [rdx-0x1],ebp
    d907:	ff 84 6a ff ff 95 6a 	inc    DWORD PTR [rdx+rbp*2+0x6a95ffff]
    d90e:	ff                   	(bad)  
    d90f:	ff 1f                	call   FWORD PTR [rdi]
    d911:	6b ff ff             	imul   edi,edi,0xffffffff
    d914:	03 6b ff             	add    ebp,DWORD PTR [rbx-0x1]
    d917:	ff 11                	call   QWORD PTR [rcx]
    d919:	6b ff ff             	imul   edi,edi,0xffffffff
    d91c:	1c 68                	sbb    al,0x68
    d91e:	ff                   	(bad)  
    d91f:	ff 2d 68 ff ff 3e    	jmp    FWORD PTR [rip+0x3effff68]        # 3f00d88d <_end+0x3eed1885>
    d925:	68 ff ff 4f 68       	push   0x684fffff
    d92a:	ff                   	(bad)  
    d92b:	ff 60 68             	jmp    QWORD PTR [rax+0x68]
    d92e:	ff                   	(bad)  
    d92f:	ff 71 68             	push   QWORD PTR [rcx+0x68]
    d932:	ff                   	(bad)  
    d933:	ff 82 68 ff ff 93    	inc    DWORD PTR [rdx-0x6c000098]
    d939:	68 ff ff a4 68       	push   0x68a4ffff
    d93e:	ff                   	(bad)  
    d93f:	ff b5 68 ff ff c3    	push   QWORD PTR [rbp-0x3c000098]
    d945:	68 ff ff d1 68       	push   0x68d1ffff
    d94a:	ff                   	(bad)  
    d94b:	ff                   	(bad)  
    d94c:	df 68 ff             	fild   QWORD PTR [rax-0x1]
    d94f:	ff                   	(bad)  
    d950:	ed                   	in     eax,dx
    d951:	68 ff ff fb 68       	push   0x68fbffff
    d956:	ff                   	(bad)  
    d957:	ff 09                	dec    DWORD PTR [rcx]
    d959:	69 ff ff 00 00 00    	imul   edi,edi,0xff
    d95f:	00 1b                	add    BYTE PTR [rbx],bl
    d961:	5b                   	pop    rbx
    d962:	33 32                	xor    esi,DWORD PTR [rdx]
    d964:	6d                   	ins    DWORD PTR es:[rdi],dx
    d965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049d9de <_end+0x503619d6>
    d96b:	76 34                	jbe    d9a1 <_IO_stdin_used+0x9a1>
    d96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613e6 <_end+0x641253de>
    d973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9b7 <_end+0x731239af>
    d979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900e3e3 <_end+0x8ed23db>
    d97f:	54                   	push   rsp
    d980:	43 50                	rex.XB push r8
    d982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    d985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    d98b:	25 73 20 41 43       	and    eax,0x43412073
    d990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    d993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d996:	37                   	(bad)  
    d997:	6d                   	ins    DWORD PTR es:[rdi],dx
    d998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946fa11 <_end+0x49333a09>
    d99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    d9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d9a4:	34 6d                	xor    al,0x6d
    d9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350fa1f <_end+0x533d3a17>
    d9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    d9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    d9b5:	25 73 20 52 53       	and    eax,0x53522073
    d9ba:	54                   	push   rsp
    d9bb:	20 00                	and    BYTE PTR [rax],al
    d9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    d9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    d9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    d9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    d9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    d9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255fa49 <_end+0x52423a41>
    d9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    d9d9:	5d                   	pop    rbp
    d9da:	00 1b                	add    BYTE PTR [rbx],bl
    d9dc:	5b                   	pop    rbx
    d9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    d9e0:	25 73 53 75 73       	and    eax,0x73755373
    d9e5:	70 69                	jo     da50 <_IO_stdin_used+0xa50>
    d9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    d9ea:	75 73                	jne    da5f <_IO_stdin_used+0xa5f>
    d9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    d9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d9f6:	74 20                	je     da18 <_IO_stdin_used+0xa18>
    d9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d9fd:	74 65                	je     da64 <_IO_stdin_used+0xa64>
    d9ff:	72 65                	jb     da66 <_IO_stdin_used+0xa66>
    da01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    da04:	25 73 3a 25 64       	and    eax,0x64253a73
    da09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa4d <_end+0x73123a45>
    da0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 25210679 <_end+0x250d4671>
    da15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    da19:	61                   	(bad)  
    da1a:	67 73 25             	addr32 jae da42 <_IO_stdin_used+0xa42>
    da1d:	73 0a                	jae    da29 <_IO_stdin_used+0xa29>
    da1f:	00 1b                	add    BYTE PTR [rbx],bl
    da21:	5b                   	pop    rbx
    da22:	39 36                	cmp    DWORD PTR [rsi],esi
    da24:	6d                   	ins    DWORD PTR es:[rdi],dx
    da25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049da9e <_end+0x50361a96>
    da2b:	76 34                	jbe    da61 <_IO_stdin_used+0xa61>
    da2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614a6 <_end+0x6412549e>
    da33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa77 <_end+0x73123a6f>
    da39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455faa3 <_end+0x44423a9b>
    da3f:	50                   	push   rax
    da40:	0a 00                	or     al,BYTE PTR [rax]
    da42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    da45:	6d                   	ins    DWORD PTR es:[rdi],dx
    da46:	00 00                	add    BYTE PTR [rax],al
    da48:	49 50                	rex.WB push r8
    da4a:	76 34                	jbe    da80 <_IO_stdin_used+0xa80>
    da4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    da4f:	4d 50                	rex.WRB push r8
    da51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfaca <_end+0x3e1a3ac2>
    da57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bfad0 <_end+0x483ac8>
    da5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    da60:	6d                   	ins    DWORD PTR es:[rdi],dx
    da61:	62                   	(bad)  
    da62:	65 72 73             	gs jb  dad8 <_IO_stdin_used+0xad8>
    da65:	68 69 70 20 51       	push   0x51207069
    da6a:	75 65                	jne    dad1 <_IO_stdin_used+0xad1>
    da6c:	72 79                	jb     dae7 <_IO_stdin_used+0xae7>
    da6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    da71:	00 00                	add    BYTE PTR [rax],al
    da73:	00 00                	add    BYTE PTR [rax],al
    da75:	00 00                	add    BYTE PTR [rax],al
    da77:	00 20                	add    BYTE PTR [rax],ah
    da79:	4d                   	rex.WRB
    da7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    da7c:	62                   	(bad)  
    da7d:	65 72 73             	gs jb  daf3 <_IO_stdin_used+0xaf3>
    da80:	68 69 70 20 52       	push   0x52207069
    da85:	65 70 6f             	gs jo  daf7 <_IO_stdin_used+0xaf7>
    da88:	72 74                	jb     dafe <_IO_stdin_used+0xafe>
    da8a:	20 2f                	and    BYTE PTR [rdi],ch
    da8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    da8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    da96:	70 20                	jo     dab8 <_IO_stdin_used+0xab8>
    da98:	25 73 20 66 6f       	and    eax,0x6f662073
    da9d:	72 20                	jb     dabf <_IO_stdin_used+0xabf>
    da9f:	61                   	(bad)  
    daa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    daa1:	79 20                	jns    dac3 <_IO_stdin_used+0xac3>
    daa3:	73 6f                	jae    db14 <_IO_stdin_used+0xb14>
    daa5:	75 72                	jne    db19 <_IO_stdin_used+0xb19>
    daa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    daaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    daad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    dab8:	4d 50                	rex.WRB push r8
    daba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    dabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    dac4:	0a 00                	or     al,BYTE PTR [rax]
    dac6:	25 64 2d 25 30       	and    eax,0x30252d64
    dacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    dacf:	30 32                	xor    BYTE PTR [rdx],dh
    dad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a650d08 <_end+0x3a514d00>
    dad8:	25 30 32 64 3a       	and    eax,0x3a643230
    dadd:	25 30 32 64 00       	and    eax,0x643230
    dae2:	25 73 20 25 73       	and    eax,0x73252073
    dae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfb60 <_end+0x3e1a3b58>
    daed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500e566 <_end+0x24ed255e>
    daf3:	73 20                	jae    db15 <_IO_stdin_used+0xb15>
    daf5:	25 73 20 25 73       	and    eax,0x73252073
    dafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2dfb64 <_end+0x3e1a3b5c>
    db00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261579 <_end+0x64125571>
    db06:	0a 00                	or     al,BYTE PTR [rax]
    db08:	25 73 00 61 00       	and    eax,0x610073
    db0d:	25 30 32 78 00       	and    eax,0x783230
    db12:	00 00                	add    BYTE PTR [rax],al
    db14:	00 00                	add    BYTE PTR [rax],al
    db16:	00 00                	add    BYTE PTR [rax],al
    db18:	72 00                	jb     db1a <_IO_stdin_used+0xb1a>
    db1a:	00 00                	add    BYTE PTR [rax],al
    db1c:	00 00                	add    BYTE PTR [rax],al
    db1e:	00 00                	add    BYTE PTR [rax],al
    db20:	45 72 72             	rex.RB jb db95 <_IO_stdin_used+0xb95>
    db23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db24:	72 20                	jb     db46 <_IO_stdin_used+0xb46>
    db26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db27:	70 65                	jo     db8e <_IO_stdin_used+0xb8e>
    db29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    db31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    db37:	74 69                	je     dba2 <_IO_stdin_used+0xba2>
    db39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    db3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    db3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    db42:	25 73 0a 00 0a       	and    eax,0xa000a73
    db47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    db4a:	72 69                	jb     dbb5 <_IO_stdin_used+0xbb5>
    db4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    db50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    db53:	5f                   	pop    rdi
    db54:	74 69                	je     dbbf <_IO_stdin_used+0xbbf>
    db56:	6d                   	ins    DWORD PTR es:[rdi],dx
    db57:	65 73 74             	gs jae dbce <_IO_stdin_used+0xbce>
    db5a:	61                   	(bad)  
    db5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    db5c:	70 5f                	jo     dbbd <_IO_stdin_used+0xbbd>
    db5e:	72 65                	jb     dbc5 <_IO_stdin_used+0xbc5>
    db60:	71 3d                	jno    db9f <_IO_stdin_used+0xb9f>
    db62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    db65:	53                   	push   rbx
    db66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    db69:	72 69                	jb     dbd4 <_IO_stdin_used+0xbd4>
    db6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    db6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    db70:	61                   	(bad)  
    db71:	70 5f                	jo     dbd2 <_IO_stdin_used+0xbd2>
    db73:	68 6f 73 74 5f       	push   0x5f74736f
    db78:	61                   	(bad)  
    db79:	6c                   	ins    BYTE PTR es:[rdi],dx
    db7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    db81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    db84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    db87:	65 61                	gs (bad) 
    db89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db8a:	5f                   	pop    rdi
    db8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    db8e:	61                   	(bad)  
    db8f:	79 5f                	jns    dbf0 <_IO_stdin_used+0xbf0>
    db91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    db98:	65 74 73             	gs je  dc0e <_IO_stdin_used+0xc0e>
    db9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    dba0:	61                   	(bad)  
    dba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    dba6:	61                   	(bad)  
    dba7:	79 20                	jns    dbc9 <_IO_stdin_used+0xbc9>
    dba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbaa:	65 65 64 73 20       	gs gs fs jae dbcf <_IO_stdin_used+0xbcf>
    dbaf:	61                   	(bad)  
    dbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb4:	75 65                	jne    dc1b <_IO_stdin_used+0xc1b>
    dbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    dbb9:	65 61                	gs (bad) 
    dbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbbc:	5f                   	pop    rdi
    dbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    dbc0:	61                   	(bad)  
    dbc1:	79 5f                	jns    dc22 <_IO_stdin_used+0xc22>
    dbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    dbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbcc:	64 73 3d             	fs jae dc0c <_IO_stdin_used+0xc0c>
    dbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    dbd2:	65 5f                	gs pop rdi
    dbd4:	73 71                	jae    dc47 <_IO_stdin_used+0xc47>
    dbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    dbde:	6c 
    dbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    dbe6:	61 
    dbe7:	62 61                	(bad)  
    dbe9:	73 65                	jae    dc50 <_IO_stdin_used+0xc50>
    dbeb:	5f                   	pop    rdi
    dbec:	70 61                	jo     dc4f <_IO_stdin_used+0xc4f>
    dbee:	74 68                	je     dc58 <_IO_stdin_used+0xc58>
    dbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    dbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    dbfc:	61 
    dbfd:	62 61                	(bad)  
    dbff:	73 65                	jae    dc66 <_IO_stdin_used+0xc66>
    dc01:	5f                   	pop    rdi
    dc02:	70 61                	jo     dc65 <_IO_stdin_used+0xc65>
    dc04:	74 68                	je     dc6e <_IO_stdin_used+0xc6e>
    dc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    dc08:	25 73 00 69 6e       	and    eax,0x6e690073
    dc0d:	5f                   	pop    rdi
    dc0e:	61                   	(bad)  
    dc0f:	64 61                	fs (bad) 
    dc11:	70 74                	jo     dc87 <_IO_stdin_used+0xc87>
    dc13:	65 72 3d             	gs jb  dc53 <_IO_stdin_used+0xc53>
    dc16:	00 00                	add    BYTE PTR [rax],al
    dc18:	72 75                	jb     dc8f <_IO_stdin_used+0xc8f>
    dc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc1b:	65 5f                	gs pop rdi
    dc1d:	70 61                	jo     dc80 <_IO_stdin_used+0xc80>
    dc1f:	72 73                	jb     dc94 <_IO_stdin_used+0xc94>
    dc21:	65 72 2e             	gs jb  dc52 <_IO_stdin_used+0xc52>
    dc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    dc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc2a:	65 5f                	gs pop rdi
    dc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    dc34:	70 61                	jo     dc97 <_IO_stdin_used+0xc97>
    dc36:	72 73                	jb     dcab <_IO_stdin_used+0xcab>
    dc38:	65 72 3a             	gs jb  dc75 <_IO_stdin_used+0xc75>
    dc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    dc3e:	5f                   	pop    rdi
    dc3f:	61                   	(bad)  
    dc40:	64 61                	fs (bad) 
    dc42:	70 74                	jo     dcb8 <_IO_stdin_used+0xcb8>
    dc44:	65 72 3a             	gs jb  dc81 <_IO_stdin_used+0xc81>
    dc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fdcc0 <_end+0x755c1cb8>
    dc4d:	74 5f                	je     dcae <_IO_stdin_used+0xcae>
    dc4f:	61                   	(bad)  
    dc50:	64 61                	fs (bad) 
    dc52:	70 74                	jo     dcc8 <_IO_stdin_used+0xcc8>
    dc54:	65 72 3d             	gs jb  dc94 <_IO_stdin_used+0xc94>
    dc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    dc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc5b:	65 5f                	gs pop rdi
    dc5d:	70 61                	jo     dcc0 <_IO_stdin_used+0xcc0>
    dc5f:	72 73                	jb     dcd4 <_IO_stdin_used+0xcd4>
    dc61:	65 72 2e             	gs jb  dc92 <_IO_stdin_used+0xc92>
    dc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    dc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc6a:	65 5f                	gs pop rdi
    dc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    dc74:	70 61                	jo     dcd7 <_IO_stdin_used+0xcd7>
    dc76:	72 73                	jb     dceb <_IO_stdin_used+0xceb>
    dc78:	65 72 3a             	gs jb  dcb5 <_IO_stdin_used+0xcb5>
    dc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    dc7e:	74 5f                	je     dcdf <_IO_stdin_used+0xcdf>
    dc80:	61                   	(bad)  
    dc81:	64 61                	fs (bad) 
    dc83:	70 74                	jo     dcf9 <_IO_stdin_used+0xcf9>
    dc85:	65 72 3a             	gs jb  dcc2 <_IO_stdin_used+0xcc2>
    dc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6ddd01 <_end+0x6f5a1cf9>
    dc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    dc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    dc98:	25 73 00 52 75       	and    eax,0x75520073
    dc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    dca6:	00 32                	add    BYTE PTR [rdx],dh
    dca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    dcab:	53                   	push   rbx
    dcac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    dcaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    dcb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    dcb7:	72 20                	jb     dcd9 <_IO_stdin_used+0xcd9>
    dcb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dcbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    dcc2:	53                   	push   rbx
    dcc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    dcc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    dccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    dcce:	72 20                	jb     dcf0 <_IO_stdin_used+0xcf0>
    dcd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dcd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    dcd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    dcdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    dce3:	61                   	(bad)  
    dce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce5:	5f                   	pop    rdi
    dce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    dced:	65 72 20             	gs jb  dd10 <_IO_stdin_used+0xd10>
    dcf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dcf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    dcf9:	73 00                	jae    dcfb <_IO_stdin_used+0xcfb>
    dcfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja dd3e <_IO_stdin_used+0xd3e>
    dd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    dd04:	65 5f                	gs pop rdi
    dd06:	73 70                	jae    dd78 <_IO_stdin_used+0xd78>
    dd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a3312 <_end+0x4736730a>
    dd0f:	4c 20 53 
    dd12:	50                   	push   rax
    dd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    dd17:	72 76                	jb     dd8f <_IO_stdin_used+0xd8f>
    dd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    dd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    dd27:	45 5f                	rex.RB pop r15
    dd29:	4e                   	rex.WRX
    dd2a:	45 54                	rex.RB push r12
    dd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    dd31:	45 5f                	rex.RB pop r15
    dd33:	4e                   	rex.WRX
    dd34:	45 54                	rex.RB push r12
    dd36:	5f                   	pop    rdi
    dd37:	4d                   	rex.WRB
    dd38:	41 53                	push   r11
    dd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    dd40:	61                   	(bad)  
    dd41:	74 69                	je     ddac <_IO_stdin_used+0xdac>
    dd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    dd4a:	65 72 6e             	gs jb  ddbb <_IO_stdin_used+0xdbb>
    dd4d:	61                   	(bad)  
    dd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    dd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd53:	74 61                	je     ddb6 <_IO_stdin_used+0xdb6>
    dd55:	78 20                	js     dd77 <_IO_stdin_used+0xd77>
    dd57:	65 72 72             	gs jb  ddcc <_IO_stdin_used+0xdcc>
    dd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd5b:	72 20                	jb     dd7d <_IO_stdin_used+0xd7d>
    dd5d:	61                   	(bad)  
    dd5e:	74 20                	je     dd80 <_IO_stdin_used+0xd80>
    dd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    dd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e7e1 <_IO_stdin_used+0x17e1>
    dd6e:	00 00                	add    BYTE PTR [rax],al
    dd70:	45 72 72             	rex.RB jb dde5 <_IO_stdin_used+0xde5>
    dd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd74:	72 20                	jb     dd96 <_IO_stdin_used+0xd96>
    dd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd77:	70 65                	jo     ddde <_IO_stdin_used+0xdde>
    dd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    dd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    dd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    dd89:	25 73 2e 20 52       	and    eax,0x52202e73
    dd8e:	65 66 75 73          	gs data16 jne de05 <_IO_stdin_used+0xe05>
    dd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    dd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dd9c:	74 69                	je     de07 <_IO_stdin_used+0xe07>
    dd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd9f:	75 65                	jne    de06 <_IO_stdin_used+0xe06>
    dda1:	0a 00                	or     al,BYTE PTR [rax]
    dda3:	50                   	push   rax
    dda4:	61                   	(bad)  
    dda5:	72 73                	jb     de1a <_IO_stdin_used+0xe1a>
    dda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    ddae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100e828 <_end+0x60ed2820>
    ddb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddb6:	65 72 74             	gs jb  de2d <_IO_stdin_used+0xe2d>
    ddb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    ddbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ddbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    ddc4:	61                   	(bad)  
    ddc5:	72 73                	jb     de3a <_IO_stdin_used+0xe3a>
    ddc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    ddce:	00 00                	add    BYTE PTR [rax],al
    ddd0:	45 72 72             	rex.RB jb de45 <_IO_stdin_used+0xe45>
    ddd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ddd4:	72 20                	jb     ddf6 <_IO_stdin_used+0xdf6>
    ddd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ddd7:	70 65                	jo     de3e <_IO_stdin_used+0xe3e>
    ddd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ddda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    dde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    dde3:	72 20                	jb     de05 <_IO_stdin_used+0xe05>
    dde5:	65 78 70             	gs js  de58 <_IO_stdin_used+0xe58>
    dde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    dde9:	2f                   	(bad)  
    ddea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    ddf1:	74 20                	je     de13 <_IO_stdin_used+0xe13>
    ddf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    ddf6:	79 20                	jns    de18 <_IO_stdin_used+0xe18>
    ddf8:	70 61                	jo     de5b <_IO_stdin_used+0xe5b>
    ddfa:	72 73                	jb     de6f <_IO_stdin_used+0xe6f>
    ddfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    de03:	76 34                	jbe    de39 <_IO_stdin_used+0xe39>
    de05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    de08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de0f:	20 
    de10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de11:	70 65                	jo     de78 <_IO_stdin_used+0xe78>
    de13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e88d <_IO_stdin_used+0x188d>
    de1a:	00 00                	add    BYTE PTR [rax],al
    de1c:	00 00                	add    BYTE PTR [rax],al
    de1e:	00 00                	add    BYTE PTR [rax],al
    de20:	52                   	push   rdx
    de21:	55                   	push   rbp
    de22:	4e                   	rex.WRX
    de23:	4e                   	rex.WRX
    de24:	49                   	rex.WB
    de25:	4e                   	rex.WRX
    de26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    de2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    de2e:	4f                   	rex.WRXB
    de2f:	4e 53                	rex.WRX push rbx
    de31:	54                   	push   rsp
    de32:	52                   	push   rdx
    de33:	41 54                	push   r12
    de35:	49                   	rex.WB
    de36:	4f                   	rex.WRXB
    de37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    de3b:	44                   	rex.R
    de3c:	45                   	rex.RB
    de3d:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    de41:	55                   	push   rbp
    de42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    de45:	56                   	push   rsi
    de46:	45 20 31             	and    BYTE PTR [r9],r14b
    de49:	30 20                	xor    BYTE PTR [rax],ah
    de4b:	53                   	push   rbx
    de4c:	45                   	rex.RB
    de4d:	43                   	rex.XB
    de4e:	4f                   	rex.WRXB
    de4f:	4e                   	rex.WRX
    de50:	44 53                	rex.R push rbx
    de52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    de56:	41                   	rex.B
    de57:	42                   	rex.X
    de58:	4f 52                	rex.WRXB push r10
    de5a:	54                   	push   rsp
    de5b:	2e 00 00             	cs add BYTE PTR [rax],al
    de5e:	00 00                	add    BYTE PTR [rax],al
    de60:	52                   	push   rdx
    de61:	55                   	push   rbp
    de62:	4e                   	rex.WRX
    de63:	4e                   	rex.WRX
    de64:	49                   	rex.WB
    de65:	4e                   	rex.WRX
    de66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    de6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    de6e:	54                   	push   rsp
    de6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    de72:	44                   	rex.R
    de73:	45                   	rex.RB
    de74:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    de78:	55                   	push   rbp
    de79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    de7c:	56                   	push   rsi
    de7d:	45 20 31             	and    BYTE PTR [r9],r14b
    de80:	30 20                	xor    BYTE PTR [rax],ah
    de82:	53                   	push   rbx
    de83:	45                   	rex.RB
    de84:	43                   	rex.XB
    de85:	4f                   	rex.WRXB
    de86:	4e                   	rex.WRX
    de87:	44 53                	rex.R push rbx
    de89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    de8d:	41                   	rex.B
    de8e:	42                   	rex.X
    de8f:	4f 52                	rex.WRXB push r10
    de91:	54                   	push   rsp
    de92:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    de96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    de9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    de9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    de9e:	67 75 6d             	addr32 jne df0e <_IO_stdin_used+0xf0e>
    dea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dea3:	74 20                	je     dec5 <_IO_stdin_used+0xec5>
    dea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    deaa:	70 64                	jo     df10 <_IO_stdin_used+0xf10>
    deac:	71 68                	jno    df16 <_IO_stdin_used+0xf16>
    deae:	74 65                	je     df15 <_IO_stdin_used+0xf15>
    deb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    deb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    deb8:	76 69                	jbe    df23 <_IO_stdin_used+0xf23>
    deba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    dec1:	79 2e 
    dec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    dec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    deca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    decb:	73 69                	jae    df36 <_IO_stdin_used+0xf36>
    decd:	73 68                	jae    df37 <_IO_stdin_used+0xf37>
    decf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ded5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    dedc:	70 
    dedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    dede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    dee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dee6:	79 20                	jns    df08 <_IO_stdin_used+0xf08>
    dee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    deef:	74 63                	je     df54 <_IO_stdin_used+0xf54>
    def1:	2f                   	(bad)  
    def2:	76 69                	jbe    df5d <_IO_stdin_used+0xf5d>
    def4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    defb:	79 2e 
    defd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    df00:	66 29 00             	sub    WORD PTR [rax],ax
    df03:	00 00                	add    BYTE PTR [rax],al
    df05:	00 00                	add    BYTE PTR [rax],al
    df07:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    df0a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df0b:	69 73 68 65 64 20 6c 	imul   esi,DWORD PTR [rbx+0x68],0x6c206465
    df12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df13:	61                   	(bad)  
    df14:	64 69 6e 67 20 43 53 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x56534320
    df1b:	56 
    df1c:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    df1f:	70 20                	jo     df41 <_IO_stdin_used+0xf41>
    df21:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    df24:	68 65 00 00 46       	push   0x46000065
    df29:	61                   	(bad)  
    df2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    df31:	20 
    df32:	6c                   	ins    BYTE PTR es:[rdi],dx
    df33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df34:	61                   	(bad)  
    df35:	64 20 43 53          	and    BYTE PTR fs:[rbx+0x53],al
    df39:	56                   	push   rsi
    df3a:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    df3d:	70 20                	jo     df5f <_IO_stdin_used+0xf5f>
    df3f:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    df42:	68 65 28 6e 6f       	push   0x6f6e2865
    df47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df48:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    df4b:	69 74 69 63 61 6c 20 	imul   esi,DWORD PTR [rcx+rbp*2+0x63],0x65206c61
    df52:	65 
    df53:	72 72                	jb     dfc7 <_IO_stdin_used+0xfc7>
    df55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df56:	72 29                	jb     df81 <_IO_stdin_used+0xf81>
    df58:	00 2f                	add    BYTE PTR [rdi],ch
    df5a:	65 74 63             	gs je  dfc0 <_IO_stdin_used+0xfc0>
    df5d:	2f                   	(bad)  
    df5e:	76 69                	jbe    dfc9 <_IO_stdin_used+0xfc9>
    df60:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    df67:	69 6c 
    df69:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    df6d:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    df71:	72 73                	jb     dfe6 <_IO_stdin_used+0xfe6>
    df73:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    df78:	6c                   	ins    BYTE PTR es:[rdi],dx
    df79:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    df7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    df7e:	65 73 00             	gs jae df81 <_IO_stdin_used+0xf81>
    df81:	00 00                	add    BYTE PTR [rax],al
    df83:	00 00                	add    BYTE PTR [rax],al
    df85:	00 00                	add    BYTE PTR [rax],al
    df87:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    df8a:	47                   	rex.RXB
    df8b:	49                   	rex.WB
    df8c:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    df91:	74 65                	je     dff8 <_IO_stdin_used+0xff8>
    df93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df94:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    df9b:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    dfa2:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dfa5:	25 73 0a 00 70       	and    eax,0x70000a73
    dfaa:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    dfad:	5f                   	pop    rdi
    dfae:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfaf:	67 72 20             	addr32 jb dfd2 <_IO_stdin_used+0xfd2>
    dfb2:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    dfb9:	5f                   	pop    rdi
    dfba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dfbb:	70 65                	jo     e022 <_IO_stdin_used+0x1022>
    dfbd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfbe:	5f                   	pop    rdi
    dfbf:	6c                   	ins    BYTE PTR es:[rdi],dx
    dfc0:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    dfc7:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dfca:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    dfce:	70 74                	jo     e044 <_IO_stdin_used+0x1044>
    dfd0:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    dfd5:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    dfd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfda:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    dfe0:	72 76                	jb     e058 <_IO_stdin_used+0x1058>
    dfe2:	65 72 20             	gs jb  e005 <_IO_stdin_used+0x1005>
    dfe5:	73 74                	jae    e05b <_IO_stdin_used+0x105b>
    dfe7:	61                   	(bad)  
    dfe8:	72 74                	jb     e05e <_IO_stdin_used+0x105e>
    dfea:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    dfee:	31 32                	xor    DWORD PTR [rdx],esi
    dff0:	37                   	(bad)  
    dff1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    dff4:	30 2e                	xor    BYTE PTR [rsi],ch
    dff6:	31 3a                	xor    DWORD PTR [rdx],edi
    dff8:	32 33                	xor    dh,BYTE PTR [rbx]
    dffa:	00 00                	add    BYTE PTR [rax],al
    dffc:	71 89                	jno    df87 <_IO_stdin_used+0xf87>
    dffe:	ff                   	(bad)  
    dfff:	ff ae 89 ff ff ec    	jmp    FWORD PTR [rsi-0x13000077]
    e005:	89 ff                	mov    edi,edi
    e007:	ff                   	(bad)  
    e008:	ec                   	in     al,dx
    e009:	89 ff                	mov    edi,edi
    e00b:	ff                   	(bad)  
    e00c:	7d 89                	jge    df97 <_IO_stdin_used+0xf97>
    e00e:	ff                   	(bad)  
    e00f:	ff 8c 89 ff ff ec 89 	dec    DWORD PTR [rcx+rcx*4-0x76130001]
    e016:	ff                   	(bad)  
    e017:	ff                   	(bad)  
    e018:	ec                   	in     al,dx
    e019:	89 ff                	mov    edi,edi
    e01b:	ff                   	(bad)  
    e01c:	ec                   	in     al,dx
    e01d:	89 ff                	mov    edi,edi
    e01f:	ff                   	(bad)  
    e020:	ec                   	in     al,dx
    e021:	89 ff                	mov    edi,edi
    e023:	ff                   	(bad)  
    e024:	ec                   	in     al,dx
    e025:	89 ff                	mov    edi,edi
    e027:	ff                   	(bad)  
    e028:	ec                   	in     al,dx
    e029:	89 ff                	mov    edi,edi
    e02b:	ff 9c 89 ff ff a5 89 	call   FWORD PTR [rcx+rcx*4-0x765a0001]
    e032:	ff                   	(bad)  
    e033:	ff                   	(bad)  
    e034:	ec                   	in     al,dx
    e035:	89 ff                	mov    edi,edi
    e037:	ff                   	(bad)  
    e038:	ec                   	in     al,dx
    e039:	89 ff                	mov    edi,edi
    e03b:	ff cd                	dec    ebp
    e03d:	89 ff                	mov    edi,edi
    e03f:	ff 0a                	dec    DWORD PTR [rdx]
    e041:	43 61                	rex.XB (bad) 
    e043:	75 67                	jne    e0ac <_IO_stdin_used+0x10ac>
    e045:	68 74 20 73 69       	push   0x69732074
    e04a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    e04c:	61                   	(bad)  
    e04d:	6c                   	ins    BYTE PTR es:[rdi],dx
    e04e:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 746200b8 <_end+0x744e40b0>
    e054:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 65210ccd <_end+0x650d4cc5>
    e05a:	78 69                	js     e0c5 <_IO_stdin_used+0x10c5>
    e05c:	74 69                	je     e0c7 <_IO_stdin_used+0x10c7>
    e05e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e05f:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    e065:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    e069:	61                   	(bad)  
    e06a:	6c                   	ins    BYTE PTR es:[rdi],dx
    e06b:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    e06e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e071:	74 73                	je     e0e6 <_IO_stdin_used+0x10e6>
    e073:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    e076:	75 67                	jne    e0df <_IO_stdin_used+0x10df>
    e078:	68 74 3a 20 25       	push   0x25203a74
    e07d:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    e080:	53                   	push   rbx
    e081:	74 61                	je     e0e4 <_IO_stdin_used+0x10e4>
    e083:	74 69                	je     e0ee <_IO_stdin_used+0x10ee>
    e085:	73 74                	jae    e0fb <_IO_stdin_used+0x10fb>
    e087:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    e08e:	61                   	(bad)  
    e08f:	64 64 72 65          	fs fs jb e0f8 <_IO_stdin_used+0x10f8>
    e093:	73 73                	jae    e108 <_IO_stdin_used+0x1108>
    e095:	20 20                	and    BYTE PTR [rax],ah
    e097:	20 20                	and    BYTE PTR [rax],ah
    e099:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    e09b:	75 6e                	jne    e10b <_IO_stdin_used+0x110b>
    e09d:	74 0a                	je     e0a9 <_IO_stdin_used+0x10a9>
    e09f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    e0a4:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    e0a9:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    e0ae:	2d 2d 00 00 00       	sub    eax,0x2d
    e0b3:	00 00                	add    BYTE PTR [rax],al
    e0b5:	00 00                	add    BYTE PTR [rax],al
    e0b7:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909eb30 <_end+0x8f62b28>
    e0bd:	74 6f                	je     e12e <_IO_stdin_used+0x112e>
    e0bf:	74 61                	je     e122 <_IO_stdin_used+0x1122>
    e0c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0c2:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    e0c5:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e0c8:	74 73                	je     e13d <_IO_stdin_used+0x113d>
    e0ca:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a6505f0 <_end+0xa5145e8>
    e0d0:	09 09                	or     DWORD PTR [rcx],ecx
    e0d2:	74 6f                	je     e143 <_IO_stdin_used+0x1143>
    e0d4:	74 61                	je     e137 <_IO_stdin_used+0x1137>
    e0d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0d7:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e0da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0db:	74 20                	je     e0fd <_IO_stdin_used+0x10fd>
    e0dd:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e0e2:	09 09                	or     DWORD PTR [rcx],ecx
    e0e4:	74 6f                	je     e155 <_IO_stdin_used+0x1155>
    e0e6:	74 61                	je     e149 <_IO_stdin_used+0x1149>
    e0e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0e9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e0ec:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    e0ef:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e0f4:	09 09                	or     DWORD PTR [rcx],ecx
    e0f6:	54                   	push   rsp
    e0f7:	43 50                	rex.XB push r8
    e0f9:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e0fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0fd:	74 20                	je     e11f <_IO_stdin_used+0x111f>
    e0ff:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e104:	09 09                	or     DWORD PTR [rcx],ecx
    e106:	54                   	push   rsp
    e107:	43 50                	rex.XB push r8
    e109:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e10c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    e10f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e114:	09 09                	or     DWORD PTR [rcx],ecx
    e116:	55                   	push   rbp
    e117:	44 50                	rex.R push rax
    e119:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e11c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e11d:	74 20                	je     e13f <_IO_stdin_used+0x113f>
    e11f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e124:	09 09                	or     DWORD PTR [rcx],ecx
    e126:	55                   	push   rbp
    e127:	44 50                	rex.R push rax
    e129:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e12c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    e12f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e134:	09 09                	or     DWORD PTR [rcx],ecx
    e136:	49                   	rex.WB
    e137:	43                   	rex.XB
    e138:	4d 50                	rex.WRB push r8
    e13a:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e13d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e13e:	74 20                	je     e160 <_IO_stdin_used+0x1160>
    e140:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e145:	09 09                	or     DWORD PTR [rcx],ecx
    e147:	49                   	rex.WB
    e148:	43                   	rex.XB
    e149:	4d 50                	rex.WRB push r8
    e14b:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e14e:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    e151:	3d 20 25 64 0a       	cmp    eax,0xa642520
    e156:	0a 00                	or     al,BYTE PTR [rax]
    e158:	77 00                	ja     e15a <_IO_stdin_used+0x115a>
    e15a:	2f                   	(bad)  
    e15b:	75 73                	jne    e1d0 <_IO_stdin_used+0x11d0>
    e15d:	72 2f                	jb     e18e <_IO_stdin_used+0x118e>
    e15f:	73 68                	jae    e1c9 <_IO_stdin_used+0x11c9>
    e161:	61                   	(bad)  
    e162:	72 65                	jb     e1c9 <_IO_stdin_used+0x11c9>
    e164:	2f                   	(bad)  
    e165:	76 69                	jbe    e1d0 <_IO_stdin_used+0x11d0>
    e167:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    e16e:	63 61 
    e170:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    e173:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    e177:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    e17a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e17b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e17c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e17d:	74 20                	je     e19f <_IO_stdin_used+0x119f>
    e17f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e180:	70 65                	jo     e1e7 <_IO_stdin_used+0x11e7>
    e182:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e183:	20 2f                	and    BYTE PTR [rdi],ch
    e185:	75 73                	jne    e1fa <_IO_stdin_used+0x11fa>
    e187:	72 2f                	jb     e1b8 <_IO_stdin_used+0x11b8>
    e189:	73 68                	jae    e1f3 <_IO_stdin_used+0x11f3>
    e18b:	61                   	(bad)  
    e18c:	72 65                	jb     e1f3 <_IO_stdin_used+0x11f3>
    e18e:	2f                   	(bad)  
    e18f:	76 69                	jbe    e1fa <_IO_stdin_used+0x11fa>
    e191:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    e198:	63 61 
    e19a:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    e19d:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    e1a1:	3a 20                	cmp    ah,BYTE PTR [rax]
    e1a3:	70 72                	jo     e217 <_IO_stdin_used+0x1217>
    e1a5:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    e1ac:	61                   	(bad)  
    e1ad:	72 70                	jb     e21f <_IO_stdin_used+0x121f>
    e1af:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    e1b2:	68 65 20 74 6f       	push   0x6f742065
    e1b7:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    e1ba:	72 65                	jb     e221 <_IO_stdin_used+0x1221>
    e1bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e1be:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2e0237 <_end+0x3e1a422f>
    e1c4:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500ec3d <_end+0x24ed2c35>
    e1ca:	73 2c                	jae    e1f8 <_IO_stdin_used+0x11f8>
    e1cc:	25 73 0a 00 31       	and    eax,0x31000a73
    e1d1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    e1d4:	30 00                	xor    BYTE PTR [rax],al
    e1d6:	00 00                	add    BYTE PTR [rax],al
    e1d8:	56                   	push   rsi
    e1d9:	49                   	rex.WB
    e1da:	47                   	rex.RXB
    e1db:	49                   	rex.WB
    e1dc:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    e1e0:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09ec5a <_end+0x2cf62c52>
    e1e7:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    e1ea:	64 65 62             	fs gs (bad) 
    e1ed:	75 67                	jne    e256 <_IO_stdin_used+0x1256>
    e1ef:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    e1f2:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    e1f6:	2d 68 3a 20 64       	sub    eax,0x64203a68
    e1fb:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    e202:	74 68                	je     e26c <_IO_stdin_used+0x126c>
    e204:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    e20b:	61                   	(bad)  
    e20c:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    e210:	2d 69 20 3c 69       	sub    eax,0x693c2069
    e215:	66 61                	data16 (bad) 
    e217:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    e21a:	3a 20                	cmp    ah,BYTE PTR [rax]
    e21c:	73 65                	jae    e283 <_IO_stdin_used+0x1283>
    e21e:	74 20                	je     e240 <_IO_stdin_used+0x1240>
    e220:	74 68                	je     e28a <_IO_stdin_used+0x128a>
    e222:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    e226:	74 65                	je     e28d <_IO_stdin_used+0x128d>
    e228:	72 66                	jb     e290 <_IO_stdin_used+0x1290>
    e22a:	61                   	(bad)  
    e22b:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    e22e:	74 6f                	je     e29f <_IO_stdin_used+0x129f>
    e230:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    e234:	74 65                	je     e29b <_IO_stdin_used+0x129b>
    e236:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e237:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    e23a:	0a 09                	or     cl,BYTE PTR [rcx]
    e23c:	2d 70 20 70 72       	sub    eax,0x72702070
    e241:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    e248:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    e24c:	0a 09                	or     cl,BYTE PTR [rcx]
    e24e:	2d 71 20 65 78       	sub    eax,0x78652071
    e253:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    e25a:	74 
    e25b:	6c                   	ins    BYTE PTR es:[rdi],dx
    e25c:	79 0a                	jns    e268 <_IO_stdin_used+0x1268>
    e25e:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    e261:	00 2f                	add    BYTE PTR [rdi],ch
    e263:	70 72                	jo     e2d7 <_IO_stdin_used+0x12d7>
    e265:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e266:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    e268:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    e26b:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    e272:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    e275:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    e278:	6d                   	ins    DWORD PTR es:[rdi],dx
    e279:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    e27d:	75 6e                	jne    e2ed <_IO_stdin_used+0x12ed>
    e27f:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 706402ea <_end+0x705042e2>
    e286:	75 73                	jne    e2fb <_IO_stdin_used+0x12fb>
    e288:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    e28a:	25 73 00 00 00       	and    eax,0x73
    e28f:	00 e2                	add    dl,ah
    e291:	96                   	xchg   esi,eax
    e292:	88 e2                	mov    dl,ah
    e294:	96                   	xchg   esi,eax
    e295:	88 e2                	mov    dl,ah
    e297:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    e29e:	88 e2                	mov    dl,ah
    e2a0:	96                   	xchg   esi,eax
    e2a1:	88 e2                	mov    dl,ah
    e2a3:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e2aa:	88 e2                	mov    dl,ah
    e2ac:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    e2b3:	96                   	xchg   esi,eax
    e2b4:	88 e2                	mov    dl,ah
    e2b6:	96                   	xchg   esi,eax
    e2b7:	88 e2                	mov    dl,ah
    e2b9:	96                   	xchg   esi,eax
    e2ba:	88 e2                	mov    dl,ah
    e2bc:	96                   	xchg   esi,eax
    e2bd:	88 e2                	mov    dl,ah
    e2bf:	96                   	xchg   esi,eax
    e2c0:	88 e2                	mov    dl,ah
    e2c2:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    e2c9:	96                   	xchg   esi,eax
    e2ca:	88 e2                	mov    dl,ah
    e2cc:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e2d3:	88 0a                	mov    BYTE PTR [rdx],cl
    e2d5:	e2 96                	loop   e26d <_IO_stdin_used+0x126d>
    e2d7:	88 e2                	mov    dl,ah
    e2d9:	96                   	xchg   esi,eax
    e2da:	88 e2                	mov    dl,ah
    e2dc:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    e2e3:	88 e2                	mov    dl,ah
    e2e5:	96                   	xchg   esi,eax
    e2e6:	88 e2                	mov    dl,ah
    e2e8:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e2ef:	88 e2                	mov    dl,ah
    e2f1:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e2f8:	88 e2                	mov    dl,ah
    e2fa:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    e301:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    e307:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    e30d:	96                   	xchg   esi,eax
    e30e:	88 e2                	mov    dl,ah
    e310:	96                   	xchg   esi,eax
    e311:	88 e2                	mov    dl,ah
    e313:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e31a:	88 0a                	mov    BYTE PTR [rdx],cl
    e31c:	e2 96                	loop   e2b4 <_IO_stdin_used+0x12b4>
    e31e:	88 e2                	mov    dl,ah
    e320:	96                   	xchg   esi,eax
    e321:	88 e2                	mov    dl,ah
    e323:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    e32a:	88 e2                	mov    dl,ah
    e32c:	96                   	xchg   esi,eax
    e32d:	88 e2                	mov    dl,ah
    e32f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e336:	88 e2                	mov    dl,ah
    e338:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e33f:	88 e2                	mov    dl,ah
    e341:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    e348:	e2 96                	loop   e2e0 <_IO_stdin_used+0x12e0>
    e34a:	88 e2                	mov    dl,ah
    e34c:	96                   	xchg   esi,eax
    e34d:	88 e2                	mov    dl,ah
    e34f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e356:	88 e2                	mov    dl,ah
    e358:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e35f:	88 0a                	mov    BYTE PTR [rdx],cl
    e361:	e2 80                	loop   e2e3 <_IO_stdin_used+0x12e3>
    e363:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    e369:	88 e2                	mov    dl,ah
    e36b:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    e372:	96                   	xchg   esi,eax
    e373:	88 e2                	mov    dl,ah
    e375:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    e37c:	88 e2                	mov    dl,ah
    e37e:	96                   	xchg   esi,eax
    e37f:	88 e2                	mov    dl,ah
    e381:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e388:	88 e2                	mov    dl,ah
    e38a:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    e391:	88 e2                	mov    dl,ah
    e393:	96                   	xchg   esi,eax
    e394:	88 e2                	mov    dl,ah
    e396:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e39d:	88 e2                	mov    dl,ah
    e39f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e3a6:	88 0a                	mov    BYTE PTR [rdx],cl
    e3a8:	20 e2                	and    dl,ah
    e3aa:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e3b1:	88 e2                	mov    dl,ah
    e3b3:	96                   	xchg   esi,eax
    e3b4:	88 e2                	mov    dl,ah
    e3b6:	96                   	xchg   esi,eax
    e3b7:	88 e2                	mov    dl,ah
    e3b9:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    e3c0:	96                   	xchg   esi,eax
    e3c1:	88 e2                	mov    dl,ah
    e3c3:	96                   	xchg   esi,eax
    e3c4:	88 e2                	mov    dl,ah
    e3c6:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    e3cd:	88 e2                	mov    dl,ah
    e3cf:	96                   	xchg   esi,eax
    e3d0:	88 e2                	mov    dl,ah
    e3d2:	96                   	xchg   esi,eax
    e3d3:	88 e2                	mov    dl,ah
    e3d5:	96                   	xchg   esi,eax
    e3d6:	88 e2                	mov    dl,ah
    e3d8:	96                   	xchg   esi,eax
    e3d9:	88 e2                	mov    dl,ah
    e3db:	96                   	xchg   esi,eax
    e3dc:	88 e2                	mov    dl,ah
    e3de:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    e3e5:	88 e2                	mov    dl,ah
    e3e7:	96                   	xchg   esi,eax
    e3e8:	88 e2                	mov    dl,ah
    e3ea:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    e3f1:	88 e2                	mov    dl,ah
    e3f3:	96                   	xchg   esi,eax
    e3f4:	88 e2                	mov    dl,ah
    e3f6:	96                   	xchg   esi,eax
    e3f7:	88 e2                	mov    dl,ah
    e3f9:	96                   	xchg   esi,eax
    e3fa:	88 e2                	mov    dl,ah
    e3fc:	96                   	xchg   esi,eax
    e3fd:	88 e2                	mov    dl,ah
    e3ff:	96                   	xchg   esi,eax
    e400:	88 00                	mov    BYTE PTR [rax],al
    e402:	00 00                	add    BYTE PTR [rax],al
    e404:	00 00                	add    BYTE PTR [rax],al
    e406:	00 00                	add    BYTE PTR [rax],al
    e408:	0a 00                	or     al,BYTE PTR [rax]
    e40a:	0d 00 00 00 00       	or     eax,0x0
    e40f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    e412:	68 5f 73 65 72       	push   0x7265735f
    e417:	76 65                	jbe    e47e <_IO_stdin_used+0x147e>
    e419:	72 2e                	jb     e449 <_IO_stdin_used+0x1449>
    e41b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    e41d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    e420:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    e427:	20 
    e428:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    e42b:	61                   	(bad)  
    e42c:	74 65                	je     e493 <_IO_stdin_used+0x1493>
    e42e:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    e431:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e434:	74 00                	je     e436 <_IO_stdin_used+0x1436>
    e436:	00 00                	add    BYTE PTR [rax],al
    e438:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e439:	73 68                	jae    e4a3 <_IO_stdin_used+0x14a3>
    e43b:	5f                   	pop    rdi
    e43c:	73 65                	jae    e4a3 <_IO_stdin_used+0x14a3>
    e43e:	72 76                	jb     e4b6 <_IO_stdin_used+0x14b6>
    e440:	65 72 2e             	gs jb  e471 <_IO_stdin_used+0x1471>
    e443:	63 3a                	movsxd edi,DWORD PTR [rdx]
    e445:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    e448:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    e44f:	6e 
    e450:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    e453:	74 73                	je     e4c8 <_IO_stdin_used+0x14c8>
    e455:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e456:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    e459:	70 74                	jo     e4cf <_IO_stdin_used+0x14cf>
    e45b:	00 00                	add    BYTE PTR [rax],al
    e45d:	00 00                	add    BYTE PTR [rax],al
    e45f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    e462:	68 5f 73 65 72       	push   0x7265735f
    e467:	76 65                	jbe    e4ce <_IO_stdin_used+0x14ce>
    e469:	72 2e                	jb     e499 <_IO_stdin_used+0x1499>
    e46b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    e46d:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    e470:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e471:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    e478:	20 
    e479:	73 6f                	jae    e4ea <_IO_stdin_used+0x14ea>
    e47b:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e47e:	74 20                	je     e4a0 <_IO_stdin_used+0x14a0>
    e480:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e482:	72 20                	jb     e4a4 <_IO_stdin_used+0x14a4>
    e484:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e485:	73 68                	jae    e4ef <_IO_stdin_used+0x14ef>
    e487:	5f                   	pop    rdi
    e488:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    e48d:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    e494:	00 
    e495:	00 00                	add    BYTE PTR [rax],al
    e497:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    e49a:	68 5f 73 65 72       	push   0x7265735f
    e49f:	76 65                	jbe    e506 <_IO_stdin_used+0x1506>
    e4a1:	72 2e                	jb     e4d1 <_IO_stdin_used+0x14d1>
    e4a3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    e4a5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    e4a8:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    e4af:	6e 
    e4b0:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    e4b4:	74 65                	je     e51b <_IO_stdin_used+0x151b>
    e4b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e4b7:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    e4be:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    e4c1:	68 5f 66 64 00       	push   0x64665f
    e4c6:	00 00                	add    BYTE PTR [rax],al
    e4c8:	46 61                	rex.RX (bad) 
    e4ca:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    e4d1:	6f 
    e4d2:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    e4d5:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    e4d8:	74 20                	je     e4fa <_IO_stdin_used+0x14fa>
    e4da:	61                   	(bad)  
    e4db:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    e4de:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    e4e5:	20 25 73 0a 00 3a    	and    BYTE PTR [rip+0x3a000a73],ah        # 3a00ef5e <_end+0x39ed2f56>
    e4eb:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    e4ee:	47                   	rex.RXB
    e4ef:	49                   	rex.WB
    e4f0:	4c 20 4c 6f 67       	rex.WR and BYTE PTR [rdi+rbp*2+0x67],r9b
    e4f5:	69 6e 20 53 68 65 6c 	imul   ebp,DWORD PTR [rsi+0x20],0x6c656853
    e4fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    e4fd:	0d 0a 00 55 73       	or     eax,0x7355000a
    e502:	65 72 6e             	gs jb  e573 <_IO_stdin_used+0x1573>
    e505:	61                   	(bad)  
    e506:	6d                   	ins    DWORD PTR es:[rdi],dx
    e507:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    e50a:	00 50 61             	add    BYTE PTR [rax+0x61],dl
    e50d:	73 73                	jae    e582 <_IO_stdin_used+0x1582>
    e50f:	77 6f                	ja     e580 <_IO_stdin_used+0x1580>
    e511:	72 64                	jb     e577 <_IO_stdin_used+0x1577>
    e513:	3a 20                	cmp    ah,BYTE PTR [rax]
    e515:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    e518:	2f                   	(bad)  
    e519:	65 74 63             	gs je  e57f <_IO_stdin_used+0x157f>
    e51c:	2f                   	(bad)  
    e51d:	76 69                	jbe    e588 <_IO_stdin_used+0x1588>
    e51f:	67 69 6c 2f 70 61 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x70],0x77737361
    e526:	73 77 
    e528:	64 00 46 61          	add    BYTE PTR fs:[rsi+0x61],al
    e52c:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    e533:	20 
    e534:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e535:	70 65                	jo     e59c <_IO_stdin_used+0x159c>
    e537:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e538:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    e53b:	73 73                	jae    e5b0 <_IO_stdin_used+0x15b0>
    e53d:	77 6f                	ja     e5ae <_IO_stdin_used+0x15ae>
    e53f:	72 64                	jb     e5a5 <_IO_stdin_used+0x15a5>
    e541:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    e544:	6c                   	ins    BYTE PTR es:[rdi],dx
    e545:	65 00 25 64 2d 25 30 	add    BYTE PTR gs:[rip+0x30252d64],ah        # 302612b0 <_end+0x301252a8>
    e54c:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    e550:	30 32                	xor    BYTE PTR [rdx],dh
    e552:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a651789 <_end+0x3a515781>
    e559:	25 30 32 64 3a       	and    eax,0x3a643230
    e55e:	25 30 32 64 00       	and    eax,0x643230
    e563:	25 30 32 78 00       	and    eax,0x783230
    e568:	61                   	(bad)  
    e569:	00 2f                	add    BYTE PTR [rdi],ch
    e56b:	76 61                	jbe    e5ce <_IO_stdin_used+0x15ce>
    e56d:	72 2f                	jb     e59e <_IO_stdin_used+0x159e>
    e56f:	6c                   	ins    BYTE PTR es:[rdi],dx
    e570:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e571:	67 2f                	addr32 (bad) 
    e573:	76 69                	jbe    e5de <_IO_stdin_used+0x15de>
    e575:	67 69 6c 2f 6c 6f 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x6e69676f
    e57c:	69 6e 
    e57e:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    e580:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e581:	67 00 00             	add    BYTE PTR [eax],al
    e584:	00 00                	add    BYTE PTR [rax],al
    e586:	00 00                	add    BYTE PTR [rax],al
    e588:	53                   	push   rbx
    e589:	75 63                	jne    e5ee <_IO_stdin_used+0x15ee>
    e58b:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    e58e:	73 66                	jae    e5f6 <_IO_stdin_used+0x15f6>
    e590:	75 6c                	jne    e5fe <_IO_stdin_used+0x15fe>
    e592:	20 6c 6f 67          	and    BYTE PTR [rdi+rbp*2+0x67],ch
    e596:	69 6e 20 66 6f 72 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20726f66
    e59d:	25 73 20 61 74       	and    eax,0x74612073
    e5a2:	20 25 73 20 66 72    	and    BYTE PTR [rip+0x72662073],ah        # 7267061b <_end+0x72534613>
    e5a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e5a9:	6d                   	ins    DWORD PTR es:[rdi],dx
    e5aa:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f023 <_IO_stdin_used+0x2023>
    e5b0:	46 61                	rex.RX (bad) 
    e5b2:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    e5b9:	67 
    e5ba:	69 6e 20 66 6f 72 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20726f66
    e5c1:	25 73 20 61 74       	and    eax,0x74612073
    e5c6:	20 25 73 20 66 72    	and    BYTE PTR [rip+0x72662073],ah        # 7267063f <_end+0x72534637>
    e5cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e5cd:	6d                   	ins    DWORD PTR es:[rdi],dx
    e5ce:	20 25 73 0a 00 6e    	and    BYTE PTR [rip+0x6e000a73],ah        # 6e00f047 <_end+0x6ded303f>
    e5d4:	65 77 20             	gs ja  e5f7 <_IO_stdin_used+0x15f7>
    e5d7:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    e5da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e5db:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
    e5e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e5e1:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    e5e4:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426205d <_end+0x64126055>
    e5ea:	0a 00                	or     al,BYTE PTR [rax]
    e5ec:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    e5ee:	76 61                	jbe    e651 <_IO_stdin_used+0x1651>
    e5f0:	6c                   	ins    BYTE PTR es:[rdi],dx
    e5f1:	69 64 20 6c 6f 67 69 	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x6e69676f
    e5f8:	6e 
    e5f9:	0d 0a 00 6e 73       	or     eax,0x736e000a
    e5fe:	68 23 20 00 65       	push   0x65002023
    e603:	78 69                	js     e66e <_IO_stdin_used+0x166e>
    e605:	74 00                	je     e607 <_IO_stdin_used+0x1607>
    e607:	00 48 65             	add    BYTE PTR [rax+0x65],cl
    e60a:	6c                   	ins    BYTE PTR es:[rdi],dx
    e60b:	70 20                	jo     e62d <_IO_stdin_used+0x162d>
    e60d:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e60f:	72 20                	jb     e631 <_IO_stdin_used+0x1631>
    e611:	22 67 65             	and    ah,BYTE PTR [rdi+0x65]
    e614:	74 22                	je     e638 <_IO_stdin_used+0x1638>
    e616:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    e619:	6d                   	ins    DWORD PTR es:[rdi],dx
    e61a:	6d                   	ins    DWORD PTR es:[rdi],dx
    e61b:	61                   	(bad)  
    e61c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e61d:	64 3a 0a             	cmp    cl,BYTE PTR fs:[rdx]
    e620:	09 62 6c             	or     DWORD PTR [rdx+0x6c],esp
    e623:	61                   	(bad)  
    e624:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e627:	69 73 74 3a 20 20 20 	imul   esi,DWORD PTR [rbx+0x74],0x2020203a
    e62e:	72 65                	jb     e695 <_IO_stdin_used+0x1695>
    e630:	74 72                	je     e6a4 <_IO_stdin_used+0x16a4>
    e632:	69 65 76 65 20 74 68 	imul   esp,DWORD PTR [rbp+0x76],0x68742065
    e639:	65 20 62 6c          	and    BYTE PTR gs:[rdx+0x6c],ah
    e63d:	61                   	(bad)  
    e63e:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e641:	69 73 74 0a 09 72 75 	imul   esi,DWORD PTR [rbx+0x74],0x7572090a
    e648:	6c                   	ins    BYTE PTR es:[rdi],dx
    e649:	65 73 3a             	gs jae e686 <_IO_stdin_used+0x1686>
    e64c:	20 20                	and    BYTE PTR [rax],ah
    e64e:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e651:	74 72                	je     e6c5 <_IO_stdin_used+0x16c5>
    e653:	69 65 76 65 20 72 75 	imul   esp,DWORD PTR [rbp+0x76],0x75722065
    e65a:	6c                   	ins    BYTE PTR es:[rdi],dx
    e65b:	65 73 20             	gs jae e67e <_IO_stdin_used+0x167e>
    e65e:	6c                   	ins    BYTE PTR es:[rdi],dx
    e65f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e660:	61                   	(bad)  
    e661:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    e667:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e66a:	6d                   	ins    DWORD PTR es:[rdi],dx
    e66b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e66c:	72 79                	jb     e6e7 <_IO_stdin_used+0x16e7>
    e66e:	0a 09                	or     cl,BYTE PTR [rcx]
    e670:	6d                   	ins    DWORD PTR es:[rdi],dx
    e671:	61                   	(bad)  
    e672:	74 63                	je     e6d7 <_IO_stdin_used+0x16d7>
    e674:	68 65 73 3a 20       	push   0x203a7365
    e679:	20 20                	and    BYTE PTR [rax],ah
    e67b:	72 65                	jb     e6e2 <_IO_stdin_used+0x16e2>
    e67d:	74 72                	je     e6f1 <_IO_stdin_used+0x16f1>
    e67f:	69 65 76 65 20 6d 61 	imul   esp,DWORD PTR [rbp+0x76],0x616d2065
    e686:	74 63                	je     e6eb <_IO_stdin_used+0x16eb>
    e688:	68 65 73 20 66       	push   0x66207365
    e68d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e68e:	72 20                	jb     e6b0 <_IO_stdin_used+0x16b0>
    e690:	61                   	(bad)  
    e691:	6c                   	ins    BYTE PTR es:[rdi],dx
    e692:	6c                   	ins    BYTE PTR es:[rdi],dx
    e693:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e696:	6c                   	ins    BYTE PTR es:[rdi],dx
    e697:	65 73 0a             	gs jae e6a4 <_IO_stdin_used+0x16a4>
    e69a:	09 70 61             	or     DWORD PTR [rax+0x61],esi
    e69d:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e6a0:	74 73                	je     e715 <_IO_stdin_used+0x1715>
    e6a2:	3a 20                	cmp    ah,BYTE PTR [rax]
    e6a4:	20 20                	and    BYTE PTR [rax],ah
    e6a6:	74 6f                	je     e717 <_IO_stdin_used+0x1717>
    e6a8:	74 61                	je     e70b <_IO_stdin_used+0x170b>
    e6aa:	6c                   	ins    BYTE PTR es:[rdi],dx
    e6ab:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    e6ae:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e6b1:	74 73                	je     e726 <_IO_stdin_used+0x1726>
    e6b3:	20 63 61             	and    BYTE PTR [rbx+0x61],ah
    e6b6:	75 67                	jne    e71f <_IO_stdin_used+0x171f>
    e6b8:	68 74 09 61 72       	push   0x72610974
    e6bd:	70 3a                	jo     e6f9 <_IO_stdin_used+0x16f9>
    e6bf:	20 20                	and    BYTE PTR [rax],ah
    e6c1:	20 20                	and    BYTE PTR [rax],ah
    e6c3:	72 65                	jb     e72a <_IO_stdin_used+0x172a>
    e6c5:	74 72                	je     e739 <_IO_stdin_used+0x1739>
    e6c7:	69 65 76 65 20 74 68 	imul   esp,DWORD PTR [rbp+0x76],0x68742065
    e6ce:	65 20 61 72          	and    BYTE PTR gs:[rcx+0x72],ah
    e6d2:	70 20                	jo     e6f4 <_IO_stdin_used+0x16f4>
    e6d4:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    e6d7:	68 65 0d 0a 00       	push   0xa0d65
    e6dc:	00 00                	add    BYTE PTR [rax],al
    e6de:	00 00                	add    BYTE PTR [rax],al
    e6e0:	48                   	rex.W
    e6e1:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    e6e3:	70 20                	jo     e705 <_IO_stdin_used+0x1705>
    e6e5:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e6e7:	72 20                	jb     e709 <_IO_stdin_used+0x1709>
    e6e9:	22 61 64             	and    ah,BYTE PTR [rcx+0x64]
    e6ec:	64 22 20             	and    ah,BYTE PTR fs:[rax]
    e6ef:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    e6f2:	6d                   	ins    DWORD PTR es:[rdi],dx
    e6f3:	61                   	(bad)  
    e6f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e6f5:	64 3a 0a             	cmp    cl,BYTE PTR fs:[rdx]
    e6f8:	09 61 64             	or     DWORD PTR [rcx+0x64],esp
    e6fb:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    e6ff:	61                   	(bad)  
    e700:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e703:	69 73 74 20 3c 69 70 	imul   esi,DWORD PTR [rbx+0x74],0x70693c20
    e70a:	76 34                	jbe    e740 <_IO_stdin_used+0x1740>
    e70c:	7c 69                	jl     e777 <_IO_stdin_used+0x1777>
    e70e:	70 76                	jo     e786 <_IO_stdin_used+0x1786>
    e710:	36 3e 20 3c 69       	ss ds and BYTE PTR [rcx+rbp*2],bh
    e715:	70 20                	jo     e737 <_IO_stdin_used+0x1737>
    e717:	61                   	(bad)  
    e718:	64 64 72 3e          	fs fs jb e75a <_IO_stdin_used+0x175a>
    e71c:	0a 09                	or     cl,BYTE PTR [rcx]
    e71e:	61                   	(bad)  
    e71f:	64 64 20 72 75       	fs and BYTE PTR fs:[rdx+0x75],dh
    e724:	6c                   	ins    BYTE PTR es:[rdi],dx
    e725:	65 20 3c 72          	and    BYTE PTR gs:[rdx+rsi*2],bh
    e729:	75 6c                	jne    e797 <_IO_stdin_used+0x1797>
    e72b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e72d:	61                   	(bad)  
    e72e:	6d                   	ins    DWORD PTR es:[rdi],dx
    e72f:	65 3e 0d 0a 00 73 70 	gs ds or eax,0x7073000a
    e736:	69 6d 61 78 00 74 65 	imul   ebp,DWORD PTR [rbp+0x61],0x65740078
    e73d:	73 74                	jae    e7b3 <_IO_stdin_used+0x17b3>
    e73f:	5f                   	pop    rdi
    e740:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    e744:	00 68 65             	add    BYTE PTR [rax+0x65],ch
    e747:	6c                   	ins    BYTE PTR es:[rdi],dx
    e748:	6c                   	ins    BYTE PTR es:[rdi],dx
    e749:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e74a:	0d 0a 00 73 68       	or     eax,0x6873000a
    e74f:	75 74                	jne    e7c5 <_IO_stdin_used+0x17c5>
    e751:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    e753:	77 6e                	ja     e7c3 <_IO_stdin_used+0x17c3>
    e755:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
    e758:	69 74 00 67 65 74 00 	imul   esi,DWORD PTR [rax+rax*1+0x67],0x62007465
    e75f:	62 
    e760:	6c                   	ins    BYTE PTR es:[rdi],dx
    e761:	61                   	(bad)  
    e762:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e765:	69 73 74 00 72 75 6c 	imul   esi,DWORD PTR [rbx+0x74],0x6c757200
    e76c:	65 73 00             	gs jae e76f <_IO_stdin_used+0x176f>
    e76f:	6d                   	ins    DWORD PTR es:[rdi],dx
    e770:	61                   	(bad)  
    e771:	74 63                	je     e7d6 <_IO_stdin_used+0x17d6>
    e773:	68 65 73 00 70       	push   0x70007365
    e778:	61                   	(bad)  
    e779:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e77c:	74 73                	je     e7f1 <_IO_stdin_used+0x17f1>
    e77e:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    e782:	61                   	(bad)  
    e783:	6c                   	ins    BYTE PTR es:[rdi],dx
    e784:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    e787:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    e78a:	74 73                	je     e7ff <_IO_stdin_used+0x17ff>
    e78c:	20 63 61             	and    BYTE PTR [rbx+0x61],ah
    e78f:	75 67                	jne    e7f8 <_IO_stdin_used+0x17f8>
    e791:	68 74 3a 20 25       	push   0x25203a74
    e796:	64 0d 0a 00 61 72    	fs or  eax,0x7261000a
    e79c:	70 00                	jo     e79e <_IO_stdin_used+0x179e>
    e79e:	61                   	(bad)  
    e79f:	64 64 00 72 75       	fs add BYTE PTR fs:[rdx+0x75],dh
    e7a4:	6c                   	ins    BYTE PTR es:[rdi],dx
    e7a5:	65 00 73 65          	add    BYTE PTR gs:[rbx+0x65],dh
    e7a9:	74 00                	je     e7ab <_IO_stdin_used+0x17ab>
    e7ab:	00 00                	add    BYTE PTR [rax],al
    e7ad:	00 00                	add    BYTE PTR [rax],al
    e7af:	00 65 72             	add    BYTE PTR [rbp+0x72],ah
    e7b2:	72 6f                	jb     e823 <_IO_stdin_used+0x1823>
    e7b4:	72 3a                	jb     e7f0 <_IO_stdin_used+0x17f0>
    e7b6:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    e7b9:	6d                   	ins    DWORD PTR es:[rdi],dx
    e7ba:	6d                   	ins    DWORD PTR es:[rdi],dx
    e7bb:	61                   	(bad)  
    e7bc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e7bd:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    e7c1:	74 20                	je     e7e3 <_IO_stdin_used+0x17e3>
    e7c3:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e7c5:	75 6e                	jne    e835 <_IO_stdin_used+0x1835>
    e7c7:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    e7ca:	25 73 0d 0a 00       	and    eax,0xa0d73
    e7cf:	69 70 76 34 00 41 64 	imul   esi,DWORD PTR [rax+0x76],0x64410034
    e7d6:	64 65 64 20 25 73 20 	fs gs and BYTE PTR fs:[rip+0x6f742073],ah        # 6f750852 <_end+0x6f61484a>
    e7dd:	74 6f 
    e7df:	20 62 6c             	and    BYTE PTR [rdx+0x6c],ah
    e7e2:	61                   	(bad)  
    e7e3:	63 6b 6c             	movsxd ebp,DWORD PTR [rbx+0x6c]
    e7e6:	69 73 74 0d 0a 00 09 	imul   esi,DWORD PTR [rbx+0x74],0x9000a0d
    e7ed:	09 09                	or     DWORD PTR [rcx],ecx
    e7ef:	09 09                	or     DWORD PTR [rcx],ecx
    e7f1:	09 5b 20             	or     DWORD PTR [rbx+0x20],ebx
    e7f4:	25 64 20 7c 20       	and    eax,0x207c2064
    e7f9:	25 64 20 7c 00       	and    eax,0x7c2064
    e7fe:	20 25 73 20 5d 00    	and    BYTE PTR [rip+0x5d2073],ah        # 5e0877 <_end+0x4a486f>
    e804:	72 00                	jb     e806 <_IO_stdin_used+0x1806>
    e806:	46 61                	rex.RX (bad) 
    e808:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    e80f:	6f 
    e810:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    e813:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e815:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    e818:	6c                   	ins    BYTE PTR es:[rdi],dx
    e819:	65 20 25 73 0d 0a 00 	and    BYTE PTR gs:[rip+0xa0d73],ah        # af593 <rules+0x9d2b3>
    e820:	4c 6f                	rex.WR outs dx,DWORD PTR ds:[rsi]
    e822:	61                   	(bad)  
    e823:	64 65 64 20 72 75    	fs gs and BYTE PTR fs:[rdx+0x75],dh
    e829:	6c                   	ins    BYTE PTR es:[rdi],dx
    e82a:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    e82e:	6c                   	ins    BYTE PTR es:[rdi],dx
    e82f:	65 20 25 73 0d 0a 00 	and    BYTE PTR gs:[rip+0xa0d73],ah        # af5a9 <rules+0x9d2c9>
    e836:	25 73 20 77 61       	and    eax,0x61772073
    e83b:	73 20                	jae    e85d <_IO_stdin_used+0x185d>
    e83d:	6d                   	ins    DWORD PTR es:[rdi],dx
    e83e:	61                   	(bad)  
    e83f:	74 63                	je     e8a4 <_IO_stdin_used+0x18a4>
    e841:	68 65 64 20 25       	push   0x25206465
    e846:	64 20 74 69 6d       	and    BYTE PTR fs:[rcx+rbp*2+0x6d],dh
    e84b:	65 73 0d             	gs jae e85b <_IO_stdin_used+0x185b>
    e84e:	0a 00                	or     al,BYTE PTR [rax]
    e850:	25 73 3a 20 72       	and    eax,0x72203a73
    e855:	75 6c                	jne    e8c3 <_IO_stdin_used+0x18c3>
    e857:	65 20 6e 6f          	and    BYTE PTR gs:[rsi+0x6f],ch
    e85b:	74 20                	je     e87d <_IO_stdin_used+0x187d>
    e85d:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e85f:	75 6e                	jne    e8cf <_IO_stdin_used+0x18cf>
    e861:	64 0d 0a 00 09 25    	fs or  eax,0x2509000a
    e867:	73 20                	jae    e889 <_IO_stdin_used+0x1889>
    e869:	6d                   	ins    DWORD PTR es:[rdi],dx
    e86a:	61                   	(bad)  
    e86b:	74 63                	je     e8d0 <_IO_stdin_used+0x18d0>
    e86d:	68 65 64 20 25       	push   0x25206465
    e872:	64 20 74 69 6d       	and    BYTE PTR fs:[rcx+rbp*2+0x6d],dh
    e877:	65 73 0a             	gs jae e884 <_IO_stdin_used+0x1884>
    e87a:	00 0a                	add    BYTE PTR [rdx],cl
    e87c:	09 25 73 20 2d 3e    	or     DWORD PTR [rip+0x3e2d2073],esp        # 3e2e08f5 <_end+0x3e1a48ed>
    e882:	20 25 73 00 43 75    	and    BYTE PTR [rip+0x75430073],ah        # 7543e8fb <_end+0x753028f3>
    e888:	72 72                	jb     e8fc <_IO_stdin_used+0x18fc>
    e88a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e88c:	74 20                	je     e8ae <_IO_stdin_used+0x18ae>
    e88e:	53                   	push   rbx
    e88f:	50                   	push   rax
    e890:	49 20 4d 61          	rex.WB and BYTE PTR [r13+0x61],cl
    e894:	78 3a                	js     e8d0 <_IO_stdin_used+0x18d0>
    e896:	20 25 64 0a 00 0a    	and    BYTE PTR [rip+0xa000a64],ah        # a00f300 <_end+0x9ed32f8>
    e89c:	4e                   	rex.WRX
    e89d:	65 77 20             	gs ja  e8c0 <_IO_stdin_used+0x18c0>
    e8a0:	53                   	push   rbx
    e8a1:	50                   	push   rax
    e8a2:	49 20 4d 61          	rex.WB and BYTE PTR [r13+0x61],cl
    e8a6:	78 3a                	js     e8e2 <_IO_stdin_used+0x18e2>
    e8a8:	20 25 64 0d 0a 00    	and    BYTE PTR [rip+0xa0d64],ah        # af612 <rules+0x9d332>
    e8ae:	00 00                	add    BYTE PTR [rax],al
    e8b0:	61                   	(bad)  
    e8b1:	00 00                	add    BYTE PTR [rax],al
    e8b3:	00 00                	add    BYTE PTR [rax],al
    e8b5:	00 00                	add    BYTE PTR [rax],al
    e8b7:	00 42 61             	add    BYTE PTR [rdx+0x61],al
    e8ba:	73 69                	jae    e925 <_IO_stdin_used+0x1925>
    e8bc:	63 20                	movsxd esp,DWORD PTR [rax]
    e8be:	70 6f                	jo     e92f <_IO_stdin_used+0x192f>
    e8c0:	72 74                	jb     e936 <_IO_stdin_used+0x1936>
    e8c2:	73 63                	jae    e927 <_IO_stdin_used+0x1927>
    e8c4:	61                   	(bad)  
    e8c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e8c6:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    e8ca:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    e8cf:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    e8d2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e8d3:	6d                   	ins    DWORD PTR es:[rdi],dx
    e8d4:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    e8d7:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    e8da:	64 72 65             	fs jb  e942 <_IO_stdin_used+0x1942>
    e8dd:	73 73                	jae    e952 <_IO_stdin_used+0x1952>
    e8df:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f358 <_IO_stdin_used+0x2358>
    e8e5:	00 00                	add    BYTE PTR [rax],al
    e8e7:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    e8ea:	72 74                	jb     e960 <_IO_stdin_used+0x1960>
    e8ec:	73 63                	jae    e951 <_IO_stdin_used+0x1951>
    e8ee:	61                   	(bad)  
    e8ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e8f0:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    e8f4:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    e8f9:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    e8fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e8fd:	6d                   	ins    DWORD PTR es:[rdi],dx
    e8fe:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 74620977 <_end+0x744e496f>
    e904:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f37d <_IO_stdin_used+0x237d>
    e90a:	00 00                	add    BYTE PTR [rax],al
    e90c:	00 00                	add    BYTE PTR [rax],al
    e90e:	00 00                	add    BYTE PTR [rax],al
    e910:	46                   	rex.RX
    e911:	49                   	rex.WB
    e912:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    e916:	72 74                	jb     e98c <_IO_stdin_used+0x198c>
    e918:	73 63                	jae    e97d <_IO_stdin_used+0x197d>
    e91a:	61                   	(bad)  
    e91b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e91c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    e920:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    e925:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    e928:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e929:	6d                   	ins    DWORD PTR es:[rdi],dx
    e92a:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    e92d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    e930:	64 72 65             	fs jb  e998 <_IO_stdin_used+0x1998>
    e933:	73 73                	jae    e9a8 <_IO_stdin_used+0x19a8>
    e935:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f3ae <__GNU_EH_FRAME_HDR+0xa>
    e93b:	00 00                	add    BYTE PTR [rax],al
    e93d:	00 00                	add    BYTE PTR [rax],al
    e93f:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    e942:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    e946:	72 74                	jb     e9bc <_IO_stdin_used+0x19bc>
    e948:	73 63                	jae    e9ad <_IO_stdin_used+0x19ad>
    e94a:	61                   	(bad)  
    e94b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e94c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    e950:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    e955:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    e958:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e959:	6d                   	ins    DWORD PTR es:[rdi],dx
    e95a:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 746209d3 <_end+0x744e49cb>
    e960:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000f3d9 <_end+0x2fed33d1>
    e966:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    e969:	30 2e                	xor    BYTE PTR [rsi],ch
    e96b:	31 00                	xor    DWORD PTR [rax],eax
    e96d:	30 2e                	xor    BYTE PTR [rsi],ch
    e96f:	30 2e                	xor    BYTE PTR [rsi],ch
    e971:	30 2e                	xor    BYTE PTR [rsi],ch
    e973:	31 00                	xor    DWORD PTR [rax],eax
    e975:	00 00                	add    BYTE PTR [rax],al
    e977:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    e97a:	70 20                	jo     e99c <_IO_stdin_used+0x199c>
    e97c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    e97e:	74 72                	je     e9f2 <_IO_stdin_used+0x19f2>
    e980:	79 20                	jns    e9a2 <_IO_stdin_used+0x19a2>
    e982:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    e985:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e986:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    e98c:	72 20                	jb     e9ae <_IO_stdin_used+0x19ae>
    e98e:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    e995:	65 73 73             	gs jae ea0b <_IO_stdin_used+0x1a0b>
    e998:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77212411 <_end+0x770d6409>
    e99e:	61                   	(bad)  
    e99f:	73 20                	jae    e9c1 <_IO_stdin_used+0x19c1>
    e9a1:	25 73 20 69 73       	and    eax,0x73692073
    e9a6:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    e9a9:	77 20                	ja     e9cb <_IO_stdin_used+0x19cb>
    e9ab:	25 73 00 72 00       	and    eax,0x720073
    e9b0:	2f                   	(bad)  
    e9b1:	75 73                	jne    ea26 <_IO_stdin_used+0x1a26>
    e9b3:	72 2f                	jb     e9e4 <_IO_stdin_used+0x19e4>
    e9b5:	73 68                	jae    ea1f <_IO_stdin_used+0x1a1f>
    e9b7:	61                   	(bad)  
    e9b8:	72 65                	jb     ea1f <_IO_stdin_used+0x1a1f>
    e9ba:	2f                   	(bad)  
    e9bb:	76 69                	jbe    ea26 <_IO_stdin_used+0x1a26>
    e9bd:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    e9c4:	63 61 
    e9c6:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    e9c9:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    e9cd:	00 00                	add    BYTE PTR [rax],al
    e9cf:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    e9d2:	75 6c                	jne    ea40 <_IO_stdin_used+0x1a40>
    e9d4:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    e9d8:	74 20                	je     e9fa <_IO_stdin_used+0x19fa>
    e9da:	6c                   	ins    BYTE PTR es:[rdi],dx
    e9db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e9dc:	61                   	(bad)  
    e9dd:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    e9e1:	70 20                	jo     ea03 <_IO_stdin_used+0x1a03>
    e9e3:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    e9e6:	68 65 20 66 72       	push   0x72662065
    e9eb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e9ec:	6d                   	ins    DWORD PTR es:[rdi],dx
    e9ed:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    e9f1:	61                   	(bad)  
    e9f2:	62 61                	(bad)  
    e9f4:	73 65                	jae    ea5b <_IO_stdin_used+0x1a5b>
    e9f6:	2c 20                	sub    al,0x20
    e9f8:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    e9ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ea00:	65 78 69             	gs js  ea6c <_IO_stdin_used+0x1a6c>
    ea03:	73 74                	jae    ea79 <_IO_stdin_used+0x1a79>
    ea05:	61                   	(bad)  
    ea06:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ea07:	74 00                	je     ea09 <_IO_stdin_used+0x1a09>
    ea09:	0a 00                	or     al,BYTE PTR [rax]
    ea0b:	2c 00                	sub    al,0x0
    ea0d:	00 00                	add    BYTE PTR [rax],al
    ea0f:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    ea12:	64 61                	fs (bad) 
    ea14:	74 69                	je     ea7f <_IO_stdin_used+0x1a7f>
    ea16:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ea17:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    ea1c:	53                   	push   rbx
    ea1d:	51                   	push   rcx
    ea1e:	6c                   	ins    BYTE PTR es:[rdi],dx
    ea1f:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    ea26:	6f 
    ea27:	72 3a                	jb     ea63 <_IO_stdin_used+0x1a63>
    ea29:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # f4a2 <__GNU_EH_FRAME_HDR+0xfe>
    ea2f:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    ea32:	53                   	push   rbx
    ea33:	45 52                	rex.RB push r10
    ea35:	54                   	push   rsp
    ea36:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    ea39:	54                   	push   rsp
    ea3a:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    ea3e:	70 5f                	jo     ea9f <_IO_stdin_used+0x1a9f>
    ea40:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    ea43:	68 65 20 28 69       	push   0x69282065
    ea48:	70 5f                	jo     eaa9 <_IO_stdin_used+0x1aa9>
    ea4a:	61                   	(bad)  
    ea4b:	64 64 72 65          	fs fs jb eab4 <_IO_stdin_used+0x1ab4>
    ea4f:	73 73                	jae    eac4 <_IO_stdin_used+0x1ac4>
    ea51:	2c 20                	sub    al,0x20
    ea53:	6d                   	ins    DWORD PTR es:[rdi],dx
    ea54:	61                   	(bad)  
    ea55:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    ea58:	64 64 72 65          	fs fs jb eac1 <_IO_stdin_used+0x1ac1>
    ea5c:	73 73                	jae    ead1 <_IO_stdin_used+0x1ad1>
    ea5e:	29 20                	sub    DWORD PTR [rax],esp
    ea60:	56                   	push   rsi
    ea61:	41                   	rex.B
    ea62:	4c 55                	rex.WR push rbp
    ea64:	45 53                	rex.RB push r11
    ea66:	20 28                	and    BYTE PTR [rax],ch
    ea68:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202d0ce1 <_end+0x20194cd9>
    ea6e:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b2a0ce7 <_end+0x3b164cdf>
    ea74:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    ea77:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    ea7e:	63 6f 
    ea80:	75 6e                	jne    eaf0 <_IO_stdin_used+0x1af0>
    ea82:	74 65                	je     eae9 <_IO_stdin_used+0x1ae9>
    ea84:	72 65                	jb     eaeb <_IO_stdin_used+0x1aeb>
    ea86:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    ea8a:	72 6f                	jb     eafb <_IO_stdin_used+0x1afb>
    ea8c:	72 3a                	jb     eac8 <_IO_stdin_used+0x1ac8>
    ea8e:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00f507 <_end+0x2eed34ff>
    ea94:	75 73                	jne    eb09 <_IO_stdin_used+0x1b09>
    ea96:	72 2f                	jb     eac7 <_IO_stdin_used+0x1ac7>
    ea98:	73 68                	jae    eb02 <_IO_stdin_used+0x1b02>
    ea9a:	61                   	(bad)  
    ea9b:	72 65                	jb     eb02 <_IO_stdin_used+0x1b02>
    ea9d:	2f                   	(bad)  
    ea9e:	76 69                	jbe    eb09 <_IO_stdin_used+0x1b09>
    eaa0:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    eaa7:	2e 64 
    eaa9:	62                   	(bad)  
    eaaa:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    eaad:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    eab4:	72 6f 
    eab6:	72 20                	jb     ead8 <_IO_stdin_used+0x1ad8>
    eab8:	25 73 0a 00 00       	and    eax,0xa73
    eabd:	00 00                	add    BYTE PTR [rax],al
    eabf:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    eac2:	53                   	push   rbx
    eac3:	45 52                	rex.RB push r10
    eac5:	54                   	push   rsp
    eac6:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    eac9:	54                   	push   rsp
    eaca:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    eace:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    ead5:	20 28                	and    BYTE PTR [rax],ch
    ead7:	73 65                	jae    eb3e <_IO_stdin_used+0x1b3e>
    ead9:	72 76                	jb     eb51 <_IO_stdin_used+0x1b51>
    eadb:	5f                   	pop    rdi
    eadc:	61                   	(bad)  
    eadd:	64 64 72 2c          	fs fs jb eb0d <_IO_stdin_used+0x1b0d>
    eae1:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    eae4:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    eaeb:	73 65                	jae    eb52 <_IO_stdin_used+0x1b52>
    eaed:	72 76                	jb     eb65 <_IO_stdin_used+0x1b65>
    eaef:	5f                   	pop    rdi
    eaf0:	70 6f                	jo     eb61 <_IO_stdin_used+0x1b61>
    eaf2:	72 74                	jb     eb68 <_IO_stdin_used+0x1b68>
    eaf4:	2c 63                	sub    al,0x63
    eaf6:	6c                   	ins    BYTE PTR es:[rdi],dx
    eaf7:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    eafe:	73 65                	jae    eb65 <_IO_stdin_used+0x1b65>
    eb00:	72 76                	jb     eb78 <_IO_stdin_used+0x1b78>
    eb02:	5f                   	pop    rdi
    eb03:	70 6b                	jo     eb70 <_IO_stdin_used+0x1b70>
    eb05:	74 5f                	je     eb66 <_IO_stdin_used+0x1b66>
    eb07:	73 65                	jae    eb6e <_IO_stdin_used+0x1b6e>
    eb09:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eb0a:	74 2c                	je     eb38 <_IO_stdin_used+0x1b38>
    eb0c:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    eb10:	70 6b                	jo     eb7d <_IO_stdin_used+0x1b7d>
    eb12:	74 5f                	je     eb73 <_IO_stdin_used+0x1b73>
    eb14:	73 65                	jae    eb7b <_IO_stdin_used+0x1b7b>
    eb16:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eb17:	74 2c                	je     eb45 <_IO_stdin_used+0x1b45>
    eb19:	73 65                	jae    eb80 <_IO_stdin_used+0x1b80>
    eb1b:	72 76                	jb     eb93 <_IO_stdin_used+0x1b93>
    eb1d:	5f                   	pop    rdi
    eb1e:	70 6b                	jo     eb8b <_IO_stdin_used+0x1b8b>
    eb20:	74 5f                	je     eb81 <_IO_stdin_used+0x1b81>
    eb22:	72 65                	jb     eb89 <_IO_stdin_used+0x1b89>
    eb24:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    eb27:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    eb2b:	70 6b                	jo     eb98 <_IO_stdin_used+0x1b98>
    eb2d:	74 5f                	je     eb8e <_IO_stdin_used+0x1b8e>
    eb2f:	72 65                	jb     eb96 <_IO_stdin_used+0x1b96>
    eb31:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    eb34:	70 72                	jo     eba8 <_IO_stdin_used+0x1ba8>
    eb36:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eb37:	74 6f                	je     eba8 <_IO_stdin_used+0x1ba8>
    eb39:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    eb3c:	2c 61                	sub    al,0x61
    eb3e:	76 67                	jbe    eba7 <_IO_stdin_used+0x1ba7>
    eb40:	5f                   	pop    rdi
    eb41:	70 70                	jo     ebb3 <_IO_stdin_used+0x1bb3>
    eb43:	73 2c                	jae    eb71 <_IO_stdin_used+0x1b71>
    eb45:	73 74                	jae    ebbb <_IO_stdin_used+0x1bbb>
    eb47:	61                   	(bad)  
    eb48:	72 74                	jb     ebbe <_IO_stdin_used+0x1bbe>
    eb4a:	5f                   	pop    rdi
    eb4b:	74 69                	je     ebb6 <_IO_stdin_used+0x1bb6>
    eb4d:	6d                   	ins    DWORD PTR es:[rdi],dx
    eb4e:	65 2c 65             	gs sub al,0x65
    eb51:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eb52:	64 5f                	fs pop rdi
    eb54:	74 69                	je     ebbf <_IO_stdin_used+0x1bbf>
    eb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    eb57:	65 2c 64             	gs sub al,0x64
    eb5a:	61                   	(bad)  
    eb5b:	74 61                	je     ebbe <_IO_stdin_used+0x1bbe>
    eb5d:	5f                   	pop    rdi
    eb5e:	70 6b                	jo     ebcb <_IO_stdin_used+0x1bcb>
    eb60:	74 73                	je     ebd5 <_IO_stdin_used+0x1bd5>
    eb62:	2c 63                	sub    al,0x63
    eb64:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eb65:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eb66:	74 72                	je     ebda <_IO_stdin_used+0x1bda>
    eb68:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eb69:	6c                   	ins    BYTE PTR es:[rdi],dx
    eb6a:	5f                   	pop    rdi
    eb6b:	70 6b                	jo     ebd8 <_IO_stdin_used+0x1bd8>
    eb6d:	74 73                	je     ebe2 <_IO_stdin_used+0x1be2>
    eb6f:	29 20                	sub    DWORD PTR [rax],esp
    eb71:	56                   	push   rsi
    eb72:	41                   	rex.B
    eb73:	4c 55                	rex.WR push rbp
    eb75:	45 53                	rex.RB push r11
    eb77:	20 28                	and    BYTE PTR [rax],ch
    eb79:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222d0df2 <_end+0x22194dea>
    eb7f:	25 73 22 2c 25       	and    eax,0x252c2273
    eb84:	6c                   	ins    BYTE PTR es:[rdi],dx
    eb85:	64 2c 25             	fs sub al,0x25
    eb88:	6c                   	ins    BYTE PTR es:[rdi],dx
    eb89:	64 2c 25             	fs sub al,0x25
    eb8c:	64 2c 25             	fs sub al,0x25
    eb8f:	64 2c 25             	fs sub al,0x25
    eb92:	64 2c 25             	fs sub al,0x25
    eb95:	64 2c 25             	fs sub al,0x25
    eb98:	64 2c 25             	fs sub al,0x25
    eb9b:	64 2c 25             	fs sub al,0x25
    eb9e:	6c                   	ins    BYTE PTR es:[rdi],dx
    eb9f:	64 2c 25             	fs sub al,0x25
    eba2:	6c                   	ins    BYTE PTR es:[rdi],dx
    eba3:	64 2c 25             	fs sub al,0x25
    eba6:	64 2c 25             	fs sub al,0x25
    eba9:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    ebac:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    ebaf:	4c                   	rex.WR
    ebb0:	49 54                	rex.WB push r12
    ebb2:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    ebb6:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    ebb9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ebba:	74 65                	je     ec21 <_IO_stdin_used+0x1c21>
    ebbc:	72 65                	jb     ec23 <_IO_stdin_used+0x1c23>
    ebbe:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    ebc2:	72 6f                	jb     ec33 <_IO_stdin_used+0x1c33>
    ebc4:	72 3a                	jb     ec00 <_IO_stdin_used+0x1c00>
    ebc6:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300f63f <_end+0x52ed3637>
    ebcc:	74 72                	je     ec40 <_IO_stdin_used+0x1c40>
    ebce:	6c                   	ins    BYTE PTR es:[rdi],dx
    ebcf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ebd0:	63 20                	movsxd esp,DWORD PTR [rax]
    ebd2:	73 75                	jae    ec49 <_IO_stdin_used+0x1c49>
    ebd4:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    ebd7:	73 73                	jae    ec4c <_IO_stdin_used+0x1c4c>
    ebd9:	66 75 6c             	data16 jne ec48 <_IO_stdin_used+0x1c48>
    ebdc:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    ebdf:	65 72 79             	gs jb  ec5b <_IO_stdin_used+0x1c5b>
    ebe2:	3a 20                	cmp    ah,BYTE PTR [rax]
    ebe4:	25 73 0a 00 4c       	and    eax,0x4c000a73
    ebe9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ebea:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    ebf1:	6f 
    ebf2:	72 72                	jb     ec66 <_IO_stdin_used+0x1c66>
    ebf4:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    ebf9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ebfa:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    ec01:	6f 
    ec02:	72 72                	jb     ec76 <_IO_stdin_used+0x1c76>
    ec04:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    ec09:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ec0a:	73 73                	jae    ec7f <_IO_stdin_used+0x1c7f>
    ec0c:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    ec13:	50                   	push   rax
    ec14:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    ec17:	75 74                	jne    ec8d <_IO_stdin_used+0x1c8d>
    ec19:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    ec1d:	72 63                	jb     ec82 <_IO_stdin_used+0x1c82>
    ec1f:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    ec23:	74 65                	je     ec8a <_IO_stdin_used+0x1c8a>
    ec25:	6d                   	ins    DWORD PTR es:[rdi],dx
    ec26:	70 74                	jo     ec9c <_IO_stdin_used+0x1c9c>
    ec28:	3a 20                	cmp    ah,BYTE PTR [rax]
    ec2a:	25 73 28 73 75       	and    eax,0x75732873
    ec2f:	73 70                	jae    eca1 <_IO_stdin_used+0x1ca1>
    ec31:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    ec36:	2d 3e 20 25 73       	sub    eax,0x7325203e
    ec3b:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 61670ca6 <_end+0x61534c9e>
    ec42:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    ec49:	67 
    ec4a:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    ec51:	50                   	push   rax
    ec52:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    ec57:	4c                   	rex.WR
    ec58:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    ec5c:	54                   	push   rsp
    ec5d:	52                   	push   rdx
    ec5e:	41                   	rex.B
    ec5f:	4e 53                	rex.WRX push rbx
    ec61:	3a 20                	cmp    ah,BYTE PTR [rax]
    ec63:	25 64 3a 20 25       	and    eax,0x25203a64
    ec68:	73 3a                	jae    eca4 <_IO_stdin_used+0x1ca4>
    ec6a:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    ec6f:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642626e8 <_end+0x641266e0>
    ec75:	0a 00                	or     al,BYTE PTR [rax]
    ec77:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ec7a:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    ec7e:	57                   	push   rdi
    ec7f:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    ec82:	4e 56                	rex.WRX push rsi
    ec84:	3a 20                	cmp    ah,BYTE PTR [rax]
    ec86:	25 64 3a 20 25       	and    eax,0x25203a64
    ec8b:	73 3a                	jae    ecc7 <_IO_stdin_used+0x1cc7>
    ec8d:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    ec92:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426270b <_end+0x64126703>
    ec98:	0a 00                	or     al,BYTE PTR [rax]
    ec9a:	00 00                	add    BYTE PTR [rax],al
    ec9c:	00 00                	add    BYTE PTR [rax],al
    ec9e:	00 00                	add    BYTE PTR [rax],al
    eca0:	53                   	push   rbx
    eca1:	50                   	push   rax
    eca2:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    eca7:	20 32                	and    BYTE PTR [rdx],dh
    eca9:	2f                   	(bad)  
    ecaa:	33 3a                	xor    edi,DWORD PTR [rdx]
    ecac:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 25212716 <_end+0x250d670e>
    ecb2:	73 3a                	jae    ecee <_IO_stdin_used+0x1cee>
    ecb4:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    ecb9:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64262732 <_end+0x6412672a>
    ecbf:	0a 00                	or     al,BYTE PTR [rax]
    ecc1:	00 00                	add    BYTE PTR [rax],al
    ecc3:	00 00                	add    BYTE PTR [rax],al
    ecc5:	00 00                	add    BYTE PTR [rax],al
    ecc7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ecca:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    ecce:	54                   	push   rsp
    eccf:	52                   	push   rdx
    ecd0:	59                   	pop    rcx
    ecd1:	3a 20                	cmp    ah,BYTE PTR [rax]
    ecd3:	25 64 3a 20 53       	and    eax,0x53203a64
    ecd8:	45 53                	rex.RB push r11
    ecda:	53                   	push   rbx
    ecdb:	49                   	rex.WB
    ecdc:	4f                   	rex.WRXB
    ecdd:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    ece1:	54                   	push   rsp
    ece2:	3a 20                	cmp    ah,BYTE PTR [rax]
    ece4:	25 73 3a 25 64       	and    eax,0x64253a73
    ece9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260d2d <_end+0x73124d25>
    ecef:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f759 <__GNU_EH_FRAME_HDR+0x3b5>
    ecf5:	00 00                	add    BYTE PTR [rax],al
    ecf7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ecfa:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    ecfe:	54                   	push   rsp
    ecff:	52                   	push   rdx
    ed00:	59                   	pop    rcx
    ed01:	3a 20                	cmp    ah,BYTE PTR [rax]
    ed03:	25 64 3a 20 50       	and    eax,0x50203a64
    ed08:	4f                   	rex.WRXB
    ed09:	4c                   	rex.WR
    ed0a:	49 54                	rex.WB push r12
    ed0c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    ed10:	4e 56                	rex.WRX push rsi
    ed12:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    ed15:	44 20 33             	and    BYTE PTR [rbx],r14b
    ed18:	2f                   	(bad)  
    ed19:	33 3a                	xor    edi,DWORD PTR [rdx]
    ed1b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64262794 <_end+0x6412678c>
    ed21:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260d65 <_end+0x73124d5d>
    ed27:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f791 <__GNU_EH_FRAME_HDR+0x3ed>
    ed2d:	00 00                	add    BYTE PTR [rax],al
    ed2f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ed32:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    ed36:	54                   	push   rsp
    ed37:	52                   	push   rdx
    ed38:	59                   	pop    rcx
    ed39:	3a 20                	cmp    ah,BYTE PTR [rax]
    ed3b:	25 64 3a 20 50       	and    eax,0x50203a64
    ed40:	4f                   	rex.WRXB
    ed41:	4c                   	rex.WR
    ed42:	49 54                	rex.WB push r12
    ed44:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    ed48:	4e 56                	rex.WRX push rsi
    ed4a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    ed4d:	44 20 32             	and    BYTE PTR [rdx],r14b
    ed50:	2f                   	(bad)  
    ed51:	33 3a                	xor    edi,DWORD PTR [rdx]
    ed53:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642627cc <_end+0x641267c4>
    ed59:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260d9d <_end+0x73124d95>
    ed5f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f7c9 <__GNU_EH_FRAME_HDR+0x425>
    ed65:	00 00                	add    BYTE PTR [rax],al
    ed67:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    ed6a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    ed6e:	54                   	push   rsp
    ed6f:	52                   	push   rdx
    ed70:	59                   	pop    rcx
    ed71:	3a 20                	cmp    ah,BYTE PTR [rax]
    ed73:	25 64 3a 20 50       	and    eax,0x50203a64
    ed78:	4f                   	rex.WRXB
    ed79:	4c                   	rex.WR
    ed7a:	49 54                	rex.WB push r12
    ed7c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    ed80:	4e 56                	rex.WRX push rsi
    ed82:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    ed85:	44 20 31             	and    BYTE PTR [rcx],r14b
    ed88:	2f                   	(bad)  
    ed89:	33 3a                	xor    edi,DWORD PTR [rdx]
    ed8b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64262804 <_end+0x641267fc>
    ed91:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260dd5 <_end+0x73124dcd>
    ed97:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f801 <__GNU_EH_FRAME_HDR+0x45d>
    ed9d:	00 00                	add    BYTE PTR [rax],al
    ed9f:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    eda2:	00 00                	add    BYTE PTR [rax],al
    eda4:	00 00                	add    BYTE PTR [rax],al
    eda6:	00 00                	add    BYTE PTR [rax],al
    eda8:	43 52                	rex.XB push r10
    edaa:	49 54                	rex.WB push r12
    edac:	49                   	rex.WB
    edad:	43                   	rex.XB
    edae:	41                   	rex.B
    edaf:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    edb3:	49                   	rex.WB
    edb4:	4c                   	rex.WR
    edb5:	45                   	rex.RB
    edb6:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    edbb:	4f 50                	rex.WRXB push r8
    edbd:	45                   	rex.RB
    edbe:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    edc2:	4c                   	rex.WR
    edc3:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    edc7:	52                   	push   rdx
    edc8:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    edcc:	47                   	rex.RXB
    edcd:	49                   	rex.WB
    edce:	4e                   	rex.WRX
    edcf:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    edd2:	25 73 0a 00 25       	and    eax,0x25000a73
    edd7:	73 20                	jae    edf9 <_IO_stdin_used+0x1df9>
    edd9:	25 73 20 25 73       	and    eax,0x73252073
    edde:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260e22 <_end+0x73124e1a>
    ede4:	0a 00                	or     al,BYTE PTR [rax]
    ede6:	25 73 20 25 73       	and    eax,0x73252073
    edeb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64262864 <_end+0x6412685c>
    edf1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 73260e35 <_end+0x73124e2d>
    edf7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # f861 <__GNU_EH_FRAME_HDR+0x4bd>
    edfd:	00 00                	add    BYTE PTR [rax],al
    edff:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    ee02:	79 00                	jns    ee04 <_IO_stdin_used+0x1e04>
    ee04:	41                   	rex.B
    ee05:	4e 59                	rex.WRX pop rcx
    ee07:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    ee0a:	4d 50                	rex.WRB push r8
    ee0c:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    ee10:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    ee13:	50                   	push   rax
    ee14:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    ee17:	72 5f                	jb     ee78 <_IO_stdin_used+0x1e78>
    ee19:	6d                   	ins    DWORD PTR es:[rdi],dx
    ee1a:	61                   	(bad)  
    ee1b:	74 63                	je     ee80 <_IO_stdin_used+0x1e80>
    ee1d:	68 00 6e 6f 6e       	push   0x6e6f6e00
    ee22:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    ee26:	72 65                	jb     ee8d <_IO_stdin_used+0x1e8d>
    ee28:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    ee2b:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ee2f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ee30:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    ee33:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee34:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    ee39:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    ee3c:	25 73 0a 00 3b       	and    eax,0x3b000a73
    ee41:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    ee44:	75 6e                	jne    eeb4 <_IO_stdin_used+0x1eb4>
    ee46:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    ee4a:	65 72 61             	gs jb  eeae <_IO_stdin_used+0x1eae>
    ee4d:	74 6f                	je     eebe <_IO_stdin_used+0x1ebe>
    ee4f:	72 00                	jb     ee51 <_IO_stdin_used+0x1e51>
    ee51:	61                   	(bad)  
    ee52:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee53:	65 72 74             	gs jb  eeca <_IO_stdin_used+0x1eca>
    ee56:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    ee59:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ee5a:	6d                   	ins    DWORD PTR es:[rdi],dx
    ee5b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    ee5d:	65 74 00             	gs je  ee60 <_IO_stdin_used+0x1e60>
    ee60:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    ee65:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    ee6c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ee6d:	61                   	(bad)  
    ee6e:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee6f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ee70:	65 74 00             	gs je  ee73 <_IO_stdin_used+0x1e73>
    ee73:	22 3b                	and    bh,BYTE PTR [rbx]
    ee75:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    ee78:	6d                   	ins    DWORD PTR es:[rdi],dx
    ee79:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    ee7c:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    ee7f:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    ee82:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    ee86:	74 68                	je     eef0 <_IO_stdin_used+0x1ef0>
    ee88:	3a 00                	cmp    al,BYTE PTR [rax]
    ee8a:	74 79                	je     ef05 <_IO_stdin_used+0x1f05>
    ee8c:	70 65                	jo     eef3 <_IO_stdin_used+0x1ef3>
    ee8e:	3a 00                	cmp    al,BYTE PTR [rax]
    ee90:	74 61                	je     eef3 <_IO_stdin_used+0x1ef3>
    ee92:	72 67                	jb     eefb <_IO_stdin_used+0x1efb>
    ee94:	65 74 3a             	gs je  eed1 <_IO_stdin_used+0x1ed1>
    ee97:	22 00                	and    al,BYTE PTR [rax]
    ee99:	73 65                	jae    ef00 <_IO_stdin_used+0x1f00>
    ee9b:	76 3a                	jbe    eed7 <_IO_stdin_used+0x1ed7>
    ee9d:	00 00                	add    BYTE PTR [rax],al
    ee9f:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    eea2:	6c                   	ins    BYTE PTR es:[rdi],dx
    eea3:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    eea7:	76 65                	jbe    ef0e <_IO_stdin_used+0x1f0e>
    eea9:	72 69                	jb     ef14 <_IO_stdin_used+0x1f14>
    eeab:	74 79                	je     ef26 <_IO_stdin_used+0x1f26>
    eead:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    eeb0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eeb1:	75 6c                	jne    ef1f <_IO_stdin_used+0x1f1f>
    eeb3:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    eeb7:	20 3e                	and    BYTE PTR [rsi],bh
    eeb9:	20 30                	and    BYTE PTR [rax],dh
    eebb:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    eebe:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    eec5:	00 
    eec6:	00 00                	add    BYTE PTR [rax],al
    eec8:	52                   	push   rdx
    eec9:	75 6c                	jne    ef37 <_IO_stdin_used+0x1f37>
    eecb:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    eecf:	76 65                	jbe    ef36 <_IO_stdin_used+0x1f36>
    eed1:	72 69                	jb     ef3c <_IO_stdin_used+0x1f3c>
    eed3:	74 79                	je     ef4e <_IO_stdin_used+0x1f4e>
    eed5:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    eed8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    eed9:	75 6c                	jne    ef47 <_IO_stdin_used+0x1f47>
    eedb:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    eedf:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    eee2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eee3:	75 6d                	jne    ef52 <_IO_stdin_used+0x1f52>
    eee5:	65 72 69             	gs jb  ef51 <_IO_stdin_used+0x1f51>
    eee8:	63 20                	movsxd esp,DWORD PTR [rax]
    eeea:	76 61                	jbe    ef4d <_IO_stdin_used+0x1f4d>
    eeec:	6c                   	ins    BYTE PTR es:[rdi],dx
    eeed:	75 65                	jne    ef54 <_IO_stdin_used+0x1f54>
    eeef:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    eef2:	79 70                	jns    ef64 <_IO_stdin_used+0x1f64>
    eef4:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    eef7:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    eef9:	76 61                	jbe    ef5c <_IO_stdin_used+0x1f5c>
    eefb:	6c                   	ins    BYTE PTR es:[rdi],dx
    eefc:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    ef03:	20 
    ef04:	74 79                	je     ef7f <_IO_stdin_used+0x1f7f>
    ef06:	70 65                	jo     ef6d <_IO_stdin_used+0x1f6d>
    ef08:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    ef0b:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef0c:	75 65                	jne    ef73 <_IO_stdin_used+0x1f73>
    ef0e:	00 00                	add    BYTE PTR [rax],al
    ef10:	25 73 3a 20 69       	and    eax,0x69203a73
    ef15:	74 79                	je     ef90 <_IO_stdin_used+0x1f90>
    ef17:	70 65                	jo     ef7e <_IO_stdin_used+0x1f7e>
    ef19:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    ef1c:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef1d:	79 20                	jns    ef3f <_IO_stdin_used+0x1f3f>
    ef1f:	61                   	(bad)  
    ef20:	70 70                	jo     ef92 <_IO_stdin_used+0x1f92>
    ef22:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef23:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    ef2a:	72 75                	jb     efa1 <_IO_stdin_used+0x1fa1>
    ef2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef2d:	65 73 20             	gs jae ef50 <_IO_stdin_used+0x1f50>
    ef30:	77 69                	ja     ef9b <_IO_stdin_used+0x1f9b>
    ef32:	74 68                	je     ef9c <_IO_stdin_used+0x1f9c>
    ef34:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    ef37:	4d 50                	rex.WRB push r8
    ef39:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    ef3c:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    ef3f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ef40:	74 6f                	je     efb1 <_IO_stdin_used+0x1fb1>
    ef42:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    ef45:	0a 00                	or     al,BYTE PTR [rax]
    ef47:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    ef4e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    ef50:	76 61                	jbe    efb3 <_IO_stdin_used+0x1fb3>
    ef52:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef53:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    ef5a:	70 
    ef5b:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    ef5e:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    ef63:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef64:	75 65                	jne    efcb <_IO_stdin_used+0x1fcb>
    ef66:	00 00                	add    BYTE PTR [rax],al
    ef68:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    ef6f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ef70:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef71:	79 20                	jns    ef93 <_IO_stdin_used+0x1f93>
    ef73:	61                   	(bad)  
    ef74:	70 70                	jo     efe6 <_IO_stdin_used+0x1fe6>
    ef76:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef77:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    ef7e:	72 75                	jb     eff5 <_IO_stdin_used+0x1ff5>
    ef80:	6c                   	ins    BYTE PTR es:[rdi],dx
    ef81:	65 73 20             	gs jae efa4 <_IO_stdin_used+0x1fa4>
    ef84:	77 69                	ja     efef <_IO_stdin_used+0x1fef>
    ef86:	74 68                	je     eff0 <_IO_stdin_used+0x1ff0>
    ef88:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    ef8b:	4d 50                	rex.WRB push r8
    ef8d:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    ef90:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    ef93:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ef94:	74 6f                	je     f005 <_IO_stdin_used+0x2005>
    ef96:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    ef99:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    ef9c:	6d                   	ins    DWORD PTR es:[rdi],dx
    ef9d:	70 5f                	jo     effe <_IO_stdin_used+0x1ffe>
    ef9f:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    efa6:	61 
    efa7:	6c                   	ins    BYTE PTR es:[rdi],dx
    efa8:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    efaf:	20 
    efb0:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    efb7:	65 
	...
    efc0:	49                   	rex.WB
    efc1:	43                   	rex.XB
    efc2:	4d 50                	rex.WRB push r8
    efc4:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    efc7:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    efca:	6c                   	ins    BYTE PTR es:[rdi],dx
    efcb:	79 20                	jns    efed <_IO_stdin_used+0x1fed>
    efcd:	61                   	(bad)  
    efce:	70 70                	jo     f040 <_IO_stdin_used+0x2040>
    efd0:	6c                   	ins    BYTE PTR es:[rdi],dx
    efd1:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    efd8:	72 75                	jb     f04f <_IO_stdin_used+0x204f>
    efda:	6c                   	ins    BYTE PTR es:[rdi],dx
    efdb:	65 73 20             	gs jae effe <_IO_stdin_used+0x1ffe>
    efde:	77 69                	ja     f049 <_IO_stdin_used+0x2049>
    efe0:	74 68                	je     f04a <_IO_stdin_used+0x204a>
    efe2:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    efe5:	4d 50                	rex.WRB push r8
    efe7:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    efea:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    efed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    efee:	74 6f                	je     f05f <_IO_stdin_used+0x205f>
    eff0:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    eff3:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    eff6:	6d                   	ins    DWORD PTR es:[rdi],dx
    eff7:	70 5f                	jo     f058 <_IO_stdin_used+0x2058>
    eff9:	73 65                	jae    f060 <_IO_stdin_used+0x2060>
    effb:	71 3a                	jno    f037 <_IO_stdin_used+0x2037>
    effd:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    f000:	76 61                	jbe    f063 <_IO_stdin_used+0x2063>
    f002:	6c                   	ins    BYTE PTR es:[rdi],dx
    f003:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    f00a:	20 
    f00b:	73 65                	jae    f072 <_IO_stdin_used+0x2072>
    f00d:	71 75                	jno    f084 <_IO_stdin_used+0x2084>
    f00f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    f011:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    f014:	76 61                	jbe    f077 <_IO_stdin_used+0x2077>
    f016:	6c                   	ins    BYTE PTR es:[rdi],dx
    f017:	75 65                	jne    f07e <_IO_stdin_used+0x207e>
    f019:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    f01d:	3a 00                	cmp    al,BYTE PTR [rax]
    f01f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    f021:	76 61                	jbe    f084 <_IO_stdin_used+0x2084>
    f023:	6c                   	ins    BYTE PTR es:[rdi],dx
    f024:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    f02b:	76 
    f02c:	61                   	(bad)  
    f02d:	6c                   	ins    BYTE PTR es:[rdi],dx
    f02e:	75 65                	jne    f095 <_IO_stdin_used+0x2095>
    f030:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    f033:	61                   	(bad)  
    f034:	67 73 3a             	addr32 jae f071 <_IO_stdin_used+0x2071>
    f037:	22 00                	and    al,BYTE PTR [rax]
    f039:	00 00                	add    BYTE PTR [rax],al
    f03b:	00 00                	add    BYTE PTR [rax],al
    f03d:	00 00                	add    BYTE PTR [rax],al
    f03f:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    f042:	61                   	(bad)  
    f043:	67 73 20             	addr32 jae f066 <_IO_stdin_used+0x2066>
    f046:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f047:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f048:	6c                   	ins    BYTE PTR es:[rdi],dx
    f049:	79 20                	jns    f06b <_IO_stdin_used+0x206b>
    f04b:	61                   	(bad)  
    f04c:	70 70                	jo     f0be <_IO_stdin_used+0x20be>
    f04e:	6c                   	ins    BYTE PTR es:[rdi],dx
    f04f:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    f056:	72 75                	jb     f0cd <_IO_stdin_used+0x20cd>
    f058:	6c                   	ins    BYTE PTR es:[rdi],dx
    f059:	65 73 20             	gs jae f07c <_IO_stdin_used+0x207c>
    f05c:	77 69                	ja     f0c7 <_IO_stdin_used+0x20c7>
    f05e:	74 68                	je     f0c8 <_IO_stdin_used+0x20c8>
    f060:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    f064:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    f067:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    f06a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f06b:	74 6f                	je     f0dc <_IO_stdin_used+0x20dc>
    f06d:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    f070:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    f073:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    f076:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    f078:	76 61                	jbe    f0db <_IO_stdin_used+0x20db>
    f07a:	6c                   	ins    BYTE PTR es:[rdi],dx
    f07b:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    f082:	76 
    f083:	61                   	(bad)  
    f084:	6c                   	ins    BYTE PTR es:[rdi],dx
    f085:	75 65                	jne    f0ec <_IO_stdin_used+0x20ec>
    f087:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    f08a:	72 65                	jb     f0f1 <_IO_stdin_used+0x20f1>
    f08c:	3a 22                	cmp    ah,BYTE PTR [rdx]
    f08e:	00 00                	add    BYTE PTR [rax],al
    f090:	46 61                	rex.RX (bad) 
    f092:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    f099:	20 
    f09a:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    f09d:	70 69                	jo     f108 <_IO_stdin_used+0x2108>
    f09f:	6c                   	ins    BYTE PTR es:[rdi],dx
    f0a0:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    f0a4:	67 75 6c             	addr32 jne f113 <_IO_stdin_used+0x2113>
    f0a7:	61                   	(bad)  
    f0a8:	72 20                	jb     f0ca <_IO_stdin_used+0x20ca>
    f0aa:	65 78 70             	gs js  f11d <_IO_stdin_used+0x211d>
    f0ad:	72 65                	jb     f114 <_IO_stdin_used+0x2114>
    f0af:	73 73                	jae    f124 <_IO_stdin_used+0x2124>
    f0b1:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    f0b8:	7a 65                	jp     f11f <_IO_stdin_used+0x211f>
    f0ba:	3a 00                	cmp    al,BYTE PTR [rax]
    f0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f0bd:	66 66 73 65          	data16 data16 jae f126 <_IO_stdin_used+0x2126>
    f0c1:	74 3a                	je     f0fd <_IO_stdin_used+0x20fd>
    f0c3:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    f0c6:	74 61                	je     f129 <_IO_stdin_used+0x2129>
    f0c8:	62                   	(bad)  
    f0c9:	6c                   	ins    BYTE PTR es:[rdi],dx
    f0ca:	69 73 68 65 64 00 25 	imul   esi,DWORD PTR [rbx+0x68],0x25006465
    f0d1:	63 00                	movsxd eax,DWORD PTR [rax]
    f0d3:	25 30 32 78 00       	and    eax,0x783230
    f0d8:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    f0dc:	21 00                	and    DWORD PTR [rax],eax
    f0de:	3c 3d                	cmp    al,0x3d
    f0e0:	00 3e                	add    BYTE PTR [rsi],bh
    f0e2:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    f0e7:	75 70                	jne    f159 <_IO_stdin_used+0x2159>
    f0e9:	70 6f                	jo     f15a <_IO_stdin_used+0x215a>
    f0eb:	72 74                	jb     f161 <_IO_stdin_used+0x2161>
    f0ed:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    f0f2:	65 72 61             	gs jb  f156 <_IO_stdin_used+0x2156>
    f0f5:	74 6f                	je     f166 <_IO_stdin_used+0x2166>
    f0f7:	72 00                	jb     f0f9 <_IO_stdin_used+0x20f9>
    f0f9:	00 00                	add    BYTE PTR [rax],al
    f0fb:	00 8f d2 ff ff e1    	add    BYTE PTR [rdi-0x1e00002e],cl
    f101:	d2 ff                	sar    bh,cl
    f103:	ff                   	(bad)  
    f104:	fa                   	cli    
    f105:	d2 ff                	sar    bh,cl
    f107:	ff af d2 ff ff c8    	jmp    FWORD PTR [rdi-0x3700002e]
    f10d:	d2 ff                	sar    bh,cl
    f10f:	ff 13                	call   QWORD PTR [rbx]
    f111:	d3 ff                	sar    edi,cl
    f113:	ff 2e                	jmp    FWORD PTR [rsi]
    f115:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 79234b <_end+0x656343>
    f11b:	25 30 32 78 20       	and    eax,0x20783230
    f120:	2d 2d 20 25 30       	sub    eax,0x3025202d
    f125:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
	...
    f130:	73 72                	jae    f1a4 <_IO_stdin_used+0x21a4>
    f132:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    f134:	6c                   	ins    BYTE PTR es:[rdi],dx
    f135:	75 61                	jne    f198 <_IO_stdin_used+0x2198>
    f137:	2f                   	(bad)  
    f138:	73 63                	jae    f19d <_IO_stdin_used+0x219d>
    f13a:	72 69                	jb     f1a5 <_IO_stdin_used+0x21a5>
    f13c:	70 74                	jo     f1b2 <_IO_stdin_used+0x21b2>
    f13e:	73 2f                	jae    f16f <_IO_stdin_used+0x216f>
    f140:	68 65 6c 6c 6f       	push   0x6f6c6c65
    f145:	74 65                	je     f1ac <_IO_stdin_used+0x21ac>
    f147:	73 74                	jae    f1bd <_IO_stdin_used+0x21bd>
    f149:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    f14b:	75 61                	jne    f1ae <_IO_stdin_used+0x21ae>
    f14d:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    f150:	2f                   	(bad)  
    f151:	65 74 63             	gs je  f1b7 <_IO_stdin_used+0x21b7>
    f154:	2f                   	(bad)  
    f155:	76 69                	jbe    f1c0 <_IO_stdin_used+0x21c0>
    f157:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    f15e:	72 69 
    f160:	70 74                	jo     f1d6 <_IO_stdin_used+0x21d6>
    f162:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    f166:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    f16a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    f171:	20 
    f172:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    f175:	6c                   	ins    BYTE PTR es:[rdi],dx
    f176:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    f17b:	75 61                	jne    f1de <_IO_stdin_used+0x21de>
    f17d:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    f180:	72 69                	jb     f1eb <_IO_stdin_used+0x21eb>
    f182:	70 74                	jo     f1f8 <_IO_stdin_used+0x21f8>
    f184:	73 3a                	jae    f1c0 <_IO_stdin_used+0x21c0>
    f186:	20 2f                	and    BYTE PTR [rdi],ch
    f188:	65 74 63             	gs je  f1ee <_IO_stdin_used+0x21ee>
    f18b:	2f                   	(bad)  
    f18c:	76 69                	jbe    f1f7 <_IO_stdin_used+0x21f7>
    f18e:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    f195:	72 69 
    f197:	70 74                	jo     f20d <_IO_stdin_used+0x220d>
    f199:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    f19d:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    f1a1:	74 20                	je     f1c3 <_IO_stdin_used+0x21c3>
    f1a3:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    f1a5:	75 6e                	jne    f215 <_IO_stdin_used+0x2215>
    f1a7:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    f1ab:	2a 2e                	sub    ch,BYTE PTR [rsi]
    f1ad:	6c                   	ins    BYTE PTR es:[rdi],dx
    f1ae:	75 61                	jne    f211 <_IO_stdin_used+0x2211>
    f1b0:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    f1b2:	2a 00                	sub    al,BYTE PTR [rax]
    f1b4:	6c                   	ins    BYTE PTR es:[rdi],dx
    f1b5:	5f                   	pop    rdi
    f1b6:	73 63                	jae    f21b <_IO_stdin_used+0x221b>
    f1b8:	72 69                	jb     f223 <_IO_stdin_used+0x2223>
    f1ba:	70 74                	jo     f230 <_IO_stdin_used+0x2230>
    f1bc:	5f                   	pop    rdi
    f1bd:	72 6f                	jb     f22e <_IO_stdin_used+0x222e>
    f1bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f1c0:	74 3d                	je     f1ff <_IO_stdin_used+0x21ff>
    f1c2:	00 0a                	add    BYTE PTR [rdx],cl
    f1c4:	00 00                	add    BYTE PTR [rax],al
    f1c6:	00 00                	add    BYTE PTR [rax],al
    f1c8:	49 50                	rex.WB push r8
    f1ca:	76 36                	jbe    f202 <_IO_stdin_used+0x2202>
    f1cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2e1245 <_end+0x3e1a523d>
    f1d2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7251124b <_end+0x723d5243>
    f1d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f1d9:	74 6f                	je     f24a <_IO_stdin_used+0x224a>
    f1db:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    f1de:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    f1e1:	6d                   	ins    DWORD PTR es:[rdi],dx
    f1e2:	62                   	(bad)  
    f1e3:	65 72 20             	gs jb  f206 <_IO_stdin_used+0x2206>
    f1e6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    f1eb:	00 00                	add    BYTE PTR [rax],al
    f1ed:	00 00                	add    BYTE PTR [rax],al
    f1ef:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    f1f2:	67 6d                	ins    DWORD PTR es:[edi],dx
    f1f4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    f1f6:	74 61                	je     f259 <_IO_stdin_used+0x2259>
    f1f8:	74 69                	je     f263 <_IO_stdin_used+0x2263>
    f1fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f1fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f1fc:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    f1ff:	75 6c                	jne    f26d <_IO_stdin_used+0x226d>
    f201:	74 20                	je     f223 <_IO_stdin_used+0x2223>
    f203:	61                   	(bad)  
    f204:	74 20                	je     f226 <_IO_stdin_used+0x2226>
    f206:	25 73 3a 20 61       	and    eax,0x61203a73
    f20b:	70 70                	jo     f27d <_IO_stdin_used+0x227d>
    f20d:	6c                   	ins    BYTE PTR es:[rdi],dx
    f20e:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    f215:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    f218:	61                   	(bad)  
    f219:	73 68                	jae    f283 <_IO_stdin_used+0x2283>
    f21b:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    f21f:	46 75 6e             	rex.RX jne f290 <_IO_stdin_used+0x2290>
    f222:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    f226:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f227:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    f22a:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    f22d:	72 61                	jb     f290 <_IO_stdin_used+0x2290>
    f22f:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    f232:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    f236:	00 25 73 0a 00 25    	add    BYTE PTR [rip+0x25000a73],ah        # 2500fcaf <_end+0x24ed3ca7>
    f23c:	73 28                	jae    f266 <_IO_stdin_used+0x2266>
    f23e:	2e 2f                	cs (bad) 
    f240:	76 69                	jbe    f2ab <_IO_stdin_used+0x22ab>
    f242:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    f249:	28 2b 
    f24b:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    f24e:	30 32                	xor    BYTE PTR [rdx],dh
    f250:	78 29                	js     f27b <_IO_stdin_used+0x227b>
    f252:	29 0a                	sub    DWORD PTR [rdx],ecx
    f254:	00 00                	add    BYTE PTR [rax],al
    f256:	00 00                	add    BYTE PTR [rax],al
    f258:	55                   	push   rbp
    f259:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f25a:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    f25e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f25f:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    f262:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f263:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    f267:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f268:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    f26b:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    f26e:	6d                   	ins    DWORD PTR es:[rdi],dx
    f26f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f270:	72 79                	jb     f2eb <_IO_stdin_used+0x22eb>
    f272:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    f275:	66 73 65             	data16 jae f2dd <_IO_stdin_used+0x22dd>
    f278:	74 20                	je     f29a <_IO_stdin_used+0x229a>
    f27a:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    f27d:	30 32                	xor    BYTE PTR [rdx],dh
    f27f:	78 0a                	js     f28b <_IO_stdin_used+0x228b>
    f281:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    f284:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    f28b:	44 
    f28c:	75 6d                	jne    f2fb <_IO_stdin_used+0x22fb>
    f28e:	70 3a                	jo     f2ca <_IO_stdin_used+0x22ca>
    f290:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f293:	41 58                	pop    r8
    f295:	5d                   	pop    rbp
    f296:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 257922bc <_end+0x256562b4>
    f29c:	30 32                	xor    BYTE PTR [rdx],dh
    f29e:	78 0a                	js     f2aa <_IO_stdin_used+0x22aa>
    f2a0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f2a3:	42 58                	rex.X pop rax
    f2a5:	5d                   	pop    rbp
    f2a6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 257922cc <_end+0x256562c4>
    f2ac:	30 32                	xor    BYTE PTR [rdx],dh
    f2ae:	78 0a                	js     f2ba <_IO_stdin_used+0x22ba>
    f2b0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f2b3:	43 58                	rex.XB pop r8
    f2b5:	5d                   	pop    rbp
    f2b6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 257922dc <_end+0x256562d4>
    f2bc:	30 32                	xor    BYTE PTR [rdx],dh
    f2be:	78 0a                	js     f2ca <_IO_stdin_used+0x22ca>
    f2c0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f2c3:	44 58                	rex.R pop rax
    f2c5:	5d                   	pop    rbp
    f2c6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 257922ec <_end+0x256562e4>
    f2cc:	30 32                	xor    BYTE PTR [rdx],dh
    f2ce:	78 0a                	js     f2da <_IO_stdin_used+0x22da>
    f2d0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f2d3:	53                   	push   rbx
    f2d4:	50                   	push   rax
    f2d5:	5d                   	pop    rbp
    f2d6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 257922fc <_end+0x256562f4>
    f2dc:	30 32                	xor    BYTE PTR [rdx],dh
    f2de:	78 0a                	js     f2ea <_IO_stdin_used+0x22ea>
    f2e0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    f2e3:	42 50                	rex.X push rax
    f2e5:	5d                   	pop    rbp
    f2e6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 2579230c <_end+0x25656304>
    f2ec:	30 32                	xor    BYTE PTR [rdx],dh
    f2ee:	78 0a                	js     f2fa <_IO_stdin_used+0x22fa>
    f2f0:	00 25 70 0a 00 30    	add    BYTE PTR [rip+0x30000a70],ah        # 3000fd66 <_end+0x2fed3d5e>
    f2f6:	78 25                	js     f31d <_IO_stdin_used+0x231d>
    f2f8:	30 32                	xor    BYTE PTR [rdx],dh
    f2fa:	78 0a                	js     f306 <_IO_stdin_used+0x2306>
    f2fc:	00 00                	add    BYTE PTR [rax],al
    f2fe:	00 00                	add    BYTE PTR [rax],al
    f300:	25 73 20 5b 73       	and    eax,0x735b2073
    f305:	74 61                	je     f368 <_IO_stdin_used+0x2368>
    f307:	72 74                	jb     f37d <_IO_stdin_used+0x237d>
    f309:	20 25 64 5d 20 5b    	and    BYTE PTR [rip+0x5b205d64],ah        # 5b215073 <_end+0x5b0d906b>
    f30f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    f311:	64 20 25 64 5d 0a 00 	and    BYTE PTR fs:[rip+0xa5d64],ah        # b507c <rules+0xa2d9c>
    f318:	72 00                	jb     f31a <_IO_stdin_used+0x231a>
    f31a:	2f                   	(bad)  
    f31b:	75 73                	jne    f390 <_IO_stdin_used+0x2390>
    f31d:	72 2f                	jb     f34e <_IO_stdin_used+0x234e>
    f31f:	73 68                	jae    f389 <_IO_stdin_used+0x2389>
    f321:	61                   	(bad)  
    f322:	72 65                	jb     f389 <_IO_stdin_used+0x2389>
    f324:	2f                   	(bad)  
    f325:	76 69                	jbe    f390 <_IO_stdin_used+0x2390>
    f327:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    f32e:	6d 61 
    f330:	70 2e                	jo     f360 <_IO_stdin_used+0x2360>
    f332:	74 78                	je     f3ac <__GNU_EH_FRAME_HDR+0x8>
    f334:	74 00                	je     f336 <_IO_stdin_used+0x2336>
    f336:	00 00                	add    BYTE PTR [rax],al
    f338:	46                   	rex.RX
    f339:	41 54                	push   r12
    f33b:	41                   	rex.B
    f33c:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    f340:	52                   	push   rdx
    f341:	4f 52                	rex.WRXB push r10
    f343:	3a 20                	cmp    ah,BYTE PTR [rax]
    f345:	6d                   	ins    DWORD PTR es:[rdi],dx
    f346:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    f348:	6d                   	ins    DWORD PTR es:[rdi],dx
    f349:	61                   	(bad)  
    f34a:	70 2e                	jo     f37a <_IO_stdin_used+0x237a>
    f34c:	74 78                	je     f3c6 <__GNU_EH_FRAME_HDR+0x22>
    f34e:	74 20                	je     f370 <_IO_stdin_used+0x2370>
    f350:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f351:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f352:	74 20                	je     f374 <_IO_stdin_used+0x2374>
    f354:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    f356:	75 6e                	jne    f3c6 <__GNU_EH_FRAME_HDR+0x22>
    f358:	64 2e 50             	fs cs push rax
    f35b:	6c                   	ins    BYTE PTR es:[rdi],dx
    f35c:	65 61                	gs (bad) 
    f35e:	73 65                	jae    f3c5 <__GNU_EH_FRAME_HDR+0x21>
    f360:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    f363:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    f366:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f367:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    f36a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f36b:	5f                   	pop    rdi
    f36c:	6d                   	ins    DWORD PTR es:[rdi],dx
    f36d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    f36f:	5f                   	pop    rdi
    f370:	6d                   	ins    DWORD PTR es:[rdi],dx
    f371:	61                   	(bad)  
    f372:	70 2e                	jo     f3a2 <_IO_stdin_used+0x23a2>
    f374:	70 79                	jo     f3ef <__GNU_EH_FRAME_HDR+0x4b>
    f376:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    f379:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    f37d:	70 79                	jo     f3f8 <__GNU_EH_FRAME_HDR+0x54>
    f37f:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    f382:	6d                   	ins    DWORD PTR es:[rdi],dx
    f383:	6d                   	ins    DWORD PTR es:[rdi],dx
    f384:	61                   	(bad)  
    f385:	70 2e                	jo     f3b5 <__GNU_EH_FRAME_HDR+0x11>
    f387:	74 78                	je     f401 <__GNU_EH_FRAME_HDR+0x5d>
    f389:	74 20                	je     f3ab <__GNU_EH_FRAME_HDR+0x7>
    f38b:	74 6f                	je     f3fc <__GNU_EH_FRAME_HDR+0x58>
    f38d:	20 2f                	and    BYTE PTR [rdi],ch
    f38f:	75 73                	jne    f404 <__GNU_EH_FRAME_HDR+0x60>
    f391:	72 2f                	jb     f3c2 <__GNU_EH_FRAME_HDR+0x1e>
    f393:	73 68                	jae    f3fd <__GNU_EH_FRAME_HDR+0x59>
    f395:	61                   	(bad)  
    f396:	72 65                	jb     f3fd <__GNU_EH_FRAME_HDR+0x59>
    f398:	2f                   	(bad)  
    f399:	76 69                	jbe    f404 <__GNU_EH_FRAME_HDR+0x60>
    f39b:	67                   	addr32
    f39c:	69                   	.byte 0x69
    f39d:	6c                   	ins    BYTE PTR es:[rdi],dx
    f39e:	00 0a                	add    BYTE PTR [rdx],cl
    f3a0:	00 20                	add    BYTE PTR [rax],ah
	...

Disassembly of section .eh_frame_hdr:

000000000000f3a4 <__GNU_EH_FRAME_HDR>:
    f3a4:	01 1b                	add    DWORD PTR [rbx],ebx
    f3a6:	03 3b                	add    edi,DWORD PTR [rbx]
    f3a8:	e0 03                	loopne f3ad <__GNU_EH_FRAME_HDR+0x9>
    f3aa:	00 00                	add    BYTE PTR [rax],al
    f3ac:	7b 00                	jnp    f3ae <__GNU_EH_FRAME_HDR+0xa>
    f3ae:	00 00                	add    BYTE PTR [rax],al
    f3b0:	7c 2c                	jl     f3de <__GNU_EH_FRAME_HDR+0x3a>
    f3b2:	ff                   	(bad)  
    f3b3:	ff 14 04             	call   QWORD PTR [rsp+rax*1]
    f3b6:	00 00                	add    BYTE PTR [rax],al
    f3b8:	fc                   	cld    
    f3b9:	30 ff                	xor    bh,bh
    f3bb:	ff                   	(bad)  
    f3bc:	3c 04                	cmp    al,0x4
    f3be:	00 00                	add    BYTE PTR [rax],al
    f3c0:	0c 31                	or     al,0x31
    f3c2:	ff                   	(bad)  
    f3c3:	ff 54 04 00          	call   QWORD PTR [rsp+rax*1+0x0]
    f3c7:	00 7c 35 ff          	add    BYTE PTR [rbp+rsi*1-0x1],bh
    f3cb:	ff                   	(bad)  
    f3cc:	fc                   	cld    
    f3cd:	03 00                	add    eax,DWORD PTR [rax]
    f3cf:	00 65 36             	add    BYTE PTR [rbp+0x36],ah
    f3d2:	ff                   	(bad)  
    f3d3:	ff 6c 04 00          	jmp    FWORD PTR [rsp+rax*1+0x0]
    f3d7:	00 9f 36 ff ff 8c    	add    BYTE PTR [rdi-0x730000ca],bl
    f3dd:	04 00                	add    al,0x0
    f3df:	00 eb                	add    bl,ch
    f3e1:	37                   	(bad)  
    f3e2:	ff                   	(bad)  
    f3e3:	ff b4 04 00 00 df 3a 	push   QWORD PTR [rsp+rax*1+0x3adf0000]
    f3ea:	ff                   	(bad)  
    f3eb:	ff d4                	call   rsp
    f3ed:	04 00                	add    al,0x0
    f3ef:	00 f2                	add    dl,dh
    f3f1:	3b ff                	cmp    edi,edi
    f3f3:	ff f4                	push   rsp
    f3f5:	04 00                	add    al,0x0
    f3f7:	00 a0 3c ff ff 14    	add    BYTE PTR [rax+0x14ffff3c],ah
    f3fd:	05 00 00 46 3d       	add    eax,0x3d460000
    f402:	ff                   	(bad)  
    f403:	ff 34 05 00 00 db 3d 	push   QWORD PTR [rax*1+0x3ddb0000]
    f40a:	ff                   	(bad)  
    f40b:	ff 54 05 00          	call   QWORD PTR [rbp+rax*1+0x0]
    f40f:	00 6f 3e             	add    BYTE PTR [rdi+0x3e],ch
    f412:	ff                   	(bad)  
    f413:	ff 74 05 00          	push   QWORD PTR [rbp+rax*1+0x0]
    f417:	00 3b                	add    BYTE PTR [rbx],bh
    f419:	40 ff                	rex (bad) 
    f41b:	ff a0 05 00 00 0f    	jmp    QWORD PTR [rax+0xf000005]
    f421:	41 ff                	rex.B (bad) 
    f423:	ff c4                	inc    esp
    f425:	05 00 00 d6 41       	add    eax,0x41d60000
    f42a:	ff                   	(bad)  
    f42b:	ff                   	(bad)  
    f42c:	e8 05 00 00 29       	call   2900f436 <_end+0x28ed342e>
    f431:	42 ff                	rex.X (bad) 
    f433:	ff 08                	dec    DWORD PTR [rax]
    f435:	06                   	(bad)  
    f436:	00 00                	add    BYTE PTR [rax],al
    f438:	5c                   	pop    rsp
    f439:	42 ff                	rex.X (bad) 
    f43b:	ff 28                	jmp    FWORD PTR [rax]
    f43d:	06                   	(bad)  
    f43e:	00 00                	add    BYTE PTR [rax],al
    f440:	7d 42                	jge    f484 <__GNU_EH_FRAME_HDR+0xe0>
    f442:	ff                   	(bad)  
    f443:	ff 48 06             	dec    DWORD PTR [rax+0x6]
    f446:	00 00                	add    BYTE PTR [rax],al
    f448:	e5 42                	in     eax,0x42
    f44a:	ff                   	(bad)  
    f44b:	ff 6c 06 00          	jmp    FWORD PTR [rsi+rax*1+0x0]
    f44f:	00 0a                	add    BYTE PTR [rdx],cl
    f451:	47 ff                	rex.RXB (bad) 
    f453:	ff 8c 06 00 00 67 48 	dec    DWORD PTR [rsi+rax*1+0x48670000]
    f45a:	ff                   	(bad)  
    f45b:	ff ac 06 00 00 ab 50 	jmp    FWORD PTR [rsi+rax*1+0x50ab0000]
    f462:	ff                   	(bad)  
    f463:	ff cc                	dec    esp
    f465:	06                   	(bad)  
    f466:	00 00                	add    BYTE PTR [rax],al
    f468:	2c 59                	sub    al,0x59
    f46a:	ff                   	(bad)  
    f46b:	ff f4                	push   rsp
    f46d:	06                   	(bad)  
    f46e:	00 00                	add    BYTE PTR [rax],al
    f470:	81 5a ff ff 14 07 00 	sbb    DWORD PTR [rdx-0x1],0x714ff
    f477:	00 6f 5b             	add    BYTE PTR [rdi+0x5b],ch
    f47a:	ff                   	(bad)  
    f47b:	ff 34 07             	push   QWORD PTR [rdi+rax*1]
    f47e:	00 00                	add    BYTE PTR [rax],al
    f480:	5b                   	pop    rbx
    f481:	5c                   	pop    rsp
    f482:	ff                   	(bad)  
    f483:	ff 54 07 00          	call   QWORD PTR [rdi+rax*1+0x0]
    f487:	00 0d 60 ff ff 74    	add    BYTE PTR [rip+0x74ffff60],cl        # 7500f3ed <_end+0x74ed33e5>
    f48d:	07                   	(bad)  
    f48e:	00 00                	add    BYTE PTR [rax],al
    f490:	90                   	nop
    f491:	60                   	(bad)  
    f492:	ff                   	(bad)  
    f493:	ff 94 07 00 00 ba 62 	call   QWORD PTR [rdi+rax*1+0x62ba0000]
    f49a:	ff                   	(bad)  
    f49b:	ff                   	(bad)  
    f49c:	bc 07 00 00 f7       	mov    esp,0xf7000007
    f4a1:	64 ff                	fs (bad) 
    f4a3:	ff e0                	jmp    rax
    f4a5:	07                   	(bad)  
    f4a6:	00 00                	add    BYTE PTR [rax],al
    f4a8:	5d                   	pop    rbp
    f4a9:	65 ff                	gs (bad) 
    f4ab:	ff 00                	inc    DWORD PTR [rax]
    f4ad:	08 00                	or     BYTE PTR [rax],al
    f4af:	00 74 65 ff          	add    BYTE PTR [rbp+riz*2-0x1],dh
    f4b3:	ff 20                	jmp    QWORD PTR [rax]
    f4b5:	08 00                	or     BYTE PTR [rax],al
    f4b7:	00 c5                	add    ch,al
    f4b9:	65 ff                	gs (bad) 
    f4bb:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    f4bf:	00 02                	add    BYTE PTR [rdx],al
    f4c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    f4c2:	ff                   	(bad)  
    f4c3:	ff 68 08             	jmp    FWORD PTR [rax+0x8]
    f4c6:	00 00                	add    BYTE PTR [rax],al
    f4c8:	1c 6c                	sbb    al,0x6c
    f4ca:	ff                   	(bad)  
    f4cb:	ff 88 08 00 00 45    	dec    DWORD PTR [rax+0x45000008]
    f4d1:	6c                   	ins    BYTE PTR es:[rdi],dx
    f4d2:	ff                   	(bad)  
    f4d3:	ff a8 08 00 00 75    	jmp    FWORD PTR [rax+0x75000008]
    f4d9:	6c                   	ins    BYTE PTR es:[rdi],dx
    f4da:	ff                   	(bad)  
    f4db:	ff c8                	dec    eax
    f4dd:	08 00                	or     BYTE PTR [rax],al
    f4df:	00 ac 6c ff ff e4 08 	add    BYTE PTR [rsp+rbp*2+0x8e4ffff],ch
    f4e6:	00 00                	add    BYTE PTR [rax],al
    f4e8:	f1                   	icebp  
    f4e9:	6d                   	ins    DWORD PTR es:[rdi],dx
    f4ea:	ff                   	(bad)  
    f4eb:	ff 04 09             	inc    DWORD PTR [rcx+rcx*1]
    f4ee:	00 00                	add    BYTE PTR [rax],al
    f4f0:	51                   	push   rcx
    f4f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    f4f2:	ff                   	(bad)  
    f4f3:	ff 24 09             	jmp    QWORD PTR [rcx+rcx*1]
    f4f6:	00 00                	add    BYTE PTR [rax],al
    f4f8:	b2 6f                	mov    dl,0x6f
    f4fa:	ff                   	(bad)  
    f4fb:	ff 44 09 00          	inc    DWORD PTR [rcx+rcx*1+0x0]
    f4ff:	00 70 70             	add    BYTE PTR [rax+0x70],dh
    f502:	ff                   	(bad)  
    f503:	ff 64 09 00          	jmp    QWORD PTR [rcx+rcx*1+0x0]
    f507:	00 c2                	add    dl,al
    f509:	72 ff                	jb     f50a <__GNU_EH_FRAME_HDR+0x166>
    f50b:	ff 84 09 00 00 ba 74 	inc    DWORD PTR [rcx+rcx*1+0x74ba0000]
    f512:	ff                   	(bad)  
    f513:	ff a4 09 00 00 14 75 	jmp    QWORD PTR [rcx+rcx*1+0x75140000]
    f51a:	ff                   	(bad)  
    f51b:	ff c4                	inc    esp
    f51d:	09 00                	or     DWORD PTR [rax],eax
    f51f:	00 23                	add    BYTE PTR [rbx],ah
    f521:	78 ff                	js     f522 <__GNU_EH_FRAME_HDR+0x17e>
    f523:	ff e4                	jmp    rsp
    f525:	09 00                	or     DWORD PTR [rax],eax
    f527:	00 74 7c ff          	add    BYTE PTR [rsp+rdi*2-0x1],dh
    f52b:	ff 04 0a             	inc    DWORD PTR [rdx+rcx*1]
    f52e:	00 00                	add    BYTE PTR [rax],al
    f530:	9e                   	sahf   
    f531:	7c ff                	jl     f532 <__GNU_EH_FRAME_HDR+0x18e>
    f533:	ff 20                	jmp    QWORD PTR [rax]
    f535:	0a 00                	or     al,BYTE PTR [rax]
    f537:	00 50 7e             	add    BYTE PTR [rax+0x7e],dl
    f53a:	ff                   	(bad)  
    f53b:	ff 44 0a 00          	inc    DWORD PTR [rdx+rcx*1+0x0]
    f53f:	00 67 7e             	add    BYTE PTR [rdi+0x7e],ah
    f542:	ff                   	(bad)  
    f543:	ff 64 0a 00          	jmp    QWORD PTR [rdx+rcx*1+0x0]
    f547:	00 b6 7e ff ff 84    	add    BYTE PTR [rsi-0x7b000082],dh
    f54d:	0a 00                	or     al,BYTE PTR [rax]
    f54f:	00 03                	add    BYTE PTR [rbx],al
    f551:	7f ff                	jg     f552 <__GNU_EH_FRAME_HDR+0x1ae>
    f553:	ff a4 0a 00 00 7a 80 	jmp    QWORD PTR [rdx+rcx*1-0x7f860000]
    f55a:	ff                   	(bad)  
    f55b:	ff c0                	inc    eax
    f55d:	0a 00                	or     al,BYTE PTR [rax]
    f55f:	00 f8                	add    al,bh
    f561:	85 ff                	test   edi,edi
    f563:	ff e4                	jmp    rsp
    f565:	0a 00                	or     al,BYTE PTR [rax]
    f567:	00 a6 87 ff ff 0c    	add    BYTE PTR [rsi+0xcffff87],ah
    f56d:	0b 00                	or     eax,DWORD PTR [rax]
    f56f:	00 ed                	add    ch,ch
    f571:	87 ff                	xchg   edi,edi
    f573:	ff 2c 0b             	jmp    FWORD PTR [rbx+rcx*1]
    f576:	00 00                	add    BYTE PTR [rax],al
    f578:	03 8d ff ff 5c 0b    	add    ecx,DWORD PTR [rbp+0xb5cffff]
    f57e:	00 00                	add    BYTE PTR [rax],al
    f580:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f581:	8e ff                	mov    ?,edi
    f583:	ff                   	(bad)  
    f584:	7c 0b                	jl     f591 <__GNU_EH_FRAME_HDR+0x1ed>
    f586:	00 00                	add    BYTE PTR [rax],al
    f588:	b9 8f ff ff 9c       	mov    ecx,0x9cffff8f
    f58d:	0b 00                	or     eax,DWORD PTR [rax]
    f58f:	00 92 92 ff ff c0    	add    BYTE PTR [rdx-0x3f00006e],dl
    f595:	0b 00                	or     eax,DWORD PTR [rax]
    f597:	00 c7                	add    bh,al
    f599:	93                   	xchg   ebx,eax
    f59a:	ff                   	(bad)  
    f59b:	ff e0                	jmp    rax
    f59d:	0b 00                	or     eax,DWORD PTR [rax]
    f59f:	00 38                	add    BYTE PTR [rax],bh
    f5a1:	97                   	xchg   edi,eax
    f5a2:	ff                   	(bad)  
    f5a3:	ff 00                	inc    DWORD PTR [rax]
    f5a5:	0c 00                	or     al,0x0
    f5a7:	00 e3                	add    bl,ah
    f5a9:	98                   	cwde   
    f5aa:	ff                   	(bad)  
    f5ab:	ff 20                	jmp    QWORD PTR [rax]
    f5ad:	0c 00                	or     al,0x0
    f5af:	00 67 9a             	add    BYTE PTR [rdi-0x66],ah
    f5b2:	ff                   	(bad)  
    f5b3:	ff 44 0c 00          	inc    DWORD PTR [rsp+rcx*1+0x0]
    f5b7:	00 55 9c             	add    BYTE PTR [rbp-0x64],dl
    f5ba:	ff                   	(bad)  
    f5bb:	ff 64 0c 00          	jmp    QWORD PTR [rsp+rcx*1+0x0]
    f5bf:	00 3d 9e ff ff 84    	add    BYTE PTR [rip+0xffffffff84ffff9e],bh        # ffffffff8500f563 <_end+0xffffffff84ed355b>
    f5c5:	0c 00                	or     al,0x0
    f5c7:	00 a9 9e ff ff a4    	add    BYTE PTR [rcx-0x5b000062],ch
    f5cd:	0c 00                	or     al,0x0
    f5cf:	00 1b                	add    BYTE PTR [rbx],bl
    f5d1:	9f                   	lahf   
    f5d2:	ff                   	(bad)  
    f5d3:	ff c4                	inc    esp
    f5d5:	0c 00                	or     al,0x0
    f5d7:	00 2c a0             	add    BYTE PTR [rax+riz*4],ch
    f5da:	ff                   	(bad)  
    f5db:	ff e4                	jmp    rsp
    f5dd:	0c 00                	or     al,0x0
    f5df:	00 88 a0 ff ff 04    	add    BYTE PTR [rax+0x4ffffa0],cl
    f5e5:	0d 00 00 c6 a0       	or     eax,0xa0c60000
    f5ea:	ff                   	(bad)  
    f5eb:	ff 24 0d 00 00 4c a1 	jmp    QWORD PTR [rcx*1-0x5eb40000]
    f5f2:	ff                   	(bad)  
    f5f3:	ff 44 0d 00          	inc    DWORD PTR [rbp+rcx*1+0x0]
    f5f7:	00 2b                	add    BYTE PTR [rbx],ch
    f5f9:	a2 ff ff 64 0d 00 00 	movabs ds:0xa29f00000d64ffff,al
    f600:	9f a2 
    f602:	ff                   	(bad)  
    f603:	ff 84 0d 00 00 3b a3 	inc    DWORD PTR [rbp+rcx*1-0x5cc50000]
    f60a:	ff                   	(bad)  
    f60b:	ff a4 0d 00 00 64 a3 	jmp    QWORD PTR [rbp+rcx*1-0x5c9c0000]
    f612:	ff                   	(bad)  
    f613:	ff c4                	inc    esp
    f615:	0d 00 00 8d a3       	or     eax,0xa38d0000
    f61a:	ff                   	(bad)  
    f61b:	ff e4                	jmp    rsp
    f61d:	0d 00 00 e0 a4       	or     eax,0xa4e00000
    f622:	ff                   	(bad)  
    f623:	ff 0c 0e             	dec    DWORD PTR [rsi+rcx*1]
    f626:	00 00                	add    BYTE PTR [rax],al
    f628:	fe                   	(bad)  
    f629:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f62a:	ff                   	(bad)  
    f62b:	ff 2c 0e             	jmp    FWORD PTR [rsi+rcx*1]
    f62e:	00 00                	add    BYTE PTR [rax],al
    f630:	61                   	(bad)  
    f631:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f632:	ff                   	(bad)  
    f633:	ff 4c 0e 00          	dec    DWORD PTR [rsi+rcx*1+0x0]
    f637:	00 6f a8             	add    BYTE PTR [rdi-0x58],ch
    f63a:	ff                   	(bad)  
    f63b:	ff                   	(bad)  
    f63c:	7c 0e                	jl     f64c <__GNU_EH_FRAME_HDR+0x2a8>
    f63e:	00 00                	add    BYTE PTR [rax],al
    f640:	21 a9 ff ff 9c 0e    	and    DWORD PTR [rcx+0xe9cffff],ebp
    f646:	00 00                	add    BYTE PTR [rax],al
    f648:	c6                   	(bad)  
    f649:	a9 ff ff bc 0e       	test   eax,0xebcffff
    f64e:	00 00                	add    BYTE PTR [rax],al
    f650:	5a                   	pop    rdx
    f651:	aa                   	stos   BYTE PTR es:[rdi],al
    f652:	ff                   	(bad)  
    f653:	ff e4                	jmp    rsp
    f655:	0e                   	(bad)  
    f656:	00 00                	add    BYTE PTR [rax],al
    f658:	2f                   	(bad)  
    f659:	ab                   	stos   DWORD PTR es:[rdi],eax
    f65a:	ff                   	(bad)  
    f65b:	ff 04 0f             	inc    DWORD PTR [rdi+rcx*1]
    f65e:	00 00                	add    BYTE PTR [rax],al
    f660:	0e                   	(bad)  
    f661:	ac                   	lods   al,BYTE PTR ds:[rsi]
    f662:	ff                   	(bad)  
    f663:	ff 24 0f             	jmp    QWORD PTR [rdi+rcx*1]
    f666:	00 00                	add    BYTE PTR [rax],al
    f668:	8b ac ff ff 44 0f 00 	mov    ebp,DWORD PTR [rdi+rdi*8+0xf44ff]
    f66f:	00 c1                	add    cl,al
    f671:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    f672:	ff                   	(bad)  
    f673:	ff 64 0f 00          	jmp    QWORD PTR [rdi+rcx*1+0x0]
    f677:	00 3f                	add    BYTE PTR [rdi],bh
    f679:	ae                   	scas   al,BYTE PTR es:[rdi]
    f67a:	ff                   	(bad)  
    f67b:	ff 84 0f 00 00 69 b0 	inc    DWORD PTR [rdi+rcx*1-0x4f970000]
    f682:	ff                   	(bad)  
    f683:	ff a4 0f 00 00 2c b1 	jmp    QWORD PTR [rdi+rcx*1-0x4ed40000]
    f68a:	ff                   	(bad)  
    f68b:	ff c4                	inc    esp
    f68d:	0f 00 00             	sldt   WORD PTR [rax]
    f690:	c7                   	(bad)  
    f691:	b2 ff                	mov    dl,0xff
    f693:	ff e4                	jmp    rsp
    f695:	0f 00 00             	sldt   WORD PTR [rax]
    f698:	d4                   	(bad)  
    f699:	b3 ff                	mov    bl,0xff
    f69b:	ff 04 10             	inc    DWORD PTR [rax+rdx*1]
    f69e:	00 00                	add    BYTE PTR [rax],al
    f6a0:	3a b4 ff ff 24 10 00 	cmp    dh,BYTE PTR [rdi+rdi*8+0x1024ff]
    f6a7:	00 af b4 ff ff 44    	add    BYTE PTR [rdi+0x44ffffb4],ch
    f6ad:	10 00                	adc    BYTE PTR [rax],al
    f6af:	00 8a b5 ff ff 64    	add    BYTE PTR [rdx+0x64ffffb5],cl
    f6b5:	10 00                	adc    BYTE PTR [rax],al
    f6b7:	00 fc                	add    ah,bh
    f6b9:	b6 ff                	mov    dh,0xff
    f6bb:	ff 84 10 00 00 68 b7 	inc    DWORD PTR [rax+rdx*1-0x48980000]
    f6c2:	ff                   	(bad)  
    f6c3:	ff a4 10 00 00 e8 b7 	jmp    QWORD PTR [rax+rdx*1-0x48180000]
    f6ca:	ff                   	(bad)  
    f6cb:	ff c4                	inc    esp
    f6cd:	10 00                	adc    BYTE PTR [rax],al
    f6cf:	00 fe                	add    dh,bh
    f6d1:	b7 ff                	mov    bh,0xff
    f6d3:	ff e4                	jmp    rsp
    f6d5:	10 00                	adc    BYTE PTR [rax],al
    f6d7:	00 38                	add    BYTE PTR [rax],bh
    f6d9:	b9 ff ff 08 11       	mov    ecx,0x1108ffff
    f6de:	00 00                	add    BYTE PTR [rax],al
    f6e0:	9c                   	pushf  
    f6e1:	b9 ff ff 28 11       	mov    ecx,0x1128ffff
    f6e6:	00 00                	add    BYTE PTR [rax],al
    f6e8:	ef                   	out    dx,eax
    f6e9:	b9 ff ff 48 11       	mov    ecx,0x1148ffff
    f6ee:	00 00                	add    BYTE PTR [rax],al
    f6f0:	a0 ba ff ff 68 11 00 	movabs al,ds:0x6b00001168ffffba
    f6f7:	00 6b 
    f6f9:	bb ff ff 88 11       	mov    ebx,0x1188ffff
    f6fe:	00 00                	add    BYTE PTR [rax],al
    f700:	c0 bb ff ff a8 11 00 	sar    BYTE PTR [rbx+0x11a8ffff],0x0
    f707:	00 f0                	add    al,dh
    f709:	bb ff ff c8 11       	mov    ebx,0x11c8ffff
    f70e:	00 00                	add    BYTE PTR [rax],al
    f710:	57                   	push   rdi
    f711:	bc ff ff e8 11       	mov    esp,0x11e8ffff
    f716:	00 00                	add    BYTE PTR [rax],al
    f718:	63 cb                	movsxd ecx,ebx
    f71a:	ff                   	(bad)  
    f71b:	ff 0c 12             	dec    DWORD PTR [rdx+rdx*1]
    f71e:	00 00                	add    BYTE PTR [rax],al
    f720:	a9 cb ff ff 2c       	test   eax,0x2cffffcb
    f725:	12 00                	adc    al,BYTE PTR [rax]
    f727:	00 e4                	add    ah,ah
    f729:	cd ff                	int    0xff
    f72b:	ff 54 12 00          	call   QWORD PTR [rdx+rdx*1+0x0]
    f72f:	00 89 cf ff ff 74    	add    BYTE PTR [rcx+0x74ffffcf],cl
    f735:	12 00                	adc    al,BYTE PTR [rax]
    f737:	00 9b d0 ff ff 94    	add    BYTE PTR [rbx-0x6b000030],bl
    f73d:	12 00                	adc    al,BYTE PTR [rax]
    f73f:	00 57 d1             	add    BYTE PTR [rdi-0x2f],dl
    f742:	ff                   	(bad)  
    f743:	ff                   	(bad)  
    f744:	bc 12 00 00 f2       	mov    esp,0xf2000012
    f749:	d2 ff                	sar    bh,cl
    f74b:	ff e4                	jmp    rsp
    f74d:	12 00                	adc    al,BYTE PTR [rax]
    f74f:	00 97 d3 ff ff 04    	add    BYTE PTR [rdi+0x4ffffd3],dl
    f755:	13 00                	adc    eax,DWORD PTR [rax]
    f757:	00 da                	add    dl,bl
    f759:	d4                   	(bad)  
    f75a:	ff                   	(bad)  
    f75b:	ff 24 13             	jmp    QWORD PTR [rbx+rdx*1]
    f75e:	00 00                	add    BYTE PTR [rax],al
    f760:	cd d5                	int    0xd5
    f762:	ff                   	(bad)  
    f763:	ff 44 13 00          	inc    DWORD PTR [rbx+rdx*1+0x0]
    f767:	00 8c d8 ff ff 64 13 	add    BYTE PTR [rax+rbx*8+0x1364ffff],cl
    f76e:	00 00                	add    BYTE PTR [rax],al
    f770:	f6 d8                	neg    al
    f772:	ff                   	(bad)  
    f773:	ff 84 13 00 00 64 d9 	inc    DWORD PTR [rbx+rdx*1-0x269c0000]
    f77a:	ff                   	(bad)  
    f77b:	ff a4 13 00 00 d4 d9 	jmp    QWORD PTR [rbx+rdx*1-0x262c0000]
    f782:	ff                   	(bad)  
    f783:	ff c4                	inc    esp
    f785:	13 00                	adc    eax,DWORD PTR [rax]
	...

Disassembly of section .eh_frame:

000000000000f788 <__FRAME_END__-0x1004>:
    f788:	14 00                	adc    al,0x0
    f78a:	00 00                	add    BYTE PTR [rax],al
    f78c:	00 00                	add    BYTE PTR [rax],al
    f78e:	00 00                	add    BYTE PTR [rax],al
    f790:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    f793:	00 01                	add    BYTE PTR [rcx],al
    f795:	78 10                	js     f7a7 <__GNU_EH_FRAME_HDR+0x403>
    f797:	01 1b                	add    DWORD PTR [rbx],ebx
    f799:	0c 07                	or     al,0x7
    f79b:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    f7a1:	00 00                	add    BYTE PTR [rax],al
    f7a3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f7a6:	00 00                	add    BYTE PTR [rax],al
    f7a8:	78 31                	js     f7db <__GNU_EH_FRAME_HDR+0x437>
    f7aa:	ff                   	(bad)  
    f7ab:	ff 26                	jmp    QWORD PTR [rsi]
    f7ad:	00 00                	add    BYTE PTR [rax],al
    f7af:	00 00                	add    BYTE PTR [rax],al
    f7b1:	44 07                	rex.R (bad) 
    f7b3:	10 00                	adc    BYTE PTR [rax],al
    f7b5:	00 00                	add    BYTE PTR [rax],al
    f7b7:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    f7ba:	00 00                	add    BYTE PTR [rax],al
    f7bc:	34 00                	xor    al,0x0
    f7be:	00 00                	add    BYTE PTR [rax],al
    f7c0:	60                   	(bad)  
    f7c1:	28 ff                	sub    bh,bh
    f7c3:	ff 80 04 00 00 00    	inc    DWORD PTR [rax+0x4]
    f7c9:	0e                   	(bad)  
    f7ca:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    f7cd:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    f7d0:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    f7d3:	80 00 3f             	add    BYTE PTR [rax],0x3f
    f7d6:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    f7d8:	2a 33                	sub    dh,BYTE PTR [rbx]
    f7da:	24 22                	and    al,0x22
    f7dc:	00 00                	add    BYTE PTR [rax],al
    f7de:	00 00                	add    BYTE PTR [rax],al
    f7e0:	14 00                	adc    al,0x0
    f7e2:	00 00                	add    BYTE PTR [rax],al
    f7e4:	5c                   	pop    rsp
    f7e5:	00 00                	add    BYTE PTR [rax],al
    f7e7:	00 b8 2c ff ff 10    	add    BYTE PTR [rax+0x10ffff2c],bh
	...
    f7f5:	00 00                	add    BYTE PTR [rax],al
    f7f7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    f7fa:	00 00                	add    BYTE PTR [rax],al
    f7fc:	74 00                	je     f7fe <__GNU_EH_FRAME_HDR+0x45a>
    f7fe:	00 00                	add    BYTE PTR [rax],al
    f800:	b0 2c                	mov    al,0x2c
    f802:	ff                   	(bad)  
    f803:	ff 70 04             	push   QWORD PTR [rax+0x4]
	...
    f80e:	00 00                	add    BYTE PTR [rax],al
    f810:	1c 00                	sbb    al,0x0
    f812:	00 00                	add    BYTE PTR [rax],al
    f814:	8c 00                	mov    WORD PTR [rax],es
    f816:	00 00                	add    BYTE PTR [rax],al
    f818:	f1                   	icebp  
    f819:	31 ff                	xor    edi,edi
    f81b:	ff                   	(bad)  
    f81c:	3a 00                	cmp    al,BYTE PTR [rax]
    f81e:	00 00                	add    BYTE PTR [rax],al
    f820:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f823:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f829:	71 0c                	jno    f837 <__GNU_EH_FRAME_HDR+0x493>
    f82b:	07                   	(bad)  
    f82c:	08 00                	or     BYTE PTR [rax],al
    f82e:	00 00                	add    BYTE PTR [rax],al
    f830:	24 00                	and    al,0x0
    f832:	00 00                	add    BYTE PTR [rax],al
    f834:	ac                   	lods   al,BYTE PTR ds:[rsi]
    f835:	00 00                	add    BYTE PTR [rax],al
    f837:	00 0b                	add    BYTE PTR [rbx],cl
    f839:	32 ff                	xor    bh,bh
    f83b:	ff 4c 01 00          	dec    DWORD PTR [rcx+rax*1+0x0]
    f83f:	00 00                	add    BYTE PTR [rax],al
    f841:	45 0e                	rex.RB (bad) 
    f843:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f849:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f84d:	3e 01 0c 07          	ds add DWORD PTR [rdi+rax*1],ecx
    f851:	08 00                	or     BYTE PTR [rax],al
    f853:	00 00                	add    BYTE PTR [rax],al
    f855:	00 00                	add    BYTE PTR [rax],al
    f857:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f85a:	00 00                	add    BYTE PTR [rax],al
    f85c:	d4                   	(bad)  
    f85d:	00 00                	add    BYTE PTR [rax],al
    f85f:	00 2f                	add    BYTE PTR [rdi],ch
    f861:	33 ff                	xor    edi,edi
    f863:	ff f4                	push   rsp
    f865:	02 00                	add    al,BYTE PTR [rax]
    f867:	00 00                	add    BYTE PTR [rax],al
    f869:	45 0e                	rex.RB (bad) 
    f86b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f871:	03 eb                	add    ebp,ebx
    f873:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f876:	08 00                	or     BYTE PTR [rax],al
    f878:	1c 00                	sbb    al,0x0
    f87a:	00 00                	add    BYTE PTR [rax],al
    f87c:	f4                   	hlt    
    f87d:	00 00                	add    BYTE PTR [rax],al
    f87f:	00 03                	add    BYTE PTR [rbx],al
    f881:	36 ff                	ss (bad) 
    f883:	ff 13                	call   QWORD PTR [rbx]
    f885:	01 00                	add    DWORD PTR [rax],eax
    f887:	00 00                	add    BYTE PTR [rax],al
    f889:	45 0e                	rex.RB (bad) 
    f88b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f891:	03 0a                	add    ecx,DWORD PTR [rdx]
    f893:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f896:	08 00                	or     BYTE PTR [rax],al
    f898:	1c 00                	sbb    al,0x0
    f89a:	00 00                	add    BYTE PTR [rax],al
    f89c:	14 01                	adc    al,0x1
    f89e:	00 00                	add    BYTE PTR [rax],al
    f8a0:	f6 36                	div    BYTE PTR [rsi]
    f8a2:	ff                   	(bad)  
    f8a3:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    f8a9:	45 0e                	rex.RB (bad) 
    f8ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f8b1:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    f8b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f8ba:	00 00                	add    BYTE PTR [rax],al
    f8bc:	34 01                	xor    al,0x1
    f8be:	00 00                	add    BYTE PTR [rax],al
    f8c0:	84 37                	test   BYTE PTR [rdi],dh
    f8c2:	ff                   	(bad)  
    f8c3:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    f8c9:	45 0e                	rex.RB (bad) 
    f8cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f8d1:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    f8d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f8da:	00 00                	add    BYTE PTR [rax],al
    f8dc:	54                   	push   rsp
    f8dd:	01 00                	add    DWORD PTR [rax],eax
    f8df:	00 0a                	add    BYTE PTR [rdx],cl
    f8e1:	38 ff                	cmp    bh,bh
    f8e3:	ff 95 00 00 00 00    	call   QWORD PTR [rbp+0x0]
    f8e9:	45 0e                	rex.RB (bad) 
    f8eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f8f1:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    f8f8:	1c 00                	sbb    al,0x0
    f8fa:	00 00                	add    BYTE PTR [rax],al
    f8fc:	74 01                	je     f8ff <__GNU_EH_FRAME_HDR+0x55b>
    f8fe:	00 00                	add    BYTE PTR [rax],al
    f900:	7f 38                	jg     f93a <__GNU_EH_FRAME_HDR+0x596>
    f902:	ff                   	(bad)  
    f903:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    f90a:	0e                   	(bad)  
    f90b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f911:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    f917:	00 28                	add    BYTE PTR [rax],ch
    f919:	00 00                	add    BYTE PTR [rax],al
    f91b:	00 94 01 00 00 f3 38 	add    BYTE PTR [rcx+rax*1+0x38f30000],dl
    f922:	ff                   	(bad)  
    f923:	ff cc                	dec    esp
    f925:	01 00                	add    DWORD PTR [rax],eax
    f927:	00 00                	add    BYTE PTR [rax],al
    f929:	45 0e                	rex.RB (bad) 
    f92b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f931:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    f934:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    f93b:	07                   	(bad)  
    f93c:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    f942:	00 00                	add    BYTE PTR [rax],al
    f944:	20 00                	and    BYTE PTR [rax],al
    f946:	00 00                	add    BYTE PTR [rax],al
    f948:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    f94b:	00 93 3a ff ff d4    	add    BYTE PTR [rbx-0x2b0000c6],dl
    f951:	00 00                	add    BYTE PTR [rax],al
    f953:	00 00                	add    BYTE PTR [rax],al
    f955:	45 0e                	rex.RB (bad) 
    f957:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f95d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f961:	c6                   	(bad)  
    f962:	0c 07                	or     al,0x7
    f964:	08 00                	or     BYTE PTR [rax],al
    f966:	00 00                	add    BYTE PTR [rax],al
    f968:	20 00                	and    BYTE PTR [rax],al
    f96a:	00 00                	add    BYTE PTR [rax],al
    f96c:	e4 01                	in     al,0x1
    f96e:	00 00                	add    BYTE PTR [rax],al
    f970:	43 3b ff             	rex.XB cmp edi,r15d
    f973:	ff c7                	inc    edi
    f975:	00 00                	add    BYTE PTR [rax],al
    f977:	00 00                	add    BYTE PTR [rax],al
    f979:	45 0e                	rex.RB (bad) 
    f97b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f981:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f985:	b9 0c 07 08 00       	mov    ecx,0x8070c
    f98a:	00 00                	add    BYTE PTR [rax],al
    f98c:	1c 00                	sbb    al,0x0
    f98e:	00 00                	add    BYTE PTR [rax],al
    f990:	08 02                	or     BYTE PTR [rdx],al
    f992:	00 00                	add    BYTE PTR [rax],al
    f994:	e6 3b                	out    0x3b,al
    f996:	ff                   	(bad)  
    f997:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f99a:	00 00                	add    BYTE PTR [rax],al
    f99c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f99f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f9a5:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f9a8:	07                   	(bad)  
    f9a9:	08 00                	or     BYTE PTR [rax],al
    f9ab:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f9ae:	00 00                	add    BYTE PTR [rax],al
    f9b0:	28 02                	sub    BYTE PTR [rdx],al
    f9b2:	00 00                	add    BYTE PTR [rax],al
    f9b4:	19 3c ff             	sbb    DWORD PTR [rdi+rdi*8],edi
    f9b7:	ff 33                	push   QWORD PTR [rbx]
    f9b9:	00 00                	add    BYTE PTR [rax],al
    f9bb:	00 00                	add    BYTE PTR [rax],al
    f9bd:	45 0e                	rex.RB (bad) 
    f9bf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f9c5:	6a 0c                	push   0xc
    f9c7:	07                   	(bad)  
    f9c8:	08 00                	or     BYTE PTR [rax],al
    f9ca:	00 00                	add    BYTE PTR [rax],al
    f9cc:	1c 00                	sbb    al,0x0
    f9ce:	00 00                	add    BYTE PTR [rax],al
    f9d0:	48 02 00             	rex.W add al,BYTE PTR [rax]
    f9d3:	00 2c 3c             	add    BYTE PTR [rsp+rdi*1],ch
    f9d6:	ff                   	(bad)  
    f9d7:	ff 21                	jmp    QWORD PTR [rcx]
    f9d9:	00 00                	add    BYTE PTR [rax],al
    f9db:	00 00                	add    BYTE PTR [rax],al
    f9dd:	45 0e                	rex.RB (bad) 
    f9df:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f9e5:	58                   	pop    rax
    f9e6:	0c 07                	or     al,0x7
    f9e8:	08 00                	or     BYTE PTR [rax],al
    f9ea:	00 00                	add    BYTE PTR [rax],al
    f9ec:	20 00                	and    BYTE PTR [rax],al
    f9ee:	00 00                	add    BYTE PTR [rax],al
    f9f0:	68 02 00 00 2d       	push   0x2d000002
    f9f5:	3c ff                	cmp    al,0xff
    f9f7:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    f9fa:	00 00                	add    BYTE PTR [rax],al
    f9fc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f9ff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa05:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    fa09:	5a                   	pop    rdx
    fa0a:	0c 07                	or     al,0x7
    fa0c:	08 00                	or     BYTE PTR [rax],al
    fa0e:	00 00                	add    BYTE PTR [rax],al
    fa10:	1c 00                	sbb    al,0x0
    fa12:	00 00                	add    BYTE PTR [rax],al
    fa14:	8c 02                	mov    WORD PTR [rdx],es
    fa16:	00 00                	add    BYTE PTR [rax],al
    fa18:	71 3c                	jno    fa56 <__GNU_EH_FRAME_HDR+0x6b2>
    fa1a:	ff                   	(bad)  
    fa1b:	ff 25 04 00 00 00    	jmp    QWORD PTR [rip+0x4]        # fa25 <__GNU_EH_FRAME_HDR+0x681>
    fa21:	45 0e                	rex.RB (bad) 
    fa23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa29:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    fa2c:	0c 07                	or     al,0x7
    fa2e:	08 00                	or     BYTE PTR [rax],al
    fa30:	1c 00                	sbb    al,0x0
    fa32:	00 00                	add    BYTE PTR [rax],al
    fa34:	ac                   	lods   al,BYTE PTR ds:[rsi]
    fa35:	02 00                	add    al,BYTE PTR [rax]
    fa37:	00 76 40             	add    BYTE PTR [rsi+0x40],dh
    fa3a:	ff                   	(bad)  
    fa3b:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    fa3e:	00 00                	add    BYTE PTR [rax],al
    fa40:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fa43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa49:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    fa4d:	07                   	(bad)  
    fa4e:	08 00                	or     BYTE PTR [rax],al
    fa50:	1c 00                	sbb    al,0x0
    fa52:	00 00                	add    BYTE PTR [rax],al
    fa54:	cc                   	int3   
    fa55:	02 00                	add    al,BYTE PTR [rax]
    fa57:	00 b3 41 ff ff 44    	add    BYTE PTR [rbx+0x44ffff41],dh
    fa5d:	08 00                	or     BYTE PTR [rax],al
    fa5f:	00 00                	add    BYTE PTR [rax],al
    fa61:	45 0e                	rex.RB (bad) 
    fa63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa69:	03 3b                	add    edi,DWORD PTR [rbx]
    fa6b:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    fa6e:	08 00                	or     BYTE PTR [rax],al
    fa70:	24 00                	and    al,0x0
    fa72:	00 00                	add    BYTE PTR [rax],al
    fa74:	ec                   	in     al,dx
    fa75:	02 00                	add    al,BYTE PTR [rax]
    fa77:	00 d7                	add    bh,dl
    fa79:	49 ff                	rex.WB (bad) 
    fa7b:	ff 81 08 00 00 00    	inc    DWORD PTR [rcx+0x8]
    fa81:	45 0e                	rex.RB (bad) 
    fa83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fa89:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    fa8d:	70 08                	jo     fa97 <__GNU_EH_FRAME_HDR+0x6f3>
    fa8f:	0c 07                	or     al,0x7
    fa91:	08 00                	or     BYTE PTR [rax],al
    fa93:	00 00                	add    BYTE PTR [rax],al
    fa95:	00 00                	add    BYTE PTR [rax],al
    fa97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fa9a:	00 00                	add    BYTE PTR [rax],al
    fa9c:	14 03                	adc    al,0x3
    fa9e:	00 00                	add    BYTE PTR [rax],al
    faa0:	30 52 ff             	xor    BYTE PTR [rdx-0x1],dl
    faa3:	ff 55 01             	call   QWORD PTR [rbp+0x1]
    faa6:	00 00                	add    BYTE PTR [rax],al
    faa8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    faab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fab1:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    fab5:	07                   	(bad)  
    fab6:	08 00                	or     BYTE PTR [rax],al
    fab8:	1c 00                	sbb    al,0x0
    faba:	00 00                	add    BYTE PTR [rax],al
    fabc:	34 03                	xor    al,0x3
    fabe:	00 00                	add    BYTE PTR [rax],al
    fac0:	65 53                	gs push rbx
    fac2:	ff                   	(bad)  
    fac3:	ff                   	(bad)  
    fac4:	ee                   	out    dx,al
    fac5:	00 00                	add    BYTE PTR [rax],al
    fac7:	00 00                	add    BYTE PTR [rax],al
    fac9:	45 0e                	rex.RB (bad) 
    facb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fad1:	02 e5                	add    ah,ch
    fad3:	0c 07                	or     al,0x7
    fad5:	08 00                	or     BYTE PTR [rax],al
    fad7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fada:	00 00                	add    BYTE PTR [rax],al
    fadc:	54                   	push   rsp
    fadd:	03 00                	add    eax,DWORD PTR [rax]
    fadf:	00 33                	add    BYTE PTR [rbx],dh
    fae1:	54                   	push   rsp
    fae2:	ff                   	(bad)  
    fae3:	ff                   	(bad)  
    fae4:	ec                   	in     al,dx
    fae5:	00 00                	add    BYTE PTR [rax],al
    fae7:	00 00                	add    BYTE PTR [rax],al
    fae9:	45 0e                	rex.RB (bad) 
    faeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    faf1:	02 e3                	add    ah,bl
    faf3:	0c 07                	or     al,0x7
    faf5:	08 00                	or     BYTE PTR [rax],al
    faf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fafa:	00 00                	add    BYTE PTR [rax],al
    fafc:	74 03                	je     fb01 <__GNU_EH_FRAME_HDR+0x75d>
    fafe:	00 00                	add    BYTE PTR [rax],al
    fb00:	ff 54 ff ff          	call   QWORD PTR [rdi+rdi*8-0x1]
    fb04:	b2 03                	mov    dl,0x3
    fb06:	00 00                	add    BYTE PTR [rax],al
    fb08:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fb0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb11:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    fb17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fb1a:	00 00                	add    BYTE PTR [rax],al
    fb1c:	94                   	xchg   esp,eax
    fb1d:	03 00                	add    eax,DWORD PTR [rax]
    fb1f:	00 91 58 ff ff 83    	add    BYTE PTR [rcx-0x7c0000a8],dl
    fb25:	00 00                	add    BYTE PTR [rax],al
    fb27:	00 00                	add    BYTE PTR [rax],al
    fb29:	45 0e                	rex.RB (bad) 
    fb2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb31:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    fb34:	07                   	(bad)  
    fb35:	08 00                	or     BYTE PTR [rax],al
    fb37:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    fb3a:	00 00                	add    BYTE PTR [rax],al
    fb3c:	b4 03                	mov    ah,0x3
    fb3e:	00 00                	add    BYTE PTR [rax],al
    fb40:	f4                   	hlt    
    fb41:	58                   	pop    rax
    fb42:	ff                   	(bad)  
    fb43:	ff 2a                	jmp    FWORD PTR [rdx]
    fb45:	02 00                	add    al,BYTE PTR [rax]
    fb47:	00 00                	add    BYTE PTR [rax],al
    fb49:	45 0e                	rex.RB (bad) 
    fb4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb51:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    fb55:	19 02                	sbb    DWORD PTR [rdx],eax
    fb57:	0c 07                	or     al,0x7
    fb59:	08 00                	or     BYTE PTR [rax],al
    fb5b:	00 00                	add    BYTE PTR [rax],al
    fb5d:	00 00                	add    BYTE PTR [rax],al
    fb5f:	00 20                	add    BYTE PTR [rax],ah
    fb61:	00 00                	add    BYTE PTR [rax],al
    fb63:	00 dc                	add    ah,bl
    fb65:	03 00                	add    eax,DWORD PTR [rax]
    fb67:	00 f6                	add    dh,dh
    fb69:	5a                   	pop    rdx
    fb6a:	ff                   	(bad)  
    fb6b:	ff                   	(bad)  
    fb6c:	3d 02 00 00 00       	cmp    eax,0x2
    fb71:	45 0e                	rex.RB (bad) 
    fb73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb79:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    fb7d:	2f                   	(bad)  
    fb7e:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    fb81:	08 00                	or     BYTE PTR [rax],al
    fb83:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fb86:	00 00                	add    BYTE PTR [rax],al
    fb88:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    fb8b:	00 0f                	add    BYTE PTR [rdi],cl
    fb8d:	5d                   	pop    rbp
    fb8e:	ff                   	(bad)  
    fb8f:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    fb92:	00 00                	add    BYTE PTR [rax],al
    fb94:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fb97:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fb9d:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    fba0:	07                   	(bad)  
    fba1:	08 00                	or     BYTE PTR [rax],al
    fba3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fba6:	00 00                	add    BYTE PTR [rax],al
    fba8:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    fbab:	00 55 5d             	add    BYTE PTR [rbp+0x5d],dl
    fbae:	ff                   	(bad)  
    fbaf:	ff 17                	call   QWORD PTR [rdi]
    fbb1:	00 00                	add    BYTE PTR [rax],al
    fbb3:	00 00                	add    BYTE PTR [rax],al
    fbb5:	45 0e                	rex.RB (bad) 
    fbb7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fbbd:	4e 0c 07             	rex.WRX or al,0x7
    fbc0:	08 00                	or     BYTE PTR [rax],al
    fbc2:	00 00                	add    BYTE PTR [rax],al
    fbc4:	20 00                	and    BYTE PTR [rax],al
    fbc6:	00 00                	add    BYTE PTR [rax],al
    fbc8:	40 04 00             	rex add al,0x0
    fbcb:	00 4c 5d ff          	add    BYTE PTR [rbp+rbx*2-0x1],cl
    fbcf:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    fbd2:	00 00                	add    BYTE PTR [rax],al
    fbd4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fbd7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fbdd:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    fbe0:	07                   	(bad)  
    fbe1:	08 00                	or     BYTE PTR [rax],al
    fbe3:	00 00                	add    BYTE PTR [rax],al
    fbe5:	00 00                	add    BYTE PTR [rax],al
    fbe7:	00 20                	add    BYTE PTR [rax],ah
    fbe9:	00 00                	add    BYTE PTR [rax],al
    fbeb:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    fbef:	00 79 5d             	add    BYTE PTR [rcx+0x5d],bh
    fbf2:	ff                   	(bad)  
    fbf3:	ff                   	(bad)  
    fbf4:	3d 06 00 00 00       	cmp    eax,0x6
    fbf9:	45 0e                	rex.RB (bad) 
    fbfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc01:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    fc05:	2f                   	(bad)  
    fc06:	06                   	(bad)  
    fc07:	0c 07                	or     al,0x7
    fc09:	08 00                	or     BYTE PTR [rax],al
    fc0b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fc0e:	00 00                	add    BYTE PTR [rax],al
    fc10:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    fc13:	00 92 63 ff ff 1a    	add    BYTE PTR [rdx+0x1affff63],dl
    fc19:	00 00                	add    BYTE PTR [rax],al
    fc1b:	00 00                	add    BYTE PTR [rax],al
    fc1d:	45 0e                	rex.RB (bad) 
    fc1f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc25:	51                   	push   rcx
    fc26:	0c 07                	or     al,0x7
    fc28:	08 00                	or     BYTE PTR [rax],al
    fc2a:	00 00                	add    BYTE PTR [rax],al
    fc2c:	1c 00                	sbb    al,0x0
    fc2e:	00 00                	add    BYTE PTR [rax],al
    fc30:	a8 04                	test   al,0x4
    fc32:	00 00                	add    BYTE PTR [rax],al
    fc34:	8c 63 ff             	mov    WORD PTR [rbx-0x1],fs
    fc37:	ff 29                	jmp    FWORD PTR [rcx]
    fc39:	00 00                	add    BYTE PTR [rax],al
    fc3b:	00 00                	add    BYTE PTR [rax],al
    fc3d:	45 0e                	rex.RB (bad) 
    fc3f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc45:	60                   	(bad)  
    fc46:	0c 07                	or     al,0x7
    fc48:	08 00                	or     BYTE PTR [rax],al
    fc4a:	00 00                	add    BYTE PTR [rax],al
    fc4c:	1c 00                	sbb    al,0x0
    fc4e:	00 00                	add    BYTE PTR [rax],al
    fc50:	c8 04 00 00          	enter  0x4,0x0
    fc54:	95                   	xchg   ebp,eax
    fc55:	63 ff                	movsxd edi,edi
    fc57:	ff 30                	push   QWORD PTR [rax]
    fc59:	00 00                	add    BYTE PTR [rax],al
    fc5b:	00 00                	add    BYTE PTR [rax],al
    fc5d:	45 0e                	rex.RB (bad) 
    fc5f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc65:	67 0c 07             	addr32 or al,0x7
    fc68:	08 00                	or     BYTE PTR [rax],al
    fc6a:	00 00                	add    BYTE PTR [rax],al
    fc6c:	18 00                	sbb    BYTE PTR [rax],al
    fc6e:	00 00                	add    BYTE PTR [rax],al
    fc70:	e8 04 00 00 a5       	call   ffffffffa500fc79 <_end+0xffffffffa4ed3c71>
    fc75:	63 ff                	movsxd edi,edi
    fc77:	ff 37                	push   QWORD PTR [rdi]
    fc79:	00 00                	add    BYTE PTR [rax],al
    fc7b:	00 00                	add    BYTE PTR [rax],al
    fc7d:	45 0e                	rex.RB (bad) 
    fc7f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fc85:	00 00                	add    BYTE PTR [rax],al
    fc87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fc8a:	00 00                	add    BYTE PTR [rax],al
    fc8c:	04 05                	add    al,0x5
    fc8e:	00 00                	add    BYTE PTR [rax],al
    fc90:	c0 63 ff ff          	shl    BYTE PTR [rbx-0x1],0xff
    fc94:	45 01 00             	add    DWORD PTR [r8],r8d
    fc97:	00 00                	add    BYTE PTR [rax],al
    fc99:	45 0e                	rex.RB (bad) 
    fc9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fca1:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    fca4:	0c 07                	or     al,0x7
    fca6:	08 00                	or     BYTE PTR [rax],al
    fca8:	1c 00                	sbb    al,0x0
    fcaa:	00 00                	add    BYTE PTR [rax],al
    fcac:	24 05                	and    al,0x5
    fcae:	00 00                	add    BYTE PTR [rax],al
    fcb0:	e5 64                	in     eax,0x64
    fcb2:	ff                   	(bad)  
    fcb3:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    fcb6:	00 00                	add    BYTE PTR [rax],al
    fcb8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fcbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fcc1:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    fcc4:	0c 07                	or     al,0x7
    fcc6:	08 00                	or     BYTE PTR [rax],al
    fcc8:	1c 00                	sbb    al,0x0
    fcca:	00 00                	add    BYTE PTR [rax],al
    fccc:	44 05 00 00 25 66    	rex.R add eax,0x66250000
    fcd2:	ff                   	(bad)  
    fcd3:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    fcd6:	00 00                	add    BYTE PTR [rax],al
    fcd8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fcdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fce1:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    fce4:	07                   	(bad)  
    fce5:	08 00                	or     BYTE PTR [rax],al
    fce7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fcea:	00 00                	add    BYTE PTR [rax],al
    fcec:	64 05 00 00 66 66    	fs add eax,0x66660000
    fcf2:	ff                   	(bad)  
    fcf3:	ff                   	(bad)  
    fcf4:	be 00 00 00 00       	mov    esi,0x0
    fcf9:	45 0e                	rex.RB (bad) 
    fcfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd01:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    fd07:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fd0a:	00 00                	add    BYTE PTR [rax],al
    fd0c:	84 05 00 00 04 67    	test   BYTE PTR [rip+0x67040000],al        # 6704fd12 <_end+0x66f13d0a>
    fd12:	ff                   	(bad)  
    fd13:	ff 52 02             	call   QWORD PTR [rdx+0x2]
    fd16:	00 00                	add    BYTE PTR [rax],al
    fd18:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fd1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd21:	03 49 02             	add    ecx,DWORD PTR [rcx+0x2]
    fd24:	0c 07                	or     al,0x7
    fd26:	08 00                	or     BYTE PTR [rax],al
    fd28:	1c 00                	sbb    al,0x0
    fd2a:	00 00                	add    BYTE PTR [rax],al
    fd2c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    fd2d:	05 00 00 36 69       	add    eax,0x69360000
    fd32:	ff                   	(bad)  
    fd33:	ff                   	(bad)  
    fd34:	f8                   	clc    
    fd35:	01 00                	add    DWORD PTR [rax],eax
    fd37:	00 00                	add    BYTE PTR [rax],al
    fd39:	45 0e                	rex.RB (bad) 
    fd3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd41:	03 ef                	add    ebp,edi
    fd43:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    fd46:	08 00                	or     BYTE PTR [rax],al
    fd48:	1c 00                	sbb    al,0x0
    fd4a:	00 00                	add    BYTE PTR [rax],al
    fd4c:	c4                   	(bad)  
    fd4d:	05 00 00 0e 6b       	add    eax,0x6b0e0000
    fd52:	ff                   	(bad)  
    fd53:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    fd56:	00 00                	add    BYTE PTR [rax],al
    fd58:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fd5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd61:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    fd64:	07                   	(bad)  
    fd65:	08 00                	or     BYTE PTR [rax],al
    fd67:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fd6a:	00 00                	add    BYTE PTR [rax],al
    fd6c:	e4 05                	in     al,0x5
    fd6e:	00 00                	add    BYTE PTR [rax],al
    fd70:	48 6b ff ff          	imul   rdi,rdi,0xffffffffffffffff
    fd74:	0f 03 00             	lsl    eax,WORD PTR [rax]
    fd77:	00 00                	add    BYTE PTR [rax],al
    fd79:	45 0e                	rex.RB (bad) 
    fd7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fd81:	03 06                	add    eax,DWORD PTR [rsi]
    fd83:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    fd86:	08 00                	or     BYTE PTR [rax],al
    fd88:	1c 00                	sbb    al,0x0
    fd8a:	00 00                	add    BYTE PTR [rax],al
    fd8c:	04 06                	add    al,0x6
    fd8e:	00 00                	add    BYTE PTR [rax],al
    fd90:	37                   	(bad)  
    fd91:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    fd92:	ff                   	(bad)  
    fd93:	ff 51 04             	call   QWORD PTR [rcx+0x4]
    fd96:	00 00                	add    BYTE PTR [rax],al
    fd98:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fd9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fda1:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    fda4:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    fda8:	18 00                	sbb    BYTE PTR [rax],al
    fdaa:	00 00                	add    BYTE PTR [rax],al
    fdac:	24 06                	and    al,0x6
    fdae:	00 00                	add    BYTE PTR [rax],al
    fdb0:	68 72 ff ff 2a       	push   0x2affff72
    fdb5:	00 00                	add    BYTE PTR [rax],al
    fdb7:	00 00                	add    BYTE PTR [rax],al
    fdb9:	45 0e                	rex.RB (bad) 
    fdbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fdc1:	00 00                	add    BYTE PTR [rax],al
    fdc3:	00 20                	add    BYTE PTR [rax],ah
    fdc5:	00 00                	add    BYTE PTR [rax],al
    fdc7:	00 40 06             	add    BYTE PTR [rax+0x6],al
    fdca:	00 00                	add    BYTE PTR [rax],al
    fdcc:	76 72                	jbe    fe40 <__GNU_EH_FRAME_HDR+0xa9c>
    fdce:	ff                   	(bad)  
    fdcf:	ff b2 01 00 00 00    	push   QWORD PTR [rdx+0x1]
    fdd5:	45 0e                	rex.RB (bad) 
    fdd7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fddd:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    fde1:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    fde8:	1c 00 
    fdea:	00 00                	add    BYTE PTR [rax],al
    fdec:	64 06                	fs (bad) 
    fdee:	00 00                	add    BYTE PTR [rax],al
    fdf0:	04 74                	add    al,0x74
    fdf2:	ff                   	(bad)  
    fdf3:	ff 17                	call   QWORD PTR [rdi]
    fdf5:	00 00                	add    BYTE PTR [rax],al
    fdf7:	00 00                	add    BYTE PTR [rax],al
    fdf9:	45 0e                	rex.RB (bad) 
    fdfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe01:	4e 0c 07             	rex.WRX or al,0x7
    fe04:	08 00                	or     BYTE PTR [rax],al
    fe06:	00 00                	add    BYTE PTR [rax],al
    fe08:	1c 00                	sbb    al,0x0
    fe0a:	00 00                	add    BYTE PTR [rax],al
    fe0c:	84 06                	test   BYTE PTR [rsi],al
    fe0e:	00 00                	add    BYTE PTR [rax],al
    fe10:	fb                   	sti    
    fe11:	73 ff                	jae    fe12 <__GNU_EH_FRAME_HDR+0xa6e>
    fe13:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    fe16:	00 00                	add    BYTE PTR [rax],al
    fe18:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fe1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe21:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    fe24:	07                   	(bad)  
    fe25:	08 00                	or     BYTE PTR [rax],al
    fe27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    fe2a:	00 00                	add    BYTE PTR [rax],al
    fe2c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    fe2d:	06                   	(bad)  
    fe2e:	00 00                	add    BYTE PTR [rax],al
    fe30:	2a 74 ff ff          	sub    dh,BYTE PTR [rdi+rdi*8-0x1]
    fe34:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    fe37:	00 00                	add    BYTE PTR [rax],al
    fe39:	45 0e                	rex.RB (bad) 
    fe3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe41:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    fe45:	08 00                	or     BYTE PTR [rax],al
    fe47:	00 18                	add    BYTE PTR [rax],bl
    fe49:	00 00                	add    BYTE PTR [rax],al
    fe4b:	00 c4                	add    ah,al
    fe4d:	06                   	(bad)  
    fe4e:	00 00                	add    BYTE PTR [rax],al
    fe50:	57                   	push   rdi
    fe51:	74 ff                	je     fe52 <__GNU_EH_FRAME_HDR+0xaae>
    fe53:	ff 77 01             	push   QWORD PTR [rdi+0x1]
    fe56:	00 00                	add    BYTE PTR [rax],al
    fe58:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fe5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe61:	00 00                	add    BYTE PTR [rax],al
    fe63:	00 20                	add    BYTE PTR [rax],ah
    fe65:	00 00                	add    BYTE PTR [rax],al
    fe67:	00 e0                	add    al,ah
    fe69:	06                   	(bad)  
    fe6a:	00 00                	add    BYTE PTR [rax],al
    fe6c:	b2 75                	mov    dl,0x75
    fe6e:	ff                   	(bad)  
    fe6f:	ff                   	(bad)  
    fe70:	7e 05                	jle    fe77 <__GNU_EH_FRAME_HDR+0xad3>
    fe72:	00 00                	add    BYTE PTR [rax],al
    fe74:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fe77:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fe7d:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    fe81:	6d                   	ins    DWORD PTR es:[rdi],dx
    fe82:	05 0c 07 08 00       	add    eax,0x8070c
    fe87:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    fe8a:	00 00                	add    BYTE PTR [rax],al
    fe8c:	04 07                	add    al,0x7
    fe8e:	00 00                	add    BYTE PTR [rax],al
    fe90:	0c 7b                	or     al,0x7b
    fe92:	ff                   	(bad)  
    fe93:	ff ae 01 00 00 00    	jmp    FWORD PTR [rsi+0x1]
    fe99:	45 0e                	rex.RB (bad) 
    fe9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fea1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    fea5:	a0 01 0c 07 08 00 00 	movabs al,ds:0x8070c01
    feac:	00 00 
    feae:	00 00                	add    BYTE PTR [rax],al
    feb0:	1c 00                	sbb    al,0x0
    feb2:	00 00                	add    BYTE PTR [rax],al
    feb4:	2c 07                	sub    al,0x7
    feb6:	00 00                	add    BYTE PTR [rax],al
    feb8:	92                   	xchg   edx,eax
    feb9:	7c ff                	jl     feba <__GNU_EH_FRAME_HDR+0xb16>
    febb:	ff 47 00             	inc    DWORD PTR [rdi+0x0]
    febe:	00 00                	add    BYTE PTR [rax],al
    fec0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    fec3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fec9:	7e 0c                	jle    fed7 <__GNU_EH_FRAME_HDR+0xb33>
    fecb:	07                   	(bad)  
    fecc:	08 00                	or     BYTE PTR [rax],al
    fece:	00 00                	add    BYTE PTR [rax],al
    fed0:	2c 00                	sub    al,0x0
    fed2:	00 00                	add    BYTE PTR [rax],al
    fed4:	4c 07                	rex.WR (bad) 
    fed6:	00 00                	add    BYTE PTR [rax],al
    fed8:	b9 7c ff ff 16       	mov    ecx,0x16ffff7c
    fedd:	05 00 00 00 45       	add    eax,0x45000000
    fee2:	0e                   	(bad)  
    fee3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    fee9:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    feec:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    fef3:	07                   	(bad)  
    fef4:	03 00                	add    eax,DWORD PTR [rax]
    fef6:	05 0c 07 08 00       	add    eax,0x8070c
    fefb:	00 00                	add    BYTE PTR [rax],al
    fefd:	00 00                	add    BYTE PTR [rax],al
    feff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ff02:	00 00                	add    BYTE PTR [rax],al
    ff04:	7c 07                	jl     ff0d <__GNU_EH_FRAME_HDR+0xb69>
    ff06:	00 00                	add    BYTE PTR [rax],al
    ff08:	9f                   	lahf   
    ff09:	81 ff ff a4 01 00    	cmp    edi,0x1a4ff
    ff0f:	00 00                	add    BYTE PTR [rax],al
    ff11:	45 0e                	rex.RB (bad) 
    ff13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff19:	03 9b 01 0c 07 08    	add    ebx,DWORD PTR [rbx+0x8070c01]
    ff1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ff22:	00 00                	add    BYTE PTR [rax],al
    ff24:	9c                   	pushf  
    ff25:	07                   	(bad)  
    ff26:	00 00                	add    BYTE PTR [rax],al
    ff28:	23 83 ff ff 12 01    	and    eax,DWORD PTR [rbx+0x112ffff]
    ff2e:	00 00                	add    BYTE PTR [rax],al
    ff30:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ff33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff39:	03 09                	add    ecx,DWORD PTR [rcx]
    ff3b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ff3e:	08 00                	or     BYTE PTR [rax],al
    ff40:	20 00                	and    BYTE PTR [rax],al
    ff42:	00 00                	add    BYTE PTR [rax],al
    ff44:	bc 07 00 00 15       	mov    esp,0x15000007
    ff49:	84 ff                	test   bh,bh
    ff4b:	ff                   	(bad)  
    ff4c:	d9 02                	fld    DWORD PTR [rdx]
    ff4e:	00 00                	add    BYTE PTR [rax],al
    ff50:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ff53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff59:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    ff5d:	c8 02 0c 07          	enter  0xc02,0x7
    ff61:	08 00                	or     BYTE PTR [rax],al
    ff63:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ff66:	00 00                	add    BYTE PTR [rax],al
    ff68:	e0 07                	loopne ff71 <__GNU_EH_FRAME_HDR+0xbcd>
    ff6a:	00 00                	add    BYTE PTR [rax],al
    ff6c:	ca 86 ff             	retf   0xff86
    ff6f:	ff 35 01 00 00 00    	push   QWORD PTR [rip+0x1]        # ff76 <__GNU_EH_FRAME_HDR+0xbd2>
    ff75:	45 0e                	rex.RB (bad) 
    ff77:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff7d:	03 2c 01             	add    ebp,DWORD PTR [rcx+rax*1]
    ff80:	0c 07                	or     al,0x7
    ff82:	08 00                	or     BYTE PTR [rax],al
    ff84:	1c 00                	sbb    al,0x0
    ff86:	00 00                	add    BYTE PTR [rax],al
    ff88:	00 08                	add    BYTE PTR [rax],cl
    ff8a:	00 00                	add    BYTE PTR [rax],al
    ff8c:	df 87 ff ff 71 03    	fild   WORD PTR [rdi+0x371ffff]
    ff92:	00 00                	add    BYTE PTR [rax],al
    ff94:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ff97:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ff9d:	03 68 03             	add    ebp,DWORD PTR [rax+0x3]
    ffa0:	0c 07                	or     al,0x7
    ffa2:	08 00                	or     BYTE PTR [rax],al
    ffa4:	1c 00                	sbb    al,0x0
    ffa6:	00 00                	add    BYTE PTR [rax],al
    ffa8:	20 08                	and    BYTE PTR [rax],cl
    ffaa:	00 00                	add    BYTE PTR [rax],al
    ffac:	30 8b ff ff ab 01    	xor    BYTE PTR [rbx+0x1abffff],cl
    ffb2:	00 00                	add    BYTE PTR [rax],al
    ffb4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ffb7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ffbd:	03 a2 01 0c 07 08    	add    esp,DWORD PTR [rdx+0x8070c01]
    ffc3:	00 20                	add    BYTE PTR [rax],ah
    ffc5:	00 00                	add    BYTE PTR [rax],al
    ffc7:	00 40 08             	add    BYTE PTR [rax+0x8],al
    ffca:	00 00                	add    BYTE PTR [rax],al
    ffcc:	bb 8c ff ff 84       	mov    ebx,0x84ffff8c
    ffd1:	01 00                	add    DWORD PTR [rax],eax
    ffd3:	00 00                	add    BYTE PTR [rax],al
    ffd5:	45 0e                	rex.RB (bad) 
    ffd7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ffdd:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ffe1:	76 01                	jbe    ffe4 <__GNU_EH_FRAME_HDR+0xc40>
    ffe3:	0c 07                	or     al,0x7
    ffe5:	08 00                	or     BYTE PTR [rax],al
    ffe7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ffea:	00 00                	add    BYTE PTR [rax],al
    ffec:	64 08 00             	or     BYTE PTR fs:[rax],al
    ffef:	00 1b                	add    BYTE PTR [rbx],bl
    fff1:	8e ff                	mov    ?,edi
    fff3:	ff                   	(bad)  
    fff4:	ee                   	out    dx,al
    fff5:	01 00                	add    DWORD PTR [rax],eax
    fff7:	00 00                	add    BYTE PTR [rax],al
    fff9:	45 0e                	rex.RB (bad) 
    fffb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10001:	03 e5                	add    esp,ebp
   10003:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10006:	08 00                	or     BYTE PTR [rax],al
   10008:	1c 00                	sbb    al,0x0
   1000a:	00 00                	add    BYTE PTR [rax],al
   1000c:	84 08                	test   BYTE PTR [rax],cl
   1000e:	00 00                	add    BYTE PTR [rax],al
   10010:	e9 8f ff ff e8       	jmp    ffffffffe900ffa4 <_end+0xffffffffe8ed3f9c>
   10015:	01 00                	add    DWORD PTR [rax],eax
   10017:	00 00                	add    BYTE PTR [rax],al
   10019:	45 0e                	rex.RB (bad) 
   1001b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10021:	03 df                	add    ebx,edi
   10023:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10026:	08 00                	or     BYTE PTR [rax],al
   10028:	1c 00                	sbb    al,0x0
   1002a:	00 00                	add    BYTE PTR [rax],al
   1002c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1002d:	08 00                	or     BYTE PTR [rax],al
   1002f:	00 b1 91 ff ff 6c    	add    BYTE PTR [rcx+0x6cffff91],dh
   10035:	00 00                	add    BYTE PTR [rax],al
   10037:	00 00                	add    BYTE PTR [rax],al
   10039:	45 0e                	rex.RB (bad) 
   1003b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10041:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
   10044:	07                   	(bad)  
   10045:	08 00                	or     BYTE PTR [rax],al
   10047:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1004a:	00 00                	add    BYTE PTR [rax],al
   1004c:	c4                   	(bad)  
   1004d:	08 00                	or     BYTE PTR [rax],al
   1004f:	00 fd                	add    ch,bh
   10051:	91                   	xchg   ecx,eax
   10052:	ff                   	(bad)  
   10053:	ff 72 00             	push   QWORD PTR [rdx+0x0]
   10056:	00 00                	add    BYTE PTR [rax],al
   10058:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1005b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10061:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
   10064:	07                   	(bad)  
   10065:	08 00                	or     BYTE PTR [rax],al
   10067:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1006a:	00 00                	add    BYTE PTR [rax],al
   1006c:	e4 08                	in     al,0x8
   1006e:	00 00                	add    BYTE PTR [rax],al
   10070:	4f 92                	rex.WRXB xchg r10,rax
   10072:	ff                   	(bad)  
   10073:	ff 11                	call   QWORD PTR [rcx]
   10075:	01 00                	add    DWORD PTR [rax],eax
   10077:	00 00                	add    BYTE PTR [rax],al
   10079:	45 0e                	rex.RB (bad) 
   1007b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10081:	03 08                	add    ecx,DWORD PTR [rax]
   10083:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10086:	08 00                	or     BYTE PTR [rax],al
   10088:	1c 00                	sbb    al,0x0
   1008a:	00 00                	add    BYTE PTR [rax],al
   1008c:	04 09                	add    al,0x9
   1008e:	00 00                	add    BYTE PTR [rax],al
   10090:	40 93                	rex xchg ebx,eax
   10092:	ff                   	(bad)  
   10093:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
   10097:	00 00                	add    BYTE PTR [rax],al
   10099:	45 0e                	rex.RB (bad) 
   1009b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   100a1:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
   100a4:	07                   	(bad)  
   100a5:	08 00                	or     BYTE PTR [rax],al
   100a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   100aa:	00 00                	add    BYTE PTR [rax],al
   100ac:	24 09                	and    al,0x9
   100ae:	00 00                	add    BYTE PTR [rax],al
   100b0:	7c 93                	jl     10045 <__GNU_EH_FRAME_HDR+0xca1>
   100b2:	ff                   	(bad)  
   100b3:	ff                   	(bad)  
   100b4:	3e 00 00             	ds add BYTE PTR [rax],al
   100b7:	00 00                	add    BYTE PTR [rax],al
   100b9:	45 0e                	rex.RB (bad) 
   100bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   100c1:	75 0c                	jne    100cf <__GNU_EH_FRAME_HDR+0xd2b>
   100c3:	07                   	(bad)  
   100c4:	08 00                	or     BYTE PTR [rax],al
   100c6:	00 00                	add    BYTE PTR [rax],al
   100c8:	1c 00                	sbb    al,0x0
   100ca:	00 00                	add    BYTE PTR [rax],al
   100cc:	44 09 00             	or     DWORD PTR [rax],r8d
   100cf:	00 9a 93 ff ff 86    	add    BYTE PTR [rdx-0x7900006d],bl
   100d5:	00 00                	add    BYTE PTR [rax],al
   100d7:	00 00                	add    BYTE PTR [rax],al
   100d9:	45 0e                	rex.RB (bad) 
   100db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   100e1:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
   100e4:	07                   	(bad)  
   100e5:	08 00                	or     BYTE PTR [rax],al
   100e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   100ea:	00 00                	add    BYTE PTR [rax],al
   100ec:	64 09 00             	or     DWORD PTR fs:[rax],eax
   100ef:	00 00                	add    BYTE PTR [rax],al
   100f1:	94                   	xchg   esp,eax
   100f2:	ff                   	(bad)  
   100f3:	ff                   	(bad)  
   100f4:	df 00                	fild   WORD PTR [rax]
   100f6:	00 00                	add    BYTE PTR [rax],al
   100f8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   100fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10101:	02 d6                	add    dl,dh
   10103:	0c 07                	or     al,0x7
   10105:	08 00                	or     BYTE PTR [rax],al
   10107:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1010a:	00 00                	add    BYTE PTR [rax],al
   1010c:	84 09                	test   BYTE PTR [rcx],cl
   1010e:	00 00                	add    BYTE PTR [rax],al
   10110:	bf 94 ff ff 74       	mov    edi,0x74ffff94
   10115:	00 00                	add    BYTE PTR [rax],al
   10117:	00 00                	add    BYTE PTR [rax],al
   10119:	45 0e                	rex.RB (bad) 
   1011b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10121:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
   10124:	07                   	(bad)  
   10125:	08 00                	or     BYTE PTR [rax],al
   10127:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1012a:	00 00                	add    BYTE PTR [rax],al
   1012c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1012d:	09 00                	or     DWORD PTR [rax],eax
   1012f:	00 13                	add    BYTE PTR [rbx],dl
   10131:	95                   	xchg   ebp,eax
   10132:	ff                   	(bad)  
   10133:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
   1013a:	0e                   	(bad)  
   1013b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10141:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
   10147:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1014a:	00 00                	add    BYTE PTR [rax],al
   1014c:	c4                   	(bad)  
   1014d:	09 00                	or     DWORD PTR [rax],eax
   1014f:	00 8f 95 ff ff 29    	add    BYTE PTR [rdi+0x29ffff95],cl
   10155:	00 00                	add    BYTE PTR [rax],al
   10157:	00 00                	add    BYTE PTR [rax],al
   10159:	45 0e                	rex.RB (bad) 
   1015b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10161:	60                   	(bad)  
   10162:	0c 07                	or     al,0x7
   10164:	08 00                	or     BYTE PTR [rax],al
   10166:	00 00                	add    BYTE PTR [rax],al
   10168:	1c 00                	sbb    al,0x0
   1016a:	00 00                	add    BYTE PTR [rax],al
   1016c:	e4 09                	in     al,0x9
   1016e:	00 00                	add    BYTE PTR [rax],al
   10170:	98                   	cwde   
   10171:	95                   	xchg   ebp,eax
   10172:	ff                   	(bad)  
   10173:	ff 29                	jmp    FWORD PTR [rcx]
   10175:	00 00                	add    BYTE PTR [rax],al
   10177:	00 00                	add    BYTE PTR [rax],al
   10179:	45 0e                	rex.RB (bad) 
   1017b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10181:	60                   	(bad)  
   10182:	0c 07                	or     al,0x7
   10184:	08 00                	or     BYTE PTR [rax],al
   10186:	00 00                	add    BYTE PTR [rax],al
   10188:	24 00                	and    al,0x0
   1018a:	00 00                	add    BYTE PTR [rax],al
   1018c:	04 0a                	add    al,0xa
   1018e:	00 00                	add    BYTE PTR [rax],al
   10190:	a1 95 ff ff 53 01 00 	movabs eax,ds:0x153ffff95
   10197:	00 00 
   10199:	45 0e                	rex.RB (bad) 
   1019b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   101a1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
   101a5:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
   101a9:	08 00                	or     BYTE PTR [rax],al
   101ab:	00 00                	add    BYTE PTR [rax],al
   101ad:	00 00                	add    BYTE PTR [rax],al
   101af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   101b2:	00 00                	add    BYTE PTR [rax],al
   101b4:	2c 0a                	sub    al,0xa
   101b6:	00 00                	add    BYTE PTR [rax],al
   101b8:	cc                   	int3   
   101b9:	96                   	xchg   esi,eax
   101ba:	ff                   	(bad)  
   101bb:	ff 1e                	call   FWORD PTR [rsi]
   101bd:	00 00                	add    BYTE PTR [rax],al
   101bf:	00 00                	add    BYTE PTR [rax],al
   101c1:	45 0e                	rex.RB (bad) 
   101c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   101c9:	55                   	push   rbp
   101ca:	0c 07                	or     al,0x7
   101cc:	08 00                	or     BYTE PTR [rax],al
   101ce:	00 00                	add    BYTE PTR [rax],al
   101d0:	1c 00                	sbb    al,0x0
   101d2:	00 00                	add    BYTE PTR [rax],al
   101d4:	4c 0a 00             	rex.WR or r8b,BYTE PTR [rax]
   101d7:	00 ca                	add    dl,cl
   101d9:	96                   	xchg   esi,eax
   101da:	ff                   	(bad)  
   101db:	ff 63 01             	jmp    QWORD PTR [rbx+0x1]
   101de:	00 00                	add    BYTE PTR [rax],al
   101e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   101e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   101e9:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
   101ec:	0c 07                	or     al,0x7
   101ee:	08 00                	or     BYTE PTR [rax],al
   101f0:	2c 00                	sub    al,0x0
   101f2:	00 00                	add    BYTE PTR [rax],al
   101f4:	6c                   	ins    BYTE PTR es:[rdi],dx
   101f5:	0a 00                	or     al,BYTE PTR [rax]
   101f7:	00 0d 98 ff ff 0e    	add    BYTE PTR [rip+0xeffff98],cl        # f010195 <_end+0xeed418d>
   101fd:	02 00                	add    al,BYTE PTR [rax]
   101ff:	00 00                	add    BYTE PTR [rax],al
   10201:	45 0e                	rex.RB (bad) 
   10203:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10209:	50                   	push   rax
   1020a:	8f 03                	pop    QWORD PTR [rbx]
   1020c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
   10213:	07                   	(bad)  
   10214:	03 f5                	add    esi,ebp
   10216:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10219:	08 00                	or     BYTE PTR [rax],al
   1021b:	00 00                	add    BYTE PTR [rax],al
   1021d:	00 00                	add    BYTE PTR [rax],al
   1021f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10222:	00 00                	add    BYTE PTR [rax],al
   10224:	9c                   	pushf  
   10225:	0a 00                	or     al,BYTE PTR [rax]
   10227:	00 eb                	add    bl,ch
   10229:	99                   	cdq    
   1022a:	ff                   	(bad)  
   1022b:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
   10231:	45 0e                	rex.RB (bad) 
   10233:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10239:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
   1023f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10242:	00 00                	add    BYTE PTR [rax],al
   10244:	bc 0a 00 00 7d       	mov    esp,0x7d00000a
   10249:	9a                   	(bad)  
   1024a:	ff                   	(bad)  
   1024b:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
   10251:	45 0e                	rex.RB (bad) 
   10253:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10259:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
   10260:	24 00                	and    al,0x0
   10262:	00 00                	add    BYTE PTR [rax],al
   10264:	dc 0a                	fmul   QWORD PTR [rdx]
   10266:	00 00                	add    BYTE PTR [rax],al
   10268:	02 9b ff ff 94 00    	add    bl,BYTE PTR [rbx+0x94ffff]
   1026e:	00 00                	add    BYTE PTR [rax],al
   10270:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   10273:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10279:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
   1027d:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
   10280:	08 00                	or     BYTE PTR [rax],al
   10282:	00 00                	add    BYTE PTR [rax],al
   10284:	00 00                	add    BYTE PTR [rax],al
   10286:	00 00                	add    BYTE PTR [rax],al
   10288:	1c 00                	sbb    al,0x0
   1028a:	00 00                	add    BYTE PTR [rax],al
   1028c:	04 0b                	add    al,0xb
   1028e:	00 00                	add    BYTE PTR [rax],al
   10290:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   10291:	9b                   	fwait
   10292:	ff                   	(bad)  
   10293:	ff d5                	call   rbp
   10295:	00 00                	add    BYTE PTR [rax],al
   10297:	00 00                	add    BYTE PTR [rax],al
   10299:	45 0e                	rex.RB (bad) 
   1029b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   102a1:	02 cc                	add    cl,ah
   102a3:	0c 07                	or     al,0x7
   102a5:	08 00                	or     BYTE PTR [rax],al
   102a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   102aa:	00 00                	add    BYTE PTR [rax],al
   102ac:	24 0b                	and    al,0xb
   102ae:	00 00                	add    BYTE PTR [rax],al
   102b0:	23 9c ff ff df 00 00 	and    ebx,DWORD PTR [rdi+rdi*8+0xdfff]
   102b7:	00 00                	add    BYTE PTR [rax],al
   102b9:	45 0e                	rex.RB (bad) 
   102bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   102c1:	02 d6                	add    dl,dh
   102c3:	0c 07                	or     al,0x7
   102c5:	08 00                	or     BYTE PTR [rax],al
   102c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   102ca:	00 00                	add    BYTE PTR [rax],al
   102cc:	44 0b 00             	or     r8d,DWORD PTR [rax]
   102cf:	00 e2                	add    dl,ah
   102d1:	9c                   	pushf  
   102d2:	ff                   	(bad)  
   102d3:	ff                   	(bad)  
   102d4:	7d 00                	jge    102d6 <__GNU_EH_FRAME_HDR+0xf32>
   102d6:	00 00                	add    BYTE PTR [rax],al
   102d8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   102db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   102e1:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
   102e5:	08 00                	or     BYTE PTR [rax],al
   102e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   102ea:	00 00                	add    BYTE PTR [rax],al
   102ec:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
   102ef:	00 3f                	add    BYTE PTR [rdi],bh
   102f1:	9d                   	popf   
   102f2:	ff                   	(bad)  
   102f3:	ff 36                	push   QWORD PTR [rsi]
   102f5:	01 00                	add    DWORD PTR [rax],eax
   102f7:	00 00                	add    BYTE PTR [rax],al
   102f9:	45 0e                	rex.RB (bad) 
   102fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10301:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 8080f08 <_end+0x7f44f00>
   10307:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1030a:	00 00                	add    BYTE PTR [rax],al
   1030c:	84 0b                	test   BYTE PTR [rbx],cl
   1030e:	00 00                	add    BYTE PTR [rax],al
   10310:	55                   	push   rbp
   10311:	9e                   	sahf   
   10312:	ff                   	(bad)  
   10313:	ff                   	(bad)  
   10314:	7e 00                	jle    10316 <__GNU_EH_FRAME_HDR+0xf72>
   10316:	00 00                	add    BYTE PTR [rax],al
   10318:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1031b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10321:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
   10324:	07                   	(bad)  
   10325:	08 00                	or     BYTE PTR [rax],al
   10327:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1032a:	00 00                	add    BYTE PTR [rax],al
   1032c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1032d:	0b 00                	or     eax,DWORD PTR [rax]
   1032f:	00 b3 9e ff ff 2a    	add    BYTE PTR [rbx+0x2affff9e],dh
   10335:	02 00                	add    al,BYTE PTR [rax]
   10337:	00 00                	add    BYTE PTR [rax],al
   10339:	45 0e                	rex.RB (bad) 
   1033b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10341:	03 21                	add    esp,DWORD PTR [rcx]
   10343:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
   10346:	08 00                	or     BYTE PTR [rax],al
   10348:	1c 00                	sbb    al,0x0
   1034a:	00 00                	add    BYTE PTR [rax],al
   1034c:	c4                   	(bad)  
   1034d:	0b 00                	or     eax,DWORD PTR [rax]
   1034f:	00 bd a0 ff ff c3    	add    BYTE PTR [rbp-0x3c000060],bh
   10355:	00 00                	add    BYTE PTR [rax],al
   10357:	00 00                	add    BYTE PTR [rax],al
   10359:	45 0e                	rex.RB (bad) 
   1035b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10361:	02 ba 0c 07 08 00    	add    bh,BYTE PTR [rdx+0x8070c]
   10367:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1036a:	00 00                	add    BYTE PTR [rax],al
   1036c:	e4 0b                	in     al,0xb
   1036e:	00 00                	add    BYTE PTR [rax],al
   10370:	60                   	(bad)  
   10371:	a1 ff ff 9b 01 00 00 	movabs eax,ds:0x45000000019bffff
   10378:	00 45 
   1037a:	0e                   	(bad)  
   1037b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10381:	03 92 01 0c 07 08    	add    edx,DWORD PTR [rdx+0x8070c01]
   10387:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1038a:	00 00                	add    BYTE PTR [rax],al
   1038c:	04 0c                	add    al,0xc
   1038e:	00 00                	add    BYTE PTR [rax],al
   10390:	db a2 ff ff 0d 01    	(bad)  [rdx+0x10dffff]
   10396:	00 00                	add    BYTE PTR [rax],al
   10398:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1039b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   103a1:	03 04 01             	add    eax,DWORD PTR [rcx+rax*1]
   103a4:	0c 07                	or     al,0x7
   103a6:	08 00                	or     BYTE PTR [rax],al
   103a8:	1c 00                	sbb    al,0x0
   103aa:	00 00                	add    BYTE PTR [rax],al
   103ac:	24 0c                	and    al,0xc
   103ae:	00 00                	add    BYTE PTR [rax],al
   103b0:	c8 a3 ff ff          	enter  0xffa3,0xff
   103b4:	66 00 00             	data16 add BYTE PTR [rax],al
   103b7:	00 00                	add    BYTE PTR [rax],al
   103b9:	45 0e                	rex.RB (bad) 
   103bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   103c1:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
   103c4:	07                   	(bad)  
   103c5:	08 00                	or     BYTE PTR [rax],al
   103c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   103ca:	00 00                	add    BYTE PTR [rax],al
   103cc:	44 0c 00             	rex.R or al,0x0
   103cf:	00 0e                	add    BYTE PTR [rsi],cl
   103d1:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   103d2:	ff                   	(bad)  
   103d3:	ff 75 00             	push   QWORD PTR [rbp+0x0]
   103d6:	00 00                	add    BYTE PTR [rax],al
   103d8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   103db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   103e1:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
   103e5:	08 00                	or     BYTE PTR [rax],al
   103e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   103ea:	00 00                	add    BYTE PTR [rax],al
   103ec:	64 0c 00             	fs or  al,0x0
   103ef:	00 63 a4             	add    BYTE PTR [rbx-0x5c],ah
   103f2:	ff                   	(bad)  
   103f3:	ff                   	(bad)  
   103f4:	db 00                	fild   DWORD PTR [rax]
   103f6:	00 00                	add    BYTE PTR [rax],al
   103f8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   103fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10401:	02 d2                	add    dl,dl
   10403:	0c 07                	or     al,0x7
   10405:	08 00                	or     BYTE PTR [rax],al
   10407:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1040a:	00 00                	add    BYTE PTR [rax],al
   1040c:	84 0c 00             	test   BYTE PTR [rax+rax*1],cl
   1040f:	00 1e                	add    BYTE PTR [rsi],bl
   10411:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   10412:	ff                   	(bad)  
   10413:	ff 72 01             	push   QWORD PTR [rdx+0x1]
   10416:	00 00                	add    BYTE PTR [rax],al
   10418:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1041b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10421:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
   10424:	0c 07                	or     al,0x7
   10426:	08 00                	or     BYTE PTR [rax],al
   10428:	1c 00                	sbb    al,0x0
   1042a:	00 00                	add    BYTE PTR [rax],al
   1042c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1042d:	0c 00                	or     al,0x0
   1042f:	00 70 a6             	add    BYTE PTR [rax-0x5a],dh
   10432:	ff                   	(bad)  
   10433:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
   10437:	00 00                	add    BYTE PTR [rax],al
   10439:	45 0e                	rex.RB (bad) 
   1043b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10441:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
   10444:	07                   	(bad)  
   10445:	08 00                	or     BYTE PTR [rax],al
   10447:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1044a:	00 00                	add    BYTE PTR [rax],al
   1044c:	c4                   	(bad)  
   1044d:	0c 00                	or     al,0x0
   1044f:	00 bc a6 ff ff 80 00 	add    BYTE PTR [rsi+riz*4+0x80ffff],bh
   10456:	00 00                	add    BYTE PTR [rax],al
   10458:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1045b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10461:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
   10464:	07                   	(bad)  
   10465:	08 00                	or     BYTE PTR [rax],al
   10467:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1046a:	00 00                	add    BYTE PTR [rax],al
   1046c:	e4 0c                	in     al,0xc
   1046e:	00 00                	add    BYTE PTR [rax],al
   10470:	1c a7                	sbb    al,0xa7
   10472:	ff                   	(bad)  
   10473:	ff 16                	call   QWORD PTR [rsi]
   10475:	00 00                	add    BYTE PTR [rax],al
   10477:	00 00                	add    BYTE PTR [rax],al
   10479:	45 0e                	rex.RB (bad) 
   1047b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10481:	4d 0c 07             	rex.WRB or al,0x7
   10484:	08 00                	or     BYTE PTR [rax],al
   10486:	00 00                	add    BYTE PTR [rax],al
   10488:	20 00                	and    BYTE PTR [rax],al
   1048a:	00 00                	add    BYTE PTR [rax],al
   1048c:	04 0d                	add    al,0xd
   1048e:	00 00                	add    BYTE PTR [rax],al
   10490:	12 a7 ff ff 3a 01    	adc    ah,BYTE PTR [rdi+0x13affff]
   10496:	00 00                	add    BYTE PTR [rax],al
   10498:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1049b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   104a1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
   104a5:	2c 01                	sub    al,0x1
   104a7:	0c 07                	or     al,0x7
   104a9:	08 00                	or     BYTE PTR [rax],al
   104ab:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   104ae:	00 00                	add    BYTE PTR [rax],al
   104b0:	28 0d 00 00 28 a8    	sub    BYTE PTR [rip+0xffffffffa8280000],cl        # ffffffffa82904b6 <_end+0xffffffffa81544ae>
   104b6:	ff                   	(bad)  
   104b7:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
   104bb:	00 00                	add    BYTE PTR [rax],al
   104bd:	45 0e                	rex.RB (bad) 
   104bf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   104c5:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
   104c8:	07                   	(bad)  
   104c9:	08 00                	or     BYTE PTR [rax],al
   104cb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   104ce:	00 00                	add    BYTE PTR [rax],al
   104d0:	48 0d 00 00 6c a8    	or     rax,0xffffffffa86c0000
   104d6:	ff                   	(bad)  
   104d7:	ff 53 00             	call   QWORD PTR [rbx+0x0]
   104da:	00 00                	add    BYTE PTR [rax],al
   104dc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   104df:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   104e5:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
   104e8:	07                   	(bad)  
   104e9:	08 00                	or     BYTE PTR [rax],al
   104eb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   104ee:	00 00                	add    BYTE PTR [rax],al
   104f0:	68 0d 00 00 9f       	push   0xffffffff9f00000d
   104f5:	a8 ff                	test   al,0xff
   104f7:	ff b1 00 00 00 00    	push   QWORD PTR [rcx+0x0]
   104fd:	45 0e                	rex.RB (bad) 
   104ff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10505:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
   1050b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1050e:	00 00                	add    BYTE PTR [rax],al
   10510:	88 0d 00 00 30 a9    	mov    BYTE PTR [rip+0xffffffffa9300000],cl        # ffffffffa9310516 <_end+0xffffffffa91d450e>
   10516:	ff                   	(bad)  
   10517:	ff cb                	dec    ebx
   10519:	00 00                	add    BYTE PTR [rax],al
   1051b:	00 00                	add    BYTE PTR [rax],al
   1051d:	45 0e                	rex.RB (bad) 
   1051f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10525:	02 c2                	add    al,dl
   10527:	0c 07                	or     al,0x7
   10529:	08 00                	or     BYTE PTR [rax],al
   1052b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1052e:	00 00                	add    BYTE PTR [rax],al
   10530:	a8 0d                	test   al,0xd
   10532:	00 00                	add    BYTE PTR [rax],al
   10534:	db a9 ff ff 55 00    	fld    TBYTE PTR [rcx+0x55ffff]
   1053a:	00 00                	add    BYTE PTR [rax],al
   1053c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1053f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10545:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
   10549:	08 00                	or     BYTE PTR [rax],al
   1054b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1054e:	00 00                	add    BYTE PTR [rax],al
   10550:	c8 0d 00 00          	enter  0xd,0x0
   10554:	10 aa ff ff 30 00    	adc    BYTE PTR [rdx+0x30ffff],ch
   1055a:	00 00                	add    BYTE PTR [rax],al
   1055c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1055f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10565:	67 0c 07             	addr32 or al,0x7
   10568:	08 00                	or     BYTE PTR [rax],al
   1056a:	00 00                	add    BYTE PTR [rax],al
   1056c:	1c 00                	sbb    al,0x0
   1056e:	00 00                	add    BYTE PTR [rax],al
   10570:	e8 0d 00 00 20       	call   20010582 <_end+0x1fed457a>
   10575:	aa                   	stos   BYTE PTR es:[rdi],al
   10576:	ff                   	(bad)  
   10577:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
   1057a:	00 00                	add    BYTE PTR [rax],al
   1057c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1057f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10585:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
   10588:	07                   	(bad)  
   10589:	08 00                	or     BYTE PTR [rax],al
   1058b:	00 20                	add    BYTE PTR [rax],ah
   1058d:	00 00                	add    BYTE PTR [rax],al
   1058f:	00 08                	add    BYTE PTR [rax],cl
   10591:	0e                   	(bad)  
   10592:	00 00                	add    BYTE PTR [rax],al
   10594:	67 aa                	stos   BYTE PTR es:[edi],al
   10596:	ff                   	(bad)  
   10597:	ff 0c 0f             	dec    DWORD PTR [rdi+rcx*1]
   1059a:	00 00                	add    BYTE PTR [rax],al
   1059c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1059f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   105a5:	48 83 03 03          	add    QWORD PTR [rbx],0x3
   105a9:	fb                   	sti    
   105aa:	0e                   	(bad)  
   105ab:	0c 07                	or     al,0x7
   105ad:	08 00                	or     BYTE PTR [rax],al
   105af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   105b2:	00 00                	add    BYTE PTR [rax],al
   105b4:	2c 0e                	sub    al,0xe
   105b6:	00 00                	add    BYTE PTR [rax],al
   105b8:	4f b9 ff ff 46 00 00 	rex.WRXB movabs r9,0x450000000046ffff
   105bf:	00 00 45 
   105c2:	0e                   	(bad)  
   105c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   105c9:	7d 0c                	jge    105d7 <__GNU_EH_FRAME_HDR+0x1233>
   105cb:	07                   	(bad)  
   105cc:	08 00                	or     BYTE PTR [rax],al
   105ce:	00 00                	add    BYTE PTR [rax],al
   105d0:	24 00                	and    al,0x0
   105d2:	00 00                	add    BYTE PTR [rax],al
   105d4:	4c 0e                	rex.WR (bad) 
   105d6:	00 00                	add    BYTE PTR [rax],al
   105d8:	75 b9                	jne    10593 <__GNU_EH_FRAME_HDR+0x11ef>
   105da:	ff                   	(bad)  
   105db:	ff                   	(bad)  
   105dc:	3b 02                	cmp    eax,DWORD PTR [rdx]
   105de:	00 00                	add    BYTE PTR [rax],al
   105e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   105e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   105e9:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
   105ec:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
   105ef:	05 83 06 03 27       	add    eax,0x27030683
   105f4:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
   105f7:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
   105fa:	00 00                	add    BYTE PTR [rax],al
   105fc:	74 0e                	je     1060c <__GNU_EH_FRAME_HDR+0x1268>
   105fe:	00 00                	add    BYTE PTR [rax],al
   10600:	88 bb ff ff a5 01    	mov    BYTE PTR [rbx+0x1a5ffff],bh
   10606:	00 00                	add    BYTE PTR [rax],al
   10608:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1060b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10611:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
   10618:	1c 00                	sbb    al,0x0
   1061a:	00 00                	add    BYTE PTR [rax],al
   1061c:	94                   	xchg   esp,eax
   1061d:	0e                   	(bad)  
   1061e:	00 00                	add    BYTE PTR [rax],al
   10620:	0d bd ff ff 12       	or     eax,0x12ffffbd
   10625:	01 00                	add    DWORD PTR [rax],eax
   10627:	00 00                	add    BYTE PTR [rax],al
   10629:	45 0e                	rex.RB (bad) 
   1062b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10631:	03 09                	add    ecx,DWORD PTR [rcx]
   10633:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10636:	08 00                	or     BYTE PTR [rax],al
   10638:	24 00                	and    al,0x0
   1063a:	00 00                	add    BYTE PTR [rax],al
   1063c:	b4 0e                	mov    ah,0xe
   1063e:	00 00                	add    BYTE PTR [rax],al
   10640:	ff                   	(bad)  
   10641:	bd ff ff bc 00       	mov    ebp,0xbcffff
   10646:	00 00                	add    BYTE PTR [rax],al
   10648:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1064b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10651:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
   10655:	ae                   	scas   al,BYTE PTR es:[rdi]
   10656:	0c 07                	or     al,0x7
   10658:	08 00                	or     BYTE PTR [rax],al
   1065a:	00 00                	add    BYTE PTR [rax],al
   1065c:	00 00                	add    BYTE PTR [rax],al
   1065e:	00 00                	add    BYTE PTR [rax],al
   10660:	24 00                	and    al,0x0
   10662:	00 00                	add    BYTE PTR [rax],al
   10664:	dc 0e                	fmul   QWORD PTR [rsi]
   10666:	00 00                	add    BYTE PTR [rax],al
   10668:	93                   	xchg   ebx,eax
   10669:	be ff ff 9b 01       	mov    esi,0x19bffff
   1066e:	00 00                	add    BYTE PTR [rax],al
   10670:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   10673:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10679:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
   1067c:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
   10680:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   10683:	08 00                	or     BYTE PTR [rax],al
   10685:	00 00                	add    BYTE PTR [rax],al
   10687:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1068a:	00 00                	add    BYTE PTR [rax],al
   1068c:	04 0f                	add    al,0xf
   1068e:	00 00                	add    BYTE PTR [rax],al
   10690:	06                   	(bad)  
   10691:	c0 ff ff             	sar    bh,0xff
   10694:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   10695:	00 00                	add    BYTE PTR [rax],al
   10697:	00 00                	add    BYTE PTR [rax],al
   10699:	45 0e                	rex.RB (bad) 
   1069b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   106a1:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
   106a8:	1c 00                	sbb    al,0x0
   106aa:	00 00                	add    BYTE PTR [rax],al
   106ac:	24 0f                	and    al,0xf
   106ae:	00 00                	add    BYTE PTR [rax],al
   106b0:	8b c0                	mov    eax,eax
   106b2:	ff                   	(bad)  
   106b3:	ff 43 01             	inc    DWORD PTR [rbx+0x1]
   106b6:	00 00                	add    BYTE PTR [rax],al
   106b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   106bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   106c1:	03 3a                	add    edi,DWORD PTR [rdx]
   106c3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
   106c6:	08 00                	or     BYTE PTR [rax],al
   106c8:	1c 00                	sbb    al,0x0
   106ca:	00 00                	add    BYTE PTR [rax],al
   106cc:	44 0f 00 00          	rex.R sldt WORD PTR [rax]
   106d0:	ae                   	scas   al,BYTE PTR es:[rdi]
   106d1:	c1 ff ff             	sar    edi,0xff
   106d4:	f3 00 00             	repz add BYTE PTR [rax],al
   106d7:	00 00                	add    BYTE PTR [rax],al
   106d9:	45 0e                	rex.RB (bad) 
   106db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   106e1:	02 ea                	add    ch,dl
   106e3:	0c 07                	or     al,0x7
   106e5:	08 00                	or     BYTE PTR [rax],al
   106e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   106ea:	00 00                	add    BYTE PTR [rax],al
   106ec:	64 0f 00 00          	sldt   WORD PTR fs:[rax]
   106f0:	81 c2 ff ff bf 02    	add    edx,0x2bfffff
   106f6:	00 00                	add    BYTE PTR [rax],al
   106f8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   106fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10701:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
   10704:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
   10708:	1c 00                	sbb    al,0x0
   1070a:	00 00                	add    BYTE PTR [rax],al
   1070c:	84 0f                	test   BYTE PTR [rdi],cl
   1070e:	00 00                	add    BYTE PTR [rax],al
   10710:	20 c5                	and    ch,al
   10712:	ff                   	(bad)  
   10713:	ff 6a 00             	jmp    FWORD PTR [rdx+0x0]
   10716:	00 00                	add    BYTE PTR [rax],al
   10718:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1071b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10721:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
   10724:	07                   	(bad)  
   10725:	08 00                	or     BYTE PTR [rax],al
   10727:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1072a:	00 00                	add    BYTE PTR [rax],al
   1072c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1072d:	0f 00 00             	sldt   WORD PTR [rax]
   10730:	6a c5                	push   0xffffffffffffffc5
   10732:	ff                   	(bad)  
   10733:	ff 6e 00             	jmp    FWORD PTR [rsi+0x0]
   10736:	00 00                	add    BYTE PTR [rax],al
   10738:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
   1073b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10741:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
   10744:	07                   	(bad)  
   10745:	08 00                	or     BYTE PTR [rax],al
   10747:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   1074a:	00 00                	add    BYTE PTR [rax],al
   1074c:	c4                   	(bad)  
   1074d:	0f 00 00             	sldt   WORD PTR [rax]
   10750:	b8 c5 ff ff 70       	mov    eax,0x70ffffc5
   10755:	00 00                	add    BYTE PTR [rax],al
   10757:	00 00                	add    BYTE PTR [rax],al
   10759:	45 0e                	rex.RB (bad) 
   1075b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10761:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
   10764:	07                   	(bad)  
   10765:	08 00                	or     BYTE PTR [rax],al
   10767:	00 20                	add    BYTE PTR [rax],ah
   10769:	00 00                	add    BYTE PTR [rax],al
   1076b:	00 e4                	add    ah,ah
   1076d:	0f 00 00             	sldt   WORD PTR [rax]
   10770:	08 c6                	or     dh,al
   10772:	ff                   	(bad)  
   10773:	ff 8d 01 00 00 00    	dec    DWORD PTR [rbp+0x1]
   10779:	45 0e                	rex.RB (bad) 
   1077b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   10781:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
   10785:	7f 01                	jg     10788 <__GNU_EH_FRAME_HDR+0x13e4>
   10787:	0c 07                	or     al,0x7
   10789:	08 00                	or     BYTE PTR [rax],al
	...

000000000001078c <__FRAME_END__>:
   1078c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000011b48 <message_buffer+0x116c8>:
	...

Disassembly of section .init_array:

0000000000011b48 <__frame_dummy_init_array_entry>:
   11b48:	00 2a                	add    BYTE PTR [rdx],ch
   11b4a:	00 00                	add    BYTE PTR [rax],al
   11b4c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000011b50 <__do_global_dtors_aux_fini_array_entry>:
   11b50:	c0 29 00             	shr    BYTE PTR [rcx],0x0
   11b53:	00 00                	add    BYTE PTR [rax],al
   11b55:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000011b58 <_DYNAMIC>:
   11b58:	01 00                	add    DWORD PTR [rax],eax
   11b5a:	00 00                	add    BYTE PTR [rax],al
   11b5c:	00 00                	add    BYTE PTR [rax],al
   11b5e:	00 00                	add    BYTE PTR [rax],al
   11b60:	d4                   	(bad)  
   11b61:	02 00                	add    al,BYTE PTR [rax]
   11b63:	00 00                	add    BYTE PTR [rax],al
   11b65:	00 00                	add    BYTE PTR [rax],al
   11b67:	00 01                	add    BYTE PTR [rcx],al
   11b69:	00 00                	add    BYTE PTR [rax],al
   11b6b:	00 00                	add    BYTE PTR [rax],al
   11b6d:	00 00                	add    BYTE PTR [rax],al
   11b6f:	00 e3                	add    bl,ah
   11b71:	02 00                	add    al,BYTE PTR [rax]
   11b73:	00 00                	add    BYTE PTR [rax],al
   11b75:	00 00                	add    BYTE PTR [rax],al
   11b77:	00 01                	add    BYTE PTR [rcx],al
   11b79:	00 00                	add    BYTE PTR [rax],al
   11b7b:	00 00                	add    BYTE PTR [rax],al
   11b7d:	00 00                	add    BYTE PTR [rax],al
   11b7f:	00 f4                	add    ah,dh
   11b81:	02 00                	add    al,BYTE PTR [rax]
   11b83:	00 00                	add    BYTE PTR [rax],al
   11b85:	00 00                	add    BYTE PTR [rax],al
   11b87:	00 01                	add    BYTE PTR [rcx],al
   11b89:	00 00                	add    BYTE PTR [rax],al
   11b8b:	00 00                	add    BYTE PTR [rax],al
   11b8d:	00 00                	add    BYTE PTR [rax],al
   11b8f:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
   11b92:	00 00                	add    BYTE PTR [rax],al
   11b94:	00 00                	add    BYTE PTR [rax],al
   11b96:	00 00                	add    BYTE PTR [rax],al
   11b98:	01 00                	add    DWORD PTR [rax],eax
   11b9a:	00 00                	add    BYTE PTR [rax],al
   11b9c:	00 00                	add    BYTE PTR [rax],al
   11b9e:	00 00                	add    BYTE PTR [rax],al
   11ba0:	13 03                	adc    eax,DWORD PTR [rbx]
   11ba2:	00 00                	add    BYTE PTR [rax],al
   11ba4:	00 00                	add    BYTE PTR [rax],al
   11ba6:	00 00                	add    BYTE PTR [rax],al
   11ba8:	0c 00                	or     al,0x0
   11baa:	00 00                	add    BYTE PTR [rax],al
   11bac:	00 00                	add    BYTE PTR [rax],al
   11bae:	00 00                	add    BYTE PTR [rax],al
   11bb0:	00 20                	add    BYTE PTR [rax],ah
   11bb2:	00 00                	add    BYTE PTR [rax],al
   11bb4:	00 00                	add    BYTE PTR [rax],al
   11bb6:	00 00                	add    BYTE PTR [rax],al
   11bb8:	0d 00 00 00 00       	or     eax,0x0
   11bbd:	00 00                	add    BYTE PTR [rax],al
   11bbf:	00 08                	add    BYTE PTR [rax],cl
   11bc1:	cf                   	iret   
   11bc2:	00 00                	add    BYTE PTR [rax],al
   11bc4:	00 00                	add    BYTE PTR [rax],al
   11bc6:	00 00                	add    BYTE PTR [rax],al
   11bc8:	19 00                	sbb    DWORD PTR [rax],eax
   11bca:	00 00                	add    BYTE PTR [rax],al
   11bcc:	00 00                	add    BYTE PTR [rax],al
   11bce:	00 00                	add    BYTE PTR [rax],al
   11bd0:	48 1b 01             	sbb    rax,QWORD PTR [rcx]
   11bd3:	00 00                	add    BYTE PTR [rax],al
   11bd5:	00 00                	add    BYTE PTR [rax],al
   11bd7:	00 1b                	add    BYTE PTR [rbx],bl
   11bd9:	00 00                	add    BYTE PTR [rax],al
   11bdb:	00 00                	add    BYTE PTR [rax],al
   11bdd:	00 00                	add    BYTE PTR [rax],al
   11bdf:	00 08                	add    BYTE PTR [rax],cl
   11be1:	00 00                	add    BYTE PTR [rax],al
   11be3:	00 00                	add    BYTE PTR [rax],al
   11be5:	00 00                	add    BYTE PTR [rax],al
   11be7:	00 1a                	add    BYTE PTR [rdx],bl
   11be9:	00 00                	add    BYTE PTR [rax],al
   11beb:	00 00                	add    BYTE PTR [rax],al
   11bed:	00 00                	add    BYTE PTR [rax],al
   11bef:	00 50 1b             	add    BYTE PTR [rax+0x1b],dl
   11bf2:	01 00                	add    DWORD PTR [rax],eax
   11bf4:	00 00                	add    BYTE PTR [rax],al
   11bf6:	00 00                	add    BYTE PTR [rax],al
   11bf8:	1c 00                	sbb    al,0x0
   11bfa:	00 00                	add    BYTE PTR [rax],al
   11bfc:	00 00                	add    BYTE PTR [rax],al
   11bfe:	00 00                	add    BYTE PTR [rax],al
   11c00:	08 00                	or     BYTE PTR [rax],al
   11c02:	00 00                	add    BYTE PTR [rax],al
   11c04:	00 00                	add    BYTE PTR [rax],al
   11c06:	00 00                	add    BYTE PTR [rax],al
   11c08:	f5                   	cmc    
   11c09:	fe                   	(bad)  
   11c0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11c0d:	00 00                	add    BYTE PTR [rax],al
   11c0f:	00 e8                	add    al,ch
   11c11:	03 00                	add    eax,DWORD PTR [rax]
   11c13:	00 00                	add    BYTE PTR [rax],al
   11c15:	00 00                	add    BYTE PTR [rax],al
   11c17:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 11c1d <_DYNAMIC+0xc5>
   11c1d:	00 00                	add    BYTE PTR [rax],al
   11c1f:	00 80 0b 00 00 00    	add    BYTE PTR [rax+0xb],al
   11c25:	00 00                	add    BYTE PTR [rax],al
   11c27:	00 06                	add    BYTE PTR [rsi],al
   11c29:	00 00                	add    BYTE PTR [rax],al
   11c2b:	00 00                	add    BYTE PTR [rax],al
   11c2d:	00 00                	add    BYTE PTR [rax],al
   11c2f:	00 18                	add    BYTE PTR [rax],bl
   11c31:	04 00                	add    al,0x0
   11c33:	00 00                	add    BYTE PTR [rax],al
   11c35:	00 00                	add    BYTE PTR [rax],al
   11c37:	00 0a                	add    BYTE PTR [rdx],cl
   11c39:	00 00                	add    BYTE PTR [rax],al
   11c3b:	00 00                	add    BYTE PTR [rax],al
   11c3d:	00 00                	add    BYTE PTR [rax],al
   11c3f:	00 60 03             	add    BYTE PTR [rax+0x3],ah
   11c42:	00 00                	add    BYTE PTR [rax],al
   11c44:	00 00                	add    BYTE PTR [rax],al
   11c46:	00 00                	add    BYTE PTR [rax],al
   11c48:	0b 00                	or     eax,DWORD PTR [rax]
   11c4a:	00 00                	add    BYTE PTR [rax],al
   11c4c:	00 00                	add    BYTE PTR [rax],al
   11c4e:	00 00                	add    BYTE PTR [rax],al
   11c50:	18 00                	sbb    BYTE PTR [rax],al
   11c52:	00 00                	add    BYTE PTR [rax],al
   11c54:	00 00                	add    BYTE PTR [rax],al
   11c56:	00 00                	add    BYTE PTR [rax],al
   11c58:	15 00 00 00 00       	adc    eax,0x0
	...
   11c65:	00 00                	add    BYTE PTR [rax],al
   11c67:	00 03                	add    BYTE PTR [rbx],al
   11c69:	00 00                	add    BYTE PTR [rax],al
   11c6b:	00 00                	add    BYTE PTR [rax],al
   11c6d:	00 00                	add    BYTE PTR [rax],al
   11c6f:	00 88 1d 01 00 00    	add    BYTE PTR [rax+0x11d],cl
   11c75:	00 00                	add    BYTE PTR [rax],al
   11c77:	00 02                	add    BYTE PTR [rdx],al
   11c79:	00 00                	add    BYTE PTR [rax],al
   11c7b:	00 00                	add    BYTE PTR [rax],al
   11c7d:	00 00                	add    BYTE PTR [rax],al
   11c7f:	00 a8 06 00 00 00    	add    BYTE PTR [rax+0x6],ch
   11c85:	00 00                	add    BYTE PTR [rax],al
   11c87:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
   11c8a:	00 00                	add    BYTE PTR [rax],al
   11c8c:	00 00                	add    BYTE PTR [rax],al
   11c8e:	00 00                	add    BYTE PTR [rax],al
   11c90:	07                   	(bad)  
   11c91:	00 00                	add    BYTE PTR [rax],al
   11c93:	00 00                	add    BYTE PTR [rax],al
   11c95:	00 00                	add    BYTE PTR [rax],al
   11c97:	00 17                	add    BYTE PTR [rdi],dl
   11c99:	00 00                	add    BYTE PTR [rax],al
   11c9b:	00 00                	add    BYTE PTR [rax],al
   11c9d:	00 00                	add    BYTE PTR [rax],al
   11c9f:	00 60 11             	add    BYTE PTR [rax+0x11],ah
   11ca2:	00 00                	add    BYTE PTR [rax],al
   11ca4:	00 00                	add    BYTE PTR [rax],al
   11ca6:	00 00                	add    BYTE PTR [rax],al
   11ca8:	07                   	(bad)  
   11ca9:	00 00                	add    BYTE PTR [rax],al
   11cab:	00 00                	add    BYTE PTR [rax],al
   11cad:	00 00                	add    BYTE PTR [rax],al
   11caf:	00 10                	add    BYTE PTR [rax],dl
   11cb1:	10 00                	adc    BYTE PTR [rax],al
   11cb3:	00 00                	add    BYTE PTR [rax],al
   11cb5:	00 00                	add    BYTE PTR [rax],al
   11cb7:	00 08                	add    BYTE PTR [rax],cl
   11cb9:	00 00                	add    BYTE PTR [rax],al
   11cbb:	00 00                	add    BYTE PTR [rax],al
   11cbd:	00 00                	add    BYTE PTR [rax],al
   11cbf:	00 50 01             	add    BYTE PTR [rax+0x1],dl
   11cc2:	00 00                	add    BYTE PTR [rax],al
   11cc4:	00 00                	add    BYTE PTR [rax],al
   11cc6:	00 00                	add    BYTE PTR [rax],al
   11cc8:	09 00                	or     DWORD PTR [rax],eax
   11cca:	00 00                	add    BYTE PTR [rax],al
   11ccc:	00 00                	add    BYTE PTR [rax],al
   11cce:	00 00                	add    BYTE PTR [rax],al
   11cd0:	18 00                	sbb    BYTE PTR [rax],al
   11cd2:	00 00                	add    BYTE PTR [rax],al
   11cd4:	00 00                	add    BYTE PTR [rax],al
   11cd6:	00 00                	add    BYTE PTR [rax],al
   11cd8:	1e                   	(bad)  
   11cd9:	00 00                	add    BYTE PTR [rax],al
   11cdb:	00 00                	add    BYTE PTR [rax],al
   11cdd:	00 00                	add    BYTE PTR [rax],al
   11cdf:	00 08                	add    BYTE PTR [rax],cl
   11ce1:	00 00                	add    BYTE PTR [rax],al
   11ce3:	00 00                	add    BYTE PTR [rax],al
   11ce5:	00 00                	add    BYTE PTR [rax],al
   11ce7:	00 fb                	add    bl,bh
   11ce9:	ff                   	(bad)  
   11cea:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11ced:	00 00                	add    BYTE PTR [rax],al
   11cef:	00 01                	add    BYTE PTR [rcx],al
   11cf1:	00 00                	add    BYTE PTR [rax],al
   11cf3:	08 00                	or     BYTE PTR [rax],al
   11cf5:	00 00                	add    BYTE PTR [rax],al
   11cf7:	00 fe                	add    dh,bh
   11cf9:	ff                   	(bad)  
   11cfa:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11cfd:	00 00                	add    BYTE PTR [rax],al
   11cff:	00 80 0f 00 00 00    	add    BYTE PTR [rax+0xf],al
   11d05:	00 00                	add    BYTE PTR [rax],al
   11d07:	00 ff                	add    bh,bh
   11d09:	ff                   	(bad)  
   11d0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11d0d:	00 00                	add    BYTE PTR [rax],al
   11d0f:	00 03                	add    BYTE PTR [rbx],al
   11d11:	00 00                	add    BYTE PTR [rax],al
   11d13:	00 00                	add    BYTE PTR [rax],al
   11d15:	00 00                	add    BYTE PTR [rax],al
   11d17:	00 f0                	add    al,dh
   11d19:	ff                   	(bad)  
   11d1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11d1d:	00 00                	add    BYTE PTR [rax],al
   11d1f:	00 e0                	add    al,ah
   11d21:	0e                   	(bad)  
   11d22:	00 00                	add    BYTE PTR [rax],al
   11d24:	00 00                	add    BYTE PTR [rax],al
   11d26:	00 00                	add    BYTE PTR [rax],al
   11d28:	f9                   	stc    
   11d29:	ff                   	(bad)  
   11d2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   11d2d:	00 00                	add    BYTE PTR [rax],al
   11d2f:	00 08                	add    BYTE PTR [rax],cl
	...

Disassembly of section .got:

0000000000011d88 <_GLOBAL_OFFSET_TABLE_>:
   11d88:	58                   	pop    rax
   11d89:	1b 01                	sbb    eax,DWORD PTR [rcx]
	...
   11d9f:	00 30                	add    BYTE PTR [rax],dh
   11da1:	20 00                	and    BYTE PTR [rax],al
   11da3:	00 00                	add    BYTE PTR [rax],al
   11da5:	00 00                	add    BYTE PTR [rax],al
   11da7:	00 40 20             	add    BYTE PTR [rax+0x20],al
   11daa:	00 00                	add    BYTE PTR [rax],al
   11dac:	00 00                	add    BYTE PTR [rax],al
   11dae:	00 00                	add    BYTE PTR [rax],al
   11db0:	50                   	push   rax
   11db1:	20 00                	and    BYTE PTR [rax],al
   11db3:	00 00                	add    BYTE PTR [rax],al
   11db5:	00 00                	add    BYTE PTR [rax],al
   11db7:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   11dba:	00 00                	add    BYTE PTR [rax],al
   11dbc:	00 00                	add    BYTE PTR [rax],al
   11dbe:	00 00                	add    BYTE PTR [rax],al
   11dc0:	70 20                	jo     11de2 <_GLOBAL_OFFSET_TABLE_+0x5a>
   11dc2:	00 00                	add    BYTE PTR [rax],al
   11dc4:	00 00                	add    BYTE PTR [rax],al
   11dc6:	00 00                	add    BYTE PTR [rax],al
   11dc8:	80 20 00             	and    BYTE PTR [rax],0x0
   11dcb:	00 00                	add    BYTE PTR [rax],al
   11dcd:	00 00                	add    BYTE PTR [rax],al
   11dcf:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   11dd5:	00 00                	add    BYTE PTR [rax],al
   11dd7:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   11ddd:	00 00                	add    BYTE PTR [rax],al
   11ddf:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   11de5:	00 00                	add    BYTE PTR [rax],al
   11de7:	00 c0                	add    al,al
   11de9:	20 00                	and    BYTE PTR [rax],al
   11deb:	00 00                	add    BYTE PTR [rax],al
   11ded:	00 00                	add    BYTE PTR [rax],al
   11def:	00 d0                	add    al,dl
   11df1:	20 00                	and    BYTE PTR [rax],al
   11df3:	00 00                	add    BYTE PTR [rax],al
   11df5:	00 00                	add    BYTE PTR [rax],al
   11df7:	00 e0                	add    al,ah
   11df9:	20 00                	and    BYTE PTR [rax],al
   11dfb:	00 00                	add    BYTE PTR [rax],al
   11dfd:	00 00                	add    BYTE PTR [rax],al
   11dff:	00 f0                	add    al,dh
   11e01:	20 00                	and    BYTE PTR [rax],al
   11e03:	00 00                	add    BYTE PTR [rax],al
   11e05:	00 00                	add    BYTE PTR [rax],al
   11e07:	00 00                	add    BYTE PTR [rax],al
   11e09:	21 00                	and    DWORD PTR [rax],eax
   11e0b:	00 00                	add    BYTE PTR [rax],al
   11e0d:	00 00                	add    BYTE PTR [rax],al
   11e0f:	00 10                	add    BYTE PTR [rax],dl
   11e11:	21 00                	and    DWORD PTR [rax],eax
   11e13:	00 00                	add    BYTE PTR [rax],al
   11e15:	00 00                	add    BYTE PTR [rax],al
   11e17:	00 20                	add    BYTE PTR [rax],ah
   11e19:	21 00                	and    DWORD PTR [rax],eax
   11e1b:	00 00                	add    BYTE PTR [rax],al
   11e1d:	00 00                	add    BYTE PTR [rax],al
   11e1f:	00 30                	add    BYTE PTR [rax],dh
   11e21:	21 00                	and    DWORD PTR [rax],eax
   11e23:	00 00                	add    BYTE PTR [rax],al
   11e25:	00 00                	add    BYTE PTR [rax],al
   11e27:	00 40 21             	add    BYTE PTR [rax+0x21],al
   11e2a:	00 00                	add    BYTE PTR [rax],al
   11e2c:	00 00                	add    BYTE PTR [rax],al
   11e2e:	00 00                	add    BYTE PTR [rax],al
   11e30:	50                   	push   rax
   11e31:	21 00                	and    DWORD PTR [rax],eax
   11e33:	00 00                	add    BYTE PTR [rax],al
   11e35:	00 00                	add    BYTE PTR [rax],al
   11e37:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   11e3a:	00 00                	add    BYTE PTR [rax],al
   11e3c:	00 00                	add    BYTE PTR [rax],al
   11e3e:	00 00                	add    BYTE PTR [rax],al
   11e40:	70 21                	jo     11e63 <_GLOBAL_OFFSET_TABLE_+0xdb>
   11e42:	00 00                	add    BYTE PTR [rax],al
   11e44:	00 00                	add    BYTE PTR [rax],al
   11e46:	00 00                	add    BYTE PTR [rax],al
   11e48:	80 21 00             	and    BYTE PTR [rcx],0x0
   11e4b:	00 00                	add    BYTE PTR [rax],al
   11e4d:	00 00                	add    BYTE PTR [rax],al
   11e4f:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   11e55:	00 00                	add    BYTE PTR [rax],al
   11e57:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   11e5d:	00 00                	add    BYTE PTR [rax],al
   11e5f:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   11e65:	00 00                	add    BYTE PTR [rax],al
   11e67:	00 c0                	add    al,al
   11e69:	21 00                	and    DWORD PTR [rax],eax
   11e6b:	00 00                	add    BYTE PTR [rax],al
   11e6d:	00 00                	add    BYTE PTR [rax],al
   11e6f:	00 d0                	add    al,dl
   11e71:	21 00                	and    DWORD PTR [rax],eax
   11e73:	00 00                	add    BYTE PTR [rax],al
   11e75:	00 00                	add    BYTE PTR [rax],al
   11e77:	00 e0                	add    al,ah
   11e79:	21 00                	and    DWORD PTR [rax],eax
   11e7b:	00 00                	add    BYTE PTR [rax],al
   11e7d:	00 00                	add    BYTE PTR [rax],al
   11e7f:	00 f0                	add    al,dh
   11e81:	21 00                	and    DWORD PTR [rax],eax
   11e83:	00 00                	add    BYTE PTR [rax],al
   11e85:	00 00                	add    BYTE PTR [rax],al
   11e87:	00 00                	add    BYTE PTR [rax],al
   11e89:	22 00                	and    al,BYTE PTR [rax]
   11e8b:	00 00                	add    BYTE PTR [rax],al
   11e8d:	00 00                	add    BYTE PTR [rax],al
   11e8f:	00 10                	add    BYTE PTR [rax],dl
   11e91:	22 00                	and    al,BYTE PTR [rax]
   11e93:	00 00                	add    BYTE PTR [rax],al
   11e95:	00 00                	add    BYTE PTR [rax],al
   11e97:	00 20                	add    BYTE PTR [rax],ah
   11e99:	22 00                	and    al,BYTE PTR [rax]
   11e9b:	00 00                	add    BYTE PTR [rax],al
   11e9d:	00 00                	add    BYTE PTR [rax],al
   11e9f:	00 30                	add    BYTE PTR [rax],dh
   11ea1:	22 00                	and    al,BYTE PTR [rax]
   11ea3:	00 00                	add    BYTE PTR [rax],al
   11ea5:	00 00                	add    BYTE PTR [rax],al
   11ea7:	00 40 22             	add    BYTE PTR [rax+0x22],al
   11eaa:	00 00                	add    BYTE PTR [rax],al
   11eac:	00 00                	add    BYTE PTR [rax],al
   11eae:	00 00                	add    BYTE PTR [rax],al
   11eb0:	50                   	push   rax
   11eb1:	22 00                	and    al,BYTE PTR [rax]
   11eb3:	00 00                	add    BYTE PTR [rax],al
   11eb5:	00 00                	add    BYTE PTR [rax],al
   11eb7:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   11eba:	00 00                	add    BYTE PTR [rax],al
   11ebc:	00 00                	add    BYTE PTR [rax],al
   11ebe:	00 00                	add    BYTE PTR [rax],al
   11ec0:	70 22                	jo     11ee4 <_GLOBAL_OFFSET_TABLE_+0x15c>
   11ec2:	00 00                	add    BYTE PTR [rax],al
   11ec4:	00 00                	add    BYTE PTR [rax],al
   11ec6:	00 00                	add    BYTE PTR [rax],al
   11ec8:	80 22 00             	and    BYTE PTR [rdx],0x0
   11ecb:	00 00                	add    BYTE PTR [rax],al
   11ecd:	00 00                	add    BYTE PTR [rax],al
   11ecf:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   11ed5:	00 00                	add    BYTE PTR [rax],al
   11ed7:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   11edd:	00 00                	add    BYTE PTR [rax],al
   11edf:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   11ee5:	00 00                	add    BYTE PTR [rax],al
   11ee7:	00 c0                	add    al,al
   11ee9:	22 00                	and    al,BYTE PTR [rax]
   11eeb:	00 00                	add    BYTE PTR [rax],al
   11eed:	00 00                	add    BYTE PTR [rax],al
   11eef:	00 d0                	add    al,dl
   11ef1:	22 00                	and    al,BYTE PTR [rax]
   11ef3:	00 00                	add    BYTE PTR [rax],al
   11ef5:	00 00                	add    BYTE PTR [rax],al
   11ef7:	00 e0                	add    al,ah
   11ef9:	22 00                	and    al,BYTE PTR [rax]
   11efb:	00 00                	add    BYTE PTR [rax],al
   11efd:	00 00                	add    BYTE PTR [rax],al
   11eff:	00 f0                	add    al,dh
   11f01:	22 00                	and    al,BYTE PTR [rax]
   11f03:	00 00                	add    BYTE PTR [rax],al
   11f05:	00 00                	add    BYTE PTR [rax],al
   11f07:	00 00                	add    BYTE PTR [rax],al
   11f09:	23 00                	and    eax,DWORD PTR [rax]
   11f0b:	00 00                	add    BYTE PTR [rax],al
   11f0d:	00 00                	add    BYTE PTR [rax],al
   11f0f:	00 10                	add    BYTE PTR [rax],dl
   11f11:	23 00                	and    eax,DWORD PTR [rax]
   11f13:	00 00                	add    BYTE PTR [rax],al
   11f15:	00 00                	add    BYTE PTR [rax],al
   11f17:	00 20                	add    BYTE PTR [rax],ah
   11f19:	23 00                	and    eax,DWORD PTR [rax]
   11f1b:	00 00                	add    BYTE PTR [rax],al
   11f1d:	00 00                	add    BYTE PTR [rax],al
   11f1f:	00 30                	add    BYTE PTR [rax],dh
   11f21:	23 00                	and    eax,DWORD PTR [rax]
   11f23:	00 00                	add    BYTE PTR [rax],al
   11f25:	00 00                	add    BYTE PTR [rax],al
   11f27:	00 40 23             	add    BYTE PTR [rax+0x23],al
   11f2a:	00 00                	add    BYTE PTR [rax],al
   11f2c:	00 00                	add    BYTE PTR [rax],al
   11f2e:	00 00                	add    BYTE PTR [rax],al
   11f30:	50                   	push   rax
   11f31:	23 00                	and    eax,DWORD PTR [rax]
   11f33:	00 00                	add    BYTE PTR [rax],al
   11f35:	00 00                	add    BYTE PTR [rax],al
   11f37:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   11f3a:	00 00                	add    BYTE PTR [rax],al
   11f3c:	00 00                	add    BYTE PTR [rax],al
   11f3e:	00 00                	add    BYTE PTR [rax],al
   11f40:	70 23                	jo     11f65 <_GLOBAL_OFFSET_TABLE_+0x1dd>
   11f42:	00 00                	add    BYTE PTR [rax],al
   11f44:	00 00                	add    BYTE PTR [rax],al
   11f46:	00 00                	add    BYTE PTR [rax],al
   11f48:	80 23 00             	and    BYTE PTR [rbx],0x0
   11f4b:	00 00                	add    BYTE PTR [rax],al
   11f4d:	00 00                	add    BYTE PTR [rax],al
   11f4f:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   11f55:	00 00                	add    BYTE PTR [rax],al
   11f57:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   11f5d:	00 00                	add    BYTE PTR [rax],al
   11f5f:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   11f65:	00 00                	add    BYTE PTR [rax],al
   11f67:	00 c0                	add    al,al
   11f69:	23 00                	and    eax,DWORD PTR [rax]
   11f6b:	00 00                	add    BYTE PTR [rax],al
   11f6d:	00 00                	add    BYTE PTR [rax],al
   11f6f:	00 d0                	add    al,dl
   11f71:	23 00                	and    eax,DWORD PTR [rax]
   11f73:	00 00                	add    BYTE PTR [rax],al
   11f75:	00 00                	add    BYTE PTR [rax],al
   11f77:	00 e0                	add    al,ah
   11f79:	23 00                	and    eax,DWORD PTR [rax]
   11f7b:	00 00                	add    BYTE PTR [rax],al
   11f7d:	00 00                	add    BYTE PTR [rax],al
   11f7f:	00 f0                	add    al,dh
   11f81:	23 00                	and    eax,DWORD PTR [rax]
   11f83:	00 00                	add    BYTE PTR [rax],al
   11f85:	00 00                	add    BYTE PTR [rax],al
   11f87:	00 00                	add    BYTE PTR [rax],al
   11f89:	24 00                	and    al,0x0
   11f8b:	00 00                	add    BYTE PTR [rax],al
   11f8d:	00 00                	add    BYTE PTR [rax],al
   11f8f:	00 10                	add    BYTE PTR [rax],dl
   11f91:	24 00                	and    al,0x0
   11f93:	00 00                	add    BYTE PTR [rax],al
   11f95:	00 00                	add    BYTE PTR [rax],al
   11f97:	00 20                	add    BYTE PTR [rax],ah
   11f99:	24 00                	and    al,0x0
   11f9b:	00 00                	add    BYTE PTR [rax],al
   11f9d:	00 00                	add    BYTE PTR [rax],al
   11f9f:	00 30                	add    BYTE PTR [rax],dh
   11fa1:	24 00                	and    al,0x0
   11fa3:	00 00                	add    BYTE PTR [rax],al
   11fa5:	00 00                	add    BYTE PTR [rax],al
   11fa7:	00 40 24             	add    BYTE PTR [rax+0x24],al
   11faa:	00 00                	add    BYTE PTR [rax],al
   11fac:	00 00                	add    BYTE PTR [rax],al
   11fae:	00 00                	add    BYTE PTR [rax],al
   11fb0:	50                   	push   rax
   11fb1:	24 00                	and    al,0x0
   11fb3:	00 00                	add    BYTE PTR [rax],al
   11fb5:	00 00                	add    BYTE PTR [rax],al
   11fb7:	00 60 24             	add    BYTE PTR [rax+0x24],ah
   11fba:	00 00                	add    BYTE PTR [rax],al
   11fbc:	00 00                	add    BYTE PTR [rax],al
   11fbe:	00 00                	add    BYTE PTR [rax],al
   11fc0:	70 24                	jo     11fe6 <_GLOBAL_OFFSET_TABLE_+0x25e>
   11fc2:	00 00                	add    BYTE PTR [rax],al
   11fc4:	00 00                	add    BYTE PTR [rax],al
   11fc6:	00 00                	add    BYTE PTR [rax],al
   11fc8:	80 24 00 00          	and    BYTE PTR [rax+rax*1],0x0
   11fcc:	00 00                	add    BYTE PTR [rax],al
   11fce:	00 00                	add    BYTE PTR [rax],al
   11fd0:	90                   	nop
   11fd1:	24 00                	and    al,0x0
	...

Disassembly of section .data:

0000000000012000 <__data_start>:
	...

0000000000012008 <__dso_handle>:
   12008:	08 20                	or     BYTE PTR [rax],ah
   1200a:	01 00                	add    DWORD PTR [rax],eax
   1200c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012010 <blk_ipv4_len>:
   12010:	ff                   	(bad)  
   12011:	ff                   	(bad)  
   12012:	ff                   	(bad)  
   12013:	ff                   	(bad)  

0000000000012014 <num_rules>:
   12014:	ff                   	(bad)  
   12015:	ff                   	(bad)  
   12016:	ff                   	(bad)  
   12017:	ff                   	(bad)  

0000000000012018 <watchlist_num>:
   12018:	ff                   	(bad)  
   12019:	ff                   	(bad)  
   1201a:	ff                   	(bad)  
   1201b:	ff                   	(bad)  

000000000001201c <arp_entries>:
   1201c:	ff                   	(bad)  
   1201d:	ff                   	(bad)  
   1201e:	ff                   	(bad)  
   1201f:	ff                 	dec    eax

0000000000012020 <spi_max>:
   12020:	c8 00 00 00          	enter  0x0,0x0

0000000000012024 <total_conversations>:
   12024:	ff                   	(bad)  
   12025:	ff                   	(bad)  
   12026:	ff                   	(bad)  
   12027:	ff                   	(bad)  

0000000000012028 <VIGIL_MODE>:
   12028:	ff                   	(bad)  
   12029:	ff 00                	inc    DWORD PTR [rax]
   1202b:	00 00                	add    BYTE PTR [rax],al
   1202d:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012030 <default_config>:
   12030:	04 d0                	add    al,0xd0
   12032:	00 00                	add    BYTE PTR [rax],al
   12034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012038 <def_log_file>:
   12038:	1a d0                	sbb    dl,al
   1203a:	00 00                	add    BYTE PTR [rax],al
   1203c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012040 <default_host_conf>:
   12040:	34 d0                	xor    al,0xd0
   12042:	00 00                	add    BYTE PTR [rax],al
   12044:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012048 <get_cmd_help>:
   12048:	08 e6                	or     dh,ah
   1204a:	00 00                	add    BYTE PTR [rax],al
   1204c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012050 <add_cmd_help>:
   12050:	e0 e6                	loopne 12038 <def_log_file>
   12052:	00 00                	add    BYTE PTR [rax],al
   12054:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000012060 <optarg@GLIBC_2.2.5>:
	...

0000000000012068 <completed.0>:
	...

0000000000012080 <demo_mode>:
   12080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012084 <strict_icmp_timestamp_req>:
   12084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000012088 <strict_nmap_host_alive_check>:
	...

00000000000120a0 <threads>:
	...

00000000000122a0 <thread_count>:
   122a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000122a4 <total_pkt_captured>:
   122a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000122a8 <is_running>:
	...

00000000000122b0 <last_clean_time>:
	...

00000000000122b8 <clean_delay>:
	...

00000000000122c0 <pkt_counter>:
	...

00000000000122e0 <rules>:
	...

00000000000f42e0 <blocked_ipv4_addrs>:
	...

00000000000f4520 <watchlist>:
	...

0000000000108d20 <arpcache>:
	...

000000000010af00 <ip_addr>:
	...

000000000010af20 <debug_mode>:
	...

000000000010af21 <use_sqlite>:
	...

000000000010af40 <sqlite_db_path>:
	...

000000000010af60 <clean_delay_pkts>:
  10af60:	00 00                	add    BYTE PTR [rax],al
	...

000000000010af64 <packet_print>:
	...

000000000010af65 <quiet_exit>:
  10af65:	00 00                	add    BYTE PTR [rax],al
	...

000000000010af68 <vigil_location>:
	...

000000000010af80 <spi_table>:
	...

0000000000138f80 <input_adapter>:
	...

0000000000138f90 <output_adapter>:
	...

0000000000138fa0 <local_ip>:
	...

0000000000138fc0 <def_gw>:
	...

0000000000138fd2 <use_spi>:
	...

0000000000138fd4 <homenet>:
  138fd4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000138fd8 <homenetmask>:
  138fd8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000138fdc <in_test_mode>:
  138fdc:	00 00                	add    BYTE PTR [rax],al
	...

0000000000138fe0 <lua_scripts>:
	...

0000000000139800 <fn_mem_map>:
	...

000000000013c000 <fn_num>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.0+0x1>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754eb541>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer.0+0x10>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
