
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.4704+0x30d>
 360:	78 38                	js     39a <buffer.4704+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	10 00                	adc    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000390 <.note.gnu.build-id>:
 390:	04 00                	add    al,0x0
 392:	00 00                	add    BYTE PTR [rax],al
 394:	14 00                	adc    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	03 00                	add    eax,DWORD PTR [rax]
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	47                   	rex.RXB
 39d:	4e 55                	rex.WRX push rbp
 39f:	00 4d b2             	add    BYTE PTR [rbp-0x4e],cl
 3a2:	c5 ab ed             	(bad)
 3a5:	dc 44 7f a0          	fadd   QWORD PTR [rdi+rdi*2-0x60]
 3a9:	c2 56 0a             	ret    0xa56
 3ac:	e2 26                	loop   3d4 <buffer.4704+0x354>
 3ae:	60                   	(bad)  
 3af:	66 60                	data16 (bad) 
 3b1:	36 93                	ss xchg ebx,eax
 3b3:	7c                   	.byte 0x7c

Disassembly of section .note.ABI-tag:

00000000000003b4 <.note.ABI-tag>:
 3b4:	04 00                	add    al,0x0
 3b6:	00 00                	add    BYTE PTR [rax],al
 3b8:	10 00                	adc    BYTE PTR [rax],al
 3ba:	00 00                	add    BYTE PTR [rax],al
 3bc:	01 00                	add    DWORD PTR [rax],eax
 3be:	00 00                	add    BYTE PTR [rax],al
 3c0:	47                   	rex.RXB
 3c1:	4e 55                	rex.WRX push rbp
 3c3:	00 00                	add    BYTE PTR [rax],al
 3c5:	00 00                	add    BYTE PTR [rax],al
 3c7:	00 03                	add    BYTE PTR [rbx],al
 3c9:	00 00                	add    BYTE PTR [rax],al
 3cb:	00 02                	add    BYTE PTR [rdx],al
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 00                	add    BYTE PTR [rax],al
 3d1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003d8 <.gnu.hash>:
 3d8:	03 00                	add    eax,DWORD PTR [rax]
 3da:	00 00                	add    BYTE PTR [rax],al
 3dc:	48 00 00             	rex.W add BYTE PTR [rax],al
 3df:	00 01                	add    BYTE PTR [rcx],al
 3e1:	00 00                	add    BYTE PTR [rax],al
 3e3:	00 06                	add    BYTE PTR [rsi],al
 3e5:	00 00                	add    BYTE PTR [rax],al
 3e7:	00 00                	add    BYTE PTR [rax],al
 3e9:	14 81                	adc    al,0x81
 3eb:	00 00                	add    BYTE PTR [rax],al
 3ed:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 3f0:	48 00 00             	rex.W add BYTE PTR [rax],al
 3f3:	00 00                	add    BYTE PTR [rax],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
 3fa:	00 00                	add    BYTE PTR [rax],al
 3fc:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 3ff:	6d                   	ins    DWORD PTR es:[rdi],dx
 400:	b2 a2                	mov    dl,0xa2
 402:	f7 12                	not    DWORD PTR [rdx]
 404:	33                   	.byte 0x33
 405:	b3 f0                	mov    bl,0xf0
 407:	a9                   	.byte 0xa9

Disassembly of section .dynsym:

0000000000000408 <.dynsym>:
	...
 420:	d2 00                	rol    BYTE PTR [rax],cl
 422:	00 00                	add    BYTE PTR [rax],al
 424:	12 00                	adc    al,BYTE PTR [rax]
	...
 436:	00 00                	add    BYTE PTR [rax],al
 438:	d2 01                	rol    BYTE PTR [rcx],cl
 43a:	00 00                	add    BYTE PTR [rax],al
 43c:	12 00                	adc    al,BYTE PTR [rax]
	...
 44e:	00 00                	add    BYTE PTR [rax],al
 450:	97                   	xchg   edi,eax
 451:	00 00                	add    BYTE PTR [rax],al
 453:	00 12                	add    BYTE PTR [rdx],dl
	...
 465:	00 00                	add    BYTE PTR [rax],al
 467:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
 46a:	00 00                	add    BYTE PTR [rax],al
 46c:	12 00                	adc    al,BYTE PTR [rax]
	...
 47e:	00 00                	add    BYTE PTR [rax],al
 480:	b9 01 00 00 12       	mov    ecx,0x12000001
	...
 495:	00 00                	add    BYTE PTR [rax],al
 497:	00 9b 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],bl
	...
 4ad:	00 00                	add    BYTE PTR [rax],al
 4af:	00 10                	add    BYTE PTR [rax],dl
 4b1:	00 00                	add    BYTE PTR [rax],al
 4b3:	00 20                	add    BYTE PTR [rax],ah
	...
 4c5:	00 00                	add    BYTE PTR [rax],al
 4c7:	00 75 01             	add    BYTE PTR [rbp+0x1],dh
 4ca:	00 00                	add    BYTE PTR [rax],al
 4cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 4de:	00 00                	add    BYTE PTR [rax],al
 4e0:	0e                   	(bad)  
 4e1:	01 00                	add    DWORD PTR [rax],eax
 4e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4f5:	00 00                	add    BYTE PTR [rax],al
 4f7:	00 4b 01             	add    BYTE PTR [rbx+0x1],cl
 4fa:	00 00                	add    BYTE PTR [rax],al
 4fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 50e:	00 00                	add    BYTE PTR [rax],al
 510:	22 02                	and    al,BYTE PTR [rdx]
 512:	00 00                	add    BYTE PTR [rax],al
 514:	12 00                	adc    al,BYTE PTR [rax]
	...
 526:	00 00                	add    BYTE PTR [rax],al
 528:	2e 02 00             	add    al,BYTE PTR cs:[rax]
 52b:	00 12                	add    BYTE PTR [rdx],dl
	...
 53d:	00 00                	add    BYTE PTR [rax],al
 53f:	00 ab 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],ch
	...
 555:	00 00                	add    BYTE PTR [rax],al
 557:	00 d7                	add    bh,dl
 559:	00 00                	add    BYTE PTR [rax],al
 55b:	00 12                	add    BYTE PTR [rdx],dl
	...
 56d:	00 00                	add    BYTE PTR [rax],al
 56f:	00 f2                	add    dl,dh
 571:	00 00                	add    BYTE PTR [rax],al
 573:	00 12                	add    BYTE PTR [rdx],dl
	...
 585:	00 00                	add    BYTE PTR [rax],al
 587:	00 27                	add    BYTE PTR [rdi],ah
 589:	02 00                	add    al,BYTE PTR [rax]
 58b:	00 12                	add    BYTE PTR [rdx],dl
	...
 59d:	00 00                	add    BYTE PTR [rax],al
 59f:	00 ef                	add    bh,ch
 5a1:	01 00                	add    DWORD PTR [rax],eax
 5a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5b5:	00 00                	add    BYTE PTR [rax],al
 5b7:	00 63 02             	add    BYTE PTR [rbx+0x2],ah
 5ba:	00 00                	add    BYTE PTR [rax],al
 5bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ce:	00 00                	add    BYTE PTR [rax],al
 5d0:	c1 01 00             	rol    DWORD PTR [rcx],0x0
 5d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5e5:	00 00                	add    BYTE PTR [rax],al
 5e7:	00 87 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],al
	...
 5fd:	00 00                	add    BYTE PTR [rax],al
 5ff:	00 7e 00             	add    BYTE PTR [rsi+0x0],bh
 602:	00 00                	add    BYTE PTR [rax],al
 604:	12 00                	adc    al,BYTE PTR [rax]
	...
 616:	00 00                	add    BYTE PTR [rax],al
 618:	77 02                	ja     61c <buffer.4704+0x59c>
 61a:	00 00                	add    BYTE PTR [rax],al
 61c:	12 00                	adc    al,BYTE PTR [rax]
	...
 62e:	00 00                	add    BYTE PTR [rax],al
 630:	7f 02                	jg     634 <buffer.4704+0x5b4>
 632:	00 00                	add    BYTE PTR [rax],al
 634:	12 00                	adc    al,BYTE PTR [rax]
	...
 646:	00 00                	add    BYTE PTR [rax],al
 648:	e2 02                	loop   64c <buffer.4704+0x5cc>
 64a:	00 00                	add    BYTE PTR [rax],al
 64c:	12 00                	adc    al,BYTE PTR [rax]
	...
 65e:	00 00                	add    BYTE PTR [rax],al
 660:	21 02                	and    DWORD PTR [rdx],eax
 662:	00 00                	add    BYTE PTR [rax],al
 664:	12 00                	adc    al,BYTE PTR [rax]
	...
 676:	00 00                	add    BYTE PTR [rax],al
 678:	81 01 00 00 12 00    	add    DWORD PTR [rcx],0x120000
	...
 68e:	00 00                	add    BYTE PTR [rax],al
 690:	f6 01 00             	test   BYTE PTR [rcx],0x0
 693:	00 12                	add    BYTE PTR [rdx],dl
	...
 6a5:	00 00                	add    BYTE PTR [rax],al
 6a7:	00 56 02             	add    BYTE PTR [rsi+0x2],dl
 6aa:	00 00                	add    BYTE PTR [rax],al
 6ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 6be:	00 00                	add    BYTE PTR [rax],al
 6c0:	ec                   	in     al,dx
 6c1:	00 00                	add    BYTE PTR [rax],al
 6c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6d5:	00 00                	add    BYTE PTR [rax],al
 6d7:	00 47 02             	add    BYTE PTR [rdi+0x2],al
 6da:	00 00                	add    BYTE PTR [rax],al
 6dc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ee:	00 00                	add    BYTE PTR [rax],al
 6f0:	04 02                	add    al,0x2
 6f2:	00 00                	add    BYTE PTR [rax],al
 6f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 706:	00 00                	add    BYTE PTR [rax],al
 708:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 709:	00 00                	add    BYTE PTR [rax],al
 70b:	00 12                	add    BYTE PTR [rdx],dl
	...
 71d:	00 00                	add    BYTE PTR [rax],al
 71f:	00 c4                	add    ah,al
 721:	02 00                	add    al,BYTE PTR [rax]
 723:	00 12                	add    BYTE PTR [rdx],dl
	...
 735:	00 00                	add    BYTE PTR [rax],al
 737:	00 36                	add    BYTE PTR [rsi],dh
 739:	01 00                	add    DWORD PTR [rax],eax
 73b:	00 12                	add    BYTE PTR [rdx],dl
	...
 74d:	00 00                	add    BYTE PTR [rax],al
 74f:	00 bb 00 00 00 12    	add    BYTE PTR [rbx+0x12000000],bh
	...
 765:	00 00                	add    BYTE PTR [rax],al
 767:	00 bd 02 00 00 12    	add    BYTE PTR [rbp+0x12000002],bh
	...
 77d:	00 00                	add    BYTE PTR [rax],al
 77f:	00 b2 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],dh
	...
 795:	00 00                	add    BYTE PTR [rax],al
 797:	00 7e 02             	add    BYTE PTR [rsi+0x2],bh
 79a:	00 00                	add    BYTE PTR [rax],al
 79c:	12 00                	adc    al,BYTE PTR [rax]
	...
 7ae:	00 00                	add    BYTE PTR [rax],al
 7b0:	2c 00                	sub    al,0x0
 7b2:	00 00                	add    BYTE PTR [rax],al
 7b4:	20 00                	and    BYTE PTR [rax],al
	...
 7c6:	00 00                	add    BYTE PTR [rax],al
 7c8:	e8 01 00 00 12       	call   120007ce <_end+0x11ec57ae>
	...
 7dd:	00 00                	add    BYTE PTR [rax],al
 7df:	00 e4                	add    ah,ah
 7e1:	00 00                	add    BYTE PTR [rax],al
 7e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7f5:	00 00                	add    BYTE PTR [rax],al
 7f7:	00 72 02             	add    BYTE PTR [rdx+0x2],dh
 7fa:	00 00                	add    BYTE PTR [rax],al
 7fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 80e:	00 00                	add    BYTE PTR [rax],al
 810:	28 01                	sub    BYTE PTR [rcx],al
 812:	00 00                	add    BYTE PTR [rax],al
 814:	12 00                	adc    al,BYTE PTR [rax]
	...
 826:	00 00                	add    BYTE PTR [rax],al
 828:	55                   	push   rbp
 829:	00 00                	add    BYTE PTR [rax],al
 82b:	00 12                	add    BYTE PTR [rdx],dl
	...
 83d:	00 00                	add    BYTE PTR [rax],al
 83f:	00 39                	add    BYTE PTR [rcx],bh
 841:	02 00                	add    al,BYTE PTR [rax]
 843:	00 12                	add    BYTE PTR [rdx],dl
	...
 855:	00 00                	add    BYTE PTR [rax],al
 857:	00 da                	add    dl,bl
 859:	01 00                	add    DWORD PTR [rax],eax
 85b:	00 12                	add    BYTE PTR [rdx],dl
	...
 86d:	00 00                	add    BYTE PTR [rax],al
 86f:	00 40 01             	add    BYTE PTR [rax+0x1],al
 872:	00 00                	add    BYTE PTR [rax],al
 874:	12 00                	adc    al,BYTE PTR [rax]
	...
 886:	00 00                	add    BYTE PTR [rax],al
 888:	a3 01 00 00 12 00 00 	movabs ds:0x12000001,eax
 88f:	00 00 
	...
 89d:	00 00                	add    BYTE PTR [rax],al
 89f:	00 dc                	add    ah,bl
 8a1:	02 00                	add    al,BYTE PTR [rax]
 8a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8b5:	00 00                	add    BYTE PTR [rax],al
 8b7:	00 19                	add    BYTE PTR [rcx],bl
 8b9:	01 00                	add    DWORD PTR [rax],eax
 8bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 8cd:	00 00                	add    BYTE PTR [rax],al
 8cf:	00 0c 02             	add    BYTE PTR [rdx+rax*1],cl
 8d2:	00 00                	add    BYTE PTR [rax],al
 8d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 8e6:	00 00                	add    BYTE PTR [rax],al
 8e8:	95                   	xchg   ebp,eax
 8e9:	01 00                	add    DWORD PTR [rax],eax
 8eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 8fd:	00 00                	add    BYTE PTR [rax],al
 8ff:	00 ab 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],ch
	...
 915:	00 00                	add    BYTE PTR [rax],al
 917:	00 e1                	add    cl,ah
 919:	01 00                	add    DWORD PTR [rax],eax
 91b:	00 12                	add    BYTE PTR [rdx],dl
	...
 92d:	00 00                	add    BYTE PTR [rax],al
 92f:	00 8a 00 00 00 12    	add    BYTE PTR [rdx+0x12000000],cl
	...
 945:	00 00                	add    BYTE PTR [rax],al
 947:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
 94a:	00 00                	add    BYTE PTR [rax],al
 94c:	12 00                	adc    al,BYTE PTR [rax]
	...
 95e:	00 00                	add    BYTE PTR [rax],al
 960:	1a 02                	sbb    al,BYTE PTR [rdx]
 962:	00 00                	add    BYTE PTR [rax],al
 964:	12 00                	adc    al,BYTE PTR [rax]
	...
 976:	00 00                	add    BYTE PTR [rax],al
 978:	83 00 00             	add    DWORD PTR [rax],0x0
 97b:	00 12                	add    BYTE PTR [rdx],dl
	...
 98d:	00 00                	add    BYTE PTR [rax],al
 98f:	00 5e 02             	add    BYTE PTR [rsi+0x2],bl
 992:	00 00                	add    BYTE PTR [rax],al
 994:	12 00                	adc    al,BYTE PTR [rax]
	...
 9a6:	00 00                	add    BYTE PTR [rax],al
 9a8:	86 02                	xchg   BYTE PTR [rdx],al
 9aa:	00 00                	add    BYTE PTR [rax],al
 9ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 9be:	00 00                	add    BYTE PTR [rax],al
 9c0:	40 02 00             	add    al,BYTE PTR [rax]
 9c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9d5:	00 00                	add    BYTE PTR [rax],al
 9d7:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 9da:	00 00                	add    BYTE PTR [rax],al
 9dc:	12 00                	adc    al,BYTE PTR [rax]
	...
 9ee:	00 00                	add    BYTE PTR [rax],al
 9f0:	ca 00 00             	retf   0x0
 9f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 a05:	00 00                	add    BYTE PTR [rax],al
 a07:	00 8d 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],cl
	...
 a1d:	00 00                	add    BYTE PTR [rax],al
 a1f:	00 7c 01 00          	add    BYTE PTR [rcx+rax*1+0x0],bh
 a23:	00 12                	add    BYTE PTR [rdx],dl
	...
 a35:	00 00                	add    BYTE PTR [rax],al
 a37:	00 3b                	add    BYTE PTR [rbx],bh
 a39:	00 00                	add    BYTE PTR [rax],al
 a3b:	00 20                	add    BYTE PTR [rax],ah
	...
 a4d:	00 00                	add    BYTE PTR [rax],al
 a4f:	00 d6                	add    dh,dl
 a51:	02 00                	add    al,BYTE PTR [rax]
 a53:	00 12                	add    BYTE PTR [rdx],dl
	...
 a65:	00 00                	add    BYTE PTR [rax],al
 a67:	00 8e 02 00 00 12    	add    BYTE PTR [rsi+0x12000002],cl
	...
 a7d:	00 00                	add    BYTE PTR [rax],al
 a7f:	00 11                	add    BYTE PTR [rcx],dl
 a81:	02 00                	add    al,BYTE PTR [rax]
 a83:	00 12                	add    BYTE PTR [rdx],dl
	...
 a95:	00 00                	add    BYTE PTR [rax],al
 a97:	00 fd                	add    ch,bh
 a99:	01 00                	add    DWORD PTR [rax],eax
 a9b:	00 12                	add    BYTE PTR [rdx],dl
	...
 aad:	00 00                	add    BYTE PTR [rax],al
 aaf:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
 ab2:	00 00                	add    BYTE PTR [rax],al
 ab4:	12 00                	adc    al,BYTE PTR [rax]
	...
 ac6:	00 00                	add    BYTE PTR [rax],al
 ac8:	94                   	xchg   esp,eax
 ac9:	02 00                	add    al,BYTE PTR [rax]
 acb:	00 22                	add    BYTE PTR [rdx],ah
	...
 add:	00 00                	add    BYTE PTR [rax],al
 adf:	00 4f 02             	add    BYTE PTR [rdi+0x2],cl
 ae2:	00 00                	add    BYTE PTR [rax],al
 ae4:	11 00                	adc    DWORD PTR [rax],eax
 ae6:	1b 00                	sbb    eax,DWORD PTR [rax]
 ae8:	60                   	(bad)  
 ae9:	10 01                	adc    BYTE PTR [rcx],al
 aeb:	00 00                	add    BYTE PTR [rax],al
 aed:	00 00                	add    BYTE PTR [rax],al
 aef:	00 08                	add    BYTE PTR [rax],cl
 af1:	00 00                	add    BYTE PTR [rax],al
 af3:	00 00                	add    BYTE PTR [rax],al
 af5:	00 00                	add    BYTE PTR [rax],al
 af7:	00 a3 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],ah
 afd:	00 10                	add    BYTE PTR [rax],dl
 aff:	00 1c 96             	add    BYTE PTR [rsi+rdx*4],bl
 b02:	00 00                	add    BYTE PTR [rax],al
 b04:	00 00                	add    BYTE PTR [rax],al
 b06:	00 00                	add    BYTE PTR [rax],al
 b08:	3b 01                	cmp    eax,DWORD PTR [rcx]
 b0a:	00 00                	add    BYTE PTR [rax],al
 b0c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b10 <.dynstr>:
 b10:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 b14:	70 63                	jo     b79 <buffer.4704+0xaf9>
 b16:	61                   	(bad)  
 b17:	70 2e                	jo     b47 <buffer.4704+0xac7>
 b19:	73 6f                	jae    b8a <buffer.4704+0xb0a>
 b1b:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
 b1e:	38 00                	cmp    BYTE PTR [rax],al
 b20:	5f                   	pop    rdi
 b21:	49 54                	rex.WB push r12
 b23:	4d 5f                	rex.WRB pop r15
 b25:	64 65 72 65          	fs gs jb b8e <buffer.4704+0xb0e>
 b29:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b30:	4d 
 b31:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b34:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b35:	65 54                	gs push rsp
 b37:	61                   	(bad)  
 b38:	62                   	(bad)  
 b39:	6c                   	ins    BYTE PTR es:[rdi],dx
 b3a:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b3e:	67 6d                	ins    DWORD PTR es:[edi],dx
 b40:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b41:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b42:	5f                   	pop    rdi
 b43:	73 74                	jae    bb9 <buffer.4704+0xb39>
 b45:	61                   	(bad)  
 b46:	72 74                	jb     bbc <buffer.4704+0xb3c>
 b48:	5f                   	pop    rdi
 b49:	5f                   	pop    rdi
 b4a:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b4d:	54                   	push   rsp
 b4e:	4d 5f                	rex.WRB pop r15
 b50:	72 65                	jb     bb7 <buffer.4704+0xb37>
 b52:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b59:	4d 
 b5a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b5c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b5d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b5e:	65 54                	gs push rsp
 b60:	61                   	(bad)  
 b61:	62                   	(bad)  
 b62:	6c                   	ins    BYTE PTR es:[rdi],dx
 b63:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 b67:	61                   	(bad)  
 b68:	70 5f                	jo     bc9 <buffer.4704+0xb49>
 b6a:	6c                   	ins    BYTE PTR es:[rdi],dx
 b6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b6d:	70 00                	jo     b6f <buffer.4704+0xaef>
 b6f:	70 63                	jo     bd4 <buffer.4704+0xb54>
 b71:	61                   	(bad)  
 b72:	70 5f                	jo     bd3 <buffer.4704+0xb53>
 b74:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b75:	70 65                	jo     bdc <buffer.4704+0xb5c>
 b77:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b78:	5f                   	pop    rdi
 b79:	6c                   	ins    BYTE PTR es:[rdi],dx
 b7a:	69 76 65 00 6c 69 62 	imul   esi,DWORD PTR [rsi+0x65],0x62696c00
 b81:	70 74                	jo     bf7 <buffer.4704+0xb77>
 b83:	68 72 65 61 64       	push   0x64616572
 b88:	2e 73 6f             	cs jae bfa <buffer.4704+0xb7a>
 b8b:	2e 30 00             	xor    BYTE PTR cs:[rax],al
 b8e:	73 65                	jae    bf5 <buffer.4704+0xb75>
 b90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b91:	64 00 61 63          	add    BYTE PTR fs:[rcx+0x63],ah
 b95:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
 b98:	74 00                	je     b9a <buffer.4704+0xb1a>
 b9a:	70 74                	jo     c10 <buffer.4704+0xb90>
 b9c:	68 72 65 61 64       	push   0x64616572
 ba1:	5f                   	pop    rdi
 ba2:	6a 6f                	push   0x6f
 ba4:	69 6e 00 70 74 68 72 	imul   ebp,DWORD PTR [rsi+0x0],0x72687470
 bab:	65 61                	gs (bad) 
 bad:	64 5f                	fs pop rdi
 baf:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 bb2:	61                   	(bad)  
 bb3:	74 65                	je     c1a <buffer.4704+0xb9a>
 bb5:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 bb8:	61                   	(bad)  
 bb9:	64 00 6c 69 62       	add    BYTE PTR fs:[rcx+rbp*2+0x62],ch
 bbe:	73 71                	jae    c31 <buffer.4704+0xbb1>
 bc0:	6c                   	ins    BYTE PTR es:[rdi],dx
 bc1:	69 74 65 33 2e 73 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x2e6f732e
 bc8:	2e 
 bc9:	30 00                	xor    BYTE PTR [rax],al
 bcb:	73 71                	jae    c3e <buffer.4704+0xbbe>
 bcd:	6c                   	ins    BYTE PTR es:[rdi],dx
 bce:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 bd5:	72 
 bd6:	6d                   	ins    DWORD PTR es:[rdi],dx
 bd7:	73 67                	jae    c40 <buffer.4704+0xbc0>
 bd9:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 bdc:	6c                   	ins    BYTE PTR es:[rdi],dx
 bdd:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 be4:	65 
 be5:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 be9:	6c                   	ins    BYTE PTR es:[rdi],dx
 bea:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 bf1:	65 
 bf2:	63 00                	movsxd eax,DWORD PTR [rax]
 bf4:	73 71                	jae    c67 <buffer.4704+0xbe7>
 bf6:	6c                   	ins    BYTE PTR es:[rdi],dx
 bf7:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 bfe:	6f 
 bff:	73 65                	jae    c66 <buffer.4704+0xbe6>
 c01:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c04:	6c                   	ins    BYTE PTR es:[rdi],dx
 c05:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 c0c:	65 
 c0d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c0e:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 c12:	6c                   	ins    BYTE PTR es:[rdi],dx
 c13:	75 61                	jne    c76 <buffer.4704+0xbf6>
 c15:	35 2e 33 2e 73       	xor    eax,0x732e332e
 c1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c1b:	2e 30 00             	xor    BYTE PTR cs:[rax],al
 c1e:	6c                   	ins    BYTE PTR es:[rdi],dx
 c1f:	75 61                	jne    c82 <buffer.4704+0xc02>
 c21:	5f                   	pop    rdi
 c22:	73 65                	jae    c89 <buffer.4704+0xc09>
 c24:	74 74                	je     c9a <buffer.4704+0xc1a>
 c26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c27:	70 00                	jo     c29 <buffer.4704+0xba9>
 c29:	6c                   	ins    BYTE PTR es:[rdi],dx
 c2a:	75 61                	jne    c8d <buffer.4704+0xc0d>
 c2c:	4c 5f                	rex.WR pop rdi
 c2e:	6c                   	ins    BYTE PTR es:[rdi],dx
 c2f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c30:	61                   	(bad)  
 c31:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 c38:	6c 
 c39:	75 61                	jne    c9c <buffer.4704+0xc1c>
 c3b:	4c 5f                	rex.WR pop rdi
 c3d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c3e:	65 77 73             	gs ja  cb4 <buffer.4704+0xc34>
 c41:	74 61                	je     ca4 <buffer.4704+0xc24>
 c43:	74 65                	je     caa <buffer.4704+0xc2a>
 c45:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c49:	5f                   	pop    rdi
 c4a:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 c4e:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 c53:	5f                   	pop    rdi
 c54:	70 63                	jo     cb9 <buffer.4704+0xc39>
 c56:	61                   	(bad)  
 c57:	6c                   	ins    BYTE PTR es:[rdi],dx
 c58:	6c                   	ins    BYTE PTR es:[rdi],dx
 c59:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 c5c:	75 61                	jne    cbf <buffer.4704+0xc3f>
 c5e:	5f                   	pop    rdi
 c5f:	67 65 74 74          	addr32 gs je cd7 <buffer.4704+0xc57>
 c63:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c64:	70 00                	jo     c66 <buffer.4704+0xbe6>
 c66:	6c                   	ins    BYTE PTR es:[rdi],dx
 c67:	75 61                	jne    cca <buffer.4704+0xc4a>
 c69:	4c 5f                	rex.WR pop rdi
 c6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c6c:	70 65                	jo     cd3 <buffer.4704+0xc53>
 c6e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c6f:	6c                   	ins    BYTE PTR es:[rdi],dx
 c70:	69 62 73 00 6c 69 62 	imul   esp,DWORD PTR [rdx+0x73],0x62696c00
 c77:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 c79:	73 6f                	jae    cea <buffer.4704+0xc6a>
 c7b:	2e 36 00 73 6f       	cs add BYTE PTR ss:[rbx+0x6f],dh
 c80:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 c83:	74 00                	je     c85 <buffer.4704+0xc05>
 c85:	73 74                	jae    cfb <buffer.4704+0xc7b>
 c87:	72 63                	jb     cec <buffer.4704+0xc6c>
 c89:	70 79                	jo     d04 <buffer.4704+0xc84>
 c8b:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
 c8e:	69 74 00 68 74 6f 6e 	imul   esi,DWORD PTR [rax+rax*1+0x68],0x6c6e6f74
 c95:	6c 
 c96:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 c99:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c9b:	73 00                	jae    c9d <buffer.4704+0xc1d>
 c9d:	73 70                	jae    d0f <buffer.4704+0xc8f>
 c9f:	72 69                	jb     d0a <buffer.4704+0xc8a>
 ca1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 ca2:	74 66                	je     d0a <buffer.4704+0xc8a>
 ca4:	00 66 6f             	add    BYTE PTR [rsi+0x6f],ah
 ca7:	70 65                	jo     d0e <buffer.4704+0xc8e>
 ca9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 caa:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cad:	72 6e                	jb     d1d <buffer.4704+0xc9d>
 caf:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 cb2:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 cb5:	67 65 78 65          	addr32 gs js d1e <buffer.4704+0xc9e>
 cb9:	63 00                	movsxd eax,DWORD PTR [rax]
 cbb:	70 65                	jo     d22 <buffer.4704+0xca2>
 cbd:	72 72                	jb     d31 <buffer.4704+0xcb1>
 cbf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cc0:	72 00                	jb     cc2 <buffer.4704+0xc42>
 cc2:	73 69                	jae    d2d <buffer.4704+0xcad>
 cc4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 cc6:	61                   	(bad)  
 cc7:	6c                   	ins    BYTE PTR es:[rdi],dx
 cc8:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 ccb:	72 6e                	jb     d3b <buffer.4704+0xcbb>
 ccd:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 cd0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 cd3:	73 74                	jae    d49 <buffer.4704+0xcc9>
 cd5:	61                   	(bad)  
 cd6:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 cd9:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 cdc:	5f                   	pop    rdi
 cdd:	66 61                	data16 (bad) 
 cdf:	69 6c 00 70 75 74 63 	imul   ebp,DWORD PTR [rax+rax*1+0x70],0x68637475
 ce6:	68 
 ce7:	61                   	(bad)  
 ce8:	72 00                	jb     cea <buffer.4704+0xc6a>
 cea:	6c                   	ins    BYTE PTR es:[rdi],dx
 ceb:	69 73 74 65 6e 00 73 	imul   esi,DWORD PTR [rbx+0x74],0x73006e65
 cf2:	74 72                	je     d66 <buffer.4704+0xce6>
 cf4:	74 6f                	je     d65 <buffer.4704+0xce5>
 cf6:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 cf9:	74 72                	je     d6d <buffer.4704+0xced>
 cfb:	74 6f                	je     d6c <buffer.4704+0xcec>
 cfd:	6c                   	ins    BYTE PTR es:[rdi],dx
 cfe:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d01:	72 6c                	jb     d6f <buffer.4704+0xcef>
 d03:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 d05:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 d08:	6d                   	ins    DWORD PTR es:[rdi],dx
 d09:	73 65                	jae    d70 <buffer.4704+0xcf0>
 d0b:	74 00                	je     d0d <buffer.4704+0xc8d>
 d0d:	73 74                	jae    d83 <buffer.4704+0xd03>
 d0f:	72 73                	jb     d84 <buffer.4704+0xd04>
 d11:	74 72                	je     d85 <buffer.4704+0xd05>
 d13:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d16:	72 63                	jb     d7b <buffer.4704+0xcfb>
 d18:	73 70                	jae    d8a <buffer.4704+0xd0a>
 d1a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d1b:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 d1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d1f:	64 00 67 65          	add    BYTE PTR fs:[rdi+0x65],ah
 d23:	74 64                	je     d89 <buffer.4704+0xd09>
 d25:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 d27:	69 6d 00 67 65 74 6f 	imul   ebp,DWORD PTR [rbp+0x0],0x6f746567
 d2e:	70 74                	jo     da4 <buffer.4704+0xd24>
 d30:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
 d33:	75 74                	jne    da9 <buffer.4704+0xd29>
 d35:	73 00                	jae    d37 <buffer.4704+0xcb7>
 d37:	66 63 6c 6f 73       	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
 d3c:	65 00 73 65          	add    BYTE PTR gs:[rbx+0x65],dh
 d40:	74 73                	je     db5 <buffer.4704+0xd35>
 d42:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d43:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 d46:	70 74                	jo     dbc <buffer.4704+0xd3c>
 d48:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
 d4b:	6c                   	ins    BYTE PTR es:[rdi],dx
 d4c:	6c                   	ins    BYTE PTR es:[rdi],dx
 d4d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d4e:	63 00                	movsxd eax,DWORD PTR [rax]
 d50:	73 74                	jae    dc6 <buffer.4704+0xd46>
 d52:	72 63                	jb     db7 <buffer.4704+0xd37>
 d54:	61                   	(bad)  
 d55:	74 00                	je     d57 <buffer.4704+0xcd7>
 d57:	72 65                	jb     dbe <buffer.4704+0xd3e>
 d59:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 d5d:	70 00                	jo     d5f <buffer.4704+0xcdf>
 d5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d60:	70 74                	jo     dd6 <buffer.4704+0xd56>
 d62:	61                   	(bad)  
 d63:	72 67                	jb     dcc <buffer.4704+0xd4c>
 d65:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d68:	72 6e                	jb     dd8 <buffer.4704+0xd58>
 d6a:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 d6d:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 d70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d71:	69 00 62 61 63 6b    	imul   eax,DWORD PTR [rax],0x6b636162
 d77:	74 72                	je     deb <buffer.4704+0xd6b>
 d79:	61                   	(bad)  
 d7a:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 d7d:	6c                   	ins    BYTE PTR es:[rdi],dx
 d7e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d7f:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 d82:	74 69                	je     ded <buffer.4704+0xd6d>
 d84:	6d                   	ins    DWORD PTR es:[rdi],dx
 d85:	65 00 73 74          	add    BYTE PTR gs:[rbx+0x74],dh
 d89:	72 63                	jb     dee <buffer.4704+0xd6e>
 d8b:	68 72 00 66 70       	push   0x70660072
 d90:	72 69                	jb     dfb <buffer.4704+0xd7b>
 d92:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d93:	74 66                	je     dfb <buffer.4704+0xd7b>
 d95:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 d98:	74 6c                	je     e06 <buffer.4704+0xd86>
 d9a:	69 6e 65 00 73 6c 65 	imul   ebp,DWORD PTR [rsi+0x65],0x656c7300
 da1:	65 70 00             	gs jo  da4 <buffer.4704+0xd24>
 da4:	5f                   	pop    rdi
 da5:	5f                   	pop    rdi
 da6:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 da9:	5f                   	pop    rdi
 daa:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 db0:	7a 65                	jp     e17 <buffer.4704+0xd97>
 db2:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 db5:	64 69 67 69 74 00 62 	imul   esp,DWORD PTR fs:[rdi+0x69],0x61620074
 dbc:	61 
 dbd:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 dc0:	72 61                	jb     e23 <buffer.4704+0xda3>
 dc2:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 dc5:	73 79                	jae    e40 <buffer.4704+0xdc0>
 dc7:	6d                   	ins    DWORD PTR es:[rdi],dx
 dc8:	62                   	(bad)  
 dc9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 dca:	6c                   	ins    BYTE PTR es:[rdi],dx
 dcb:	73 00                	jae    dcd <buffer.4704+0xd4d>
 dcd:	73 74                	jae    e43 <buffer.4704+0xdc3>
 dcf:	72 63                	jb     e34 <buffer.4704+0xdb4>
 dd1:	6d                   	ins    DWORD PTR es:[rdi],dx
 dd2:	70 00                	jo     dd4 <buffer.4704+0xd54>
 dd4:	5f                   	pop    rdi
 dd5:	5f                   	pop    rdi
 dd6:	6c                   	ins    BYTE PTR es:[rdi],dx
 dd7:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 dde:	72 74                	jb     e54 <buffer.4704+0xdd4>
 de0:	5f                   	pop    rdi
 de1:	6d                   	ins    DWORD PTR es:[rdi],dx
 de2:	61                   	(bad)  
 de3:	69 6e 00 6e 74 6f 68 	imul   ebp,DWORD PTR [rsi+0x0],0x686f746e
 dea:	6c                   	ins    BYTE PTR es:[rdi],dx
 deb:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 dee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 def:	68 73 00 73 6e       	push   0x6e730073
 df4:	70 72                	jo     e68 <buffer.4704+0xde8>
 df6:	69 6e 74 66 00 4c 55 	imul   ebp,DWORD PTR [rsi+0x74],0x554c0066
 dfd:	41 5f                	pop    r15
 dff:	35 2e 33 00 47       	xor    eax,0x4700332e
 e04:	4c                   	rex.WR
 e05:	49                   	rex.WB
 e06:	42                   	rex.X
 e07:	43 5f                	rex.XB pop r15
 e09:	32 2e                	xor    ch,BYTE PTR [rsi]
 e0b:	32 2e                	xor    ch,BYTE PTR [rsi]
 e0d:	35 00 47 4c 49       	xor    eax,0x494c4700
 e12:	42                   	rex.X
 e13:	43 5f                	rex.XB pop r15
 e15:	32 2e                	xor    ch,BYTE PTR [rsi]
 e17:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e19:	34 00                	xor    al,0x0
 e1b:	47                   	rex.RXB
 e1c:	4c                   	rex.WR
 e1d:	49                   	rex.WB
 e1e:	42                   	rex.X
 e1f:	43 5f                	rex.XB pop r15
 e21:	32 2e                	xor    ch,BYTE PTR [rsi]
 e23:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

0000000000000e26 <.gnu.version>:
 e26:	00 00                	add    BYTE PTR [rax],al
 e28:	02 00                	add    al,BYTE PTR [rax]
 e2a:	02 00                	add    al,BYTE PTR [rax]
 e2c:	03 00                	add    eax,DWORD PTR [rax]
 e2e:	02 00                	add    al,BYTE PTR [rax]
 e30:	02 00                	add    al,BYTE PTR [rax]
 e32:	02 00                	add    al,BYTE PTR [rax]
 e34:	00 00                	add    BYTE PTR [rax],al
 e36:	02 00                	add    al,BYTE PTR [rax]
 e38:	04 00                	add    al,0x0
 e3a:	04 00                	add    al,0x0
 e3c:	02 00                	add    al,BYTE PTR [rax]
 e3e:	02 00                	add    al,BYTE PTR [rax]
 e40:	02 00                	add    al,BYTE PTR [rax]
 e42:	00 00                	add    BYTE PTR [rax],al
 e44:	00 00                	add    BYTE PTR [rax],al
 e46:	02 00                	add    al,BYTE PTR [rax]
 e48:	02 00                	add    al,BYTE PTR [rax]
 e4a:	02 00                	add    al,BYTE PTR [rax]
 e4c:	05 00 02 00 03       	add    eax,0x3000200
 e51:	00 02                	add    BYTE PTR [rdx],al
 e53:	00 02                	add    BYTE PTR [rdx],al
 e55:	00 02                	add    BYTE PTR [rdx],al
 e57:	00 02                	add    BYTE PTR [rdx],al
 e59:	00 02                	add    BYTE PTR [rdx],al
 e5b:	00 02                	add    BYTE PTR [rdx],al
 e5d:	00 02                	add    BYTE PTR [rdx],al
 e5f:	00 03                	add    BYTE PTR [rbx],al
 e61:	00 02                	add    BYTE PTR [rdx],al
 e63:	00 02                	add    BYTE PTR [rdx],al
 e65:	00 03                	add    BYTE PTR [rbx],al
 e67:	00 02                	add    BYTE PTR [rdx],al
 e69:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 e6c:	00 00                	add    BYTE PTR [rax],al
 e6e:	02 00                	add    al,BYTE PTR [rax]
 e70:	02 00                	add    al,BYTE PTR [rax]
 e72:	02 00                	add    al,BYTE PTR [rax]
 e74:	00 00                	add    BYTE PTR [rax],al
 e76:	02 00                	add    al,BYTE PTR [rax]
 e78:	00 00                	add    BYTE PTR [rax],al
 e7a:	02 00                	add    al,BYTE PTR [rax]
 e7c:	04 00                	add    al,0x0
 e7e:	00 00                	add    BYTE PTR [rax],al
 e80:	02 00                	add    al,BYTE PTR [rax]
 e82:	02 00                	add    al,BYTE PTR [rax]
 e84:	04 00                	add    al,0x0
 e86:	06                   	(bad)  
 e87:	00 02                	add    BYTE PTR [rdx],al
 e89:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 e8c:	02 00                	add    al,BYTE PTR [rax]
 e8e:	02 00                	add    al,BYTE PTR [rax]
 e90:	02 00                	add    al,BYTE PTR [rax]
 e92:	02 00                	add    al,BYTE PTR [rax]
 e94:	03 00                	add    eax,DWORD PTR [rax]
 e96:	04 00                	add    al,0x0
 e98:	02 00                	add    al,BYTE PTR [rax]
 e9a:	03 00                	add    eax,DWORD PTR [rax]
 e9c:	02 00                	add    al,BYTE PTR [rax]
 e9e:	02 00                	add    al,BYTE PTR [rax]
 ea0:	02 00                	add    al,BYTE PTR [rax]
 ea2:	00 00                	add    BYTE PTR [rax],al
 ea4:	00 00                	add    BYTE PTR [rax],al
 ea6:	02 00                	add    al,BYTE PTR [rax]
 ea8:	02 00                	add    al,BYTE PTR [rax]
 eaa:	00 00                	add    BYTE PTR [rax],al
 eac:	02 00                	add    al,BYTE PTR [rax]
 eae:	02 00                	add    al,BYTE PTR [rax]
 eb0:	02 00                	add    al,BYTE PTR [rax]
 eb2:	02 00                	add    al,BYTE PTR [rax]
 eb4:	02 00                	add    al,BYTE PTR [rax]
 eb6:	02 00                	add    al,BYTE PTR [rax]
 eb8:	02 00                	add    al,BYTE PTR [rax]
 eba:	01 00                	add    DWORD PTR [rax],eax

Disassembly of section .gnu.version_r:

0000000000000ec0 <.gnu.version_r>:
 ec0:	01 00                	add    DWORD PTR [rax],eax
 ec2:	01 00                	add    DWORD PTR [rax],eax
 ec4:	ff 00                	inc    DWORD PTR [rax]
 ec6:	00 00                	add    BYTE PTR [rax],al
 ec8:	10 00                	adc    BYTE PTR [rax],al
 eca:	00 00                	add    BYTE PTR [rax],al
 ecc:	20 00                	and    BYTE PTR [rax],al
 ece:	00 00                	add    BYTE PTR [rax],al
 ed0:	43 28 97 01 00 00 04 	rex.XB sub BYTE PTR [r15+0x4000001],dl
 ed7:	00 eb                	add    bl,ch
 ed9:	02 00                	add    al,BYTE PTR [rax]
 edb:	00 00                	add    BYTE PTR [rax],al
 edd:	00 00                	add    BYTE PTR [rax],al
 edf:	00 01                	add    BYTE PTR [rcx],al
 ee1:	00 01                	add    BYTE PTR [rcx],al
 ee3:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 ee6:	00 00                	add    BYTE PTR [rax],al
 ee8:	10 00                	adc    BYTE PTR [rax],al
 eea:	00 00                	add    BYTE PTR [rax],al
 eec:	20 00                	and    BYTE PTR [rax],al
 eee:	00 00                	add    BYTE PTR [rax],al
 ef0:	75 1a                	jne    f0c <buffer.4704+0xe8c>
 ef2:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 ef8:	f3 02 00             	repz add al,BYTE PTR [rax]
 efb:	00 00                	add    BYTE PTR [rax],al
 efd:	00 00                	add    BYTE PTR [rax],al
 eff:	00 01                	add    BYTE PTR [rcx],al
 f01:	00 03                	add    BYTE PTR [rbx],al
 f03:	00 64 01 00          	add    BYTE PTR [rcx+rax*1+0x0],ah
 f07:	00 10                	add    BYTE PTR [rax],dl
 f09:	00 00                	add    BYTE PTR [rax],al
 f0b:	00 00                	add    BYTE PTR [rax],al
 f0d:	00 00                	add    BYTE PTR [rax],al
 f0f:	00 74 19 69          	add    BYTE PTR [rcx+rbx*1+0x69],dh
 f13:	09 00                	or     DWORD PTR [rax],eax
 f15:	00 06                	add    BYTE PTR [rsi],al
 f17:	00 ff                	add    bh,bh
 f19:	02 00                	add    al,BYTE PTR [rax]
 f1b:	00 10                	add    BYTE PTR [rax],dl
 f1d:	00 00                	add    BYTE PTR [rax],al
 f1f:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 f22:	69 0d 00 00 05 00 0b 	imul   ecx,DWORD PTR [rip+0x50000],0x30b        # 50f2c <rules+0x3fe8c>
 f29:	03 00 00 
 f2c:	10 00                	adc    BYTE PTR [rax],al
 f2e:	00 00                	add    BYTE PTR [rax],al
 f30:	75 1a                	jne    f4c <buffer.4704+0xecc>
 f32:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 f38:	f3 02 00             	repz add al,BYTE PTR [rax]
 f3b:	00 00                	add    BYTE PTR [rax],al
 f3d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000f40 <.rela.dyn>:
     f40:	68 0b 01 00 00       	push   0x10b
     f45:	00 00                	add    BYTE PTR [rax],al
     f47:	00 08                	add    BYTE PTR [rax],cl
     f49:	00 00                	add    BYTE PTR [rax],al
     f4b:	00 00                	add    BYTE PTR [rax],al
     f4d:	00 00                	add    BYTE PTR [rax],al
     f4f:	00 80 29 00 00 00    	add    BYTE PTR [rax+0x29],al
     f55:	00 00                	add    BYTE PTR [rax],al
     f57:	00 70 0b             	add    BYTE PTR [rax+0xb],dh
     f5a:	01 00                	add    DWORD PTR [rax],eax
     f5c:	00 00                	add    BYTE PTR [rax],al
     f5e:	00 00                	add    BYTE PTR [rax],al
     f60:	08 00                	or     BYTE PTR [rax],al
     f62:	00 00                	add    BYTE PTR [rax],al
     f64:	00 00                	add    BYTE PTR [rax],al
     f66:	00 00                	add    BYTE PTR [rax],al
     f68:	40 29 00             	rex sub DWORD PTR [rax],eax
     f6b:	00 00                	add    BYTE PTR [rax],al
     f6d:	00 00                	add    BYTE PTR [rax],al
     f6f:	00 08                	add    BYTE PTR [rax],cl
     f71:	10 01                	adc    BYTE PTR [rcx],al
     f73:	00 00                	add    BYTE PTR [rax],al
     f75:	00 00                	add    BYTE PTR [rax],al
     f77:	00 08                	add    BYTE PTR [rax],cl
     f79:	00 00                	add    BYTE PTR [rax],al
     f7b:	00 00                	add    BYTE PTR [rax],al
     f7d:	00 00                	add    BYTE PTR [rax],al
     f7f:	00 08                	add    BYTE PTR [rax],cl
     f81:	10 01                	adc    BYTE PTR [rcx],al
     f83:	00 00                	add    BYTE PTR [rax],al
     f85:	00 00                	add    BYTE PTR [rax],al
     f87:	00 28                	add    BYTE PTR [rax],ch
     f89:	10 01                	adc    BYTE PTR [rcx],al
     f8b:	00 00                	add    BYTE PTR [rax],al
     f8d:	00 00                	add    BYTE PTR [rax],al
     f8f:	00 08                	add    BYTE PTR [rax],cl
     f91:	00 00                	add    BYTE PTR [rax],al
     f93:	00 00                	add    BYTE PTR [rax],al
     f95:	00 00                	add    BYTE PTR [rax],al
     f97:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
     f9a:	00 00                	add    BYTE PTR [rax],al
     f9c:	00 00                	add    BYTE PTR [rax],al
     f9e:	00 00                	add    BYTE PTR [rax],al
     fa0:	30 10                	xor    BYTE PTR [rax],dl
     fa2:	01 00                	add    DWORD PTR [rax],eax
     fa4:	00 00                	add    BYTE PTR [rax],al
     fa6:	00 00                	add    BYTE PTR [rax],al
     fa8:	08 00                	or     BYTE PTR [rax],al
     faa:	00 00                	add    BYTE PTR [rax],al
     fac:	00 00                	add    BYTE PTR [rax],al
     fae:	00 00                	add    BYTE PTR [rax],al
     fb0:	1a c0                	sbb    al,al
     fb2:	00 00                	add    BYTE PTR [rax],al
     fb4:	00 00                	add    BYTE PTR [rax],al
     fb6:	00 00                	add    BYTE PTR [rax],al
     fb8:	38 10                	cmp    BYTE PTR [rax],dl
     fba:	01 00                	add    DWORD PTR [rax],eax
     fbc:	00 00                	add    BYTE PTR [rax],al
     fbe:	00 00                	add    BYTE PTR [rax],al
     fc0:	08 00                	or     BYTE PTR [rax],al
     fc2:	00 00                	add    BYTE PTR [rax],al
     fc4:	00 00                	add    BYTE PTR [rax],al
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	34 c0                	xor    al,0xc0
     fca:	00 00                	add    BYTE PTR [rax],al
     fcc:	00 00                	add    BYTE PTR [rax],al
     fce:	00 00                	add    BYTE PTR [rax],al
     fd0:	d8 0f                	fmul   DWORD PTR [rdi]
     fd2:	01 00                	add    DWORD PTR [rax],eax
     fd4:	00 00                	add    BYTE PTR [rax],al
     fd6:	00 00                	add    BYTE PTR [rax],al
     fd8:	06                   	(bad)  
     fd9:	00 00                	add    BYTE PTR [rax],al
     fdb:	00 07                	add    BYTE PTR [rdi],al
	...
     fe5:	00 00                	add    BYTE PTR [rax],al
     fe7:	00 e0                	add    al,ah
     fe9:	0f 01 00             	sgdt   [rax]
     fec:	00 00                	add    BYTE PTR [rax],al
     fee:	00 00                	add    BYTE PTR [rax],al
     ff0:	06                   	(bad)  
     ff1:	00 00                	add    BYTE PTR [rax],al
     ff3:	00 21                	add    BYTE PTR [rcx],ah
	...
     ffd:	00 00                	add    BYTE PTR [rax],al
     fff:	00 e8                	add    al,ch
    1001:	0f 01 00             	sgdt   [rax]
    1004:	00 00                	add    BYTE PTR [rax],al
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	06                   	(bad)  
    1009:	00 00                	add    BYTE PTR [rax],al
    100b:	00 27                	add    BYTE PTR [rdi],ah
	...
    1015:	00 00                	add    BYTE PTR [rax],al
    1017:	00 f0                	add    al,dh
    1019:	0f 01 00             	sgdt   [rax]
    101c:	00 00                	add    BYTE PTR [rax],al
    101e:	00 00                	add    BYTE PTR [rax],al
    1020:	06                   	(bad)  
    1021:	00 00                	add    BYTE PTR [rax],al
    1023:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    102e:	00 00                	add    BYTE PTR [rax],al
    1030:	f8                   	clc    
    1031:	0f 01 00             	sgdt   [rax]
    1034:	00 00                	add    BYTE PTR [rax],al
    1036:	00 00                	add    BYTE PTR [rax],al
    1038:	06                   	(bad)  
    1039:	00 00                	add    BYTE PTR [rax],al
    103b:	00 48 00             	add    BYTE PTR [rax+0x0],cl
	...
    1046:	00 00                	add    BYTE PTR [rax],al
    1048:	60                   	(bad)  
    1049:	10 01                	adc    BYTE PTR [rcx],al
    104b:	00 00                	add    BYTE PTR [rax],al
    104d:	00 00                	add    BYTE PTR [rax],al
    104f:	00 05 00 00 00 49    	add    BYTE PTR [rip+0x49000000],al        # 49001055 <_end+0x48ec6035>
	...

Disassembly of section .rela.plt:

0000000000001060 <.rela.plt>:
    1060:	c0 0d 01 00 00 00 00 	ror    BYTE PTR [rip+0x1],0x0        # 1068 <buffer.4704+0xfe8>
    1067:	00 07                	add    BYTE PTR [rdi],al
    1069:	00 00                	add    BYTE PTR [rax],al
    106b:	00 01                	add    BYTE PTR [rcx],al
	...
    1075:	00 00                	add    BYTE PTR [rax],al
    1077:	00 c8                	add    al,cl
    1079:	0d 01 00 00 00       	or     eax,0x1
    107e:	00 00                	add    BYTE PTR [rax],al
    1080:	07                   	(bad)  
    1081:	00 00                	add    BYTE PTR [rax],al
    1083:	00 02                	add    BYTE PTR [rdx],al
	...
    108d:	00 00                	add    BYTE PTR [rax],al
    108f:	00 d0                	add    al,dl
    1091:	0d 01 00 00 00       	or     eax,0x1
    1096:	00 00                	add    BYTE PTR [rax],al
    1098:	07                   	(bad)  
    1099:	00 00                	add    BYTE PTR [rax],al
    109b:	00 03                	add    BYTE PTR [rbx],al
	...
    10a5:	00 00                	add    BYTE PTR [rax],al
    10a7:	00 d8                	add    al,bl
    10a9:	0d 01 00 00 00       	or     eax,0x1
    10ae:	00 00                	add    BYTE PTR [rax],al
    10b0:	07                   	(bad)  
    10b1:	00 00                	add    BYTE PTR [rax],al
    10b3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    10be:	00 00                	add    BYTE PTR [rax],al
    10c0:	e0 0d                	loopne 10cf <buffer.4704+0x104f>
    10c2:	01 00                	add    DWORD PTR [rax],eax
    10c4:	00 00                	add    BYTE PTR [rax],al
    10c6:	00 00                	add    BYTE PTR [rax],al
    10c8:	07                   	(bad)  
    10c9:	00 00                	add    BYTE PTR [rax],al
    10cb:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10d1 <buffer.4704+0x1051>
    10d1:	00 00                	add    BYTE PTR [rax],al
    10d3:	00 00                	add    BYTE PTR [rax],al
    10d5:	00 00                	add    BYTE PTR [rax],al
    10d7:	00 e8                	add    al,ch
    10d9:	0d 01 00 00 00       	or     eax,0x1
    10de:	00 00                	add    BYTE PTR [rax],al
    10e0:	07                   	(bad)  
    10e1:	00 00                	add    BYTE PTR [rax],al
    10e3:	00 06                	add    BYTE PTR [rsi],al
	...
    10ed:	00 00                	add    BYTE PTR [rax],al
    10ef:	00 f0                	add    al,dh
    10f1:	0d 01 00 00 00       	or     eax,0x1
    10f6:	00 00                	add    BYTE PTR [rax],al
    10f8:	07                   	(bad)  
    10f9:	00 00                	add    BYTE PTR [rax],al
    10fb:	00 08                	add    BYTE PTR [rax],cl
	...
    1105:	00 00                	add    BYTE PTR [rax],al
    1107:	00 f8                	add    al,bh
    1109:	0d 01 00 00 00       	or     eax,0x1
    110e:	00 00                	add    BYTE PTR [rax],al
    1110:	07                   	(bad)  
    1111:	00 00                	add    BYTE PTR [rax],al
    1113:	00 09                	add    BYTE PTR [rcx],cl
	...
    1121:	0e                   	(bad)  
    1122:	01 00                	add    DWORD PTR [rax],eax
    1124:	00 00                	add    BYTE PTR [rax],al
    1126:	00 00                	add    BYTE PTR [rax],al
    1128:	07                   	(bad)  
    1129:	00 00                	add    BYTE PTR [rax],al
    112b:	00 0a                	add    BYTE PTR [rdx],cl
	...
    1135:	00 00                	add    BYTE PTR [rax],al
    1137:	00 08                	add    BYTE PTR [rax],cl
    1139:	0e                   	(bad)  
    113a:	01 00                	add    DWORD PTR [rax],eax
    113c:	00 00                	add    BYTE PTR [rax],al
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	07                   	(bad)  
    1141:	00 00                	add    BYTE PTR [rax],al
    1143:	00 0b                	add    BYTE PTR [rbx],cl
	...
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	00 10                	add    BYTE PTR [rax],dl
    1151:	0e                   	(bad)  
    1152:	01 00                	add    DWORD PTR [rax],eax
    1154:	00 00                	add    BYTE PTR [rax],al
    1156:	00 00                	add    BYTE PTR [rax],al
    1158:	07                   	(bad)  
    1159:	00 00                	add    BYTE PTR [rax],al
    115b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    1166:	00 00                	add    BYTE PTR [rax],al
    1168:	18 0e                	sbb    BYTE PTR [rsi],cl
    116a:	01 00                	add    DWORD PTR [rax],eax
    116c:	00 00                	add    BYTE PTR [rax],al
    116e:	00 00                	add    BYTE PTR [rax],al
    1170:	07                   	(bad)  
    1171:	00 00                	add    BYTE PTR [rax],al
    1173:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1179 <buffer.4704+0x10f9>
    1179:	00 00                	add    BYTE PTR [rax],al
    117b:	00 00                	add    BYTE PTR [rax],al
    117d:	00 00                	add    BYTE PTR [rax],al
    117f:	00 20                	add    BYTE PTR [rax],ah
    1181:	0e                   	(bad)  
    1182:	01 00                	add    DWORD PTR [rax],eax
    1184:	00 00                	add    BYTE PTR [rax],al
    1186:	00 00                	add    BYTE PTR [rax],al
    1188:	07                   	(bad)  
    1189:	00 00                	add    BYTE PTR [rax],al
    118b:	00 0e                	add    BYTE PTR [rsi],cl
	...
    1195:	00 00                	add    BYTE PTR [rax],al
    1197:	00 28                	add    BYTE PTR [rax],ch
    1199:	0e                   	(bad)  
    119a:	01 00                	add    DWORD PTR [rax],eax
    119c:	00 00                	add    BYTE PTR [rax],al
    119e:	00 00                	add    BYTE PTR [rax],al
    11a0:	07                   	(bad)  
    11a1:	00 00                	add    BYTE PTR [rax],al
    11a3:	00 0f                	add    BYTE PTR [rdi],cl
	...
    11ad:	00 00                	add    BYTE PTR [rax],al
    11af:	00 30                	add    BYTE PTR [rax],dh
    11b1:	0e                   	(bad)  
    11b2:	01 00                	add    DWORD PTR [rax],eax
    11b4:	00 00                	add    BYTE PTR [rax],al
    11b6:	00 00                	add    BYTE PTR [rax],al
    11b8:	07                   	(bad)  
    11b9:	00 00                	add    BYTE PTR [rax],al
    11bb:	00 10                	add    BYTE PTR [rax],dl
	...
    11c5:	00 00                	add    BYTE PTR [rax],al
    11c7:	00 38                	add    BYTE PTR [rax],bh
    11c9:	0e                   	(bad)  
    11ca:	01 00                	add    DWORD PTR [rax],eax
    11cc:	00 00                	add    BYTE PTR [rax],al
    11ce:	00 00                	add    BYTE PTR [rax],al
    11d0:	07                   	(bad)  
    11d1:	00 00                	add    BYTE PTR [rax],al
    11d3:	00 11                	add    BYTE PTR [rcx],dl
	...
    11dd:	00 00                	add    BYTE PTR [rax],al
    11df:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    11e2:	01 00                	add    DWORD PTR [rax],eax
    11e4:	00 00                	add    BYTE PTR [rax],al
    11e6:	00 00                	add    BYTE PTR [rax],al
    11e8:	07                   	(bad)  
    11e9:	00 00                	add    BYTE PTR [rax],al
    11eb:	00 12                	add    BYTE PTR [rdx],dl
	...
    11f5:	00 00                	add    BYTE PTR [rax],al
    11f7:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    11fa:	01 00                	add    DWORD PTR [rax],eax
    11fc:	00 00                	add    BYTE PTR [rax],al
    11fe:	00 00                	add    BYTE PTR [rax],al
    1200:	07                   	(bad)  
    1201:	00 00                	add    BYTE PTR [rax],al
    1203:	00 13                	add    BYTE PTR [rbx],dl
	...
    120d:	00 00                	add    BYTE PTR [rax],al
    120f:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    1212:	01 00                	add    DWORD PTR [rax],eax
    1214:	00 00                	add    BYTE PTR [rax],al
    1216:	00 00                	add    BYTE PTR [rax],al
    1218:	07                   	(bad)  
    1219:	00 00                	add    BYTE PTR [rax],al
    121b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    1226:	00 00                	add    BYTE PTR [rax],al
    1228:	58                   	pop    rax
    1229:	0e                   	(bad)  
    122a:	01 00                	add    DWORD PTR [rax],eax
    122c:	00 00                	add    BYTE PTR [rax],al
    122e:	00 00                	add    BYTE PTR [rax],al
    1230:	07                   	(bad)  
    1231:	00 00                	add    BYTE PTR [rax],al
    1233:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 1239 <buffer.4704+0x11b9>
    1239:	00 00                	add    BYTE PTR [rax],al
    123b:	00 00                	add    BYTE PTR [rax],al
    123d:	00 00                	add    BYTE PTR [rax],al
    123f:	00 60 0e             	add    BYTE PTR [rax+0xe],ah
    1242:	01 00                	add    DWORD PTR [rax],eax
    1244:	00 00                	add    BYTE PTR [rax],al
    1246:	00 00                	add    BYTE PTR [rax],al
    1248:	07                   	(bad)  
    1249:	00 00                	add    BYTE PTR [rax],al
    124b:	00 16                	add    BYTE PTR [rsi],dl
	...
    1255:	00 00                	add    BYTE PTR [rax],al
    1257:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    125a:	01 00                	add    DWORD PTR [rax],eax
    125c:	00 00                	add    BYTE PTR [rax],al
    125e:	00 00                	add    BYTE PTR [rax],al
    1260:	07                   	(bad)  
    1261:	00 00                	add    BYTE PTR [rax],al
    1263:	00 17                	add    BYTE PTR [rdi],dl
	...
    126d:	00 00                	add    BYTE PTR [rax],al
    126f:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
    1272:	01 00                	add    DWORD PTR [rax],eax
    1274:	00 00                	add    BYTE PTR [rax],al
    1276:	00 00                	add    BYTE PTR [rax],al
    1278:	07                   	(bad)  
    1279:	00 00                	add    BYTE PTR [rax],al
    127b:	00 18                	add    BYTE PTR [rax],bl
	...
    1285:	00 00                	add    BYTE PTR [rax],al
    1287:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    128a:	01 00                	add    DWORD PTR [rax],eax
    128c:	00 00                	add    BYTE PTR [rax],al
    128e:	00 00                	add    BYTE PTR [rax],al
    1290:	07                   	(bad)  
    1291:	00 00                	add    BYTE PTR [rax],al
    1293:	00 19                	add    BYTE PTR [rcx],bl
	...
    129d:	00 00                	add    BYTE PTR [rax],al
    129f:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    12a5:	00 00                	add    BYTE PTR [rax],al
    12a7:	00 07                	add    BYTE PTR [rdi],al
    12a9:	00 00                	add    BYTE PTR [rax],al
    12ab:	00 1a                	add    BYTE PTR [rdx],bl
	...
    12b5:	00 00                	add    BYTE PTR [rax],al
    12b7:	00 88 0e 01 00 00    	add    BYTE PTR [rax+0x10e],cl
    12bd:	00 00                	add    BYTE PTR [rax],al
    12bf:	00 07                	add    BYTE PTR [rdi],al
    12c1:	00 00                	add    BYTE PTR [rax],al
    12c3:	00 1b                	add    BYTE PTR [rbx],bl
	...
    12cd:	00 00                	add    BYTE PTR [rax],al
    12cf:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    12d5:	00 00                	add    BYTE PTR [rax],al
    12d7:	00 07                	add    BYTE PTR [rdi],al
    12d9:	00 00                	add    BYTE PTR [rax],al
    12db:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    12e6:	00 00                	add    BYTE PTR [rax],al
    12e8:	98                   	cwde   
    12e9:	0e                   	(bad)  
    12ea:	01 00                	add    DWORD PTR [rax],eax
    12ec:	00 00                	add    BYTE PTR [rax],al
    12ee:	00 00                	add    BYTE PTR [rax],al
    12f0:	07                   	(bad)  
    12f1:	00 00                	add    BYTE PTR [rax],al
    12f3:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 12f9 <buffer.4704+0x1279>
    12f9:	00 00                	add    BYTE PTR [rax],al
    12fb:	00 00                	add    BYTE PTR [rax],al
    12fd:	00 00                	add    BYTE PTR [rax],al
    12ff:	00 a0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ah
    1305:	00 00                	add    BYTE PTR [rax],al
    1307:	00 07                	add    BYTE PTR [rdi],al
    1309:	00 00                	add    BYTE PTR [rax],al
    130b:	00 1e                	add    BYTE PTR [rsi],bl
	...
    1315:	00 00                	add    BYTE PTR [rax],al
    1317:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    131d:	00 00                	add    BYTE PTR [rax],al
    131f:	00 07                	add    BYTE PTR [rdi],al
    1321:	00 00                	add    BYTE PTR [rax],al
    1323:	00 1f                	add    BYTE PTR [rdi],bl
	...
    132d:	00 00                	add    BYTE PTR [rax],al
    132f:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    1335:	00 00                	add    BYTE PTR [rax],al
    1337:	00 07                	add    BYTE PTR [rdi],al
    1339:	00 00                	add    BYTE PTR [rax],al
    133b:	00 20                	add    BYTE PTR [rax],ah
	...
    1345:	00 00                	add    BYTE PTR [rax],al
    1347:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    134d:	00 00                	add    BYTE PTR [rax],al
    134f:	00 07                	add    BYTE PTR [rdi],al
    1351:	00 00                	add    BYTE PTR [rax],al
    1353:	00 22                	add    BYTE PTR [rdx],ah
	...
    135d:	00 00                	add    BYTE PTR [rax],al
    135f:	00 c0                	add    al,al
    1361:	0e                   	(bad)  
    1362:	01 00                	add    DWORD PTR [rax],eax
    1364:	00 00                	add    BYTE PTR [rax],al
    1366:	00 00                	add    BYTE PTR [rax],al
    1368:	07                   	(bad)  
    1369:	00 00                	add    BYTE PTR [rax],al
    136b:	00 23                	add    BYTE PTR [rbx],ah
	...
    1375:	00 00                	add    BYTE PTR [rax],al
    1377:	00 c8                	add    al,cl
    1379:	0e                   	(bad)  
    137a:	01 00                	add    DWORD PTR [rax],eax
    137c:	00 00                	add    BYTE PTR [rax],al
    137e:	00 00                	add    BYTE PTR [rax],al
    1380:	07                   	(bad)  
    1381:	00 00                	add    BYTE PTR [rax],al
    1383:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    138e:	00 00                	add    BYTE PTR [rax],al
    1390:	d0 0e                	ror    BYTE PTR [rsi],1
    1392:	01 00                	add    DWORD PTR [rax],eax
    1394:	00 00                	add    BYTE PTR [rax],al
    1396:	00 00                	add    BYTE PTR [rax],al
    1398:	07                   	(bad)  
    1399:	00 00                	add    BYTE PTR [rax],al
    139b:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 13a1 <buffer.4704+0x1321>
    13a1:	00 00                	add    BYTE PTR [rax],al
    13a3:	00 00                	add    BYTE PTR [rax],al
    13a5:	00 00                	add    BYTE PTR [rax],al
    13a7:	00 d8                	add    al,bl
    13a9:	0e                   	(bad)  
    13aa:	01 00                	add    DWORD PTR [rax],eax
    13ac:	00 00                	add    BYTE PTR [rax],al
    13ae:	00 00                	add    BYTE PTR [rax],al
    13b0:	07                   	(bad)  
    13b1:	00 00                	add    BYTE PTR [rax],al
    13b3:	00 26                	add    BYTE PTR [rsi],ah
	...
    13bd:	00 00                	add    BYTE PTR [rax],al
    13bf:	00 e0                	add    al,ah
    13c1:	0e                   	(bad)  
    13c2:	01 00                	add    DWORD PTR [rax],eax
    13c4:	00 00                	add    BYTE PTR [rax],al
    13c6:	00 00                	add    BYTE PTR [rax],al
    13c8:	07                   	(bad)  
    13c9:	00 00                	add    BYTE PTR [rax],al
    13cb:	00 28                	add    BYTE PTR [rax],ch
	...
    13d5:	00 00                	add    BYTE PTR [rax],al
    13d7:	00 e8                	add    al,ch
    13d9:	0e                   	(bad)  
    13da:	01 00                	add    DWORD PTR [rax],eax
    13dc:	00 00                	add    BYTE PTR [rax],al
    13de:	00 00                	add    BYTE PTR [rax],al
    13e0:	07                   	(bad)  
    13e1:	00 00                	add    BYTE PTR [rax],al
    13e3:	00 29                	add    BYTE PTR [rcx],ch
	...
    13ed:	00 00                	add    BYTE PTR [rax],al
    13ef:	00 f0                	add    al,dh
    13f1:	0e                   	(bad)  
    13f2:	01 00                	add    DWORD PTR [rax],eax
    13f4:	00 00                	add    BYTE PTR [rax],al
    13f6:	00 00                	add    BYTE PTR [rax],al
    13f8:	07                   	(bad)  
    13f9:	00 00                	add    BYTE PTR [rax],al
    13fb:	00 2a                	add    BYTE PTR [rdx],ch
	...
    1405:	00 00                	add    BYTE PTR [rax],al
    1407:	00 f8                	add    al,bh
    1409:	0e                   	(bad)  
    140a:	01 00                	add    DWORD PTR [rax],eax
    140c:	00 00                	add    BYTE PTR [rax],al
    140e:	00 00                	add    BYTE PTR [rax],al
    1410:	07                   	(bad)  
    1411:	00 00                	add    BYTE PTR [rax],al
    1413:	00 2b                	add    BYTE PTR [rbx],ch
	...
    1421:	0f 01 00             	sgdt   [rax]
    1424:	00 00                	add    BYTE PTR [rax],al
    1426:	00 00                	add    BYTE PTR [rax],al
    1428:	07                   	(bad)  
    1429:	00 00                	add    BYTE PTR [rax],al
    142b:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    1436:	00 00                	add    BYTE PTR [rax],al
    1438:	08 0f                	or     BYTE PTR [rdi],cl
    143a:	01 00                	add    DWORD PTR [rax],eax
    143c:	00 00                	add    BYTE PTR [rax],al
    143e:	00 00                	add    BYTE PTR [rax],al
    1440:	07                   	(bad)  
    1441:	00 00                	add    BYTE PTR [rax],al
    1443:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 1449 <buffer.4704+0x13c9>
    1449:	00 00                	add    BYTE PTR [rax],al
    144b:	00 00                	add    BYTE PTR [rax],al
    144d:	00 00                	add    BYTE PTR [rax],al
    144f:	00 10                	add    BYTE PTR [rax],dl
    1451:	0f 01 00             	sgdt   [rax]
    1454:	00 00                	add    BYTE PTR [rax],al
    1456:	00 00                	add    BYTE PTR [rax],al
    1458:	07                   	(bad)  
    1459:	00 00                	add    BYTE PTR [rax],al
    145b:	00 2e                	add    BYTE PTR [rsi],ch
	...
    1465:	00 00                	add    BYTE PTR [rax],al
    1467:	00 18                	add    BYTE PTR [rax],bl
    1469:	0f 01 00             	sgdt   [rax]
    146c:	00 00                	add    BYTE PTR [rax],al
    146e:	00 00                	add    BYTE PTR [rax],al
    1470:	07                   	(bad)  
    1471:	00 00                	add    BYTE PTR [rax],al
    1473:	00 2f                	add    BYTE PTR [rdi],ch
	...
    147d:	00 00                	add    BYTE PTR [rax],al
    147f:	00 20                	add    BYTE PTR [rax],ah
    1481:	0f 01 00             	sgdt   [rax]
    1484:	00 00                	add    BYTE PTR [rax],al
    1486:	00 00                	add    BYTE PTR [rax],al
    1488:	07                   	(bad)  
    1489:	00 00                	add    BYTE PTR [rax],al
    148b:	00 30                	add    BYTE PTR [rax],dh
	...
    1495:	00 00                	add    BYTE PTR [rax],al
    1497:	00 28                	add    BYTE PTR [rax],ch
    1499:	0f 01 00             	sgdt   [rax]
    149c:	00 00                	add    BYTE PTR [rax],al
    149e:	00 00                	add    BYTE PTR [rax],al
    14a0:	07                   	(bad)  
    14a1:	00 00                	add    BYTE PTR [rax],al
    14a3:	00 31                	add    BYTE PTR [rcx],dh
	...
    14ad:	00 00                	add    BYTE PTR [rax],al
    14af:	00 30                	add    BYTE PTR [rax],dh
    14b1:	0f 01 00             	sgdt   [rax]
    14b4:	00 00                	add    BYTE PTR [rax],al
    14b6:	00 00                	add    BYTE PTR [rax],al
    14b8:	07                   	(bad)  
    14b9:	00 00                	add    BYTE PTR [rax],al
    14bb:	00 32                	add    BYTE PTR [rdx],dh
	...
    14c5:	00 00                	add    BYTE PTR [rax],al
    14c7:	00 38                	add    BYTE PTR [rax],bh
    14c9:	0f 01 00             	sgdt   [rax]
    14cc:	00 00                	add    BYTE PTR [rax],al
    14ce:	00 00                	add    BYTE PTR [rax],al
    14d0:	07                   	(bad)  
    14d1:	00 00                	add    BYTE PTR [rax],al
    14d3:	00 33                	add    BYTE PTR [rbx],dh
	...
    14dd:	00 00                	add    BYTE PTR [rax],al
    14df:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    14e2:	01 00                	add    DWORD PTR [rax],eax
    14e4:	00 00                	add    BYTE PTR [rax],al
    14e6:	00 00                	add    BYTE PTR [rax],al
    14e8:	07                   	(bad)  
    14e9:	00 00                	add    BYTE PTR [rax],al
    14eb:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    14f6:	00 00                	add    BYTE PTR [rax],al
    14f8:	48 0f 01 00          	rex.W sgdt [rax]
    14fc:	00 00                	add    BYTE PTR [rax],al
    14fe:	00 00                	add    BYTE PTR [rax],al
    1500:	07                   	(bad)  
    1501:	00 00                	add    BYTE PTR [rax],al
    1503:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 1509 <buffer.4704+0x1489>
    1509:	00 00                	add    BYTE PTR [rax],al
    150b:	00 00                	add    BYTE PTR [rax],al
    150d:	00 00                	add    BYTE PTR [rax],al
    150f:	00 50 0f             	add    BYTE PTR [rax+0xf],dl
    1512:	01 00                	add    DWORD PTR [rax],eax
    1514:	00 00                	add    BYTE PTR [rax],al
    1516:	00 00                	add    BYTE PTR [rax],al
    1518:	07                   	(bad)  
    1519:	00 00                	add    BYTE PTR [rax],al
    151b:	00 36                	add    BYTE PTR [rsi],dh
	...
    1525:	00 00                	add    BYTE PTR [rax],al
    1527:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    152a:	01 00                	add    DWORD PTR [rax],eax
    152c:	00 00                	add    BYTE PTR [rax],al
    152e:	00 00                	add    BYTE PTR [rax],al
    1530:	07                   	(bad)  
    1531:	00 00                	add    BYTE PTR [rax],al
    1533:	00 37                	add    BYTE PTR [rdi],dh
	...
    153d:	00 00                	add    BYTE PTR [rax],al
    153f:	00 60 0f             	add    BYTE PTR [rax+0xf],ah
    1542:	01 00                	add    DWORD PTR [rax],eax
    1544:	00 00                	add    BYTE PTR [rax],al
    1546:	00 00                	add    BYTE PTR [rax],al
    1548:	07                   	(bad)  
    1549:	00 00                	add    BYTE PTR [rax],al
    154b:	00 38                	add    BYTE PTR [rax],bh
	...
    1555:	00 00                	add    BYTE PTR [rax],al
    1557:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    155a:	01 00                	add    DWORD PTR [rax],eax
    155c:	00 00                	add    BYTE PTR [rax],al
    155e:	00 00                	add    BYTE PTR [rax],al
    1560:	07                   	(bad)  
    1561:	00 00                	add    BYTE PTR [rax],al
    1563:	00 39                	add    BYTE PTR [rcx],bh
	...
    156d:	00 00                	add    BYTE PTR [rax],al
    156f:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    1572:	01 00                	add    DWORD PTR [rax],eax
    1574:	00 00                	add    BYTE PTR [rax],al
    1576:	00 00                	add    BYTE PTR [rax],al
    1578:	07                   	(bad)  
    1579:	00 00                	add    BYTE PTR [rax],al
    157b:	00 3a                	add    BYTE PTR [rdx],bh
	...
    1585:	00 00                	add    BYTE PTR [rax],al
    1587:	00 78 0f             	add    BYTE PTR [rax+0xf],bh
    158a:	01 00                	add    DWORD PTR [rax],eax
    158c:	00 00                	add    BYTE PTR [rax],al
    158e:	00 00                	add    BYTE PTR [rax],al
    1590:	07                   	(bad)  
    1591:	00 00                	add    BYTE PTR [rax],al
    1593:	00 3b                	add    BYTE PTR [rbx],bh
	...
    159d:	00 00                	add    BYTE PTR [rax],al
    159f:	00 80 0f 01 00 00    	add    BYTE PTR [rax+0x10f],al
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 07                	add    BYTE PTR [rdi],al
    15a9:	00 00                	add    BYTE PTR [rax],al
    15ab:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    15b6:	00 00                	add    BYTE PTR [rax],al
    15b8:	88 0f                	mov    BYTE PTR [rdi],cl
    15ba:	01 00                	add    DWORD PTR [rax],eax
    15bc:	00 00                	add    BYTE PTR [rax],al
    15be:	00 00                	add    BYTE PTR [rax],al
    15c0:	07                   	(bad)  
    15c1:	00 00                	add    BYTE PTR [rax],al
    15c3:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 15c9 <buffer.4704+0x1549>
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	00 00                	add    BYTE PTR [rax],al
    15cd:	00 00                	add    BYTE PTR [rax],al
    15cf:	00 90 0f 01 00 00    	add    BYTE PTR [rax+0x10f],dl
    15d5:	00 00                	add    BYTE PTR [rax],al
    15d7:	00 07                	add    BYTE PTR [rdi],al
    15d9:	00 00                	add    BYTE PTR [rax],al
    15db:	00 3e                	add    BYTE PTR [rsi],bh
	...
    15e5:	00 00                	add    BYTE PTR [rax],al
    15e7:	00 98 0f 01 00 00    	add    BYTE PTR [rax+0x10f],bl
    15ed:	00 00                	add    BYTE PTR [rax],al
    15ef:	00 07                	add    BYTE PTR [rdi],al
    15f1:	00 00                	add    BYTE PTR [rax],al
    15f3:	00 3f                	add    BYTE PTR [rdi],bh
	...
    15fd:	00 00                	add    BYTE PTR [rax],al
    15ff:	00 a0 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ah
    1605:	00 00                	add    BYTE PTR [rax],al
    1607:	00 07                	add    BYTE PTR [rdi],al
    1609:	00 00                	add    BYTE PTR [rax],al
    160b:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    1616:	00 00                	add    BYTE PTR [rax],al
    1618:	a8 0f                	test   al,0xf
    161a:	01 00                	add    DWORD PTR [rax],eax
    161c:	00 00                	add    BYTE PTR [rax],al
    161e:	00 00                	add    BYTE PTR [rax],al
    1620:	07                   	(bad)  
    1621:	00 00                	add    BYTE PTR [rax],al
    1623:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    162e:	00 00                	add    BYTE PTR [rax],al
    1630:	b0 0f                	mov    al,0xf
    1632:	01 00                	add    DWORD PTR [rax],eax
    1634:	00 00                	add    BYTE PTR [rax],al
    1636:	00 00                	add    BYTE PTR [rax],al
    1638:	07                   	(bad)  
    1639:	00 00                	add    BYTE PTR [rax],al
    163b:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    1646:	00 00                	add    BYTE PTR [rax],al
    1648:	b8 0f 01 00 00       	mov    eax,0x10f
    164d:	00 00                	add    BYTE PTR [rax],al
    164f:	00 07                	add    BYTE PTR [rdi],al
    1651:	00 00                	add    BYTE PTR [rax],al
    1653:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    165f:	00 c0                	add    al,al
    1661:	0f 01 00             	sgdt   [rax]
    1664:	00 00                	add    BYTE PTR [rax],al
    1666:	00 00                	add    BYTE PTR [rax],al
    1668:	07                   	(bad)  
    1669:	00 00                	add    BYTE PTR [rax],al
    166b:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    1676:	00 00                	add    BYTE PTR [rax],al
    1678:	c8 0f 01 00          	enter  0x10f,0x0
    167c:	00 00                	add    BYTE PTR [rax],al
    167e:	00 00                	add    BYTE PTR [rax],al
    1680:	07                   	(bad)  
    1681:	00 00                	add    BYTE PTR [rax],al
    1683:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
    168e:	00 00                	add    BYTE PTR [rax],al
    1690:	d0 0f                	ror    BYTE PTR [rdi],1
    1692:	01 00                	add    DWORD PTR [rax],eax
    1694:	00 00                	add    BYTE PTR [rax],al
    1696:	00 00                	add    BYTE PTR [rax],al
    1698:	07                   	(bad)  
    1699:	00 00                	add    BYTE PTR [rax],al
    169b:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 d9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefd9]        # 10fe8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 8a ed 00 00    	push   QWORD PTR [rip+0xed8a]        # 10db0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 8b ed 00 00 	bnd jmp QWORD PTR [rip+0xed8b]        # 10db8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <.plt>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <.plt>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <.plt>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <.plt>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <.plt>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <.plt>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <.plt>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <.plt>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <.plt>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <.plt>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <.plt>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <.plt>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <.plt>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <.plt>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <.plt>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <.plt>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <.plt>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <.plt>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <.plt>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <.plt>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <.plt>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <.plt>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <.plt>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <.plt>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <.plt>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <.plt>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <.plt>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <.plt>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <.plt>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <.plt>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <.plt>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <.plt>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <.plt>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <.plt>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <.plt>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <.plt>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <.plt>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <.plt>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <.plt>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <.plt>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <.plt>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <.plt>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <.plt>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <.plt>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <.plt>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <.plt>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <.plt>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <.plt>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <.plt>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <.plt>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <.plt>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <.plt>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <.plt>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <.plt>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <.plt>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <.plt>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <.plt>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <.plt>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <.plt>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <.plt>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <.plt>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <.plt>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <.plt>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <.plt>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <.plt>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <.plt>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <.plt>
    245f:	90                   	nop

Disassembly of section .plt.got:

0000000000002460 <__cxa_finalize@plt>:
    2460:	f3 0f 1e fa          	endbr64 
    2464:	f2 ff 25 8d eb 00 00 	bnd jmp QWORD PTR [rip+0xeb8d]        # 10ff8 <__cxa_finalize@GLIBC_2.2.5>
    246b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002470 <free@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 45 e9 00 00 	bnd jmp QWORD PTR [rip+0xe945]        # 10dc0 <free@GLIBC_2.2.5>
    247b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002480 <putchar@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 3d e9 00 00 	bnd jmp QWORD PTR [rip+0xe93d]        # 10dc8 <putchar@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002490 <pthread_create@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 35 e9 00 00 	bnd jmp QWORD PTR [rip+0xe935]        # 10dd0 <pthread_create@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <localtime@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 2d e9 00 00 	bnd jmp QWORD PTR [rip+0xe92d]        # 10dd8 <localtime@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <strncpy@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 25 e9 00 00 	bnd jmp QWORD PTR [rip+0xe925]        # 10de0 <strncpy@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <strncmp@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 1d e9 00 00 	bnd jmp QWORD PTR [rip+0xe91d]        # 10de8 <strncmp@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <strcpy@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 15 e9 00 00 	bnd jmp QWORD PTR [rip+0xe915]        # 10df0 <strcpy@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <lua_settop@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 0d e9 00 00 	bnd jmp QWORD PTR [rip+0xe90d]        # 10df8 <lua_settop@LUA_5.3>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <lua_gettop@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 05 e9 00 00 	bnd jmp QWORD PTR [rip+0xe905]        # 10e00 <lua_gettop@LUA_5.3>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <puts@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 fd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8fd]        # 10e08 <puts@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <setsockopt@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 f5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8f5]        # 10e10 <setsockopt@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <backtrace_symbols@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 ed e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ed]        # 10e18 <backtrace_symbols@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <sqlite3_exec@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10e20 <sqlite3_exec>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <sqlite3_open@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10e28 <sqlite3_open>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <fclose@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10e30 <fclose@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <strlen@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10e38 <strlen@GLIBC_2.2.5>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <backtrace@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10e40 <backtrace@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <__stack_chk_fail@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10e48 <__stack_chk_fail@GLIBC_2.4>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <htons@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10e50 <htons@GLIBC_2.2.5>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <send@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10e58 <send@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <strchr@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10e60 <strchr@GLIBC_2.2.5>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <printf@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10e68 <printf@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <snprintf@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10e70 <snprintf@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <fputs@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10e78 <fputs@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <htonl@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10e80 <htonl@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <memset@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10e88 <memset@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <strncat@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10e90 <strncat@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <close@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10e98 <close@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <regcomp@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10ea0 <regcomp@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <strcspn@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10ea8 <strcspn@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <read@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10eb0 <read@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <lua_close@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10eb8 <lua_close@LUA_5.3>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <sqlite3_errmsg@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10ec0 <sqlite3_errmsg>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <strcmp@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10ec8 <strcmp@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <signal@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10ed0 <signal@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <fprintf@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10ed8 <fprintf@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <strtol@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10ee0 <strtol@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <sqlite3_close@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10ee8 <sqlite3_close>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <time@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10ef0 <time@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <luaL_newstate@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10ef8 <luaL_newstate@LUA_5.3>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <pcap_loop@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10f00 <pcap_loop>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <malloc@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10f08 <malloc@GLIBC_2.2.5>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <listen@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10f10 <listen@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <lua_pcallk@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10f18 <lua_pcallk@LUA_5.3>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <regexec@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10f20 <regexec@GLIBC_2.3.4>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <ntohs@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10f28 <ntohs@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <luaL_loadfilex@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10f30 <luaL_loadfilex@LUA_5.3>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <bind@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10f38 <bind@GLIBC_2.2.5>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <fopen@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10f40 <fopen@GLIBC_2.2.5>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <perror@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10f48 <perror@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <strtok@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10f50 <strtok@GLIBC_2.2.5>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <pthread_join@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10f58 <pthread_join@GLIBC_2.2.5>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <luaL_openlibs@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10f60 <luaL_openlibs@LUA_5.3>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <getopt@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10f68 <getopt@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <accept@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10f70 <accept@GLIBC_2.2.5>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <atoi@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10f78 <atoi@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <getline@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10f80 <getline@GLIBC_2.2.5>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <strcat@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10f88 <strcat@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <pcap_open_live@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10f90 <pcap_open_live>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <sqlite3_free@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10f98 <sqlite3_free>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <sprintf@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10fa0 <sprintf@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <exit@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10fa8 <exit@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <ntohl@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10fb0 <ntohl@GLIBC_2.2.5>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <sleep@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 4d e7 00 00 	bnd jmp QWORD PTR [rip+0xe74d]        # 10fb8 <sleep@GLIBC_2.2.5>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <getdelim@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 45 e7 00 00 	bnd jmp QWORD PTR [rip+0xe745]        # 10fc0 <getdelim@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <strstr@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 3d e7 00 00 	bnd jmp QWORD PTR [rip+0xe73d]        # 10fc8 <strstr@GLIBC_2.2.5>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <socket@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 35 e7 00 00 	bnd jmp QWORD PTR [rip+0xe735]        # 10fd0 <socket@GLIBC_2.2.5>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000028a0 <_start>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	31 ed                	xor    ebp,ebp
    28a6:	49 89 d1             	mov    r9,rdx
    28a9:	5e                   	pop    rsi
    28aa:	48 89 e2             	mov    rdx,rsp
    28ad:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    28b1:	50                   	push   rax
    28b2:	54                   	push   rsp
    28b3:	4c 8d 05 86 91 00 00 	lea    r8,[rip+0x9186]        # ba40 <__libc_csu_fini>
    28ba:	48 8d 0d 0f 91 00 00 	lea    rcx,[rip+0x910f]        # b9d0 <__libc_csu_init>
    28c1:	48 8d 3d f0 40 00 00 	lea    rdi,[rip+0x40f0]        # 69b8 <main>
    28c8:	ff 15 12 e7 00 00    	call   QWORD PTR [rip+0xe712]        # 10fe0 <__libc_start_main@GLIBC_2.2.5>
    28ce:	f4                   	hlt    
    28cf:	90                   	nop

00000000000028d0 <deregister_tm_clones>:
    28d0:	48 8d 3d 71 e7 00 00 	lea    rdi,[rip+0xe771]        # 11048 <__TMC_END__>
    28d7:	48 8d 05 6a e7 00 00 	lea    rax,[rip+0xe76a]        # 11048 <__TMC_END__>
    28de:	48 39 f8             	cmp    rax,rdi
    28e1:	74 15                	je     28f8 <deregister_tm_clones+0x28>
    28e3:	48 8b 05 ee e6 00 00 	mov    rax,QWORD PTR [rip+0xe6ee]        # 10fd8 <_ITM_deregisterTMCloneTable>
    28ea:	48 85 c0             	test   rax,rax
    28ed:	74 09                	je     28f8 <deregister_tm_clones+0x28>
    28ef:	ff e0                	jmp    rax
    28f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    28f8:	c3                   	ret    
    28f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002900 <register_tm_clones>:
    2900:	48 8d 3d 41 e7 00 00 	lea    rdi,[rip+0xe741]        # 11048 <__TMC_END__>
    2907:	48 8d 35 3a e7 00 00 	lea    rsi,[rip+0xe73a]        # 11048 <__TMC_END__>
    290e:	48 29 fe             	sub    rsi,rdi
    2911:	48 89 f0             	mov    rax,rsi
    2914:	48 c1 ee 3f          	shr    rsi,0x3f
    2918:	48 c1 f8 03          	sar    rax,0x3
    291c:	48 01 c6             	add    rsi,rax
    291f:	48 d1 fe             	sar    rsi,1
    2922:	74 14                	je     2938 <register_tm_clones+0x38>
    2924:	48 8b 05 c5 e6 00 00 	mov    rax,QWORD PTR [rip+0xe6c5]        # 10ff0 <_ITM_registerTMCloneTable>
    292b:	48 85 c0             	test   rax,rax
    292e:	74 08                	je     2938 <register_tm_clones+0x38>
    2930:	ff e0                	jmp    rax
    2932:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2938:	c3                   	ret    
    2939:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002940 <__do_global_dtors_aux>:
    2940:	f3 0f 1e fa          	endbr64 
    2944:	80 3d 1d e7 00 00 00 	cmp    BYTE PTR [rip+0xe71d],0x0        # 11068 <completed.8061>
    294b:	75 2b                	jne    2978 <__do_global_dtors_aux+0x38>
    294d:	55                   	push   rbp
    294e:	48 83 3d a2 e6 00 00 	cmp    QWORD PTR [rip+0xe6a2],0x0        # 10ff8 <__cxa_finalize@GLIBC_2.2.5>
    2955:	00 
    2956:	48 89 e5             	mov    rbp,rsp
    2959:	74 0c                	je     2967 <__do_global_dtors_aux+0x27>
    295b:	48 8b 3d a6 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe6a6]        # 11008 <__dso_handle>
    2962:	e8 f9 fa ff ff       	call   2460 <__cxa_finalize@plt>
    2967:	e8 64 ff ff ff       	call   28d0 <deregister_tm_clones>
    296c:	c6 05 f5 e6 00 00 01 	mov    BYTE PTR [rip+0xe6f5],0x1        # 11068 <completed.8061>
    2973:	5d                   	pop    rbp
    2974:	c3                   	ret    
    2975:	0f 1f 00             	nop    DWORD PTR [rax]
    2978:	c3                   	ret    
    2979:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002980 <frame_dummy>:
    2980:	f3 0f 1e fa          	endbr64 
    2984:	e9 77 ff ff ff       	jmp    2900 <register_tm_clones>

0000000000002989 <add_thread>:
    2989:	f3 0f 1e fa          	endbr64 
    298d:	55                   	push   rbp
    298e:	48 89 e5             	mov    rbp,rsp
    2991:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2995:	8b 05 e5 e6 00 00    	mov    eax,DWORD PTR [rip+0xe6e5]        # 11080 <thread_count>
    299b:	8d 50 01             	lea    edx,[rax+0x1]
    299e:	89 15 dc e6 00 00    	mov    DWORD PTR [rip+0xe6dc],edx        # 11080 <thread_count>
    29a4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    29a8:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    29ab:	48 98                	cdqe   
    29ad:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    29b4:	00 
    29b5:	48 8d 05 84 4f 10 00 	lea    rax,[rip+0x104f84]        # 107940 <threads>
    29bc:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    29c0:	90                   	nop
    29c1:	5d                   	pop    rbp
    29c2:	c3                   	ret    

00000000000029c3 <pktmgr>:
    29c3:	f3 0f 1e fa          	endbr64 
    29c7:	55                   	push   rbp
    29c8:	48 89 e5             	mov    rbp,rsp
    29cb:	53                   	push   rbx
    29cc:	48 83 ec 38          	sub    rsp,0x38
    29d0:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    29d4:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    29d8:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    29dc:	0f b6 05 56 4f 10 00 	movzx  eax,BYTE PTR [rip+0x104f56]        # 107939 <packet_print>
    29e3:	84 c0                	test   al,al
    29e5:	74 0c                	je     29f3 <pktmgr+0x30>
    29e7:	48 8d 3d 62 96 00 00 	lea    rdi,[rip+0x9662]        # c050 <_IO_stdin_used+0x50>
    29ee:	e8 0d fb ff ff       	call   2500 <puts@plt>
    29f3:	8b 05 8b e6 00 00    	mov    eax,DWORD PTR [rip+0xe68b]        # 11084 <total_pkt_captured>
    29f9:	83 c0 01             	add    eax,0x1
    29fc:	89 05 82 e6 00 00    	mov    DWORD PTR [rip+0xe682],eax        # 11084 <total_pkt_captured>
    2a02:	8b 05 38 51 10 00    	mov    eax,DWORD PTR [rip+0x105138]        # 107b40 <pkt_counter>
    2a08:	83 c0 01             	add    eax,0x1
    2a0b:	89 05 2f 51 10 00    	mov    DWORD PTR [rip+0x10512f],eax        # 107b40 <pkt_counter>
    2a11:	8b 15 29 51 10 00    	mov    edx,DWORD PTR [rip+0x105129]        # 107b40 <pkt_counter>
    2a17:	8b 05 83 4e 10 00    	mov    eax,DWORD PTR [rip+0x104e83]        # 1078a0 <clean_delay_pkts>
    2a1d:	39 c2                	cmp    edx,eax
    2a1f:	72 0a                	jb     2a2b <pktmgr+0x68>
    2a21:	c7 05 15 51 10 00 00 	mov    DWORD PTR [rip+0x105115],0x0        # 107b40 <pkt_counter>
    2a28:	00 00 00 
    2a2b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a2f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2a33:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2a37:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2a3b:	0f b7 c0             	movzx  eax,ax
    2a3e:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a43:	74 46                	je     2a8b <pktmgr+0xc8>
    2a45:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a4a:	7f 77                	jg     2ac3 <pktmgr+0x100>
    2a4c:	3d 80 35 00 00       	cmp    eax,0x3580
    2a51:	74 23                	je     2a76 <pktmgr+0xb3>
    2a53:	3d 80 35 00 00       	cmp    eax,0x3580
    2a58:	7f 69                	jg     2ac3 <pktmgr+0x100>
    2a5a:	3d 08 06 00 00       	cmp    eax,0x608
    2a5f:	74 15                	je     2a76 <pktmgr+0xb3>
    2a61:	3d 08 06 00 00       	cmp    eax,0x608
    2a66:	7f 5b                	jg     2ac3 <pktmgr+0x100>
    2a68:	83 f8 08             	cmp    eax,0x8
    2a6b:	74 33                	je     2aa0 <pktmgr+0xdd>
    2a6d:	3d 90 00 00 00       	cmp    eax,0x90
    2a72:	74 41                	je     2ab5 <pktmgr+0xf2>
    2a74:	eb 4d                	jmp    2ac3 <pktmgr+0x100>
    2a76:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a7a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a7e:	48 89 d6             	mov    rsi,rdx
    2a81:	48 89 c7             	mov    rdi,rax
    2a84:	e8 87 00 00 00       	call   2b10 <arpdecode>
    2a89:	eb 7d                	jmp    2b08 <pktmgr+0x145>
    2a8b:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a8f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a93:	48 89 d6             	mov    rsi,rdx
    2a96:	48 89 c7             	mov    rdi,rax
    2a99:	e8 bc 88 00 00       	call   b35a <ip6decode>
    2a9e:	eb 68                	jmp    2b08 <pktmgr+0x145>
    2aa0:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2aa4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2aa8:	48 89 d6             	mov    rsi,rdx
    2aab:	48 89 c7             	mov    rdi,rax
    2aae:	e8 58 0b 00 00       	call   360b <ipv4pktmgr>
    2ab3:	eb 53                	jmp    2b08 <pktmgr+0x145>
    2ab5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2ab9:	48 89 c7             	mov    rdi,rax
    2abc:	e8 43 03 00 00       	call   2e04 <loopback_ctp_decode>
    2ac1:	eb 45                	jmp    2b08 <pktmgr+0x145>
    2ac3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ac7:	48 89 c7             	mov    rdi,rax
    2aca:	e8 f6 04 00 00       	call   2fc5 <uc_mac_ntoa>
    2acf:	48 89 c3             	mov    rbx,rax
    2ad2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ad6:	48 83 c0 06          	add    rax,0x6
    2ada:	48 89 c7             	mov    rdi,rax
    2add:	e8 e3 04 00 00       	call   2fc5 <uc_mac_ntoa>
    2ae2:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2ae8:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2aee:	48 89 d9             	mov    rcx,rbx
    2af1:	48 89 c2             	mov    rdx,rax
    2af4:	48 8d 35 9d 95 00 00 	lea    rsi,[rip+0x959d]        # c098 <_IO_stdin_used+0x98>
    2afb:	48 8d 3d c8 95 00 00 	lea    rdi,[rip+0x95c8]        # c0ca <_IO_stdin_used+0xca>
    2b02:	e8 a1 68 00 00       	call   93a8 <lfprintf>
    2b07:	90                   	nop
    2b08:	90                   	nop
    2b09:	48 83 c4 38          	add    rsp,0x38
    2b0d:	5b                   	pop    rbx
    2b0e:	5d                   	pop    rbp
    2b0f:	c3                   	ret    

0000000000002b10 <arpdecode>:
    2b10:	f3 0f 1e fa          	endbr64 
    2b14:	55                   	push   rbp
    2b15:	48 89 e5             	mov    rbp,rsp
    2b18:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2b1f:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2b26:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2b2d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2b34:	00 00 
    2b36:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2b3a:	31 c0                	xor    eax,eax
    2b3c:	0f b6 05 f6 4d 10 00 	movzx  eax,BYTE PTR [rip+0x104df6]        # 107939 <packet_print>
    2b43:	84 c0                	test   al,al
    2b45:	74 18                	je     2b5f <arpdecode+0x4f>
    2b47:	48 8d 35 9a 95 00 00 	lea    rsi,[rip+0x959a]        # c0e8 <_IO_stdin_used+0xe8>
    2b4e:	48 8d 3d 9b 95 00 00 	lea    rdi,[rip+0x959b]        # c0f0 <_IO_stdin_used+0xf0>
    2b55:	b8 00 00 00 00       	mov    eax,0x0
    2b5a:	e8 61 fa ff ff       	call   25c0 <printf@plt>
    2b5f:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2b66:	48 83 c0 0e          	add    rax,0xe
    2b6a:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2b71:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2b78:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2b7c:	0f b7 c0             	movzx  eax,ax
    2b7f:	3d 00 18 00 00       	cmp    eax,0x1800
    2b84:	74 35                	je     2bbb <arpdecode+0xab>
    2b86:	3d 00 18 00 00       	cmp    eax,0x1800
    2b8b:	0f 8f 1d 02 00 00    	jg     2dae <arpdecode+0x29e>
    2b91:	3d 00 02 00 00       	cmp    eax,0x200
    2b96:	0f 84 eb 00 00 00    	je     2c87 <arpdecode+0x177>
    2b9c:	3d 00 02 00 00       	cmp    eax,0x200
    2ba1:	0f 8f 07 02 00 00    	jg     2dae <arpdecode+0x29e>
    2ba7:	83 f8 02             	cmp    eax,0x2
    2baa:	0f 84 d7 00 00 00    	je     2c87 <arpdecode+0x177>
    2bb0:	3d 00 01 00 00       	cmp    eax,0x100
    2bb5:	0f 85 f3 01 00 00    	jne    2dae <arpdecode+0x29e>
    2bbb:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2bc2:	48 83 c0 18          	add    rax,0x18
    2bc6:	48 89 c7             	mov    rdi,rax
    2bc9:	e8 9d 04 00 00       	call   306b <u8_ipv4_ntoa>
    2bce:	48 89 c1             	mov    rcx,rax
    2bd1:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2bd5:	ba 20 00 00 00       	mov    edx,0x20
    2bda:	48 89 ce             	mov    rsi,rcx
    2bdd:	48 89 c7             	mov    rdi,rax
    2be0:	e8 cb f8 ff ff       	call   24b0 <strncpy@plt>
    2be5:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2bec:	48 83 c0 0e          	add    rax,0xe
    2bf0:	48 89 c7             	mov    rdi,rax
    2bf3:	e8 73 04 00 00       	call   306b <u8_ipv4_ntoa>
    2bf8:	48 89 c1             	mov    rcx,rax
    2bfb:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2bff:	ba 20 00 00 00       	mov    edx,0x20
    2c04:	48 89 ce             	mov    rsi,rcx
    2c07:	48 89 c7             	mov    rdi,rax
    2c0a:	e8 a1 f8 ff ff       	call   24b0 <strncpy@plt>
    2c0f:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c13:	ba 05 00 00 00       	mov    edx,0x5
    2c18:	48 8d 35 d4 94 00 00 	lea    rsi,[rip+0x94d4]        # c0f3 <_IO_stdin_used+0xf3>
    2c1f:	48 89 c7             	mov    rdi,rax
    2c22:	e8 99 f8 ff ff       	call   24c0 <strncmp@plt>
    2c27:	85 c0                	test   eax,eax
    2c29:	75 2c                	jne    2c57 <arpdecode+0x147>
    2c2b:	0f b6 05 07 4d 10 00 	movzx  eax,BYTE PTR [rip+0x104d07]        # 107939 <packet_print>
    2c32:	84 c0                	test   al,al
    2c34:	0f 84 97 01 00 00    	je     2dd1 <arpdecode+0x2c1>
    2c3a:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c3e:	48 89 c6             	mov    rsi,rax
    2c41:	48 8d 3d b8 94 00 00 	lea    rdi,[rip+0x94b8]        # c100 <_IO_stdin_used+0x100>
    2c48:	b8 00 00 00 00       	mov    eax,0x0
    2c4d:	e8 6e f9 ff ff       	call   25c0 <printf@plt>
    2c52:	e9 7a 01 00 00       	jmp    2dd1 <arpdecode+0x2c1>
    2c57:	0f b6 05 db 4c 10 00 	movzx  eax,BYTE PTR [rip+0x104cdb]        # 107939 <packet_print>
    2c5e:	84 c0                	test   al,al
    2c60:	0f 84 6b 01 00 00    	je     2dd1 <arpdecode+0x2c1>
    2c66:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2c6a:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c6e:	48 89 c6             	mov    rsi,rax
    2c71:	48 8d 3d a8 94 00 00 	lea    rdi,[rip+0x94a8]        # c120 <_IO_stdin_used+0x120>
    2c78:	b8 00 00 00 00       	mov    eax,0x0
    2c7d:	e8 3e f9 ff ff       	call   25c0 <printf@plt>
    2c82:	e9 4a 01 00 00       	jmp    2dd1 <arpdecode+0x2c1>
    2c87:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c8e:	48 83 c0 08          	add    rax,0x8
    2c92:	48 89 c7             	mov    rdi,rax
    2c95:	e8 7d 02 00 00       	call   2f17 <mac_ntoa>
    2c9a:	48 89 c1             	mov    rcx,rax
    2c9d:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2ca1:	ba 40 00 00 00       	mov    edx,0x40
    2ca6:	48 89 ce             	mov    rsi,rcx
    2ca9:	48 89 c7             	mov    rdi,rax
    2cac:	e8 ff f7 ff ff       	call   24b0 <strncpy@plt>
    2cb1:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2cb8:	48 83 c0 0e          	add    rax,0xe
    2cbc:	48 89 c7             	mov    rdi,rax
    2cbf:	e8 a7 03 00 00       	call   306b <u8_ipv4_ntoa>
    2cc4:	48 89 c1             	mov    rcx,rax
    2cc7:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2ccb:	ba 20 00 00 00       	mov    edx,0x20
    2cd0:	48 89 ce             	mov    rsi,rcx
    2cd3:	48 89 c7             	mov    rdi,rax
    2cd6:	e8 d5 f7 ff ff       	call   24b0 <strncpy@plt>
    2cdb:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cdf:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2ce3:	48 89 d6             	mov    rsi,rdx
    2ce6:	48 89 c7             	mov    rdi,rax
    2ce9:	e8 e4 50 00 00       	call   7dd2 <entry_exists>
    2cee:	83 f8 ff             	cmp    eax,0xffffffff
    2cf1:	74 15                	je     2d08 <arpdecode+0x1f8>
    2cf3:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cf7:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cfb:	48 89 d6             	mov    rsi,rdx
    2cfe:	48 89 c7             	mov    rdi,rax
    2d01:	e8 79 4f 00 00       	call   7c7f <compare_entries>
    2d06:	eb 7d                	jmp    2d85 <arpdecode+0x275>
    2d08:	0f b6 05 11 4c 10 00 	movzx  eax,BYTE PTR [rip+0x104c11]        # 107920 <use_sqlite>
    2d0f:	84 c0                	test   al,al
    2d11:	74 5f                	je     2d72 <arpdecode+0x262>
    2d13:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2d1a:	00 00 00 
    2d1d:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2d21:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2d28:	48 89 d6             	mov    rsi,rdx
    2d2b:	48 89 c7             	mov    rdi,rax
    2d2e:	e8 9d f7 ff ff       	call   24d0 <strcpy@plt>
    2d33:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d37:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d3e:	48 83 c2 10          	add    rdx,0x10
    2d42:	48 89 c6             	mov    rsi,rax
    2d45:	48 89 d7             	mov    rdi,rdx
    2d48:	e8 83 f7 ff ff       	call   24d0 <strcpy@plt>
    2d4d:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d54:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2d5b:	48 89 d1             	mov    rcx,rdx
    2d5e:	48 8d 15 7b 55 00 00 	lea    rdx,[rip+0x557b]        # 82e0 <update_db>
    2d65:	be 00 00 00 00       	mov    esi,0x0
    2d6a:	48 89 c7             	mov    rdi,rax
    2d6d:	e8 1e f7 ff ff       	call   2490 <pthread_create@plt>
    2d72:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d76:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d7a:	48 89 d6             	mov    rsi,rdx
    2d7d:	48 89 c7             	mov    rdi,rax
    2d80:	e8 d9 4f 00 00       	call   7d5e <add_entry>
    2d85:	0f b6 05 ad 4b 10 00 	movzx  eax,BYTE PTR [rip+0x104bad]        # 107939 <packet_print>
    2d8c:	84 c0                	test   al,al
    2d8e:	74 44                	je     2dd4 <arpdecode+0x2c4>
    2d90:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d94:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d98:	48 89 c6             	mov    rsi,rax
    2d9b:	48 8d 3d a6 93 00 00 	lea    rdi,[rip+0x93a6]        # c148 <_IO_stdin_used+0x148>
    2da2:	b8 00 00 00 00       	mov    eax,0x0
    2da7:	e8 14 f8 ff ff       	call   25c0 <printf@plt>
    2dac:	eb 26                	jmp    2dd4 <arpdecode+0x2c4>
    2dae:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2db5:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2db9:	0f b7 c0             	movzx  eax,ax
    2dbc:	89 c6                	mov    esi,eax
    2dbe:	48 8d 3d a2 93 00 00 	lea    rdi,[rip+0x93a2]        # c167 <_IO_stdin_used+0x167>
    2dc5:	b8 00 00 00 00       	mov    eax,0x0
    2dca:	e8 f1 f7 ff ff       	call   25c0 <printf@plt>
    2dcf:	eb 04                	jmp    2dd5 <arpdecode+0x2c5>
    2dd1:	90                   	nop
    2dd2:	eb 01                	jmp    2dd5 <arpdecode+0x2c5>
    2dd4:	90                   	nop
    2dd5:	48 8d 35 a3 93 00 00 	lea    rsi,[rip+0x93a3]        # c17f <_IO_stdin_used+0x17f>
    2ddc:	48 8d 3d 0d 93 00 00 	lea    rdi,[rip+0x930d]        # c0f0 <_IO_stdin_used+0xf0>
    2de3:	b8 00 00 00 00       	mov    eax,0x0
    2de8:	e8 d3 f7 ff ff       	call   25c0 <printf@plt>
    2ded:	90                   	nop
    2dee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2df2:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    2df9:	00 00 
    2dfb:	74 05                	je     2e02 <arpdecode+0x2f2>
    2dfd:	e8 7e f7 ff ff       	call   2580 <__stack_chk_fail@plt>
    2e02:	c9                   	leave  
    2e03:	c3                   	ret    

0000000000002e04 <loopback_ctp_decode>:
    2e04:	f3 0f 1e fa          	endbr64 
    2e08:	55                   	push   rbp
    2e09:	48 89 e5             	mov    rbp,rsp
    2e0c:	48 83 ec 60          	sub    rsp,0x60
    2e10:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2e14:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2e1b:	00 00 
    2e1d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2e21:	31 c0                	xor    eax,eax
    2e23:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e27:	48 83 c0 0e          	add    rax,0xe
    2e2b:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2e2f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e33:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2e37:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e3b:	48 83 c0 06          	add    rax,0x6
    2e3f:	48 89 c7             	mov    rdi,rax
    2e42:	e8 7e 01 00 00       	call   2fc5 <uc_mac_ntoa>
    2e47:	48 89 c1             	mov    rcx,rax
    2e4a:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e4e:	ba 18 00 00 00       	mov    edx,0x18
    2e53:	48 89 ce             	mov    rsi,rcx
    2e56:	48 89 c7             	mov    rdi,rax
    2e59:	e8 52 f6 ff ff       	call   24b0 <strncpy@plt>
    2e5e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e62:	48 89 c7             	mov    rdi,rax
    2e65:	e8 5b 01 00 00       	call   2fc5 <uc_mac_ntoa>
    2e6a:	48 89 c1             	mov    rcx,rax
    2e6d:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2e71:	ba 18 00 00 00       	mov    edx,0x18
    2e76:	48 89 ce             	mov    rsi,rcx
    2e79:	48 89 c7             	mov    rdi,rax
    2e7c:	e8 2f f6 ff ff       	call   24b0 <strncpy@plt>
    2e81:	0f b6 05 b1 4a 10 00 	movzx  eax,BYTE PTR [rip+0x104ab1]        # 107939 <packet_print>
    2e88:	84 c0                	test   al,al
    2e8a:	74 1c                	je     2ea8 <loopback_ctp_decode+0xa4>
    2e8c:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2e90:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e94:	48 89 c6             	mov    rsi,rax
    2e97:	48 8d 3d e6 92 00 00 	lea    rdi,[rip+0x92e6]        # c184 <_IO_stdin_used+0x184>
    2e9e:	b8 00 00 00 00       	mov    eax,0x0
    2ea3:	e8 18 f7 ff ff       	call   25c0 <printf@plt>
    2ea8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2eac:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2eb0:	0f b7 c0             	movzx  eax,ax
    2eb3:	83 f8 01             	cmp    eax,0x1
    2eb6:	75 19                	jne    2ed1 <loopback_ctp_decode+0xcd>
    2eb8:	0f b6 05 7a 4a 10 00 	movzx  eax,BYTE PTR [rip+0x104a7a]        # 107939 <packet_print>
    2ebf:	84 c0                	test   al,al
    2ec1:	74 39                	je     2efc <loopback_ctp_decode+0xf8>
    2ec3:	48 8d 3d c8 92 00 00 	lea    rdi,[rip+0x92c8]        # c192 <_IO_stdin_used+0x192>
    2eca:	e8 31 f6 ff ff       	call   2500 <puts@plt>
    2ecf:	eb 2b                	jmp    2efc <loopback_ctp_decode+0xf8>
    2ed1:	0f b6 05 61 4a 10 00 	movzx  eax,BYTE PTR [rip+0x104a61]        # 107939 <packet_print>
    2ed8:	84 c0                	test   al,al
    2eda:	74 23                	je     2eff <loopback_ctp_decode+0xfb>
    2edc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2ee0:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2ee4:	0f b7 c0             	movzx  eax,ax
    2ee7:	89 c6                	mov    esi,eax
    2ee9:	48 8d 3d aa 92 00 00 	lea    rdi,[rip+0x92aa]        # c19a <_IO_stdin_used+0x19a>
    2ef0:	b8 00 00 00 00       	mov    eax,0x0
    2ef5:	e8 c6 f6 ff ff       	call   25c0 <printf@plt>
    2efa:	eb 03                	jmp    2eff <loopback_ctp_decode+0xfb>
    2efc:	90                   	nop
    2efd:	eb 01                	jmp    2f00 <loopback_ctp_decode+0xfc>
    2eff:	90                   	nop
    2f00:	90                   	nop
    2f01:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f05:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    2f0c:	00 00 
    2f0e:	74 05                	je     2f15 <loopback_ctp_decode+0x111>
    2f10:	e8 6b f6 ff ff       	call   2580 <__stack_chk_fail@plt>
    2f15:	c9                   	leave  
    2f16:	c3                   	ret    

0000000000002f17 <mac_ntoa>:
    2f17:	f3 0f 1e fa          	endbr64 
    2f1b:	55                   	push   rbp
    2f1c:	48 89 e5             	mov    rbp,rsp
    2f1f:	48 83 ec 20          	sub    rsp,0x20
    2f23:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2f27:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2f2b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2f2f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f33:	48 83 c0 05          	add    rax,0x5
    2f37:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f3a:	0f b6 f0             	movzx  esi,al
    2f3d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f41:	48 83 c0 04          	add    rax,0x4
    2f45:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f48:	0f b6 c8             	movzx  ecx,al
    2f4b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f4f:	48 83 c0 03          	add    rax,0x3
    2f53:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f56:	0f b6 d0             	movzx  edx,al
    2f59:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f5d:	48 83 c0 02          	add    rax,0x2
    2f61:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f64:	44 0f b6 c8          	movzx  r9d,al
    2f68:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f6c:	48 83 c0 01          	add    rax,0x1
    2f70:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f73:	44 0f b6 c0          	movzx  r8d,al
    2f77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f7b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f7e:	0f b6 c0             	movzx  eax,al
    2f81:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2f88:	00 00 
    2f8a:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    2f91:	48 83 ec 08          	sub    rsp,0x8
    2f95:	56                   	push   rsi
    2f96:	51                   	push   rcx
    2f97:	52                   	push   rdx
    2f98:	89 c1                	mov    ecx,eax
    2f9a:	48 8d 15 17 92 00 00 	lea    rdx,[rip+0x9217]        # c1b8 <_IO_stdin_used+0x1b8>
    2fa1:	be 80 00 00 00       	mov    esi,0x80
    2fa6:	b8 00 00 00 00       	mov    eax,0x0
    2fab:	e8 20 f6 ff ff       	call   25d0 <snprintf@plt>
    2fb0:	48 83 c4 20          	add    rsp,0x20
    2fb4:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    2fbb:	00 00 
    2fbd:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    2fc3:	c9                   	leave  
    2fc4:	c3                   	ret    

0000000000002fc5 <uc_mac_ntoa>:
    2fc5:	f3 0f 1e fa          	endbr64 
    2fc9:	55                   	push   rbp
    2fca:	48 89 e5             	mov    rbp,rsp
    2fcd:	48 83 ec 10          	sub    rsp,0x10
    2fd1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2fd5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fd9:	48 83 c0 05          	add    rax,0x5
    2fdd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fe0:	0f b6 f0             	movzx  esi,al
    2fe3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fe7:	48 83 c0 04          	add    rax,0x4
    2feb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fee:	0f b6 c8             	movzx  ecx,al
    2ff1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ff5:	48 83 c0 03          	add    rax,0x3
    2ff9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ffc:	0f b6 d0             	movzx  edx,al
    2fff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3003:	48 83 c0 02          	add    rax,0x2
    3007:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    300a:	44 0f b6 c8          	movzx  r9d,al
    300e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3012:	48 83 c0 01          	add    rax,0x1
    3016:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3019:	44 0f b6 c0          	movzx  r8d,al
    301d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3021:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3024:	0f b6 c0             	movzx  eax,al
    3027:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    302e:	00 00 
    3030:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    3037:	48 83 ec 08          	sub    rsp,0x8
    303b:	56                   	push   rsi
    303c:	51                   	push   rcx
    303d:	52                   	push   rdx
    303e:	89 c1                	mov    ecx,eax
    3040:	48 8d 15 71 91 00 00 	lea    rdx,[rip+0x9171]        # c1b8 <_IO_stdin_used+0x1b8>
    3047:	be 80 00 00 00       	mov    esi,0x80
    304c:	b8 00 00 00 00       	mov    eax,0x0
    3051:	e8 7a f5 ff ff       	call   25d0 <snprintf@plt>
    3056:	48 83 c4 20          	add    rsp,0x20
    305a:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3061:	00 00 
    3063:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3069:	c9                   	leave  
    306a:	c3                   	ret    

000000000000306b <u8_ipv4_ntoa>:
    306b:	f3 0f 1e fa          	endbr64 
    306f:	55                   	push   rbp
    3070:	48 89 e5             	mov    rbp,rsp
    3073:	48 83 ec 20          	sub    rsp,0x20
    3077:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    307b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    307f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3083:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3087:	48 83 c0 03          	add    rax,0x3
    308b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    308e:	0f b6 d0             	movzx  edx,al
    3091:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3095:	48 83 c0 02          	add    rax,0x2
    3099:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    309c:	44 0f b6 c0          	movzx  r8d,al
    30a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30a4:	48 83 c0 01          	add    rax,0x1
    30a8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30ab:	0f b6 f0             	movzx  esi,al
    30ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30b2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30b5:	0f b6 c0             	movzx  eax,al
    30b8:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    30bf:	00 00 
    30c1:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    30c8:	48 83 ec 08          	sub    rsp,0x8
    30cc:	52                   	push   rdx
    30cd:	45 89 c1             	mov    r9d,r8d
    30d0:	41 89 f0             	mov    r8d,esi
    30d3:	89 c1                	mov    ecx,eax
    30d5:	48 8d 15 fa 90 00 00 	lea    rdx,[rip+0x90fa]        # c1d6 <_IO_stdin_used+0x1d6>
    30dc:	be 80 00 00 00       	mov    esi,0x80
    30e1:	b8 00 00 00 00       	mov    eax,0x0
    30e6:	e8 e5 f4 ff ff       	call   25d0 <snprintf@plt>
    30eb:	48 83 c4 10          	add    rsp,0x10
    30ef:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    30f6:	00 00 
    30f8:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    30fe:	c9                   	leave  
    30ff:	c3                   	ret    

0000000000003100 <ipv4_ntoa>:
    3100:	f3 0f 1e fa          	endbr64 
    3104:	55                   	push   rbp
    3105:	48 89 e5             	mov    rbp,rsp
    3108:	48 83 ec 20          	sub    rsp,0x20
    310c:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    310f:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    3113:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3117:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    311b:	48 83 c0 03          	add    rax,0x3
    311f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3122:	0f b6 d0             	movzx  edx,al
    3125:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3129:	48 83 c0 02          	add    rax,0x2
    312d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3130:	44 0f b6 c0          	movzx  r8d,al
    3134:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3138:	48 83 c0 01          	add    rax,0x1
    313c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    313f:	0f b6 f0             	movzx  esi,al
    3142:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3146:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3149:	0f b6 c0             	movzx  eax,al
    314c:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    3153:	00 00 
    3155:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    315c:	48 83 ec 08          	sub    rsp,0x8
    3160:	52                   	push   rdx
    3161:	45 89 c1             	mov    r9d,r8d
    3164:	41 89 f0             	mov    r8d,esi
    3167:	89 c1                	mov    ecx,eax
    3169:	48 8d 15 66 90 00 00 	lea    rdx,[rip+0x9066]        # c1d6 <_IO_stdin_used+0x1d6>
    3170:	be 80 00 00 00       	mov    esi,0x80
    3175:	b8 00 00 00 00       	mov    eax,0x0
    317a:	e8 51 f4 ff ff       	call   25d0 <snprintf@plt>
    317f:	48 83 c4 10          	add    rsp,0x10
    3183:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    318a:	00 00 
    318c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3192:	c9                   	leave  
    3193:	c3                   	ret    

0000000000003194 <inet6_ntoa>:
    3194:	f3 0f 1e fa          	endbr64 
    3198:	55                   	push   rbp
    3199:	48 89 e5             	mov    rbp,rsp
    319c:	41 57                	push   r15
    319e:	41 56                	push   r14
    31a0:	41 55                	push   r13
    31a2:	41 54                	push   r12
    31a4:	53                   	push   rbx
    31a5:	48 83 ec 38          	sub    rsp,0x38
    31a9:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    31ad:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    31b4:	00 00 
    31b6:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    31ba:	31 c0                	xor    eax,eax
    31bc:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    31c3:	00 00 
    31c5:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    31cb:	ba 80 00 00 00       	mov    edx,0x80
    31d0:	be 00 00 00 00       	mov    esi,0x0
    31d5:	48 89 c7             	mov    rdi,rax
    31d8:	e8 23 f4 ff ff       	call   2600 <memset@plt>
    31dd:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    31e4:	00 
    31e5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31e9:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    31ed:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31f1:	48 83 c0 0f          	add    rax,0xf
    31f5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31f8:	0f b6 c8             	movzx  ecx,al
    31fb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31ff:	48 83 c0 0e          	add    rax,0xe
    3203:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3206:	0f b6 f8             	movzx  edi,al
    3209:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    320d:	48 83 c0 0d          	add    rax,0xd
    3211:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3214:	0f b6 c0             	movzx  eax,al
    3217:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    321a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    321e:	48 83 c0 0c          	add    rax,0xc
    3222:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3225:	0f b6 d8             	movzx  ebx,al
    3228:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    322b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    322f:	48 83 c0 0b          	add    rax,0xb
    3233:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3236:	44 0f b6 f8          	movzx  r15d,al
    323a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    323e:	48 83 c0 0a          	add    rax,0xa
    3242:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3245:	44 0f b6 f0          	movzx  r14d,al
    3249:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    324d:	48 83 c0 09          	add    rax,0x9
    3251:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3254:	44 0f b6 e8          	movzx  r13d,al
    3258:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    325c:	48 83 c0 08          	add    rax,0x8
    3260:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3263:	44 0f b6 e0          	movzx  r12d,al
    3267:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    326b:	48 83 c0 07          	add    rax,0x7
    326f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3272:	0f b6 d8             	movzx  ebx,al
    3275:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3279:	48 83 c0 06          	add    rax,0x6
    327d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3280:	44 0f b6 d8          	movzx  r11d,al
    3284:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3288:	48 83 c0 05          	add    rax,0x5
    328c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    328f:	44 0f b6 d0          	movzx  r10d,al
    3293:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3297:	48 83 c0 04          	add    rax,0x4
    329b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    329e:	44 0f b6 c8          	movzx  r9d,al
    32a2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32a6:	48 83 c0 03          	add    rax,0x3
    32aa:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ad:	44 0f b6 c0          	movzx  r8d,al
    32b1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32b5:	48 83 c0 02          	add    rax,0x2
    32b9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32bc:	0f b6 d0             	movzx  edx,al
    32bf:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    32c2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32c6:	48 83 c0 01          	add    rax,0x1
    32ca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32cd:	0f b6 f0             	movzx  esi,al
    32d0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32d4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32d7:	0f b6 d0             	movzx  edx,al
    32da:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    32e1:	00 00 
    32e3:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    32e9:	48 83 ec 08          	sub    rsp,0x8
    32ed:	51                   	push   rcx
    32ee:	57                   	push   rdi
    32ef:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    32f2:	51                   	push   rcx
    32f3:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    32f6:	51                   	push   rcx
    32f7:	41 57                	push   r15
    32f9:	41 56                	push   r14
    32fb:	41 55                	push   r13
    32fd:	41 54                	push   r12
    32ff:	53                   	push   rbx
    3300:	41 53                	push   r11
    3302:	41 52                	push   r10
    3304:	41 51                	push   r9
    3306:	41 50                	push   r8
    3308:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    330c:	41 89 f0             	mov    r8d,esi
    330f:	89 d1                	mov    ecx,edx
    3311:	48 8d 15 d0 8e 00 00 	lea    rdx,[rip+0x8ed0]        # c1e8 <_IO_stdin_used+0x1e8>
    3318:	be 80 00 00 00       	mov    esi,0x80
    331d:	48 89 c7             	mov    rdi,rax
    3320:	b8 00 00 00 00       	mov    eax,0x0
    3325:	e8 a6 f2 ff ff       	call   25d0 <snprintf@plt>
    332a:	48 83 c4 70          	add    rsp,0x70
    332e:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3335:	00 00 
    3337:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    333d:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    3341:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    3348:	00 00 
    334a:	74 05                	je     3351 <inet6_ntoa+0x1bd>
    334c:	e8 2f f2 ff ff       	call   2580 <__stack_chk_fail@plt>
    3351:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    3355:	5b                   	pop    rbx
    3356:	41 5c                	pop    r12
    3358:	41 5d                	pop    r13
    335a:	41 5e                	pop    r14
    335c:	41 5f                	pop    r15
    335e:	5d                   	pop    rbp
    335f:	c3                   	ret    

0000000000003360 <get_formated_time>:
    3360:	f3 0f 1e fa          	endbr64 
    3364:	55                   	push   rbp
    3365:	48 89 e5             	mov    rbp,rsp
    3368:	53                   	push   rbx
    3369:	48 83 ec 58          	sub    rsp,0x58
    336d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3374:	00 00 
    3376:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    337a:	31 c0                	xor    eax,eax
    337c:	bf ff 00 00 00       	mov    edi,0xff
    3381:	e8 7a f3 ff ff       	call   2700 <malloc@plt>
    3386:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    338a:	bf 00 00 00 00       	mov    edi,0x0
    338f:	e8 3c f3 ff ff       	call   26d0 <time@plt>
    3394:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3398:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    339c:	48 89 c7             	mov    rdi,rax
    339f:	e8 fc f0 ff ff       	call   24a0 <localtime@plt>
    33a4:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    33a7:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    33ab:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    33af:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    33b3:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    33b7:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    33bb:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    33bf:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    33c3:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    33c7:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    33cb:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    33cf:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    33d3:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    33d7:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    33db:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    33de:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    33e1:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    33e5:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    33e9:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    33ec:	8d 48 01             	lea    ecx,[rax+0x1]
    33ef:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    33f2:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    33f8:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    33fc:	57                   	push   rdi
    33fd:	56                   	push   rsi
    33fe:	48 8d 35 2b 8e 00 00 	lea    rsi,[rip+0x8e2b]        # c230 <_IO_stdin_used+0x230>
    3405:	48 89 c7             	mov    rdi,rax
    3408:	b8 00 00 00 00       	mov    eax,0x0
    340d:	e8 1e f4 ff ff       	call   2830 <sprintf@plt>
    3412:	48 83 c4 10          	add    rsp,0x10
    3416:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    341a:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    341e:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    3425:	00 00 
    3427:	74 05                	je     342e <get_formated_time+0xce>
    3429:	e8 52 f1 ff ff       	call   2580 <__stack_chk_fail@plt>
    342e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3432:	c9                   	leave  
    3433:	c3                   	ret    

0000000000003434 <cb_get_formatted_time>:
    3434:	f3 0f 1e fa          	endbr64 
    3438:	55                   	push   rbp
    3439:	48 89 e5             	mov    rbp,rsp
    343c:	53                   	push   rbx
    343d:	48 83 ec 68          	sub    rsp,0x68
    3441:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3445:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    344c:	00 00 
    344e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3452:	31 c0                	xor    eax,eax
    3454:	bf 00 00 00 00       	mov    edi,0x0
    3459:	e8 72 f2 ff ff       	call   26d0 <time@plt>
    345e:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3462:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    3466:	48 89 c7             	mov    rdi,rax
    3469:	e8 32 f0 ff ff       	call   24a0 <localtime@plt>
    346e:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3471:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    3475:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3479:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    347d:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3481:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3485:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3489:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    348d:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3491:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3495:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3499:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    349d:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    34a1:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    34a5:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    34a8:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    34ab:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    34af:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    34b3:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    34b6:	8d 48 01             	lea    ecx,[rax+0x1]
    34b9:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    34bc:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    34c2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    34c6:	57                   	push   rdi
    34c7:	56                   	push   rsi
    34c8:	48 8d 35 61 8d 00 00 	lea    rsi,[rip+0x8d61]        # c230 <_IO_stdin_used+0x230>
    34cf:	48 89 c7             	mov    rdi,rax
    34d2:	b8 00 00 00 00       	mov    eax,0x0
    34d7:	e8 54 f3 ff ff       	call   2830 <sprintf@plt>
    34dc:	48 83 c4 10          	add    rsp,0x10
    34e0:	90                   	nop
    34e1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34e5:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    34ec:	00 00 
    34ee:	74 05                	je     34f5 <cb_get_formatted_time+0xc1>
    34f0:	e8 8b f0 ff ff       	call   2580 <__stack_chk_fail@plt>
    34f5:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    34f9:	c9                   	leave  
    34fa:	c3                   	ret    

00000000000034fb <strloc>:
    34fb:	f3 0f 1e fa          	endbr64 
    34ff:	55                   	push   rbp
    3500:	48 89 e5             	mov    rbp,rsp
    3503:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    3507:	89 f0                	mov    eax,esi
    3509:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    350c:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    3513:	eb 1e                	jmp    3533 <strloc+0x38>
    3515:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3518:	48 63 d0             	movsxd rdx,eax
    351b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    351f:	48 01 d0             	add    rax,rdx
    3522:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3525:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    3528:	75 05                	jne    352f <strloc+0x34>
    352a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    352d:	eb 1d                	jmp    354c <strloc+0x51>
    352f:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    3533:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3536:	48 63 d0             	movsxd rdx,eax
    3539:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    353d:	48 01 d0             	add    rax,rdx
    3540:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3543:	84 c0                	test   al,al
    3545:	75 ce                	jne    3515 <strloc+0x1a>
    3547:	b8 ff ff ff ff       	mov    eax,0xffffffff
    354c:	5d                   	pop    rbp
    354d:	c3                   	ret    

000000000000354e <fail>:
    354e:	f3 0f 1e fa          	endbr64 
    3552:	55                   	push   rbp
    3553:	48 89 e5             	mov    rbp,rsp
    3556:	48 83 ec 10          	sub    rsp,0x10
    355a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    355e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    3562:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    3566:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    356a:	48 89 c6             	mov    rsi,rax
    356d:	48 8d 3d d8 8c 00 00 	lea    rdi,[rip+0x8cd8]        # c24c <_IO_stdin_used+0x24c>
    3574:	b8 00 00 00 00       	mov    eax,0x0
    3579:	e8 42 f0 ff ff       	call   25c0 <printf@plt>
    357e:	90                   	nop
    357f:	c9                   	leave  
    3580:	c3                   	ret    

0000000000003581 <char_is_printable>:
    3581:	f3 0f 1e fa          	endbr64 
    3585:	55                   	push   rbp
    3586:	48 89 e5             	mov    rbp,rsp
    3589:	89 f8                	mov    eax,edi
    358b:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    358e:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    3592:	7f 07                	jg     359b <char_is_printable+0x1a>
    3594:	b8 00 00 00 00       	mov    eax,0x0
    3599:	eb 05                	jmp    35a0 <char_is_printable+0x1f>
    359b:	b8 01 00 00 00       	mov    eax,0x1
    35a0:	5d                   	pop    rbp
    35a1:	c3                   	ret    

00000000000035a2 <test_string_arr_print>:
    35a2:	f3 0f 1e fa          	endbr64 
    35a6:	55                   	push   rbp
    35a7:	48 89 e5             	mov    rbp,rsp
    35aa:	53                   	push   rbx
    35ab:	48 83 ec 28          	sub    rsp,0x28
    35af:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    35b3:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    35ba:	eb 2c                	jmp    35e8 <test_string_arr_print+0x46>
    35bc:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    35bf:	48 63 d0             	movsxd rdx,eax
    35c2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    35c6:	48 01 d0             	add    rax,rdx
    35c9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35cc:	0f be c0             	movsx  eax,al
    35cf:	89 c7                	mov    edi,eax
    35d1:	e8 ab ff ff ff       	call   3581 <char_is_printable>
    35d6:	83 f0 01             	xor    eax,0x1
    35d9:	84 c0                	test   al,al
    35db:	74 07                	je     35e4 <test_string_arr_print+0x42>
    35dd:	b8 00 00 00 00       	mov    eax,0x0
    35e2:	eb 20                	jmp    3604 <test_string_arr_print+0x62>
    35e4:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    35e8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    35eb:	48 63 d8             	movsxd rbx,eax
    35ee:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    35f2:	48 89 c7             	mov    rdi,rax
    35f5:	e8 66 ef ff ff       	call   2560 <strlen@plt>
    35fa:	48 39 c3             	cmp    rbx,rax
    35fd:	72 bd                	jb     35bc <test_string_arr_print+0x1a>
    35ff:	b8 01 00 00 00       	mov    eax,0x1
    3604:	48 83 c4 28          	add    rsp,0x28
    3608:	5b                   	pop    rbx
    3609:	5d                   	pop    rbp
    360a:	c3                   	ret    

000000000000360b <ipv4pktmgr>:
    360b:	f3 0f 1e fa          	endbr64 
    360f:	55                   	push   rbp
    3610:	48 89 e5             	mov    rbp,rsp
    3613:	48 81 ec e0 04 00 00 	sub    rsp,0x4e0
    361a:	48 89 bd 28 fb ff ff 	mov    QWORD PTR [rbp-0x4d8],rdi
    3621:	48 89 b5 20 fb ff ff 	mov    QWORD PTR [rbp-0x4e0],rsi
    3628:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    362f:	00 00 
    3631:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3635:	31 c0                	xor    eax,eax
    3637:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    363e:	48 83 c0 0e          	add    rax,0xe
    3642:	48 89 85 48 fb ff ff 	mov    QWORD PTR [rbp-0x4b8],rax
    3649:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3650:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    3653:	89 c7                	mov    edi,eax
    3655:	e8 f6 f1 ff ff       	call   2850 <ntohl@plt>
    365a:	89 85 6c fb ff ff    	mov    DWORD PTR [rbp-0x494],eax
    3660:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3667:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    366a:	89 c7                	mov    edi,eax
    366c:	e8 df f1 ff ff       	call   2850 <ntohl@plt>
    3671:	89 85 68 fb ff ff    	mov    DWORD PTR [rbp-0x498],eax
    3677:	8b 95 68 fb ff ff    	mov    edx,DWORD PTR [rbp-0x498]
    367d:	8b 05 fd 66 10 00    	mov    eax,DWORD PTR [rip+0x1066fd]        # 109d80 <homenetmask>
    3683:	21 d0                	and    eax,edx
    3685:	89 85 3c fb ff ff    	mov    DWORD PTR [rbp-0x4c4],eax
    368b:	8b 95 6c fb ff ff    	mov    edx,DWORD PTR [rbp-0x494]
    3691:	8b 05 e9 66 10 00    	mov    eax,DWORD PTR [rip+0x1066e9]        # 109d80 <homenetmask>
    3697:	21 d0                	and    eax,edx
    3699:	89 85 40 fb ff ff    	mov    DWORD PTR [rbp-0x4c0],eax
    369f:	8b 05 3f 42 10 00    	mov    eax,DWORD PTR [rip+0x10423f]        # 1078e4 <homenet>
    36a5:	39 85 3c fb ff ff    	cmp    DWORD PTR [rbp-0x4c4],eax
    36ab:	75 0c                	jne    36b9 <ipv4pktmgr+0xae>
    36ad:	c7 85 70 fb ff ff 45 	mov    DWORD PTR [rbp-0x490],0x45
    36b4:	00 00 00 
    36b7:	eb 24                	jmp    36dd <ipv4pktmgr+0xd2>
    36b9:	8b 05 25 42 10 00    	mov    eax,DWORD PTR [rip+0x104225]        # 1078e4 <homenet>
    36bf:	39 85 40 fb ff ff    	cmp    DWORD PTR [rbp-0x4c0],eax
    36c5:	75 0c                	jne    36d3 <ipv4pktmgr+0xc8>
    36c7:	c7 85 70 fb ff ff 46 	mov    DWORD PTR [rbp-0x490],0x46
    36ce:	00 00 00 
    36d1:	eb 0a                	jmp    36dd <ipv4pktmgr+0xd2>
    36d3:	c7 85 70 fb ff ff 47 	mov    DWORD PTR [rbp-0x490],0x47
    36da:	00 00 00 
    36dd:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    36e4:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    36e7:	89 85 80 fb ff ff    	mov    DWORD PTR [rbp-0x480],eax
    36ed:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    36f4:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    36fb:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    3702:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    3705:	48 8b 95 28 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d8]
    370c:	48 83 c2 0e          	add    rdx,0xe
    3710:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    3713:	83 e2 0f             	and    edx,0xf
    3716:	0f b6 d2             	movzx  edx,dl
    3719:	c1 e2 02             	shl    edx,0x2
    371c:	29 d0                	sub    eax,edx
    371e:	83 e8 0e             	sub    eax,0xe
    3721:	89 85 44 fb ff ff    	mov    DWORD PTR [rbp-0x4bc],eax
    3727:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    372e:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    3731:	89 c7                	mov    edi,eax
    3733:	e8 c8 f9 ff ff       	call   3100 <ipv4_ntoa>
    3738:	48 89 c1             	mov    rcx,rax
    373b:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3742:	ba 10 00 00 00       	mov    edx,0x10
    3747:	48 89 ce             	mov    rsi,rcx
    374a:	48 89 c7             	mov    rdi,rax
    374d:	e8 5e ed ff ff       	call   24b0 <strncpy@plt>
    3752:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3759:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    375c:	89 c7                	mov    edi,eax
    375e:	e8 9d f9 ff ff       	call   3100 <ipv4_ntoa>
    3763:	48 89 c1             	mov    rcx,rax
    3766:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    376d:	ba 10 00 00 00       	mov    edx,0x10
    3772:	48 89 ce             	mov    rsi,rcx
    3775:	48 89 c7             	mov    rdi,rax
    3778:	e8 33 ed ff ff       	call   24b0 <strncpy@plt>
    377d:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3784:	48 89 c7             	mov    rdi,rax
    3787:	e8 c2 42 00 00       	call   7a4e <init_member>
    378c:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3793:	48 89 c7             	mov    rdi,rax
    3796:	e8 b3 42 00 00       	call   7a4e <init_member>
    379b:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37a2:	48 89 c7             	mov    rdi,rax
    37a5:	e8 49 21 00 00       	call   58f3 <is_blocked_ipv4>
    37aa:	84 c0                	test   al,al
    37ac:	74 44                	je     37f2 <ipv4pktmgr+0x1e7>
    37ae:	b8 00 00 00 00       	mov    eax,0x0
    37b3:	e8 a8 fb ff ff       	call   3360 <get_formated_time>
    37b8:	48 89 c6             	mov    rsi,rax
    37bb:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    37c2:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37c9:	48 89 d1             	mov    rcx,rdx
    37cc:	48 89 f2             	mov    rdx,rsi
    37cf:	48 8d 35 82 8a 00 00 	lea    rsi,[rip+0x8a82]        # c258 <_IO_stdin_used+0x258>
    37d6:	48 89 c7             	mov    rdi,rax
    37d9:	b8 00 00 00 00       	mov    eax,0x0
    37de:	e8 4d f0 ff ff       	call   2830 <sprintf@plt>
    37e3:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37ea:	48 89 c7             	mov    rdi,rax
    37ed:	e8 28 5d 00 00       	call   951a <saprintf>
    37f2:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37f9:	48 89 c7             	mov    rdi,rax
    37fc:	e8 f2 20 00 00       	call   58f3 <is_blocked_ipv4>
    3801:	84 c0                	test   al,al
    3803:	74 44                	je     3849 <ipv4pktmgr+0x23e>
    3805:	b8 00 00 00 00       	mov    eax,0x0
    380a:	e8 51 fb ff ff       	call   3360 <get_formated_time>
    380f:	48 89 c6             	mov    rsi,rax
    3812:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    3819:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3820:	48 89 d1             	mov    rcx,rdx
    3823:	48 89 f2             	mov    rdx,rsi
    3826:	48 8d 35 5b 8a 00 00 	lea    rsi,[rip+0x8a5b]        # c288 <_IO_stdin_used+0x288>
    382d:	48 89 c7             	mov    rdi,rax
    3830:	b8 00 00 00 00       	mov    eax,0x0
    3835:	e8 f6 ef ff ff       	call   2830 <sprintf@plt>
    383a:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3841:	48 89 c7             	mov    rdi,rax
    3844:	e8 d1 5c 00 00       	call   951a <saprintf>
    3849:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3850:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    3857:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    385e:	48 89 85 60 fb ff ff 	mov    QWORD PTR [rbp-0x4a0],rax
    3865:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    386c:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    3870:	66 83 f8 20          	cmp    ax,0x20
    3874:	74 11                	je     3887 <ipv4pktmgr+0x27c>
    3876:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    387d:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    3881:	66 3d 02 01          	cmp    ax,0x102
    3885:	75 66                	jne    38ed <ipv4pktmgr+0x2e2>
    3887:	48 8d 35 22 8a 00 00 	lea    rsi,[rip+0x8a22]        # c2b0 <_IO_stdin_used+0x2b0>
    388e:	48 8d 3d 20 8a 00 00 	lea    rdi,[rip+0x8a20]        # c2b5 <_IO_stdin_used+0x2b5>
    3895:	b8 00 00 00 00       	mov    eax,0x0
    389a:	e8 21 ed ff ff       	call   25c0 <printf@plt>
    389f:	0f b6 05 93 40 10 00 	movzx  eax,BYTE PTR [rip+0x104093]        # 107939 <packet_print>
    38a6:	84 c0                	test   al,al
    38a8:	74 1a                	je     38c4 <ipv4pktmgr+0x2b9>
    38aa:	48 8d 35 12 8a 00 00 	lea    rsi,[rip+0x8a12]        # c2c3 <_IO_stdin_used+0x2c3>
    38b1:	48 8d 3d 10 8a 00 00 	lea    rdi,[rip+0x8a10]        # c2c8 <_IO_stdin_used+0x2c8>
    38b8:	b8 00 00 00 00       	mov    eax,0x0
    38bd:	e8 fe ec ff ff       	call   25c0 <printf@plt>
    38c2:	eb 29                	jmp    38ed <ipv4pktmgr+0x2e2>
    38c4:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    38cb:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38d2:	48 8d 0d ea 89 00 00 	lea    rcx,[rip+0x89ea]        # c2c3 <_IO_stdin_used+0x2c3>
    38d9:	48 89 c6             	mov    rsi,rax
    38dc:	48 8d 3d e8 89 00 00 	lea    rdi,[rip+0x89e8]        # c2cb <_IO_stdin_used+0x2cb>
    38e3:	b8 00 00 00 00       	mov    eax,0x0
    38e8:	e8 d3 ec ff ff       	call   25c0 <printf@plt>
    38ed:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    38f4:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    38f8:	0f b6 c0             	movzx  eax,al
    38fb:	83 f8 11             	cmp    eax,0x11
    38fe:	0f 84 b8 00 00 00    	je     39bc <ipv4pktmgr+0x3b1>
    3904:	83 f8 11             	cmp    eax,0x11
    3907:	0f 8f db 00 00 00    	jg     39e8 <ipv4pktmgr+0x3dd>
    390d:	83 f8 06             	cmp    eax,0x6
    3910:	74 7e                	je     3990 <ipv4pktmgr+0x385>
    3912:	83 f8 06             	cmp    eax,0x6
    3915:	0f 8f cd 00 00 00    	jg     39e8 <ipv4pktmgr+0x3dd>
    391b:	83 f8 01             	cmp    eax,0x1
    391e:	74 0a                	je     392a <ipv4pktmgr+0x31f>
    3920:	83 f8 02             	cmp    eax,0x2
    3923:	74 2d                	je     3952 <ipv4pktmgr+0x347>
    3925:	e9 be 00 00 00       	jmp    39e8 <ipv4pktmgr+0x3dd>
    392a:	c7 85 7c fb ff ff 80 	mov    DWORD PTR [rbp-0x484],0x80
    3931:	00 00 00 
    3934:	48 8d 95 50 fb ff ff 	lea    rdx,[rbp-0x4b0]
    393b:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3942:	48 89 d6             	mov    rsi,rdx
    3945:	48 89 c7             	mov    rdi,rax
    3948:	e8 40 02 00 00       	call   3b8d <ip4_icmp_decode>
    394d:	e9 c7 00 00 00       	jmp    3a19 <ipv4pktmgr+0x40e>
    3952:	c7 85 7c fb ff ff ff 	mov    DWORD PTR [rbp-0x484],0xffffffff
    3959:	ff ff ff 
    395c:	8b 05 de d6 00 00    	mov    eax,DWORD PTR [rip+0xd6de]        # 11040 <total_conversations>
    3962:	83 e8 01             	sub    eax,0x1
    3965:	89 05 d5 d6 00 00    	mov    DWORD PTR [rip+0xd6d5],eax        # 11040 <total_conversations>
    396b:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    3972:	48 8b 8d 58 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x4a8]
    3979:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3980:	48 89 ce             	mov    rsi,rcx
    3983:	48 89 c7             	mov    rdi,rax
    3986:	e8 de 14 00 00       	call   4e69 <ip4_igmp_decode>
    398b:	e9 89 00 00 00       	jmp    3a19 <ipv4pktmgr+0x40e>
    3990:	c7 85 7c fb ff ff 7e 	mov    DWORD PTR [rbp-0x484],0x7e
    3997:	00 00 00 
    399a:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    39a1:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    39a8:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39af:	48 89 ce             	mov    rsi,rcx
    39b2:	48 89 c7             	mov    rdi,rax
    39b5:	e8 17 0a 00 00       	call   43d1 <ip4_tcp_decode>
    39ba:	eb 5d                	jmp    3a19 <ipv4pktmgr+0x40e>
    39bc:	c7 85 7c fb ff ff 7f 	mov    DWORD PTR [rbp-0x484],0x7f
    39c3:	00 00 00 
    39c6:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    39cd:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    39d4:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39db:	48 89 ce             	mov    rsi,rcx
    39de:	48 89 c7             	mov    rdi,rax
    39e1:	e8 2e 13 00 00       	call   4d14 <ip4_udp_decode>
    39e6:	eb 31                	jmp    3a19 <ipv4pktmgr+0x40e>
    39e8:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    39ef:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    39f3:	0f b6 c8             	movzx  ecx,al
    39f6:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    39fd:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3a04:	48 89 c6             	mov    rsi,rax
    3a07:	48 8d 3d ca 88 00 00 	lea    rdi,[rip+0x88ca]        # c2d8 <_IO_stdin_used+0x2d8>
    3a0e:	b8 00 00 00 00       	mov    eax,0x0
    3a13:	e8 a8 eb ff ff       	call   25c0 <printf@plt>
    3a18:	90                   	nop
    3a19:	90                   	nop
    3a1a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3a1e:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    3a25:	00 00 
    3a27:	74 05                	je     3a2e <ipv4pktmgr+0x423>
    3a29:	e8 52 eb ff ff       	call   2580 <__stack_chk_fail@plt>
    3a2e:	c9                   	leave  
    3a2f:	c3                   	ret    

0000000000003a30 <ip6_icmp_decode>:
    3a30:	f3 0f 1e fa          	endbr64 
    3a34:	55                   	push   rbp
    3a35:	48 89 e5             	mov    rbp,rsp
    3a38:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3a3c:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3a40:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3a44:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3a48:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3a4f:	00 00 
    3a51:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3a55:	31 c0                	xor    eax,eax
    3a57:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3a5b:	48 83 c0 36          	add    rax,0x36
    3a5f:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3a63:	0f b6 05 cf 3e 10 00 	movzx  eax,BYTE PTR [rip+0x103ecf]        # 107939 <packet_print>
    3a6a:	84 c0                	test   al,al
    3a6c:	0f 84 04 01 00 00    	je     3b76 <ip6_icmp_decode+0x146>
    3a72:	48 8d 35 87 88 00 00 	lea    rsi,[rip+0x8887]        # c300 <_IO_stdin_used+0x300>
    3a79:	48 8d 3d 86 88 00 00 	lea    rdi,[rip+0x8886]        # c306 <_IO_stdin_used+0x306>
    3a80:	b8 00 00 00 00       	mov    eax,0x0
    3a85:	e8 36 eb ff ff       	call   25c0 <printf@plt>
    3a8a:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3a8e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3a92:	48 89 c6             	mov    rsi,rax
    3a95:	48 8d 3d 6d 88 00 00 	lea    rdi,[rip+0x886d]        # c309 <_IO_stdin_used+0x309>
    3a9c:	b8 00 00 00 00       	mov    eax,0x0
    3aa1:	e8 1a eb ff ff       	call   25c0 <printf@plt>
    3aa6:	48 8d 3d 6b 88 00 00 	lea    rdi,[rip+0x886b]        # c318 <_IO_stdin_used+0x318>
    3aad:	b8 00 00 00 00       	mov    eax,0x0
    3ab2:	e8 09 eb ff ff       	call   25c0 <printf@plt>
    3ab7:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3abb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3abe:	0f b6 c0             	movzx  eax,al
    3ac1:	3d 8f 00 00 00       	cmp    eax,0x8f
    3ac6:	74 68                	je     3b30 <ip6_icmp_decode+0x100>
    3ac8:	3d 8f 00 00 00       	cmp    eax,0x8f
    3acd:	0f 8f 8b 00 00 00    	jg     3b5e <ip6_icmp_decode+0x12e>
    3ad3:	3d 87 00 00 00       	cmp    eax,0x87
    3ad8:	74 77                	je     3b51 <ip6_icmp_decode+0x121>
    3ada:	3d 87 00 00 00       	cmp    eax,0x87
    3adf:	7f 7d                	jg     3b5e <ip6_icmp_decode+0x12e>
    3ae1:	3d 82 00 00 00       	cmp    eax,0x82
    3ae6:	74 56                	je     3b3e <ip6_icmp_decode+0x10e>
    3ae8:	3d 85 00 00 00       	cmp    eax,0x85
    3aed:	75 6f                	jne    3b5e <ip6_icmp_decode+0x12e>
    3aef:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3af3:	48 83 c0 0a          	add    rax,0xa
    3af7:	48 89 c7             	mov    rdi,rax
    3afa:	e8 18 f4 ff ff       	call   2f17 <mac_ntoa>
    3aff:	48 89 c1             	mov    rcx,rax
    3b02:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b06:	ba 40 00 00 00       	mov    edx,0x40
    3b0b:	48 89 ce             	mov    rsi,rcx
    3b0e:	48 89 c7             	mov    rdi,rax
    3b11:	e8 9a e9 ff ff       	call   24b0 <strncpy@plt>
    3b16:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b1a:	48 89 c6             	mov    rsi,rax
    3b1d:	48 8d 3d fd 87 00 00 	lea    rdi,[rip+0x87fd]        # c321 <_IO_stdin_used+0x321>
    3b24:	b8 00 00 00 00       	mov    eax,0x0
    3b29:	e8 92 ea ff ff       	call   25c0 <printf@plt>
    3b2e:	eb 2e                	jmp    3b5e <ip6_icmp_decode+0x12e>
    3b30:	48 8d 3d 09 88 00 00 	lea    rdi,[rip+0x8809]        # c340 <_IO_stdin_used+0x340>
    3b37:	e8 c4 e9 ff ff       	call   2500 <puts@plt>
    3b3c:	eb 20                	jmp    3b5e <ip6_icmp_decode+0x12e>
    3b3e:	48 8d 3d 20 88 00 00 	lea    rdi,[rip+0x8820]        # c365 <_IO_stdin_used+0x365>
    3b45:	b8 00 00 00 00       	mov    eax,0x0
    3b4a:	e8 71 ea ff ff       	call   25c0 <printf@plt>
    3b4f:	eb 0d                	jmp    3b5e <ip6_icmp_decode+0x12e>
    3b51:	48 8d 3d 27 88 00 00 	lea    rdi,[rip+0x8827]        # c37f <_IO_stdin_used+0x37f>
    3b58:	e8 a3 e9 ff ff       	call   2500 <puts@plt>
    3b5d:	90                   	nop
    3b5e:	48 8d 35 30 88 00 00 	lea    rsi,[rip+0x8830]        # c395 <_IO_stdin_used+0x395>
    3b65:	48 8d 3d 9a 87 00 00 	lea    rdi,[rip+0x879a]        # c306 <_IO_stdin_used+0x306>
    3b6c:	b8 00 00 00 00       	mov    eax,0x0
    3b71:	e8 4a ea ff ff       	call   25c0 <printf@plt>
    3b76:	90                   	nop
    3b77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3b7b:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    3b82:	00 00 
    3b84:	74 05                	je     3b8b <ip6_icmp_decode+0x15b>
    3b86:	e8 f5 e9 ff ff       	call   2580 <__stack_chk_fail@plt>
    3b8b:	c9                   	leave  
    3b8c:	c3                   	ret    

0000000000003b8d <ip4_icmp_decode>:
    3b8d:	f3 0f 1e fa          	endbr64 
    3b91:	55                   	push   rbp
    3b92:	48 89 e5             	mov    rbp,rsp
    3b95:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3b9c:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3ba3:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3baa:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3bb1:	00 00 
    3bb3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3bb7:	31 c0                	xor    eax,eax
    3bb9:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bc0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3bc4:	ba 5e 00 00 00       	mov    edx,0x5e
    3bc9:	be 01 00 00 00       	mov    esi,0x1
    3bce:	48 89 c7             	mov    rdi,rax
    3bd1:	e8 92 13 00 00       	call   4f68 <add_ip_addr_or_inc_counter>
    3bd6:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bdd:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3be1:	ba 5e 00 00 00       	mov    edx,0x5e
    3be6:	be 00 00 00 00       	mov    esi,0x0
    3beb:	48 89 c7             	mov    rdi,rax
    3bee:	e8 75 13 00 00       	call   4f68 <add_ip_addr_or_inc_counter>
    3bf3:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bfa:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3bfe:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3c05:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c0c:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c10:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3c17:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c1e:	48 83 c0 22          	add    rax,0x22
    3c22:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3c29:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c30:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3c34:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c3b:	48 89 10             	mov    QWORD PTR [rax],rdx
    3c3e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c45:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3c4c:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    3c50:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c57:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c5a:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3c60:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c67:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c6a:	8d 50 d6             	lea    edx,[rax-0x2a]
    3c6d:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c74:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3c77:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3c7e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3c81:	3c 08                	cmp    al,0x8
    3c83:	0f 85 55 01 00 00    	jne    3dde <ip4_icmp_decode+0x251>
    3c89:	8b 05 59 3c 10 00    	mov    eax,DWORD PTR [rip+0x103c59]        # 1078e8 <strict_nmap_host_alive_check>
    3c8f:	83 f8 01             	cmp    eax,0x1
    3c92:	0f 85 46 01 00 00    	jne    3dde <ip4_icmp_decode+0x251>
    3c98:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c9f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3ca3:	48 89 c7             	mov    rdi,rax
    3ca6:	e8 31 3d 00 00       	call   79dc <member_exists>
    3cab:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3cb1:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3cb8:	0f 84 83 00 00 00    	je     3d41 <ip4_icmp_decode+0x1b4>
    3cbe:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3cc4:	48 63 d0             	movsxd rdx,eax
    3cc7:	48 89 d0             	mov    rax,rdx
    3cca:	48 c1 e0 02          	shl    rax,0x2
    3cce:	48 01 d0             	add    rax,rdx
    3cd1:	48 c1 e0 03          	shl    rax,0x3
    3cd5:	48 01 d0             	add    rax,rdx
    3cd8:	48 c1 e0 04          	shl    rax,0x4
    3cdc:	48 8d 15 bd f3 0e 00 	lea    rdx,[rip+0xef3bd]        # f30a0 <watchlist>
    3ce3:	48 01 d0             	add    rax,rdx
    3ce6:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3ced:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cf4:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3cf7:	85 c0                	test   eax,eax
    3cf9:	0f 85 a8 02 00 00    	jne    3fa7 <ip4_icmp_decode+0x41a>
    3cff:	bf 00 00 00 00       	mov    edi,0x0
    3d04:	e8 c7 e9 ff ff       	call   26d0 <time@plt>
    3d09:	48 89 c2             	mov    rdx,rax
    3d0c:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d13:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d17:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d1e:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3d25:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d2c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d2f:	8d 50 01             	lea    edx,[rax+0x1]
    3d32:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d39:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3d3c:	e9 66 02 00 00       	jmp    3fa7 <ip4_icmp_decode+0x41a>
    3d41:	8b 05 d1 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2d1]        # 11018 <watchlist_num>
    3d47:	83 c0 01             	add    eax,0x1
    3d4a:	89 05 c8 d2 00 00    	mov    DWORD PTR [rip+0xd2c8],eax        # 11018 <watchlist_num>
    3d50:	8b 05 c2 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2c2]        # 11018 <watchlist_num>
    3d56:	48 63 d0             	movsxd rdx,eax
    3d59:	48 89 d0             	mov    rax,rdx
    3d5c:	48 c1 e0 02          	shl    rax,0x2
    3d60:	48 01 d0             	add    rax,rdx
    3d63:	48 c1 e0 03          	shl    rax,0x3
    3d67:	48 01 d0             	add    rax,rdx
    3d6a:	48 c1 e0 04          	shl    rax,0x4
    3d6e:	48 8d 15 2b f3 0e 00 	lea    rdx,[rip+0xef32b]        # f30a0 <watchlist>
    3d75:	48 01 d0             	add    rax,rdx
    3d78:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3d7f:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d86:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3d8a:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3d91:	48 89 c6             	mov    rsi,rax
    3d94:	48 89 d7             	mov    rdi,rdx
    3d97:	e8 34 e7 ff ff       	call   24d0 <strcpy@plt>
    3d9c:	bf 00 00 00 00       	mov    edi,0x0
    3da1:	e8 2a e9 ff ff       	call   26d0 <time@plt>
    3da6:	48 89 c2             	mov    rdx,rax
    3da9:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3db0:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3db4:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dbb:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3dc2:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dc9:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3dcc:	8d 50 01             	lea    edx,[rax+0x1]
    3dcf:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dd6:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3dd9:	e9 c9 01 00 00       	jmp    3fa7 <ip4_icmp_decode+0x41a>
    3dde:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3de5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3de8:	3c 0d                	cmp    al,0xd
    3dea:	0f 85 ba 01 00 00    	jne    3faa <ip4_icmp_decode+0x41d>
    3df0:	8b 05 ae 5f 10 00    	mov    eax,DWORD PTR [rip+0x105fae]        # 109da4 <strict_icmp_timestamp_req>
    3df6:	83 f8 01             	cmp    eax,0x1
    3df9:	74 0f                	je     3e0a <ip4_icmp_decode+0x27d>
    3dfb:	8b 05 e7 3a 10 00    	mov    eax,DWORD PTR [rip+0x103ae7]        # 1078e8 <strict_nmap_host_alive_check>
    3e01:	83 f8 01             	cmp    eax,0x1
    3e04:	0f 85 a0 01 00 00    	jne    3faa <ip4_icmp_decode+0x41d>
    3e0a:	8b 05 94 5f 10 00    	mov    eax,DWORD PTR [rip+0x105f94]        # 109da4 <strict_icmp_timestamp_req>
    3e10:	85 c0                	test   eax,eax
    3e12:	74 22                	je     3e36 <ip4_icmp_decode+0x2a9>
    3e14:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3e1b:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e22:	48 89 c6             	mov    rsi,rax
    3e25:	48 8d 3d 74 85 00 00 	lea    rdi,[rip+0x8574]        # c3a0 <_IO_stdin_used+0x3a0>
    3e2c:	b8 00 00 00 00       	mov    eax,0x0
    3e31:	e8 8a e7 ff ff       	call   25c0 <printf@plt>
    3e36:	8b 05 ac 3a 10 00    	mov    eax,DWORD PTR [rip+0x103aac]        # 1078e8 <strict_nmap_host_alive_check>
    3e3c:	85 c0                	test   eax,eax
    3e3e:	0f 84 66 01 00 00    	je     3faa <ip4_icmp_decode+0x41d>
    3e44:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e4b:	48 89 c7             	mov    rdi,rax
    3e4e:	e8 89 3b 00 00       	call   79dc <member_exists>
    3e53:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3e59:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3e60:	0f 84 44 01 00 00    	je     3faa <ip4_icmp_decode+0x41d>
    3e66:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3e6c:	48 63 d0             	movsxd rdx,eax
    3e6f:	48 89 d0             	mov    rax,rdx
    3e72:	48 c1 e0 02          	shl    rax,0x2
    3e76:	48 01 d0             	add    rax,rdx
    3e79:	48 c1 e0 03          	shl    rax,0x3
    3e7d:	48 01 d0             	add    rax,rdx
    3e80:	48 c1 e0 04          	shl    rax,0x4
    3e84:	48 8d 15 15 f2 0e 00 	lea    rdx,[rip+0xef215]        # f30a0 <watchlist>
    3e8b:	48 01 d0             	add    rax,rdx
    3e8e:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3e95:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e9c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e9f:	83 f8 03             	cmp    eax,0x3
    3ea2:	0f 85 05 01 00 00    	jne    3fad <ip4_icmp_decode+0x420>
    3ea8:	bf 00 00 00 00       	mov    edi,0x0
    3ead:	e8 1e e8 ff ff       	call   26d0 <time@plt>
    3eb2:	48 89 c2             	mov    rdx,rax
    3eb5:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ebc:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3ec0:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ec7:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3ecb:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ed2:	48 8b 40 28          	mov    rax,QWORD PTR [rax+0x28]
    3ed6:	48 29 c2             	sub    rdx,rax
    3ed9:	48 89 d0             	mov    rax,rdx
    3edc:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3ee2:	0f 87 c2 00 00 00    	ja     3faa <ip4_icmp_decode+0x41d>
    3ee8:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3eef:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ef6:	48 89 c6             	mov    rsi,rax
    3ef9:	48 8d 3d e8 84 00 00 	lea    rdi,[rip+0x84e8]        # c3e8 <_IO_stdin_used+0x3e8>
    3f00:	b8 00 00 00 00       	mov    eax,0x0
    3f05:	e8 b6 e6 ff ff       	call   25c0 <printf@plt>
    3f0a:	48 8b 05 1f d1 00 00 	mov    rax,QWORD PTR [rip+0xd11f]        # 11030 <def_log_file>
    3f11:	48 8d 35 3a 85 00 00 	lea    rsi,[rip+0x853a]        # c452 <_IO_stdin_used+0x452>
    3f18:	48 89 c7             	mov    rdi,rax
    3f1b:	e8 50 e8 ff ff       	call   2770 <fopen@plt>
    3f20:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3f27:	b8 00 00 00 00       	mov    eax,0x0
    3f2c:	e8 2f f4 ff ff       	call   3360 <get_formated_time>
    3f31:	48 89 c6             	mov    rsi,rax
    3f34:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3f3b:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3f42:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f49:	49 89 f0             	mov    r8,rsi
    3f4c:	48 8d 35 05 85 00 00 	lea    rsi,[rip+0x8505]        # c458 <_IO_stdin_used+0x458>
    3f53:	48 89 c7             	mov    rdi,rax
    3f56:	b8 00 00 00 00       	mov    eax,0x0
    3f5b:	e8 d0 e8 ff ff       	call   2830 <sprintf@plt>
    3f60:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3f67:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f6e:	48 89 d6             	mov    rsi,rdx
    3f71:	48 89 c7             	mov    rdi,rax
    3f74:	e8 67 e6 ff ff       	call   25e0 <fputs@plt>
    3f79:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3f80:	48 89 c7             	mov    rdi,rax
    3f83:	e8 c8 e5 ff ff       	call   2550 <fclose@plt>
    3f88:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f8f:	48 83 c0 28          	add    rax,0x28
    3f93:	ba 28 00 00 00       	mov    edx,0x28
    3f98:	be 00 00 00 00       	mov    esi,0x0
    3f9d:	48 89 c7             	mov    rdi,rax
    3fa0:	e8 5b e6 ff ff       	call   2600 <memset@plt>
    3fa5:	eb 07                	jmp    3fae <ip4_icmp_decode+0x421>
    3fa7:	90                   	nop
    3fa8:	eb 04                	jmp    3fae <ip4_icmp_decode+0x421>
    3faa:	90                   	nop
    3fab:	eb 01                	jmp    3fae <ip4_icmp_decode+0x421>
    3fad:	90                   	nop
    3fae:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3fb5:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    3fbc:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3fc3:	48 89 c7             	mov    rdi,rax
    3fc6:	e8 dd 24 00 00       	call   64a8 <rulemgr>
    3fcb:	0f b6 05 67 39 10 00 	movzx  eax,BYTE PTR [rip+0x103967]        # 107939 <packet_print>
    3fd2:	84 c0                	test   al,al
    3fd4:	0f 84 e0 03 00 00    	je     43ba <ip4_icmp_decode+0x82d>
    3fda:	48 8d 35 1f 83 00 00 	lea    rsi,[rip+0x831f]        # c300 <_IO_stdin_used+0x300>
    3fe1:	48 8d 3d 1e 83 00 00 	lea    rdi,[rip+0x831e]        # c306 <_IO_stdin_used+0x306>
    3fe8:	b8 00 00 00 00       	mov    eax,0x0
    3fed:	e8 ce e5 ff ff       	call   25c0 <printf@plt>
    3ff2:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3ff9:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    4000:	48 89 c6             	mov    rsi,rax
    4003:	48 8d 3d be 84 00 00 	lea    rdi,[rip+0x84be]        # c4c8 <_IO_stdin_used+0x4c8>
    400a:	b8 00 00 00 00       	mov    eax,0x0
    400f:	e8 ac e5 ff ff       	call   25c0 <printf@plt>
    4014:	48 8d 3d bc 84 00 00 	lea    rdi,[rip+0x84bc]        # c4d7 <_IO_stdin_used+0x4d7>
    401b:	b8 00 00 00 00       	mov    eax,0x0
    4020:	e8 9b e5 ff ff       	call   25c0 <printf@plt>
    4025:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    402c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    402f:	0f b6 c0             	movzx  eax,al
    4032:	83 f8 0e             	cmp    eax,0xe
    4035:	0f 87 46 03 00 00    	ja     4381 <ip4_icmp_decode+0x7f4>
    403b:	89 c0                	mov    eax,eax
    403d:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    4044:	00 
    4045:	48 8d 05 94 88 00 00 	lea    rax,[rip+0x8894]        # c8e0 <_IO_stdin_used+0x8e0>
    404c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    404f:	48 98                	cdqe   
    4051:	48 8d 15 88 88 00 00 	lea    rdx,[rip+0x8888]        # c8e0 <_IO_stdin_used+0x8e0>
    4058:	48 01 d0             	add    rax,rdx
    405b:	3e ff e0             	notrack jmp rax
    405e:	48 8d 3d 79 84 00 00 	lea    rdi,[rip+0x8479]        # c4de <_IO_stdin_used+0x4de>
    4065:	e8 96 e4 ff ff       	call   2500 <puts@plt>
    406a:	e9 33 03 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    406f:	48 8d 3d 74 84 00 00 	lea    rdi,[rip+0x8474]        # c4ea <_IO_stdin_used+0x4ea>
    4076:	b8 00 00 00 00       	mov    eax,0x0
    407b:	e8 40 e5 ff ff       	call   25c0 <printf@plt>
    4080:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4087:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    408b:	0f b6 c0             	movzx  eax,al
    408e:	83 f8 0f             	cmp    eax,0xf
    4091:	0f 87 1e 01 00 00    	ja     41b5 <ip4_icmp_decode+0x628>
    4097:	89 c0                	mov    eax,eax
    4099:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    40a0:	00 
    40a1:	48 8d 05 74 88 00 00 	lea    rax,[rip+0x8874]        # c91c <_IO_stdin_used+0x91c>
    40a8:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    40ab:	48 98                	cdqe   
    40ad:	48 8d 15 68 88 00 00 	lea    rdx,[rip+0x8868]        # c91c <_IO_stdin_used+0x91c>
    40b4:	48 01 d0             	add    rax,rdx
    40b7:	3e ff e0             	notrack jmp rax
    40ba:	48 8d 3d 43 84 00 00 	lea    rdi,[rip+0x8443]        # c504 <_IO_stdin_used+0x504>
    40c1:	e8 3a e4 ff ff       	call   2500 <puts@plt>
    40c6:	e9 0c 01 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    40cb:	48 8d 3d 49 84 00 00 	lea    rdi,[rip+0x8449]        # c51b <_IO_stdin_used+0x51b>
    40d2:	e8 29 e4 ff ff       	call   2500 <puts@plt>
    40d7:	e9 fb 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    40dc:	48 8d 3d 4c 84 00 00 	lea    rdi,[rip+0x844c]        # c52f <_IO_stdin_used+0x52f>
    40e3:	e8 18 e4 ff ff       	call   2500 <puts@plt>
    40e8:	e9 ea 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    40ed:	48 8d 3d 53 84 00 00 	lea    rdi,[rip+0x8453]        # c547 <_IO_stdin_used+0x547>
    40f4:	e8 07 e4 ff ff       	call   2500 <puts@plt>
    40f9:	e9 d9 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    40fe:	48 8d 3d 56 84 00 00 	lea    rdi,[rip+0x8456]        # c55b <_IO_stdin_used+0x55b>
    4105:	e8 f6 e3 ff ff       	call   2500 <puts@plt>
    410a:	e9 c8 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    410f:	48 8d 3d 5d 84 00 00 	lea    rdi,[rip+0x845d]        # c573 <_IO_stdin_used+0x573>
    4116:	e8 e5 e3 ff ff       	call   2500 <puts@plt>
    411b:	e9 b7 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    4120:	48 8d 3d 69 84 00 00 	lea    rdi,[rip+0x8469]        # c590 <_IO_stdin_used+0x590>
    4127:	e8 d4 e3 ff ff       	call   2500 <puts@plt>
    412c:	e9 a6 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    4131:	48 8d 3d 80 84 00 00 	lea    rdi,[rip+0x8480]        # c5b8 <_IO_stdin_used+0x5b8>
    4138:	e8 c3 e3 ff ff       	call   2500 <puts@plt>
    413d:	e9 95 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    4142:	48 8d 3d 8f 84 00 00 	lea    rdi,[rip+0x848f]        # c5d8 <_IO_stdin_used+0x5d8>
    4149:	e8 b2 e3 ff ff       	call   2500 <puts@plt>
    414e:	e9 84 00 00 00       	jmp    41d7 <ip4_icmp_decode+0x64a>
    4153:	48 8d 3d 96 84 00 00 	lea    rdi,[rip+0x8496]        # c5f0 <_IO_stdin_used+0x5f0>
    415a:	e8 a1 e3 ff ff       	call   2500 <puts@plt>
    415f:	eb 76                	jmp    41d7 <ip4_icmp_decode+0x64a>
    4161:	48 8d 3d b0 84 00 00 	lea    rdi,[rip+0x84b0]        # c618 <_IO_stdin_used+0x618>
    4168:	e8 93 e3 ff ff       	call   2500 <puts@plt>
    416d:	eb 68                	jmp    41d7 <ip4_icmp_decode+0x64a>
    416f:	48 8d 3d ca 84 00 00 	lea    rdi,[rip+0x84ca]        # c640 <_IO_stdin_used+0x640>
    4176:	e8 85 e3 ff ff       	call   2500 <puts@plt>
    417b:	eb 5a                	jmp    41d7 <ip4_icmp_decode+0x64a>
    417d:	48 8d 3d db 84 00 00 	lea    rdi,[rip+0x84db]        # c65f <_IO_stdin_used+0x65f>
    4184:	e8 77 e3 ff ff       	call   2500 <puts@plt>
    4189:	eb 4c                	jmp    41d7 <ip4_icmp_decode+0x64a>
    418b:	48 8d 3d ee 84 00 00 	lea    rdi,[rip+0x84ee]        # c680 <_IO_stdin_used+0x680>
    4192:	e8 69 e3 ff ff       	call   2500 <puts@plt>
    4197:	eb 3e                	jmp    41d7 <ip4_icmp_decode+0x64a>
    4199:	48 8d 3d 0d 85 00 00 	lea    rdi,[rip+0x850d]        # c6ad <_IO_stdin_used+0x6ad>
    41a0:	e8 5b e3 ff ff       	call   2500 <puts@plt>
    41a5:	eb 30                	jmp    41d7 <ip4_icmp_decode+0x64a>
    41a7:	48 8d 3d 22 85 00 00 	lea    rdi,[rip+0x8522]        # c6d0 <_IO_stdin_used+0x6d0>
    41ae:	e8 4d e3 ff ff       	call   2500 <puts@plt>
    41b3:	eb 22                	jmp    41d7 <ip4_icmp_decode+0x64a>
    41b5:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    41bc:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    41c0:	0f b6 c0             	movzx  eax,al
    41c3:	89 c6                	mov    esi,eax
    41c5:	48 8d 3d 23 85 00 00 	lea    rdi,[rip+0x8523]        # c6ef <_IO_stdin_used+0x6ef>
    41cc:	b8 00 00 00 00       	mov    eax,0x0
    41d1:	e8 ea e3 ff ff       	call   25c0 <printf@plt>
    41d6:	90                   	nop
    41d7:	e9 c6 01 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    41dc:	48 8d 3d 25 85 00 00 	lea    rdi,[rip+0x8525]        # c708 <_IO_stdin_used+0x708>
    41e3:	e8 18 e3 ff ff       	call   2500 <puts@plt>
    41e8:	e9 b5 01 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    41ed:	48 8d 3d 33 85 00 00 	lea    rdi,[rip+0x8533]        # c727 <_IO_stdin_used+0x727>
    41f4:	b8 00 00 00 00       	mov    eax,0x0
    41f9:	e8 c2 e3 ff ff       	call   25c0 <printf@plt>
    41fe:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4205:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4209:	0f b6 c0             	movzx  eax,al
    420c:	83 f8 03             	cmp    eax,0x3
    420f:	74 44                	je     4255 <ip4_icmp_decode+0x6c8>
    4211:	83 f8 03             	cmp    eax,0x3
    4214:	7f 4d                	jg     4263 <ip4_icmp_decode+0x6d6>
    4216:	83 f8 02             	cmp    eax,0x2
    4219:	74 2c                	je     4247 <ip4_icmp_decode+0x6ba>
    421b:	83 f8 02             	cmp    eax,0x2
    421e:	7f 43                	jg     4263 <ip4_icmp_decode+0x6d6>
    4220:	85 c0                	test   eax,eax
    4222:	74 07                	je     422b <ip4_icmp_decode+0x69e>
    4224:	83 f8 01             	cmp    eax,0x1
    4227:	74 10                	je     4239 <ip4_icmp_decode+0x6ac>
    4229:	eb 38                	jmp    4263 <ip4_icmp_decode+0x6d6>
    422b:	48 8d 3d 01 85 00 00 	lea    rdi,[rip+0x8501]        # c733 <_IO_stdin_used+0x733>
    4232:	e8 c9 e2 ff ff       	call   2500 <puts@plt>
    4237:	eb 4c                	jmp    4285 <ip4_icmp_decode+0x6f8>
    4239:	48 8d 3d 0b 85 00 00 	lea    rdi,[rip+0x850b]        # c74b <_IO_stdin_used+0x74b>
    4240:	e8 bb e2 ff ff       	call   2500 <puts@plt>
    4245:	eb 3e                	jmp    4285 <ip4_icmp_decode+0x6f8>
    4247:	48 8d 3d 12 85 00 00 	lea    rdi,[rip+0x8512]        # c760 <_IO_stdin_used+0x760>
    424e:	e8 ad e2 ff ff       	call   2500 <puts@plt>
    4253:	eb 30                	jmp    4285 <ip4_icmp_decode+0x6f8>
    4255:	48 8d 3d 24 85 00 00 	lea    rdi,[rip+0x8524]        # c780 <_IO_stdin_used+0x780>
    425c:	e8 9f e2 ff ff       	call   2500 <puts@plt>
    4261:	eb 22                	jmp    4285 <ip4_icmp_decode+0x6f8>
    4263:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    426a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    426e:	0f b6 c0             	movzx  eax,al
    4271:	89 c6                	mov    esi,eax
    4273:	48 8d 3d 75 84 00 00 	lea    rdi,[rip+0x8475]        # c6ef <_IO_stdin_used+0x6ef>
    427a:	b8 00 00 00 00       	mov    eax,0x0
    427f:	e8 3c e3 ff ff       	call   25c0 <printf@plt>
    4284:	90                   	nop
    4285:	e9 18 01 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    428a:	48 8d 3d 0c 85 00 00 	lea    rdi,[rip+0x850c]        # c79d <_IO_stdin_used+0x79d>
    4291:	e8 6a e2 ff ff       	call   2500 <puts@plt>
    4296:	e9 07 01 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    429b:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42a2:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42a6:	84 c0                	test   al,al
    42a8:	75 16                	jne    42c0 <ip4_icmp_decode+0x733>
    42aa:	48 8d 3d ff 84 00 00 	lea    rdi,[rip+0x84ff]        # c7b0 <_IO_stdin_used+0x7b0>
    42b1:	b8 00 00 00 00       	mov    eax,0x0
    42b6:	e8 05 e3 ff ff       	call   25c0 <printf@plt>
    42bb:	e9 e2 00 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    42c0:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42c7:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42cb:	0f b6 c0             	movzx  eax,al
    42ce:	89 c6                	mov    esi,eax
    42d0:	48 8d 3d 19 85 00 00 	lea    rdi,[rip+0x8519]        # c7f0 <_IO_stdin_used+0x7f0>
    42d7:	b8 00 00 00 00       	mov    eax,0x0
    42dc:	e8 df e2 ff ff       	call   25c0 <printf@plt>
    42e1:	e9 bc 00 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    42e6:	48 8d 3d 30 85 00 00 	lea    rdi,[rip+0x8530]        # c81d <_IO_stdin_used+0x81d>
    42ed:	e8 0e e2 ff ff       	call   2500 <puts@plt>
    42f2:	e9 ab 00 00 00       	jmp    43a2 <ip4_icmp_decode+0x815>
    42f7:	48 8d 3d 36 85 00 00 	lea    rdi,[rip+0x8536]        # c834 <_IO_stdin_used+0x834>
    42fe:	b8 00 00 00 00       	mov    eax,0x0
    4303:	e8 b8 e2 ff ff       	call   25c0 <printf@plt>
    4308:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    430f:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4313:	84 c0                	test   al,al
    4315:	75 0e                	jne    4325 <ip4_icmp_decode+0x798>
    4317:	48 8d 3d 2d 85 00 00 	lea    rdi,[rip+0x852d]        # c84b <_IO_stdin_used+0x84b>
    431e:	e8 dd e1 ff ff       	call   2500 <puts@plt>
    4323:	eb 7d                	jmp    43a2 <ip4_icmp_decode+0x815>
    4325:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    432c:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4330:	3c 01                	cmp    al,0x1
    4332:	75 0e                	jne    4342 <ip4_icmp_decode+0x7b5>
    4334:	48 8d 3d 2d 85 00 00 	lea    rdi,[rip+0x852d]        # c868 <_IO_stdin_used+0x868>
    433b:	e8 c0 e1 ff ff       	call   2500 <puts@plt>
    4340:	eb 60                	jmp    43a2 <ip4_icmp_decode+0x815>
    4342:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4349:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    434d:	0f b6 c0             	movzx  eax,al
    4350:	89 c6                	mov    esi,eax
    4352:	48 8d 3d 36 85 00 00 	lea    rdi,[rip+0x8536]        # c88f <_IO_stdin_used+0x88f>
    4359:	b8 00 00 00 00       	mov    eax,0x0
    435e:	e8 5d e2 ff ff       	call   25c0 <printf@plt>
    4363:	eb 3d                	jmp    43a2 <ip4_icmp_decode+0x815>
    4365:	48 8d 3d 39 85 00 00 	lea    rdi,[rip+0x8539]        # c8a5 <_IO_stdin_used+0x8a5>
    436c:	e8 8f e1 ff ff       	call   2500 <puts@plt>
    4371:	eb 2f                	jmp    43a2 <ip4_icmp_decode+0x815>
    4373:	48 8d 3d 3e 85 00 00 	lea    rdi,[rip+0x853e]        # c8b8 <_IO_stdin_used+0x8b8>
    437a:	e8 81 e1 ff ff       	call   2500 <puts@plt>
    437f:	eb 21                	jmp    43a2 <ip4_icmp_decode+0x815>
    4381:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4388:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    438b:	0f b6 c0             	movzx  eax,al
    438e:	89 c6                	mov    esi,eax
    4390:	48 8d 3d 32 85 00 00 	lea    rdi,[rip+0x8532]        # c8c9 <_IO_stdin_used+0x8c9>
    4397:	b8 00 00 00 00       	mov    eax,0x0
    439c:	e8 1f e2 ff ff       	call   25c0 <printf@plt>
    43a1:	90                   	nop
    43a2:	48 8d 35 ec 7f 00 00 	lea    rsi,[rip+0x7fec]        # c395 <_IO_stdin_used+0x395>
    43a9:	48 8d 3d 56 7f 00 00 	lea    rdi,[rip+0x7f56]        # c306 <_IO_stdin_used+0x306>
    43b0:	b8 00 00 00 00       	mov    eax,0x0
    43b5:	e8 06 e2 ff ff       	call   25c0 <printf@plt>
    43ba:	90                   	nop
    43bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    43bf:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    43c6:	00 00 
    43c8:	74 05                	je     43cf <ip4_icmp_decode+0x842>
    43ca:	e8 b1 e1 ff ff       	call   2580 <__stack_chk_fail@plt>
    43cf:	c9                   	leave  
    43d0:	c3                   	ret    

00000000000043d1 <ip4_tcp_decode>:
    43d1:	f3 0f 1e fa          	endbr64 
    43d5:	55                   	push   rbp
    43d6:	48 89 e5             	mov    rbp,rsp
    43d9:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    43dd:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    43e1:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    43e5:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    43e9:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    43ed:	48 83 c0 22          	add    rax,0x22
    43f1:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    43f5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    43f9:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    43fd:	c0 e8 04             	shr    al,0x4
    4400:	0f b6 c0             	movzx  eax,al
    4403:	c1 e0 02             	shl    eax,0x2
    4406:	48 98                	cdqe   
    4408:	48 8d 50 22          	lea    rdx,[rax+0x22]
    440c:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4410:	48 01 c2             	add    rdx,rax
    4413:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4417:	48 89 10             	mov    QWORD PTR [rax],rdx
    441a:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    441e:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    4421:	89 c2                	mov    edx,eax
    4423:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4427:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    442b:	c0 e8 04             	shr    al,0x4
    442e:	0f b6 c0             	movzx  eax,al
    4431:	c1 e0 02             	shl    eax,0x2
    4434:	29 c2                	sub    edx,eax
    4436:	89 d0                	mov    eax,edx
    4438:	83 e8 22             	sub    eax,0x22
    443b:	89 c2                	mov    edx,eax
    443d:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4441:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    4444:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4448:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    444c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4450:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4454:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4458:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    445c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4460:	ba 5c 00 00 00       	mov    edx,0x5c
    4465:	be 01 00 00 00       	mov    esi,0x1
    446a:	48 89 c7             	mov    rdi,rax
    446d:	e8 f6 0a 00 00       	call   4f68 <add_ip_addr_or_inc_counter>
    4472:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4476:	ba 5c 00 00 00       	mov    edx,0x5c
    447b:	be 00 00 00 00       	mov    esi,0x0
    4480:	48 89 c7             	mov    rdi,rax
    4483:	e8 e0 0a 00 00       	call   4f68 <add_ip_addr_or_inc_counter>
    4488:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [rbp-0x4c],0x0
    448f:	c6 45 af 00          	mov    BYTE PTR [rbp-0x51],0x0
    4493:	c6 45 b0 00          	mov    BYTE PTR [rbp-0x50],0x0
    4497:	c6 45 b1 00          	mov    BYTE PTR [rbp-0x4f],0x0
    449b:	c6 45 b2 00          	mov    BYTE PTR [rbp-0x4e],0x0
    449f:	c6 45 b3 00          	mov    BYTE PTR [rbp-0x4d],0x0
    44a3:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    44a7:	48 83 c0 68          	add    rax,0x68
    44ab:	ba 08 00 00 00       	mov    edx,0x8
    44b0:	be 00 00 00 00       	mov    esi,0x0
    44b5:	48 89 c7             	mov    rdi,rax
    44b8:	e8 43 e1 ff ff       	call   2600 <memset@plt>
    44bd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    44c1:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    44c5:	0f b7 c0             	movzx  eax,ax
    44c8:	89 c7                	mov    edi,eax
    44ca:	e8 71 e2 ff ff       	call   2740 <ntohs@plt>
    44cf:	0f b7 c0             	movzx  eax,ax
    44d2:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
    44d5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    44d9:	0f b7 00             	movzx  eax,WORD PTR [rax]
    44dc:	0f b7 c0             	movzx  eax,ax
    44df:	89 c7                	mov    edi,eax
    44e1:	e8 5a e2 ff ff       	call   2740 <ntohs@plt>
    44e6:	0f b7 c0             	movzx  eax,ax
    44e9:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    44ec:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    44f0:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    44f4:	0f b7 c0             	movzx  eax,ax
    44f7:	89 c7                	mov    edi,eax
    44f9:	e8 42 e2 ff ff       	call   2740 <ntohs@plt>
    44fe:	0f b7 d0             	movzx  edx,ax
    4501:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4505:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4508:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    450c:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    450f:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4512:	0f b6 05 20 34 10 00 	movzx  eax,BYTE PTR [rip+0x103420]        # 107939 <packet_print>
    4519:	84 c0                	test   al,al
    451b:	74 4e                	je     456b <ip4_tcp_decode+0x19a>
    451d:	48 8d 35 3c 84 00 00 	lea    rsi,[rip+0x843c]        # c960 <_IO_stdin_used+0x960>
    4524:	48 8d 3d 3b 84 00 00 	lea    rdi,[rip+0x843b]        # c966 <_IO_stdin_used+0x966>
    452b:	b8 00 00 00 00       	mov    eax,0x0
    4530:	e8 8b e0 ff ff       	call   25c0 <printf@plt>
    4535:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
    4538:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    453c:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    453f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4543:	41 89 f0             	mov    r8d,esi
    4546:	48 89 c6             	mov    rsi,rax
    4549:	48 8d 3d 19 84 00 00 	lea    rdi,[rip+0x8419]        # c969 <_IO_stdin_used+0x969>
    4550:	b8 00 00 00 00       	mov    eax,0x0
    4555:	e8 66 e0 ff ff       	call   25c0 <printf@plt>
    455a:	48 8d 3d 1d 84 00 00 	lea    rdi,[rip+0x841d]        # c97e <_IO_stdin_used+0x97e>
    4561:	b8 00 00 00 00       	mov    eax,0x0
    4566:	e8 55 e0 ff ff       	call   25c0 <printf@plt>
    456b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    456f:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4573:	c0 e8 04             	shr    al,0x4
    4576:	83 e0 01             	and    eax,0x1
    4579:	0f b6 c0             	movzx  eax,al
    457c:	89 c7                	mov    edi,eax
    457e:	e8 bd e1 ff ff       	call   2740 <ntohs@plt>
    4583:	66 85 c0             	test   ax,ax
    4586:	74 5c                	je     45e4 <ip4_tcp_decode+0x213>
    4588:	0f b6 05 aa 33 10 00 	movzx  eax,BYTE PTR [rip+0x1033aa]        # 107939 <packet_print>
    458f:	84 c0                	test   al,al
    4591:	74 18                	je     45ab <ip4_tcp_decode+0x1da>
    4593:	48 8d 35 eb 83 00 00 	lea    rsi,[rip+0x83eb]        # c985 <_IO_stdin_used+0x985>
    459a:	48 8d 3d ea 83 00 00 	lea    rdi,[rip+0x83ea]        # c98b <_IO_stdin_used+0x98b>
    45a1:	b8 00 00 00 00       	mov    eax,0x0
    45a6:	e8 15 e0 ff ff       	call   25c0 <printf@plt>
    45ab:	c6 45 b0 01          	mov    BYTE PTR [rbp-0x50],0x1
    45af:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    45b3:	48 8d 50 68          	lea    rdx,[rax+0x68]
    45b7:	48 89 d0             	mov    rax,rdx
    45ba:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    45c1:	48 89 c6             	mov    rsi,rax
    45c4:	b8 00 00 00 00       	mov    eax,0x0
    45c9:	48 89 f7             	mov    rdi,rsi
    45cc:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    45ce:	48 89 c8             	mov    rax,rcx
    45d1:	48 f7 d0             	not    rax
    45d4:	48 83 e8 01          	sub    rax,0x1
    45d8:	48 01 d0             	add    rax,rdx
    45db:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    45e0:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    45e4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    45e8:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    45ec:	83 e0 01             	and    eax,0x1
    45ef:	0f b6 c0             	movzx  eax,al
    45f2:	89 c7                	mov    edi,eax
    45f4:	e8 47 e1 ff ff       	call   2740 <ntohs@plt>
    45f9:	66 85 c0             	test   ax,ax
    45fc:	74 5c                	je     465a <ip4_tcp_decode+0x289>
    45fe:	0f b6 05 34 33 10 00 	movzx  eax,BYTE PTR [rip+0x103334]        # 107939 <packet_print>
    4605:	84 c0                	test   al,al
    4607:	74 18                	je     4621 <ip4_tcp_decode+0x250>
    4609:	48 8d 35 83 83 00 00 	lea    rsi,[rip+0x8383]        # c993 <_IO_stdin_used+0x993>
    4610:	48 8d 3d 82 83 00 00 	lea    rdi,[rip+0x8382]        # c999 <_IO_stdin_used+0x999>
    4617:	b8 00 00 00 00       	mov    eax,0x0
    461c:	e8 9f df ff ff       	call   25c0 <printf@plt>
    4621:	c6 45 b2 01          	mov    BYTE PTR [rbp-0x4e],0x1
    4625:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4629:	48 8d 50 68          	lea    rdx,[rax+0x68]
    462d:	48 89 d0             	mov    rax,rdx
    4630:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    4637:	48 89 c6             	mov    rsi,rax
    463a:	b8 00 00 00 00       	mov    eax,0x0
    463f:	48 89 f7             	mov    rdi,rsi
    4642:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4644:	48 89 c8             	mov    rax,rcx
    4647:	48 f7 d0             	not    rax
    464a:	48 83 e8 01          	sub    rax,0x1
    464e:	48 01 d0             	add    rax,rdx
    4651:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    4656:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    465a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    465e:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4662:	c0 e8 03             	shr    al,0x3
    4665:	83 e0 01             	and    eax,0x1
    4668:	0f b6 c0             	movzx  eax,al
    466b:	89 c7                	mov    edi,eax
    466d:	e8 ce e0 ff ff       	call   2740 <ntohs@plt>
    4672:	66 85 c0             	test   ax,ax
    4675:	74 5c                	je     46d3 <ip4_tcp_decode+0x302>
    4677:	0f b6 05 bb 32 10 00 	movzx  eax,BYTE PTR [rip+0x1032bb]        # 107939 <packet_print>
    467e:	84 c0                	test   al,al
    4680:	74 18                	je     469a <ip4_tcp_decode+0x2c9>
    4682:	48 8d 35 18 83 00 00 	lea    rsi,[rip+0x8318]        # c9a1 <_IO_stdin_used+0x9a1>
    4689:	48 8d 3d 17 83 00 00 	lea    rdi,[rip+0x8317]        # c9a7 <_IO_stdin_used+0x9a7>
    4690:	b8 00 00 00 00       	mov    eax,0x0
    4695:	e8 26 df ff ff       	call   25c0 <printf@plt>
    469a:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    469e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    46a2:	48 8d 50 68          	lea    rdx,[rax+0x68]
    46a6:	48 89 d0             	mov    rax,rdx
    46a9:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    46b0:	48 89 c6             	mov    rsi,rax
    46b3:	b8 00 00 00 00       	mov    eax,0x0
    46b8:	48 89 f7             	mov    rdi,rsi
    46bb:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    46bd:	48 89 c8             	mov    rax,rcx
    46c0:	48 f7 d0             	not    rax
    46c3:	48 83 e8 01          	sub    rax,0x1
    46c7:	48 01 d0             	add    rax,rdx
    46ca:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    46cf:	c6 45 b3 01          	mov    BYTE PTR [rbp-0x4d],0x1
    46d3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    46d7:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46db:	c0 e8 02             	shr    al,0x2
    46de:	83 e0 01             	and    eax,0x1
    46e1:	0f b6 c0             	movzx  eax,al
    46e4:	89 c7                	mov    edi,eax
    46e6:	e8 55 e0 ff ff       	call   2740 <ntohs@plt>
    46eb:	66 85 c0             	test   ax,ax
    46ee:	74 5c                	je     474c <ip4_tcp_decode+0x37b>
    46f0:	0f b6 05 42 32 10 00 	movzx  eax,BYTE PTR [rip+0x103242]        # 107939 <packet_print>
    46f7:	84 c0                	test   al,al
    46f9:	74 18                	je     4713 <ip4_tcp_decode+0x342>
    46fb:	48 8d 35 ad 82 00 00 	lea    rsi,[rip+0x82ad]        # c9af <_IO_stdin_used+0x9af>
    4702:	48 8d 3d ac 82 00 00 	lea    rdi,[rip+0x82ac]        # c9b5 <_IO_stdin_used+0x9b5>
    4709:	b8 00 00 00 00       	mov    eax,0x0
    470e:	e8 ad de ff ff       	call   25c0 <printf@plt>
    4713:	c6 45 af 01          	mov    BYTE PTR [rbp-0x51],0x1
    4717:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    471b:	48 8d 50 68          	lea    rdx,[rax+0x68]
    471f:	48 89 d0             	mov    rax,rdx
    4722:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    4729:	48 89 c6             	mov    rsi,rax
    472c:	b8 00 00 00 00       	mov    eax,0x0
    4731:	48 89 f7             	mov    rdi,rsi
    4734:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4736:	48 89 c8             	mov    rax,rcx
    4739:	48 f7 d0             	not    rax
    473c:	48 83 e8 01          	sub    rax,0x1
    4740:	48 01 d0             	add    rax,rdx
    4743:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    4748:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    474c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4750:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4754:	d0 e8                	shr    al,1
    4756:	83 e0 01             	and    eax,0x1
    4759:	0f b6 c0             	movzx  eax,al
    475c:	89 c7                	mov    edi,eax
    475e:	e8 dd df ff ff       	call   2740 <ntohs@plt>
    4763:	66 85 c0             	test   ax,ax
    4766:	74 5c                	je     47c4 <ip4_tcp_decode+0x3f3>
    4768:	0f b6 05 ca 31 10 00 	movzx  eax,BYTE PTR [rip+0x1031ca]        # 107939 <packet_print>
    476f:	84 c0                	test   al,al
    4771:	74 18                	je     478b <ip4_tcp_decode+0x3ba>
    4773:	48 8d 35 43 82 00 00 	lea    rsi,[rip+0x8243]        # c9bd <_IO_stdin_used+0x9bd>
    477a:	48 8d 3d 42 82 00 00 	lea    rdi,[rip+0x8242]        # c9c3 <_IO_stdin_used+0x9c3>
    4781:	b8 00 00 00 00       	mov    eax,0x0
    4786:	e8 35 de ff ff       	call   25c0 <printf@plt>
    478b:	c6 45 b1 01          	mov    BYTE PTR [rbp-0x4f],0x1
    478f:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4793:	48 8d 50 68          	lea    rdx,[rax+0x68]
    4797:	48 89 d0             	mov    rax,rdx
    479a:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    47a1:	48 89 c6             	mov    rsi,rax
    47a4:	b8 00 00 00 00       	mov    eax,0x0
    47a9:	48 89 f7             	mov    rdi,rsi
    47ac:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    47ae:	48 89 c8             	mov    rax,rcx
    47b1:	48 f7 d0             	not    rax
    47b4:	48 83 e8 01          	sub    rax,0x1
    47b8:	48 01 d0             	add    rax,rdx
    47bb:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    47c0:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    47c4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    47c8:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    47cc:	c0 e8 05             	shr    al,0x5
    47cf:	83 e0 01             	and    eax,0x1
    47d2:	0f b6 c0             	movzx  eax,al
    47d5:	89 c7                	mov    edi,eax
    47d7:	e8 64 df ff ff       	call   2740 <ntohs@plt>
    47dc:	66 85 c0             	test   ax,ax
    47df:	74 58                	je     4839 <ip4_tcp_decode+0x468>
    47e1:	0f b6 05 51 31 10 00 	movzx  eax,BYTE PTR [rip+0x103151]        # 107939 <packet_print>
    47e8:	84 c0                	test   al,al
    47ea:	74 18                	je     4804 <ip4_tcp_decode+0x433>
    47ec:	48 8d 35 d8 81 00 00 	lea    rsi,[rip+0x81d8]        # c9cb <_IO_stdin_used+0x9cb>
    47f3:	48 8d 3d d7 81 00 00 	lea    rdi,[rip+0x81d7]        # c9d1 <_IO_stdin_used+0x9d1>
    47fa:	b8 00 00 00 00       	mov    eax,0x0
    47ff:	e8 bc dd ff ff       	call   25c0 <printf@plt>
    4804:	83 45 b4 01          	add    DWORD PTR [rbp-0x4c],0x1
    4808:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    480c:	48 8d 50 68          	lea    rdx,[rax+0x68]
    4810:	48 89 d0             	mov    rax,rdx
    4813:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    481a:	48 89 c6             	mov    rsi,rax
    481d:	b8 00 00 00 00       	mov    eax,0x0
    4822:	48 89 f7             	mov    rdi,rsi
    4825:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    4827:	48 89 c8             	mov    rax,rcx
    482a:	48 f7 d0             	not    rax
    482d:	48 83 e8 01          	sub    rax,0x1
    4831:	48 01 d0             	add    rax,rdx
    4834:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    4839:	0f b6 05 f9 30 10 00 	movzx  eax,BYTE PTR [rip+0x1030f9]        # 107939 <packet_print>
    4840:	84 c0                	test   al,al
    4842:	74 3c                	je     4880 <ip4_tcp_decode+0x4af>
    4844:	48 8d 35 15 81 00 00 	lea    rsi,[rip+0x8115]        # c960 <_IO_stdin_used+0x960>
    484b:	48 8d 3d 14 81 00 00 	lea    rdi,[rip+0x8114]        # c966 <_IO_stdin_used+0x966>
    4852:	b8 00 00 00 00       	mov    eax,0x0
    4857:	e8 64 dd ff ff       	call   25c0 <printf@plt>
    485c:	48 8d 3d 76 81 00 00 	lea    rdi,[rip+0x8176]        # c9d9 <_IO_stdin_used+0x9d9>
    4863:	e8 98 dc ff ff       	call   2500 <puts@plt>
    4868:	48 8d 35 6c 81 00 00 	lea    rsi,[rip+0x816c]        # c9db <_IO_stdin_used+0x9db>
    486f:	48 8d 3d f0 80 00 00 	lea    rdi,[rip+0x80f0]        # c966 <_IO_stdin_used+0x966>
    4876:	b8 00 00 00 00       	mov    eax,0x0
    487b:	e8 40 dd ff ff       	call   25c0 <printf@plt>
    4880:	83 7d b4 03          	cmp    DWORD PTR [rbp-0x4c],0x3
    4884:	7f 06                	jg     488c <ip4_tcp_decode+0x4bb>
    4886:	83 7d b4 00          	cmp    DWORD PTR [rbp-0x4c],0x0
    488a:	75 41                	jne    48cd <ip4_tcp_decode+0x4fc>
    488c:	8b 7d b8             	mov    edi,DWORD PTR [rbp-0x48]
    488f:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    4893:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    4896:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    489a:	48 8d 0d 3a 81 00 00 	lea    rcx,[rip+0x813a]        # c9db <_IO_stdin_used+0x9db>
    48a1:	51                   	push   rcx
    48a2:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    48a5:	51                   	push   rcx
    48a6:	41 89 f9             	mov    r9d,edi
    48a9:	49 89 f0             	mov    r8,rsi
    48ac:	89 d1                	mov    ecx,edx
    48ae:	48 89 c2             	mov    rdx,rax
    48b1:	48 8d 35 f7 80 00 00 	lea    rsi,[rip+0x80f7]        # c9af <_IO_stdin_used+0x9af>
    48b8:	48 8d 3d 21 81 00 00 	lea    rdi,[rip+0x8121]        # c9e0 <_IO_stdin_used+0x9e0>
    48bf:	b8 00 00 00 00       	mov    eax,0x0
    48c4:	e8 f7 dc ff ff       	call   25c0 <printf@plt>
    48c9:	48 83 c4 10          	add    rsp,0x10
    48cd:	0f b6 05 5d 30 10 00 	movzx  eax,BYTE PTR [rip+0x10305d]        # 107931 <use_spi>
    48d4:	84 c0                	test   al,al
    48d6:	0f 84 8c 00 00 00    	je     4968 <ip4_tcp_decode+0x597>
    48dc:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    48e0:	74 1a                	je     48fc <ip4_tcp_decode+0x52b>
    48e2:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    48e6:	74 14                	je     48fc <ip4_tcp_decode+0x52b>
    48e8:	83 7d b4 02          	cmp    DWORD PTR [rbp-0x4c],0x2
    48ec:	75 0e                	jne    48fc <ip4_tcp_decode+0x52b>
    48ee:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    48f2:	48 89 c7             	mov    rdi,rax
    48f5:	e8 f8 48 00 00       	call   91f2 <handle_data_pkt>
    48fa:	eb 6c                	jmp    4968 <ip4_tcp_decode+0x597>
    48fc:	80 7d b2 00          	cmp    BYTE PTR [rbp-0x4e],0x0
    4900:	74 14                	je     4916 <ip4_tcp_decode+0x545>
    4902:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4906:	74 0e                	je     4916 <ip4_tcp_decode+0x545>
    4908:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    490c:	48 89 c7             	mov    rdi,rax
    490f:	e8 cb 47 00 00       	call   90df <polite_end>
    4914:	eb 52                	jmp    4968 <ip4_tcp_decode+0x597>
    4916:	80 7d b1 00          	cmp    BYTE PTR [rbp-0x4f],0x0
    491a:	74 14                	je     4930 <ip4_tcp_decode+0x55f>
    491c:	83 7d b4 01          	cmp    DWORD PTR [rbp-0x4c],0x1
    4920:	75 0e                	jne    4930 <ip4_tcp_decode+0x55f>
    4922:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4926:	48 89 c7             	mov    rdi,rax
    4929:	e8 0e 43 00 00       	call   8c3c <add_new_conversation>
    492e:	eb 38                	jmp    4968 <ip4_tcp_decode+0x597>
    4930:	80 7d b1 00          	cmp    BYTE PTR [rbp-0x4f],0x0
    4934:	74 1a                	je     4950 <ip4_tcp_decode+0x57f>
    4936:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    493a:	74 14                	je     4950 <ip4_tcp_decode+0x57f>
    493c:	83 7d b4 02          	cmp    DWORD PTR [rbp-0x4c],0x2
    4940:	75 0e                	jne    4950 <ip4_tcp_decode+0x57f>
    4942:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4946:	48 89 c7             	mov    rdi,rax
    4949:	e8 27 45 00 00       	call   8e75 <spi_ud_thw>
    494e:	eb 18                	jmp    4968 <ip4_tcp_decode+0x597>
    4950:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4954:	74 12                	je     4968 <ip4_tcp_decode+0x597>
    4956:	83 7d b4 01          	cmp    DWORD PTR [rbp-0x4c],0x1
    495a:	75 0c                	jne    4968 <ip4_tcp_decode+0x597>
    495c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4960:	48 89 c7             	mov    rdi,rax
    4963:	e8 d6 45 00 00       	call   8f3e <update_table>
    4968:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    496c:	74 17                	je     4985 <ip4_tcp_decode+0x5b4>
    496e:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4972:	74 11                	je     4985 <ip4_tcp_decode+0x5b4>
    4974:	83 7d b4 02          	cmp    DWORD PTR [rbp-0x4c],0x2
    4978:	75 0b                	jne    4985 <ip4_tcp_decode+0x5b4>
    497a:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    497e:	c7 40 70 01 00 00 00 	mov    DWORD PTR [rax+0x70],0x1
    4985:	80 7d af 00          	cmp    BYTE PTR [rbp-0x51],0x0
    4989:	0f 84 95 01 00 00    	je     4b24 <ip4_tcp_decode+0x753>
    498f:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4993:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4997:	48 89 c7             	mov    rdi,rax
    499a:	e8 3d 30 00 00       	call   79dc <member_exists>
    499f:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    49a2:	83 7d c0 ff          	cmp    DWORD PTR [rbp-0x40],0xffffffff
    49a6:	0f 84 de 00 00 00    	je     4a8a <ip4_tcp_decode+0x6b9>
    49ac:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    49af:	48 63 d0             	movsxd rdx,eax
    49b2:	48 89 d0             	mov    rax,rdx
    49b5:	48 c1 e0 02          	shl    rax,0x2
    49b9:	48 01 d0             	add    rax,rdx
    49bc:	48 c1 e0 03          	shl    rax,0x3
    49c0:	48 01 d0             	add    rax,rdx
    49c3:	48 c1 e0 04          	shl    rax,0x4
    49c7:	48 8d 15 d2 e6 0e 00 	lea    rdx,[rip+0xee6d2]        # f30a0 <watchlist>
    49ce:	48 01 d0             	add    rax,rdx
    49d1:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    49d5:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    49d9:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49dd:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    49e1:	48 83 c2 08          	add    rdx,0x8
    49e5:	48 89 c6             	mov    rsi,rax
    49e8:	48 89 d7             	mov    rdi,rdx
    49eb:	e8 e0 da ff ff       	call   24d0 <strcpy@plt>
    49f0:	bf 00 00 00 00       	mov    edi,0x0
    49f5:	e8 d6 dc ff ff       	call   26d0 <time@plt>
    49fa:	48 89 c2             	mov    rdx,rax
    49fd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a01:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a07:	8d 70 01             	lea    esi,[rax+0x1]
    4a0a:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
    4a0e:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a14:	48 89 d1             	mov    rcx,rdx
    4a17:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    4a1b:	89 c0                	mov    eax,eax
    4a1d:	48 83 c0 28          	add    rax,0x28
    4a21:	48 89 4c c2 10       	mov    QWORD PTR [rdx+rax*8+0x10],rcx
    4a26:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a2a:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a30:	83 f8 1d             	cmp    eax,0x1d
    4a33:	0f 86 eb 00 00 00    	jbe    4b24 <ip4_tcp_decode+0x753>
    4a39:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a3d:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4a44:	00 00 00 
    4a47:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a4b:	48 89 c7             	mov    rdi,rax
    4a4e:	e8 47 2b 00 00       	call   759a <tcp_rst_portscan_detect>
    4a53:	84 c0                	test   al,al
    4a55:	0f 84 c9 00 00 00    	je     4b24 <ip4_tcp_decode+0x753>
    4a5b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a5f:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a66:	00 00 00 
    4a69:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4a6d:	48 05 50 01 00 00    	add    rax,0x150
    4a73:	ba f0 00 00 00       	mov    edx,0xf0
    4a78:	be 00 00 00 00       	mov    esi,0x0
    4a7d:	48 89 c7             	mov    rdi,rax
    4a80:	e8 7b db ff ff       	call   2600 <memset@plt>
    4a85:	e9 9a 00 00 00       	jmp    4b24 <ip4_tcp_decode+0x753>
    4a8a:	8b 05 88 c5 00 00    	mov    eax,DWORD PTR [rip+0xc588]        # 11018 <watchlist_num>
    4a90:	83 c0 01             	add    eax,0x1
    4a93:	89 05 7f c5 00 00    	mov    DWORD PTR [rip+0xc57f],eax        # 11018 <watchlist_num>
    4a99:	8b 05 79 c5 00 00    	mov    eax,DWORD PTR [rip+0xc579]        # 11018 <watchlist_num>
    4a9f:	48 63 d0             	movsxd rdx,eax
    4aa2:	48 89 d0             	mov    rax,rdx
    4aa5:	48 c1 e0 02          	shl    rax,0x2
    4aa9:	48 01 d0             	add    rax,rdx
    4aac:	48 c1 e0 03          	shl    rax,0x3
    4ab0:	48 01 d0             	add    rax,rdx
    4ab3:	48 c1 e0 04          	shl    rax,0x4
    4ab7:	48 8d 15 e2 e5 0e 00 	lea    rdx,[rip+0xee5e2]        # f30a0 <watchlist>
    4abe:	48 01 d0             	add    rax,rdx
    4ac1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4ac5:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4ac9:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4acd:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    4ad1:	48 83 c2 08          	add    rdx,0x8
    4ad5:	48 89 c6             	mov    rsi,rax
    4ad8:	48 89 d7             	mov    rdi,rdx
    4adb:	e8 f0 d9 ff ff       	call   24d0 <strcpy@plt>
    4ae0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4ae4:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4aeb:	00 00 00 
    4aee:	bf 00 00 00 00       	mov    edi,0x0
    4af3:	e8 d8 db ff ff       	call   26d0 <time@plt>
    4af8:	48 89 c2             	mov    rdx,rax
    4afb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4aff:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4b05:	8d 70 01             	lea    esi,[rax+0x1]
    4b08:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    4b0c:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4b12:	48 89 d1             	mov    rcx,rdx
    4b15:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    4b19:	89 c0                	mov    eax,eax
    4b1b:	48 83 c0 28          	add    rax,0x28
    4b1f:	48 89 4c c2 10       	mov    QWORD PTR [rdx+rax*8+0x10],rcx
    4b24:	8b 05 be 2d 10 00    	mov    eax,DWORD PTR [rip+0x102dbe]        # 1078e8 <strict_nmap_host_alive_check>
    4b2a:	83 f8 01             	cmp    eax,0x1
    4b2d:	0f 85 f6 00 00 00    	jne    4c29 <ip4_tcp_decode+0x858>
    4b33:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4b37:	74 0c                	je     4b45 <ip4_tcp_decode+0x774>
    4b39:	83 7d b8 50          	cmp    DWORD PTR [rbp-0x48],0x50
    4b3d:	74 26                	je     4b65 <ip4_tcp_decode+0x794>
    4b3f:	83 7d bc 50          	cmp    DWORD PTR [rbp-0x44],0x50
    4b43:	74 20                	je     4b65 <ip4_tcp_decode+0x794>
    4b45:	80 7d b1 00          	cmp    BYTE PTR [rbp-0x4f],0x0
    4b49:	0f 84 da 00 00 00    	je     4c29 <ip4_tcp_decode+0x858>
    4b4f:	81 7d b8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x48],0x1bb
    4b56:	74 0d                	je     4b65 <ip4_tcp_decode+0x794>
    4b58:	81 7d bc bb 01 00 00 	cmp    DWORD PTR [rbp-0x44],0x1bb
    4b5f:	0f 85 c4 00 00 00    	jne    4c29 <ip4_tcp_decode+0x858>
    4b65:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    4b68:	3b 45 bc             	cmp    eax,DWORD PTR [rbp-0x44]
    4b6b:	76 0a                	jbe    4b77 <ip4_tcp_decode+0x7a6>
    4b6d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4b71:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4b75:	eb 08                	jmp    4b7f <ip4_tcp_decode+0x7ae>
    4b77:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4b7b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4b7f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4b83:	48 89 c7             	mov    rdi,rax
    4b86:	e8 51 2e 00 00       	call   79dc <member_exists>
    4b8b:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4b8e:	83 7d c4 ff          	cmp    DWORD PTR [rbp-0x3c],0xffffffff
    4b92:	0f 84 91 00 00 00    	je     4c29 <ip4_tcp_decode+0x858>
    4b98:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    4b9b:	48 63 d0             	movsxd rdx,eax
    4b9e:	48 89 d0             	mov    rax,rdx
    4ba1:	48 c1 e0 02          	shl    rax,0x2
    4ba5:	48 01 d0             	add    rax,rdx
    4ba8:	48 c1 e0 03          	shl    rax,0x3
    4bac:	48 01 d0             	add    rax,rdx
    4baf:	48 c1 e0 04          	shl    rax,0x4
    4bb3:	48 8d 15 e6 e4 0e 00 	lea    rdx,[rip+0xee4e6]        # f30a0 <watchlist>
    4bba:	48 01 d0             	add    rax,rdx
    4bbd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4bc1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4bc5:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4bc8:	85 c0                	test   eax,eax
    4bca:	75 2a                	jne    4bf6 <ip4_tcp_decode+0x825>
    4bcc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4bd0:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bd3:	83 f8 01             	cmp    eax,0x1
    4bd6:	75 1e                	jne    4bf6 <ip4_tcp_decode+0x825>
    4bd8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4bdc:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4be3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4be7:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bea:	8d 50 01             	lea    edx,[rax+0x1]
    4bed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4bf1:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4bf4:	eb 33                	jmp    4c29 <ip4_tcp_decode+0x858>
    4bf6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4bfa:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4bfd:	85 c0                	test   eax,eax
    4bff:	75 28                	jne    4c29 <ip4_tcp_decode+0x858>
    4c01:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c05:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c08:	83 f8 02             	cmp    eax,0x2
    4c0b:	75 1c                	jne    4c29 <ip4_tcp_decode+0x858>
    4c0d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c11:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4c18:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c1c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4c1f:	8d 50 01             	lea    edx,[rax+0x1]
    4c22:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4c26:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4c29:	0f b6 05 09 2d 10 00 	movzx  eax,BYTE PTR [rip+0x102d09]        # 107939 <packet_print>
    4c30:	84 c0                	test   al,al
    4c32:	74 3a                	je     4c6e <ip4_tcp_decode+0x89d>
    4c34:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    4c38:	74 34                	je     4c6e <ip4_tcp_decode+0x89d>
    4c3a:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4c3e:	74 2e                	je     4c6e <ip4_tcp_decode+0x89d>
    4c40:	0f b6 45 b2          	movzx  eax,BYTE PTR [rbp-0x4e]
    4c44:	83 f0 01             	xor    eax,0x1
    4c47:	84 c0                	test   al,al
    4c49:	74 23                	je     4c6e <ip4_tcp_decode+0x89d>
    4c4b:	83 7d b8 50          	cmp    DWORD PTR [rbp-0x48],0x50
    4c4f:	74 06                	je     4c57 <ip4_tcp_decode+0x886>
    4c51:	83 7d bc 50          	cmp    DWORD PTR [rbp-0x44],0x50
    4c55:	75 17                	jne    4c6e <ip4_tcp_decode+0x89d>
    4c57:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4c5b:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4c5f:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4c63:	48 89 c6             	mov    rsi,rax
    4c66:	48 89 d7             	mov    rdi,rdx
    4c69:	e8 e6 39 00 00       	call   8654 <http_disect>
    4c6e:	83 7d b8 15          	cmp    DWORD PTR [rbp-0x48],0x15
    4c72:	74 06                	je     4c7a <ip4_tcp_decode+0x8a9>
    4c74:	83 7d bc 15          	cmp    DWORD PTR [rbp-0x44],0x15
    4c78:	75 2d                	jne    4ca7 <ip4_tcp_decode+0x8d6>
    4c7a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4c7e:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c82:	c0 e8 04             	shr    al,0x4
    4c85:	0f b6 c0             	movzx  eax,al
    4c88:	c1 e0 02             	shl    eax,0x2
    4c8b:	48 98                	cdqe   
    4c8d:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4c91:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    4c95:	48 01 c2             	add    rdx,rax
    4c98:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4c9c:	48 89 c6             	mov    rsi,rax
    4c9f:	48 89 d7             	mov    rdi,rdx
    4ca2:	e8 b0 3b 00 00       	call   8857 <ftp_disect>
    4ca7:	81 7d b8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x48],0x1bb
    4cae:	74 09                	je     4cb9 <ip4_tcp_decode+0x8e8>
    4cb0:	81 7d bc bb 01 00 00 	cmp    DWORD PTR [rbp-0x44],0x1bb
    4cb7:	75 26                	jne    4cdf <ip4_tcp_decode+0x90e>
    4cb9:	80 7d b3 00          	cmp    BYTE PTR [rbp-0x4d],0x0
    4cbd:	74 20                	je     4cdf <ip4_tcp_decode+0x90e>
    4cbf:	80 7d b0 00          	cmp    BYTE PTR [rbp-0x50],0x0
    4cc3:	74 1a                	je     4cdf <ip4_tcp_decode+0x90e>
    4cc5:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4cc9:	48 8b 00             	mov    rax,QWORD PTR [rax]
    4ccc:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    4cd0:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
    4cd4:	48 89 ce             	mov    rsi,rcx
    4cd7:	48 89 c7             	mov    rdi,rax
    4cda:	e8 35 33 00 00       	call   8014 <tls_decode>
    4cdf:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4ce3:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4ce6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4cea:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4cee:	c0 e8 04             	shr    al,0x4
    4cf1:	0f b6 c0             	movzx  eax,al
    4cf4:	c1 e0 02             	shl    eax,0x2
    4cf7:	29 c2                	sub    edx,eax
    4cf9:	89 d0                	mov    eax,edx
    4cfb:	8d 50 de             	lea    edx,[rax-0x22]
    4cfe:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4d02:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4d05:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    4d09:	48 89 c7             	mov    rdi,rax
    4d0c:	e8 97 17 00 00       	call   64a8 <rulemgr>
    4d11:	90                   	nop
    4d12:	c9                   	leave  
    4d13:	c3                   	ret    

0000000000004d14 <ip4_udp_decode>:
    4d14:	f3 0f 1e fa          	endbr64 
    4d18:	55                   	push   rbp
    4d19:	48 89 e5             	mov    rbp,rsp
    4d1c:	48 83 ec 30          	sub    rsp,0x30
    4d20:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4d24:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4d28:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4d2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d30:	48 83 c0 22          	add    rax,0x22
    4d34:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4d38:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d3c:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4d40:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d44:	48 89 10             	mov    QWORD PTR [rax],rdx
    4d47:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d4b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d4f:	ba 5d 00 00 00       	mov    edx,0x5d
    4d54:	be 01 00 00 00       	mov    esi,0x1
    4d59:	48 89 c7             	mov    rdi,rax
    4d5c:	e8 07 02 00 00       	call   4f68 <add_ip_addr_or_inc_counter>
    4d61:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d65:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4d69:	ba 5d 00 00 00       	mov    edx,0x5d
    4d6e:	be 00 00 00 00       	mov    esi,0x0
    4d73:	48 89 c7             	mov    rdi,rax
    4d76:	e8 ed 01 00 00       	call   4f68 <add_ip_addr_or_inc_counter>
    4d7b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d7f:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4d82:	0f b7 c0             	movzx  eax,ax
    4d85:	89 c7                	mov    edi,eax
    4d87:	e8 b4 d9 ff ff       	call   2740 <ntohs@plt>
    4d8c:	0f b7 c0             	movzx  eax,ax
    4d8f:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4d92:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d96:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4d9a:	0f b7 c0             	movzx  eax,ax
    4d9d:	89 c7                	mov    edi,eax
    4d9f:	e8 9c d9 ff ff       	call   2740 <ntohs@plt>
    4da4:	0f b7 c0             	movzx  eax,ax
    4da7:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4daa:	0f b6 05 88 2b 10 00 	movzx  eax,BYTE PTR [rip+0x102b88]        # 107939 <packet_print>
    4db1:	84 c0                	test   al,al
    4db3:	74 5d                	je     4e12 <ip4_udp_decode+0xfe>
    4db5:	48 8d 35 64 7c 00 00 	lea    rsi,[rip+0x7c64]        # ca20 <_IO_stdin_used+0xa20>
    4dbc:	48 8d 3d 63 7c 00 00 	lea    rdi,[rip+0x7c63]        # ca26 <_IO_stdin_used+0xa26>
    4dc3:	b8 00 00 00 00       	mov    eax,0x0
    4dc8:	e8 f3 d7 ff ff       	call   25c0 <printf@plt>
    4dcd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dd1:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4dd5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dd9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4ddd:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4de0:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4de3:	41 89 f0             	mov    r8d,esi
    4de6:	48 89 c6             	mov    rsi,rax
    4de9:	48 8d 3d 39 7c 00 00 	lea    rdi,[rip+0x7c39]        # ca29 <_IO_stdin_used+0xa29>
    4df0:	b8 00 00 00 00       	mov    eax,0x0
    4df5:	e8 c6 d7 ff ff       	call   25c0 <printf@plt>
    4dfa:	48 8d 35 41 7c 00 00 	lea    rsi,[rip+0x7c41]        # ca42 <_IO_stdin_used+0xa42>
    4e01:	48 8d 3d 1e 7c 00 00 	lea    rdi,[rip+0x7c1e]        # ca26 <_IO_stdin_used+0xa26>
    4e08:	b8 00 00 00 00       	mov    eax,0x0
    4e0d:	e8 ae d7 ff ff       	call   25c0 <printf@plt>
    4e12:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e16:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4e19:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4e1c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e20:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4e23:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4e26:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4e2a:	74 06                	je     4e32 <ip4_udp_decode+0x11e>
    4e2c:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4e30:	75 17                	jne    4e49 <ip4_udp_decode+0x135>
    4e32:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4e36:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4e3a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e3e:	48 89 c6             	mov    rsi,rax
    4e41:	48 89 d7             	mov    rdi,rdx
    4e44:	e8 bd 38 00 00       	call   8706 <dns_disect>
    4e49:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4e4d:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4e50:	8d 50 d6             	lea    edx,[rax-0x2a]
    4e53:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e57:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4e5a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e5e:	48 89 c7             	mov    rdi,rax
    4e61:	e8 42 16 00 00       	call   64a8 <rulemgr>
    4e66:	90                   	nop
    4e67:	c9                   	leave  
    4e68:	c3                   	ret    

0000000000004e69 <ip4_igmp_decode>:
    4e69:	f3 0f 1e fa          	endbr64 
    4e6d:	55                   	push   rbp
    4e6e:	48 89 e5             	mov    rbp,rsp
    4e71:	48 83 ec 60          	sub    rsp,0x60
    4e75:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4e79:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4e7d:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4e81:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4e88:	00 00 
    4e8a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4e8e:	31 c0                	xor    eax,eax
    4e90:	0f b6 05 a2 2a 10 00 	movzx  eax,BYTE PTR [rip+0x102aa2]        # 107939 <packet_print>
    4e97:	84 c0                	test   al,al
    4e99:	0f 84 b1 00 00 00    	je     4f50 <ip4_igmp_decode+0xe7>
    4e9f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4ea3:	48 83 c0 26          	add    rax,0x26
    4ea7:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4eab:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4eaf:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4eb3:	48 89 c6             	mov    rsi,rax
    4eb6:	48 8d 3d 8b 7b 00 00 	lea    rdi,[rip+0x7b8b]        # ca48 <_IO_stdin_used+0xa48>
    4ebd:	b8 00 00 00 00       	mov    eax,0x0
    4ec2:	e8 f9 d6 ff ff       	call   25c0 <printf@plt>
    4ec7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4ecb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4ece:	0f b6 c0             	movzx  eax,al
    4ed1:	83 f8 11             	cmp    eax,0x11
    4ed4:	74 07                	je     4edd <ip4_igmp_decode+0x74>
    4ed6:	83 f8 22             	cmp    eax,0x22
    4ed9:	74 10                	je     4eeb <ip4_igmp_decode+0x82>
    4edb:	eb 54                	jmp    4f31 <ip4_igmp_decode+0xc8>
    4edd:	48 8d 3d 79 7b 00 00 	lea    rdi,[rip+0x7b79]        # ca5d <_IO_stdin_used+0xa5d>
    4ee4:	e8 17 d6 ff ff       	call   2500 <puts@plt>
    4ee9:	eb 66                	jmp    4f51 <ip4_igmp_decode+0xe8>
    4eeb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4eef:	48 83 c0 26          	add    rax,0x26
    4ef3:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4ef7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4efb:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4efe:	89 c7                	mov    edi,eax
    4f00:	e8 fb e1 ff ff       	call   3100 <ipv4_ntoa>
    4f05:	48 89 c2             	mov    rdx,rax
    4f08:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f0c:	48 89 d6             	mov    rsi,rdx
    4f0f:	48 89 c7             	mov    rdi,rax
    4f12:	e8 b9 d5 ff ff       	call   24d0 <strcpy@plt>
    4f17:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4f1b:	48 89 c6             	mov    rsi,rax
    4f1e:	48 8d 3d 53 7b 00 00 	lea    rdi,[rip+0x7b53]        # ca78 <_IO_stdin_used+0xa78>
    4f25:	b8 00 00 00 00       	mov    eax,0x0
    4f2a:	e8 91 d6 ff ff       	call   25c0 <printf@plt>
    4f2f:	eb 20                	jmp    4f51 <ip4_igmp_decode+0xe8>
    4f31:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f35:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4f38:	0f b6 c0             	movzx  eax,al
    4f3b:	89 c6                	mov    esi,eax
    4f3d:	48 8d 3d 6a 7b 00 00 	lea    rdi,[rip+0x7b6a]        # caae <_IO_stdin_used+0xaae>
    4f44:	b8 00 00 00 00       	mov    eax,0x0
    4f49:	e8 72 d6 ff ff       	call   25c0 <printf@plt>
    4f4e:	eb 01                	jmp    4f51 <ip4_igmp_decode+0xe8>
    4f50:	90                   	nop
    4f51:	90                   	nop
    4f52:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f56:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    4f5d:	00 00 
    4f5f:	74 05                	je     4f66 <ip4_igmp_decode+0xfd>
    4f61:	e8 1a d6 ff ff       	call   2580 <__stack_chk_fail@plt>
    4f66:	c9                   	leave  
    4f67:	c3                   	ret    

0000000000004f68 <add_ip_addr_or_inc_counter>:
    4f68:	f3 0f 1e fa          	endbr64 
    4f6c:	55                   	push   rbp
    4f6d:	48 89 e5             	mov    rbp,rsp
    4f70:	48 83 ec 60          	sub    rsp,0x60
    4f74:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4f78:	89 f0                	mov    eax,esi
    4f7a:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4f7d:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4f80:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4f87:	00 00 
    4f89:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4f8d:	31 c0                	xor    eax,eax
    4f8f:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f93:	ba 08 00 00 00       	mov    edx,0x8
    4f98:	be 00 00 00 00       	mov    esi,0x0
    4f9d:	48 89 c7             	mov    rdi,rax
    4fa0:	e8 5b d6 ff ff       	call   2600 <memset@plt>
    4fa5:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4fa9:	ba 1c 00 00 00       	mov    edx,0x1c
    4fae:	be 00 00 00 00       	mov    esi,0x0
    4fb3:	48 89 c7             	mov    rdi,rax
    4fb6:	e8 45 d6 ff ff       	call   2600 <memset@plt>
    4fbb:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4fbf:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fc3:	ba 18 00 00 00       	mov    edx,0x18
    4fc8:	48 89 ce             	mov    rsi,rcx
    4fcb:	48 89 c7             	mov    rdi,rax
    4fce:	e8 dd d4 ff ff       	call   24b0 <strncpy@plt>
    4fd3:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4fd7:	ba 1c 00 00 00       	mov    edx,0x1c
    4fdc:	be 00 00 00 00       	mov    esi,0x0
    4fe1:	48 89 c7             	mov    rdi,rax
    4fe4:	e8 17 d6 ff ff       	call   2600 <memset@plt>
    4fe9:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fed:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4ff1:	48 83 c2 08          	add    rdx,0x8
    4ff5:	48 89 c6             	mov    rsi,rax
    4ff8:	48 89 d7             	mov    rdi,rdx
    4ffb:	e8 d0 d4 ff ff       	call   24d0 <strcpy@plt>
    5000:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    5004:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    5007:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    500a:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    500d:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    5011:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    5015:	48 89 d1             	mov    rcx,rdx
    5018:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 5054 <verify_ip_addr>
    501f:	be 00 00 00 00       	mov    esi,0x0
    5024:	48 89 c7             	mov    rdi,rax
    5027:	e8 64 d4 ff ff       	call   2490 <pthread_create@plt>
    502c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5030:	be 00 00 00 00       	mov    esi,0x0
    5035:	48 89 c7             	mov    rdi,rax
    5038:	e8 63 d7 ff ff       	call   27a0 <pthread_join@plt>
    503d:	90                   	nop
    503e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5042:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    5049:	00 00 
    504b:	74 05                	je     5052 <add_ip_addr_or_inc_counter+0xea>
    504d:	e8 2e d5 ff ff       	call   2580 <__stack_chk_fail@plt>
    5052:	c9                   	leave  
    5053:	c3                   	ret    

0000000000005054 <verify_ip_addr>:
    5054:	f3 0f 1e fa          	endbr64 
    5058:	55                   	push   rbp
    5059:	48 89 e5             	mov    rbp,rsp
    505c:	48 83 ec 30          	sub    rsp,0x30
    5060:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    5064:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    5068:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    506c:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    5073:	e9 c9 00 00 00       	jmp    5141 <verify_ip_addr+0xed>
    5078:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    507b:	48 63 d0             	movsxd rdx,eax
    507e:	48 89 d0             	mov    rax,rdx
    5081:	48 c1 e0 02          	shl    rax,0x2
    5085:	48 01 d0             	add    rax,rdx
    5088:	48 c1 e0 03          	shl    rax,0x3
    508c:	48 01 d0             	add    rax,rdx
    508f:	48 c1 e0 04          	shl    rax,0x4
    5093:	48 8d 15 06 e0 0e 00 	lea    rdx,[rip+0xee006]        # f30a0 <watchlist>
    509a:	48 01 d0             	add    rax,rdx
    509d:	48 8d 50 08          	lea    rdx,[rax+0x8]
    50a1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    50a5:	48 83 c0 08          	add    rax,0x8
    50a9:	48 89 d6             	mov    rsi,rdx
    50ac:	48 89 c7             	mov    rdi,rax
    50af:	e8 cc d5 ff ff       	call   2680 <strcmp@plt>
    50b4:	85 c0                	test   eax,eax
    50b6:	0f 85 81 00 00 00    	jne    513d <verify_ip_addr+0xe9>
    50bc:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50bf:	48 63 d0             	movsxd rdx,eax
    50c2:	48 89 d0             	mov    rax,rdx
    50c5:	48 c1 e0 02          	shl    rax,0x2
    50c9:	48 01 d0             	add    rax,rdx
    50cc:	48 c1 e0 03          	shl    rax,0x3
    50d0:	48 01 d0             	add    rax,rdx
    50d3:	48 c1 e0 04          	shl    rax,0x4
    50d7:	48 89 c2             	mov    rdx,rax
    50da:	48 8d 05 17 e2 0e 00 	lea    rax,[rip+0xee217]        # f32f8 <watchlist+0x258>
    50e1:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    50e4:	8d 48 01             	lea    ecx,[rax+0x1]
    50e7:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50ea:	48 63 d0             	movsxd rdx,eax
    50ed:	48 89 d0             	mov    rax,rdx
    50f0:	48 c1 e0 02          	shl    rax,0x2
    50f4:	48 01 d0             	add    rax,rdx
    50f7:	48 c1 e0 03          	shl    rax,0x3
    50fb:	48 01 d0             	add    rax,rdx
    50fe:	48 c1 e0 04          	shl    rax,0x4
    5102:	48 89 c2             	mov    rdx,rax
    5105:	48 8d 05 ec e1 0e 00 	lea    rax,[rip+0xee1ec]        # f32f8 <watchlist+0x258>
    510c:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    510f:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5112:	48 63 d0             	movsxd rdx,eax
    5115:	48 89 d0             	mov    rax,rdx
    5118:	48 c1 e0 02          	shl    rax,0x2
    511c:	48 01 d0             	add    rax,rdx
    511f:	48 c1 e0 03          	shl    rax,0x3
    5123:	48 01 d0             	add    rax,rdx
    5126:	48 c1 e0 04          	shl    rax,0x4
    512a:	48 8d 15 6f df 0e 00 	lea    rdx,[rip+0xedf6f]        # f30a0 <watchlist>
    5131:	48 01 d0             	add    rax,rdx
    5134:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5138:	e9 f5 00 00 00       	jmp    5232 <verify_ip_addr+0x1de>
    513d:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    5141:	8b 05 d1 be 00 00    	mov    eax,DWORD PTR [rip+0xbed1]        # 11018 <watchlist_num>
    5147:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    514a:	0f 8e 28 ff ff ff    	jle    5078 <verify_ip_addr+0x24>
    5150:	bf 90 02 00 00       	mov    edi,0x290
    5155:	e8 a6 d5 ff ff       	call   2700 <malloc@plt>
    515a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    515e:	8b 05 b4 be 00 00    	mov    eax,DWORD PTR [rip+0xbeb4]        # 11018 <watchlist_num>
    5164:	83 c0 01             	add    eax,0x1
    5167:	89 05 ab be 00 00    	mov    DWORD PTR [rip+0xbeab],eax        # 11018 <watchlist_num>
    516d:	8b 05 a5 be 00 00    	mov    eax,DWORD PTR [rip+0xbea5]        # 11018 <watchlist_num>
    5173:	48 63 d0             	movsxd rdx,eax
    5176:	48 89 d0             	mov    rax,rdx
    5179:	48 c1 e0 02          	shl    rax,0x2
    517d:	48 01 d0             	add    rax,rdx
    5180:	48 c1 e0 03          	shl    rax,0x3
    5184:	48 01 d0             	add    rax,rdx
    5187:	48 c1 e0 04          	shl    rax,0x4
    518b:	48 89 c1             	mov    rcx,rax
    518e:	48 8d 05 0b df 0e 00 	lea    rax,[rip+0xedf0b]        # f30a0 <watchlist>
    5195:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5199:	48 01 c8             	add    rax,rcx
    519c:	48 89 d6             	mov    rsi,rdx
    519f:	ba 52 00 00 00       	mov    edx,0x52
    51a4:	48 89 c7             	mov    rdi,rax
    51a7:	48 89 d1             	mov    rcx,rdx
    51aa:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    51ad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    51b1:	48 83 c0 08          	add    rax,0x8
    51b5:	ba 0f 00 00 00       	mov    edx,0xf
    51ba:	be 00 00 00 00       	mov    esi,0x0
    51bf:	48 89 c7             	mov    rdi,rax
    51c2:	e8 39 d4 ff ff       	call   2600 <memset@plt>
    51c7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51cb:	48 8d 48 08          	lea    rcx,[rax+0x8]
    51cf:	8b 05 43 be 00 00    	mov    eax,DWORD PTR [rip+0xbe43]        # 11018 <watchlist_num>
    51d5:	48 63 d0             	movsxd rdx,eax
    51d8:	48 89 d0             	mov    rax,rdx
    51db:	48 c1 e0 02          	shl    rax,0x2
    51df:	48 01 d0             	add    rax,rdx
    51e2:	48 c1 e0 03          	shl    rax,0x3
    51e6:	48 01 d0             	add    rax,rdx
    51e9:	48 c1 e0 04          	shl    rax,0x4
    51ed:	48 8d 15 ac de 0e 00 	lea    rdx,[rip+0xedeac]        # f30a0 <watchlist>
    51f4:	48 01 d0             	add    rax,rdx
    51f7:	48 83 c0 08          	add    rax,0x8
    51fb:	48 89 ce             	mov    rsi,rcx
    51fe:	48 89 c7             	mov    rdi,rax
    5201:	e8 ca d2 ff ff       	call   24d0 <strcpy@plt>
    5206:	8b 05 0c be 00 00    	mov    eax,DWORD PTR [rip+0xbe0c]        # 11018 <watchlist_num>
    520c:	48 63 d0             	movsxd rdx,eax
    520f:	48 89 d0             	mov    rax,rdx
    5212:	48 c1 e0 02          	shl    rax,0x2
    5216:	48 01 d0             	add    rax,rdx
    5219:	48 c1 e0 03          	shl    rax,0x3
    521d:	48 01 d0             	add    rax,rdx
    5220:	48 c1 e0 04          	shl    rax,0x4
    5224:	48 8d 15 75 de 0e 00 	lea    rdx,[rip+0xede75]        # f30a0 <watchlist>
    522b:	48 01 d0             	add    rax,rdx
    522e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5232:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5236:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5239:	84 c0                	test   al,al
    523b:	74 36                	je     5273 <verify_ip_addr+0x21f>
    523d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5241:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5247:	8d 50 01             	lea    edx,[rax+0x1]
    524a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    524e:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5254:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5258:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    525e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5262:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5265:	01 c2                	add    edx,eax
    5267:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    526b:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    5271:	eb 34                	jmp    52a7 <verify_ip_addr+0x253>
    5273:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5277:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    527d:	8d 50 01             	lea    edx,[rax+0x1]
    5280:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5284:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    528a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    528e:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    5294:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5298:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    529b:	01 c2                	add    edx,eax
    529d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52a1:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    52a7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ab:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    52b1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52b5:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    52b8:	01 c2                	add    edx,eax
    52ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52be:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    52c4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52c8:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    52ce:	8d 14 00             	lea    edx,[rax+rax*1]
    52d1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52d5:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    52db:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52df:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    52e2:	83 f8 5e             	cmp    eax,0x5e
    52e5:	0f 84 9b 00 00 00    	je     5386 <verify_ip_addr+0x332>
    52eb:	83 f8 5e             	cmp    eax,0x5e
    52ee:	0f 8f cf 00 00 00    	jg     53c3 <verify_ip_addr+0x36f>
    52f4:	83 f8 5c             	cmp    eax,0x5c
    52f7:	74 0a                	je     5303 <verify_ip_addr+0x2af>
    52f9:	83 f8 5d             	cmp    eax,0x5d
    52fc:	74 48                	je     5346 <verify_ip_addr+0x2f2>
    52fe:	e9 c0 00 00 00       	jmp    53c3 <verify_ip_addr+0x36f>
    5303:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5307:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    530a:	84 c0                	test   al,al
    530c:	74 1c                	je     532a <verify_ip_addr+0x2d6>
    530e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5312:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    5318:	8d 50 01             	lea    edx,[rax+0x1]
    531b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    531f:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    5325:	e9 d5 00 00 00       	jmp    53ff <verify_ip_addr+0x3ab>
    532a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    532e:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    5334:	8d 50 01             	lea    edx,[rax+0x1]
    5337:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    533b:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    5341:	e9 b9 00 00 00       	jmp    53ff <verify_ip_addr+0x3ab>
    5346:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    534a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    534d:	84 c0                	test   al,al
    534f:	74 1c                	je     536d <verify_ip_addr+0x319>
    5351:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5355:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    535b:	8d 50 01             	lea    edx,[rax+0x1]
    535e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5362:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5368:	e9 92 00 00 00       	jmp    53ff <verify_ip_addr+0x3ab>
    536d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5371:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5377:	8d 50 01             	lea    edx,[rax+0x1]
    537a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    537e:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    5384:	eb 79                	jmp    53ff <verify_ip_addr+0x3ab>
    5386:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    538a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    538d:	84 c0                	test   al,al
    538f:	74 19                	je     53aa <verify_ip_addr+0x356>
    5391:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5395:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    539b:	8d 50 01             	lea    edx,[rax+0x1]
    539e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53a2:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    53a8:	eb 55                	jmp    53ff <verify_ip_addr+0x3ab>
    53aa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53ae:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    53b4:	8d 50 01             	lea    edx,[rax+0x1]
    53b7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53bb:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    53c1:	eb 3c                	jmp    53ff <verify_ip_addr+0x3ab>
    53c3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    53c7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53ca:	84 c0                	test   al,al
    53cc:	74 19                	je     53e7 <verify_ip_addr+0x393>
    53ce:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53d2:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    53d8:	8d 50 01             	lea    edx,[rax+0x1]
    53db:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53df:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    53e5:	eb 17                	jmp    53fe <verify_ip_addr+0x3aa>
    53e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53eb:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    53f1:	8d 50 01             	lea    edx,[rax+0x1]
    53f4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53f8:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    53fe:	90                   	nop
    53ff:	b8 01 00 00 00       	mov    eax,0x1
    5404:	c9                   	leave  
    5405:	c3                   	ret    

0000000000005406 <ascii_hexdump>:
    5406:	f3 0f 1e fa          	endbr64 
    540a:	55                   	push   rbp
    540b:	48 89 e5             	mov    rbp,rsp
    540e:	48 83 ec 20          	sub    rsp,0x20
    5412:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5416:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    5419:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5420:	eb 52                	jmp    5474 <ascii_hexdump+0x6e>
    5422:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5425:	48 63 d0             	movsxd rdx,eax
    5428:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    542c:	48 01 d0             	add    rax,rdx
    542f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5432:	3c 20                	cmp    al,0x20
    5434:	76 30                	jbe    5466 <ascii_hexdump+0x60>
    5436:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5439:	48 63 d0             	movsxd rdx,eax
    543c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5440:	48 01 d0             	add    rax,rdx
    5443:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5446:	3c 7e                	cmp    al,0x7e
    5448:	77 1c                	ja     5466 <ascii_hexdump+0x60>
    544a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    544d:	48 63 d0             	movsxd rdx,eax
    5450:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5454:	48 01 d0             	add    rax,rdx
    5457:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    545a:	0f b6 c0             	movzx  eax,al
    545d:	89 c7                	mov    edi,eax
    545f:	e8 1c d0 ff ff       	call   2480 <putchar@plt>
    5464:	eb 0a                	jmp    5470 <ascii_hexdump+0x6a>
    5466:	bf 2e 00 00 00       	mov    edi,0x2e
    546b:	e8 10 d0 ff ff       	call   2480 <putchar@plt>
    5470:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5474:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5477:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    547a:	7c a6                	jl     5422 <ascii_hexdump+0x1c>
    547c:	bf 0a 00 00 00       	mov    edi,0xa
    5481:	e8 fa cf ff ff       	call   2480 <putchar@plt>
    5486:	90                   	nop
    5487:	c9                   	leave  
    5488:	c3                   	ret    

0000000000005489 <stdout_alert>:
    5489:	f3 0f 1e fa          	endbr64 
    548d:	55                   	push   rbp
    548e:	48 89 e5             	mov    rbp,rsp
    5491:	53                   	push   rbx
    5492:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    5499:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    54a0:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    54a7:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    54ad:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    54b4:	00 00 
    54b6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    54ba:	31 c0                	xor    eax,eax
    54bc:	bf 00 00 00 00       	mov    edi,0x0
    54c1:	e8 0a d2 ff ff       	call   26d0 <time@plt>
    54c6:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    54cd:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    54d4:	48 89 c7             	mov    rdi,rax
    54d7:	e8 c4 cf ff ff       	call   24a0 <localtime@plt>
    54dc:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    54df:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    54e3:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    54ea:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    54f1:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    54f5:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    54f9:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    5500:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    5507:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    550b:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    550f:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    5516:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    551d:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    5521:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5528:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    552e:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    5534:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    553b:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    5542:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5548:	8d 48 01             	lea    ecx,[rax+0x1]
    554b:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    5551:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5557:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    555e:	57                   	push   rdi
    555f:	56                   	push   rsi
    5560:	48 8d 35 5f 75 00 00 	lea    rsi,[rip+0x755f]        # cac6 <_IO_stdin_used+0xac6>
    5567:	48 89 c7             	mov    rdi,rax
    556a:	b8 00 00 00 00       	mov    eax,0x0
    556f:	e8 bc d2 ff ff       	call   2830 <sprintf@plt>
    5574:	48 83 c4 10          	add    rsp,0x10
    5578:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    557f:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    5582:	3d 80 00 00 00       	cmp    eax,0x80
    5587:	75 4e                	jne    55d7 <stdout_alert+0x14e>
    5589:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5590:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    5594:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    559b:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    559f:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    55a6:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    55ad:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    55b4:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55bb:	49 89 f9             	mov    r9,rdi
    55be:	49 89 f0             	mov    r8,rsi
    55c1:	48 8d 35 1a 75 00 00 	lea    rsi,[rip+0x751a]        # cae2 <_IO_stdin_used+0xae2>
    55c8:	48 89 c7             	mov    rdi,rax
    55cb:	b8 00 00 00 00       	mov    eax,0x0
    55d0:	e8 5b d2 ff ff       	call   2830 <sprintf@plt>
    55d5:	eb 61                	jmp    5638 <stdout_alert+0x1af>
    55d7:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55de:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    55e1:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55e8:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    55ec:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55f3:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    55f7:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55fe:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    5602:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5609:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    5610:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5617:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    561e:	57                   	push   rdi
    561f:	56                   	push   rsi
    5620:	48 8d 35 cb 74 00 00 	lea    rsi,[rip+0x74cb]        # caf2 <_IO_stdin_used+0xaf2>
    5627:	48 89 c7             	mov    rdi,rax
    562a:	b8 00 00 00 00       	mov    eax,0x0
    562f:	e8 fc d1 ff ff       	call   2830 <sprintf@plt>
    5634:	48 83 c4 10          	add    rsp,0x10
    5638:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    563f:	48 89 c6             	mov    rsi,rax
    5642:	48 8d 3d bf 74 00 00 	lea    rdi,[rip+0x74bf]        # cb08 <_IO_stdin_used+0xb08>
    5649:	b8 00 00 00 00       	mov    eax,0x0
    564e:	e8 6d cf ff ff       	call   25c0 <printf@plt>
    5653:	48 8b 05 d6 b9 00 00 	mov    rax,QWORD PTR [rip+0xb9d6]        # 11030 <def_log_file>
    565a:	48 8d 35 aa 74 00 00 	lea    rsi,[rip+0x74aa]        # cb0b <_IO_stdin_used+0xb0b>
    5661:	48 89 c7             	mov    rdi,rax
    5664:	e8 07 d1 ff ff       	call   2770 <fopen@plt>
    5669:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    5670:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5677:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    567e:	48 89 d6             	mov    rsi,rdx
    5681:	48 89 c7             	mov    rdi,rax
    5684:	e8 57 cf ff ff       	call   25e0 <fputs@plt>
    5689:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    5690:	48 89 c7             	mov    rdi,rax
    5693:	e8 b8 ce ff ff       	call   2550 <fclose@plt>
    5698:	90                   	nop
    5699:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    569d:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    56a4:	00 00 
    56a6:	74 05                	je     56ad <stdout_alert+0x224>
    56a8:	e8 d3 ce ff ff       	call   2580 <__stack_chk_fail@plt>
    56ad:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    56b1:	c9                   	leave  
    56b2:	c3                   	ret    

00000000000056b3 <str_match_parser>:
    56b3:	f3 0f 1e fa          	endbr64 
    56b7:	55                   	push   rbp
    56b8:	48 89 e5             	mov    rbp,rsp
    56bb:	53                   	push   rbx
    56bc:	48 83 ec 48          	sub    rsp,0x48
    56c0:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    56c4:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    56c8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    56cf:	00 00 
    56d1:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    56d5:	31 c0                	xor    eax,eax
    56d7:	48 89 e0             	mov    rax,rsp
    56da:	48 89 c3             	mov    rbx,rax
    56dd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56e1:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56e4:	85 c0                	test   eax,eax
    56e6:	75 0a                	jne    56f2 <str_match_parser+0x3f>
    56e8:	b8 00 00 00 00       	mov    eax,0x0
    56ed:	e9 e4 01 00 00       	jmp    58d6 <str_match_parser+0x223>
    56f2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56f6:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56f9:	83 c0 01             	add    eax,0x1
    56fc:	01 c0                	add    eax,eax
    56fe:	48 98                	cdqe   
    5700:	48 83 e8 01          	sub    rax,0x1
    5704:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5708:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    570c:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    570f:	83 c0 01             	add    eax,0x1
    5712:	01 c0                	add    eax,eax
    5714:	48 98                	cdqe   
    5716:	49 89 c2             	mov    r10,rax
    5719:	41 bb 00 00 00 00    	mov    r11d,0x0
    571f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5723:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5726:	83 c0 01             	add    eax,0x1
    5729:	01 c0                	add    eax,eax
    572b:	48 98                	cdqe   
    572d:	49 89 c0             	mov    r8,rax
    5730:	41 b9 00 00 00 00    	mov    r9d,0x0
    5736:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    573a:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    573d:	83 c0 01             	add    eax,0x1
    5740:	01 c0                	add    eax,eax
    5742:	48 98                	cdqe   
    5744:	ba 10 00 00 00       	mov    edx,0x10
    5749:	48 83 ea 01          	sub    rdx,0x1
    574d:	48 01 d0             	add    rax,rdx
    5750:	bf 10 00 00 00       	mov    edi,0x10
    5755:	ba 00 00 00 00       	mov    edx,0x0
    575a:	48 f7 f7             	div    rdi
    575d:	48 6b c0 10          	imul   rax,rax,0x10
    5761:	48 89 c2             	mov    rdx,rax
    5764:	48 81 e2 00 f0 ff ff 	and    rdx,0xfffffffffffff000
    576b:	48 89 e6             	mov    rsi,rsp
    576e:	48 29 d6             	sub    rsi,rdx
    5771:	48 89 f2             	mov    rdx,rsi
    5774:	48 39 d4             	cmp    rsp,rdx
    5777:	74 12                	je     578b <str_match_parser+0xd8>
    5779:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    5780:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    5787:	00 00 
    5789:	eb e9                	jmp    5774 <str_match_parser+0xc1>
    578b:	48 89 c2             	mov    rdx,rax
    578e:	81 e2 ff 0f 00 00    	and    edx,0xfff
    5794:	48 29 d4             	sub    rsp,rdx
    5797:	48 89 c2             	mov    rdx,rax
    579a:	81 e2 ff 0f 00 00    	and    edx,0xfff
    57a0:	48 85 d2             	test   rdx,rdx
    57a3:	74 10                	je     57b5 <str_match_parser+0x102>
    57a5:	25 ff 0f 00 00       	and    eax,0xfff
    57aa:	48 83 e8 08          	sub    rax,0x8
    57ae:	48 01 e0             	add    rax,rsp
    57b1:	48 83 08 00          	or     QWORD PTR [rax],0x0
    57b5:	48 89 e0             	mov    rax,rsp
    57b8:	48 83 c0 00          	add    rax,0x0
    57bc:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    57c0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57c4:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    57c7:	83 c0 01             	add    eax,0x1
    57ca:	01 c0                	add    eax,eax
    57cc:	48 63 d0             	movsxd rdx,eax
    57cf:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57d3:	be 00 00 00 00       	mov    esi,0x0
    57d8:	48 89 c7             	mov    rdi,rax
    57db:	e8 20 ce ff ff       	call   2600 <memset@plt>
    57e0:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    57e7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57eb:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    57f1:	85 c0                	test   eax,eax
    57f3:	74 5f                	je     5854 <str_match_parser+0x1a1>
    57f5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57f9:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    57fc:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    57ff:	eb 42                	jmp    5843 <str_match_parser+0x190>
    5801:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5805:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5808:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    580b:	48 98                	cdqe   
    580d:	48 01 d0             	add    rax,rdx
    5810:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5813:	0f b6 d0             	movzx  edx,al
    5816:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5819:	8d 48 01             	lea    ecx,[rax+0x1]
    581c:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    581f:	01 c0                	add    eax,eax
    5821:	48 63 c8             	movsxd rcx,eax
    5824:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5828:	48 01 c8             	add    rax,rcx
    582b:	48 8d 35 db 72 00 00 	lea    rsi,[rip+0x72db]        # cb0d <_IO_stdin_used+0xb0d>
    5832:	48 89 c7             	mov    rdi,rax
    5835:	b8 00 00 00 00       	mov    eax,0x0
    583a:	e8 f1 cf ff ff       	call   2830 <sprintf@plt>
    583f:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    5843:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5847:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    584d:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    5850:	7c af                	jl     5801 <str_match_parser+0x14e>
    5852:	eb 5a                	jmp    58ae <str_match_parser+0x1fb>
    5854:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5858:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    585b:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    585e:	eb 42                	jmp    58a2 <str_match_parser+0x1ef>
    5860:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5864:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5867:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    586a:	48 98                	cdqe   
    586c:	48 01 d0             	add    rax,rdx
    586f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5872:	0f b6 d0             	movzx  edx,al
    5875:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5878:	8d 48 01             	lea    ecx,[rax+0x1]
    587b:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    587e:	01 c0                	add    eax,eax
    5880:	48 63 c8             	movsxd rcx,eax
    5883:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5887:	48 01 c8             	add    rax,rcx
    588a:	48 8d 35 7c 72 00 00 	lea    rsi,[rip+0x727c]        # cb0d <_IO_stdin_used+0xb0d>
    5891:	48 89 c7             	mov    rdi,rax
    5894:	b8 00 00 00 00       	mov    eax,0x0
    5899:	e8 92 cf ff ff       	call   2830 <sprintf@plt>
    589e:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    58a2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    58a6:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    58a9:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    58ac:	7c b2                	jl     5860 <str_match_parser+0x1ad>
    58ae:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    58b2:	48 8d 50 40          	lea    rdx,[rax+0x40]
    58b6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    58ba:	48 89 d6             	mov    rsi,rdx
    58bd:	48 89 c7             	mov    rdi,rax
    58c0:	e8 bb cf ff ff       	call   2880 <strstr@plt>
    58c5:	48 85 c0             	test   rax,rax
    58c8:	74 07                	je     58d1 <str_match_parser+0x21e>
    58ca:	b8 01 00 00 00       	mov    eax,0x1
    58cf:	eb 05                	jmp    58d6 <str_match_parser+0x223>
    58d1:	b8 00 00 00 00       	mov    eax,0x0
    58d6:	48 89 dc             	mov    rsp,rbx
    58d9:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    58dd:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    58e4:	00 00 
    58e6:	74 05                	je     58ed <str_match_parser+0x23a>
    58e8:	e8 93 cc ff ff       	call   2580 <__stack_chk_fail@plt>
    58ed:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    58f1:	c9                   	leave  
    58f2:	c3                   	ret    

00000000000058f3 <is_blocked_ipv4>:
    58f3:	f3 0f 1e fa          	endbr64 
    58f7:	55                   	push   rbp
    58f8:	48 89 e5             	mov    rbp,rsp
    58fb:	48 83 ec 20          	sub    rsp,0x20
    58ff:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5903:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    590a:	eb 3b                	jmp    5947 <is_blocked_ipv4+0x54>
    590c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    590f:	48 63 d0             	movsxd rdx,eax
    5912:	48 89 d0             	mov    rax,rdx
    5915:	48 c1 e0 03          	shl    rax,0x3
    5919:	48 01 d0             	add    rax,rdx
    591c:	48 01 c0             	add    rax,rax
    591f:	48 8d 15 9a 44 10 00 	lea    rdx,[rip+0x10449a]        # 109dc0 <blocked_ipv4_addrs>
    5926:	48 01 c2             	add    rdx,rax
    5929:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    592d:	48 89 d6             	mov    rsi,rdx
    5930:	48 89 c7             	mov    rdi,rax
    5933:	e8 48 cd ff ff       	call   2680 <strcmp@plt>
    5938:	85 c0                	test   eax,eax
    593a:	75 07                	jne    5943 <is_blocked_ipv4+0x50>
    593c:	b8 01 00 00 00       	mov    eax,0x1
    5941:	eb 14                	jmp    5957 <is_blocked_ipv4+0x64>
    5943:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5947:	8b 05 c3 b6 00 00    	mov    eax,DWORD PTR [rip+0xb6c3]        # 11010 <blk_ipv4_len>
    594d:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    5950:	7e ba                	jle    590c <is_blocked_ipv4+0x19>
    5952:	b8 00 00 00 00       	mov    eax,0x0
    5957:	c9                   	leave  
    5958:	c3                   	ret    

0000000000005959 <none>:
    5959:	f3 0f 1e fa          	endbr64 
    595d:	55                   	push   rbp
    595e:	48 89 e5             	mov    rbp,rsp
    5961:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5965:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5969:	b8 01 00 00 00       	mov    eax,0x1
    596e:	5d                   	pop    rbp
    596f:	c3                   	ret    

0000000000005970 <pcre_match>:
    5970:	f3 0f 1e fa          	endbr64 
    5974:	55                   	push   rbp
    5975:	48 89 e5             	mov    rbp,rsp
    5978:	48 83 ec 10          	sub    rsp,0x10
    597c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5980:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5984:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5988:	48 8b 00             	mov    rax,QWORD PTR [rax]
    598b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    598f:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    5996:	41 b8 00 00 00 00    	mov    r8d,0x0
    599c:	b9 00 00 00 00       	mov    ecx,0x0
    59a1:	ba 00 00 00 00       	mov    edx,0x0
    59a6:	48 89 c6             	mov    rsi,rax
    59a9:	e8 82 cd ff ff       	call   2730 <regexec@plt>
    59ae:	83 f8 01             	cmp    eax,0x1
    59b1:	75 07                	jne    59ba <pcre_match+0x4a>
    59b3:	b8 00 00 00 00       	mov    eax,0x0
    59b8:	eb 05                	jmp    59bf <pcre_match+0x4f>
    59ba:	b8 01 00 00 00       	mov    eax,0x1
    59bf:	c9                   	leave  
    59c0:	c3                   	ret    

00000000000059c1 <rule_library_parser>:
    59c1:	f3 0f 1e fa          	endbr64 
    59c5:	55                   	push   rbp
    59c6:	48 89 e5             	mov    rbp,rsp
    59c9:	53                   	push   rbx
    59ca:	48 83 ec 48          	sub    rsp,0x48
    59ce:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    59d2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    59d9:	00 00 
    59db:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    59df:	31 c0                	xor    eax,eax
    59e1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    59e5:	48 8d 35 2c 71 00 00 	lea    rsi,[rip+0x712c]        # cb18 <_IO_stdin_used+0xb18>
    59ec:	48 89 c7             	mov    rdi,rax
    59ef:	e8 7c cd ff ff       	call   2770 <fopen@plt>
    59f4:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    59f8:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    59fd:	75 22                	jne    5a21 <rule_library_parser+0x60>
    59ff:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5a03:	48 89 c6             	mov    rsi,rax
    5a06:	48 8d 3d 13 71 00 00 	lea    rdi,[rip+0x7113]        # cb20 <_IO_stdin_used+0xb20>
    5a0d:	b8 00 00 00 00       	mov    eax,0x0
    5a12:	e8 a9 cb ff ff       	call   25c0 <printf@plt>
    5a17:	bf 01 00 00 00       	mov    edi,0x1
    5a1c:	e8 1f ce ff ff       	call   2840 <exit@plt>
    5a21:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5a28:	00 
    5a29:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5a30:	00 
    5a31:	e9 72 05 00 00       	jmp    5fa8 <rule_library_parser+0x5e7>
    5a36:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5a3a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a3e:	48 8d 35 01 71 00 00 	lea    rsi,[rip+0x7101]        # cb46 <_IO_stdin_used+0xb46>
    5a45:	48 89 c7             	mov    rdi,rax
    5a48:	e8 f3 cb ff ff       	call   2640 <strcspn@plt>
    5a4d:	48 01 d8             	add    rax,rbx
    5a50:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5a53:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a57:	48 89 c7             	mov    rdi,rax
    5a5a:	e8 bc 05 00 00       	call   601b <is_comment>
    5a5f:	84 c0                	test   al,al
    5a61:	74 05                	je     5a68 <rule_library_parser+0xa7>
    5a63:	e9 40 05 00 00       	jmp    5fa8 <rule_library_parser+0x5e7>
    5a68:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a6c:	ba 1a 00 00 00       	mov    edx,0x1a
    5a71:	48 8d 35 d0 70 00 00 	lea    rsi,[rip+0x70d0]        # cb48 <_IO_stdin_used+0xb48>
    5a78:	48 89 c7             	mov    rdi,rax
    5a7b:	e8 40 ca ff ff       	call   24c0 <strncmp@plt>
    5a80:	85 c0                	test   eax,eax
    5a82:	75 39                	jne    5abd <rule_library_parser+0xfc>
    5a84:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a88:	48 83 c0 1a          	add    rax,0x1a
    5a8c:	48 8d 35 d0 70 00 00 	lea    rsi,[rip+0x70d0]        # cb63 <_IO_stdin_used+0xb63>
    5a93:	48 89 c7             	mov    rdi,rax
    5a96:	e8 e5 cb ff ff       	call   2680 <strcmp@plt>
    5a9b:	85 c0                	test   eax,eax
    5a9d:	75 0f                	jne    5aae <rule_library_parser+0xed>
    5a9f:	c7 05 fb 42 10 00 01 	mov    DWORD PTR [rip+0x1042fb],0x1        # 109da4 <strict_icmp_timestamp_req>
    5aa6:	00 00 00 
    5aa9:	e9 e4 04 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5aae:	c7 05 ec 42 10 00 00 	mov    DWORD PTR [rip+0x1042ec],0x0        # 109da4 <strict_icmp_timestamp_req>
    5ab5:	00 00 00 
    5ab8:	e9 d5 04 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5abd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ac1:	ba 1d 00 00 00       	mov    edx,0x1d
    5ac6:	48 8d 35 9a 70 00 00 	lea    rsi,[rip+0x709a]        # cb67 <_IO_stdin_used+0xb67>
    5acd:	48 89 c7             	mov    rdi,rax
    5ad0:	e8 eb c9 ff ff       	call   24c0 <strncmp@plt>
    5ad5:	85 c0                	test   eax,eax
    5ad7:	75 39                	jne    5b12 <rule_library_parser+0x151>
    5ad9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5add:	48 83 c0 1d          	add    rax,0x1d
    5ae1:	48 8d 35 7b 70 00 00 	lea    rsi,[rip+0x707b]        # cb63 <_IO_stdin_used+0xb63>
    5ae8:	48 89 c7             	mov    rdi,rax
    5aeb:	e8 90 cb ff ff       	call   2680 <strcmp@plt>
    5af0:	85 c0                	test   eax,eax
    5af2:	75 0f                	jne    5b03 <rule_library_parser+0x142>
    5af4:	c7 05 ea 1d 10 00 01 	mov    DWORD PTR [rip+0x101dea],0x1        # 1078e8 <strict_nmap_host_alive_check>
    5afb:	00 00 00 
    5afe:	e9 8f 04 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5b03:	c7 05 db 1d 10 00 00 	mov    DWORD PTR [rip+0x101ddb],0x0        # 1078e8 <strict_nmap_host_alive_check>
    5b0a:	00 00 00 
    5b0d:	e9 80 04 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5b12:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b16:	ba 17 00 00 00       	mov    edx,0x17
    5b1b:	48 8d 35 63 70 00 00 	lea    rsi,[rip+0x7063]        # cb85 <_IO_stdin_used+0xb85>
    5b22:	48 89 c7             	mov    rdi,rax
    5b25:	e8 96 c9 ff ff       	call   24c0 <strncmp@plt>
    5b2a:	85 c0                	test   eax,eax
    5b2c:	75 43                	jne    5b71 <rule_library_parser+0x1b0>
    5b2e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b32:	48 89 c7             	mov    rdi,rax
    5b35:	e8 26 ca ff ff       	call   2560 <strlen@plt>
    5b3a:	48 83 f8 17          	cmp    rax,0x17
    5b3e:	77 16                	ja     5b56 <rule_library_parser+0x195>
    5b40:	48 8d 3d 56 70 00 00 	lea    rdi,[rip+0x7056]        # cb9d <_IO_stdin_used+0xb9d>
    5b47:	e8 b4 c9 ff ff       	call   2500 <puts@plt>
    5b4c:	bf 01 00 00 00       	mov    edi,0x1
    5b51:	e8 ea cc ff ff       	call   2840 <exit@plt>
    5b56:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b5a:	48 83 c0 17          	add    rax,0x17
    5b5e:	48 89 c7             	mov    rdi,rax
    5b61:	e8 7a cc ff ff       	call   27e0 <atoi@plt>
    5b66:	89 05 34 1d 10 00    	mov    DWORD PTR [rip+0x101d34],eax        # 1078a0 <clean_delay_pkts>
    5b6c:	e9 21 04 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5b71:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b75:	ba 18 00 00 00       	mov    edx,0x18
    5b7a:	48 8d 35 36 70 00 00 	lea    rsi,[rip+0x7036]        # cbb7 <_IO_stdin_used+0xbb7>
    5b81:	48 89 c7             	mov    rdi,rax
    5b84:	e8 37 c9 ff ff       	call   24c0 <strncmp@plt>
    5b89:	85 c0                	test   eax,eax
    5b8b:	75 46                	jne    5bd3 <rule_library_parser+0x212>
    5b8d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b91:	48 89 c7             	mov    rdi,rax
    5b94:	e8 c7 c9 ff ff       	call   2560 <strlen@plt>
    5b99:	48 83 f8 18          	cmp    rax,0x18
    5b9d:	75 16                	jne    5bb5 <rule_library_parser+0x1f4>
    5b9f:	48 8d 3d f7 6f 00 00 	lea    rdi,[rip+0x6ff7]        # cb9d <_IO_stdin_used+0xb9d>
    5ba6:	e8 55 c9 ff ff       	call   2500 <puts@plt>
    5bab:	bf 01 00 00 00       	mov    edi,0x1
    5bb0:	e8 8b cc ff ff       	call   2840 <exit@plt>
    5bb5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bb9:	48 83 c0 18          	add    rax,0x18
    5bbd:	48 89 c7             	mov    rdi,rax
    5bc0:	e8 1b cc ff ff       	call   27e0 <atoi@plt>
    5bc5:	48 98                	cdqe   
    5bc7:	48 89 05 5a 1d 10 00 	mov    QWORD PTR [rip+0x101d5a],rax        # 107928 <clean_delay>
    5bce:	e9 bf 03 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5bd3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bd7:	ba 0b 00 00 00       	mov    edx,0xb
    5bdc:	48 8d 35 ed 6f 00 00 	lea    rsi,[rip+0x6fed]        # cbd0 <_IO_stdin_used+0xbd0>
    5be3:	48 89 c7             	mov    rdi,rax
    5be6:	e8 d5 c8 ff ff       	call   24c0 <strncmp@plt>
    5beb:	85 c0                	test   eax,eax
    5bed:	75 33                	jne    5c22 <rule_library_parser+0x261>
    5bef:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bf3:	48 83 c0 0b          	add    rax,0xb
    5bf7:	48 8d 35 65 6f 00 00 	lea    rsi,[rip+0x6f65]        # cb63 <_IO_stdin_used+0xb63>
    5bfe:	48 89 c7             	mov    rdi,rax
    5c01:	e8 7a ca ff ff       	call   2680 <strcmp@plt>
    5c06:	85 c0                	test   eax,eax
    5c08:	75 0c                	jne    5c16 <rule_library_parser+0x255>
    5c0a:	c6 05 0f 1d 10 00 01 	mov    BYTE PTR [rip+0x101d0f],0x1        # 107920 <use_sqlite>
    5c11:	e9 7c 03 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5c16:	c6 05 03 1d 10 00 00 	mov    BYTE PTR [rip+0x101d03],0x0        # 107920 <use_sqlite>
    5c1d:	e9 70 03 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5c22:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c26:	ba 15 00 00 00       	mov    edx,0x15
    5c2b:	48 8d 35 aa 6f 00 00 	lea    rsi,[rip+0x6faa]        # cbdc <_IO_stdin_used+0xbdc>
    5c32:	48 89 c7             	mov    rdi,rax
    5c35:	e8 86 c8 ff ff       	call   24c0 <strncmp@plt>
    5c3a:	85 c0                	test   eax,eax
    5c3c:	75 34                	jne    5c72 <rule_library_parser+0x2b1>
    5c3e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c42:	48 83 c0 15          	add    rax,0x15
    5c46:	48 89 c6             	mov    rsi,rax
    5c49:	48 8d 3d b0 1c 10 00 	lea    rdi,[rip+0x101cb0]        # 107900 <sqlite_db_path>
    5c50:	e8 7b c8 ff ff       	call   24d0 <strcpy@plt>
    5c55:	48 8d 35 a4 1c 10 00 	lea    rsi,[rip+0x101ca4]        # 107900 <sqlite_db_path>
    5c5c:	48 8d 3d 8f 6f 00 00 	lea    rdi,[rip+0x6f8f]        # cbf2 <_IO_stdin_used+0xbf2>
    5c63:	b8 00 00 00 00       	mov    eax,0x0
    5c68:	e8 bf 2c 00 00       	call   892c <livedebug>
    5c6d:	e9 20 03 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5c72:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c76:	ba 0b 00 00 00       	mov    edx,0xb
    5c7b:	48 8d 35 89 6f 00 00 	lea    rsi,[rip+0x6f89]        # cc0b <_IO_stdin_used+0xc0b>
    5c82:	48 89 c7             	mov    rdi,rax
    5c85:	e8 36 c8 ff ff       	call   24c0 <strncmp@plt>
    5c8a:	85 c0                	test   eax,eax
    5c8c:	75 34                	jne    5cc2 <rule_library_parser+0x301>
    5c8e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c92:	48 83 c0 0b          	add    rax,0xb
    5c96:	48 89 c6             	mov    rsi,rax
    5c99:	48 8d 3d e8 40 10 00 	lea    rdi,[rip+0x1040e8]        # 109d88 <input_adapter>
    5ca0:	e8 2b c8 ff ff       	call   24d0 <strcpy@plt>
    5ca5:	48 8d 35 dc 40 10 00 	lea    rsi,[rip+0x1040dc]        # 109d88 <input_adapter>
    5cac:	48 8d 3d 65 6f 00 00 	lea    rdi,[rip+0x6f65]        # cc18 <_IO_stdin_used+0xc18>
    5cb3:	b8 00 00 00 00       	mov    eax,0x0
    5cb8:	e8 6f 2c 00 00       	call   892c <livedebug>
    5cbd:	e9 d0 02 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5cc2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cc6:	ba 0c 00 00 00       	mov    edx,0xc
    5ccb:	48 8d 35 79 6f 00 00 	lea    rsi,[rip+0x6f79]        # cc4b <_IO_stdin_used+0xc4b>
    5cd2:	48 89 c7             	mov    rdi,rax
    5cd5:	e8 e6 c7 ff ff       	call   24c0 <strncmp@plt>
    5cda:	85 c0                	test   eax,eax
    5cdc:	75 34                	jne    5d12 <rule_library_parser+0x351>
    5cde:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ce2:	48 83 c0 0c          	add    rax,0xc
    5ce6:	48 89 c6             	mov    rsi,rax
    5ce9:	48 8d 3d a8 40 10 00 	lea    rdi,[rip+0x1040a8]        # 109d98 <output_adapter>
    5cf0:	e8 db c7 ff ff       	call   24d0 <strcpy@plt>
    5cf5:	48 8d 35 9c 40 10 00 	lea    rsi,[rip+0x10409c]        # 109d98 <output_adapter>
    5cfc:	48 8d 3d 55 6f 00 00 	lea    rdi,[rip+0x6f55]        # cc58 <_IO_stdin_used+0xc58>
    5d03:	b8 00 00 00 00       	mov    eax,0x0
    5d08:	e8 1f 2c 00 00       	call   892c <livedebug>
    5d0d:	e9 80 02 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5d12:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d16:	ba 05 00 00 00       	mov    edx,0x5
    5d1b:	48 8d 35 6a 6f 00 00 	lea    rsi,[rip+0x6f6a]        # cc8c <_IO_stdin_used+0xc8c>
    5d22:	48 89 c7             	mov    rdi,rax
    5d25:	e8 96 c7 ff ff       	call   24c0 <strncmp@plt>
    5d2a:	85 c0                	test   eax,eax
    5d2c:	0f 85 83 00 00 00    	jne    5db5 <rule_library_parser+0x3f4>
    5d32:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d36:	48 83 c0 05          	add    rax,0x5
    5d3a:	48 89 c6             	mov    rsi,rax
    5d3d:	48 8d 3d 4e 6f 00 00 	lea    rdi,[rip+0x6f4e]        # cc92 <_IO_stdin_used+0xc92>
    5d44:	b8 00 00 00 00       	mov    eax,0x0
    5d49:	e8 de 2b 00 00       	call   892c <livedebug>
    5d4e:	48 8d 3d 46 6f 00 00 	lea    rdi,[rip+0x6f46]        # cc9b <_IO_stdin_used+0xc9b>
    5d55:	b8 00 00 00 00       	mov    eax,0x0
    5d5a:	e8 61 c8 ff ff       	call   25c0 <printf@plt>
    5d5f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d63:	48 83 c0 05          	add    rax,0x5
    5d67:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    5d6a:	0f b6 05 36 6f 00 00 	movzx  eax,BYTE PTR [rip+0x6f36]        # cca7 <_IO_stdin_used+0xca7>
    5d71:	0f b6 d2             	movzx  edx,dl
    5d74:	0f b6 c0             	movzx  eax,al
    5d77:	29 c2                	sub    edx,eax
    5d79:	89 d0                	mov    eax,edx
    5d7b:	85 c0                	test   eax,eax
    5d7d:	75 1b                	jne    5d9a <rule_library_parser+0x3d9>
    5d7f:	c7 05 9b b2 00 00 02 	mov    DWORD PTR [rip+0xb29b],0x2        # 11024 <VIGIL_MODE>
    5d86:	00 00 00 
    5d89:	48 8d 3d 19 6f 00 00 	lea    rdi,[rip+0x6f19]        # cca9 <_IO_stdin_used+0xca9>
    5d90:	e8 6b c7 ff ff       	call   2500 <puts@plt>
    5d95:	e9 f8 01 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5d9a:	c7 05 80 b2 00 00 01 	mov    DWORD PTR [rip+0xb280],0x1        # 11024 <VIGIL_MODE>
    5da1:	00 00 00 
    5da4:	48 8d 3d 15 6f 00 00 	lea    rdi,[rip+0x6f15]        # ccc0 <_IO_stdin_used+0xcc0>
    5dab:	e8 50 c7 ff ff       	call   2500 <puts@plt>
    5db0:	e9 dd 01 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5db5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5db9:	ba 08 00 00 00       	mov    edx,0x8
    5dbe:	48 8d 35 12 6f 00 00 	lea    rsi,[rip+0x6f12]        # ccd7 <_IO_stdin_used+0xcd7>
    5dc5:	48 89 c7             	mov    rdi,rax
    5dc8:	e8 f3 c6 ff ff       	call   24c0 <strncmp@plt>
    5dcd:	85 c0                	test   eax,eax
    5dcf:	75 34                	jne    5e05 <rule_library_parser+0x444>
    5dd1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dd5:	48 83 c0 08          	add    rax,0x8
    5dd9:	48 89 c6             	mov    rsi,rax
    5ddc:	48 8d 3d ed 1a 10 00 	lea    rdi,[rip+0x101aed]        # 1078d0 <local_ip>
    5de3:	e8 e8 c6 ff ff       	call   24d0 <strcpy@plt>
    5de8:	48 8d 35 e1 1a 10 00 	lea    rsi,[rip+0x101ae1]        # 1078d0 <local_ip>
    5def:	48 8d 3d ea 6e 00 00 	lea    rdi,[rip+0x6eea]        # cce0 <_IO_stdin_used+0xce0>
    5df6:	b8 00 00 00 00       	mov    eax,0x0
    5dfb:	e8 2c 2b 00 00       	call   892c <livedebug>
    5e00:	e9 8d 01 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5e05:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e09:	ba 06 00 00 00       	mov    edx,0x6
    5e0e:	48 8d 35 e6 6e 00 00 	lea    rsi,[rip+0x6ee6]        # ccfb <_IO_stdin_used+0xcfb>
    5e15:	48 89 c7             	mov    rdi,rax
    5e18:	e8 a3 c6 ff ff       	call   24c0 <strncmp@plt>
    5e1d:	85 c0                	test   eax,eax
    5e1f:	75 1c                	jne    5e3d <rule_library_parser+0x47c>
    5e21:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e25:	48 83 c0 06          	add    rax,0x6
    5e29:	48 89 c6             	mov    rsi,rax
    5e2c:	48 8d 3d 1d 1d 10 00 	lea    rdi,[rip+0x101d1d]        # 107b50 <def_gw>
    5e33:	e8 98 c6 ff ff       	call   24d0 <strcpy@plt>
    5e38:	e9 55 01 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5e3d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e41:	ba 08 00 00 00       	mov    edx,0x8
    5e46:	48 8d 35 b5 6e 00 00 	lea    rsi,[rip+0x6eb5]        # cd02 <_IO_stdin_used+0xd02>
    5e4d:	48 89 c7             	mov    rdi,rax
    5e50:	e8 6b c6 ff ff       	call   24c0 <strncmp@plt>
    5e55:	85 c0                	test   eax,eax
    5e57:	75 3f                	jne    5e98 <rule_library_parser+0x4d7>
    5e59:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e5d:	48 83 c0 08          	add    rax,0x8
    5e61:	48 8d 35 fb 6c 00 00 	lea    rsi,[rip+0x6cfb]        # cb63 <_IO_stdin_used+0xb63>
    5e68:	48 89 c7             	mov    rdi,rax
    5e6b:	e8 10 c8 ff ff       	call   2680 <strcmp@plt>
    5e70:	85 c0                	test   eax,eax
    5e72:	75 18                	jne    5e8c <rule_library_parser+0x4cb>
    5e74:	c6 05 b6 1a 10 00 01 	mov    BYTE PTR [rip+0x101ab6],0x1        # 107931 <use_spi>
    5e7b:	48 8d 3d 89 6e 00 00 	lea    rdi,[rip+0x6e89]        # cd0b <_IO_stdin_used+0xd0b>
    5e82:	e8 79 c6 ff ff       	call   2500 <puts@plt>
    5e87:	e9 06 01 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5e8c:	c6 05 9e 1a 10 00 00 	mov    BYTE PTR [rip+0x101a9e],0x0        # 107931 <use_spi>
    5e93:	e9 fa 00 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5e98:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e9c:	ba 09 00 00 00       	mov    edx,0x9
    5ea1:	48 8d 35 7c 6e 00 00 	lea    rsi,[rip+0x6e7c]        # cd24 <_IO_stdin_used+0xd24>
    5ea8:	48 89 c7             	mov    rdi,rax
    5eab:	e8 10 c6 ff ff       	call   24c0 <strncmp@plt>
    5eb0:	85 c0                	test   eax,eax
    5eb2:	75 27                	jne    5edb <rule_library_parser+0x51a>
    5eb4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5eb8:	48 89 c7             	mov    rdi,rax
    5ebb:	e8 84 01 00 00       	call   6044 <rstrip>
    5ec0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ec4:	48 83 c0 09          	add    rax,0x9
    5ec8:	48 89 c7             	mov    rdi,rax
    5ecb:	e8 4a 50 00 00       	call   af1a <homenet_toi>
    5ed0:	89 05 0e 1a 10 00    	mov    DWORD PTR [rip+0x101a0e],eax        # 1078e4 <homenet>
    5ed6:	e9 b7 00 00 00       	jmp    5f92 <rule_library_parser+0x5d1>
    5edb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5edf:	ba 0e 00 00 00       	mov    edx,0xe
    5ee4:	48 8d 35 43 6e 00 00 	lea    rsi,[rip+0x6e43]        # cd2e <_IO_stdin_used+0xd2e>
    5eeb:	48 89 c7             	mov    rdi,rax
    5eee:	e8 cd c5 ff ff       	call   24c0 <strncmp@plt>
    5ef3:	85 c0                	test   eax,eax
    5ef5:	75 24                	jne    5f1b <rule_library_parser+0x55a>
    5ef7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5efb:	48 89 c7             	mov    rdi,rax
    5efe:	e8 41 01 00 00       	call   6044 <rstrip>
    5f03:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f07:	48 83 c0 0e          	add    rax,0xe
    5f0b:	48 89 c7             	mov    rdi,rax
    5f0e:	e8 07 50 00 00       	call   af1a <homenet_toi>
    5f13:	89 05 67 3e 10 00    	mov    DWORD PTR [rip+0x103e67],eax        # 109d80 <homenetmask>
    5f19:	eb 77                	jmp    5f92 <rule_library_parser+0x5d1>
    5f1b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f1f:	ba 09 00 00 00       	mov    edx,0x9
    5f24:	48 8d 35 12 6e 00 00 	lea    rsi,[rip+0x6e12]        # cd3d <_IO_stdin_used+0xd3d>
    5f2b:	48 89 c7             	mov    rdi,rax
    5f2e:	e8 8d c5 ff ff       	call   24c0 <strncmp@plt>
    5f33:	85 c0                	test   eax,eax
    5f35:	75 3f                	jne    5f76 <rule_library_parser+0x5b5>
    5f37:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f3b:	48 89 c7             	mov    rdi,rax
    5f3e:	e8 01 01 00 00       	call   6044 <rstrip>
    5f43:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f47:	48 83 c0 09          	add    rax,0x9
    5f4b:	48 8d 35 f5 6d 00 00 	lea    rsi,[rip+0x6df5]        # cd47 <_IO_stdin_used+0xd47>
    5f52:	48 89 c7             	mov    rdi,rax
    5f55:	e8 26 c7 ff ff       	call   2680 <strcmp@plt>
    5f5a:	85 c0                	test   eax,eax
    5f5c:	75 0c                	jne    5f6a <rule_library_parser+0x5a9>
    5f5e:	c7 05 58 19 10 00 04 	mov    DWORD PTR [rip+0x101958],0x4        # 1078c0 <vigil_location>
    5f65:	00 00 00 
    5f68:	eb 28                	jmp    5f92 <rule_library_parser+0x5d1>
    5f6a:	c7 05 4c 19 10 00 03 	mov    DWORD PTR [rip+0x10194c],0x3        # 1078c0 <vigil_location>
    5f71:	00 00 00 
    5f74:	eb 1c                	jmp    5f92 <rule_library_parser+0x5d1>
    5f76:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f7a:	48 89 c7             	mov    rdi,rax
    5f7d:	e8 7f 00 00 00       	call   6001 <is_rule>
    5f82:	84 c0                	test   al,al
    5f84:	74 0c                	je     5f92 <rule_library_parser+0x5d1>
    5f86:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f8a:	48 89 c7             	mov    rdi,rax
    5f8d:	e8 19 01 00 00       	call   60ab <rule_parser>
    5f92:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f96:	ba 08 00 00 00       	mov    edx,0x8
    5f9b:	be 00 00 00 00       	mov    esi,0x0
    5fa0:	48 89 c7             	mov    rdi,rax
    5fa3:	e8 58 c6 ff ff       	call   2600 <memset@plt>
    5fa8:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5fac:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5fb0:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5fb4:	48 89 ce             	mov    rsi,rcx
    5fb7:	48 89 c7             	mov    rdi,rax
    5fba:	e8 31 c8 ff ff       	call   27f0 <getline@plt>
    5fbf:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5fc3:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5fc8:	0f 85 68 fa ff ff    	jne    5a36 <rule_library_parser+0x75>
    5fce:	8b 05 50 b0 00 00    	mov    eax,DWORD PTR [rip+0xb050]        # 11024 <VIGIL_MODE>
    5fd4:	3d ff ff 00 00       	cmp    eax,0xffff
    5fd9:	75 0a                	jne    5fe5 <rule_library_parser+0x624>
    5fdb:	c7 05 3f b0 00 00 01 	mov    DWORD PTR [rip+0xb03f],0x1        # 11024 <VIGIL_MODE>
    5fe2:	00 00 00 
    5fe5:	90                   	nop
    5fe6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5fea:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    5ff1:	00 00 
    5ff3:	74 05                	je     5ffa <rule_library_parser+0x639>
    5ff5:	e8 86 c5 ff ff       	call   2580 <__stack_chk_fail@plt>
    5ffa:	48 83 c4 48          	add    rsp,0x48
    5ffe:	5b                   	pop    rbx
    5fff:	5d                   	pop    rbp
    6000:	c3                   	ret    

0000000000006001 <is_rule>:
    6001:	f3 0f 1e fa          	endbr64 
    6005:	55                   	push   rbp
    6006:	48 89 e5             	mov    rbp,rsp
    6009:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    600d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6011:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6014:	3c 24                	cmp    al,0x24
    6016:	0f 94 c0             	sete   al
    6019:	5d                   	pop    rbp
    601a:	c3                   	ret    

000000000000601b <is_comment>:
    601b:	f3 0f 1e fa          	endbr64 
    601f:	55                   	push   rbp
    6020:	48 89 e5             	mov    rbp,rsp
    6023:	48 83 ec 10          	sub    rsp,0x10
    6027:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    602b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    602f:	be 23 00 00 00       	mov    esi,0x23
    6034:	48 89 c7             	mov    rdi,rax
    6037:	e8 74 c5 ff ff       	call   25b0 <strchr@plt>
    603c:	48 85 c0             	test   rax,rax
    603f:	0f 95 c0             	setne  al
    6042:	c9                   	leave  
    6043:	c3                   	ret    

0000000000006044 <rstrip>:
    6044:	f3 0f 1e fa          	endbr64 
    6048:	55                   	push   rbp
    6049:	48 89 e5             	mov    rbp,rsp
    604c:	48 83 ec 10          	sub    rsp,0x10
    6050:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6054:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6058:	48 8d 35 e7 6a 00 00 	lea    rsi,[rip+0x6ae7]        # cb46 <_IO_stdin_used+0xb46>
    605f:	48 89 c7             	mov    rdi,rax
    6062:	e8 d9 c5 ff ff       	call   2640 <strcspn@plt>
    6067:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    606b:	48 01 d0             	add    rax,rdx
    606e:	c6 00 00             	mov    BYTE PTR [rax],0x0
    6071:	90                   	nop
    6072:	c9                   	leave  
    6073:	c3                   	ret    

0000000000006074 <syntax_error>:
    6074:	f3 0f 1e fa          	endbr64 
    6078:	55                   	push   rbp
    6079:	48 89 e5             	mov    rbp,rsp
    607c:	48 83 ec 10          	sub    rsp,0x10
    6080:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6084:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    6087:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    608b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    608e:	89 c6                	mov    esi,eax
    6090:	48 8d 3d b9 6c 00 00 	lea    rdi,[rip+0x6cb9]        # cd50 <_IO_stdin_used+0xd50>
    6097:	b8 00 00 00 00       	mov    eax,0x0
    609c:	e8 1f c5 ff ff       	call   25c0 <printf@plt>
    60a1:	bf 01 00 00 00       	mov    edi,0x1
    60a6:	e8 95 c7 ff ff       	call   2840 <exit@plt>

00000000000060ab <rule_parser>:
    60ab:	f3 0f 1e fa          	endbr64 
    60af:	55                   	push   rbp
    60b0:	48 89 e5             	mov    rbp,rsp
    60b3:	48 83 ec 40          	sub    rsp,0x40
    60b7:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    60bb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    60c2:	00 00 
    60c4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    60c8:	31 c0                	xor    eax,eax
    60ca:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    60ce:	48 83 c0 01          	add    rax,0x1
    60d2:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    60d6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60da:	48 8d 35 37 6a 00 00 	lea    rsi,[rip+0x6a37]        # cb18 <_IO_stdin_used+0xb18>
    60e1:	48 89 c7             	mov    rdi,rax
    60e4:	e8 87 c6 ff ff       	call   2770 <fopen@plt>
    60e9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    60ed:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    60f2:	75 22                	jne    6116 <rule_parser+0x6b>
    60f4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60f8:	48 89 c6             	mov    rsi,rax
    60fb:	48 8d 3d 6e 6c 00 00 	lea    rdi,[rip+0x6c6e]        # cd70 <_IO_stdin_used+0xd70>
    6102:	b8 00 00 00 00       	mov    eax,0x0
    6107:	e8 b4 c4 ff ff       	call   25c0 <printf@plt>
    610c:	bf 01 00 00 00       	mov    edi,0x1
    6111:	e8 2a c7 ff ff       	call   2840 <exit@plt>
    6116:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    611a:	48 89 c6             	mov    rsi,rax
    611d:	48 8d 3d 7f 6c 00 00 	lea    rdi,[rip+0x6c7f]        # cda3 <_IO_stdin_used+0xda3>
    6124:	b8 00 00 00 00       	mov    eax,0x0
    6129:	e8 92 c4 ff ff       	call   25c0 <printf@plt>
    612e:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6135:	00 
    6136:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    613d:	00 
    613e:	eb 54                	jmp    6194 <rule_parser+0xe9>
    6140:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6144:	48 89 c7             	mov    rdi,rax
    6147:	e8 cf fe ff ff       	call   601b <is_comment>
    614c:	84 c0                	test   al,al
    614e:	74 02                	je     6152 <rule_parser+0xa7>
    6150:	eb 42                	jmp    6194 <rule_parser+0xe9>
    6152:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6156:	48 89 c7             	mov    rdi,rax
    6159:	e8 e6 fe ff ff       	call   6044 <rstrip>
    615e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6162:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6165:	0f b6 c0             	movzx  eax,al
    6168:	f7 d8                	neg    eax
    616a:	85 c0                	test   eax,eax
    616c:	75 02                	jne    6170 <rule_parser+0xc5>
    616e:	eb 24                	jmp    6194 <rule_parser+0xe9>
    6170:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6174:	48 8d 35 39 6c 00 00 	lea    rsi,[rip+0x6c39]        # cdb4 <_IO_stdin_used+0xdb4>
    617b:	48 89 c7             	mov    rdi,rax
    617e:	e8 fd c6 ff ff       	call   2880 <strstr@plt>
    6183:	48 85 c0             	test   rax,rax
    6186:	74 0c                	je     6194 <rule_parser+0xe9>
    6188:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    618c:	48 89 c7             	mov    rdi,rax
    618f:	e8 e2 38 00 00       	call   9a76 <line_parser>
    6194:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6198:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    619c:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    61a0:	48 89 ce             	mov    rsi,rcx
    61a3:	48 89 c7             	mov    rdi,rax
    61a6:	e8 45 c6 ff ff       	call   27f0 <getline@plt>
    61ab:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    61af:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    61b4:	75 8a                	jne    6140 <rule_parser+0x95>
    61b6:	0f b6 05 e5 3b 10 00 	movzx  eax,BYTE PTR [rip+0x103be5]        # 109da2 <debug_mode>
    61bd:	84 c0                	test   al,al
    61bf:	74 18                	je     61d9 <rule_parser+0x12e>
    61c1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    61c5:	48 89 c6             	mov    rsi,rax
    61c8:	48 8d 3d eb 6b 00 00 	lea    rdi,[rip+0x6beb]        # cdba <_IO_stdin_used+0xdba>
    61cf:	b8 00 00 00 00       	mov    eax,0x0
    61d4:	e8 e7 c3 ff ff       	call   25c0 <printf@plt>
    61d9:	90                   	nop
    61da:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    61de:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    61e5:	00 00 
    61e7:	74 05                	je     61ee <rule_parser+0x143>
    61e9:	e8 92 c3 ff ff       	call   2580 <__stack_chk_fail@plt>
    61ee:	c9                   	leave  
    61ef:	c3                   	ret    

00000000000061f0 <deny_conf_parser>:
    61f0:	f3 0f 1e fa          	endbr64 
    61f4:	55                   	push   rbp
    61f5:	48 89 e5             	mov    rbp,rsp
    61f8:	48 83 ec 50          	sub    rsp,0x50
    61fc:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    6200:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6207:	00 00 
    6209:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    620d:	31 c0                	xor    eax,eax
    620f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6213:	48 8d 35 fe 68 00 00 	lea    rsi,[rip+0x68fe]        # cb18 <_IO_stdin_used+0xb18>
    621a:	48 89 c7             	mov    rdi,rax
    621d:	e8 4e c5 ff ff       	call   2770 <fopen@plt>
    6222:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    6226:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    622b:	75 22                	jne    624f <deny_conf_parser+0x5f>
    622d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6231:	48 89 c6             	mov    rsi,rax
    6234:	48 8d 3d 95 6b 00 00 	lea    rdi,[rip+0x6b95]        # cdd0 <_IO_stdin_used+0xdd0>
    623b:	b8 00 00 00 00       	mov    eax,0x0
    6240:	e8 7b c3 ff ff       	call   25c0 <printf@plt>
    6245:	bf 01 00 00 00       	mov    edi,0x1
    624a:	e8 f1 c5 ff ff       	call   2840 <exit@plt>
    624f:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    6256:	00 
    6257:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    625e:	00 
    625f:	e9 9a 00 00 00       	jmp    62fe <deny_conf_parser+0x10e>
    6264:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6268:	48 89 c7             	mov    rdi,rax
    626b:	e8 d4 fd ff ff       	call   6044 <rstrip>
    6270:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6274:	48 89 c7             	mov    rdi,rax
    6277:	e8 9f fd ff ff       	call   601b <is_comment>
    627c:	84 c0                	test   al,al
    627e:	74 02                	je     6282 <deny_conf_parser+0x92>
    6280:	eb 7c                	jmp    62fe <deny_conf_parser+0x10e>
    6282:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6286:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6289:	0f b6 c0             	movzx  eax,al
    628c:	f7 d8                	neg    eax
    628e:	85 c0                	test   eax,eax
    6290:	75 02                	jne    6294 <deny_conf_parser+0xa4>
    6292:	eb 6a                	jmp    62fe <deny_conf_parser+0x10e>
    6294:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6298:	48 8d 35 62 6b 00 00 	lea    rsi,[rip+0x6b62]        # ce01 <_IO_stdin_used+0xe01>
    629f:	48 89 c7             	mov    rdi,rax
    62a2:	e8 d9 c5 ff ff       	call   2880 <strstr@plt>
    62a7:	48 85 c0             	test   rax,rax
    62aa:	74 52                	je     62fe <deny_conf_parser+0x10e>
    62ac:	8b 05 5e ad 00 00    	mov    eax,DWORD PTR [rip+0xad5e]        # 11010 <blk_ipv4_len>
    62b2:	83 c0 01             	add    eax,0x1
    62b5:	89 05 55 ad 00 00    	mov    DWORD PTR [rip+0xad55],eax        # 11010 <blk_ipv4_len>
    62bb:	8b 05 4f ad 00 00    	mov    eax,DWORD PTR [rip+0xad4f]        # 11010 <blk_ipv4_len>
    62c1:	48 63 d0             	movsxd rdx,eax
    62c4:	48 89 d0             	mov    rax,rdx
    62c7:	48 c1 e0 03          	shl    rax,0x3
    62cb:	48 01 d0             	add    rax,rdx
    62ce:	48 01 c0             	add    rax,rax
    62d1:	48 8d 15 e8 3a 10 00 	lea    rdx,[rip+0x103ae8]        # 109dc0 <blocked_ipv4_addrs>
    62d8:	48 01 d0             	add    rax,rdx
    62db:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    62df:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62e3:	48 83 c0 05          	add    rax,0x5
    62e7:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    62eb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62ef:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    62f3:	48 89 d6             	mov    rsi,rdx
    62f6:	48 89 c7             	mov    rdi,rax
    62f9:	e8 d2 c1 ff ff       	call   24d0 <strcpy@plt>
    62fe:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    6302:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6306:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    630a:	48 89 ce             	mov    rsi,rcx
    630d:	48 89 c7             	mov    rdi,rax
    6310:	e8 db c4 ff ff       	call   27f0 <getline@plt>
    6315:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6319:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    631e:	0f 85 40 ff ff ff    	jne    6264 <deny_conf_parser+0x74>
    6324:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6328:	48 85 c0             	test   rax,rax
    632b:	74 0c                	je     6339 <deny_conf_parser+0x149>
    632d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6331:	48 89 c7             	mov    rdi,rax
    6334:	e8 37 c1 ff ff       	call   2470 <free@plt>
    6339:	90                   	nop
    633a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    633e:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    6345:	00 00 
    6347:	74 05                	je     634e <deny_conf_parser+0x15e>
    6349:	e8 32 c2 ff ff       	call   2580 <__stack_chk_fail@plt>
    634e:	c9                   	leave  
    634f:	c3                   	ret    

0000000000006350 <host_mon_parser>:
    6350:	f3 0f 1e fa          	endbr64 
    6354:	55                   	push   rbp
    6355:	48 89 e5             	mov    rbp,rsp
    6358:	48 83 ec 10          	sub    rsp,0x10
    635c:	48 8b 05 d5 ac 00 00 	mov    rax,QWORD PTR [rip+0xacd5]        # 11038 <default_host_conf>
    6363:	48 8d 35 ae 67 00 00 	lea    rsi,[rip+0x67ae]        # cb18 <_IO_stdin_used+0xb18>
    636a:	48 89 c7             	mov    rdi,rax
    636d:	e8 fe c3 ff ff       	call   2770 <fopen@plt>
    6372:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6376:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    637b:	75 25                	jne    63a2 <host_mon_parser+0x52>
    637d:	48 8b 05 b4 ac 00 00 	mov    rax,QWORD PTR [rip+0xacb4]        # 11038 <default_host_conf>
    6384:	48 89 c6             	mov    rsi,rax
    6387:	48 8d 3d 78 6a 00 00 	lea    rdi,[rip+0x6a78]        # ce06 <_IO_stdin_used+0xe06>
    638e:	b8 00 00 00 00       	mov    eax,0x0
    6393:	e8 28 c2 ff ff       	call   25c0 <printf@plt>
    6398:	bf 01 00 00 00       	mov    edi,0x1
    639d:	e8 9e c4 ff ff       	call   2840 <exit@plt>
    63a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63a6:	48 89 c7             	mov    rdi,rax
    63a9:	e8 a2 c1 ff ff       	call   2550 <fclose@plt>
    63ae:	90                   	nop
    63af:	c9                   	leave  
    63b0:	c3                   	ret    

00000000000063b1 <test_encrypt>:
    63b1:	f3 0f 1e fa          	endbr64 
    63b5:	55                   	push   rbp
    63b6:	48 89 e5             	mov    rbp,rsp
    63b9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    63bd:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    63c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63c5:	0f b6 80 48 01 00 00 	movzx  eax,BYTE PTR [rax+0x148]
    63cc:	84 c0                	test   al,al
    63ce:	74 13                	je     63e3 <test_encrypt+0x32>
    63d0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    63d4:	0f b6 40 38          	movzx  eax,BYTE PTR [rax+0x38]
    63d8:	84 c0                	test   al,al
    63da:	74 07                	je     63e3 <test_encrypt+0x32>
    63dc:	b8 00 00 00 00       	mov    eax,0x0
    63e1:	eb 05                	jmp    63e8 <test_encrypt+0x37>
    63e3:	b8 01 00 00 00       	mov    eax,0x1
    63e8:	5d                   	pop    rbp
    63e9:	c3                   	ret    

00000000000063ea <rule_app>:
    63ea:	f3 0f 1e fa          	endbr64 
    63ee:	55                   	push   rbp
    63ef:	48 89 e5             	mov    rbp,rsp
    63f2:	48 83 ec 20          	sub    rsp,0x20
    63f6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    63fa:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    63fe:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6402:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6406:	48 89 d6             	mov    rsi,rdx
    6409:	48 89 c7             	mov    rdi,rax
    640c:	e8 55 03 00 00       	call   6766 <r_engine>
    6411:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    6414:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6418:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    641c:	48 89 d6             	mov    rsi,rdx
    641f:	48 89 c7             	mov    rdi,rax
    6422:	e8 e1 49 00 00       	call   ae08 <d_engine>
    6427:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    642a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    642e:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    6435:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6439:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    643d:	48 89 d6             	mov    rsi,rdx
    6440:	48 89 c7             	mov    rdi,rax
    6443:	ff d1                	call   rcx
    6445:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    6448:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    644c:	74 40                	je     648e <rule_app+0xa4>
    644e:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    6452:	74 3a                	je     648e <rule_app+0xa4>
    6454:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    6458:	74 34                	je     648e <rule_app+0xa4>
    645a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    645e:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    6465:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6469:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    646d:	ba 00 00 00 00       	mov    edx,0x0
    6472:	48 89 ce             	mov    rsi,rcx
    6475:	48 89 c7             	mov    rdi,rax
    6478:	41 ff d0             	call   r8
    647b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    647f:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    6482:	8d 50 01             	lea    edx,[rax+0x1]
    6485:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6489:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    648c:	eb 17                	jmp    64a5 <rule_app+0xbb>
    648e:	8b 05 90 ab 00 00    	mov    eax,DWORD PTR [rip+0xab90]        # 11024 <VIGIL_MODE>
    6494:	83 f8 02             	cmp    eax,0x2
    6497:	75 0c                	jne    64a5 <rule_app+0xbb>
    6499:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    649d:	48 89 c7             	mov    rdi,rax
    64a0:	e8 66 25 00 00       	call   8a0b <forward_packet>
    64a5:	90                   	nop
    64a6:	c9                   	leave  
    64a7:	c3                   	ret    

00000000000064a8 <rulemgr>:
    64a8:	f3 0f 1e fa          	endbr64 
    64ac:	55                   	push   rbp
    64ad:	48 89 e5             	mov    rbp,rsp
    64b0:	48 83 ec 20          	sub    rsp,0x20
    64b4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    64b8:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    64bf:	e9 8f 02 00 00       	jmp    6753 <rulemgr+0x2ab>
    64c4:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    64c7:	8d 50 01             	lea    edx,[rax+0x1]
    64ca:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    64cd:	48 98                	cdqe   
    64cf:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    64d6:	48 8d 15 c3 ab 00 00 	lea    rdx,[rip+0xabc3]        # 110a0 <rules>
    64dd:	48 01 d0             	add    rax,rdx
    64e0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    64e4:	0f b6 05 4d 14 10 00 	movzx  eax,BYTE PTR [rip+0x10144d]        # 107938 <in_test_mode>
    64eb:	84 c0                	test   al,al
    64ed:	74 30                	je     651f <rulemgr+0x77>
    64ef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64f3:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64f6:	83 f8 46             	cmp    eax,0x46
    64f9:	75 0d                	jne    6508 <rulemgr+0x60>
    64fb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64ff:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    6506:	eb 17                	jmp    651f <rulemgr+0x77>
    6508:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    650c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    650f:	83 f8 45             	cmp    eax,0x45
    6512:	75 0b                	jne    651f <rulemgr+0x77>
    6514:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6518:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    651f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6523:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6529:	83 f8 ff             	cmp    eax,0xffffffff
    652c:	74 19                	je     6547 <rulemgr+0x9f>
    652e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6532:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    6535:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6539:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    653f:	39 c2                	cmp    edx,eax
    6541:	0f 85 0c 02 00 00    	jne    6753 <rulemgr+0x2ab>
    6547:	0f b6 05 e2 13 10 00 	movzx  eax,BYTE PTR [rip+0x1013e2]        # 107930 <demo_mode>
    654e:	84 c0                	test   al,al
    6550:	75 0f                	jne    6561 <rulemgr+0xb9>
    6552:	8b 05 68 13 10 00    	mov    eax,DWORD PTR [rip+0x101368]        # 1078c0 <vigil_location>
    6558:	83 f8 03             	cmp    eax,0x3
    655b:	0f 85 a1 00 00 00    	jne    6602 <rulemgr+0x15a>
    6561:	8b 05 59 13 10 00    	mov    eax,DWORD PTR [rip+0x101359]        # 1078c0 <vigil_location>
    6567:	83 f8 03             	cmp    eax,0x3
    656a:	0f 85 e3 01 00 00    	jne    6753 <rulemgr+0x2ab>
    6570:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6574:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6577:	83 f8 ff             	cmp    eax,0xffffffff
    657a:	74 16                	je     6592 <rulemgr+0xea>
    657c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6580:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6583:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6587:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    658a:	39 c2                	cmp    edx,eax
    658c:	0f 85 c1 01 00 00    	jne    6753 <rulemgr+0x2ab>
    6592:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6596:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6599:	83 f8 ff             	cmp    eax,0xffffffff
    659c:	74 16                	je     65b4 <rulemgr+0x10c>
    659e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65a2:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    65a5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65a9:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    65ac:	39 c2                	cmp    edx,eax
    65ae:	0f 85 9f 01 00 00    	jne    6753 <rulemgr+0x2ab>
    65b4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65b8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65bc:	48 89 d6             	mov    rsi,rdx
    65bf:	48 89 c7             	mov    rdi,rax
    65c2:	e8 97 03 00 00       	call   695e <test_tcp_session_status>
    65c7:	84 c0                	test   al,al
    65c9:	0f 84 84 01 00 00    	je     6753 <rulemgr+0x2ab>
    65cf:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65d7:	48 89 d6             	mov    rsi,rdx
    65da:	48 89 c7             	mov    rdi,rax
    65dd:	e8 cf fd ff ff       	call   63b1 <test_encrypt>
    65e2:	84 c0                	test   al,al
    65e4:	0f 84 69 01 00 00    	je     6753 <rulemgr+0x2ab>
    65ea:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65f2:	48 89 d6             	mov    rsi,rdx
    65f5:	48 89 c7             	mov    rdi,rax
    65f8:	e8 ed fd ff ff       	call   63ea <rule_app>
    65fd:	e9 51 01 00 00       	jmp    6753 <rulemgr+0x2ab>
    6602:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6606:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6609:	83 f8 47             	cmp    eax,0x47
    660c:	74 16                	je     6624 <rulemgr+0x17c>
    660e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6612:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    6615:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6619:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    661c:	39 c2                	cmp    edx,eax
    661e:	0f 85 2f 01 00 00    	jne    6753 <rulemgr+0x2ab>
    6624:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6628:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    662e:	3d 80 00 00 00       	cmp    eax,0x80
    6633:	75 18                	jne    664d <rulemgr+0x1a5>
    6635:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6639:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    663d:	48 89 d6             	mov    rsi,rdx
    6640:	48 89 c7             	mov    rdi,rax
    6643:	e8 a2 fd ff ff       	call   63ea <rule_app>
    6648:	e9 06 01 00 00       	jmp    6753 <rulemgr+0x2ab>
    664d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6651:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6654:	83 f8 47             	cmp    eax,0x47
    6657:	75 7d                	jne    66d6 <rulemgr+0x22e>
    6659:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    665d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6660:	83 f8 ff             	cmp    eax,0xffffffff
    6663:	74 28                	je     668d <rulemgr+0x1e5>
    6665:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6669:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    666c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6670:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6673:	39 c2                	cmp    edx,eax
    6675:	74 16                	je     668d <rulemgr+0x1e5>
    6677:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    667b:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    667e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6682:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6685:	39 c2                	cmp    edx,eax
    6687:	0f 85 c6 00 00 00    	jne    6753 <rulemgr+0x2ab>
    668d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6691:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6694:	83 f8 ff             	cmp    eax,0xffffffff
    6697:	74 28                	je     66c1 <rulemgr+0x219>
    6699:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    669d:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    66a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66a4:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66a7:	39 c2                	cmp    edx,eax
    66a9:	74 16                	je     66c1 <rulemgr+0x219>
    66ab:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66af:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    66b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66b6:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66b9:	39 c2                	cmp    edx,eax
    66bb:	0f 85 92 00 00 00    	jne    6753 <rulemgr+0x2ab>
    66c1:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    66c5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66c9:	48 89 d6             	mov    rsi,rdx
    66cc:	48 89 c7             	mov    rdi,rax
    66cf:	e8 16 fd ff ff       	call   63ea <rule_app>
    66d4:	eb 7d                	jmp    6753 <rulemgr+0x2ab>
    66d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66da:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66dd:	83 f8 ff             	cmp    eax,0xffffffff
    66e0:	74 12                	je     66f4 <rulemgr+0x24c>
    66e2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66e6:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    66e9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66ed:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    66f0:	39 c2                	cmp    edx,eax
    66f2:	75 5f                	jne    6753 <rulemgr+0x2ab>
    66f4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66f8:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66fb:	83 f8 ff             	cmp    eax,0xffffffff
    66fe:	74 12                	je     6712 <rulemgr+0x26a>
    6700:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6704:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6707:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    670b:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    670e:	39 c2                	cmp    edx,eax
    6710:	75 41                	jne    6753 <rulemgr+0x2ab>
    6712:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6716:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    671a:	48 89 d6             	mov    rsi,rdx
    671d:	48 89 c7             	mov    rdi,rax
    6720:	e8 39 02 00 00       	call   695e <test_tcp_session_status>
    6725:	84 c0                	test   al,al
    6727:	74 2a                	je     6753 <rulemgr+0x2ab>
    6729:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    672d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6731:	48 89 d6             	mov    rsi,rdx
    6734:	48 89 c7             	mov    rdi,rax
    6737:	e8 75 fc ff ff       	call   63b1 <test_encrypt>
    673c:	84 c0                	test   al,al
    673e:	74 13                	je     6753 <rulemgr+0x2ab>
    6740:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6744:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6748:	48 89 d6             	mov    rsi,rdx
    674b:	48 89 c7             	mov    rdi,rax
    674e:	e8 97 fc ff ff       	call   63ea <rule_app>
    6753:	8b 05 bb a8 00 00    	mov    eax,DWORD PTR [rip+0xa8bb]        # 11014 <num_rules>
    6759:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    675c:	0f 8e 62 fd ff ff    	jle    64c4 <rulemgr+0x1c>
    6762:	90                   	nop
    6763:	90                   	nop
    6764:	c9                   	leave  
    6765:	c3                   	ret    

0000000000006766 <r_engine>:
    6766:	f3 0f 1e fa          	endbr64 
    676a:	55                   	push   rbp
    676b:	48 89 e5             	mov    rbp,rsp
    676e:	48 83 ec 10          	sub    rsp,0x10
    6772:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6776:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    677a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    677e:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6781:	3d 80 00 00 00       	cmp    eax,0x80
    6786:	0f 85 d9 00 00 00    	jne    6865 <r_engine+0xff>
    678c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6790:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    6797:	84 c0                	test   al,al
    6799:	74 25                	je     67c0 <r_engine+0x5a>
    679b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    679f:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67a3:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    67a7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67ab:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    67b2:	38 c2                	cmp    dl,al
    67b4:	74 0a                	je     67c0 <r_engine+0x5a>
    67b6:	b8 00 00 00 00       	mov    eax,0x0
    67bb:	e9 9c 01 00 00       	jmp    695c <r_engine+0x1f6>
    67c0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67c4:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    67cb:	84 c0                	test   al,al
    67cd:	74 26                	je     67f5 <r_engine+0x8f>
    67cf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67d3:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67d7:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    67db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67df:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    67e6:	66 39 c2             	cmp    dx,ax
    67e9:	74 0a                	je     67f5 <r_engine+0x8f>
    67eb:	b8 00 00 00 00       	mov    eax,0x0
    67f0:	e9 67 01 00 00       	jmp    695c <r_engine+0x1f6>
    67f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67f9:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    6800:	84 c0                	test   al,al
    6802:	74 26                	je     682a <r_engine+0xc4>
    6804:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6808:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    680c:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    6810:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6814:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    681b:	66 39 c2             	cmp    dx,ax
    681e:	74 0a                	je     682a <r_engine+0xc4>
    6820:	b8 00 00 00 00       	mov    eax,0x0
    6825:	e9 32 01 00 00       	jmp    695c <r_engine+0x1f6>
    682a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    682e:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    6835:	84 c0                	test   al,al
    6837:	0f 84 dc 00 00 00    	je     6919 <r_engine+0x1b3>
    683d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6841:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6845:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6848:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    684c:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    6853:	38 c2                	cmp    dl,al
    6855:	0f 84 be 00 00 00    	je     6919 <r_engine+0x1b3>
    685b:	b8 00 00 00 00       	mov    eax,0x0
    6860:	e9 f7 00 00 00       	jmp    695c <r_engine+0x1f6>
    6865:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6869:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    686c:	83 f8 7e             	cmp    eax,0x7e
    686f:	0f 85 a4 00 00 00    	jne    6919 <r_engine+0x1b3>
    6875:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6879:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    6880:	84 c0                	test   al,al
    6882:	74 2e                	je     68b2 <r_engine+0x14c>
    6884:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6888:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    688c:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    688f:	89 c7                	mov    edi,eax
    6891:	e8 ba bf ff ff       	call   2850 <ntohl@plt>
    6896:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    689a:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    68a1:	0f b7 d2             	movzx  edx,dx
    68a4:	39 d0                	cmp    eax,edx
    68a6:	74 0a                	je     68b2 <r_engine+0x14c>
    68a8:	b8 00 00 00 00       	mov    eax,0x0
    68ad:	e9 aa 00 00 00       	jmp    695c <r_engine+0x1f6>
    68b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68b6:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    68bd:	84 c0                	test   al,al
    68bf:	74 29                	je     68ea <r_engine+0x184>
    68c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68c5:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    68cc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68d0:	48 83 c0 68          	add    rax,0x68
    68d4:	48 89 d6             	mov    rsi,rdx
    68d7:	48 89 c7             	mov    rdi,rax
    68da:	e8 a1 bd ff ff       	call   2680 <strcmp@plt>
    68df:	85 c0                	test   eax,eax
    68e1:	74 07                	je     68ea <r_engine+0x184>
    68e3:	b8 00 00 00 00       	mov    eax,0x0
    68e8:	eb 72                	jmp    695c <r_engine+0x1f6>
    68ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68ee:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    68f5:	84 c0                	test   al,al
    68f7:	74 20                	je     6919 <r_engine+0x1b3>
    68f9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68fd:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6901:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    6904:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6908:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    690e:	39 c2                	cmp    edx,eax
    6910:	74 07                	je     6919 <r_engine+0x1b3>
    6912:	b8 00 00 00 00       	mov    eax,0x0
    6917:	eb 43                	jmp    695c <r_engine+0x1f6>
    6919:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    691d:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6921:	48 85 c0             	test   rax,rax
    6924:	74 31                	je     6957 <r_engine+0x1f1>
    6926:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    692a:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    6931:	84 c0                	test   al,al
    6933:	74 22                	je     6957 <r_engine+0x1f1>
    6935:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6939:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    693d:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    6941:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6945:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    694c:	38 c2                	cmp    dl,al
    694e:	74 07                	je     6957 <r_engine+0x1f1>
    6950:	b8 00 00 00 00       	mov    eax,0x0
    6955:	eb 05                	jmp    695c <r_engine+0x1f6>
    6957:	b8 01 00 00 00       	mov    eax,0x1
    695c:	c9                   	leave  
    695d:	c3                   	ret    

000000000000695e <test_tcp_session_status>:
    695e:	f3 0f 1e fa          	endbr64 
    6962:	55                   	push   rbp
    6963:	48 89 e5             	mov    rbp,rsp
    6966:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    696a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    696e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6972:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6978:	83 f8 7e             	cmp    eax,0x7e
    697b:	75 34                	jne    69b1 <test_tcp_session_status+0x53>
    697d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6981:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6984:	83 f8 7e             	cmp    eax,0x7e
    6987:	75 28                	jne    69b1 <test_tcp_session_status+0x53>
    6989:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    698d:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    6993:	83 f8 01             	cmp    eax,0x1
    6996:	75 12                	jne    69aa <test_tcp_session_status+0x4c>
    6998:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    699c:	8b 40 70             	mov    eax,DWORD PTR [rax+0x70]
    699f:	85 c0                	test   eax,eax
    69a1:	75 07                	jne    69aa <test_tcp_session_status+0x4c>
    69a3:	b8 00 00 00 00       	mov    eax,0x0
    69a8:	eb 0c                	jmp    69b6 <test_tcp_session_status+0x58>
    69aa:	b8 01 00 00 00       	mov    eax,0x1
    69af:	eb 05                	jmp    69b6 <test_tcp_session_status+0x58>
    69b1:	b8 01 00 00 00       	mov    eax,0x1
    69b6:	5d                   	pop    rbp
    69b7:	c3                   	ret    

00000000000069b8 <main>:
    69b8:	f3 0f 1e fa          	endbr64 
    69bc:	55                   	push   rbp
    69bd:	48 89 e5             	mov    rbp,rsp
    69c0:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    69c7:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    69cd:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    69d4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    69db:	00 00 
    69dd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    69e1:	31 c0                	xor    eax,eax
    69e3:	b8 00 00 00 00       	mov    eax,0x0
    69e8:	e8 4d 4e 00 00       	call   b83a <load_fn_mem_map>
    69ed:	48 8d 35 aa 02 00 00 	lea    rsi,[rip+0x2aa]        # 6c9e <sigint_processor>
    69f4:	bf 02 00 00 00       	mov    edi,0x2
    69f9:	e8 92 bc ff ff       	call   2690 <signal@plt>
    69fe:	48 8d 05 b8 4a 00 00 	lea    rax,[rip+0x4ab8]        # b4bd <crash_handler>
    6a05:	48 89 c6             	mov    rsi,rax
    6a08:	bf 0b 00 00 00       	mov    edi,0xb
    6a0d:	e8 7e bc ff ff       	call   2690 <signal@plt>
    6a12:	b8 00 00 00 00       	mov    eax,0x0
    6a17:	e8 b8 08 00 00       	call   72d4 <print_logo>
    6a1c:	b8 00 00 00 00       	mov    eax,0x0
    6a21:	e8 f7 06 00 00       	call   711d <print_cpu_info>
    6a26:	c7 05 04 0f 10 00 01 	mov    DWORD PTR [rip+0x100f04],0x1        # 107934 <is_running>
    6a2d:	00 00 00 
    6a30:	bf 00 00 00 00       	mov    edi,0x0
    6a35:	e8 96 bc ff ff       	call   26d0 <time@plt>
    6a3a:	48 89 05 07 11 10 00 	mov    QWORD PTR [rip+0x101107],rax        # 107b48 <last_clean_time>
    6a41:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6a48:	0f 85 e3 00 00 00    	jne    6b31 <main+0x179>
    6a4e:	b8 00 00 00 00       	mov    eax,0x0
    6a53:	e8 9b 06 00 00       	call   70f3 <print_help_and_exit>
    6a58:	e9 d4 00 00 00       	jmp    6b31 <main+0x179>
    6a5d:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6a63:	83 e8 64             	sub    eax,0x64
    6a66:	83 f8 10             	cmp    eax,0x10
    6a69:	0f 87 9e 00 00 00    	ja     6b0d <main+0x155>
    6a6f:	89 c0                	mov    eax,eax
    6a71:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    6a78:	00 
    6a79:	48 8d 05 24 65 00 00 	lea    rax,[rip+0x6524]        # cfa4 <_IO_stdin_used+0xfa4>
    6a80:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    6a83:	48 98                	cdqe   
    6a85:	48 8d 15 18 65 00 00 	lea    rdx,[rip+0x6518]        # cfa4 <_IO_stdin_used+0xfa4>
    6a8c:	48 01 d0             	add    rax,rdx
    6a8f:	3e ff e0             	notrack jmp rax
    6a92:	c6 05 09 33 10 00 01 	mov    BYTE PTR [rip+0x103309],0x1        # 109da2 <debug_mode>
    6a99:	e9 93 00 00 00       	jmp    6b31 <main+0x179>
    6a9e:	b8 00 00 00 00       	mov    eax,0x0
    6aa3:	e8 4b 06 00 00       	call   70f3 <print_help_and_exit>
    6aa8:	e9 84 00 00 00       	jmp    6b31 <main+0x179>
    6aad:	48 8b 05 ac a5 00 00 	mov    rax,QWORD PTR [rip+0xa5ac]        # 11060 <optarg@@GLIBC_2.2.5>
    6ab4:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    6abb:	eb 74                	jmp    6b31 <main+0x179>
    6abd:	c6 05 75 0e 10 00 01 	mov    BYTE PTR [rip+0x100e75],0x1        # 107939 <packet_print>
    6ac4:	eb 6b                	jmp    6b31 <main+0x179>
    6ac6:	c6 05 d7 0d 10 00 01 	mov    BYTE PTR [rip+0x100dd7],0x1        # 1078a4 <quiet_exit>
    6acd:	eb 62                	jmp    6b31 <main+0x179>
    6acf:	48 8d 3d 4a 63 00 00 	lea    rdi,[rip+0x634a]        # ce20 <_IO_stdin_used+0xe20>
    6ad6:	e8 25 ba ff ff       	call   2500 <puts@plt>
    6adb:	bf 0a 00 00 00       	mov    edi,0xa
    6ae0:	e8 7b bd ff ff       	call   2860 <sleep@plt>
    6ae5:	c6 05 44 0e 10 00 01 	mov    BYTE PTR [rip+0x100e44],0x1        # 107930 <demo_mode>
    6aec:	eb 43                	jmp    6b31 <main+0x179>
    6aee:	48 8d 3d 6b 63 00 00 	lea    rdi,[rip+0x636b]        # ce60 <_IO_stdin_used+0xe60>
    6af5:	e8 06 ba ff ff       	call   2500 <puts@plt>
    6afa:	bf 0a 00 00 00       	mov    edi,0xa
    6aff:	e8 5c bd ff ff       	call   2860 <sleep@plt>
    6b04:	c6 05 2d 0e 10 00 01 	mov    BYTE PTR [rip+0x100e2d],0x1        # 107938 <in_test_mode>
    6b0b:	eb 24                	jmp    6b31 <main+0x179>
    6b0d:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6b13:	89 c6                	mov    esi,eax
    6b15:	48 8d 3d 78 63 00 00 	lea    rdi,[rip+0x6378]        # ce94 <_IO_stdin_used+0xe94>
    6b1c:	b8 00 00 00 00       	mov    eax,0x0
    6b21:	e8 9a ba ff ff       	call   25c0 <printf@plt>
    6b26:	b8 00 00 00 00       	mov    eax,0x0
    6b2b:	e8 c3 05 00 00       	call   70f3 <print_help_and_exit>
    6b30:	90                   	nop
    6b31:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6b38:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    6b3e:	48 8d 15 65 63 00 00 	lea    rdx,[rip+0x6365]        # ceaa <_IO_stdin_used+0xeaa>
    6b45:	48 89 ce             	mov    rsi,rcx
    6b48:	89 c7                	mov    edi,eax
    6b4a:	e8 71 bc ff ff       	call   27c0 <getopt@plt>
    6b4f:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6b55:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    6b5c:	0f 85 fb fe ff ff    	jne    6a5d <main+0xa5>
    6b62:	48 8d 3d 4a 63 00 00 	lea    rdi,[rip+0x634a]        # ceb3 <_IO_stdin_used+0xeb3>
    6b69:	e8 82 f6 ff ff       	call   61f0 <deny_conf_parser>
    6b6e:	48 8d 3d 53 63 00 00 	lea    rdi,[rip+0x6353]        # cec8 <_IO_stdin_used+0xec8>
    6b75:	e8 86 b9 ff ff       	call   2500 <puts@plt>
    6b7a:	48 8d 3d 82 63 00 00 	lea    rdi,[rip+0x6382]        # cf03 <_IO_stdin_used+0xf03>
    6b81:	e8 3b ee ff ff       	call   59c1 <rule_library_parser>
    6b86:	48 8d 3d 8c 63 00 00 	lea    rdi,[rip+0x638c]        # cf19 <_IO_stdin_used+0xf19>
    6b8d:	e8 6e b9 ff ff       	call   2500 <puts@plt>
    6b92:	b8 00 00 00 00       	mov    eax,0x0
    6b97:	e8 3d 3e 00 00       	call   a9d9 <rule_processor>
    6b9c:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6ba3:	48 89 c6             	mov    rsi,rax
    6ba6:	48 8d 3d 83 63 00 00 	lea    rdi,[rip+0x6383]        # cf30 <_IO_stdin_used+0xf30>
    6bad:	b8 00 00 00 00       	mov    eax,0x0
    6bb2:	e8 09 ba ff ff       	call   25c0 <printf@plt>
    6bb7:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6bbe:	00 00 00 00 
    6bc2:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6bc9:	00 00 00 00 
    6bcd:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6bd4:	b8 00 00 00 00       	mov    eax,0x0
    6bd9:	b9 fd 00 00 00       	mov    ecx,0xfd
    6bde:	48 89 d7             	mov    rdi,rdx
    6be1:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6be4:	48 89 fa             	mov    rdx,rdi
    6be7:	89 02                	mov    DWORD PTR [rdx],eax
    6be9:	48 83 c2 04          	add    rdx,0x4
    6bed:	66 89 02             	mov    WORD PTR [rdx],ax
    6bf0:	48 83 c2 02          	add    rdx,0x2
    6bf4:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6bfb:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6c02:	49 89 d0             	mov    r8,rdx
    6c05:	b9 64 00 00 00       	mov    ecx,0x64
    6c0a:	ba 01 00 00 00       	mov    edx,0x1
    6c0f:	be 00 04 00 00       	mov    esi,0x400
    6c14:	48 89 c7             	mov    rdi,rax
    6c17:	e8 f4 bb ff ff       	call   2810 <pcap_open_live@plt>
    6c1c:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6c23:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6c2a:	00 
    6c2b:	75 16                	jne    6c43 <main+0x28b>
    6c2d:	48 8d 3d 1d 63 00 00 	lea    rdi,[rip+0x631d]        # cf51 <_IO_stdin_used+0xf51>
    6c34:	e8 47 bb ff ff       	call   2780 <perror@plt>
    6c39:	bf 01 00 00 00       	mov    edi,0x1
    6c3e:	e8 fd bb ff ff       	call   2840 <exit@plt>
    6c43:	b8 00 00 00 00       	mov    eax,0x0
    6c48:	e8 ca 45 00 00       	call   b217 <collect_scripts>
    6c4d:	b8 00 00 00 00       	mov    eax,0x0
    6c52:	e8 94 06 00 00       	call   72eb <start_nsh_server>
    6c57:	48 8d 3d 12 63 00 00 	lea    rdi,[rip+0x6312]        # cf70 <_IO_stdin_used+0xf70>
    6c5e:	e8 9d b8 ff ff       	call   2500 <puts@plt>
    6c63:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6c6a:	b9 00 00 00 00       	mov    ecx,0x0
    6c6f:	48 8d 15 4d bd ff ff 	lea    rdx,[rip+0xffffffffffffbd4d]        # 29c3 <pktmgr>
    6c76:	be ff ff ff ff       	mov    esi,0xffffffff
    6c7b:	48 89 c7             	mov    rdi,rax
    6c7e:	e8 6d ba ff ff       	call   26f0 <pcap_loop@plt>
    6c83:	b8 00 00 00 00       	mov    eax,0x0
    6c88:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6c8c:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    6c93:	00 00 
    6c95:	74 05                	je     6c9c <main+0x2e4>
    6c97:	e8 e4 b8 ff ff       	call   2580 <__stack_chk_fail@plt>
    6c9c:	c9                   	leave  
    6c9d:	c3                   	ret    

0000000000006c9e <sigint_processor>:
    6c9e:	f3 0f 1e fa          	endbr64 
    6ca2:	55                   	push   rbp
    6ca3:	48 89 e5             	mov    rbp,rsp
    6ca6:	41 54                	push   r12
    6ca8:	53                   	push   rbx
    6ca9:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6cb0:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6cb6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6cbd:	00 00 
    6cbf:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6cc3:	31 c0                	xor    eax,eax
    6cc5:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6ccc:	00 00 00 
    6ccf:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6cd6:	48 89 c7             	mov    rdi,rax
    6cd9:	e8 56 c7 ff ff       	call   3434 <cb_get_formatted_time>
    6cde:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6ce5:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6ceb:	89 c6                	mov    esi,eax
    6ced:	48 8d 3d f4 62 00 00 	lea    rdi,[rip+0x62f4]        # cfe8 <_IO_stdin_used+0xfe8>
    6cf4:	b8 00 00 00 00       	mov    eax,0x0
    6cf9:	e8 c2 b8 ff ff       	call   25c0 <printf@plt>
    6cfe:	48 8d 3d 08 63 00 00 	lea    rdi,[rip+0x6308]        # d00d <_IO_stdin_used+0x100d>
    6d05:	e8 76 ba ff ff       	call   2780 <perror@plt>
    6d0a:	0f b6 05 93 0b 10 00 	movzx  eax,BYTE PTR [rip+0x100b93]        # 1078a4 <quiet_exit>
    6d11:	83 f0 01             	xor    eax,0x1
    6d14:	84 c0                	test   al,al
    6d16:	0f 84 2e 02 00 00    	je     6f4a <sigint_processor+0x2ac>
    6d1c:	8b 05 62 a3 00 00    	mov    eax,DWORD PTR [rip+0xa362]        # 11084 <total_pkt_captured>
    6d22:	89 c6                	mov    esi,eax
    6d24:	48 8d 3d e3 62 00 00 	lea    rdi,[rip+0x62e3]        # d00e <_IO_stdin_used+0x100e>
    6d2b:	b8 00 00 00 00       	mov    eax,0x0
    6d30:	e8 8b b8 ff ff       	call   25c0 <printf@plt>
    6d35:	48 8d 3d ec 62 00 00 	lea    rdi,[rip+0x62ec]        # d028 <_IO_stdin_used+0x1028>
    6d3c:	e8 bf b7 ff ff       	call   2500 <puts@plt>
    6d41:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6d48:	00 00 00 
    6d4b:	e9 e8 01 00 00       	jmp    6f38 <sigint_processor+0x29a>
    6d50:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d56:	48 63 d0             	movsxd rdx,eax
    6d59:	48 89 d0             	mov    rax,rdx
    6d5c:	48 c1 e0 02          	shl    rax,0x2
    6d60:	48 01 d0             	add    rax,rdx
    6d63:	48 c1 e0 03          	shl    rax,0x3
    6d67:	48 01 d0             	add    rax,rdx
    6d6a:	48 c1 e0 04          	shl    rax,0x4
    6d6e:	48 89 c2             	mov    rdx,rax
    6d71:	48 8d 05 98 c5 0e 00 	lea    rax,[rip+0xec598]        # f3310 <watchlist+0x270>
    6d78:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6d7c:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d82:	48 63 d0             	movsxd rdx,eax
    6d85:	48 89 d0             	mov    rax,rdx
    6d88:	48 c1 e0 02          	shl    rax,0x2
    6d8c:	48 01 d0             	add    rax,rdx
    6d8f:	48 c1 e0 03          	shl    rax,0x3
    6d93:	48 01 d0             	add    rax,rdx
    6d96:	48 c1 e0 04          	shl    rax,0x4
    6d9a:	48 89 c2             	mov    rdx,rax
    6d9d:	48 8d 05 60 c5 0e 00 	lea    rax,[rip+0xec560]        # f3304 <watchlist+0x264>
    6da4:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6da8:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dae:	48 63 d0             	movsxd rdx,eax
    6db1:	48 89 d0             	mov    rax,rdx
    6db4:	48 c1 e0 02          	shl    rax,0x2
    6db8:	48 01 d0             	add    rax,rdx
    6dbb:	48 c1 e0 03          	shl    rax,0x3
    6dbf:	48 01 d0             	add    rax,rdx
    6dc2:	48 c1 e0 04          	shl    rax,0x4
    6dc6:	48 89 c2             	mov    rdx,rax
    6dc9:	48 8d 05 3c c5 0e 00 	lea    rax,[rip+0xec53c]        # f330c <watchlist+0x26c>
    6dd0:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6dd4:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dda:	48 63 d0             	movsxd rdx,eax
    6ddd:	48 89 d0             	mov    rax,rdx
    6de0:	48 c1 e0 02          	shl    rax,0x2
    6de4:	48 01 d0             	add    rax,rdx
    6de7:	48 c1 e0 03          	shl    rax,0x3
    6deb:	48 01 d0             	add    rax,rdx
    6dee:	48 c1 e0 04          	shl    rax,0x4
    6df2:	48 89 c2             	mov    rdx,rax
    6df5:	48 8d 05 04 c5 0e 00 	lea    rax,[rip+0xec504]        # f3300 <watchlist+0x260>
    6dfc:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6e00:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e06:	48 63 d0             	movsxd rdx,eax
    6e09:	48 89 d0             	mov    rax,rdx
    6e0c:	48 c1 e0 02          	shl    rax,0x2
    6e10:	48 01 d0             	add    rax,rdx
    6e13:	48 c1 e0 03          	shl    rax,0x3
    6e17:	48 01 d0             	add    rax,rdx
    6e1a:	48 c1 e0 04          	shl    rax,0x4
    6e1e:	48 89 c2             	mov    rdx,rax
    6e21:	48 8d 05 e0 c4 0e 00 	lea    rax,[rip+0xec4e0]        # f3308 <watchlist+0x268>
    6e28:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6e2b:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e31:	48 63 d0             	movsxd rdx,eax
    6e34:	48 89 d0             	mov    rax,rdx
    6e37:	48 c1 e0 02          	shl    rax,0x2
    6e3b:	48 01 d0             	add    rax,rdx
    6e3e:	48 c1 e0 03          	shl    rax,0x3
    6e42:	48 01 d0             	add    rax,rdx
    6e45:	48 c1 e0 04          	shl    rax,0x4
    6e49:	48 89 c2             	mov    rdx,rax
    6e4c:	48 8d 05 a9 c4 0e 00 	lea    rax,[rip+0xec4a9]        # f32fc <watchlist+0x25c>
    6e53:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6e57:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e5d:	48 63 d0             	movsxd rdx,eax
    6e60:	48 89 d0             	mov    rax,rdx
    6e63:	48 c1 e0 02          	shl    rax,0x2
    6e67:	48 01 d0             	add    rax,rdx
    6e6a:	48 c1 e0 03          	shl    rax,0x3
    6e6e:	48 01 d0             	add    rax,rdx
    6e71:	48 c1 e0 04          	shl    rax,0x4
    6e75:	48 89 c2             	mov    rdx,rax
    6e78:	48 8d 05 9d c4 0e 00 	lea    rax,[rip+0xec49d]        # f331c <watchlist+0x27c>
    6e7f:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6e82:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e88:	48 63 d0             	movsxd rdx,eax
    6e8b:	48 89 d0             	mov    rax,rdx
    6e8e:	48 c1 e0 02          	shl    rax,0x2
    6e92:	48 01 d0             	add    rax,rdx
    6e95:	48 c1 e0 03          	shl    rax,0x3
    6e99:	48 01 d0             	add    rax,rdx
    6e9c:	48 c1 e0 04          	shl    rax,0x4
    6ea0:	48 89 c2             	mov    rdx,rax
    6ea3:	48 8d 05 76 c4 0e 00 	lea    rax,[rip+0xec476]        # f3320 <watchlist+0x280>
    6eaa:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6ead:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6eb3:	48 63 d0             	movsxd rdx,eax
    6eb6:	48 89 d0             	mov    rax,rdx
    6eb9:	48 c1 e0 02          	shl    rax,0x2
    6ebd:	48 01 d0             	add    rax,rdx
    6ec0:	48 c1 e0 03          	shl    rax,0x3
    6ec4:	48 01 d0             	add    rax,rdx
    6ec7:	48 c1 e0 04          	shl    rax,0x4
    6ecb:	48 89 c2             	mov    rdx,rax
    6ece:	48 8d 05 23 c4 0e 00 	lea    rax,[rip+0xec423]        # f32f8 <watchlist+0x258>
    6ed5:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6ed8:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ede:	48 63 d0             	movsxd rdx,eax
    6ee1:	48 89 d0             	mov    rax,rdx
    6ee4:	48 c1 e0 02          	shl    rax,0x2
    6ee8:	48 01 d0             	add    rax,rdx
    6eeb:	48 c1 e0 03          	shl    rax,0x3
    6eef:	48 01 d0             	add    rax,rdx
    6ef2:	48 c1 e0 04          	shl    rax,0x4
    6ef6:	48 8d 15 a3 c1 0e 00 	lea    rdx,[rip+0xec1a3]        # f30a0 <watchlist>
    6efd:	48 01 d0             	add    rax,rdx
    6f00:	48 83 c0 08          	add    rax,0x8
    6f04:	48 83 ec 08          	sub    rsp,0x8
    6f08:	41 53                	push   r11
    6f0a:	41 52                	push   r10
    6f0c:	41 51                	push   r9
    6f0e:	41 50                	push   r8
    6f10:	57                   	push   rdi
    6f11:	45 89 e1             	mov    r9d,r12d
    6f14:	41 89 d8             	mov    r8d,ebx
    6f17:	89 f2                	mov    edx,esi
    6f19:	48 89 c6             	mov    rsi,rax
    6f1c:	48 8d 3d 3d 61 00 00 	lea    rdi,[rip+0x613d]        # d060 <_IO_stdin_used+0x1060>
    6f23:	b8 00 00 00 00       	mov    eax,0x0
    6f28:	e8 93 b6 ff ff       	call   25c0 <printf@plt>
    6f2d:	48 83 c4 30          	add    rsp,0x30
    6f31:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6f38:	8b 05 da a0 00 00    	mov    eax,DWORD PTR [rip+0xa0da]        # 11018 <watchlist_num>
    6f3e:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6f44:	0f 8e 06 fe ff ff    	jle    6d50 <sigint_processor+0xb2>
    6f4a:	48 8d 35 af 61 00 00 	lea    rsi,[rip+0x61af]        # d100 <_IO_stdin_used+0x1100>
    6f51:	48 8d 3d aa 61 00 00 	lea    rdi,[rip+0x61aa]        # d102 <_IO_stdin_used+0x1102>
    6f58:	e8 13 b8 ff ff       	call   2770 <fopen@plt>
    6f5d:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6f64:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6f6b:	00 
    6f6c:	0f 85 9d 00 00 00    	jne    700f <sigint_processor+0x371>
    6f72:	48 8d 3d a7 61 00 00 	lea    rdi,[rip+0x61a7]        # d120 <_IO_stdin_used+0x1120>
    6f79:	e8 82 b5 ff ff       	call   2500 <puts@plt>
    6f7e:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6f85:	48 89 c7             	mov    rdi,rax
    6f88:	e8 c3 b5 ff ff       	call   2550 <fclose@plt>
    6f8d:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6f94:	00 00 00 
    6f97:	eb 63                	jmp    6ffc <sigint_processor+0x35e>
    6f99:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6f9f:	48 63 d0             	movsxd rdx,eax
    6fa2:	48 89 d0             	mov    rax,rdx
    6fa5:	48 c1 e0 04          	shl    rax,0x4
    6fa9:	48 01 d0             	add    rax,rdx
    6fac:	48 01 c0             	add    rax,rax
    6faf:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6fb3:	48 8d 05 c6 0b 10 00 	lea    rax,[rip+0x100bc6]        # 107b80 <arpcache>
    6fba:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    6fbe:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6fc4:	48 63 d0             	movsxd rdx,eax
    6fc7:	48 89 d0             	mov    rax,rdx
    6fca:	48 c1 e0 04          	shl    rax,0x4
    6fce:	48 01 d0             	add    rax,rdx
    6fd1:	48 01 c0             	add    rax,rax
    6fd4:	48 8d 15 a5 0b 10 00 	lea    rdx,[rip+0x100ba5]        # 107b80 <arpcache>
    6fdb:	48 01 d0             	add    rax,rdx
    6fde:	48 89 ca             	mov    rdx,rcx
    6fe1:	48 89 c6             	mov    rsi,rax
    6fe4:	48 8d 3d 7c 61 00 00 	lea    rdi,[rip+0x617c]        # d167 <_IO_stdin_used+0x1167>
    6feb:	b8 00 00 00 00       	mov    eax,0x0
    6ff0:	e8 cb b5 ff ff       	call   25c0 <printf@plt>
    6ff5:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    6ffc:	8b 05 1a a0 00 00    	mov    eax,DWORD PTR [rip+0xa01a]        # 1101c <arp_entries>
    7002:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    7008:	7e 8f                	jle    6f99 <sigint_processor+0x2fb>
    700a:	e9 da 00 00 00       	jmp    70e9 <sigint_processor+0x44b>
    700f:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    7016:	00 00 00 
    7019:	eb 67                	jmp    7082 <sigint_processor+0x3e4>
    701b:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    7021:	48 63 d0             	movsxd rdx,eax
    7024:	48 89 d0             	mov    rax,rdx
    7027:	48 c1 e0 04          	shl    rax,0x4
    702b:	48 01 d0             	add    rax,rdx
    702e:	48 01 c0             	add    rax,rax
    7031:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7035:	48 8d 05 44 0b 10 00 	lea    rax,[rip+0x100b44]        # 107b80 <arpcache>
    703c:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    7040:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    7046:	48 63 d0             	movsxd rdx,eax
    7049:	48 89 d0             	mov    rax,rdx
    704c:	48 c1 e0 04          	shl    rax,0x4
    7050:	48 01 d0             	add    rax,rdx
    7053:	48 01 c0             	add    rax,rax
    7056:	48 8d 15 23 0b 10 00 	lea    rdx,[rip+0x100b23]        # 107b80 <arpcache>
    705d:	48 01 c2             	add    rdx,rax
    7060:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    7067:	48 8d 35 03 61 00 00 	lea    rsi,[rip+0x6103]        # d171 <_IO_stdin_used+0x1171>
    706e:	48 89 c7             	mov    rdi,rax
    7071:	b8 00 00 00 00       	mov    eax,0x0
    7076:	e8 25 b6 ff ff       	call   26a0 <fprintf@plt>
    707b:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    7082:	8b 05 94 9f 00 00    	mov    eax,DWORD PTR [rip+0x9f94]        # 1101c <arp_entries>
    7088:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    708e:	7e 8b                	jle    701b <sigint_processor+0x37d>
    7090:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    7097:	48 89 c7             	mov    rdi,rax
    709a:	e8 b1 b4 ff ff       	call   2550 <fclose@plt>
    709f:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    70a6:	00 00 00 
    70a9:	eb 2f                	jmp    70da <sigint_processor+0x43c>
    70ab:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    70b1:	48 98                	cdqe   
    70b3:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    70ba:	00 
    70bb:	48 8d 05 7e 08 10 00 	lea    rax,[rip+0x10087e]        # 107940 <threads>
    70c2:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    70c6:	be 00 00 00 00       	mov    esi,0x0
    70cb:	48 89 c7             	mov    rdi,rax
    70ce:	e8 cd b6 ff ff       	call   27a0 <pthread_join@plt>
    70d3:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    70da:	8b 05 a0 9f 00 00    	mov    eax,DWORD PTR [rip+0x9fa0]        # 11080 <thread_count>
    70e0:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    70e6:	7c c3                	jl     70ab <sigint_processor+0x40d>
    70e8:	90                   	nop
    70e9:	bf 00 00 00 00       	mov    edi,0x0
    70ee:	e8 4d b7 ff ff       	call   2840 <exit@plt>

00000000000070f3 <print_help_and_exit>:
    70f3:	f3 0f 1e fa          	endbr64 
    70f7:	55                   	push   rbp
    70f8:	48 89 e5             	mov    rbp,rsp
    70fb:	48 8d 35 76 60 00 00 	lea    rsi,[rip+0x6076]        # d178 <_IO_stdin_used+0x1178>
    7102:	48 8d 3d 77 60 00 00 	lea    rdi,[rip+0x6077]        # d180 <_IO_stdin_used+0x1180>
    7109:	b8 00 00 00 00       	mov    eax,0x0
    710e:	e8 ad b4 ff ff       	call   25c0 <printf@plt>
    7113:	bf 00 00 00 00       	mov    edi,0x0
    7118:	e8 23 b7 ff ff       	call   2840 <exit@plt>

000000000000711d <print_cpu_info>:
    711d:	f3 0f 1e fa          	endbr64 
    7121:	55                   	push   rbp
    7122:	48 89 e5             	mov    rbp,rsp
    7125:	53                   	push   rbx
    7126:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    712d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7134:	00 00 
    7136:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    713a:	31 c0                	xor    eax,eax
    713c:	48 8d 35 c4 60 00 00 	lea    rsi,[rip+0x60c4]        # d207 <_IO_stdin_used+0x1207>
    7143:	48 8d 3d c0 60 00 00 	lea    rdi,[rip+0x60c0]        # d20a <_IO_stdin_used+0x120a>
    714a:	e8 21 b6 ff ff       	call   2770 <fopen@plt>
    714f:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    7156:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    715d:	00 00 00 00 
    7161:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    7168:	00 00 00 00 
    716c:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    7173:	00 00 00 
    7176:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    717d:	ba 00 02 00 00       	mov    edx,0x200
    7182:	be 00 00 00 00       	mov    esi,0x0
    7187:	48 89 c7             	mov    rdi,rax
    718a:	e8 71 b4 ff ff       	call   2600 <memset@plt>
    718f:	e9 b4 00 00 00       	jmp    7248 <print_cpu_info+0x12b>
    7194:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    719b:	ba 0a 00 00 00       	mov    edx,0xa
    71a0:	48 89 c6             	mov    rsi,rax
    71a3:	48 8d 3d 6e 60 00 00 	lea    rdi,[rip+0x606e]        # d218 <_IO_stdin_used+0x1218>
    71aa:	e8 11 b3 ff ff       	call   24c0 <strncmp@plt>
    71af:	85 c0                	test   eax,eax
    71b1:	0f 85 91 00 00 00    	jne    7248 <print_cpu_info+0x12b>
    71b7:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    71be:	00 00 00 
    71c1:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    71c8:	00 00 00 
    71cb:	eb 2e                	jmp    71fb <print_cpu_info+0xde>
    71cd:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    71d4:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    71da:	48 98                	cdqe   
    71dc:	48 01 d0             	add    rax,rdx
    71df:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    71e2:	3c 3a                	cmp    al,0x3a
    71e4:	75 0e                	jne    71f4 <print_cpu_info+0xd7>
    71e6:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    71ec:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    71f2:	eb 24                	jmp    7218 <print_cpu_info+0xfb>
    71f4:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    71fb:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7201:	48 63 d8             	movsxd rbx,eax
    7204:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    720b:	48 89 c7             	mov    rdi,rax
    720e:	e8 4d b3 ff ff       	call   2560 <strlen@plt>
    7213:	48 39 c3             	cmp    rbx,rax
    7216:	72 b5                	jb     71cd <print_cpu_info+0xb0>
    7218:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    721f:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7226:	8b 95 c0 fd ff ff    	mov    edx,DWORD PTR [rbp-0x240]
    722c:	48 63 d2             	movsxd rdx,edx
    722f:	48 83 c2 02          	add    rdx,0x2
    7233:	48 01 c2             	add    rdx,rax
    7236:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    723d:	48 89 d6             	mov    rsi,rdx
    7240:	48 89 c7             	mov    rdi,rax
    7243:	e8 b8 b5 ff ff       	call   2800 <strcat@plt>
    7248:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    724f:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    7256:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    725d:	48 89 d1             	mov    rcx,rdx
    7260:	ba 0a 00 00 00       	mov    edx,0xa
    7265:	48 89 c7             	mov    rdi,rax
    7268:	e8 03 b6 ff ff       	call   2870 <getdelim@plt>
    726d:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    7271:	0f 85 1d ff ff ff    	jne    7194 <print_cpu_info+0x77>
    7277:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    727e:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    7284:	89 c6                	mov    esi,eax
    7286:	48 8d 3d 96 5f 00 00 	lea    rdi,[rip+0x5f96]        # d223 <_IO_stdin_used+0x1223>
    728d:	b8 00 00 00 00       	mov    eax,0x0
    7292:	e8 29 b3 ff ff       	call   25c0 <printf@plt>
    7297:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    729e:	48 89 c7             	mov    rdi,rax
    72a1:	e8 ca b1 ff ff       	call   2470 <free@plt>
    72a6:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    72ad:	48 89 c7             	mov    rdi,rax
    72b0:	e8 9b b2 ff ff       	call   2550 <fclose@plt>
    72b5:	90                   	nop
    72b6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    72ba:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    72c1:	00 00 
    72c3:	74 05                	je     72ca <print_cpu_info+0x1ad>
    72c5:	e8 b6 b2 ff ff       	call   2580 <__stack_chk_fail@plt>
    72ca:	48 81 c4 48 02 00 00 	add    rsp,0x248
    72d1:	5b                   	pop    rbx
    72d2:	5d                   	pop    rbp
    72d3:	c3                   	ret    

00000000000072d4 <print_logo>:
    72d4:	f3 0f 1e fa          	endbr64 
    72d8:	55                   	push   rbp
    72d9:	48 89 e5             	mov    rbp,rsp
    72dc:	48 8d 3d 55 5f 00 00 	lea    rdi,[rip+0x5f55]        # d238 <_IO_stdin_used+0x1238>
    72e3:	e8 18 b2 ff ff       	call   2500 <puts@plt>
    72e8:	90                   	nop
    72e9:	5d                   	pop    rbp
    72ea:	c3                   	ret    

00000000000072eb <start_nsh_server>:
    72eb:	f3 0f 1e fa          	endbr64 
    72ef:	55                   	push   rbp
    72f0:	48 89 e5             	mov    rbp,rsp
    72f3:	48 83 ec 10          	sub    rsp,0x10
    72f7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    72fe:	00 00 
    7300:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7304:	31 c0                	xor    eax,eax
    7306:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    730a:	b9 00 00 00 00       	mov    ecx,0x0
    730f:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 7387 <actually_start_nsh_server>
    7316:	be 00 00 00 00       	mov    esi,0x0
    731b:	48 89 c7             	mov    rdi,rax
    731e:	e8 6d b1 ff ff       	call   2490 <pthread_create@plt>
    7323:	90                   	nop
    7324:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7328:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    732f:	00 00 
    7331:	74 05                	je     7338 <start_nsh_server+0x4d>
    7333:	e8 48 b2 ff ff       	call   2580 <__stack_chk_fail@plt>
    7338:	c9                   	leave  
    7339:	c3                   	ret    

000000000000733a <rnstrip>:
    733a:	f3 0f 1e fa          	endbr64 
    733e:	55                   	push   rbp
    733f:	48 89 e5             	mov    rbp,rsp
    7342:	48 83 ec 10          	sub    rsp,0x10
    7346:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    734a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    734e:	48 8d 35 5b 60 00 00 	lea    rsi,[rip+0x605b]        # d3b0 <_IO_stdin_used+0x13b0>
    7355:	48 89 c7             	mov    rdi,rax
    7358:	e8 e3 b2 ff ff       	call   2640 <strcspn@plt>
    735d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    7361:	48 01 d0             	add    rax,rdx
    7364:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7367:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    736b:	48 8d 35 40 60 00 00 	lea    rsi,[rip+0x6040]        # d3b2 <_IO_stdin_used+0x13b2>
    7372:	48 89 c7             	mov    rdi,rax
    7375:	e8 c6 b2 ff ff       	call   2640 <strcspn@plt>
    737a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    737e:	48 01 d0             	add    rax,rdx
    7381:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7384:	90                   	nop
    7385:	c9                   	leave  
    7386:	c3                   	ret    

0000000000007387 <actually_start_nsh_server>:
    7387:	f3 0f 1e fa          	endbr64 
    738b:	55                   	push   rbp
    738c:	48 89 e5             	mov    rbp,rsp
    738f:	48 83 ec 50          	sub    rsp,0x50
    7393:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    739a:	00 00 
    739c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    73a0:	31 c0                	xor    eax,eax
    73a2:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    73a9:	ba 00 00 00 00       	mov    edx,0x0
    73ae:	be 01 00 00 00       	mov    esi,0x1
    73b3:	bf 02 00 00 00       	mov    edi,0x2
    73b8:	e8 d3 b4 ff ff       	call   2890 <socket@plt>
    73bd:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    73c0:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    73c4:	75 16                	jne    73dc <actually_start_nsh_server+0x55>
    73c6:	48 8d 3d eb 5f 00 00 	lea    rdi,[rip+0x5feb]        # d3b8 <_IO_stdin_used+0x13b8>
    73cd:	e8 2e b1 ff ff       	call   2500 <puts@plt>
    73d2:	bf 01 00 00 00       	mov    edi,0x1
    73d7:	e8 64 b4 ff ff       	call   2840 <exit@plt>
    73dc:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    73e0:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    73e3:	41 b8 04 00 00 00    	mov    r8d,0x4
    73e9:	48 89 d1             	mov    rcx,rdx
    73ec:	ba 02 00 00 00       	mov    edx,0x2
    73f1:	be 01 00 00 00       	mov    esi,0x1
    73f6:	89 c7                	mov    edi,eax
    73f8:	e8 13 b1 ff ff       	call   2510 <setsockopt@plt>
    73fd:	85 c0                	test   eax,eax
    73ff:	74 16                	je     7417 <actually_start_nsh_server+0x90>
    7401:	48 8d 3d d8 5f 00 00 	lea    rdi,[rip+0x5fd8]        # d3e0 <_IO_stdin_used+0x13e0>
    7408:	e8 f3 b0 ff ff       	call   2500 <puts@plt>
    740d:	bf 01 00 00 00       	mov    edi,0x1
    7412:	e8 29 b4 ff ff       	call   2840 <exit@plt>
    7417:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    741d:	bf 00 00 00 00       	mov    edi,0x0
    7422:	e8 c9 b1 ff ff       	call   25f0 <htonl@plt>
    7427:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    742a:	bf 81 02 00 00       	mov    edi,0x281
    742f:	e8 5c b1 ff ff       	call   2590 <htons@plt>
    7434:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    7438:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    743c:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    743f:	ba 10 00 00 00       	mov    edx,0x10
    7444:	48 89 ce             	mov    rsi,rcx
    7447:	89 c7                	mov    edi,eax
    7449:	e8 12 b3 ff ff       	call   2760 <bind@plt>
    744e:	85 c0                	test   eax,eax
    7450:	79 16                	jns    7468 <actually_start_nsh_server+0xe1>
    7452:	48 8d 3d af 5f 00 00 	lea    rdi,[rip+0x5faf]        # d408 <_IO_stdin_used+0x1408>
    7459:	e8 a2 b0 ff ff       	call   2500 <puts@plt>
    745e:	bf 01 00 00 00       	mov    edi,0x1
    7463:	e8 d8 b3 ff ff       	call   2840 <exit@plt>
    7468:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    746b:	be 05 00 00 00       	mov    esi,0x5
    7470:	89 c7                	mov    edi,eax
    7472:	e8 99 b2 ff ff       	call   2710 <listen@plt>
    7477:	85 c0                	test   eax,eax
    7479:	79 16                	jns    7491 <actually_start_nsh_server+0x10a>
    747b:	48 8d 3d be 5f 00 00 	lea    rdi,[rip+0x5fbe]        # d440 <_IO_stdin_used+0x1440>
    7482:	e8 79 b0 ff ff       	call   2500 <puts@plt>
    7487:	bf 01 00 00 00       	mov    edi,0x1
    748c:	e8 af b3 ff ff       	call   2840 <exit@plt>
    7491:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7495:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    7499:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    749c:	48 89 ce             	mov    rsi,rcx
    749f:	89 c7                	mov    edi,eax
    74a1:	e8 2a b3 ff ff       	call   27d0 <accept@plt>
    74a6:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    74a9:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    74ad:	79 20                	jns    74cf <actually_start_nsh_server+0x148>
    74af:	b8 00 00 00 00       	mov    eax,0x0
    74b4:	e8 a7 be ff ff       	call   3360 <get_formated_time>
    74b9:	48 89 c6             	mov    rsi,rax
    74bc:	48 8d 3d ad 5f 00 00 	lea    rdi,[rip+0x5fad]        # d470 <_IO_stdin_used+0x1470>
    74c3:	b8 00 00 00 00       	mov    eax,0x0
    74c8:	e8 f3 b0 ff ff       	call   25c0 <printf@plt>
    74cd:	eb c2                	jmp    7491 <actually_start_nsh_server+0x10a>
    74cf:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    74d2:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    74d5:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    74d9:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    74dd:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    74e1:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    74e5:	48 89 d1             	mov    rcx,rdx
    74e8:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 74fe <accept_cmd>
    74ef:	be 00 00 00 00       	mov    esi,0x0
    74f4:	48 89 c7             	mov    rdi,rax
    74f7:	e8 94 af ff ff       	call   2490 <pthread_create@plt>
    74fc:	eb 93                	jmp    7491 <actually_start_nsh_server+0x10a>

00000000000074fe <accept_cmd>:
    74fe:	f3 0f 1e fa          	endbr64 
    7502:	55                   	push   rbp
    7503:	48 89 e5             	mov    rbp,rsp
    7506:	48 83 ec 30          	sub    rsp,0x30
    750a:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    750e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    7512:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7516:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    751a:	8b 00                	mov    eax,DWORD PTR [rax]
    751c:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    7523:	00 00 
    7525:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    752c:	ba 00 04 00 00       	mov    edx,0x400
    7531:	48 89 ce             	mov    rsi,rcx
    7534:	89 c7                	mov    edi,eax
    7536:	e8 15 b1 ff ff       	call   2650 <read@plt>
    753b:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    753e:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    7542:	7e 45                	jle    7589 <accept_cmd+0x8b>
    7544:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    754b:	00 00 
    754d:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    7553:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7557:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    755b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    755e:	0f b6 c0             	movzx  eax,al
    7561:	89 c6                	mov    esi,eax
    7563:	48 8d 3d 28 5f 00 00 	lea    rdi,[rip+0x5f28]        # d492 <_IO_stdin_used+0x1492>
    756a:	b8 00 00 00 00       	mov    eax,0x0
    756f:	e8 4c b0 ff ff       	call   25c0 <printf@plt>
    7574:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7578:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    757c:	48 89 d6             	mov    rsi,rdx
    757f:	48 89 c7             	mov    rdi,rax
    7582:	e8 99 0c 00 00       	call   8220 <process_opcode>
    7587:	eb 8d                	jmp    7516 <accept_cmd+0x18>
    7589:	90                   	nop
    758a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    758e:	8b 00                	mov    eax,DWORD PTR [rax]
    7590:	89 c7                	mov    edi,eax
    7592:	e8 89 b0 ff ff       	call   2620 <close@plt>
    7597:	90                   	nop
    7598:	c9                   	leave  
    7599:	c3                   	ret    

000000000000759a <tcp_rst_portscan_detect>:
    759a:	f3 0f 1e fa          	endbr64 
    759e:	55                   	push   rbp
    759f:	48 89 e5             	mov    rbp,rsp
    75a2:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    75a9:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    75b0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    75b7:	00 00 
    75b9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    75bd:	31 c0                	xor    eax,eax
    75bf:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    75c6:	00 00 00 
    75c9:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75d0:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    75d6:	83 f8 1e             	cmp    eax,0x1e
    75d9:	74 0a                	je     75e5 <tcp_rst_portscan_detect+0x4b>
    75db:	b8 00 00 00 00       	mov    eax,0x0
    75e0:	e9 8d 01 00 00       	jmp    7772 <tcp_rst_portscan_detect+0x1d8>
    75e5:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75ec:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    75f2:	83 e8 01             	sub    eax,0x1
    75f5:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    75fb:	eb 6c                	jmp    7669 <tcp_rst_portscan_detect+0xcf>
    75fd:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    7603:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7609:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7610:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7616:	48 63 d2             	movsxd rdx,edx
    7619:	48 83 c2 28          	add    rdx,0x28
    761d:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    7622:	89 c1                	mov    ecx,eax
    7624:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    762b:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7632:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7638:	48 63 d2             	movsxd rdx,edx
    763b:	48 83 c2 28          	add    rdx,0x28
    763f:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    7644:	29 c1                	sub    ecx,eax
    7646:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    764c:	8d 50 01             	lea    edx,[rax+0x1]
    764f:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    7655:	89 ca                	mov    edx,ecx
    7657:	48 98                	cdqe   
    7659:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    7660:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    7667:	74 0b                	je     7674 <tcp_rst_portscan_detect+0xda>
    7669:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    7670:	75 8b                	jne    75fd <tcp_rst_portscan_detect+0x63>
    7672:	eb 01                	jmp    7675 <tcp_rst_portscan_detect+0xdb>
    7674:	90                   	nop
    7675:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    767c:	00 00 00 
    767f:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    7686:	00 00 00 
    7689:	eb 24                	jmp    76af <tcp_rst_portscan_detect+0x115>
    768b:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7691:	48 98                	cdqe   
    7693:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    769a:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    769f:	7f 07                	jg     76a8 <tcp_rst_portscan_detect+0x10e>
    76a1:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    76a8:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    76af:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    76b5:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    76bb:	7c ce                	jl     768b <tcp_rst_portscan_detect+0xf1>
    76bd:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    76c3:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    76c9:	0f 85 9e 00 00 00    	jne    776d <tcp_rst_portscan_detect+0x1d3>
    76cf:	48 8b 05 5a 99 00 00 	mov    rax,QWORD PTR [rip+0x995a]        # 11030 <def_log_file>
    76d6:	48 8d 35 c3 5d 00 00 	lea    rsi,[rip+0x5dc3]        # d4a0 <_IO_stdin_used+0x14a0>
    76dd:	48 89 c7             	mov    rdi,rax
    76e0:	e8 8b b0 ff ff       	call   2770 <fopen@plt>
    76e5:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    76ec:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    76f3:	48 83 c0 08          	add    rax,0x8
    76f7:	48 89 c6             	mov    rsi,rax
    76fa:	48 8d 3d a7 5d 00 00 	lea    rdi,[rip+0x5da7]        # d4a8 <_IO_stdin_used+0x14a8>
    7701:	b8 00 00 00 00       	mov    eax,0x0
    7706:	e8 b5 ae ff ff       	call   25c0 <printf@plt>
    770b:	b8 00 00 00 00       	mov    eax,0x0
    7710:	e8 4b bc ff ff       	call   3360 <get_formated_time>
    7715:	48 89 c1             	mov    rcx,rax
    7718:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    771f:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7723:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    772a:	48 8d 35 a7 5d 00 00 	lea    rsi,[rip+0x5da7]        # d4d8 <_IO_stdin_used+0x14d8>
    7731:	48 89 c7             	mov    rdi,rax
    7734:	b8 00 00 00 00       	mov    eax,0x0
    7739:	e8 f2 b0 ff ff       	call   2830 <sprintf@plt>
    773e:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    7745:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    774c:	48 89 d6             	mov    rsi,rdx
    774f:	48 89 c7             	mov    rdi,rax
    7752:	e8 89 ae ff ff       	call   25e0 <fputs@plt>
    7757:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    775e:	48 89 c7             	mov    rdi,rax
    7761:	e8 ea ad ff ff       	call   2550 <fclose@plt>
    7766:	b8 01 00 00 00       	mov    eax,0x1
    776b:	eb 05                	jmp    7772 <tcp_rst_portscan_detect+0x1d8>
    776d:	b8 00 00 00 00       	mov    eax,0x0
    7772:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    7776:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    777d:	00 00 
    777f:	74 05                	je     7786 <tcp_rst_portscan_detect+0x1ec>
    7781:	e8 fa ad ff ff       	call   2580 <__stack_chk_fail@plt>
    7786:	c9                   	leave  
    7787:	c3                   	ret    

0000000000007788 <fin_rst_portscan_detect>:
    7788:	f3 0f 1e fa          	endbr64 
    778c:	55                   	push   rbp
    778d:	48 89 e5             	mov    rbp,rsp
    7790:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    7797:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    779e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    77a5:	00 00 
    77a7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    77ab:	31 c0                	xor    eax,eax
    77ad:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    77b4:	00 00 00 
    77b7:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    77be:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    77c1:	83 f8 1e             	cmp    eax,0x1e
    77c4:	74 0a                	je     77d0 <fin_rst_portscan_detect+0x48>
    77c6:	b8 00 00 00 00       	mov    eax,0x0
    77cb:	e9 8a 01 00 00       	jmp    795a <fin_rst_portscan_detect+0x1d2>
    77d0:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    77d7:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    77da:	83 e8 01             	sub    eax,0x1
    77dd:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    77e3:	eb 6c                	jmp    7851 <fin_rst_portscan_detect+0xc9>
    77e5:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    77eb:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    77f1:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    77f8:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    77fe:	48 63 d2             	movsxd rdx,edx
    7801:	48 83 c2 0a          	add    rdx,0xa
    7805:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    780a:	89 c1                	mov    ecx,eax
    780c:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    7813:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    781a:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7820:	48 63 d2             	movsxd rdx,edx
    7823:	48 83 c2 0a          	add    rdx,0xa
    7827:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    782c:	29 c1                	sub    ecx,eax
    782e:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    7834:	8d 50 01             	lea    edx,[rax+0x1]
    7837:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    783d:	89 ca                	mov    edx,ecx
    783f:	48 98                	cdqe   
    7841:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    7848:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    784f:	74 0b                	je     785c <fin_rst_portscan_detect+0xd4>
    7851:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    7858:	75 8b                	jne    77e5 <fin_rst_portscan_detect+0x5d>
    785a:	eb 01                	jmp    785d <fin_rst_portscan_detect+0xd5>
    785c:	90                   	nop
    785d:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    7864:	00 00 00 
    7867:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    786e:	00 00 00 
    7871:	eb 24                	jmp    7897 <fin_rst_portscan_detect+0x10f>
    7873:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7879:	48 98                	cdqe   
    787b:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    7882:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    7887:	7f 07                	jg     7890 <fin_rst_portscan_detect+0x108>
    7889:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    7890:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    7897:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    789d:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    78a3:	7c ce                	jl     7873 <fin_rst_portscan_detect+0xeb>
    78a5:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    78ab:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    78b1:	0f 85 9e 00 00 00    	jne    7955 <fin_rst_portscan_detect+0x1cd>
    78b7:	48 8b 05 72 97 00 00 	mov    rax,QWORD PTR [rip+0x9772]        # 11030 <def_log_file>
    78be:	48 8d 35 db 5b 00 00 	lea    rsi,[rip+0x5bdb]        # d4a0 <_IO_stdin_used+0x14a0>
    78c5:	48 89 c7             	mov    rdi,rax
    78c8:	e8 a3 ae ff ff       	call   2770 <fopen@plt>
    78cd:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    78d4:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    78db:	48 83 c0 08          	add    rax,0x8
    78df:	48 89 c6             	mov    rsi,rax
    78e2:	48 8d 3d 17 5c 00 00 	lea    rdi,[rip+0x5c17]        # d500 <_IO_stdin_used+0x1500>
    78e9:	b8 00 00 00 00       	mov    eax,0x0
    78ee:	e8 cd ac ff ff       	call   25c0 <printf@plt>
    78f3:	b8 00 00 00 00       	mov    eax,0x0
    78f8:	e8 63 ba ff ff       	call   3360 <get_formated_time>
    78fd:	48 89 c1             	mov    rcx,rax
    7900:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7907:	48 8d 50 08          	lea    rdx,[rax+0x8]
    790b:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7912:	48 8d 35 17 5c 00 00 	lea    rsi,[rip+0x5c17]        # d530 <_IO_stdin_used+0x1530>
    7919:	48 89 c7             	mov    rdi,rax
    791c:	b8 00 00 00 00       	mov    eax,0x0
    7921:	e8 0a af ff ff       	call   2830 <sprintf@plt>
    7926:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    792d:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7934:	48 89 d6             	mov    rsi,rdx
    7937:	48 89 c7             	mov    rdi,rax
    793a:	e8 a1 ac ff ff       	call   25e0 <fputs@plt>
    793f:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    7946:	48 89 c7             	mov    rdi,rax
    7949:	e8 02 ac ff ff       	call   2550 <fclose@plt>
    794e:	b8 01 00 00 00       	mov    eax,0x1
    7953:	eb 05                	jmp    795a <fin_rst_portscan_detect+0x1d2>
    7955:	b8 00 00 00 00       	mov    eax,0x0
    795a:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    795e:	64 48 33 34 25 28 00 	xor    rsi,QWORD PTR fs:0x28
    7965:	00 00 
    7967:	74 05                	je     796e <fin_rst_portscan_detect+0x1e6>
    7969:	e8 12 ac ff ff       	call   2580 <__stack_chk_fail@plt>
    796e:	c9                   	leave  
    796f:	c3                   	ret    

0000000000007970 <member_ready_for_scan>:
    7970:	f3 0f 1e fa          	endbr64 
    7974:	55                   	push   rbp
    7975:	48 89 e5             	mov    rbp,rsp
    7978:	48 83 ec 10          	sub    rsp,0x10
    797c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    7983:	eb 48                	jmp    79cd <member_ready_for_scan+0x5d>
    7985:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7988:	48 63 d0             	movsxd rdx,eax
    798b:	48 89 d0             	mov    rax,rdx
    798e:	48 c1 e0 02          	shl    rax,0x2
    7992:	48 01 d0             	add    rax,rdx
    7995:	48 c1 e0 03          	shl    rax,0x3
    7999:	48 01 d0             	add    rax,rdx
    799c:	48 c1 e0 04          	shl    rax,0x4
    79a0:	48 8d 15 f9 b6 0e 00 	lea    rdx,[rip+0xeb6f9]        # f30a0 <watchlist>
    79a7:	48 01 d0             	add    rax,rdx
    79aa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    79ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79b2:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    79b8:	83 f8 1d             	cmp    eax,0x1d
    79bb:	76 0c                	jbe    79c9 <member_ready_for_scan+0x59>
    79bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79c1:	48 89 c7             	mov    rdi,rax
    79c4:	e8 d1 fb ff ff       	call   759a <tcp_rst_portscan_detect>
    79c9:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    79cd:	8b 05 45 96 00 00    	mov    eax,DWORD PTR [rip+0x9645]        # 11018 <watchlist_num>
    79d3:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    79d6:	7e ad                	jle    7985 <member_ready_for_scan+0x15>
    79d8:	90                   	nop
    79d9:	90                   	nop
    79da:	c9                   	leave  
    79db:	c3                   	ret    

00000000000079dc <member_exists>:
    79dc:	f3 0f 1e fa          	endbr64 
    79e0:	55                   	push   rbp
    79e1:	48 89 e5             	mov    rbp,rsp
    79e4:	48 83 ec 20          	sub    rsp,0x20
    79e8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    79ec:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    79f3:	eb 47                	jmp    7a3c <member_exists+0x60>
    79f5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    79f8:	8d 50 01             	lea    edx,[rax+0x1]
    79fb:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    79fe:	48 63 d0             	movsxd rdx,eax
    7a01:	48 89 d0             	mov    rax,rdx
    7a04:	48 c1 e0 02          	shl    rax,0x2
    7a08:	48 01 d0             	add    rax,rdx
    7a0b:	48 c1 e0 03          	shl    rax,0x3
    7a0f:	48 01 d0             	add    rax,rdx
    7a12:	48 c1 e0 04          	shl    rax,0x4
    7a16:	48 8d 15 83 b6 0e 00 	lea    rdx,[rip+0xeb683]        # f30a0 <watchlist>
    7a1d:	48 01 d0             	add    rax,rdx
    7a20:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7a24:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a28:	48 89 c6             	mov    rsi,rax
    7a2b:	48 89 d7             	mov    rdi,rdx
    7a2e:	e8 4d ac ff ff       	call   2680 <strcmp@plt>
    7a33:	85 c0                	test   eax,eax
    7a35:	75 05                	jne    7a3c <member_exists+0x60>
    7a37:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a3a:	eb 10                	jmp    7a4c <member_exists+0x70>
    7a3c:	8b 05 d6 95 00 00    	mov    eax,DWORD PTR [rip+0x95d6]        # 11018 <watchlist_num>
    7a42:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7a45:	7e ae                	jle    79f5 <member_exists+0x19>
    7a47:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7a4c:	c9                   	leave  
    7a4d:	c3                   	ret    

0000000000007a4e <init_member>:
    7a4e:	f3 0f 1e fa          	endbr64 
    7a52:	55                   	push   rbp
    7a53:	48 89 e5             	mov    rbp,rsp
    7a56:	48 83 ec 20          	sub    rsp,0x20
    7a5a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7a5e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a62:	48 89 c7             	mov    rdi,rax
    7a65:	e8 72 ff ff ff       	call   79dc <member_exists>
    7a6a:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7a6d:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    7a71:	74 42                	je     7ab5 <init_member+0x67>
    7a73:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7a76:	48 63 d0             	movsxd rdx,eax
    7a79:	48 89 d0             	mov    rax,rdx
    7a7c:	48 c1 e0 02          	shl    rax,0x2
    7a80:	48 01 d0             	add    rax,rdx
    7a83:	48 c1 e0 03          	shl    rax,0x3
    7a87:	48 01 d0             	add    rax,rdx
    7a8a:	48 c1 e0 04          	shl    rax,0x4
    7a8e:	48 8d 15 0b b6 0e 00 	lea    rdx,[rip+0xeb60b]        # f30a0 <watchlist>
    7a95:	48 01 d0             	add    rax,rdx
    7a98:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7a9c:	bf 00 00 00 00       	mov    edi,0x0
    7aa1:	e8 2a ac ff ff       	call   26d0 <time@plt>
    7aa6:	48 89 c2             	mov    rdx,rax
    7aa9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7aad:	48 89 10             	mov    QWORD PTR [rax],rdx
    7ab0:	e9 a8 00 00 00       	jmp    7b5d <init_member+0x10f>
    7ab5:	48 8d 3d 99 5a 00 00 	lea    rdi,[rip+0x5a99]        # d555 <_IO_stdin_used+0x1555>
    7abc:	e8 1b ff ff ff       	call   79dc <member_exists>
    7ac1:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7ac4:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    7ac8:	74 2b                	je     7af5 <init_member+0xa7>
    7aca:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7acd:	48 63 d0             	movsxd rdx,eax
    7ad0:	48 89 d0             	mov    rax,rdx
    7ad3:	48 c1 e0 02          	shl    rax,0x2
    7ad7:	48 01 d0             	add    rax,rdx
    7ada:	48 c1 e0 03          	shl    rax,0x3
    7ade:	48 01 d0             	add    rax,rdx
    7ae1:	48 c1 e0 04          	shl    rax,0x4
    7ae5:	48 8d 15 b4 b5 0e 00 	lea    rdx,[rip+0xeb5b4]        # f30a0 <watchlist>
    7aec:	48 01 d0             	add    rax,rdx
    7aef:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7af3:	eb 3b                	jmp    7b30 <init_member+0xe2>
    7af5:	8b 05 1d 95 00 00    	mov    eax,DWORD PTR [rip+0x951d]        # 11018 <watchlist_num>
    7afb:	83 c0 01             	add    eax,0x1
    7afe:	89 05 14 95 00 00    	mov    DWORD PTR [rip+0x9514],eax        # 11018 <watchlist_num>
    7b04:	8b 05 0e 95 00 00    	mov    eax,DWORD PTR [rip+0x950e]        # 11018 <watchlist_num>
    7b0a:	48 63 d0             	movsxd rdx,eax
    7b0d:	48 89 d0             	mov    rax,rdx
    7b10:	48 c1 e0 02          	shl    rax,0x2
    7b14:	48 01 d0             	add    rax,rdx
    7b17:	48 c1 e0 03          	shl    rax,0x3
    7b1b:	48 01 d0             	add    rax,rdx
    7b1e:	48 c1 e0 04          	shl    rax,0x4
    7b22:	48 8d 15 77 b5 0e 00 	lea    rdx,[rip+0xeb577]        # f30a0 <watchlist>
    7b29:	48 01 d0             	add    rax,rdx
    7b2c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b30:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b34:	ba 08 00 00 00       	mov    edx,0x8
    7b39:	be 00 00 00 00       	mov    esi,0x0
    7b3e:	48 89 c7             	mov    rdi,rax
    7b41:	e8 ba aa ff ff       	call   2600 <memset@plt>
    7b46:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b4a:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7b4e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7b52:	48 89 c6             	mov    rsi,rax
    7b55:	48 89 d7             	mov    rdi,rdx
    7b58:	e8 73 a9 ff ff       	call   24d0 <strcpy@plt>
    7b5d:	c9                   	leave  
    7b5e:	c3                   	ret    

0000000000007b5f <ready_for_clean>:
    7b5f:	f3 0f 1e fa          	endbr64 
    7b63:	55                   	push   rbp
    7b64:	48 89 e5             	mov    rbp,rsp
    7b67:	48 83 ec 10          	sub    rsp,0x10
    7b6b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7b6f:	bf 00 00 00 00       	mov    edi,0x0
    7b74:	e8 57 ab ff ff       	call   26d0 <time@plt>
    7b79:	48 89 c2             	mov    rdx,rax
    7b7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b80:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7b83:	48 29 c2             	sub    rdx,rax
    7b86:	48 8b 05 9b fd 0f 00 	mov    rax,QWORD PTR [rip+0xffd9b]        # 107928 <clean_delay>
    7b8d:	48 39 c2             	cmp    rdx,rax
    7b90:	72 22                	jb     7bb4 <ready_for_clean+0x55>
    7b92:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b96:	48 83 c0 08          	add    rax,0x8
    7b9a:	48 8d 35 bc 59 00 00 	lea    rsi,[rip+0x59bc]        # d55d <_IO_stdin_used+0x155d>
    7ba1:	48 89 c7             	mov    rdi,rax
    7ba4:	e8 d7 aa ff ff       	call   2680 <strcmp@plt>
    7ba9:	85 c0                	test   eax,eax
    7bab:	74 07                	je     7bb4 <ready_for_clean+0x55>
    7bad:	b8 01 00 00 00       	mov    eax,0x1
    7bb2:	eb 05                	jmp    7bb9 <ready_for_clean+0x5a>
    7bb4:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7bb9:	c9                   	leave  
    7bba:	c3                   	ret    

0000000000007bbb <clean>:
    7bbb:	f3 0f 1e fa          	endbr64 
    7bbf:	55                   	push   rbp
    7bc0:	48 89 e5             	mov    rbp,rsp
    7bc3:	48 83 ec 10          	sub    rsp,0x10
    7bc7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7bcb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bcf:	ba 08 00 00 00       	mov    edx,0x8
    7bd4:	be 00 00 00 00       	mov    esi,0x0
    7bd9:	48 89 c7             	mov    rdi,rax
    7bdc:	e8 1f aa ff ff       	call   2600 <memset@plt>
    7be1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7be5:	48 83 c0 08          	add    rax,0x8
    7be9:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7bf0:	2e 31 00 
    7bf3:	48 89 08             	mov    QWORD PTR [rax],rcx
    7bf6:	90                   	nop
    7bf7:	c9                   	leave  
    7bf8:	c3                   	ret    

0000000000007bf9 <scan_for_clean>:
    7bf9:	f3 0f 1e fa          	endbr64 
    7bfd:	55                   	push   rbp
    7bfe:	48 89 e5             	mov    rbp,rsp
    7c01:	48 83 ec 10          	sub    rsp,0x10
    7c05:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c0c:	eb 62                	jmp    7c70 <scan_for_clean+0x77>
    7c0e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c11:	48 63 d0             	movsxd rdx,eax
    7c14:	48 89 d0             	mov    rax,rdx
    7c17:	48 c1 e0 02          	shl    rax,0x2
    7c1b:	48 01 d0             	add    rax,rdx
    7c1e:	48 c1 e0 03          	shl    rax,0x3
    7c22:	48 01 d0             	add    rax,rdx
    7c25:	48 c1 e0 04          	shl    rax,0x4
    7c29:	48 8d 15 70 b4 0e 00 	lea    rdx,[rip+0xeb470]        # f30a0 <watchlist>
    7c30:	48 01 d0             	add    rax,rdx
    7c33:	48 89 c7             	mov    rdi,rax
    7c36:	e8 24 ff ff ff       	call   7b5f <ready_for_clean>
    7c3b:	85 c0                	test   eax,eax
    7c3d:	7e 2d                	jle    7c6c <scan_for_clean+0x73>
    7c3f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c42:	48 63 d0             	movsxd rdx,eax
    7c45:	48 89 d0             	mov    rax,rdx
    7c48:	48 c1 e0 02          	shl    rax,0x2
    7c4c:	48 01 d0             	add    rax,rdx
    7c4f:	48 c1 e0 03          	shl    rax,0x3
    7c53:	48 01 d0             	add    rax,rdx
    7c56:	48 c1 e0 04          	shl    rax,0x4
    7c5a:	48 8d 15 3f b4 0e 00 	lea    rdx,[rip+0xeb43f]        # f30a0 <watchlist>
    7c61:	48 01 d0             	add    rax,rdx
    7c64:	48 89 c7             	mov    rdi,rax
    7c67:	e8 4f ff ff ff       	call   7bbb <clean>
    7c6c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7c70:	8b 05 a2 93 00 00    	mov    eax,DWORD PTR [rip+0x93a2]        # 11018 <watchlist_num>
    7c76:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7c79:	7e 93                	jle    7c0e <scan_for_clean+0x15>
    7c7b:	90                   	nop
    7c7c:	90                   	nop
    7c7d:	c9                   	leave  
    7c7e:	c3                   	ret    

0000000000007c7f <compare_entries>:
    7c7f:	f3 0f 1e fa          	endbr64 
    7c83:	55                   	push   rbp
    7c84:	48 89 e5             	mov    rbp,rsp
    7c87:	48 83 ec 20          	sub    rsp,0x20
    7c8b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7c8f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7c93:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c9a:	e9 ac 00 00 00       	jmp    7d4b <compare_entries+0xcc>
    7c9f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7ca2:	48 63 d0             	movsxd rdx,eax
    7ca5:	48 89 d0             	mov    rax,rdx
    7ca8:	48 c1 e0 04          	shl    rax,0x4
    7cac:	48 01 d0             	add    rax,rdx
    7caf:	48 01 c0             	add    rax,rax
    7cb2:	48 8d 15 c7 fe 0f 00 	lea    rdx,[rip+0xffec7]        # 107b80 <arpcache>
    7cb9:	48 01 c2             	add    rdx,rax
    7cbc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7cc0:	48 89 c6             	mov    rsi,rax
    7cc3:	48 89 d7             	mov    rdi,rdx
    7cc6:	e8 a3 01 00 00       	call   7e6e <compare_ip_entry>
    7ccb:	85 c0                	test   eax,eax
    7ccd:	74 78                	je     7d47 <compare_entries+0xc8>
    7ccf:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7cd2:	48 63 d0             	movsxd rdx,eax
    7cd5:	48 89 d0             	mov    rax,rdx
    7cd8:	48 c1 e0 04          	shl    rax,0x4
    7cdc:	48 01 d0             	add    rax,rdx
    7cdf:	48 01 c0             	add    rax,rax
    7ce2:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7ce6:	48 8d 05 93 fe 0f 00 	lea    rax,[rip+0xffe93]        # 107b80 <arpcache>
    7ced:	48 01 c2             	add    rdx,rax
    7cf0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7cf4:	48 89 c6             	mov    rsi,rax
    7cf7:	48 89 d7             	mov    rdi,rdx
    7cfa:	e8 98 01 00 00       	call   7e97 <compare_mac_entry>
    7cff:	85 c0                	test   eax,eax
    7d01:	75 44                	jne    7d47 <compare_entries+0xc8>
    7d03:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d06:	48 63 d0             	movsxd rdx,eax
    7d09:	48 89 d0             	mov    rax,rdx
    7d0c:	48 c1 e0 04          	shl    rax,0x4
    7d10:	48 01 d0             	add    rax,rdx
    7d13:	48 01 c0             	add    rax,rax
    7d16:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d1a:	48 8d 05 5f fe 0f 00 	lea    rax,[rip+0xffe5f]        # 107b80 <arpcache>
    7d21:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7d25:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7d29:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d2d:	48 89 d1             	mov    rcx,rdx
    7d30:	48 89 f2             	mov    rdx,rsi
    7d33:	48 89 c6             	mov    rsi,rax
    7d36:	48 8d 3d 2b 58 00 00 	lea    rdi,[rip+0x582b]        # d568 <_IO_stdin_used+0x1568>
    7d3d:	b8 00 00 00 00       	mov    eax,0x0
    7d42:	e8 79 a8 ff ff       	call   25c0 <printf@plt>
    7d47:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7d4b:	8b 05 cb 92 00 00    	mov    eax,DWORD PTR [rip+0x92cb]        # 1101c <arp_entries>
    7d51:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7d54:	0f 8e 45 ff ff ff    	jle    7c9f <compare_entries+0x20>
    7d5a:	90                   	nop
    7d5b:	90                   	nop
    7d5c:	c9                   	leave  
    7d5d:	c3                   	ret    

0000000000007d5e <add_entry>:
    7d5e:	f3 0f 1e fa          	endbr64 
    7d62:	55                   	push   rbp
    7d63:	48 89 e5             	mov    rbp,rsp
    7d66:	48 83 ec 20          	sub    rsp,0x20
    7d6a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7d6e:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7d72:	8b 05 a4 92 00 00    	mov    eax,DWORD PTR [rip+0x92a4]        # 1101c <arp_entries>
    7d78:	83 c0 01             	add    eax,0x1
    7d7b:	89 05 9b 92 00 00    	mov    DWORD PTR [rip+0x929b],eax        # 1101c <arp_entries>
    7d81:	8b 05 95 92 00 00    	mov    eax,DWORD PTR [rip+0x9295]        # 1101c <arp_entries>
    7d87:	48 63 d0             	movsxd rdx,eax
    7d8a:	48 89 d0             	mov    rax,rdx
    7d8d:	48 c1 e0 04          	shl    rax,0x4
    7d91:	48 01 d0             	add    rax,rdx
    7d94:	48 01 c0             	add    rax,rax
    7d97:	48 8d 15 e2 fd 0f 00 	lea    rdx,[rip+0xffde2]        # 107b80 <arpcache>
    7d9e:	48 01 d0             	add    rax,rdx
    7da1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7da5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7da9:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7dad:	48 89 d6             	mov    rsi,rdx
    7db0:	48 89 c7             	mov    rdi,rax
    7db3:	e8 18 a7 ff ff       	call   24d0 <strcpy@plt>
    7db8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7dbc:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7dc0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7dc4:	48 89 c6             	mov    rsi,rax
    7dc7:	48 89 d7             	mov    rdi,rdx
    7dca:	e8 01 a7 ff ff       	call   24d0 <strcpy@plt>
    7dcf:	90                   	nop
    7dd0:	c9                   	leave  
    7dd1:	c3                   	ret    

0000000000007dd2 <entry_exists>:
    7dd2:	f3 0f 1e fa          	endbr64 
    7dd6:	55                   	push   rbp
    7dd7:	48 89 e5             	mov    rbp,rsp
    7dda:	48 83 ec 20          	sub    rsp,0x20
    7dde:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7de2:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7de6:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7ded:	eb 6d                	jmp    7e5c <entry_exists+0x8a>
    7def:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7df2:	48 63 d0             	movsxd rdx,eax
    7df5:	48 89 d0             	mov    rax,rdx
    7df8:	48 c1 e0 04          	shl    rax,0x4
    7dfc:	48 01 d0             	add    rax,rdx
    7dff:	48 01 c0             	add    rax,rax
    7e02:	48 8d 15 77 fd 0f 00 	lea    rdx,[rip+0xffd77]        # 107b80 <arpcache>
    7e09:	48 01 c2             	add    rdx,rax
    7e0c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7e10:	48 89 c6             	mov    rsi,rax
    7e13:	48 89 d7             	mov    rdi,rdx
    7e16:	e8 53 00 00 00       	call   7e6e <compare_ip_entry>
    7e1b:	85 c0                	test   eax,eax
    7e1d:	75 39                	jne    7e58 <entry_exists+0x86>
    7e1f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e22:	48 63 d0             	movsxd rdx,eax
    7e25:	48 89 d0             	mov    rax,rdx
    7e28:	48 c1 e0 04          	shl    rax,0x4
    7e2c:	48 01 d0             	add    rax,rdx
    7e2f:	48 01 c0             	add    rax,rax
    7e32:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7e36:	48 8d 05 43 fd 0f 00 	lea    rax,[rip+0xffd43]        # 107b80 <arpcache>
    7e3d:	48 01 c2             	add    rdx,rax
    7e40:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7e44:	48 89 c6             	mov    rsi,rax
    7e47:	48 89 d7             	mov    rdi,rdx
    7e4a:	e8 48 00 00 00       	call   7e97 <compare_mac_entry>
    7e4f:	85 c0                	test   eax,eax
    7e51:	75 05                	jne    7e58 <entry_exists+0x86>
    7e53:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e56:	eb 14                	jmp    7e6c <entry_exists+0x9a>
    7e58:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7e5c:	8b 05 ba 91 00 00    	mov    eax,DWORD PTR [rip+0x91ba]        # 1101c <arp_entries>
    7e62:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7e65:	7e 88                	jle    7def <entry_exists+0x1d>
    7e67:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7e6c:	c9                   	leave  
    7e6d:	c3                   	ret    

0000000000007e6e <compare_ip_entry>:
    7e6e:	f3 0f 1e fa          	endbr64 
    7e72:	55                   	push   rbp
    7e73:	48 89 e5             	mov    rbp,rsp
    7e76:	48 83 ec 10          	sub    rsp,0x10
    7e7a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7e7e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7e82:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7e86:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e8a:	48 89 d6             	mov    rsi,rdx
    7e8d:	48 89 c7             	mov    rdi,rax
    7e90:	e8 eb a7 ff ff       	call   2680 <strcmp@plt>
    7e95:	c9                   	leave  
    7e96:	c3                   	ret    

0000000000007e97 <compare_mac_entry>:
    7e97:	f3 0f 1e fa          	endbr64 
    7e9b:	55                   	push   rbp
    7e9c:	48 89 e5             	mov    rbp,rsp
    7e9f:	48 83 ec 10          	sub    rsp,0x10
    7ea3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7ea7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7eab:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7eaf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7eb3:	48 89 d6             	mov    rsi,rdx
    7eb6:	48 89 c7             	mov    rdi,rax
    7eb9:	e8 c2 a7 ff ff       	call   2680 <strcmp@plt>
    7ebe:	c9                   	leave  
    7ebf:	c3                   	ret    

0000000000007ec0 <load_csv_arp_cache>:
    7ec0:	f3 0f 1e fa          	endbr64 
    7ec4:	55                   	push   rbp
    7ec5:	48 89 e5             	mov    rbp,rsp
    7ec8:	53                   	push   rbx
    7ec9:	48 83 ec 68          	sub    rsp,0x68
    7ecd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7ed4:	00 00 
    7ed6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7eda:	31 c0                	xor    eax,eax
    7edc:	48 8d 35 bb 56 00 00 	lea    rsi,[rip+0x56bb]        # d59e <_IO_stdin_used+0x159e>
    7ee3:	48 8d 3d b6 56 00 00 	lea    rdi,[rip+0x56b6]        # d5a0 <_IO_stdin_used+0x15a0>
    7eea:	e8 81 a8 ff ff       	call   2770 <fopen@plt>
    7eef:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7ef3:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7ef8:	75 22                	jne    7f1c <load_csv_arp_cache+0x5c>
    7efa:	48 8d 3d bf 56 00 00 	lea    rdi,[rip+0x56bf]        # d5c0 <_IO_stdin_used+0x15c0>
    7f01:	e8 fa a5 ff ff       	call   2500 <puts@plt>
    7f06:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7f0a:	48 89 c7             	mov    rdi,rax
    7f0d:	e8 3e a6 ff ff       	call   2550 <fclose@plt>
    7f12:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7f17:	e9 dd 00 00 00       	jmp    7ff9 <load_csv_arp_cache+0x139>
    7f1c:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7f23:	00 
    7f24:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7f2b:	00 
    7f2c:	eb 7c                	jmp    7faa <load_csv_arp_cache+0xea>
    7f2e:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f32:	48 85 c0             	test   rax,rax
    7f35:	0f 84 97 00 00 00    	je     7fd2 <load_csv_arp_cache+0x112>
    7f3b:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7f3f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f43:	48 8d 35 af 56 00 00 	lea    rsi,[rip+0x56af]        # d5f9 <_IO_stdin_used+0x15f9>
    7f4a:	48 89 c7             	mov    rdi,rax
    7f4d:	e8 ee a6 ff ff       	call   2640 <strcspn@plt>
    7f52:	48 01 d8             	add    rax,rbx
    7f55:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7f58:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f5c:	48 8d 35 98 56 00 00 	lea    rsi,[rip+0x5698]        # d5fb <_IO_stdin_used+0x15fb>
    7f63:	48 89 c7             	mov    rdi,rax
    7f66:	e8 25 a8 ff ff       	call   2790 <strtok@plt>
    7f6b:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7f6f:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7f73:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7f77:	48 89 d6             	mov    rsi,rdx
    7f7a:	48 89 c7             	mov    rdi,rax
    7f7d:	e8 4e a5 ff ff       	call   24d0 <strcpy@plt>
    7f82:	48 8d 35 72 56 00 00 	lea    rsi,[rip+0x5672]        # d5fb <_IO_stdin_used+0x15fb>
    7f89:	bf 00 00 00 00       	mov    edi,0x0
    7f8e:	e8 fd a7 ff ff       	call   2790 <strtok@plt>
    7f93:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7f97:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7f9b:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7f9f:	48 89 d6             	mov    rsi,rdx
    7fa2:	48 89 c7             	mov    rdi,rax
    7fa5:	e8 26 a5 ff ff       	call   24d0 <strcpy@plt>
    7faa:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    7fae:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    7fb2:	48 8d 45 98          	lea    rax,[rbp-0x68]
    7fb6:	48 89 ce             	mov    rsi,rcx
    7fb9:	48 89 c7             	mov    rdi,rax
    7fbc:	e8 2f a8 ff ff       	call   27f0 <getline@plt>
    7fc1:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7fc5:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    7fca:	0f 85 5e ff ff ff    	jne    7f2e <load_csv_arp_cache+0x6e>
    7fd0:	eb 01                	jmp    7fd3 <load_csv_arp_cache+0x113>
    7fd2:	90                   	nop
    7fd3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7fd7:	48 85 c0             	test   rax,rax
    7fda:	74 0c                	je     7fe8 <load_csv_arp_cache+0x128>
    7fdc:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7fe0:	48 89 c7             	mov    rdi,rax
    7fe3:	e8 88 a4 ff ff       	call   2470 <free@plt>
    7fe8:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7fec:	48 89 c7             	mov    rdi,rax
    7fef:	e8 5c a5 ff ff       	call   2550 <fclose@plt>
    7ff4:	b8 01 00 00 00       	mov    eax,0x1
    7ff9:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7ffd:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    8004:	00 00 
    8006:	74 05                	je     800d <load_csv_arp_cache+0x14d>
    8008:	e8 73 a5 ff ff       	call   2580 <__stack_chk_fail@plt>
    800d:	48 83 c4 68          	add    rsp,0x68
    8011:	5b                   	pop    rbx
    8012:	5d                   	pop    rbp
    8013:	c3                   	ret    

0000000000008014 <tls_decode>:
    8014:	f3 0f 1e fa          	endbr64 
    8018:	55                   	push   rbp
    8019:	48 89 e5             	mov    rbp,rsp
    801c:	48 83 ec 30          	sub    rsp,0x30
    8020:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8024:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8028:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    802c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8030:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8034:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8038:	0f b7 40 01          	movzx  eax,WORD PTR [rax+0x1]
    803c:	0f b7 c0             	movzx  eax,ax
    803f:	3d 03 03 00 00       	cmp    eax,0x303
    8044:	74 6a                	je     80b0 <tls_decode+0x9c>
    8046:	3d 03 03 00 00       	cmp    eax,0x303
    804b:	0f 8f c7 00 00 00    	jg     8118 <tls_decode+0x104>
    8051:	3d 01 03 00 00       	cmp    eax,0x301
    8056:	74 0c                	je     8064 <tls_decode+0x50>
    8058:	3d 02 03 00 00       	cmp    eax,0x302
    805d:	74 2b                	je     808a <tls_decode+0x76>
    805f:	e9 b4 00 00 00       	jmp    8118 <tls_decode+0x104>
    8064:	0f b6 05 ce f8 0f 00 	movzx  eax,BYTE PTR [rip+0xff8ce]        # 107939 <packet_print>
    806b:	84 c0                	test   al,al
    806d:	74 11                	je     8080 <tls_decode+0x6c>
    806f:	48 8d 3d 8a 55 00 00 	lea    rdi,[rip+0x558a]        # d600 <_IO_stdin_used+0x1600>
    8076:	b8 00 00 00 00       	mov    eax,0x0
    807b:	e8 40 a5 ff ff       	call   25c0 <printf@plt>
    8080:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8084:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8088:	eb 4b                	jmp    80d5 <tls_decode+0xc1>
    808a:	0f b6 05 a8 f8 0f 00 	movzx  eax,BYTE PTR [rip+0xff8a8]        # 107939 <packet_print>
    8091:	84 c0                	test   al,al
    8093:	74 11                	je     80a6 <tls_decode+0x92>
    8095:	48 8d 3d 73 55 00 00 	lea    rdi,[rip+0x5573]        # d60f <_IO_stdin_used+0x160f>
    809c:	b8 00 00 00 00       	mov    eax,0x0
    80a1:	e8 1a a5 ff ff       	call   25c0 <printf@plt>
    80a6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80aa:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80ae:	eb 25                	jmp    80d5 <tls_decode+0xc1>
    80b0:	0f b6 05 82 f8 0f 00 	movzx  eax,BYTE PTR [rip+0xff882]        # 107939 <packet_print>
    80b7:	84 c0                	test   al,al
    80b9:	74 11                	je     80cc <tls_decode+0xb8>
    80bb:	48 8d 3d 5c 55 00 00 	lea    rdi,[rip+0x555c]        # d61e <_IO_stdin_used+0x161e>
    80c2:	b8 00 00 00 00       	mov    eax,0x0
    80c7:	e8 f4 a4 ff ff       	call   25c0 <printf@plt>
    80cc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80d0:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80d4:	90                   	nop
    80d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    80d9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    80dc:	0f b6 c0             	movzx  eax,al
    80df:	83 f8 17             	cmp    eax,0x17
    80e2:	74 37                	je     811b <tls_decode+0x107>
    80e4:	83 f8 17             	cmp    eax,0x17
    80e7:	7f 35                	jg     811e <tls_decode+0x10a>
    80e9:	83 f8 16             	cmp    eax,0x16
    80ec:	74 11                	je     80ff <tls_decode+0xeb>
    80ee:	83 f8 16             	cmp    eax,0x16
    80f1:	7f 2b                	jg     811e <tls_decode+0x10a>
    80f3:	83 f8 14             	cmp    eax,0x14
    80f6:	74 29                	je     8121 <tls_decode+0x10d>
    80f8:	83 f8 15             	cmp    eax,0x15
    80fb:	74 27                	je     8124 <tls_decode+0x110>
    80fd:	eb 1f                	jmp    811e <tls_decode+0x10a>
    80ff:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    8103:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8107:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    810b:	48 89 ce             	mov    rsi,rcx
    810e:	48 89 c7             	mov    rdi,rax
    8111:	e8 11 00 00 00       	call   8127 <tlshandshake>
    8116:	eb 0d                	jmp    8125 <tls_decode+0x111>
    8118:	90                   	nop
    8119:	eb 0a                	jmp    8125 <tls_decode+0x111>
    811b:	90                   	nop
    811c:	eb 07                	jmp    8125 <tls_decode+0x111>
    811e:	90                   	nop
    811f:	eb 04                	jmp    8125 <tls_decode+0x111>
    8121:	90                   	nop
    8122:	eb 01                	jmp    8125 <tls_decode+0x111>
    8124:	90                   	nop
    8125:	c9                   	leave  
    8126:	c3                   	ret    

0000000000008127 <tlshandshake>:
    8127:	f3 0f 1e fa          	endbr64 
    812b:	55                   	push   rbp
    812c:	48 89 e5             	mov    rbp,rsp
    812f:	48 83 ec 30          	sub    rsp,0x30
    8133:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8137:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    813b:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    813f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8143:	48 83 c0 08          	add    rax,0x8
    8147:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    814b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    814f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8152:	0f b6 c0             	movzx  eax,al
    8155:	83 f8 0b             	cmp    eax,0xb
    8158:	0f 87 bf 00 00 00    	ja     821d <tlshandshake+0xf6>
    815e:	89 c0                	mov    eax,eax
    8160:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    8167:	00 
    8168:	48 8d 05 05 55 00 00 	lea    rax,[rip+0x5505]        # d674 <_IO_stdin_used+0x1674>
    816f:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    8172:	48 98                	cdqe   
    8174:	48 8d 15 f9 54 00 00 	lea    rdx,[rip+0x54f9]        # d674 <_IO_stdin_used+0x1674>
    817b:	48 01 d0             	add    rax,rdx
    817e:	3e ff e0             	notrack jmp rax
    8181:	48 8d 3d a5 54 00 00 	lea    rdi,[rip+0x54a5]        # d62d <_IO_stdin_used+0x162d>
    8188:	e8 73 a3 ff ff       	call   2500 <puts@plt>
    818d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8191:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8195:	e9 83 00 00 00       	jmp    821d <tlshandshake+0xf6>
    819a:	0f b6 05 98 f7 0f 00 	movzx  eax,BYTE PTR [rip+0xff798]        # 107939 <packet_print>
    81a1:	84 c0                	test   al,al
    81a3:	74 0c                	je     81b1 <tlshandshake+0x8a>
    81a5:	48 8d 3d 8e 54 00 00 	lea    rdi,[rip+0x548e]        # d63a <_IO_stdin_used+0x163a>
    81ac:	e8 4f a3 ff ff       	call   2500 <puts@plt>
    81b1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81b5:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81b9:	eb 62                	jmp    821d <tlshandshake+0xf6>
    81bb:	0f b6 05 77 f7 0f 00 	movzx  eax,BYTE PTR [rip+0xff777]        # 107939 <packet_print>
    81c2:	84 c0                	test   al,al
    81c4:	74 0c                	je     81d2 <tlshandshake+0xab>
    81c6:	48 8d 3d 7a 54 00 00 	lea    rdi,[rip+0x547a]        # d647 <_IO_stdin_used+0x1647>
    81cd:	e8 2e a3 ff ff       	call   2500 <puts@plt>
    81d2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81d6:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81da:	eb 41                	jmp    821d <tlshandshake+0xf6>
    81dc:	0f b6 05 56 f7 0f 00 	movzx  eax,BYTE PTR [rip+0xff756]        # 107939 <packet_print>
    81e3:	84 c0                	test   al,al
    81e5:	74 0c                	je     81f3 <tlshandshake+0xcc>
    81e7:	48 8d 3d 6c 54 00 00 	lea    rdi,[rip+0x546c]        # d65a <_IO_stdin_used+0x165a>
    81ee:	e8 0d a3 ff ff       	call   2500 <puts@plt>
    81f3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81f7:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81fb:	eb 20                	jmp    821d <tlshandshake+0xf6>
    81fd:	0f b6 05 35 f7 0f 00 	movzx  eax,BYTE PTR [rip+0xff735]        # 107939 <packet_print>
    8204:	84 c0                	test   al,al
    8206:	74 0c                	je     8214 <tlshandshake+0xed>
    8208:	48 8d 3d 57 54 00 00 	lea    rdi,[rip+0x5457]        # d666 <_IO_stdin_used+0x1666>
    820f:	e8 ec a2 ff ff       	call   2500 <puts@plt>
    8214:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8218:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    821c:	90                   	nop
    821d:	90                   	nop
    821e:	c9                   	leave  
    821f:	c3                   	ret    

0000000000008220 <process_opcode>:
    8220:	f3 0f 1e fa          	endbr64 
    8224:	55                   	push   rbp
    8225:	48 89 e5             	mov    rbp,rsp
    8228:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    822f:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    8236:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    823d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8244:	00 00 
    8246:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    824a:	31 c0                	xor    eax,eax
    824c:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8253:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8256:	0f b6 c0             	movzx  eax,al
    8259:	3d db 00 00 00       	cmp    eax,0xdb
    825e:	75 4b                	jne    82ab <process_opcode+0x8b>
    8260:	c6 85 e4 fb ff ff db 	mov    BYTE PTR [rbp-0x41c],0xdb
    8267:	8b 85 e4 fb ff ff    	mov    eax,DWORD PTR [rbp-0x41c]
    826d:	0f b6 c0             	movzx  eax,al
    8270:	0d 00 00 00 01       	or     eax,0x1000000
    8275:	89 85 e4 fb ff ff    	mov    DWORD PTR [rbp-0x41c],eax
    827b:	48 8d 85 e4 fb ff ff 	lea    rax,[rbp-0x41c]
    8282:	48 89 85 e8 fb ff ff 	mov    QWORD PTR [rbp-0x418],rax
    8289:	48 8b 85 d0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x430]
    8290:	8b 00                	mov    eax,DWORD PTR [rax]
    8292:	48 8b b5 e8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x418]
    8299:	b9 00 00 00 00       	mov    ecx,0x0
    829e:	ba 04 00 00 00       	mov    edx,0x4
    82a3:	89 c7                	mov    edi,eax
    82a5:	e8 f6 a2 ff ff       	call   25a0 <send@plt>
    82aa:	90                   	nop
    82ab:	90                   	nop
    82ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    82b0:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    82b7:	00 00 
    82b9:	74 05                	je     82c0 <process_opcode+0xa0>
    82bb:	e8 c0 a2 ff ff       	call   2580 <__stack_chk_fail@plt>
    82c0:	c9                   	leave  
    82c1:	c3                   	ret    

00000000000082c2 <callback>:
    82c2:	f3 0f 1e fa          	endbr64 
    82c6:	55                   	push   rbp
    82c7:	48 89 e5             	mov    rbp,rsp
    82ca:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    82ce:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    82d1:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    82d5:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    82d9:	b8 00 00 00 00       	mov    eax,0x0
    82de:	5d                   	pop    rbp
    82df:	c3                   	ret    

00000000000082e0 <update_db>:
    82e0:	f3 0f 1e fa          	endbr64 
    82e4:	55                   	push   rbp
    82e5:	48 89 e5             	mov    rbp,rsp
    82e8:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    82ef:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    82f6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    82fd:	00 00 
    82ff:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8303:	31 c0                	xor    eax,eax
    8305:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    830c:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    8313:	48 8d 3d 8e 53 00 00 	lea    rdi,[rip+0x538e]        # d6a8 <_IO_stdin_used+0x16a8>
    831a:	e8 e1 a1 ff ff       	call   2500 <puts@plt>
    831f:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    8326:	00 00 00 00 
    832a:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    8331:	48 89 c6             	mov    rsi,rax
    8334:	48 8d 3d c5 f5 0f 00 	lea    rdi,[rip+0xff5c5]        # 107900 <sqlite_db_path>
    833b:	e8 00 a2 ff ff       	call   2540 <sqlite3_open@plt>
    8340:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    8346:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    834d:	74 28                	je     8377 <update_db+0x97>
    834f:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    8356:	48 89 c7             	mov    rdi,rax
    8359:	e8 12 a3 ff ff       	call   2670 <sqlite3_errmsg@plt>
    835e:	48 89 c6             	mov    rsi,rax
    8361:	48 8d 3d 4c 53 00 00 	lea    rdi,[rip+0x534c]        # d6b4 <_IO_stdin_used+0x16b4>
    8368:	b8 00 00 00 00       	mov    eax,0x0
    836d:	e8 4e a2 ff ff       	call   25c0 <printf@plt>
    8372:	e9 a2 00 00 00       	jmp    8419 <update_db+0x139>
    8377:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    837e:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    8381:	85 c0                	test   eax,eax
    8383:	75 2e                	jne    83b3 <update_db+0xd3>
    8385:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    838c:	48 8d 48 10          	lea    rcx,[rax+0x10]
    8390:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    8397:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    839e:	48 8d 35 23 53 00 00 	lea    rsi,[rip+0x5323]        # d6c8 <_IO_stdin_used+0x16c8>
    83a5:	48 89 c7             	mov    rdi,rax
    83a8:	b8 00 00 00 00       	mov    eax,0x0
    83ad:	e8 7e a4 ff ff       	call   2830 <sprintf@plt>
    83b2:	90                   	nop
    83b3:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    83ba:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    83c1:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    83c8:	49 89 d0             	mov    r8,rdx
    83cb:	b9 00 00 00 00       	mov    ecx,0x0
    83d0:	ba 00 00 00 00       	mov    edx,0x0
    83d5:	48 89 c7             	mov    rdi,rax
    83d8:	e8 53 a1 ff ff       	call   2530 <sqlite3_exec@plt>
    83dd:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    83e3:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    83ea:	74 2c                	je     8418 <update_db+0x138>
    83ec:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    83f3:	48 89 c6             	mov    rsi,rax
    83f6:	48 8d 3d 10 53 00 00 	lea    rdi,[rip+0x5310]        # d70d <_IO_stdin_used+0x170d>
    83fd:	b8 00 00 00 00       	mov    eax,0x0
    8402:	e8 b9 a1 ff ff       	call   25c0 <printf@plt>
    8407:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    840e:	48 89 c7             	mov    rdi,rax
    8411:	e8 0a a4 ff ff       	call   2820 <sqlite3_free@plt>
    8416:	eb 01                	jmp    8419 <update_db+0x139>
    8418:	90                   	nop
    8419:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    8420:	48 89 c7             	mov    rdi,rax
    8423:	e8 98 a2 ff ff       	call   26c0 <sqlite3_close@plt>
    8428:	b8 01 00 00 00       	mov    eax,0x1
    842d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8431:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    8438:	00 00 
    843a:	74 05                	je     8441 <update_db+0x161>
    843c:	e8 3f a1 ff ff       	call   2580 <__stack_chk_fail@plt>
    8441:	c9                   	leave  
    8442:	c3                   	ret    

0000000000008443 <update_spi_db>:
    8443:	f3 0f 1e fa          	endbr64 
    8447:	55                   	push   rbp
    8448:	48 89 e5             	mov    rbp,rsp
    844b:	41 57                	push   r15
    844d:	41 56                	push   r14
    844f:	41 55                	push   r13
    8451:	41 54                	push   r12
    8453:	53                   	push   rbx
    8454:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    845b:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    8462:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8469:	00 00 
    846b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    846f:	31 c0                	xor    eax,eax
    8471:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    8478:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    847f:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    8486:	48 89 c6             	mov    rsi,rax
    8489:	48 8d 3d 9b 52 00 00 	lea    rdi,[rip+0x529b]        # d72b <_IO_stdin_used+0x172b>
    8490:	e8 ab a0 ff ff       	call   2540 <sqlite3_open@plt>
    8495:	85 c0                	test   eax,eax
    8497:	74 3c                	je     84d5 <update_spi_db+0x92>
    8499:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    84a0:	48 89 c7             	mov    rdi,rax
    84a3:	e8 c8 a1 ff ff       	call   2670 <sqlite3_errmsg@plt>
    84a8:	48 89 c6             	mov    rsi,rax
    84ab:	48 8d 3d 91 52 00 00 	lea    rdi,[rip+0x5291]        # d743 <_IO_stdin_used+0x1743>
    84b2:	b8 00 00 00 00       	mov    eax,0x0
    84b7:	e8 04 a1 ff ff       	call   25c0 <printf@plt>
    84bc:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    84c3:	48 89 c7             	mov    rdi,rax
    84c6:	e8 f5 a1 ff ff       	call   26c0 <sqlite3_close@plt>
    84cb:	b8 00 00 00 00       	mov    eax,0x0
    84d0:	e9 5c 01 00 00       	jmp    8631 <update_spi_db+0x1ee>
    84d5:	48 8d 05 7c 52 00 00 	lea    rax,[rip+0x527c]        # d758 <_IO_stdin_used+0x1758>
    84dc:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    84e3:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84ea:	8b 90 80 00 00 00    	mov    edx,DWORD PTR [rax+0x80]
    84f0:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84f7:	44 8b 78 7c          	mov    r15d,DWORD PTR [rax+0x7c]
    84fb:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8502:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    8509:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8510:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    8517:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    851e:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    8525:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    852c:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    8532:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8539:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    853d:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    8540:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8547:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    854b:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8552:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    8556:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    8559:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8560:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    8564:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    856b:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    856e:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    8574:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    857b:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    857e:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    8584:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    858b:	48 8d 48 29          	lea    rcx,[rax+0x29]
    858f:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    8596:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    859d:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    85a4:	52                   	push   rdx
    85a5:	41 57                	push   r15
    85a7:	41 56                	push   r14
    85a9:	41 55                	push   r13
    85ab:	41 54                	push   r12
    85ad:	53                   	push   rbx
    85ae:	41 53                	push   r11
    85b0:	41 52                	push   r10
    85b2:	41 51                	push   r9
    85b4:	41 50                	push   r8
    85b6:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    85bd:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    85c4:	48 89 fa             	mov    rdx,rdi
    85c7:	48 89 c7             	mov    rdi,rax
    85ca:	b8 00 00 00 00       	mov    eax,0x0
    85cf:	e8 5c a2 ff ff       	call   2830 <sprintf@plt>
    85d4:	48 83 c4 50          	add    rsp,0x50
    85d8:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    85df:	00 00 00 00 
    85e3:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    85ea:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    85f1:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    85f8:	49 89 d0             	mov    r8,rdx
    85fb:	b9 00 00 00 00       	mov    ecx,0x0
    8600:	ba 00 00 00 00       	mov    edx,0x0
    8605:	48 89 c7             	mov    rdi,rax
    8608:	e8 23 9f ff ff       	call   2530 <sqlite3_exec@plt>
    860d:	85 c0                	test   eax,eax
    860f:	74 1b                	je     862c <update_spi_db+0x1e9>
    8611:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    8618:	48 89 c6             	mov    rsi,rax
    861b:	48 8d 3d 23 52 00 00 	lea    rdi,[rip+0x5223]        # d845 <_IO_stdin_used+0x1845>
    8622:	b8 00 00 00 00       	mov    eax,0x0
    8627:	e8 94 9f ff ff       	call   25c0 <printf@plt>
    862c:	b8 00 00 00 00       	mov    eax,0x0
    8631:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    8635:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    863c:	00 00 
    863e:	74 05                	je     8645 <update_spi_db+0x202>
    8640:	e8 3b 9f ff ff       	call   2580 <__stack_chk_fail@plt>
    8645:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    8649:	5b                   	pop    rbx
    864a:	41 5c                	pop    r12
    864c:	41 5d                	pop    r13
    864e:	41 5e                	pop    r14
    8650:	41 5f                	pop    r15
    8652:	5d                   	pop    rbp
    8653:	c3                   	ret    

0000000000008654 <http_disect>:
    8654:	f3 0f 1e fa          	endbr64 
    8658:	55                   	push   rbp
    8659:	48 89 e5             	mov    rbp,rsp
    865c:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    8663:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    866a:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    8671:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8678:	00 00 
    867a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    867e:	31 c0                	xor    eax,eax
    8680:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8687:	be 0d 00 00 00       	mov    esi,0xd
    868c:	48 89 c7             	mov    rdi,rax
    868f:	e8 67 ae ff ff       	call   34fb <strloc>
    8694:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    869a:	48 8d 3d c2 51 00 00 	lea    rdi,[rip+0x51c2]        # d863 <_IO_stdin_used+0x1863>
    86a1:	e8 5a 9e ff ff       	call   2500 <puts@plt>
    86a6:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    86ad:	48 89 c7             	mov    rdi,rax
    86b0:	e8 ed ae ff ff       	call   35a2 <test_string_arr_print>
    86b5:	83 f0 01             	xor    eax,0x1
    86b8:	84 c0                	test   al,al
    86ba:	75 33                	jne    86ef <http_disect+0x9b>
    86bc:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    86c2:	48 63 d0             	movsxd rdx,eax
    86c5:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    86cc:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    86d3:	48 89 ce             	mov    rsi,rcx
    86d6:	48 89 c7             	mov    rdi,rax
    86d9:	e8 d2 9d ff ff       	call   24b0 <strncpy@plt>
    86de:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    86e5:	48 89 c7             	mov    rdi,rax
    86e8:	e8 13 9e ff ff       	call   2500 <puts@plt>
    86ed:	eb 01                	jmp    86f0 <http_disect+0x9c>
    86ef:	90                   	nop
    86f0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86f4:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    86fb:	00 00 
    86fd:	74 05                	je     8704 <http_disect+0xb0>
    86ff:	e8 7c 9e ff ff       	call   2580 <__stack_chk_fail@plt>
    8704:	c9                   	leave  
    8705:	c3                   	ret    

0000000000008706 <dns_disect>:
    8706:	f3 0f 1e fa          	endbr64 
    870a:	55                   	push   rbp
    870b:	48 89 e5             	mov    rbp,rsp
    870e:	48 83 ec 30          	sub    rsp,0x30
    8712:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8716:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    871a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    871e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    8722:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8726:	48 83 c0 0c          	add    rax,0xc
    872a:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    872e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8732:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    8736:	66 85 c0             	test   ax,ax
    8739:	75 6d                	jne    87a8 <dns_disect+0xa2>
    873b:	bf 00 04 00 00       	mov    edi,0x400
    8740:	e8 bb 9f ff ff       	call   2700 <malloc@plt>
    8745:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8749:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    874d:	ba 08 00 00 00       	mov    edx,0x8
    8752:	be 00 00 00 00       	mov    esi,0x0
    8757:	48 89 c7             	mov    rdi,rax
    875a:	e8 a1 9e ff ff       	call   2600 <memset@plt>
    875f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8763:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8767:	48 89 d6             	mov    rsi,rdx
    876a:	48 89 c7             	mov    rdi,rax
    876d:	e8 39 00 00 00       	call   87ab <get_dns_name>
    8772:	0f b6 05 c0 f1 0f 00 	movzx  eax,BYTE PTR [rip+0xff1c0]        # 107939 <packet_print>
    8779:	84 c0                	test   al,al
    877b:	74 18                	je     8795 <dns_disect+0x8f>
    877d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8781:	48 89 c6             	mov    rsi,rax
    8784:	48 8d 3d ea 50 00 00 	lea    rdi,[rip+0x50ea]        # d875 <_IO_stdin_used+0x1875>
    878b:	b8 00 00 00 00       	mov    eax,0x0
    8790:	e8 2b 9e ff ff       	call   25c0 <printf@plt>
    8795:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    879a:	74 0c                	je     87a8 <dns_disect+0xa2>
    879c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    87a0:	48 89 c7             	mov    rdi,rax
    87a3:	e8 c8 9c ff ff       	call   2470 <free@plt>
    87a8:	90                   	nop
    87a9:	c9                   	leave  
    87aa:	c3                   	ret    

00000000000087ab <get_dns_name>:
    87ab:	f3 0f 1e fa          	endbr64 
    87af:	55                   	push   rbp
    87b0:	48 89 e5             	mov    rbp,rsp
    87b3:	53                   	push   rbx
    87b4:	48 83 ec 28          	sub    rsp,0x28
    87b8:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    87bc:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    87c0:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    87c7:	eb 6a                	jmp    8833 <get_dns_name+0x88>
    87c9:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    87cc:	48 63 d0             	movsxd rdx,eax
    87cf:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    87d3:	48 01 d0             	add    rax,rdx
    87d6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    87d9:	3c 20                	cmp    al,0x20
    87db:	7e 24                	jle    8801 <get_dns_name+0x56>
    87dd:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    87e0:	48 63 d0             	movsxd rdx,eax
    87e3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    87e7:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    87eb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    87ef:	ba 01 00 00 00       	mov    edx,0x1
    87f4:	48 89 ce             	mov    rsi,rcx
    87f7:	48 89 c7             	mov    rdi,rax
    87fa:	e8 11 9e ff ff       	call   2610 <strncat@plt>
    87ff:	eb 2e                	jmp    882f <get_dns_name+0x84>
    8801:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8805:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    880c:	48 89 c2             	mov    rdx,rax
    880f:	b8 00 00 00 00       	mov    eax,0x0
    8814:	48 89 d7             	mov    rdi,rdx
    8817:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    8819:	48 89 c8             	mov    rax,rcx
    881c:	48 f7 d0             	not    rax
    881f:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    8823:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8827:	48 01 d0             	add    rax,rdx
    882a:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    882f:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    8833:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8836:	48 63 d8             	movsxd rbx,eax
    8839:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    883d:	48 89 c7             	mov    rdi,rax
    8840:	e8 1b 9d ff ff       	call   2560 <strlen@plt>
    8845:	48 39 c3             	cmp    rbx,rax
    8848:	0f 82 7b ff ff ff    	jb     87c9 <get_dns_name+0x1e>
    884e:	90                   	nop
    884f:	90                   	nop
    8850:	48 83 c4 28          	add    rsp,0x28
    8854:	5b                   	pop    rbx
    8855:	5d                   	pop    rbp
    8856:	c3                   	ret    

0000000000008857 <ftp_disect>:
    8857:	f3 0f 1e fa          	endbr64 
    885b:	55                   	push   rbp
    885c:	48 89 e5             	mov    rbp,rsp
    885f:	48 83 ec 20          	sub    rsp,0x20
    8863:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8867:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    886b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    886f:	48 8d 35 0a 50 00 00 	lea    rsi,[rip+0x500a]        # d880 <_IO_stdin_used+0x1880>
    8876:	48 89 c7             	mov    rdi,rax
    8879:	e8 02 a0 ff ff       	call   2880 <strstr@plt>
    887e:	48 85 c0             	test   rax,rax
    8881:	75 1c                	jne    889f <ftp_disect+0x48>
    8883:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8887:	48 8d 35 02 50 00 00 	lea    rsi,[rip+0x5002]        # d890 <_IO_stdin_used+0x1890>
    888e:	48 89 c7             	mov    rdi,rax
    8891:	e8 ea 9f ff ff       	call   2880 <strstr@plt>
    8896:	48 85 c0             	test   rax,rax
    8899:	0f 84 8a 00 00 00    	je     8929 <ftp_disect+0xd2>
    889f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    88a3:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    88a7:	48 89 c7             	mov    rdi,rax
    88aa:	e8 2d f1 ff ff       	call   79dc <member_exists>
    88af:	48 63 d0             	movsxd rdx,eax
    88b2:	48 89 d0             	mov    rax,rdx
    88b5:	48 c1 e0 02          	shl    rax,0x2
    88b9:	48 01 d0             	add    rax,rdx
    88bc:	48 c1 e0 03          	shl    rax,0x3
    88c0:	48 01 d0             	add    rax,rdx
    88c3:	48 c1 e0 04          	shl    rax,0x4
    88c7:	48 8d 15 d2 a7 0e 00 	lea    rdx,[rip+0xea7d2]        # f30a0 <watchlist>
    88ce:	48 01 d0             	add    rax,rdx
    88d1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    88d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88d9:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    88df:	8d 50 01             	lea    edx,[rax+0x1]
    88e2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88e6:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    88ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88f0:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    88f6:	83 f8 04             	cmp    eax,0x4
    88f9:	7e 2e                	jle    8929 <ftp_disect+0xd2>
    88fb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88ff:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    8905:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8909:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    890d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8911:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8915:	48 89 c6             	mov    rsi,rax
    8918:	48 8d 3d 81 4f 00 00 	lea    rdi,[rip+0x4f81]        # d8a0 <_IO_stdin_used+0x18a0>
    891f:	b8 00 00 00 00       	mov    eax,0x0
    8924:	e8 97 9c ff ff       	call   25c0 <printf@plt>
    8929:	90                   	nop
    892a:	c9                   	leave  
    892b:	c3                   	ret    

000000000000892c <livedebug>:
    892c:	f3 0f 1e fa          	endbr64 
    8930:	55                   	push   rbp
    8931:	48 89 e5             	mov    rbp,rsp
    8934:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    893b:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    8942:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    8949:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    8950:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    8957:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    895e:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    8965:	84 c0                	test   al,al
    8967:	74 20                	je     8989 <livedebug+0x5d>
    8969:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    896d:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    8971:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    8975:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    8979:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    897d:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    8981:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    8985:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    8989:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8990:	00 00 
    8992:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    8999:	31 c0                	xor    eax,eax
    899b:	0f b6 05 00 14 10 00 	movzx  eax,BYTE PTR [rip+0x101400]        # 109da2 <debug_mode>
    89a2:	84 c0                	test   al,al
    89a4:	74 4b                	je     89f1 <livedebug+0xc5>
    89a6:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    89ad:	00 00 00 
    89b0:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    89b7:	00 00 00 
    89ba:	48 8d 45 10          	lea    rax,[rbp+0x10]
    89be:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    89c5:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    89cc:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    89d3:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    89da:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    89e1:	48 89 d6             	mov    rsi,rdx
    89e4:	48 89 c7             	mov    rdi,rax
    89e7:	b8 00 00 00 00       	mov    eax,0x0
    89ec:	e8 cf 9b ff ff       	call   25c0 <printf@plt>
    89f1:	90                   	nop
    89f2:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    89f9:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    8a00:	00 00 
    8a02:	74 05                	je     8a09 <livedebug+0xdd>
    8a04:	e8 77 9b ff ff       	call   2580 <__stack_chk_fail@plt>
    8a09:	c9                   	leave  
    8a0a:	c3                   	ret    

0000000000008a0b <forward_packet>:
    8a0b:	f3 0f 1e fa          	endbr64 
    8a0f:	55                   	push   rbp
    8a10:	48 89 e5             	mov    rbp,rsp
    8a13:	48 83 ec 20          	sub    rsp,0x20
    8a17:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8a1b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a1f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8a23:	48 8d 35 a6 ee 0f 00 	lea    rsi,[rip+0xfeea6]        # 1078d0 <local_ip>
    8a2a:	48 89 c7             	mov    rdi,rax
    8a2d:	e8 4e 9c ff ff       	call   2680 <strcmp@plt>
    8a32:	85 c0                	test   eax,eax
    8a34:	74 4f                	je     8a85 <forward_packet+0x7a>
    8a36:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a3a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8a3e:	48 8d 35 8b ee 0f 00 	lea    rsi,[rip+0xfee8b]        # 1078d0 <local_ip>
    8a45:	48 89 c7             	mov    rdi,rax
    8a48:	e8 33 9c ff ff       	call   2680 <strcmp@plt>
    8a4d:	85 c0                	test   eax,eax
    8a4f:	74 34                	je     8a85 <forward_packet+0x7a>
    8a51:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a55:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8a58:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    8a5c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a60:	48 89 d6             	mov    rsi,rdx
    8a63:	48 89 c7             	mov    rdi,rax
    8a66:	e8 65 9a ff ff       	call   24d0 <strcpy@plt>
    8a6b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a6f:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    8a72:	83 e8 0e             	sub    eax,0xe
    8a75:	89 c2                	mov    edx,eax
    8a77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a7b:	89 d6                	mov    esi,edx
    8a7d:	48 89 c7             	mov    rdi,rax
    8a80:	e8 81 c9 ff ff       	call   5406 <ascii_hexdump>
    8a85:	90                   	nop
    8a86:	c9                   	leave  
    8a87:	c3                   	ret    

0000000000008a88 <conversation_exists>:
    8a88:	f3 0f 1e fa          	endbr64 
    8a8c:	55                   	push   rbp
    8a8d:	48 89 e5             	mov    rbp,rsp
    8a90:	48 83 ec 20          	sub    rsp,0x20
    8a94:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8a98:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    8a9f:	e9 ff 00 00 00       	jmp    8ba3 <conversation_exists+0x11b>
    8aa4:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8aa7:	48 98                	cdqe   
    8aa9:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8ab0:	48 8d 15 49 15 10 00 	lea    rdx,[rip+0x101549]        # 10a000 <spi_table>
    8ab7:	48 01 d0             	add    rax,rdx
    8aba:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8abe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ac2:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    8ac9:	84 c0                	test   al,al
    8acb:	0f 84 ce 00 00 00    	je     8b9f <conversation_exists+0x117>
    8ad1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ad5:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8ad8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8adc:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8adf:	39 c2                	cmp    edx,eax
    8ae1:	75 58                	jne    8b3b <conversation_exists+0xb3>
    8ae3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ae7:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8aea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8aee:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8af1:	39 c2                	cmp    edx,eax
    8af3:	75 46                	jne    8b3b <conversation_exists+0xb3>
    8af5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8af9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8afd:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8b01:	48 89 d6             	mov    rsi,rdx
    8b04:	48 89 c7             	mov    rdi,rax
    8b07:	e8 74 9b ff ff       	call   2680 <strcmp@plt>
    8b0c:	85 c0                	test   eax,eax
    8b0e:	0f 85 8a 00 00 00    	jne    8b9e <conversation_exists+0x116>
    8b14:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b18:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8b1c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b20:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8b24:	48 89 d6             	mov    rsi,rdx
    8b27:	48 89 c7             	mov    rdi,rax
    8b2a:	e8 51 9b ff ff       	call   2680 <strcmp@plt>
    8b2f:	85 c0                	test   eax,eax
    8b31:	75 6b                	jne    8b9e <conversation_exists+0x116>
    8b33:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b36:	e9 81 00 00 00       	jmp    8bbc <conversation_exists+0x134>
    8b3b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b3f:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8b42:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b46:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8b49:	39 c2                	cmp    edx,eax
    8b4b:	75 52                	jne    8b9f <conversation_exists+0x117>
    8b4d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b51:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8b54:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b58:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8b5b:	39 c2                	cmp    edx,eax
    8b5d:	75 40                	jne    8b9f <conversation_exists+0x117>
    8b5f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8b63:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b67:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8b6b:	48 89 d6             	mov    rsi,rdx
    8b6e:	48 89 c7             	mov    rdi,rax
    8b71:	e8 0a 9b ff ff       	call   2680 <strcmp@plt>
    8b76:	85 c0                	test   eax,eax
    8b78:	75 25                	jne    8b9f <conversation_exists+0x117>
    8b7a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b7e:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8b82:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b86:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8b8a:	48 89 d6             	mov    rsi,rdx
    8b8d:	48 89 c7             	mov    rdi,rax
    8b90:	e8 eb 9a ff ff       	call   2680 <strcmp@plt>
    8b95:	85 c0                	test   eax,eax
    8b97:	75 06                	jne    8b9f <conversation_exists+0x117>
    8b99:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b9c:	eb 1e                	jmp    8bbc <conversation_exists+0x134>
    8b9e:	90                   	nop
    8b9f:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8ba3:	8b 05 97 84 00 00    	mov    eax,DWORD PTR [rip+0x8497]        # 11040 <total_conversations>
    8ba9:	8d 50 01             	lea    edx,[rax+0x1]
    8bac:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8baf:	39 c2                	cmp    edx,eax
    8bb1:	0f 87 ed fe ff ff    	ja     8aa4 <conversation_exists+0x1c>
    8bb7:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8bbc:	c9                   	leave  
    8bbd:	c3                   	ret    

0000000000008bbe <get_new_spi_location>:
    8bbe:	f3 0f 1e fa          	endbr64 
    8bc2:	55                   	push   rbp
    8bc3:	48 89 e5             	mov    rbp,rsp
    8bc6:	8b 05 74 84 00 00    	mov    eax,DWORD PTR [rip+0x8474]        # 11040 <total_conversations>
    8bcc:	83 f8 ff             	cmp    eax,0xffffffff
    8bcf:	75 17                	jne    8be8 <get_new_spi_location+0x2a>
    8bd1:	8b 05 69 84 00 00    	mov    eax,DWORD PTR [rip+0x8469]        # 11040 <total_conversations>
    8bd7:	83 c0 01             	add    eax,0x1
    8bda:	89 05 60 84 00 00    	mov    DWORD PTR [rip+0x8460],eax        # 11040 <total_conversations>
    8be0:	8b 05 5a 84 00 00    	mov    eax,DWORD PTR [rip+0x845a]        # 11040 <total_conversations>
    8be6:	eb 52                	jmp    8c3a <get_new_spi_location+0x7c>
    8be8:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    8bef:	eb 27                	jmp    8c18 <get_new_spi_location+0x5a>
    8bf1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8bf4:	48 98                	cdqe   
    8bf6:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8bfd:	48 8d 15 ac 14 10 00 	lea    rdx,[rip+0x1014ac]        # 10a0b0 <spi_table+0xb0>
    8c04:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    8c08:	83 f0 01             	xor    eax,0x1
    8c0b:	84 c0                	test   al,al
    8c0d:	74 05                	je     8c14 <get_new_spi_location+0x56>
    8c0f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8c12:	eb 26                	jmp    8c3a <get_new_spi_location+0x7c>
    8c14:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    8c18:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    8c1b:	8b 05 1f 84 00 00    	mov    eax,DWORD PTR [rip+0x841f]        # 11040 <total_conversations>
    8c21:	39 c2                	cmp    edx,eax
    8c23:	72 cc                	jb     8bf1 <get_new_spi_location+0x33>
    8c25:	8b 05 15 84 00 00    	mov    eax,DWORD PTR [rip+0x8415]        # 11040 <total_conversations>
    8c2b:	83 c0 01             	add    eax,0x1
    8c2e:	89 05 0c 84 00 00    	mov    DWORD PTR [rip+0x840c],eax        # 11040 <total_conversations>
    8c34:	8b 05 06 84 00 00    	mov    eax,DWORD PTR [rip+0x8406]        # 11040 <total_conversations>
    8c3a:	5d                   	pop    rbp
    8c3b:	c3                   	ret    

0000000000008c3c <add_new_conversation>:
    8c3c:	f3 0f 1e fa          	endbr64 
    8c40:	55                   	push   rbp
    8c41:	48 89 e5             	mov    rbp,rsp
    8c44:	48 83 ec 20          	sub    rsp,0x20
    8c48:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8c4c:	0f b6 05 de ec 0f 00 	movzx  eax,BYTE PTR [rip+0xfecde]        # 107931 <use_spi>
    8c53:	84 c0                	test   al,al
    8c55:	0f 84 17 02 00 00    	je     8e72 <add_new_conversation+0x236>
    8c5b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c5f:	48 89 c7             	mov    rdi,rax
    8c62:	e8 21 fe ff ff       	call   8a88 <conversation_exists>
    8c67:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8c6a:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8c6e:	0f 84 88 00 00 00    	je     8cfc <add_new_conversation+0xc0>
    8c74:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8c77:	48 98                	cdqe   
    8c79:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8c80:	48 8d 15 79 13 10 00 	lea    rdx,[rip+0x101379]        # 10a000 <spi_table>
    8c87:	48 01 d0             	add    rax,rdx
    8c8a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8c8e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c92:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    8c98:	8d 50 01             	lea    edx,[rax+0x1]
    8c9b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c9f:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    8ca5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ca9:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8caf:	8d 50 01             	lea    edx,[rax+0x1]
    8cb2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cb6:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8cbc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cc0:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8cc3:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8cc7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ccb:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8cce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cd2:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8cd6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8cd9:	41 89 f9             	mov    r9d,edi
    8cdc:	49 89 c8             	mov    r8,rcx
    8cdf:	89 d1                	mov    ecx,edx
    8ce1:	48 89 f2             	mov    rdx,rsi
    8ce4:	89 c6                	mov    esi,eax
    8ce6:	48 8d 3d fb 4b 00 00 	lea    rdi,[rip+0x4bfb]        # d8e8 <_IO_stdin_used+0x18e8>
    8ced:	b8 00 00 00 00       	mov    eax,0x0
    8cf2:	e8 c9 98 ff ff       	call   25c0 <printf@plt>
    8cf7:	e9 76 01 00 00       	jmp    8e72 <add_new_conversation+0x236>
    8cfc:	b8 00 00 00 00       	mov    eax,0x0
    8d01:	e8 b8 fe ff ff       	call   8bbe <get_new_spi_location>
    8d06:	48 98                	cdqe   
    8d08:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8d0f:	48 8d 15 ea 12 10 00 	lea    rdx,[rip+0x1012ea]        # 10a000 <spi_table>
    8d16:	48 01 d0             	add    rax,rdx
    8d19:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8d1d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d21:	ba 08 00 00 00       	mov    edx,0x8
    8d26:	be 00 00 00 00       	mov    esi,0x0
    8d2b:	48 89 c7             	mov    rdi,rax
    8d2e:	e8 cd 98 ff ff       	call   2600 <memset@plt>
    8d33:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d37:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    8d3e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d42:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8d46:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d4a:	48 83 c2 29          	add    rdx,0x29
    8d4e:	48 89 c6             	mov    rsi,rax
    8d51:	48 89 d7             	mov    rdi,rdx
    8d54:	e8 77 97 ff ff       	call   24d0 <strcpy@plt>
    8d59:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d5d:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8d61:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d65:	48 89 d6             	mov    rsi,rdx
    8d68:	48 89 c7             	mov    rdi,rax
    8d6b:	e8 60 97 ff ff       	call   24d0 <strcpy@plt>
    8d70:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d74:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8d77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d7b:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    8d7e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d82:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8d85:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d89:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    8d8c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d90:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    8d97:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d9b:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    8d9f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8da3:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    8da7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dab:	48 8d 50 60          	lea    rdx,[rax+0x60]
    8daf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8db3:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    8db7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8dbb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dbf:	48 89 d6             	mov    rsi,rdx
    8dc2:	48 89 c7             	mov    rdi,rax
    8dc5:	e8 8e 04 00 00       	call   9258 <increment_stats>
    8dca:	bf 00 00 00 00       	mov    edi,0x0
    8dcf:	e8 fc 98 ff ff       	call   26d0 <time@plt>
    8dd4:	48 89 c2             	mov    rdx,rax
    8dd7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ddb:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    8de2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8de6:	c7 80 80 00 00 00 00 	mov    DWORD PTR [rax+0x80],0x0
    8ded:	00 00 00 
    8df0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8df4:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8dfa:	8d 50 01             	lea    edx,[rax+0x1]
    8dfd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e01:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8e07:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e0b:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8e0e:	89 c2                	mov    edx,eax
    8e10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e14:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    8e1a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e1e:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8e21:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8e25:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e29:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8e2c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e30:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8e34:	8b 05 06 82 00 00    	mov    eax,DWORD PTR [rip+0x8206]        # 11040 <total_conversations>
    8e3a:	41 89 f9             	mov    r9d,edi
    8e3d:	49 89 c8             	mov    r8,rcx
    8e40:	89 d1                	mov    ecx,edx
    8e42:	48 89 f2             	mov    rdx,rsi
    8e45:	89 c6                	mov    esi,eax
    8e47:	48 8d 3d c2 4a 00 00 	lea    rdi,[rip+0x4ac2]        # d910 <_IO_stdin_used+0x1910>
    8e4e:	b8 00 00 00 00       	mov    eax,0x0
    8e53:	e8 68 97 ff ff       	call   25c0 <printf@plt>
    8e58:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e5c:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8e5f:	83 f8 7e             	cmp    eax,0x7e
    8e62:	75 0e                	jne    8e72 <add_new_conversation+0x236>
    8e64:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e68:	c7 80 8c 00 00 00 f3 	mov    DWORD PTR [rax+0x8c],0xf3
    8e6f:	00 00 00 
    8e72:	90                   	nop
    8e73:	c9                   	leave  
    8e74:	c3                   	ret    

0000000000008e75 <spi_ud_thw>:
    8e75:	f3 0f 1e fa          	endbr64 
    8e79:	55                   	push   rbp
    8e7a:	48 89 e5             	mov    rbp,rsp
    8e7d:	48 83 ec 20          	sub    rsp,0x20
    8e81:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8e85:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e89:	48 89 c7             	mov    rdi,rax
    8e8c:	e8 f7 fb ff ff       	call   8a88 <conversation_exists>
    8e91:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8e94:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8e98:	0f 84 9d 00 00 00    	je     8f3b <spi_ud_thw+0xc6>
    8e9e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8ea1:	48 98                	cdqe   
    8ea3:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8eaa:	48 8d 15 4f 11 10 00 	lea    rdx,[rip+0x10114f]        # 10a000 <spi_table>
    8eb1:	48 01 d0             	add    rax,rdx
    8eb4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8eb8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ebc:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8ec2:	8d 50 01             	lea    edx,[rax+0x1]
    8ec5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ec9:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8ecf:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8ed3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ed7:	48 89 d6             	mov    rsi,rdx
    8eda:	48 89 c7             	mov    rdi,rax
    8edd:	e8 76 03 00 00       	call   9258 <increment_stats>
    8ee2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ee6:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8ee9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8eed:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8ef1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ef5:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8ef8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8efc:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8f00:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8f03:	41 89 f9             	mov    r9d,edi
    8f06:	49 89 f0             	mov    r8,rsi
    8f09:	89 c6                	mov    esi,eax
    8f0b:	48 8d 3d 26 4a 00 00 	lea    rdi,[rip+0x4a26]        # d938 <_IO_stdin_used+0x1938>
    8f12:	b8 00 00 00 00       	mov    eax,0x0
    8f17:	e8 a4 96 ff ff       	call   25c0 <printf@plt>
    8f1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f20:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8f26:	3d f3 00 00 00       	cmp    eax,0xf3
    8f2b:	75 0e                	jne    8f3b <spi_ud_thw+0xc6>
    8f2d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f31:	c7 80 8c 00 00 00 f4 	mov    DWORD PTR [rax+0x8c],0xf4
    8f38:	00 00 00 
    8f3b:	90                   	nop
    8f3c:	c9                   	leave  
    8f3d:	c3                   	ret    

0000000000008f3e <update_table>:
    8f3e:	f3 0f 1e fa          	endbr64 
    8f42:	55                   	push   rbp
    8f43:	48 89 e5             	mov    rbp,rsp
    8f46:	48 83 ec 30          	sub    rsp,0x30
    8f4a:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8f4e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8f55:	00 00 
    8f57:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f5b:	31 c0                	xor    eax,eax
    8f5d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f61:	48 89 c7             	mov    rdi,rax
    8f64:	e8 1f fb ff ff       	call   8a88 <conversation_exists>
    8f69:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8f6c:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8f70:	0f 84 52 01 00 00    	je     90c8 <update_table+0x18a>
    8f76:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8f79:	48 98                	cdqe   
    8f7b:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8f82:	48 8d 15 77 10 10 00 	lea    rdx,[rip+0x101077]        # 10a000 <spi_table>
    8f89:	48 01 d0             	add    rax,rdx
    8f8c:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8f90:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f94:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8f9a:	8d 50 01             	lea    edx,[rax+0x1]
    8f9d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fa1:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8fa7:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8fab:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8faf:	48 89 d6             	mov    rsi,rdx
    8fb2:	48 89 c7             	mov    rdi,rax
    8fb5:	e8 9e 02 00 00       	call   9258 <increment_stats>
    8fba:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fbe:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8fc4:	3d f4 00 00 00       	cmp    eax,0xf4
    8fc9:	75 4d                	jne    9018 <update_table+0xda>
    8fcb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fcf:	c7 80 8c 00 00 00 f1 	mov    DWORD PTR [rax+0x8c],0xf1
    8fd6:	00 00 00 
    8fd9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fdd:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8fe0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fe4:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8fe8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fec:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8fef:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ff3:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8ff7:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8ffa:	41 89 f9             	mov    r9d,edi
    8ffd:	49 89 f0             	mov    r8,rsi
    9000:	89 c6                	mov    esi,eax
    9002:	48 8d 3d 57 49 00 00 	lea    rdi,[rip+0x4957]        # d960 <_IO_stdin_used+0x1960>
    9009:	b8 00 00 00 00       	mov    eax,0x0
    900e:	e8 ad 95 ff ff       	call   25c0 <printf@plt>
    9013:	e9 b0 00 00 00       	jmp    90c8 <update_table+0x18a>
    9018:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    901c:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9022:	3d f6 00 00 00       	cmp    eax,0xf6
    9027:	0f 85 9b 00 00 00    	jne    90c8 <update_table+0x18a>
    902d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9031:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9034:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9038:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    903c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9040:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9043:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9047:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    904b:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    904e:	41 89 f9             	mov    r9d,edi
    9051:	49 89 f0             	mov    r8,rsi
    9054:	89 c6                	mov    esi,eax
    9056:	48 8d 3d 33 49 00 00 	lea    rdi,[rip+0x4933]        # d990 <_IO_stdin_used+0x1990>
    905d:	b8 00 00 00 00       	mov    eax,0x0
    9062:	e8 59 95 ff ff       	call   25c0 <printf@plt>
    9067:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    906b:	c7 80 8c 00 00 00 fa 	mov    DWORD PTR [rax+0x8c],0xfa
    9072:	00 00 00 
    9075:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9079:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    9080:	bf 00 00 00 00       	mov    edi,0x0
    9085:	e8 46 96 ff ff       	call   26d0 <time@plt>
    908a:	48 89 c2             	mov    rdx,rax
    908d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9091:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    9098:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    909c:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    90a0:	48 89 d1             	mov    rcx,rdx
    90a3:	48 8d 15 99 f3 ff ff 	lea    rdx,[rip+0xfffffffffffff399]        # 8443 <update_spi_db>
    90aa:	be 00 00 00 00       	mov    esi,0x0
    90af:	48 89 c7             	mov    rdi,rax
    90b2:	e8 d9 93 ff ff       	call   2490 <pthread_create@plt>
    90b7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90bb:	be 00 00 00 00       	mov    esi,0x0
    90c0:	48 89 c7             	mov    rdi,rax
    90c3:	e8 d8 96 ff ff       	call   27a0 <pthread_join@plt>
    90c8:	90                   	nop
    90c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90cd:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    90d4:	00 00 
    90d6:	74 05                	je     90dd <update_table+0x19f>
    90d8:	e8 a3 94 ff ff       	call   2580 <__stack_chk_fail@plt>
    90dd:	c9                   	leave  
    90de:	c3                   	ret    

00000000000090df <polite_end>:
    90df:	f3 0f 1e fa          	endbr64 
    90e3:	55                   	push   rbp
    90e4:	48 89 e5             	mov    rbp,rsp
    90e7:	48 83 ec 20          	sub    rsp,0x20
    90eb:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    90ef:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90f3:	48 89 c7             	mov    rdi,rax
    90f6:	e8 8d f9 ff ff       	call   8a88 <conversation_exists>
    90fb:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    90fe:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    9102:	0f 84 e7 00 00 00    	je     91ef <polite_end+0x110>
    9108:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    910b:	48 98                	cdqe   
    910d:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    9114:	48 8d 15 e5 0e 10 00 	lea    rdx,[rip+0x100ee5]        # 10a000 <spi_table>
    911b:	48 01 d0             	add    rax,rdx
    911e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9122:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9126:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    912c:	8d 50 01             	lea    edx,[rax+0x1]
    912f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9133:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    9139:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    913d:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9143:	3d f5 00 00 00       	cmp    eax,0xf5
    9148:	75 4a                	jne    9194 <polite_end+0xb5>
    914a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    914e:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9151:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9155:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    9159:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    915d:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9160:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9164:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9168:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    916b:	41 89 f9             	mov    r9d,edi
    916e:	49 89 f0             	mov    r8,rsi
    9171:	89 c6                	mov    esi,eax
    9173:	48 8d 3d 4e 48 00 00 	lea    rdi,[rip+0x484e]        # d9c8 <_IO_stdin_used+0x19c8>
    917a:	b8 00 00 00 00       	mov    eax,0x0
    917f:	e8 3c 94 ff ff       	call   25c0 <printf@plt>
    9184:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9188:	c7 80 8c 00 00 00 f6 	mov    DWORD PTR [rax+0x8c],0xf6
    918f:	00 00 00 
    9192:	eb 48                	jmp    91dc <polite_end+0xfd>
    9194:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9198:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    919b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    919f:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    91a3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91a7:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    91aa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91ae:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    91b2:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    91b5:	41 89 f9             	mov    r9d,edi
    91b8:	49 89 f0             	mov    r8,rsi
    91bb:	89 c6                	mov    esi,eax
    91bd:	48 8d 3d 3c 48 00 00 	lea    rdi,[rip+0x483c]        # da00 <_IO_stdin_used+0x1a00>
    91c4:	b8 00 00 00 00       	mov    eax,0x0
    91c9:	e8 f2 93 ff ff       	call   25c0 <printf@plt>
    91ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    91d2:	c7 80 8c 00 00 00 f5 	mov    DWORD PTR [rax+0x8c],0xf5
    91d9:	00 00 00 
    91dc:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    91e0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91e4:	48 89 d6             	mov    rsi,rdx
    91e7:	48 89 c7             	mov    rdi,rax
    91ea:	e8 69 00 00 00       	call   9258 <increment_stats>
    91ef:	90                   	nop
    91f0:	c9                   	leave  
    91f1:	c3                   	ret    

00000000000091f2 <handle_data_pkt>:
    91f2:	f3 0f 1e fa          	endbr64 
    91f6:	55                   	push   rbp
    91f7:	48 89 e5             	mov    rbp,rsp
    91fa:	48 83 ec 20          	sub    rsp,0x20
    91fe:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9202:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9206:	48 89 c7             	mov    rdi,rax
    9209:	e8 7a f8 ff ff       	call   8a88 <conversation_exists>
    920e:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9211:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    9215:	74 3e                	je     9255 <handle_data_pkt+0x63>
    9217:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    921a:	48 98                	cdqe   
    921c:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    9223:	48 8d 15 d6 0d 10 00 	lea    rdx,[rip+0x100dd6]        # 10a000 <spi_table>
    922a:	48 01 d0             	add    rax,rdx
    922d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9231:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9235:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    9238:	8d 50 01             	lea    edx,[rax+0x1]
    923b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    923f:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    9242:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9246:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    924a:	48 89 d6             	mov    rsi,rdx
    924d:	48 89 c7             	mov    rdi,rax
    9250:	e8 03 00 00 00       	call   9258 <increment_stats>
    9255:	90                   	nop
    9256:	c9                   	leave  
    9257:	c3                   	ret    

0000000000009258 <increment_stats>:
    9258:	f3 0f 1e fa          	endbr64 
    925c:	55                   	push   rbp
    925d:	48 89 e5             	mov    rbp,rsp
    9260:	48 83 ec 10          	sub    rsp,0x10
    9264:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9268:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    926c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9270:	48 8d 50 29          	lea    rdx,[rax+0x29]
    9274:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9278:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    927c:	48 89 d6             	mov    rsi,rdx
    927f:	48 89 c7             	mov    rdi,rax
    9282:	e8 f9 93 ff ff       	call   2680 <strcmp@plt>
    9287:	85 c0                	test   eax,eax
    9289:	75 13                	jne    929e <increment_stats+0x46>
    928b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    928f:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    9292:	8d 50 01             	lea    edx,[rax+0x1]
    9295:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9299:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    929c:	eb 2c                	jmp    92ca <increment_stats+0x72>
    929e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    92a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    92a6:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    92aa:	48 89 d6             	mov    rsi,rdx
    92ad:	48 89 c7             	mov    rdi,rax
    92b0:	e8 cb 93 ff ff       	call   2680 <strcmp@plt>
    92b5:	85 c0                	test   eax,eax
    92b7:	75 11                	jne    92ca <increment_stats+0x72>
    92b9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92bd:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    92c0:	8d 50 01             	lea    edx,[rax+0x1]
    92c3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    92c7:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    92ca:	90                   	nop
    92cb:	c9                   	leave  
    92cc:	c3                   	ret    

00000000000092cd <lprintf>:
    92cd:	f3 0f 1e fa          	endbr64 
    92d1:	55                   	push   rbp
    92d2:	48 89 e5             	mov    rbp,rsp
    92d5:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    92dc:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    92e3:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    92ea:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    92f1:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    92f8:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    92ff:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    9306:	84 c0                	test   al,al
    9308:	74 20                	je     932a <lprintf+0x5d>
    930a:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    930e:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    9312:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    9316:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    931a:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    931e:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    9322:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    9326:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    932a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9331:	00 00 
    9333:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    933a:	31 c0                	xor    eax,eax
    933c:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    9343:	00 00 00 
    9346:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    934d:	00 00 00 
    9350:	48 8d 45 10          	lea    rax,[rbp+0x10]
    9354:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    935b:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    9362:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    9369:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    9370:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    9377:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    937e:	48 89 ce             	mov    rsi,rcx
    9381:	48 89 c7             	mov    rdi,rax
    9384:	b8 00 00 00 00       	mov    eax,0x0
    9389:	e8 12 93 ff ff       	call   26a0 <fprintf@plt>
    938e:	90                   	nop
    938f:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    9396:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    939d:	00 00 
    939f:	74 05                	je     93a6 <lprintf+0xd9>
    93a1:	e8 da 91 ff ff       	call   2580 <__stack_chk_fail@plt>
    93a6:	c9                   	leave  
    93a7:	c3                   	ret    

00000000000093a8 <lfprintf>:
    93a8:	f3 0f 1e fa          	endbr64 
    93ac:	55                   	push   rbp
    93ad:	48 89 e5             	mov    rbp,rsp
    93b0:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    93b7:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    93be:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    93c5:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    93cc:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    93d3:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    93da:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    93e1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    93e8:	00 00 
    93ea:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    93ee:	31 c0                	xor    eax,eax
    93f0:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    93f7:	48 8d 35 3a 46 00 00 	lea    rsi,[rip+0x463a]        # da38 <_IO_stdin_used+0x1a38>
    93fe:	48 89 c7             	mov    rdi,rax
    9401:	e8 6a 93 ff ff       	call   2770 <fopen@plt>
    9406:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    940d:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    9414:	00 
    9415:	75 20                	jne    9437 <lfprintf+0x8f>
    9417:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    941e:	48 89 c6             	mov    rsi,rax
    9421:	48 8d 3d 18 46 00 00 	lea    rdi,[rip+0x4618]        # da40 <_IO_stdin_used+0x1a40>
    9428:	b8 00 00 00 00       	mov    eax,0x0
    942d:	e8 8e 91 ff ff       	call   25c0 <printf@plt>
    9432:	e9 cd 00 00 00       	jmp    9504 <lfprintf+0x15c>
    9437:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    943e:	48 89 c7             	mov    rdi,rax
    9441:	e8 ee 9f ff ff       	call   3434 <cb_get_formatted_time>
    9446:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    944d:	75 3f                	jne    948e <lfprintf+0xe6>
    944f:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    9456:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    945d:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    9464:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    946b:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9472:	49 89 f9             	mov    r9,rdi
    9475:	49 89 f0             	mov    r8,rsi
    9478:	48 8d 35 ef 45 00 00 	lea    rsi,[rip+0x45ef]        # da6e <_IO_stdin_used+0x1a6e>
    947f:	48 89 c7             	mov    rdi,rax
    9482:	b8 00 00 00 00       	mov    eax,0x0
    9487:	e8 a4 93 ff ff       	call   2830 <sprintf@plt>
    948c:	eb 4e                	jmp    94dc <lfprintf+0x134>
    948e:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    9495:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    949c:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    94a3:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    94aa:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    94b1:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    94b7:	56                   	push   rsi
    94b8:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    94be:	45 89 c1             	mov    r9d,r8d
    94c1:	49 89 f8             	mov    r8,rdi
    94c4:	48 8d 35 b3 45 00 00 	lea    rsi,[rip+0x45b3]        # da7e <_IO_stdin_used+0x1a7e>
    94cb:	48 89 c7             	mov    rdi,rax
    94ce:	b8 00 00 00 00       	mov    eax,0x0
    94d3:	e8 58 93 ff ff       	call   2830 <sprintf@plt>
    94d8:	48 83 c4 10          	add    rsp,0x10
    94dc:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    94e3:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    94ea:	48 89 d6             	mov    rsi,rdx
    94ed:	48 89 c7             	mov    rdi,rax
    94f0:	e8 eb 90 ff ff       	call   25e0 <fputs@plt>
    94f5:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    94fc:	48 89 c7             	mov    rdi,rax
    94ff:	e8 4c 90 ff ff       	call   2550 <fclose@plt>
    9504:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9508:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    950f:	00 00 
    9511:	74 05                	je     9518 <lfprintf+0x170>
    9513:	e8 68 90 ff ff       	call   2580 <__stack_chk_fail@plt>
    9518:	c9                   	leave  
    9519:	c3                   	ret    

000000000000951a <saprintf>:
    951a:	f3 0f 1e fa          	endbr64 
    951e:	55                   	push   rbp
    951f:	48 89 e5             	mov    rbp,rsp
    9522:	48 83 ec 20          	sub    rsp,0x20
    9526:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    952a:	48 8b 05 ff 7a 00 00 	mov    rax,QWORD PTR [rip+0x7aff]        # 11030 <def_log_file>
    9531:	48 8d 35 00 45 00 00 	lea    rsi,[rip+0x4500]        # da38 <_IO_stdin_used+0x1a38>
    9538:	48 89 c7             	mov    rdi,rax
    953b:	e8 30 92 ff ff       	call   2770 <fopen@plt>
    9540:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9544:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    9549:	75 1a                	jne    9565 <saprintf+0x4b>
    954b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    954f:	48 89 c6             	mov    rsi,rax
    9552:	48 8d 3d e7 44 00 00 	lea    rdi,[rip+0x44e7]        # da40 <_IO_stdin_used+0x1a40>
    9559:	b8 00 00 00 00       	mov    eax,0x0
    955e:	e8 5d 90 ff ff       	call   25c0 <printf@plt>
    9563:	eb 1f                	jmp    9584 <saprintf+0x6a>
    9565:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9569:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    956d:	48 89 d6             	mov    rsi,rdx
    9570:	48 89 c7             	mov    rdi,rax
    9573:	e8 68 90 ff ff       	call   25e0 <fputs@plt>
    9578:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    957c:	48 89 c7             	mov    rdi,rax
    957f:	e8 cc 8f ff ff       	call   2550 <fclose@plt>
    9584:	c9                   	leave  
    9585:	c3                   	ret    

0000000000009586 <substr>:
    9586:	f3 0f 1e fa          	endbr64 
    958a:	55                   	push   rbp
    958b:	48 89 e5             	mov    rbp,rsp
    958e:	48 83 ec 20          	sub    rsp,0x20
    9592:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9596:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    9599:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    959c:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    959f:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    95a2:	83 c0 02             	add    eax,0x2
    95a5:	48 98                	cdqe   
    95a7:	48 89 c7             	mov    rdi,rax
    95aa:	e8 51 91 ff ff       	call   2700 <malloc@plt>
    95af:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    95b3:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    95b6:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    95b9:	eb 27                	jmp    95e2 <substr+0x5c>
    95bb:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    95be:	48 63 d0             	movsxd rdx,eax
    95c1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    95c5:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    95c9:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    95cc:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    95cf:	48 63 d0             	movsxd rdx,eax
    95d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95d6:	48 01 c2             	add    rdx,rax
    95d9:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    95dc:	88 02                	mov    BYTE PTR [rdx],al
    95de:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    95e2:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    95e5:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    95e8:	7e d1                	jle    95bb <substr+0x35>
    95ea:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    95ed:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    95f0:	48 98                	cdqe   
    95f2:	48 8d 50 01          	lea    rdx,[rax+0x1]
    95f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95fa:	48 01 d0             	add    rax,rdx
    95fd:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9600:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9604:	c9                   	leave  
    9605:	c3                   	ret    

0000000000009606 <delimit>:
    9606:	f3 0f 1e fa          	endbr64 
    960a:	55                   	push   rbp
    960b:	48 89 e5             	mov    rbp,rsp
    960e:	89 f8                	mov    eax,edi
    9610:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    9613:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    9617:	0f 94 c0             	sete   al
    961a:	5d                   	pop    rbp
    961b:	c3                   	ret    

000000000000961c <isdigit>:
    961c:	f3 0f 1e fa          	endbr64 
    9620:	55                   	push   rbp
    9621:	48 89 e5             	mov    rbp,rsp
    9624:	53                   	push   rbx
    9625:	48 83 ec 28          	sub    rsp,0x28
    9629:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    962d:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    9634:	e9 f7 00 00 00       	jmp    9730 <isdigit+0x114>
    9639:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    963c:	48 63 d0             	movsxd rdx,eax
    963f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9643:	48 01 d0             	add    rax,rdx
    9646:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9649:	3c 30                	cmp    al,0x30
    964b:	0f 84 db 00 00 00    	je     972c <isdigit+0x110>
    9651:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9654:	48 63 d0             	movsxd rdx,eax
    9657:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    965b:	48 01 d0             	add    rax,rdx
    965e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9661:	3c 31                	cmp    al,0x31
    9663:	0f 84 c3 00 00 00    	je     972c <isdigit+0x110>
    9669:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    966c:	48 63 d0             	movsxd rdx,eax
    966f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9673:	48 01 d0             	add    rax,rdx
    9676:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9679:	3c 32                	cmp    al,0x32
    967b:	0f 84 ab 00 00 00    	je     972c <isdigit+0x110>
    9681:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9684:	48 63 d0             	movsxd rdx,eax
    9687:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    968b:	48 01 d0             	add    rax,rdx
    968e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9691:	3c 33                	cmp    al,0x33
    9693:	0f 84 93 00 00 00    	je     972c <isdigit+0x110>
    9699:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    969c:	48 63 d0             	movsxd rdx,eax
    969f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96a3:	48 01 d0             	add    rax,rdx
    96a6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96a9:	3c 34                	cmp    al,0x34
    96ab:	74 7f                	je     972c <isdigit+0x110>
    96ad:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96b0:	48 63 d0             	movsxd rdx,eax
    96b3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96b7:	48 01 d0             	add    rax,rdx
    96ba:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96bd:	3c 34                	cmp    al,0x34
    96bf:	74 6b                	je     972c <isdigit+0x110>
    96c1:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96c4:	48 63 d0             	movsxd rdx,eax
    96c7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96cb:	48 01 d0             	add    rax,rdx
    96ce:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96d1:	3c 35                	cmp    al,0x35
    96d3:	74 57                	je     972c <isdigit+0x110>
    96d5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96d8:	48 63 d0             	movsxd rdx,eax
    96db:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96df:	48 01 d0             	add    rax,rdx
    96e2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96e5:	3c 36                	cmp    al,0x36
    96e7:	74 43                	je     972c <isdigit+0x110>
    96e9:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96ec:	48 63 d0             	movsxd rdx,eax
    96ef:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96f3:	48 01 d0             	add    rax,rdx
    96f6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96f9:	3c 37                	cmp    al,0x37
    96fb:	74 2f                	je     972c <isdigit+0x110>
    96fd:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9700:	48 63 d0             	movsxd rdx,eax
    9703:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9707:	48 01 d0             	add    rax,rdx
    970a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    970d:	3c 38                	cmp    al,0x38
    970f:	74 1b                	je     972c <isdigit+0x110>
    9711:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9714:	48 63 d0             	movsxd rdx,eax
    9717:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    971b:	48 01 d0             	add    rax,rdx
    971e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9721:	3c 39                	cmp    al,0x39
    9723:	74 07                	je     972c <isdigit+0x110>
    9725:	b8 00 00 00 00       	mov    eax,0x0
    972a:	eb 24                	jmp    9750 <isdigit+0x134>
    972c:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    9730:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9733:	48 63 d8             	movsxd rbx,eax
    9736:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    973a:	48 89 c7             	mov    rdi,rax
    973d:	e8 1e 8e ff ff       	call   2560 <strlen@plt>
    9742:	48 39 c3             	cmp    rbx,rax
    9745:	0f 82 ee fe ff ff    	jb     9639 <isdigit+0x1d>
    974b:	b8 01 00 00 00       	mov    eax,0x1
    9750:	48 83 c4 28          	add    rsp,0x28
    9754:	5b                   	pop    rbx
    9755:	5d                   	pop    rbp
    9756:	c3                   	ret    

0000000000009757 <assign_port_number>:
    9757:	f3 0f 1e fa          	endbr64 
    975b:	55                   	push   rbp
    975c:	48 89 e5             	mov    rbp,rsp
    975f:	48 83 ec 10          	sub    rsp,0x10
    9763:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9767:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    976b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    976f:	48 89 c7             	mov    rdi,rax
    9772:	e8 a5 fe ff ff       	call   961c <isdigit>
    9777:	84 c0                	test   al,al
    9779:	74 18                	je     9793 <assign_port_number+0x3c>
    977b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    977f:	48 89 c7             	mov    rdi,rax
    9782:	e8 59 90 ff ff       	call   27e0 <atoi@plt>
    9787:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    978b:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    9791:	eb 25                	jmp    97b8 <assign_port_number+0x61>
    9793:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9797:	48 8d 35 fa 42 00 00 	lea    rsi,[rip+0x42fa]        # da98 <_IO_stdin_used+0x1a98>
    979e:	48 89 c7             	mov    rdi,rax
    97a1:	e8 da 8e ff ff       	call   2680 <strcmp@plt>
    97a6:	85 c0                	test   eax,eax
    97a8:	75 0e                	jne    97b8 <assign_port_number+0x61>
    97aa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    97ae:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    97b5:	ff ff ff 
    97b8:	90                   	nop
    97b9:	c9                   	leave  
    97ba:	c3                   	ret    

00000000000097bb <check_port_number>:
    97bb:	f3 0f 1e fa          	endbr64 
    97bf:	55                   	push   rbp
    97c0:	48 89 e5             	mov    rbp,rsp
    97c3:	48 83 ec 10          	sub    rsp,0x10
    97c7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    97cb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97cf:	48 89 c7             	mov    rdi,rax
    97d2:	e8 45 fe ff ff       	call   961c <isdigit>
    97d7:	84 c0                	test   al,al
    97d9:	74 0e                	je     97e9 <check_port_number+0x2e>
    97db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97df:	48 89 c7             	mov    rdi,rax
    97e2:	e8 f9 8f ff ff       	call   27e0 <atoi@plt>
    97e7:	eb 23                	jmp    980c <check_port_number+0x51>
    97e9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97ed:	48 8d 35 a4 42 00 00 	lea    rsi,[rip+0x42a4]        # da98 <_IO_stdin_used+0x1a98>
    97f4:	48 89 c7             	mov    rdi,rax
    97f7:	e8 84 8e ff ff       	call   2680 <strcmp@plt>
    97fc:	85 c0                	test   eax,eax
    97fe:	75 07                	jne    9807 <check_port_number+0x4c>
    9800:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9805:	eb 05                	jmp    980c <check_port_number+0x51>
    9807:	b8 ff ff ff ff       	mov    eax,0xffffffff
    980c:	c9                   	leave  
    980d:	c3                   	ret    

000000000000980e <assign_protocol>:
    980e:	f3 0f 1e fa          	endbr64 
    9812:	55                   	push   rbp
    9813:	48 89 e5             	mov    rbp,rsp
    9816:	48 83 ec 10          	sub    rsp,0x10
    981a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    981e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9822:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9826:	48 8d 35 6f 42 00 00 	lea    rsi,[rip+0x426f]        # da9c <_IO_stdin_used+0x1a9c>
    982d:	48 89 c7             	mov    rdi,rax
    9830:	e8 4b 8e ff ff       	call   2680 <strcmp@plt>
    9835:	85 c0                	test   eax,eax
    9837:	75 10                	jne    9849 <assign_protocol+0x3b>
    9839:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    983d:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9844:	ff ff ff 
    9847:	eb 73                	jmp    98bc <assign_protocol+0xae>
    9849:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    984d:	48 8d 35 4c 42 00 00 	lea    rsi,[rip+0x424c]        # daa0 <_IO_stdin_used+0x1aa0>
    9854:	48 89 c7             	mov    rdi,rax
    9857:	e8 24 8e ff ff       	call   2680 <strcmp@plt>
    985c:	85 c0                	test   eax,eax
    985e:	75 10                	jne    9870 <assign_protocol+0x62>
    9860:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9864:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    986b:	00 00 00 
    986e:	eb 4c                	jmp    98bc <assign_protocol+0xae>
    9870:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9874:	48 8d 35 2a 42 00 00 	lea    rsi,[rip+0x422a]        # daa5 <_IO_stdin_used+0x1aa5>
    987b:	48 89 c7             	mov    rdi,rax
    987e:	e8 fd 8d ff ff       	call   2680 <strcmp@plt>
    9883:	85 c0                	test   eax,eax
    9885:	75 10                	jne    9897 <assign_protocol+0x89>
    9887:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    988b:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    9892:	00 00 00 
    9895:	eb 25                	jmp    98bc <assign_protocol+0xae>
    9897:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    989b:	48 8d 35 07 42 00 00 	lea    rsi,[rip+0x4207]        # daa9 <_IO_stdin_used+0x1aa9>
    98a2:	48 89 c7             	mov    rdi,rax
    98a5:	e8 d6 8d ff ff       	call   2680 <strcmp@plt>
    98aa:	85 c0                	test   eax,eax
    98ac:	75 0e                	jne    98bc <assign_protocol+0xae>
    98ae:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98b2:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    98b9:	00 00 00 
    98bc:	90                   	nop
    98bd:	c9                   	leave  
    98be:	c3                   	ret    

00000000000098bf <get_ruletype>:
    98bf:	f3 0f 1e fa          	endbr64 
    98c3:	55                   	push   rbp
    98c4:	48 89 e5             	mov    rbp,rsp
    98c7:	48 83 ec 10          	sub    rsp,0x10
    98cb:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    98cf:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    98d3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98d7:	ba 09 00 00 00       	mov    edx,0x9
    98dc:	48 8d 35 ca 41 00 00 	lea    rsi,[rip+0x41ca]        # daad <_IO_stdin_used+0x1aad>
    98e3:	48 89 c7             	mov    rdi,rax
    98e6:	e8 d5 8b ff ff       	call   24c0 <strncmp@plt>
    98eb:	85 c0                	test   eax,eax
    98ed:	75 17                	jne    9906 <get_ruletype+0x47>
    98ef:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98f3:	48 8d 15 b9 bd ff ff 	lea    rdx,[rip+0xffffffffffffbdb9]        # 56b3 <str_match_parser>
    98fa:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9901:	e9 82 00 00 00       	jmp    9988 <get_ruletype+0xc9>
    9906:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    990a:	ba 04 00 00 00       	mov    edx,0x4
    990f:	48 8d 35 a1 41 00 00 	lea    rsi,[rip+0x41a1]        # dab7 <_IO_stdin_used+0x1ab7>
    9916:	48 89 c7             	mov    rdi,rax
    9919:	e8 a2 8b ff ff       	call   24c0 <strncmp@plt>
    991e:	85 c0                	test   eax,eax
    9920:	75 14                	jne    9936 <get_ruletype+0x77>
    9922:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9926:	48 8d 15 2c c0 ff ff 	lea    rdx,[rip+0xffffffffffffc02c]        # 5959 <none>
    992d:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9934:	eb 52                	jmp    9988 <get_ruletype+0xc9>
    9936:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    993a:	ba 04 00 00 00       	mov    edx,0x4
    993f:	48 8d 35 76 41 00 00 	lea    rsi,[rip+0x4176]        # dabc <_IO_stdin_used+0x1abc>
    9946:	48 89 c7             	mov    rdi,rax
    9949:	e8 72 8b ff ff       	call   24c0 <strncmp@plt>
    994e:	85 c0                	test   eax,eax
    9950:	75 14                	jne    9966 <get_ruletype+0xa7>
    9952:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9956:	48 8d 15 13 c0 ff ff 	lea    rdx,[rip+0xffffffffffffc013]        # 5970 <pcre_match>
    995d:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9964:	eb 22                	jmp    9988 <get_ruletype+0xc9>
    9966:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    996a:	48 89 c6             	mov    rsi,rax
    996d:	48 8d 3d 4d 41 00 00 	lea    rdi,[rip+0x414d]        # dac1 <_IO_stdin_used+0x1ac1>
    9974:	b8 00 00 00 00       	mov    eax,0x0
    9979:	e8 42 8c ff ff       	call   25c0 <printf@plt>
    997e:	bf 01 00 00 00       	mov    edi,0x1
    9983:	e8 b8 8e ff ff       	call   2840 <exit@plt>
    9988:	c9                   	leave  
    9989:	c3                   	ret    

000000000000998a <numeric_check>:
    998a:	f3 0f 1e fa          	endbr64 
    998e:	55                   	push   rbp
    998f:	48 89 e5             	mov    rbp,rsp
    9992:	48 83 ec 30          	sub    rsp,0x30
    9996:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    999a:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    999d:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    99a1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    99a5:	48 89 c7             	mov    rdi,rax
    99a8:	e8 6f fc ff ff       	call   961c <isdigit>
    99ad:	84 c0                	test   al,al
    99af:	74 27                	je     99d8 <numeric_check+0x4e>
    99b1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    99b5:	48 89 c7             	mov    rdi,rax
    99b8:	e8 23 8e ff ff       	call   27e0 <atoi@plt>
    99bd:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    99c0:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    99c3:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    99c6:	77 10                	ja     99d8 <numeric_check+0x4e>
    99c8:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    99cb:	48 98                	cdqe   
    99cd:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    99d1:	72 05                	jb     99d8 <numeric_check+0x4e>
    99d3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    99d6:	eb 05                	jmp    99dd <numeric_check+0x53>
    99d8:	b8 ff ff ff ff       	mov    eax,0xffffffff
    99dd:	c9                   	leave  
    99de:	c3                   	ret    

00000000000099df <sc_strip>:
    99df:	f3 0f 1e fa          	endbr64 
    99e3:	55                   	push   rbp
    99e4:	48 89 e5             	mov    rbp,rsp
    99e7:	48 83 ec 10          	sub    rsp,0x10
    99eb:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    99ef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    99f3:	48 8d 35 de 40 00 00 	lea    rsi,[rip+0x40de]        # dad8 <_IO_stdin_used+0x1ad8>
    99fa:	48 89 c7             	mov    rdi,rax
    99fd:	e8 3e 8c ff ff       	call   2640 <strcspn@plt>
    9a02:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9a06:	48 01 d0             	add    rax,rdx
    9a09:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9a0c:	90                   	nop
    9a0d:	c9                   	leave  
    9a0e:	c3                   	ret    

0000000000009a0f <void_rule>:
    9a0f:	f3 0f 1e fa          	endbr64 
    9a13:	55                   	push   rbp
    9a14:	48 89 e5             	mov    rbp,rsp
    9a17:	48 83 ec 10          	sub    rsp,0x10
    9a1b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9a1f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a23:	48 05 6e 03 00 00    	add    rax,0x36e
    9a29:	ba 0a 00 00 00       	mov    edx,0xa
    9a2e:	be 00 00 00 00       	mov    esi,0x0
    9a33:	48 89 c7             	mov    rdi,rax
    9a36:	e8 c5 8b ff ff       	call   2600 <memset@plt>
    9a3b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a3f:	48 05 68 03 00 00    	add    rax,0x368
    9a45:	ba 06 00 00 00       	mov    edx,0x6
    9a4a:	be 00 00 00 00       	mov    esi,0x0
    9a4f:	48 89 c7             	mov    rdi,rax
    9a52:	e8 a9 8b ff ff       	call   2600 <memset@plt>
    9a57:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a5b:	48 05 50 03 00 00    	add    rax,0x350
    9a61:	ba 18 00 00 00       	mov    edx,0x18
    9a66:	be 00 00 00 00       	mov    esi,0x0
    9a6b:	48 89 c7             	mov    rdi,rax
    9a6e:	e8 8d 8b ff ff       	call   2600 <memset@plt>
    9a73:	90                   	nop
    9a74:	c9                   	leave  
    9a75:	c3                   	ret    

0000000000009a76 <line_parser>:
    9a76:	f3 0f 1e fa          	endbr64 
    9a7a:	55                   	push   rbp
    9a7b:	48 89 e5             	mov    rbp,rsp
    9a7e:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    9a85:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    9a8c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9a93:	00 00 
    9a95:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9a99:	31 c0                	xor    eax,eax
    9a9b:	8b 05 73 75 00 00    	mov    eax,DWORD PTR [rip+0x7573]        # 11014 <num_rules>
    9aa1:	83 c0 01             	add    eax,0x1
    9aa4:	89 05 6a 75 00 00    	mov    DWORD PTR [rip+0x756a],eax        # 11014 <num_rules>
    9aaa:	8b 05 64 75 00 00    	mov    eax,DWORD PTR [rip+0x7564]        # 11014 <num_rules>
    9ab0:	48 98                	cdqe   
    9ab2:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    9ab9:	48 8d 15 e0 75 00 00 	lea    rdx,[rip+0x75e0]        # 110a0 <rules>
    9ac0:	48 01 d0             	add    rax,rdx
    9ac3:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    9ac7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9acb:	ba 08 00 00 00       	mov    edx,0x8
    9ad0:	be 00 00 00 00       	mov    esi,0x0
    9ad5:	48 89 c7             	mov    rdi,rax
    9ad8:	e8 23 8b ff ff       	call   2600 <memset@plt>
    9add:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ae1:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9ae8:	ff ff ff 
    9aeb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9aef:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9af6:	ff ff ff 
    9af9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9afd:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    9b04:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b08:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    9b0f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b13:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    9b1a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b1e:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    9b25:	00 00 00 
    9b28:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b2c:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    9b32:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b36:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    9b3d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9b41:	48 89 c7             	mov    rdi,rax
    9b44:	e8 c6 fe ff ff       	call   9a0f <void_rule>
    9b49:	c7 45 98 00 00 00 00 	mov    DWORD PTR [rbp-0x68],0x0
    9b50:	c6 45 8c 00          	mov    BYTE PTR [rbp-0x74],0x0
    9b54:	c7 45 90 00 00 00 00 	mov    DWORD PTR [rbp-0x70],0x0
    9b5b:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    9b62:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9b69:	48 89 c7             	mov    rdi,rax
    9b6c:	e8 ef 89 ff ff       	call   2560 <strlen@plt>
    9b71:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    9b74:	c6 45 8d 00          	mov    BYTE PTR [rbp-0x73],0x0
    9b78:	c6 45 8e 00          	mov    BYTE PTR [rbp-0x72],0x0
    9b7c:	c6 45 8f 00          	mov    BYTE PTR [rbp-0x71],0x0
    9b80:	e9 03 0e 00 00       	jmp    a988 <line_parser+0xf12>
    9b85:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9b88:	48 63 d0             	movsxd rdx,eax
    9b8b:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9b92:	48 01 d0             	add    rax,rdx
    9b95:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b98:	0f be c0             	movsx  eax,al
    9b9b:	89 c7                	mov    edi,eax
    9b9d:	e8 64 fa ff ff       	call   9606 <delimit>
    9ba2:	83 f0 01             	xor    eax,0x1
    9ba5:	84 c0                	test   al,al
    9ba7:	74 04                	je     9bad <line_parser+0x137>
    9ba9:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    9bad:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9bb0:	48 63 d0             	movsxd rdx,eax
    9bb3:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9bba:	48 01 d0             	add    rax,rdx
    9bbd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9bc0:	0f be c0             	movsx  eax,al
    9bc3:	89 c7                	mov    edi,eax
    9bc5:	e8 3c fa ff ff       	call   9606 <delimit>
    9bca:	84 c0                	test   al,al
    9bcc:	74 3f                	je     9c0d <line_parser+0x197>
    9bce:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9bd1:	3b 45 90             	cmp    eax,DWORD PTR [rbp-0x70]
    9bd4:	75 37                	jne    9c0d <line_parser+0x197>
    9bd6:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9bd9:	48 63 d0             	movsxd rdx,eax
    9bdc:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9be3:	48 01 d0             	add    rax,rdx
    9be6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9be9:	3c 3a                	cmp    al,0x3a
    9beb:	75 11                	jne    9bfe <line_parser+0x188>
    9bed:	48 8d 3d e6 3e 00 00 	lea    rdi,[rip+0x3ee6]        # dada <_IO_stdin_used+0x1ada>
    9bf4:	b8 00 00 00 00       	mov    eax,0x0
    9bf9:	e8 c2 89 ff ff       	call   25c0 <printf@plt>
    9bfe:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    9c02:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c05:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    9c08:	e9 7b 0d 00 00       	jmp    a988 <line_parser+0xf12>
    9c0d:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c10:	48 63 d0             	movsxd rdx,eax
    9c13:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9c1a:	48 01 d0             	add    rax,rdx
    9c1d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9c20:	0f be c0             	movsx  eax,al
    9c23:	89 c7                	mov    edi,eax
    9c25:	e8 dc f9 ff ff       	call   9606 <delimit>
    9c2a:	84 c0                	test   al,al
    9c2c:	74 08                	je     9c36 <line_parser+0x1c0>
    9c2e:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    9c31:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
    9c34:	75 18                	jne    9c4e <line_parser+0x1d8>
    9c36:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c39:	3b 45 9c             	cmp    eax,DWORD PTR [rbp-0x64]
    9c3c:	0f 85 46 0d 00 00    	jne    a988 <line_parser+0xf12>
    9c42:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    9c45:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
    9c48:	0f 84 3a 0d 00 00    	je     a988 <line_parser+0xf12>
    9c4e:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    9c51:	8d 50 ff             	lea    edx,[rax-0x1]
    9c54:	8b 4d 90             	mov    ecx,DWORD PTR [rbp-0x70]
    9c57:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    9c5e:	89 ce                	mov    esi,ecx
    9c60:	48 89 c7             	mov    rdi,rax
    9c63:	e8 1e f9 ff ff       	call   9586 <substr>
    9c68:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9c6c:	f3 0f 1e fa          	endbr64 
    9c70:	0f b6 45 8c          	movzx  eax,BYTE PTR [rbp-0x74]
    9c74:	83 f0 01             	xor    eax,0x1
    9c77:	84 c0                	test   al,al
    9c79:	0f 84 d5 02 00 00    	je     9f54 <line_parser+0x4de>
    9c7f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9c83:	48 8d 35 5f 3e 00 00 	lea    rsi,[rip+0x3e5f]        # dae9 <_IO_stdin_used+0x1ae9>
    9c8a:	48 89 c7             	mov    rdi,rax
    9c8d:	e8 ee 89 ff ff       	call   2680 <strcmp@plt>
    9c92:	85 c0                	test   eax,eax
    9c94:	75 2d                	jne    9cc3 <line_parser+0x24d>
    9c96:	0f b6 45 8d          	movzx  eax,BYTE PTR [rbp-0x73]
    9c9a:	83 f0 01             	xor    eax,0x1
    9c9d:	84 c0                	test   al,al
    9c9f:	74 22                	je     9cc3 <line_parser+0x24d>
    9ca1:	0f b6 45 8e          	movzx  eax,BYTE PTR [rbp-0x72]
    9ca5:	83 f0 01             	xor    eax,0x1
    9ca8:	84 c0                	test   al,al
    9caa:	74 17                	je     9cc3 <line_parser+0x24d>
    9cac:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9cb0:	48 8d 15 d2 b7 ff ff 	lea    rdx,[rip+0xffffffffffffb7d2]        # 5489 <stdout_alert>
    9cb7:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    9cbe:	e9 a1 0c 00 00       	jmp    a964 <line_parser+0xeee>
    9cc3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9cc7:	48 8d 35 d2 3d 00 00 	lea    rsi,[rip+0x3dd2]        # daa0 <_IO_stdin_used+0x1aa0>
    9cce:	48 89 c7             	mov    rdi,rax
    9cd1:	e8 aa 89 ff ff       	call   2680 <strcmp@plt>
    9cd6:	85 c0                	test   eax,eax
    9cd8:	74 45                	je     9d1f <line_parser+0x2a9>
    9cda:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9cde:	48 8d 35 b7 3d 00 00 	lea    rsi,[rip+0x3db7]        # da9c <_IO_stdin_used+0x1a9c>
    9ce5:	48 89 c7             	mov    rdi,rax
    9ce8:	e8 93 89 ff ff       	call   2680 <strcmp@plt>
    9ced:	85 c0                	test   eax,eax
    9cef:	74 2e                	je     9d1f <line_parser+0x2a9>
    9cf1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9cf5:	48 8d 35 a9 3d 00 00 	lea    rsi,[rip+0x3da9]        # daa5 <_IO_stdin_used+0x1aa5>
    9cfc:	48 89 c7             	mov    rdi,rax
    9cff:	e8 7c 89 ff ff       	call   2680 <strcmp@plt>
    9d04:	85 c0                	test   eax,eax
    9d06:	74 17                	je     9d1f <line_parser+0x2a9>
    9d08:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d0c:	48 8d 35 96 3d 00 00 	lea    rsi,[rip+0x3d96]        # daa9 <_IO_stdin_used+0x1aa9>
    9d13:	48 89 c7             	mov    rdi,rax
    9d16:	e8 65 89 ff ff       	call   2680 <strcmp@plt>
    9d1b:	85 c0                	test   eax,eax
    9d1d:	75 2e                	jne    9d4d <line_parser+0x2d7>
    9d1f:	0f b6 45 8e          	movzx  eax,BYTE PTR [rbp-0x72]
    9d23:	83 f0 01             	xor    eax,0x1
    9d26:	84 c0                	test   al,al
    9d28:	74 23                	je     9d4d <line_parser+0x2d7>
    9d2a:	0f b6 45 8d          	movzx  eax,BYTE PTR [rbp-0x73]
    9d2e:	83 f0 01             	xor    eax,0x1
    9d31:	84 c0                	test   al,al
    9d33:	74 18                	je     9d4d <line_parser+0x2d7>
    9d35:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9d39:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d3d:	48 89 d6             	mov    rsi,rdx
    9d40:	48 89 c7             	mov    rdi,rax
    9d43:	e8 c6 fa ff ff       	call   980e <assign_protocol>
    9d48:	e9 17 0c 00 00       	jmp    a964 <line_parser+0xeee>
    9d4d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d51:	48 89 c7             	mov    rdi,rax
    9d54:	e8 c3 f8 ff ff       	call   961c <isdigit>
    9d59:	84 c0                	test   al,al
    9d5b:	75 17                	jne    9d74 <line_parser+0x2fe>
    9d5d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d61:	48 8d 35 30 3d 00 00 	lea    rsi,[rip+0x3d30]        # da98 <_IO_stdin_used+0x1a98>
    9d68:	48 89 c7             	mov    rdi,rax
    9d6b:	e8 10 89 ff ff       	call   2680 <strcmp@plt>
    9d70:	85 c0                	test   eax,eax
    9d72:	75 2e                	jne    9da2 <line_parser+0x32c>
    9d74:	0f b6 45 8d          	movzx  eax,BYTE PTR [rbp-0x73]
    9d78:	83 f0 01             	xor    eax,0x1
    9d7b:	84 c0                	test   al,al
    9d7d:	74 23                	je     9da2 <line_parser+0x32c>
    9d7f:	0f b6 45 8e          	movzx  eax,BYTE PTR [rbp-0x72]
    9d83:	83 f0 01             	xor    eax,0x1
    9d86:	84 c0                	test   al,al
    9d88:	74 18                	je     9da2 <line_parser+0x32c>
    9d8a:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9d8e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9d92:	48 89 d6             	mov    rsi,rdx
    9d95:	48 89 c7             	mov    rdi,rax
    9d98:	e8 ba f9 ff ff       	call   9757 <assign_port_number>
    9d9d:	e9 c2 0b 00 00       	jmp    a964 <line_parser+0xeee>
    9da2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9da6:	ba 08 00 00 00       	mov    edx,0x8
    9dab:	48 8d 35 3d 3d 00 00 	lea    rsi,[rip+0x3d3d]        # daef <_IO_stdin_used+0x1aef>
    9db2:	48 89 c7             	mov    rdi,rax
    9db5:	e8 06 87 ff ff       	call   24c0 <strncmp@plt>
    9dba:	85 c0                	test   eax,eax
    9dbc:	75 75                	jne    9e33 <line_parser+0x3bd>
    9dbe:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9dc2:	48 8d 50 09          	lea    rdx,[rax+0x9]
    9dc6:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9dca:	48 89 d6             	mov    rsi,rdx
    9dcd:	48 89 c7             	mov    rdi,rax
    9dd0:	e8 fb 86 ff ff       	call   24d0 <strcpy@plt>
    9dd5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9dd9:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9ddc:	85 c0                	test   eax,eax
    9dde:	75 2e                	jne    9e0e <line_parser+0x398>
    9de0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9de4:	8b 00                	mov    eax,DWORD PTR [rax]
    9de6:	85 c0                	test   eax,eax
    9de8:	75 24                	jne    9e0e <line_parser+0x398>
    9dea:	8b 15 f4 da 0f 00    	mov    edx,DWORD PTR [rip+0xfdaf4]        # 1078e4 <homenet>
    9df0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9df4:	89 10                	mov    DWORD PTR [rax],edx
    9df6:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9dfa:	48 89 c7             	mov    rdi,rax
    9dfd:	e8 b9 f9 ff ff       	call   97bb <check_port_number>
    9e02:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9e06:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9e09:	e9 56 0b 00 00       	jmp    a964 <line_parser+0xeee>
    9e0e:	8b 15 d0 da 0f 00    	mov    edx,DWORD PTR [rip+0xfdad0]        # 1078e4 <homenet>
    9e14:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e18:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    9e1b:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9e1f:	48 89 c7             	mov    rdi,rax
    9e22:	e8 94 f9 ff ff       	call   97bb <check_port_number>
    9e27:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9e2b:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9e2e:	e9 31 0b 00 00       	jmp    a964 <line_parser+0xeee>
    9e33:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9e37:	48 8d 35 ba 3c 00 00 	lea    rsi,[rip+0x3cba]        # daf8 <_IO_stdin_used+0x1af8>
    9e3e:	48 89 c7             	mov    rdi,rax
    9e41:	e8 3a 88 ff ff       	call   2680 <strcmp@plt>
    9e46:	85 c0                	test   eax,eax
    9e48:	75 30                	jne    9e7a <line_parser+0x404>
    9e4a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e4e:	8b 10                	mov    edx,DWORD PTR [rax]
    9e50:	8b 05 8e da 0f 00    	mov    eax,DWORD PTR [rip+0xfda8e]        # 1078e4 <homenet>
    9e56:	39 c2                	cmp    edx,eax
    9e58:	75 10                	jne    9e6a <line_parser+0x3f4>
    9e5a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e5e:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    9e65:	e9 fa 0a 00 00       	jmp    a964 <line_parser+0xeee>
    9e6a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e6e:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    9e75:	e9 ea 0a 00 00       	jmp    a964 <line_parser+0xeee>
    9e7a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9e7e:	48 8d 35 76 3c 00 00 	lea    rsi,[rip+0x3c76]        # dafb <_IO_stdin_used+0x1afb>
    9e85:	48 89 c7             	mov    rdi,rax
    9e88:	e8 f3 87 ff ff       	call   2680 <strcmp@plt>
    9e8d:	85 c0                	test   eax,eax
    9e8f:	75 10                	jne    9ea1 <line_parser+0x42b>
    9e91:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9e95:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9e9c:	e9 c3 0a 00 00       	jmp    a964 <line_parser+0xeee>
    9ea1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9ea5:	ba 0c 00 00 00       	mov    edx,0xc
    9eaa:	48 8d 35 4d 3c 00 00 	lea    rsi,[rip+0x3c4d]        # dafe <_IO_stdin_used+0x1afe>
    9eb1:	48 89 c7             	mov    rdi,rax
    9eb4:	e8 07 86 ff ff       	call   24c0 <strncmp@plt>
    9eb9:	85 c0                	test   eax,eax
    9ebb:	75 7f                	jne    9f3c <line_parser+0x4c6>
    9ebd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9ec1:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9ec5:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9ec9:	48 89 d6             	mov    rsi,rdx
    9ecc:	48 89 c7             	mov    rdi,rax
    9ecf:	e8 fc 85 ff ff       	call   24d0 <strcpy@plt>
    9ed4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ed8:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9edb:	85 c0                	test   eax,eax
    9edd:	75 37                	jne    9f16 <line_parser+0x4a0>
    9edf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ee3:	8b 10                	mov    edx,DWORD PTR [rax]
    9ee5:	8b 05 f9 d9 0f 00    	mov    eax,DWORD PTR [rip+0xfd9f9]        # 1078e4 <homenet>
    9eeb:	39 c2                	cmp    edx,eax
    9eed:	75 27                	jne    9f16 <line_parser+0x4a0>
    9eef:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9ef3:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9efa:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9efe:	48 83 c0 01          	add    rax,0x1
    9f02:	48 89 c7             	mov    rdi,rax
    9f05:	e8 b1 f8 ff ff       	call   97bb <check_port_number>
    9f0a:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9f0e:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9f11:	e9 4e 0a 00 00       	jmp    a964 <line_parser+0xeee>
    9f16:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9f1a:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9f20:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    9f24:	48 83 c0 01          	add    rax,0x1
    9f28:	48 89 c7             	mov    rdi,rax
    9f2b:	e8 8b f8 ff ff       	call   97bb <check_port_number>
    9f30:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    9f34:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9f37:	e9 28 0a 00 00       	jmp    a964 <line_parser+0xeee>
    9f3c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f40:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f43:	3c 28                	cmp    al,0x28
    9f45:	0f 85 19 0a 00 00    	jne    a964 <line_parser+0xeee>
    9f4b:	c6 45 8c 01          	mov    BYTE PTR [rbp-0x74],0x1
    9f4f:	e9 34 0a 00 00       	jmp    a988 <line_parser+0xf12>
    9f54:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f58:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f5b:	3c 28                	cmp    al,0x28
    9f5d:	75 0e                	jne    9f6d <line_parser+0x4f7>
    9f5f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f63:	48 83 c0 01          	add    rax,0x1
    9f67:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9f6b:	eb 08                	jmp    9f75 <line_parser+0x4ff>
    9f6d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9f71:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9f75:	80 7d 8d 00          	cmp    BYTE PTR [rbp-0x73],0x0
    9f79:	0f 84 a4 00 00 00    	je     a023 <line_parser+0x5ad>
    9f7f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f83:	48 89 c7             	mov    rdi,rax
    9f86:	e8 d5 85 ff ff       	call   2560 <strlen@plt>
    9f8b:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9f8f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f93:	48 01 d0             	add    rax,rdx
    9f96:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f99:	3c 3b                	cmp    al,0x3b
    9f9b:	75 33                	jne    9fd0 <line_parser+0x55a>
    9f9d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fa1:	48 89 c7             	mov    rdi,rax
    9fa4:	e8 b7 85 ff ff       	call   2560 <strlen@plt>
    9fa9:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    9fad:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9fb1:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    9fb8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fbc:	48 89 c6             	mov    rsi,rax
    9fbf:	48 89 cf             	mov    rdi,rcx
    9fc2:	e8 49 86 ff ff       	call   2610 <strncat@plt>
    9fc7:	c6 45 8d 00          	mov    BYTE PTR [rbp-0x73],0x0
    9fcb:	e9 b8 09 00 00       	jmp    a988 <line_parser+0xf12>
    9fd0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9fd4:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    9fdb:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9fdf:	48 89 c6             	mov    rsi,rax
    9fe2:	48 89 d7             	mov    rdi,rdx
    9fe5:	e8 16 88 ff ff       	call   2800 <strcat@plt>
    9fea:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    9fee:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    9ff5:	48 89 d0             	mov    rax,rdx
    9ff8:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    9fff:	48 89 c6             	mov    rsi,rax
    a002:	b8 00 00 00 00       	mov    eax,0x0
    a007:	48 89 f7             	mov    rdi,rsi
    a00a:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a00c:	48 89 c8             	mov    rax,rcx
    a00f:	48 f7 d0             	not    rax
    a012:	48 83 e8 01          	sub    rax,0x1
    a016:	48 01 d0             	add    rax,rdx
    a019:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a01e:	e9 41 09 00 00       	jmp    a964 <line_parser+0xeee>
    a023:	80 7d 8e 00          	cmp    BYTE PTR [rbp-0x72],0x0
    a027:	0f 84 95 00 00 00    	je     a0c2 <line_parser+0x64c>
    a02d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a031:	48 8d 35 d3 3a 00 00 	lea    rsi,[rip+0x3ad3]        # db0b <_IO_stdin_used+0x1b0b>
    a038:	48 89 c7             	mov    rdi,rax
    a03b:	e8 40 88 ff ff       	call   2880 <strstr@plt>
    a040:	48 85 c0             	test   rax,rax
    a043:	74 30                	je     a075 <line_parser+0x5ff>
    a045:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a049:	48 89 c7             	mov    rdi,rax
    a04c:	e8 0f 85 ff ff       	call   2560 <strlen@plt>
    a051:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    a055:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a059:	48 8d 48 40          	lea    rcx,[rax+0x40]
    a05d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a061:	48 89 c6             	mov    rsi,rax
    a064:	48 89 cf             	mov    rdi,rcx
    a067:	e8 a4 85 ff ff       	call   2610 <strncat@plt>
    a06c:	c6 45 8e 00          	mov    BYTE PTR [rbp-0x72],0x0
    a070:	e9 13 09 00 00       	jmp    a988 <line_parser+0xf12>
    a075:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a079:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a07d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a081:	48 89 c6             	mov    rsi,rax
    a084:	48 89 d7             	mov    rdi,rdx
    a087:	e8 74 87 ff ff       	call   2800 <strcat@plt>
    a08c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a090:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a094:	48 89 d0             	mov    rax,rdx
    a097:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a09e:	48 89 c6             	mov    rsi,rax
    a0a1:	b8 00 00 00 00       	mov    eax,0x0
    a0a6:	48 89 f7             	mov    rdi,rsi
    a0a9:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a0ab:	48 89 c8             	mov    rax,rcx
    a0ae:	48 f7 d0             	not    rax
    a0b1:	48 83 e8 01          	sub    rax,0x1
    a0b5:	48 01 d0             	add    rax,rdx
    a0b8:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a0bd:	e9 a2 08 00 00       	jmp    a964 <line_parser+0xeee>
    a0c2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a0c6:	ba 06 00 00 00       	mov    edx,0x6
    a0cb:	48 8d 35 3c 3a 00 00 	lea    rsi,[rip+0x3a3c]        # db0e <_IO_stdin_used+0x1b0e>
    a0d2:	48 89 c7             	mov    rdi,rax
    a0d5:	e8 e6 83 ff ff       	call   24c0 <strncmp@plt>
    a0da:	85 c0                	test   eax,eax
    a0dc:	75 34                	jne    a112 <line_parser+0x69c>
    a0de:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a0e2:	48 89 c7             	mov    rdi,rax
    a0e5:	e8 76 84 ff ff       	call   2560 <strlen@plt>
    a0ea:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a0ee:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a0f2:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a0f6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a0fa:	48 83 c0 20          	add    rax,0x20
    a0fe:	48 89 ce             	mov    rsi,rcx
    a101:	48 89 c7             	mov    rdi,rax
    a104:	e8 a7 83 ff ff       	call   24b0 <strncpy@plt>
    a109:	c6 45 8f 01          	mov    BYTE PTR [rbp-0x71],0x1
    a10d:	e9 52 08 00 00       	jmp    a964 <line_parser+0xeee>
    a112:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a116:	ba 05 00 00 00       	mov    edx,0x5
    a11b:	48 8d 35 f3 39 00 00 	lea    rsi,[rip+0x39f3]        # db15 <_IO_stdin_used+0x1b15>
    a122:	48 89 c7             	mov    rdi,rax
    a125:	e8 96 83 ff ff       	call   24c0 <strncmp@plt>
    a12a:	85 c0                	test   eax,eax
    a12c:	75 63                	jne    a191 <line_parser+0x71b>
    a12e:	c6 45 8d 01          	mov    BYTE PTR [rbp-0x73],0x1
    a132:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a136:	48 83 c0 05          	add    rax,0x5
    a13a:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    a13e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a142:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a149:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    a14d:	48 89 c6             	mov    rsi,rax
    a150:	48 89 d7             	mov    rdi,rdx
    a153:	e8 a8 86 ff ff       	call   2800 <strcat@plt>
    a158:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a15c:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a163:	48 89 d0             	mov    rax,rdx
    a166:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a16d:	48 89 c6             	mov    rsi,rax
    a170:	b8 00 00 00 00       	mov    eax,0x0
    a175:	48 89 f7             	mov    rdi,rsi
    a178:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a17a:	48 89 c8             	mov    rax,rcx
    a17d:	48 f7 d0             	not    rax
    a180:	48 83 e8 01          	sub    rax,0x1
    a184:	48 01 d0             	add    rax,rdx
    a187:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a18c:	e9 d3 07 00 00       	jmp    a964 <line_parser+0xeee>
    a191:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a195:	ba 06 00 00 00       	mov    edx,0x6
    a19a:	48 8d 35 7a 39 00 00 	lea    rsi,[rip+0x397a]        # db1b <_IO_stdin_used+0x1b1b>
    a1a1:	48 89 c7             	mov    rdi,rax
    a1a4:	e8 17 83 ff ff       	call   24c0 <strncmp@plt>
    a1a9:	85 c0                	test   eax,eax
    a1ab:	75 31                	jne    a1de <line_parser+0x768>
    a1ad:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a1b1:	48 89 c7             	mov    rdi,rax
    a1b4:	e8 26 f8 ff ff       	call   99df <sc_strip>
    a1b9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a1bd:	48 83 c0 06          	add    rax,0x6
    a1c1:	48 89 c7             	mov    rdi,rax
    a1c4:	e8 17 86 ff ff       	call   27e0 <atoi@plt>
    a1c9:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    a1cc:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a1d0:	8b 55 bc             	mov    edx,DWORD PTR [rbp-0x44]
    a1d3:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    a1d9:	e9 86 07 00 00       	jmp    a964 <line_parser+0xeee>
    a1de:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a1e2:	ba 05 00 00 00       	mov    edx,0x5
    a1e7:	48 8d 35 34 39 00 00 	lea    rsi,[rip+0x3934]        # db22 <_IO_stdin_used+0x1b22>
    a1ee:	48 89 c7             	mov    rdi,rax
    a1f1:	e8 ca 82 ff ff       	call   24c0 <strncmp@plt>
    a1f6:	85 c0                	test   eax,eax
    a1f8:	75 3f                	jne    a239 <line_parser+0x7c3>
    a1fa:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a1fe:	48 89 c7             	mov    rdi,rax
    a201:	e8 5a 83 ff ff       	call   2560 <strlen@plt>
    a206:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    a20a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a20e:	48 8d 48 05          	lea    rcx,[rax+0x5]
    a212:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    a216:	48 89 ce             	mov    rsi,rcx
    a219:	48 89 c7             	mov    rdi,rax
    a21c:	e8 8f 82 ff ff       	call   24b0 <strncpy@plt>
    a221:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    a225:	48 8d 45 ee          	lea    rax,[rbp-0x12]
    a229:	48 89 d6             	mov    rsi,rdx
    a22c:	48 89 c7             	mov    rdi,rax
    a22f:	e8 8b f6 ff ff       	call   98bf <get_ruletype>
    a234:	e9 2b 07 00 00       	jmp    a964 <line_parser+0xeee>
    a239:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a23d:	ba 08 00 00 00       	mov    edx,0x8
    a242:	48 8d 35 df 38 00 00 	lea    rsi,[rip+0x38df]        # db28 <_IO_stdin_used+0x1b28>
    a249:	48 89 c7             	mov    rdi,rax
    a24c:	e8 6f 82 ff ff       	call   24c0 <strncmp@plt>
    a251:	85 c0                	test   eax,eax
    a253:	0f 85 a5 00 00 00    	jne    a2fe <line_parser+0x888>
    a259:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a25d:	48 83 c0 08          	add    rax,0x8
    a261:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    a265:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a269:	48 8d 35 9b 38 00 00 	lea    rsi,[rip+0x389b]        # db0b <_IO_stdin_used+0x1b0b>
    a270:	48 89 c7             	mov    rdi,rax
    a273:	e8 08 86 ff ff       	call   2880 <strstr@plt>
    a278:	48 85 c0             	test   rax,rax
    a27b:	74 30                	je     a2ad <line_parser+0x837>
    a27d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a281:	48 89 c7             	mov    rdi,rax
    a284:	e8 d7 82 ff ff       	call   2560 <strlen@plt>
    a289:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    a28d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a291:	48 8d 48 08          	lea    rcx,[rax+0x8]
    a295:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a299:	48 83 c0 40          	add    rax,0x40
    a29d:	48 89 ce             	mov    rsi,rcx
    a2a0:	48 89 c7             	mov    rdi,rax
    a2a3:	e8 08 82 ff ff       	call   24b0 <strncpy@plt>
    a2a8:	e9 b7 06 00 00       	jmp    a964 <line_parser+0xeee>
    a2ad:	c6 45 8e 01          	mov    BYTE PTR [rbp-0x72],0x1
    a2b1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a2b5:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a2b9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    a2bd:	48 89 c6             	mov    rsi,rax
    a2c0:	48 89 d7             	mov    rdi,rdx
    a2c3:	e8 38 85 ff ff       	call   2800 <strcat@plt>
    a2c8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a2cc:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a2d0:	48 89 d0             	mov    rax,rdx
    a2d3:	48 c7 c1 ff ff ff ff 	mov    rcx,0xffffffffffffffff
    a2da:	48 89 c6             	mov    rsi,rax
    a2dd:	b8 00 00 00 00       	mov    eax,0x0
    a2e2:	48 89 f7             	mov    rdi,rsi
    a2e5:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
    a2e7:	48 89 c8             	mov    rax,rcx
    a2ea:	48 f7 d0             	not    rax
    a2ed:	48 83 e8 01          	sub    rax,0x1
    a2f1:	48 01 d0             	add    rax,rdx
    a2f4:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a2f9:	e9 66 06 00 00       	jmp    a964 <line_parser+0xeee>
    a2fe:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a302:	ba 04 00 00 00       	mov    edx,0x4
    a307:	48 8d 35 23 38 00 00 	lea    rsi,[rip+0x3823]        # db31 <_IO_stdin_used+0x1b31>
    a30e:	48 89 c7             	mov    rdi,rax
    a311:	e8 aa 81 ff ff       	call   24c0 <strncmp@plt>
    a316:	85 c0                	test   eax,eax
    a318:	0f 85 8e 00 00 00    	jne    a3ac <line_parser+0x936>
    a31e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a322:	48 8d 35 af 37 00 00 	lea    rsi,[rip+0x37af]        # dad8 <_IO_stdin_used+0x1ad8>
    a329:	48 89 c7             	mov    rdi,rax
    a32c:	e8 0f 83 ff ff       	call   2640 <strcspn@plt>
    a331:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    a335:	48 01 d0             	add    rax,rdx
    a338:	c6 00 00             	mov    BYTE PTR [rax],0x0
    a33b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a33f:	48 83 c0 04          	add    rax,0x4
    a343:	48 89 c7             	mov    rdi,rax
    a346:	e8 d1 f2 ff ff       	call   961c <isdigit>
    a34b:	84 c0                	test   al,al
    a34d:	74 47                	je     a396 <line_parser+0x920>
    a34f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a353:	48 83 c0 04          	add    rax,0x4
    a357:	48 89 c7             	mov    rdi,rax
    a35a:	e8 81 84 ff ff       	call   27e0 <atoi@plt>
    a35f:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
    a362:	83 7d b8 00          	cmp    DWORD PTR [rbp-0x48],0x0
    a366:	7e 18                	jle    a380 <line_parser+0x90a>
    a368:	83 7d b8 0a          	cmp    DWORD PTR [rbp-0x48],0xa
    a36c:	7f 12                	jg     a380 <line_parser+0x90a>
    a36e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a372:	8b 55 b8             	mov    edx,DWORD PTR [rbp-0x48]
    a375:	89 90 4c 01 00 00    	mov    DWORD PTR [rax+0x14c],edx
    a37b:	e9 e4 05 00 00       	jmp    a964 <line_parser+0xeee>
    a380:	48 8d 3d b1 37 00 00 	lea    rdi,[rip+0x37b1]        # db38 <_IO_stdin_used+0x1b38>
    a387:	e8 74 81 ff ff       	call   2500 <puts@plt>
    a38c:	bf ff ff ff ff       	mov    edi,0xffffffff
    a391:	e8 aa 84 ff ff       	call   2840 <exit@plt>
    a396:	48 8d 3d c3 37 00 00 	lea    rdi,[rip+0x37c3]        # db60 <_IO_stdin_used+0x1b60>
    a39d:	e8 5e 81 ff ff       	call   2500 <puts@plt>
    a3a2:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3a7:	e8 94 84 ff ff       	call   2840 <exit@plt>
    a3ac:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a3b0:	ba 06 00 00 00       	mov    edx,0x6
    a3b5:	48 8d 35 cc 37 00 00 	lea    rsi,[rip+0x37cc]        # db88 <_IO_stdin_used+0x1b88>
    a3bc:	48 89 c7             	mov    rdi,rax
    a3bf:	e8 fc 80 ff ff       	call   24c0 <strncmp@plt>
    a3c4:	85 c0                	test   eax,eax
    a3c6:	0f 85 9b 00 00 00    	jne    a467 <line_parser+0x9f1>
    a3cc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a3d0:	48 89 c7             	mov    rdi,rax
    a3d3:	e8 07 f6 ff ff       	call   99df <sc_strip>
    a3d8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a3dc:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a3e2:	3d 80 00 00 00       	cmp    eax,0x80
    a3e7:	75 58                	jne    a441 <line_parser+0x9cb>
    a3e9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a3ed:	48 83 c0 06          	add    rax,0x6
    a3f1:	ba ff 00 00 00       	mov    edx,0xff
    a3f6:	be 00 00 00 00       	mov    esi,0x0
    a3fb:	48 89 c7             	mov    rdi,rax
    a3fe:	e8 87 f5 ff ff       	call   998a <numeric_check>
    a403:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    a406:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    a40a:	75 16                	jne    a422 <line_parser+0x9ac>
    a40c:	48 8d 3d 7c 37 00 00 	lea    rdi,[rip+0x377c]        # db8f <_IO_stdin_used+0x1b8f>
    a413:	e8 e8 80 ff ff       	call   2500 <puts@plt>
    a418:	bf ff ff ff ff       	mov    edi,0xffffffff
    a41d:	e8 1e 84 ff ff       	call   2840 <exit@plt>
    a422:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    a425:	89 c2                	mov    edx,eax
    a427:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a42b:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    a431:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a435:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    a43c:	e9 23 05 00 00       	jmp    a964 <line_parser+0xeee>
    a441:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a445:	48 83 c0 20          	add    rax,0x20
    a449:	48 89 c6             	mov    rsi,rax
    a44c:	48 8d 3d 55 37 00 00 	lea    rdi,[rip+0x3755]        # dba8 <_IO_stdin_used+0x1ba8>
    a453:	b8 00 00 00 00       	mov    eax,0x0
    a458:	e8 63 81 ff ff       	call   25c0 <printf@plt>
    a45d:	bf ff ff ff ff       	mov    edi,0xffffffff
    a462:	e8 d9 83 ff ff       	call   2840 <exit@plt>
    a467:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a46b:	ba 06 00 00 00       	mov    edx,0x6
    a470:	48 8d 35 68 37 00 00 	lea    rsi,[rip+0x3768]        # dbdf <_IO_stdin_used+0x1bdf>
    a477:	48 89 c7             	mov    rdi,rax
    a47a:	e8 41 80 ff ff       	call   24c0 <strncmp@plt>
    a47f:	85 c0                	test   eax,eax
    a481:	0f 85 86 00 00 00    	jne    a50d <line_parser+0xa97>
    a487:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a48b:	48 89 c7             	mov    rdi,rax
    a48e:	e8 4c f5 ff ff       	call   99df <sc_strip>
    a493:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a497:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a49d:	3d 80 00 00 00       	cmp    eax,0x80
    a4a2:	75 58                	jne    a4fc <line_parser+0xa86>
    a4a4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a4a8:	48 83 c0 06          	add    rax,0x6
    a4ac:	ba ff 00 00 00       	mov    edx,0xff
    a4b1:	be 00 00 00 00       	mov    esi,0x0
    a4b6:	48 89 c7             	mov    rdi,rax
    a4b9:	e8 cc f4 ff ff       	call   998a <numeric_check>
    a4be:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    a4c1:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    a4c5:	75 16                	jne    a4dd <line_parser+0xa67>
    a4c7:	48 8d 3d 18 37 00 00 	lea    rdi,[rip+0x3718]        # dbe6 <_IO_stdin_used+0x1be6>
    a4ce:	e8 2d 80 ff ff       	call   2500 <puts@plt>
    a4d3:	bf ff ff ff ff       	mov    edi,0xffffffff
    a4d8:	e8 63 83 ff ff       	call   2840 <exit@plt>
    a4dd:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    a4e0:	89 c2                	mov    edx,eax
    a4e2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a4e6:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a4ec:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a4f0:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a4f7:	e9 68 04 00 00       	jmp    a964 <line_parser+0xeee>
    a4fc:	48 8d 3d fd 36 00 00 	lea    rdi,[rip+0x36fd]        # dc00 <_IO_stdin_used+0x1c00>
    a503:	e8 f8 7f ff ff       	call   2500 <puts@plt>
    a508:	e9 57 04 00 00       	jmp    a964 <line_parser+0xeee>
    a50d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a511:	ba 08 00 00 00       	mov    edx,0x8
    a516:	48 8d 35 15 37 00 00 	lea    rsi,[rip+0x3715]        # dc32 <_IO_stdin_used+0x1c32>
    a51d:	48 89 c7             	mov    rdi,rax
    a520:	e8 9b 7f ff ff       	call   24c0 <strncmp@plt>
    a525:	85 c0                	test   eax,eax
    a527:	0f 85 8c 00 00 00    	jne    a5b9 <line_parser+0xb43>
    a52d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a531:	48 89 c7             	mov    rdi,rax
    a534:	e8 a6 f4 ff ff       	call   99df <sc_strip>
    a539:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a53d:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a543:	3d 80 00 00 00       	cmp    eax,0x80
    a548:	75 59                	jne    a5a3 <line_parser+0xb2d>
    a54a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a54e:	48 83 c0 08          	add    rax,0x8
    a552:	ba ff ff 00 00       	mov    edx,0xffff
    a557:	be 00 00 00 00       	mov    esi,0x0
    a55c:	48 89 c7             	mov    rdi,rax
    a55f:	e8 26 f4 ff ff       	call   998a <numeric_check>
    a564:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    a567:	83 7d ac ff          	cmp    DWORD PTR [rbp-0x54],0xffffffff
    a56b:	75 16                	jne    a583 <line_parser+0xb0d>
    a56d:	48 8d 3d c7 36 00 00 	lea    rdi,[rip+0x36c7]        # dc3b <_IO_stdin_used+0x1c3b>
    a574:	e8 87 7f ff ff       	call   2500 <puts@plt>
    a579:	bf ff ff ff ff       	mov    edi,0xffffffff
    a57e:	e8 bd 82 ff ff       	call   2840 <exit@plt>
    a583:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
    a586:	89 c2                	mov    edx,eax
    a588:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a58c:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a593:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a597:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a59e:	e9 c1 03 00 00       	jmp    a964 <line_parser+0xeee>
    a5a3:	48 8d 3d ae 36 00 00 	lea    rdi,[rip+0x36ae]        # dc58 <_IO_stdin_used+0x1c58>
    a5aa:	e8 51 7f ff ff       	call   2500 <puts@plt>
    a5af:	bf ff ff ff ff       	mov    edi,0xffffffff
    a5b4:	e8 87 82 ff ff       	call   2840 <exit@plt>
    a5b9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a5bd:	ba 09 00 00 00       	mov    edx,0x9
    a5c2:	48 8d 35 c3 36 00 00 	lea    rsi,[rip+0x36c3]        # dc8c <_IO_stdin_used+0x1c8c>
    a5c9:	48 89 c7             	mov    rdi,rax
    a5cc:	e8 ef 7e ff ff       	call   24c0 <strncmp@plt>
    a5d1:	85 c0                	test   eax,eax
    a5d3:	75 7a                	jne    a64f <line_parser+0xbd9>
    a5d5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a5d9:	48 89 c7             	mov    rdi,rax
    a5dc:	e8 fe f3 ff ff       	call   99df <sc_strip>
    a5e1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a5e5:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a5eb:	3d 80 00 00 00       	cmp    eax,0x80
    a5f0:	0f 85 6e 03 00 00    	jne    a964 <line_parser+0xeee>
    a5f6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a5fa:	48 83 c0 09          	add    rax,0x9
    a5fe:	ba ff ff 00 00       	mov    edx,0xffff
    a603:	be 00 00 00 00       	mov    esi,0x0
    a608:	48 89 c7             	mov    rdi,rax
    a60b:	e8 7a f3 ff ff       	call   998a <numeric_check>
    a610:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    a613:	83 7d a8 ff          	cmp    DWORD PTR [rbp-0x58],0xffffffff
    a617:	75 16                	jne    a62f <line_parser+0xbb9>
    a619:	48 8d 3d 76 36 00 00 	lea    rdi,[rip+0x3676]        # dc96 <_IO_stdin_used+0x1c96>
    a620:	e8 db 7e ff ff       	call   2500 <puts@plt>
    a625:	bf ff ff ff ff       	mov    edi,0xffffffff
    a62a:	e8 11 82 ff ff       	call   2840 <exit@plt>
    a62f:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    a632:	89 c2                	mov    edx,eax
    a634:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a638:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a63f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a643:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a64a:	e9 15 03 00 00       	jmp    a964 <line_parser+0xeee>
    a64f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a653:	ba 04 00 00 00       	mov    edx,0x4
    a658:	48 8d 35 53 36 00 00 	lea    rsi,[rip+0x3653]        # dcb2 <_IO_stdin_used+0x1cb2>
    a65f:	48 89 c7             	mov    rdi,rax
    a662:	e8 59 7e ff ff       	call   24c0 <strncmp@plt>
    a667:	85 c0                	test   eax,eax
    a669:	75 64                	jne    a6cf <line_parser+0xc59>
    a66b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a66f:	48 89 c7             	mov    rdi,rax
    a672:	e8 68 f3 ff ff       	call   99df <sc_strip>
    a677:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a67b:	48 83 c0 04          	add    rax,0x4
    a67f:	ba ff 00 00 00       	mov    edx,0xff
    a684:	be 00 00 00 00       	mov    esi,0x0
    a689:	48 89 c7             	mov    rdi,rax
    a68c:	e8 f9 f2 ff ff       	call   998a <numeric_check>
    a691:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    a694:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    a698:	75 16                	jne    a6b0 <line_parser+0xc3a>
    a69a:	48 8d 3d 16 36 00 00 	lea    rdi,[rip+0x3616]        # dcb7 <_IO_stdin_used+0x1cb7>
    a6a1:	e8 5a 7e ff ff       	call   2500 <puts@plt>
    a6a6:	bf ff ff ff ff       	mov    edi,0xffffffff
    a6ab:	e8 90 81 ff ff       	call   2840 <exit@plt>
    a6b0:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    a6b3:	89 c2                	mov    edx,eax
    a6b5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a6b9:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a6bf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a6c3:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a6ca:	e9 95 02 00 00       	jmp    a964 <line_parser+0xeee>
    a6cf:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a6d3:	ba 07 00 00 00       	mov    edx,0x7
    a6d8:	48 8d 35 ea 35 00 00 	lea    rsi,[rip+0x35ea]        # dcc9 <_IO_stdin_used+0x1cc9>
    a6df:	48 89 c7             	mov    rdi,rax
    a6e2:	e8 d9 7d ff ff       	call   24c0 <strncmp@plt>
    a6e7:	85 c0                	test   eax,eax
    a6e9:	75 6e                	jne    a759 <line_parser+0xce3>
    a6eb:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a6ef:	48 89 c7             	mov    rdi,rax
    a6f2:	e8 e8 f2 ff ff       	call   99df <sc_strip>
    a6f7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a6fb:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a701:	83 f8 7e             	cmp    eax,0x7e
    a704:	75 3d                	jne    a743 <line_parser+0xccd>
    a706:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a70a:	48 89 c7             	mov    rdi,rax
    a70d:	e8 4e 7e ff ff       	call   2560 <strlen@plt>
    a712:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a716:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a71a:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a71e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a722:	48 05 53 03 00 00    	add    rax,0x353
    a728:	48 89 ce             	mov    rsi,rcx
    a72b:	48 89 c7             	mov    rdi,rax
    a72e:	e8 7d 7d ff ff       	call   24b0 <strncpy@plt>
    a733:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a737:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a73e:	e9 21 02 00 00       	jmp    a964 <line_parser+0xeee>
    a743:	48 8d 3d 8e 35 00 00 	lea    rdi,[rip+0x358e]        # dcd8 <_IO_stdin_used+0x1cd8>
    a74a:	e8 b1 7d ff ff       	call   2500 <puts@plt>
    a74f:	bf ff ff ff ff       	mov    edi,0xffffffff
    a754:	e8 e7 80 ff ff       	call   2840 <exit@plt>
    a759:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a75d:	ba 04 00 00 00       	mov    edx,0x4
    a762:	48 8d 35 a0 35 00 00 	lea    rsi,[rip+0x35a0]        # dd09 <_IO_stdin_used+0x1d09>
    a769:	48 89 c7             	mov    rdi,rax
    a76c:	e8 4f 7d ff ff       	call   24c0 <strncmp@plt>
    a771:	85 c0                	test   eax,eax
    a773:	75 78                	jne    a7ed <line_parser+0xd77>
    a775:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a779:	48 89 c7             	mov    rdi,rax
    a77c:	e8 5e f2 ff ff       	call   99df <sc_strip>
    a781:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a785:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a78b:	83 f8 7e             	cmp    eax,0x7e
    a78e:	0f 85 d0 01 00 00    	jne    a964 <line_parser+0xeee>
    a794:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a798:	48 83 c0 04          	add    rax,0x4
    a79c:	ba ff ff ff ff       	mov    edx,0xffffffff
    a7a1:	be 00 00 00 00       	mov    esi,0x0
    a7a6:	48 89 c7             	mov    rdi,rax
    a7a9:	e8 dc f1 ff ff       	call   998a <numeric_check>
    a7ae:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    a7b1:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    a7b5:	75 16                	jne    a7cd <line_parser+0xd57>
    a7b7:	48 8d 3d 50 35 00 00 	lea    rdi,[rip+0x3550]        # dd0e <_IO_stdin_used+0x1d0e>
    a7be:	e8 3d 7d ff ff       	call   2500 <puts@plt>
    a7c3:	bf ff ff ff ff       	mov    edi,0xffffffff
    a7c8:	e8 73 80 ff ff       	call   2840 <exit@plt>
    a7cd:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a7d0:	89 c2                	mov    edx,eax
    a7d2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a7d6:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a7dd:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a7e1:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a7e8:	e9 77 01 00 00       	jmp    a964 <line_parser+0xeee>
    a7ed:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a7f1:	ba 06 00 00 00       	mov    edx,0x6
    a7f6:	48 8d 35 23 35 00 00 	lea    rsi,[rip+0x3523]        # dd20 <_IO_stdin_used+0x1d20>
    a7fd:	48 89 c7             	mov    rdi,rax
    a800:	e8 bb 7c ff ff       	call   24c0 <strncmp@plt>
    a805:	85 c0                	test   eax,eax
    a807:	75 7c                	jne    a885 <line_parser+0xe0f>
    a809:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a80d:	48 89 c7             	mov    rdi,rax
    a810:	e8 4b 7d ff ff       	call   2560 <strlen@plt>
    a815:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a819:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a81d:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a821:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a825:	48 05 10 02 00 00    	add    rax,0x210
    a82b:	48 89 ce             	mov    rsi,rcx
    a82e:	48 89 c7             	mov    rdi,rax
    a831:	e8 7a 7c ff ff       	call   24b0 <strncpy@plt>
    a836:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a83a:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a841:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a845:	48 05 d0 01 00 00    	add    rax,0x1d0
    a84b:	ba 00 00 00 00       	mov    edx,0x0
    a850:	48 89 ce             	mov    rsi,rcx
    a853:	48 89 c7             	mov    rdi,rax
    a856:	e8 d5 7d ff ff       	call   2630 <regcomp@plt>
    a85b:	85 c0                	test   eax,eax
    a85d:	74 16                	je     a875 <line_parser+0xdff>
    a85f:	48 8d 3d c2 34 00 00 	lea    rdi,[rip+0x34c2]        # dd28 <_IO_stdin_used+0x1d28>
    a866:	e8 95 7c ff ff       	call   2500 <puts@plt>
    a86b:	bf ff ff ff ff       	mov    edi,0xffffffff
    a870:	e8 cb 7f ff ff       	call   2840 <exit@plt>
    a875:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a879:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a880:	e9 df 00 00 00       	jmp    a964 <line_parser+0xeee>
    a885:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a889:	ba 06 00 00 00       	mov    edx,0x6
    a88e:	48 8d 35 b8 34 00 00 	lea    rsi,[rip+0x34b8]        # dd4d <_IO_stdin_used+0x1d4d>
    a895:	48 89 c7             	mov    rdi,rax
    a898:	e8 23 7c ff ff       	call   24c0 <strncmp@plt>
    a89d:	85 c0                	test   eax,eax
    a89f:	75 2d                	jne    a8ce <line_parser+0xe58>
    a8a1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8a5:	48 89 c7             	mov    rdi,rax
    a8a8:	e8 32 f1 ff ff       	call   99df <sc_strip>
    a8ad:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8b1:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a8b5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a8b9:	ba 01 00 00 00       	mov    edx,0x1
    a8be:	48 89 ce             	mov    rsi,rcx
    a8c1:	48 89 c7             	mov    rdi,rax
    a8c4:	e8 94 03 00 00       	call   ac5d <d_op_parser>
    a8c9:	e9 96 00 00 00       	jmp    a964 <line_parser+0xeee>
    a8ce:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8d2:	ba 07 00 00 00       	mov    edx,0x7
    a8d7:	48 8d 35 76 34 00 00 	lea    rsi,[rip+0x3476]        # dd54 <_IO_stdin_used+0x1d54>
    a8de:	48 89 c7             	mov    rdi,rax
    a8e1:	e8 da 7b ff ff       	call   24c0 <strncmp@plt>
    a8e6:	85 c0                	test   eax,eax
    a8e8:	75 27                	jne    a911 <line_parser+0xe9b>
    a8ea:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8ee:	48 89 c7             	mov    rdi,rax
    a8f1:	e8 e9 f0 ff ff       	call   99df <sc_strip>
    a8f6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8fa:	48 83 c0 07          	add    rax,0x7
    a8fe:	48 89 c7             	mov    rdi,rax
    a901:	e8 da 7e ff ff       	call   27e0 <atoi@plt>
    a906:	89 c2                	mov    edx,eax
    a908:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a90c:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a90f:	eb 53                	jmp    a964 <line_parser+0xeee>
    a911:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a915:	ba 0b 00 00 00       	mov    edx,0xb
    a91a:	48 8d 35 3b 34 00 00 	lea    rsi,[rip+0x343b]        # dd5c <_IO_stdin_used+0x1d5c>
    a921:	48 89 c7             	mov    rdi,rax
    a924:	e8 97 7b ff ff       	call   24c0 <strncmp@plt>
    a929:	85 c0                	test   eax,eax
    a92b:	75 10                	jne    a93d <line_parser+0xec7>
    a92d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a931:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a938:	00 00 00 
    a93b:	eb 27                	jmp    a964 <line_parser+0xeee>
    a93d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a941:	ba 09 00 00 00       	mov    edx,0x9
    a946:	48 8d 35 1b 34 00 00 	lea    rsi,[rip+0x341b]        # dd68 <_IO_stdin_used+0x1d68>
    a94d:	48 89 c7             	mov    rdi,rax
    a950:	e8 6b 7b ff ff       	call   24c0 <strncmp@plt>
    a955:	85 c0                	test   eax,eax
    a957:	75 0b                	jne    a964 <line_parser+0xeee>
    a959:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a95d:	c6 80 48 01 00 00 01 	mov    BYTE PTR [rax+0x148],0x1
    a964:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a967:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a96a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a96e:	48 89 c7             	mov    rdi,rax
    a971:	e8 ea 7b ff ff       	call   2560 <strlen@plt>
    a976:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a97a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a97e:	48 01 d0             	add    rax,rdx
    a981:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a984:	3c 29                	cmp    al,0x29
    a986:	74 3a                	je     a9c2 <line_parser+0xf4c>
    a988:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a98b:	3b 45 9c             	cmp    eax,DWORD PTR [rbp-0x64]
    a98e:	7f 0c                	jg     a99c <line_parser+0xf26>
    a990:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a993:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
    a996:	0f 8e e9 f1 ff ff    	jle    9b85 <line_parser+0x10f>
    a99c:	0f b6 45 8f          	movzx  eax,BYTE PTR [rbp-0x71]
    a9a0:	83 f0 01             	xor    eax,0x1
    a9a3:	84 c0                	test   al,al
    a9a5:	74 1c                	je     a9c3 <line_parser+0xf4d>
    a9a7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a9ab:	48 83 c0 20          	add    rax,0x20
    a9af:	48 b9 55 6e 74 69 74 	movabs rcx,0x64656c7469746e55
    a9b6:	6c 65 64 
    a9b9:	48 89 08             	mov    QWORD PTR [rax],rcx
    a9bc:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    a9c0:	eb 01                	jmp    a9c3 <line_parser+0xf4d>
    a9c2:	90                   	nop
    a9c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    a9c7:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    a9ce:	00 00 
    a9d0:	74 05                	je     a9d7 <line_parser+0xf61>
    a9d2:	e8 a9 7b ff ff       	call   2580 <__stack_chk_fail@plt>
    a9d7:	c9                   	leave  
    a9d8:	c3                   	ret    

000000000000a9d9 <rule_processor>:
    a9d9:	f3 0f 1e fa          	endbr64 
    a9dd:	55                   	push   rbp
    a9de:	48 89 e5             	mov    rbp,rsp
    a9e1:	48 83 ec 10          	sub    rsp,0x10
    a9e5:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    a9ec:	eb 22                	jmp    aa10 <rule_processor+0x37>
    a9ee:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a9f1:	48 98                	cdqe   
    a9f3:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    a9fa:	48 8d 15 9f 66 00 00 	lea    rdx,[rip+0x669f]        # 110a0 <rules>
    aa01:	48 01 d0             	add    rax,rdx
    aa04:	48 89 c7             	mov    rdi,rax
    aa07:	e8 13 00 00 00       	call   aa1f <process_rule>
    aa0c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    aa10:	8b 05 fe 65 00 00    	mov    eax,DWORD PTR [rip+0x65fe]        # 11014 <num_rules>
    aa16:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    aa19:	7e d3                	jle    a9ee <rule_processor+0x15>
    aa1b:	90                   	nop
    aa1c:	90                   	nop
    aa1d:	c9                   	leave  
    aa1e:	c3                   	ret    

000000000000aa1f <process_rule>:
    aa1f:	f3 0f 1e fa          	endbr64 
    aa23:	55                   	push   rbp
    aa24:	48 89 e5             	mov    rbp,rsp
    aa27:	41 57                	push   r15
    aa29:	41 56                	push   r14
    aa2b:	41 54                	push   r12
    aa2d:	53                   	push   rbx
    aa2e:	48 83 ec 40          	sub    rsp,0x40
    aa32:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    aa36:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aa3d:	00 00 
    aa3f:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    aa43:	31 c0                	xor    eax,eax
    aa45:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa49:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    aa50:	83 f0 01             	xor    eax,0x1
    aa53:	84 c0                	test   al,al
    aa55:	0f 84 e0 01 00 00    	je     ac3b <process_rule+0x21c>
    aa5b:	48 89 e0             	mov    rax,rsp
    aa5e:	49 89 c4             	mov    r12,rax
    aa61:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa65:	48 83 c0 40          	add    rax,0x40
    aa69:	48 89 c7             	mov    rdi,rax
    aa6c:	e8 ef 7a ff ff       	call   2560 <strlen@plt>
    aa71:	48 83 c0 01          	add    rax,0x1
    aa75:	48 01 c0             	add    rax,rax
    aa78:	48 89 c2             	mov    rdx,rax
    aa7b:	48 83 ea 01          	sub    rdx,0x1
    aa7f:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    aa83:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    aa87:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    aa8e:	00 
    aa8f:	49 89 c6             	mov    r14,rax
    aa92:	41 bf 00 00 00 00    	mov    r15d,0x0
    aa98:	ba 10 00 00 00       	mov    edx,0x10
    aa9d:	48 83 ea 01          	sub    rdx,0x1
    aaa1:	48 01 d0             	add    rax,rdx
    aaa4:	be 10 00 00 00       	mov    esi,0x10
    aaa9:	ba 00 00 00 00       	mov    edx,0x0
    aaae:	48 f7 f6             	div    rsi
    aab1:	48 6b c0 10          	imul   rax,rax,0x10
    aab5:	48 89 c2             	mov    rdx,rax
    aab8:	48 81 e2 00 f0 ff ff 	and    rdx,0xfffffffffffff000
    aabf:	48 89 e3             	mov    rbx,rsp
    aac2:	48 29 d3             	sub    rbx,rdx
    aac5:	48 89 da             	mov    rdx,rbx
    aac8:	48 39 d4             	cmp    rsp,rdx
    aacb:	74 12                	je     aadf <process_rule+0xc0>
    aacd:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    aad4:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    aadb:	00 00 
    aadd:	eb e9                	jmp    aac8 <process_rule+0xa9>
    aadf:	48 89 c2             	mov    rdx,rax
    aae2:	81 e2 ff 0f 00 00    	and    edx,0xfff
    aae8:	48 29 d4             	sub    rsp,rdx
    aaeb:	48 89 c2             	mov    rdx,rax
    aaee:	81 e2 ff 0f 00 00    	and    edx,0xfff
    aaf4:	48 85 d2             	test   rdx,rdx
    aaf7:	74 10                	je     ab09 <process_rule+0xea>
    aaf9:	25 ff 0f 00 00       	and    eax,0xfff
    aafe:	48 83 e8 08          	sub    rax,0x8
    ab02:	48 01 e0             	add    rax,rsp
    ab05:	48 83 08 00          	or     QWORD PTR [rax],0x0
    ab09:	48 89 e0             	mov    rax,rsp
    ab0c:	48 83 c0 00          	add    rax,0x0
    ab10:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    ab14:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    ab1b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab1f:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ab23:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab27:	48 05 c8 02 00 00    	add    rax,0x2c8
    ab2d:	48 89 d6             	mov    rsi,rdx
    ab30:	48 89 c7             	mov    rdi,rax
    ab33:	e8 98 79 ff ff       	call   24d0 <strcpy@plt>
    ab38:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    ab3f:	e9 a4 00 00 00       	jmp    abe8 <process_rule+0x1c9>
    ab44:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ab48:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab4b:	48 98                	cdqe   
    ab4d:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab52:	3c 7c                	cmp    al,0x7c
    ab54:	75 18                	jne    ab6e <process_rule+0x14f>
    ab56:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    ab5a:	74 09                	je     ab65 <process_rule+0x146>
    ab5c:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    ab63:	eb 7f                	jmp    abe4 <process_rule+0x1c5>
    ab65:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    ab6c:	eb 76                	jmp    abe4 <process_rule+0x1c5>
    ab6e:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    ab72:	75 3a                	jne    abae <process_rule+0x18f>
    ab74:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ab78:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab7b:	48 98                	cdqe   
    ab7d:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab82:	0f be c0             	movsx  eax,al
    ab85:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    ab88:	48 63 d2             	movsxd rdx,edx
    ab8b:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    ab8f:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    ab93:	48 01 d1             	add    rcx,rdx
    ab96:	89 c2                	mov    edx,eax
    ab98:	48 8d 35 d3 31 00 00 	lea    rsi,[rip+0x31d3]        # dd72 <_IO_stdin_used+0x1d72>
    ab9f:	48 89 cf             	mov    rdi,rcx
    aba2:	b8 00 00 00 00       	mov    eax,0x0
    aba7:	e8 84 7c ff ff       	call   2830 <sprintf@plt>
    abac:	eb 36                	jmp    abe4 <process_rule+0x1c5>
    abae:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    abb2:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    abb5:	48 98                	cdqe   
    abb7:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    abbc:	0f be c0             	movsx  eax,al
    abbf:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    abc2:	01 d2                	add    edx,edx
    abc4:	48 63 ca             	movsxd rcx,edx
    abc7:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    abcb:	48 01 d1             	add    rcx,rdx
    abce:	89 c2                	mov    edx,eax
    abd0:	48 8d 35 9e 31 00 00 	lea    rsi,[rip+0x319e]        # dd75 <_IO_stdin_used+0x1d75>
    abd7:	48 89 cf             	mov    rdi,rcx
    abda:	b8 00 00 00 00       	mov    eax,0x0
    abdf:	e8 4c 7c ff ff       	call   2830 <sprintf@plt>
    abe4:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    abe8:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    abeb:	48 63 d8             	movsxd rbx,eax
    abee:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    abf2:	48 83 c0 40          	add    rax,0x40
    abf6:	48 89 c7             	mov    rdi,rax
    abf9:	e8 62 79 ff ff       	call   2560 <strlen@plt>
    abfe:	48 39 c3             	cmp    rbx,rax
    ac01:	0f 82 3d ff ff ff    	jb     ab44 <process_rule+0x125>
    ac07:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac0b:	48 83 c0 40          	add    rax,0x40
    ac0f:	ba ff 00 00 00       	mov    edx,0xff
    ac14:	be 00 00 00 00       	mov    esi,0x0
    ac19:	48 89 c7             	mov    rdi,rax
    ac1c:	e8 df 79 ff ff       	call   2600 <memset@plt>
    ac21:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ac25:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ac29:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    ac2d:	48 89 c6             	mov    rsi,rax
    ac30:	48 89 d7             	mov    rdi,rdx
    ac33:	e8 98 78 ff ff       	call   24d0 <strcpy@plt>
    ac38:	4c 89 e4             	mov    rsp,r12
    ac3b:	90                   	nop
    ac3c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ac40:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    ac47:	00 00 
    ac49:	74 05                	je     ac50 <process_rule+0x231>
    ac4b:	e8 30 79 ff ff       	call   2580 <__stack_chk_fail@plt>
    ac50:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    ac54:	5b                   	pop    rbx
    ac55:	41 5c                	pop    r12
    ac57:	41 5e                	pop    r14
    ac59:	41 5f                	pop    r15
    ac5b:	5d                   	pop    rbp
    ac5c:	c3                   	ret    

000000000000ac5d <d_op_parser>:
    ac5d:	f3 0f 1e fa          	endbr64 
    ac61:	55                   	push   rbp
    ac62:	48 89 e5             	mov    rbp,rsp
    ac65:	48 83 ec 20          	sub    rsp,0x20
    ac69:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ac6d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ac71:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    ac74:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac78:	48 89 c7             	mov    rdi,rax
    ac7b:	e8 9c e9 ff ff       	call   961c <isdigit>
    ac80:	84 c0                	test   al,al
    ac82:	74 23                	je     aca7 <d_op_parser+0x4a>
    ac84:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac88:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    ac8f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac93:	48 89 c7             	mov    rdi,rax
    ac96:	e8 45 7b ff ff       	call   27e0 <atoi@plt>
    ac9b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ac9f:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    aca2:	e9 5f 01 00 00       	jmp    ae06 <d_op_parser+0x1a9>
    aca7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acab:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    acae:	0f b6 05 c7 30 00 00 	movzx  eax,BYTE PTR [rip+0x30c7]        # dd7c <_IO_stdin_used+0x1d7c>
    acb5:	0f b6 d2             	movzx  edx,dl
    acb8:	0f b6 c0             	movzx  eax,al
    acbb:	29 c2                	sub    edx,eax
    acbd:	89 d0                	mov    eax,edx
    acbf:	85 c0                	test   eax,eax
    acc1:	75 27                	jne    acea <d_op_parser+0x8d>
    acc3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acc7:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    acce:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acd2:	48 83 c0 01          	add    rax,0x1
    acd6:	48 89 c7             	mov    rdi,rax
    acd9:	e8 02 7b ff ff       	call   27e0 <atoi@plt>
    acde:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ace2:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ace5:	e9 1c 01 00 00       	jmp    ae06 <d_op_parser+0x1a9>
    acea:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acee:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    acf1:	0f b6 05 86 30 00 00 	movzx  eax,BYTE PTR [rip+0x3086]        # dd7e <_IO_stdin_used+0x1d7e>
    acf8:	0f b6 d2             	movzx  edx,dl
    acfb:	0f b6 c0             	movzx  eax,al
    acfe:	29 c2                	sub    edx,eax
    ad00:	89 d0                	mov    eax,edx
    ad02:	85 c0                	test   eax,eax
    ad04:	75 27                	jne    ad2d <d_op_parser+0xd0>
    ad06:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad0a:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    ad11:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad15:	48 83 c0 01          	add    rax,0x1
    ad19:	48 89 c7             	mov    rdi,rax
    ad1c:	e8 bf 7a ff ff       	call   27e0 <atoi@plt>
    ad21:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad25:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad28:	e9 d9 00 00 00       	jmp    ae06 <d_op_parser+0x1a9>
    ad2d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad31:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    ad34:	0f b6 05 45 30 00 00 	movzx  eax,BYTE PTR [rip+0x3045]        # dd80 <_IO_stdin_used+0x1d80>
    ad3b:	0f b6 d2             	movzx  edx,dl
    ad3e:	0f b6 c0             	movzx  eax,al
    ad41:	29 c2                	sub    edx,eax
    ad43:	89 d0                	mov    eax,edx
    ad45:	85 c0                	test   eax,eax
    ad47:	75 27                	jne    ad70 <d_op_parser+0x113>
    ad49:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad4d:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    ad54:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad58:	48 83 c0 01          	add    rax,0x1
    ad5c:	48 89 c7             	mov    rdi,rax
    ad5f:	e8 7c 7a ff ff       	call   27e0 <atoi@plt>
    ad64:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad68:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad6b:	e9 96 00 00 00       	jmp    ae06 <d_op_parser+0x1a9>
    ad70:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad74:	ba 02 00 00 00       	mov    edx,0x2
    ad79:	48 8d 35 02 30 00 00 	lea    rsi,[rip+0x3002]        # dd82 <_IO_stdin_used+0x1d82>
    ad80:	48 89 c7             	mov    rdi,rax
    ad83:	e8 38 77 ff ff       	call   24c0 <strncmp@plt>
    ad88:	85 c0                	test   eax,eax
    ad8a:	75 24                	jne    adb0 <d_op_parser+0x153>
    ad8c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad90:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    ad97:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad9b:	48 83 c0 02          	add    rax,0x2
    ad9f:	48 89 c7             	mov    rdi,rax
    ada2:	e8 39 7a ff ff       	call   27e0 <atoi@plt>
    ada7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    adab:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    adae:	eb 56                	jmp    ae06 <d_op_parser+0x1a9>
    adb0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adb4:	ba 02 00 00 00       	mov    edx,0x2
    adb9:	48 8d 35 c5 2f 00 00 	lea    rsi,[rip+0x2fc5]        # dd85 <_IO_stdin_used+0x1d85>
    adc0:	48 89 c7             	mov    rdi,rax
    adc3:	e8 f8 76 ff ff       	call   24c0 <strncmp@plt>
    adc8:	85 c0                	test   eax,eax
    adca:	75 24                	jne    adf0 <d_op_parser+0x193>
    adcc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    add0:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    add7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    addb:	48 83 c0 02          	add    rax,0x2
    addf:	48 89 c7             	mov    rdi,rax
    ade2:	e8 f9 79 ff ff       	call   27e0 <atoi@plt>
    ade7:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    adeb:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    adee:	eb 16                	jmp    ae06 <d_op_parser+0x1a9>
    adf0:	48 8d 3d 91 2f 00 00 	lea    rdi,[rip+0x2f91]        # dd88 <_IO_stdin_used+0x1d88>
    adf7:	e8 04 77 ff ff       	call   2500 <puts@plt>
    adfc:	bf ff ff ff ff       	mov    edi,0xffffffff
    ae01:	e8 3a 7a ff ff       	call   2840 <exit@plt>
    ae06:	c9                   	leave  
    ae07:	c3                   	ret    

000000000000ae08 <d_engine>:
    ae08:	f3 0f 1e fa          	endbr64 
    ae0c:	55                   	push   rbp
    ae0d:	48 89 e5             	mov    rbp,rsp
    ae10:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ae14:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ae18:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae1c:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ae1f:	83 f8 ff             	cmp    eax,0xffffffff
    ae22:	75 0a                	jne    ae2e <d_engine+0x26>
    ae24:	b8 01 00 00 00       	mov    eax,0x1
    ae29:	e9 ea 00 00 00       	jmp    af18 <d_engine+0x110>
    ae2e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae32:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ae35:	2d a1 00 00 00       	sub    eax,0xa1
    ae3a:	83 f8 05             	cmp    eax,0x5
    ae3d:	0f 87 d0 00 00 00    	ja     af13 <d_engine+0x10b>
    ae43:	89 c0                	mov    eax,eax
    ae45:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    ae4c:	00 
    ae4d:	48 8d 05 4c 2f 00 00 	lea    rax,[rip+0x2f4c]        # dda0 <_IO_stdin_used+0x1da0>
    ae54:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    ae57:	48 98                	cdqe   
    ae59:	48 8d 15 40 2f 00 00 	lea    rdx,[rip+0x2f40]        # dda0 <_IO_stdin_used+0x1da0>
    ae60:	48 01 d0             	add    rax,rdx
    ae63:	3e ff e0             	notrack jmp rax
    ae66:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae6a:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    ae6d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae71:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    ae74:	39 c2                	cmp    edx,eax
    ae76:	0f 85 87 00 00 00    	jne    af03 <d_engine+0xfb>
    ae7c:	b8 01 00 00 00       	mov    eax,0x1
    ae81:	e9 92 00 00 00       	jmp    af18 <d_engine+0x110>
    ae86:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae8a:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae8d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae91:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae94:	39 c2                	cmp    edx,eax
    ae96:	76 6e                	jbe    af06 <d_engine+0xfe>
    ae98:	b8 01 00 00 00       	mov    eax,0x1
    ae9d:	eb 79                	jmp    af18 <d_engine+0x110>
    ae9f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aea3:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aea6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aeaa:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aead:	39 c2                	cmp    edx,eax
    aeaf:	72 58                	jb     af09 <d_engine+0x101>
    aeb1:	b8 01 00 00 00       	mov    eax,0x1
    aeb6:	eb 60                	jmp    af18 <d_engine+0x110>
    aeb8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aebc:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aebf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aec3:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aec6:	39 c2                	cmp    edx,eax
    aec8:	73 42                	jae    af0c <d_engine+0x104>
    aeca:	b8 01 00 00 00       	mov    eax,0x1
    aecf:	eb 47                	jmp    af18 <d_engine+0x110>
    aed1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aed5:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aed8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aedc:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aedf:	39 c2                	cmp    edx,eax
    aee1:	77 2c                	ja     af0f <d_engine+0x107>
    aee3:	b8 01 00 00 00       	mov    eax,0x1
    aee8:	eb 2e                	jmp    af18 <d_engine+0x110>
    aeea:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aeee:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    aef1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aef5:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    aef8:	39 c2                	cmp    edx,eax
    aefa:	74 16                	je     af12 <d_engine+0x10a>
    aefc:	b8 01 00 00 00       	mov    eax,0x1
    af01:	eb 15                	jmp    af18 <d_engine+0x110>
    af03:	90                   	nop
    af04:	eb 0d                	jmp    af13 <d_engine+0x10b>
    af06:	90                   	nop
    af07:	eb 0a                	jmp    af13 <d_engine+0x10b>
    af09:	90                   	nop
    af0a:	eb 07                	jmp    af13 <d_engine+0x10b>
    af0c:	90                   	nop
    af0d:	eb 04                	jmp    af13 <d_engine+0x10b>
    af0f:	90                   	nop
    af10:	eb 01                	jmp    af13 <d_engine+0x10b>
    af12:	90                   	nop
    af13:	b8 00 00 00 00       	mov    eax,0x0
    af18:	5d                   	pop    rbp
    af19:	c3                   	ret    

000000000000af1a <homenet_toi>:
    af1a:	f3 0f 1e fa          	endbr64 
    af1e:	55                   	push   rbp
    af1f:	48 89 e5             	mov    rbp,rsp
    af22:	53                   	push   rbx
    af23:	48 83 ec 38          	sub    rsp,0x38
    af27:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    af2b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    af32:	00 00 
    af34:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    af38:	31 c0                	xor    eax,eax
    af3a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    af3e:	48 8d 35 73 2e 00 00 	lea    rsi,[rip+0x2e73]        # ddb8 <_IO_stdin_used+0x1db8>
    af45:	48 89 c7             	mov    rdi,rax
    af48:	e8 43 78 ff ff       	call   2790 <strtok@plt>
    af4d:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    af51:	eb 4c                	jmp    af9f <homenet_toi+0x85>
    af53:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    af57:	48 89 c7             	mov    rdi,rax
    af5a:	e8 81 78 ff ff       	call   27e0 <atoi@plt>
    af5f:	89 c3                	mov    ebx,eax
    af61:	48 8d 45 df          	lea    rax,[rbp-0x21]
    af65:	48 89 c7             	mov    rdi,rax
    af68:	e8 f3 75 ff ff       	call   2560 <strlen@plt>
    af6d:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    af71:	48 01 d0             	add    rax,rdx
    af74:	89 da                	mov    edx,ebx
    af76:	48 8d 35 3d 2e 00 00 	lea    rsi,[rip+0x2e3d]        # ddba <_IO_stdin_used+0x1dba>
    af7d:	48 89 c7             	mov    rdi,rax
    af80:	b8 00 00 00 00       	mov    eax,0x0
    af85:	e8 a6 78 ff ff       	call   2830 <sprintf@plt>
    af8a:	48 8d 35 27 2e 00 00 	lea    rsi,[rip+0x2e27]        # ddb8 <_IO_stdin_used+0x1db8>
    af91:	bf 00 00 00 00       	mov    edi,0x0
    af96:	e8 f5 77 ff ff       	call   2790 <strtok@plt>
    af9b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    af9f:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    afa4:	75 ad                	jne    af53 <homenet_toi+0x39>
    afa6:	48 8d 45 df          	lea    rax,[rbp-0x21]
    afaa:	ba 10 00 00 00       	mov    edx,0x10
    afaf:	be 00 00 00 00       	mov    esi,0x0
    afb4:	48 89 c7             	mov    rdi,rax
    afb7:	e8 f4 76 ff ff       	call   26b0 <strtol@plt>
    afbc:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    afc0:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    afc7:	00 00 
    afc9:	74 05                	je     afd0 <homenet_toi+0xb6>
    afcb:	e8 b0 75 ff ff       	call   2580 <__stack_chk_fail@plt>
    afd0:	48 83 c4 38          	add    rsp,0x38
    afd4:	5b                   	pop    rbx
    afd5:	5d                   	pop    rbp
    afd6:	c3                   	ret    

000000000000afd7 <tcp_check_sum_passed>:
    afd7:	f3 0f 1e fa          	endbr64 
    afdb:	55                   	push   rbp
    afdc:	48 89 e5             	mov    rbp,rsp
    afdf:	41 54                	push   r12
    afe1:	53                   	push   rbx
    afe2:	48 83 ec 30          	sub    rsp,0x30
    afe6:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    afea:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    afee:	bb 00 00 00 00       	mov    ebx,0x0
    aff3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aff7:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    affb:	0f b7 c0             	movzx  eax,ax
    affe:	89 c7                	mov    edi,eax
    b000:	e8 3b 77 ff ff       	call   2740 <ntohs@plt>
    b005:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    b009:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    b00c:	83 e2 0f             	and    edx,0xf
    b00f:	0f b6 d2             	movzx  edx,dl
    b012:	c1 e2 02             	shl    edx,0x2
    b015:	29 d0                	sub    eax,edx
    b017:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    b01b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b01f:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b023:	0f b7 c0             	movzx  eax,ax
    b026:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    b02a:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b02e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b032:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b036:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    b03c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b040:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b043:	c1 e8 10             	shr    eax,0x10
    b046:	89 c0                	mov    eax,eax
    b048:	0f b7 c0             	movzx  eax,ax
    b04b:	48 01 c3             	add    rbx,rax
    b04e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b052:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    b055:	89 c0                	mov    eax,eax
    b057:	0f b7 c0             	movzx  eax,ax
    b05a:	48 01 c3             	add    rbx,rax
    b05d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b061:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b064:	c1 e8 10             	shr    eax,0x10
    b067:	89 c0                	mov    eax,eax
    b069:	0f b7 c0             	movzx  eax,ax
    b06c:	48 01 c3             	add    rbx,rax
    b06f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b073:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b076:	89 c0                	mov    eax,eax
    b078:	0f b7 c0             	movzx  eax,ax
    b07b:	48 01 c3             	add    rbx,rax
    b07e:	bf 06 00 00 00       	mov    edi,0x6
    b083:	e8 08 75 ff ff       	call   2590 <htons@plt>
    b088:	0f b7 c0             	movzx  eax,ax
    b08b:	48 01 c3             	add    rbx,rax
    b08e:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    b092:	89 c7                	mov    edi,eax
    b094:	e8 f7 74 ff ff       	call   2590 <htons@plt>
    b099:	0f b7 c0             	movzx  eax,ax
    b09c:	48 01 c3             	add    rbx,rax
    b09f:	eb 1a                	jmp    b0bb <tcp_check_sum_passed+0xe4>
    b0a1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b0a5:	48 8d 50 14          	lea    rdx,[rax+0x14]
    b0a9:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    b0ad:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b0b0:	0f b6 c0             	movzx  eax,al
    b0b3:	48 01 c3             	add    rbx,rax
    b0b6:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    b0bb:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    b0c0:	77 df                	ja     b0a1 <tcp_check_sum_passed+0xca>
    b0c2:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    b0c7:	74 1d                	je     b0e6 <tcp_check_sum_passed+0x10f>
    b0c9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b0cd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b0d0:	0f b6 c0             	movzx  eax,al
    b0d3:	48 01 c3             	add    rbx,rax
    b0d6:	eb 0e                	jmp    b0e6 <tcp_check_sum_passed+0x10f>
    b0d8:	0f b7 c3             	movzx  eax,bx
    b0db:	48 c1 eb 10          	shr    rbx,0x10
    b0df:	48 89 da             	mov    rdx,rbx
    b0e2:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    b0e6:	48 89 d8             	mov    rax,rbx
    b0e9:	48 c1 e8 10          	shr    rax,0x10
    b0ed:	48 85 c0             	test   rax,rax
    b0f0:	75 e6                	jne    b0d8 <tcp_check_sum_passed+0x101>
    b0f2:	48 f7 d3             	not    rbx
    b0f5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b0f9:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    b0fd:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    b101:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b105:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b109:	0f b7 c0             	movzx  eax,ax
    b10c:	89 c7                	mov    edi,eax
    b10e:	e8 2d 76 ff ff       	call   2740 <ntohs@plt>
    b113:	44 0f b7 e0          	movzx  r12d,ax
    b117:	89 d8                	mov    eax,ebx
    b119:	0f b7 c0             	movzx  eax,ax
    b11c:	89 c7                	mov    edi,eax
    b11e:	e8 1d 76 ff ff       	call   2740 <ntohs@plt>
    b123:	0f b7 c0             	movzx  eax,ax
    b126:	44 89 e2             	mov    edx,r12d
    b129:	89 c6                	mov    esi,eax
    b12b:	48 8d 3d 8d 2c 00 00 	lea    rdi,[rip+0x2c8d]        # ddbf <_IO_stdin_used+0x1dbf>
    b132:	b8 00 00 00 00       	mov    eax,0x0
    b137:	e8 84 74 ff ff       	call   25c0 <printf@plt>
    b13c:	89 d8                	mov    eax,ebx
    b13e:	0f b7 c0             	movzx  eax,ax
    b141:	89 c7                	mov    edi,eax
    b143:	e8 f8 75 ff ff       	call   2740 <ntohs@plt>
    b148:	89 c3                	mov    ebx,eax
    b14a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    b14e:	0f b7 c0             	movzx  eax,ax
    b151:	89 c7                	mov    edi,eax
    b153:	e8 e8 75 ff ff       	call   2740 <ntohs@plt>
    b158:	66 39 c3             	cmp    bx,ax
    b15b:	75 07                	jne    b164 <tcp_check_sum_passed+0x18d>
    b15d:	b8 01 00 00 00       	mov    eax,0x1
    b162:	eb 05                	jmp    b169 <tcp_check_sum_passed+0x192>
    b164:	b8 00 00 00 00       	mov    eax,0x0
    b169:	48 83 c4 30          	add    rsp,0x30
    b16d:	5b                   	pop    rbx
    b16e:	41 5c                	pop    r12
    b170:	5d                   	pop    rbp
    b171:	c3                   	ret    

000000000000b172 <run_hello_script>:
    b172:	f3 0f 1e fa          	endbr64 
    b176:	55                   	push   rbp
    b177:	48 89 e5             	mov    rbp,rsp
    b17a:	48 83 ec 10          	sub    rsp,0x10
    b17e:	e8 5d 75 ff ff       	call   26e0 <luaL_newstate@plt>
    b183:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b187:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b18b:	48 89 c7             	mov    rdi,rax
    b18e:	e8 1d 76 ff ff       	call   27b0 <luaL_openlibs@plt>
    b193:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b197:	ba 00 00 00 00       	mov    edx,0x0
    b19c:	48 8d 35 2d 2c 00 00 	lea    rsi,[rip+0x2c2d]        # ddd0 <_IO_stdin_used+0x1dd0>
    b1a3:	48 89 c7             	mov    rdi,rax
    b1a6:	e8 a5 75 ff ff       	call   2750 <luaL_loadfilex@plt>
    b1ab:	85 c0                	test   eax,eax
    b1ad:	75 2b                	jne    b1da <run_hello_script+0x68>
    b1af:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1b3:	41 b9 00 00 00 00    	mov    r9d,0x0
    b1b9:	41 b8 00 00 00 00    	mov    r8d,0x0
    b1bf:	b9 00 00 00 00       	mov    ecx,0x0
    b1c4:	ba ff ff ff ff       	mov    edx,0xffffffff
    b1c9:	be 00 00 00 00       	mov    esi,0x0
    b1ce:	48 89 c7             	mov    rdi,rax
    b1d1:	e8 4a 75 ff ff       	call   2720 <lua_pcallk@plt>
    b1d6:	85 c0                	test   eax,eax
    b1d8:	74 07                	je     b1e1 <run_hello_script+0x6f>
    b1da:	b8 01 00 00 00       	mov    eax,0x1
    b1df:	eb 05                	jmp    b1e6 <run_hello_script+0x74>
    b1e1:	b8 00 00 00 00       	mov    eax,0x0
    b1e6:	85 c0                	test   eax,eax
    b1e8:	75 1e                	jne    b208 <run_hello_script+0x96>
    b1ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1ee:	48 89 c7             	mov    rdi,rax
    b1f1:	e8 fa 72 ff ff       	call   24f0 <lua_gettop@plt>
    b1f6:	f7 d0                	not    eax
    b1f8:	89 c2                	mov    edx,eax
    b1fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b1fe:	89 d6                	mov    esi,edx
    b200:	48 89 c7             	mov    rdi,rax
    b203:	e8 d8 72 ff ff       	call   24e0 <lua_settop@plt>
    b208:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b20c:	48 89 c7             	mov    rdi,rax
    b20f:	e8 4c 74 ff ff       	call   2660 <lua_close@plt>
    b214:	90                   	nop
    b215:	c9                   	leave  
    b216:	c3                   	ret    

000000000000b217 <collect_scripts>:
    b217:	f3 0f 1e fa          	endbr64 
    b21b:	55                   	push   rbp
    b21c:	48 89 e5             	mov    rbp,rsp
    b21f:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b226:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b22d:	00 00 
    b22f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b233:	31 c0                	xor    eax,eax
    b235:	48 8d 35 b2 2b 00 00 	lea    rsi,[rip+0x2bb2]        # ddee <_IO_stdin_used+0x1dee>
    b23c:	48 8d 3d ad 2b 00 00 	lea    rdi,[rip+0x2bad]        # ddf0 <_IO_stdin_used+0x1df0>
    b243:	e8 28 75 ff ff       	call   2770 <fopen@plt>
    b248:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    b24c:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    b251:	75 16                	jne    b269 <collect_scripts+0x52>
    b253:	48 8d 3d ae 2b 00 00 	lea    rdi,[rip+0x2bae]        # de08 <_IO_stdin_used+0x1e08>
    b25a:	e8 a1 72 ff ff       	call   2500 <puts@plt>
    b25f:	bf ff ff ff ff       	mov    edi,0xffffffff
    b264:	e8 d7 75 ff ff       	call   2840 <exit@plt>
    b269:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    b270:	00 00 00 00 
    b274:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b278:	ba 00 00 00 00       	mov    edx,0x0
    b27d:	48 8d 35 c6 2b 00 00 	lea    rsi,[rip+0x2bc6]        # de4a <_IO_stdin_used+0x1e4a>
    b284:	48 89 c7             	mov    rdi,rax
    b287:	e8 a4 73 ff ff       	call   2630 <regcomp@plt>
    b28c:	e9 86 00 00 00       	jmp    b317 <collect_scripts+0x100>
    b291:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b298:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b29b:	3c 23                	cmp    al,0x23
    b29d:	75 02                	jne    b2a1 <collect_scripts+0x8a>
    b29f:	eb 76                	jmp    b317 <collect_scripts+0x100>
    b2a1:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2a8:	ba 0e 00 00 00       	mov    edx,0xe
    b2ad:	48 8d 35 a0 2b 00 00 	lea    rsi,[rip+0x2ba0]        # de54 <_IO_stdin_used+0x1e54>
    b2b4:	48 89 c7             	mov    rdi,rax
    b2b7:	e8 04 72 ff ff       	call   24c0 <strncmp@plt>
    b2bc:	85 c0                	test   eax,eax
    b2be:	75 34                	jne    b2f4 <collect_scripts+0xdd>
    b2c0:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2c7:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    b2cb:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b2cf:	48 89 d6             	mov    rsi,rdx
    b2d2:	48 89 c7             	mov    rdi,rax
    b2d5:	e8 f6 71 ff ff       	call   24d0 <strcpy@plt>
    b2da:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b2de:	48 8d 35 7e 2b 00 00 	lea    rsi,[rip+0x2b7e]        # de63 <_IO_stdin_used+0x1e63>
    b2e5:	48 89 c7             	mov    rdi,rax
    b2e8:	e8 53 73 ff ff       	call   2640 <strcspn@plt>
    b2ed:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b2f2:	eb 23                	jmp    b317 <collect_scripts+0x100>
    b2f4:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b2fb:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b2ff:	41 b8 00 00 00 00    	mov    r8d,0x0
    b305:	b9 00 00 00 00       	mov    ecx,0x0
    b30a:	ba 00 00 00 00       	mov    edx,0x0
    b30f:	48 89 c7             	mov    rdi,rax
    b312:	e8 19 74 ff ff       	call   2730 <regexec@plt>
    b317:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    b31b:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    b322:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    b329:	48 89 ce             	mov    rsi,rcx
    b32c:	48 89 c7             	mov    rdi,rax
    b32f:	e8 bc 74 ff ff       	call   27f0 <getline@plt>
    b334:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b338:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    b33d:	0f 85 4e ff ff ff    	jne    b291 <collect_scripts+0x7a>
    b343:	90                   	nop
    b344:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b348:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    b34f:	00 00 
    b351:	74 05                	je     b358 <collect_scripts+0x141>
    b353:	e8 28 72 ff ff       	call   2580 <__stack_chk_fail@plt>
    b358:	c9                   	leave  
    b359:	c3                   	ret    

000000000000b35a <ip6decode>:
    b35a:	f3 0f 1e fa          	endbr64 
    b35e:	55                   	push   rbp
    b35f:	48 89 e5             	mov    rbp,rsp
    b362:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b369:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    b370:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    b377:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b37e:	00 00 
    b380:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b384:	31 c0                	xor    eax,eax
    b386:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b38d:	48 83 c0 0e          	add    rax,0xe
    b391:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b395:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b399:	48 83 c0 08          	add    rax,0x8
    b39d:	48 89 c7             	mov    rdi,rax
    b3a0:	e8 ef 7d ff ff       	call   3194 <inet6_ntoa>
    b3a5:	48 89 c1             	mov    rcx,rax
    b3a8:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b3ac:	ba 29 00 00 00       	mov    edx,0x29
    b3b1:	48 89 ce             	mov    rsi,rcx
    b3b4:	48 89 c7             	mov    rdi,rax
    b3b7:	e8 f4 70 ff ff       	call   24b0 <strncpy@plt>
    b3bc:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b3c0:	48 83 c0 18          	add    rax,0x18
    b3c4:	48 89 c7             	mov    rdi,rax
    b3c7:	e8 c8 7d ff ff       	call   3194 <inet6_ntoa>
    b3cc:	48 89 c1             	mov    rcx,rax
    b3cf:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b3d3:	ba 29 00 00 00       	mov    edx,0x29
    b3d8:	48 89 ce             	mov    rsi,rcx
    b3db:	48 89 c7             	mov    rdi,rax
    b3de:	e8 cd 70 ff ff       	call   24b0 <strncpy@plt>
    b3e3:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b3e7:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b3eb:	0f b6 c0             	movzx  eax,al
    b3ee:	85 c0                	test   eax,eax
    b3f0:	75 1c                	jne    b40e <ip6decode+0xb4>
    b3f2:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b3f6:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    b3fa:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b401:	48 89 ce             	mov    rsi,rcx
    b404:	48 89 c7             	mov    rdi,rax
    b407:	e8 24 86 ff ff       	call   3a30 <ip6_icmp_decode>
    b40c:	eb 28                	jmp    b436 <ip6decode+0xdc>
    b40e:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b412:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b416:	0f b6 c8             	movzx  ecx,al
    b419:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b41d:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b421:	48 89 c6             	mov    rsi,rax
    b424:	48 8d 3d 3d 2a 00 00 	lea    rdi,[rip+0x2a3d]        # de68 <_IO_stdin_used+0x1e68>
    b42b:	b8 00 00 00 00       	mov    eax,0x0
    b430:	e8 8b 71 ff ff       	call   25c0 <printf@plt>
    b435:	90                   	nop
    b436:	90                   	nop
    b437:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b43b:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    b442:	00 00 
    b444:	74 05                	je     b44b <ip6decode+0xf1>
    b446:	e8 35 71 ff ff       	call   2580 <__stack_chk_fail@plt>
    b44b:	c9                   	leave  
    b44c:	c3                   	ret    

000000000000b44d <print_mem_map>:
    b44d:	f3 0f 1e fa          	endbr64 
    b451:	55                   	push   rbp
    b452:	48 89 e5             	mov    rbp,rsp
    b455:	48 83 ec 10          	sub    rsp,0x10
    b459:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b460:	eb 4c                	jmp    b4ae <print_mem_map+0x61>
    b462:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b465:	48 63 d0             	movsxd rdx,eax
    b468:	48 89 d0             	mov    rax,rdx
    b46b:	48 c1 e0 02          	shl    rax,0x2
    b46f:	48 01 d0             	add    rax,rdx
    b472:	48 c1 e0 03          	shl    rax,0x3
    b476:	48 8d 15 a3 d3 12 00 	lea    rdx,[rip+0x12d3a3]        # 138820 <fn_mem_map>
    b47d:	48 01 d0             	add    rax,rdx
    b480:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b484:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b488:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b48b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b48f:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b492:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b496:	48 89 c6             	mov    rsi,rax
    b499:	48 8d 3d f0 29 00 00 	lea    rdi,[rip+0x29f0]        # de90 <_IO_stdin_used+0x1e90>
    b4a0:	b8 00 00 00 00       	mov    eax,0x0
    b4a5:	e8 16 71 ff ff       	call   25c0 <printf@plt>
    b4aa:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b4ae:	8b 05 f4 c3 0f 00    	mov    eax,DWORD PTR [rip+0xfc3f4]        # 1078a8 <fn_num>
    b4b4:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b4b7:	7c a9                	jl     b462 <print_mem_map+0x15>
    b4b9:	90                   	nop
    b4ba:	90                   	nop
    b4bb:	c9                   	leave  
    b4bc:	c3                   	ret    

000000000000b4bd <crash_handler>:
    b4bd:	f3 0f 1e fa          	endbr64 
    b4c1:	55                   	push   rbp
    b4c2:	48 89 e5             	mov    rbp,rsp
    b4c5:	41 54                	push   r12
    b4c7:	53                   	push   rbx
    b4c8:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    b4cf:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    b4d5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b4dc:	00 00 
    b4de:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b4e2:	31 c0                	xor    eax,eax
    b4e4:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b4eb:	be 14 00 00 00       	mov    esi,0x14
    b4f0:	48 89 c7             	mov    rdi,rax
    b4f3:	e8 78 70 ff ff       	call   2570 <backtrace@plt>
    b4f8:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    b4fe:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    b504:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b50b:	89 d6                	mov    esi,edx
    b50d:	48 89 c7             	mov    rdi,rax
    b510:	e8 0b 70 ff ff       	call   2520 <backtrace_symbols@plt>
    b515:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    b51c:	b8 00 00 00 00       	mov    eax,0x0
    b521:	e8 3a 7e ff ff       	call   3360 <get_formated_time>
    b526:	48 89 c6             	mov    rsi,rax
    b529:	48 8d 3d 80 29 00 00 	lea    rdi,[rip+0x2980]        # deb0 <_IO_stdin_used+0x1eb0>
    b530:	b8 00 00 00 00       	mov    eax,0x0
    b535:	e8 86 70 ff ff       	call   25c0 <printf@plt>
    b53a:	48 8d 3d 9e 29 00 00 	lea    rdi,[rip+0x299e]        # dedf <_IO_stdin_used+0x1edf>
    b541:	e8 ba 6f ff ff       	call   2500 <puts@plt>
    b546:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    b54d:	00 
    b54e:	0f 84 6d 01 00 00    	je     b6c1 <crash_handler+0x204>
    b554:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    b55b:	00 00 00 
    b55e:	e9 4c 01 00 00       	jmp    b6af <crash_handler+0x1f2>
    b563:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b569:	48 98                	cdqe   
    b56b:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b572:	00 
    b573:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b57a:	48 01 d0             	add    rax,rdx
    b57d:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b580:	48 8d 35 6c 29 00 00 	lea    rsi,[rip+0x296c]        # def3 <_IO_stdin_used+0x1ef3>
    b587:	48 89 c7             	mov    rdi,rax
    b58a:	e8 f1 72 ff ff       	call   2880 <strstr@plt>
    b58f:	48 85 c0             	test   rax,rax
    b592:	0f 85 0f 01 00 00    	jne    b6a7 <crash_handler+0x1ea>
    b598:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b59e:	48 98                	cdqe   
    b5a0:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b5a7:	00 
    b5a8:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b5af:	48 01 d0             	add    rax,rdx
    b5b2:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b5b5:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5bb:	48 98                	cdqe   
    b5bd:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b5c4:	00 
    b5c5:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b5cc:	48 01 d0             	add    rax,rdx
    b5cf:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b5d2:	be 2b 00 00 00       	mov    esi,0x2b
    b5d7:	48 89 c7             	mov    rdi,rax
    b5da:	e8 1c 7f ff ff       	call   34fb <strloc>
    b5df:	48 98                	cdqe   
    b5e1:	48 83 c0 01          	add    rax,0x1
    b5e5:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b5e9:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b5ed:	48 8d 35 03 29 00 00 	lea    rsi,[rip+0x2903]        # def7 <_IO_stdin_used+0x1ef7>
    b5f4:	48 89 c7             	mov    rdi,rax
    b5f7:	b8 00 00 00 00       	mov    eax,0x0
    b5fc:	e8 2f 72 ff ff       	call   2830 <sprintf@plt>
    b601:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b605:	be 29 00 00 00       	mov    esi,0x29
    b60a:	48 89 c7             	mov    rdi,rax
    b60d:	e8 e9 7e ff ff       	call   34fb <strloc>
    b612:	48 98                	cdqe   
    b614:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b619:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b61d:	ba 10 00 00 00       	mov    edx,0x10
    b622:	be 00 00 00 00       	mov    esi,0x0
    b627:	48 89 c7             	mov    rdi,rax
    b62a:	e8 81 70 ff ff       	call   26b0 <strtol@plt>
    b62f:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b635:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b63b:	89 c7                	mov    edi,eax
    b63d:	e8 20 01 00 00       	call   b762 <offset_search>
    b642:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b649:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b650:	74 3a                	je     b68c <crash_handler+0x1cf>
    b652:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b659:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b65c:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b663:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b666:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b66d:	8b b5 1c ff ff ff    	mov    esi,DWORD PTR [rbp-0xe4]
    b673:	41 89 f0             	mov    r8d,esi
    b676:	48 89 c6             	mov    rsi,rax
    b679:	48 8d 3d 80 28 00 00 	lea    rdi,[rip+0x2880]        # df00 <_IO_stdin_used+0x1f00>
    b680:	b8 00 00 00 00       	mov    eax,0x0
    b685:	e8 36 6f ff ff       	call   25c0 <printf@plt>
    b68a:	eb 1c                	jmp    b6a8 <crash_handler+0x1eb>
    b68c:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b692:	89 c6                	mov    esi,eax
    b694:	48 8d 3d 9d 28 00 00 	lea    rdi,[rip+0x289d]        # df38 <_IO_stdin_used+0x1f38>
    b69b:	b8 00 00 00 00       	mov    eax,0x0
    b6a0:	e8 1b 6f ff ff       	call   25c0 <printf@plt>
    b6a5:	eb 01                	jmp    b6a8 <crash_handler+0x1eb>
    b6a7:	90                   	nop
    b6a8:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b6af:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b6b5:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b6bb:	0f 8c a2 fe ff ff    	jl     b563 <crash_handler+0xa6>
    b6c1:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b6c8:	48 89 c7             	mov    rdi,rax
    b6cb:	e8 a0 6d ff ff       	call   2470 <free@plt>
    b6d0:	48 8d 3d 8b 28 00 00 	lea    rdi,[rip+0x288b]        # df62 <_IO_stdin_used+0x1f62>
    b6d7:	e8 24 6e ff ff       	call   2500 <puts@plt>
    b6dc:	89 c6                	mov    esi,eax
    b6de:	48 8d 3d 8c 28 00 00 	lea    rdi,[rip+0x288c]        # df71 <_IO_stdin_used+0x1f71>
    b6e5:	b8 00 00 00 00       	mov    eax,0x0
    b6ea:	e8 d1 6e ff ff       	call   25c0 <printf@plt>
    b6ef:	89 d8                	mov    eax,ebx
    b6f1:	89 c6                	mov    esi,eax
    b6f3:	48 8d 3d 87 28 00 00 	lea    rdi,[rip+0x2887]        # df81 <_IO_stdin_used+0x1f81>
    b6fa:	b8 00 00 00 00       	mov    eax,0x0
    b6ff:	e8 bc 6e ff ff       	call   25c0 <printf@plt>
    b704:	89 d8                	mov    eax,ebx
    b706:	89 c6                	mov    esi,eax
    b708:	48 8d 3d 82 28 00 00 	lea    rdi,[rip+0x2882]        # df91 <_IO_stdin_used+0x1f91>
    b70f:	b8 00 00 00 00       	mov    eax,0x0
    b714:	e8 a7 6e ff ff       	call   25c0 <printf@plt>
    b719:	89 c8                	mov    eax,ecx
    b71b:	89 c6                	mov    esi,eax
    b71d:	48 8d 3d 7d 28 00 00 	lea    rdi,[rip+0x287d]        # dfa1 <_IO_stdin_used+0x1fa1>
    b724:	b8 00 00 00 00       	mov    eax,0x0
    b729:	e8 92 6e ff ff       	call   25c0 <printf@plt>
    b72e:	89 e0                	mov    eax,esp
    b730:	89 c6                	mov    esi,eax
    b732:	48 8d 3d 78 28 00 00 	lea    rdi,[rip+0x2878]        # dfb1 <_IO_stdin_used+0x1fb1>
    b739:	b8 00 00 00 00       	mov    eax,0x0
    b73e:	e8 7d 6e ff ff       	call   25c0 <printf@plt>
    b743:	89 e8                	mov    eax,ebp
    b745:	89 c6                	mov    esi,eax
    b747:	48 8d 3d 73 28 00 00 	lea    rdi,[rip+0x2873]        # dfc1 <_IO_stdin_used+0x1fc1>
    b74e:	b8 00 00 00 00       	mov    eax,0x0
    b753:	e8 68 6e ff ff       	call   25c0 <printf@plt>
    b758:	bf 01 00 00 00       	mov    edi,0x1
    b75d:	e8 de 70 ff ff       	call   2840 <exit@plt>

000000000000b762 <offset_search>:
    b762:	f3 0f 1e fa          	endbr64 
    b766:	55                   	push   rbp
    b767:	48 89 e5             	mov    rbp,rsp
    b76a:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b76d:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b774:	eb 44                	jmp    b7ba <offset_search+0x58>
    b776:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b779:	48 63 d0             	movsxd rdx,eax
    b77c:	48 89 d0             	mov    rax,rdx
    b77f:	48 c1 e0 02          	shl    rax,0x2
    b783:	48 01 d0             	add    rax,rdx
    b786:	48 c1 e0 03          	shl    rax,0x3
    b78a:	48 8d 15 8f d0 12 00 	lea    rdx,[rip+0x12d08f]        # 138820 <fn_mem_map>
    b791:	48 01 d0             	add    rax,rdx
    b794:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b798:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b79c:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b79f:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b7a2:	76 12                	jbe    b7b6 <offset_search+0x54>
    b7a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7a8:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b7ab:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b7ae:	73 06                	jae    b7b6 <offset_search+0x54>
    b7b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7b4:	eb 14                	jmp    b7ca <offset_search+0x68>
    b7b6:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b7ba:	8b 05 e8 c0 0f 00    	mov    eax,DWORD PTR [rip+0xfc0e8]        # 1078a8 <fn_num>
    b7c0:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b7c3:	7c b1                	jl     b776 <offset_search+0x14>
    b7c5:	b8 00 00 00 00       	mov    eax,0x0
    b7ca:	5d                   	pop    rbp
    b7cb:	c3                   	ret    

000000000000b7cc <add_fn>:
    b7cc:	f3 0f 1e fa          	endbr64 
    b7d0:	55                   	push   rbp
    b7d1:	48 89 e5             	mov    rbp,rsp
    b7d4:	48 83 ec 20          	sub    rsp,0x20
    b7d8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b7dc:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b7df:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b7e2:	8b 05 c0 c0 0f 00    	mov    eax,DWORD PTR [rip+0xfc0c0]        # 1078a8 <fn_num>
    b7e8:	8d 50 01             	lea    edx,[rax+0x1]
    b7eb:	89 15 b7 c0 0f 00    	mov    DWORD PTR [rip+0xfc0b7],edx        # 1078a8 <fn_num>
    b7f1:	48 63 d0             	movsxd rdx,eax
    b7f4:	48 89 d0             	mov    rax,rdx
    b7f7:	48 c1 e0 02          	shl    rax,0x2
    b7fb:	48 01 d0             	add    rax,rdx
    b7fe:	48 c1 e0 03          	shl    rax,0x3
    b802:	48 8d 15 17 d0 12 00 	lea    rdx,[rip+0x12d017]        # 138820 <fn_mem_map>
    b809:	48 01 d0             	add    rax,rdx
    b80c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b810:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b814:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b818:	48 89 d6             	mov    rsi,rdx
    b81b:	48 89 c7             	mov    rdi,rax
    b81e:	e8 ad 6c ff ff       	call   24d0 <strcpy@plt>
    b823:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b827:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b82a:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b82d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b831:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b834:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b837:	90                   	nop
    b838:	c9                   	leave  
    b839:	c3                   	ret    

000000000000b83a <load_fn_mem_map>:
    b83a:	f3 0f 1e fa          	endbr64 
    b83e:	55                   	push   rbp
    b83f:	48 89 e5             	mov    rbp,rsp
    b842:	53                   	push   rbx
    b843:	48 83 ec 78          	sub    rsp,0x78
    b847:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b84e:	00 00 
    b850:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b854:	31 c0                	xor    eax,eax
    b856:	48 8d 35 7b 27 00 00 	lea    rsi,[rip+0x277b]        # dfd8 <_IO_stdin_used+0x1fd8>
    b85d:	48 8d 3d 76 27 00 00 	lea    rdi,[rip+0x2776]        # dfda <_IO_stdin_used+0x1fda>
    b864:	e8 07 6f ff ff       	call   2770 <fopen@plt>
    b869:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b86d:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b872:	75 16                	jne    b88a <load_fn_mem_map+0x50>
    b874:	48 8d 3d 7d 27 00 00 	lea    rdi,[rip+0x277d]        # dff8 <_IO_stdin_used+0x1ff8>
    b87b:	e8 80 6c ff ff       	call   2500 <puts@plt>
    b880:	bf ff ff ff ff       	mov    edi,0xffffffff
    b885:	e8 b6 6f ff ff       	call   2840 <exit@plt>
    b88a:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b891:	00 
    b892:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b899:	00 
    b89a:	e9 db 00 00 00       	jmp    b97a <load_fn_mem_map+0x140>
    b89f:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b8a3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b8a7:	48 8d 35 b1 27 00 00 	lea    rsi,[rip+0x27b1]        # e05f <_IO_stdin_used+0x205f>
    b8ae:	48 89 c7             	mov    rdi,rax
    b8b1:	e8 8a 6d ff ff       	call   2640 <strcspn@plt>
    b8b6:	48 01 d8             	add    rax,rbx
    b8b9:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b8bc:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b8c3:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b8c7:	48 8d 35 93 27 00 00 	lea    rsi,[rip+0x2793]        # e061 <_IO_stdin_used+0x2061>
    b8ce:	48 89 c7             	mov    rdi,rax
    b8d1:	e8 ba 6e ff ff       	call   2790 <strtok@plt>
    b8d6:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b8da:	eb 7f                	jmp    b95b <load_fn_mem_map+0x121>
    b8dc:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b8e0:	74 44                	je     b926 <load_fn_mem_map+0xec>
    b8e2:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b8e6:	7f 59                	jg     b941 <load_fn_mem_map+0x107>
    b8e8:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b8ec:	74 08                	je     b8f6 <load_fn_mem_map+0xbc>
    b8ee:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b8f2:	74 17                	je     b90b <load_fn_mem_map+0xd1>
    b8f4:	eb 4b                	jmp    b941 <load_fn_mem_map+0x107>
    b8f6:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b8fa:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b8fe:	48 89 d6             	mov    rsi,rdx
    b901:	48 89 c7             	mov    rdi,rax
    b904:	e8 c7 6b ff ff       	call   24d0 <strcpy@plt>
    b909:	eb 37                	jmp    b942 <load_fn_mem_map+0x108>
    b90b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b90f:	ba 10 00 00 00       	mov    edx,0x10
    b914:	be 00 00 00 00       	mov    esi,0x0
    b919:	48 89 c7             	mov    rdi,rax
    b91c:	e8 8f 6d ff ff       	call   26b0 <strtol@plt>
    b921:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b924:	eb 1c                	jmp    b942 <load_fn_mem_map+0x108>
    b926:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b92a:	ba 10 00 00 00       	mov    edx,0x10
    b92f:	be 00 00 00 00       	mov    esi,0x0
    b934:	48 89 c7             	mov    rdi,rax
    b937:	e8 74 6d ff ff       	call   26b0 <strtol@plt>
    b93c:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b93f:	eb 01                	jmp    b942 <load_fn_mem_map+0x108>
    b941:	90                   	nop
    b942:	48 8d 35 18 27 00 00 	lea    rsi,[rip+0x2718]        # e061 <_IO_stdin_used+0x2061>
    b949:	bf 00 00 00 00       	mov    edi,0x0
    b94e:	e8 3d 6e ff ff       	call   2790 <strtok@plt>
    b953:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b957:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b95b:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b960:	0f 85 76 ff ff ff    	jne    b8dc <load_fn_mem_map+0xa2>
    b966:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b969:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b96c:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b970:	89 ce                	mov    esi,ecx
    b972:	48 89 c7             	mov    rdi,rax
    b975:	e8 52 fe ff ff       	call   b7cc <add_fn>
    b97a:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b97e:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b982:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b986:	48 89 ce             	mov    rsi,rcx
    b989:	48 89 c7             	mov    rdi,rax
    b98c:	e8 5f 6e ff ff       	call   27f0 <getline@plt>
    b991:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b995:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b99a:	0f 85 ff fe ff ff    	jne    b89f <load_fn_mem_map+0x65>
    b9a0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b9a4:	48 89 c7             	mov    rdi,rax
    b9a7:	e8 a4 6b ff ff       	call   2550 <fclose@plt>
    b9ac:	90                   	nop
    b9ad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b9b1:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    b9b8:	00 00 
    b9ba:	74 05                	je     b9c1 <load_fn_mem_map+0x187>
    b9bc:	e8 bf 6b ff ff       	call   2580 <__stack_chk_fail@plt>
    b9c1:	48 83 c4 78          	add    rsp,0x78
    b9c5:	5b                   	pop    rbx
    b9c6:	5d                   	pop    rbp
    b9c7:	c3                   	ret    
    b9c8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    b9cf:	00 

000000000000b9d0 <__libc_csu_init>:
    b9d0:	f3 0f 1e fa          	endbr64 
    b9d4:	41 57                	push   r15
    b9d6:	4c 8d 3d 8b 51 00 00 	lea    r15,[rip+0x518b]        # 10b68 <__frame_dummy_init_array_entry>
    b9dd:	41 56                	push   r14
    b9df:	49 89 d6             	mov    r14,rdx
    b9e2:	41 55                	push   r13
    b9e4:	49 89 f5             	mov    r13,rsi
    b9e7:	41 54                	push   r12
    b9e9:	41 89 fc             	mov    r12d,edi
    b9ec:	55                   	push   rbp
    b9ed:	48 8d 2d 7c 51 00 00 	lea    rbp,[rip+0x517c]        # 10b70 <__do_global_dtors_aux_fini_array_entry>
    b9f4:	53                   	push   rbx
    b9f5:	4c 29 fd             	sub    rbp,r15
    b9f8:	48 83 ec 08          	sub    rsp,0x8
    b9fc:	e8 ff 65 ff ff       	call   2000 <_init>
    ba01:	48 c1 fd 03          	sar    rbp,0x3
    ba05:	74 1f                	je     ba26 <__libc_csu_init+0x56>
    ba07:	31 db                	xor    ebx,ebx
    ba09:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    ba10:	4c 89 f2             	mov    rdx,r14
    ba13:	4c 89 ee             	mov    rsi,r13
    ba16:	44 89 e7             	mov    edi,r12d
    ba19:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
    ba1d:	48 83 c3 01          	add    rbx,0x1
    ba21:	48 39 dd             	cmp    rbp,rbx
    ba24:	75 ea                	jne    ba10 <__libc_csu_init+0x40>
    ba26:	48 83 c4 08          	add    rsp,0x8
    ba2a:	5b                   	pop    rbx
    ba2b:	5d                   	pop    rbp
    ba2c:	41 5c                	pop    r12
    ba2e:	41 5d                	pop    r13
    ba30:	41 5e                	pop    r14
    ba32:	41 5f                	pop    r15
    ba34:	c3                   	ret    
    ba35:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    ba3c:	00 00 00 00 

000000000000ba40 <__libc_csu_fini>:
    ba40:	f3 0f 1e fa          	endbr64 
    ba44:	c3                   	ret    

Disassembly of section .fini:

000000000000ba48 <_fini>:
    ba48:	f3 0f 1e fa          	endbr64 
    ba4c:	48 83 ec 08          	sub    rsp,0x8
    ba50:	48 83 c4 08          	add    rsp,0x8
    ba54:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1d1148>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d508d>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ed1bbb>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e1a31e1>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520d11e7>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9d17a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x256543fd>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a514452>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f3332b0>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f590d>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250d1320>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e1a3335>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723d333b>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x73121355>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e1a3366>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ed1d6c>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f503c12>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d4f65>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744e34d5>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d4fdb>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e1a3525>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ed1f2b>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	7e 77                	jle    c959 <_IO_stdin_used+0x959>
    c8e2:	ff                   	(bad)  
    c8e3:	ff a1 7a ff ff a1    	jmp    QWORD PTR [rcx-0x5e000086]
    c8e9:	7a ff                	jp     c8ea <_IO_stdin_used+0x8ea>
    c8eb:	ff 8f 77 ff ff fc    	dec    DWORD PTR [rdi-0x3000089]
    c8f1:	78 ff                	js     c8f2 <_IO_stdin_used+0x8f2>
    c8f3:	ff 0d 79 ff ff a1    	dec    DWORD PTR [rip+0xffffffffa1ffff79]        # ffffffffa200c872 <_end+0xffffffffa1ed1852>
    c8f9:	7a ff                	jp     c8fa <_IO_stdin_used+0x8fa>
    c8fb:	ff a1 7a ff ff aa    	jmp    QWORD PTR [rcx-0x55000086]
    c901:	79 ff                	jns    c902 <_IO_stdin_used+0x902>
    c903:	ff                   	(bad)  
    c904:	bb 79 ff ff 06       	mov    ebx,0x6ffff79
    c909:	7a ff                	jp     c90a <_IO_stdin_used+0x90a>
    c90b:	ff 17                	call   QWORD PTR [rdi]
    c90d:	7a ff                	jp     c90e <_IO_stdin_used+0x90e>
    c90f:	ff a1 7a ff ff 85    	jmp    QWORD PTR [rcx-0x7a000086]
    c915:	7a ff                	jp     c916 <_IO_stdin_used+0x916>
    c917:	ff 93 7a ff ff 9e    	call   QWORD PTR [rbx-0x61000086]
    c91d:	77 ff                	ja     c91e <_IO_stdin_used+0x91e>
    c91f:	ff af 77 ff ff c0    	jmp    FWORD PTR [rdi-0x3f000089]
    c925:	77 ff                	ja     c926 <_IO_stdin_used+0x926>
    c927:	ff d1                	call   rcx
    c929:	77 ff                	ja     c92a <_IO_stdin_used+0x92a>
    c92b:	ff e2                	jmp    rdx
    c92d:	77 ff                	ja     c92e <_IO_stdin_used+0x92e>
    c92f:	ff f3                	push   rbx
    c931:	77 ff                	ja     c932 <_IO_stdin_used+0x932>
    c933:	ff 04 78             	inc    DWORD PTR [rax+rdi*2]
    c936:	ff                   	(bad)  
    c937:	ff 15 78 ff ff 26    	call   QWORD PTR [rip+0x26ffff78]        # 2700c8b5 <_end+0x26ed1895>
    c93d:	78 ff                	js     c93e <_IO_stdin_used+0x93e>
    c93f:	ff 37                	push   QWORD PTR [rdi]
    c941:	78 ff                	js     c942 <_IO_stdin_used+0x942>
    c943:	ff 45 78             	inc    DWORD PTR [rbp+0x78]
    c946:	ff                   	(bad)  
    c947:	ff 53 78             	call   QWORD PTR [rbx+0x78]
    c94a:	ff                   	(bad)  
    c94b:	ff 61 78             	jmp    QWORD PTR [rcx+0x78]
    c94e:	ff                   	(bad)  
    c94f:	ff 6f 78             	jmp    FWORD PTR [rdi+0x78]
    c952:	ff                   	(bad)  
    c953:	ff                   	(bad)  
    c954:	7d 78                	jge    c9ce <_IO_stdin_used+0x9ce>
    c956:	ff                   	(bad)  
    c957:	ff 8b 78 ff ff 00    	dec    DWORD PTR [rbx+0xffff78]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x503619be>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x641253c6>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x73123997>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ed23c3>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x493339f1>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533d39ff>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x52423a29>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x73123a2d>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d4659>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x50361a7e>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x64125486>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x73123a57>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x44423a83>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e1a3aaa>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x483ab0>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a514ce8>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e1a3b40>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ed2546>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e1a3b44>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64125559>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755c1ca0>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f5a1ce1>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x473672f2>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ed2808>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	55                   	push   rbp
    ce22:	4e                   	rex.WRX
    ce23:	4e                   	rex.WRX
    ce24:	49                   	rex.WB
    ce25:	4e                   	rex.WRX
    ce26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce2e:	4f                   	rex.WRXB
    ce2f:	4e 53                	rex.WRX push rbx
    ce31:	54                   	push   rsp
    ce32:	52                   	push   rdx
    ce33:	41 54                	push   r12
    ce35:	49                   	rex.WB
    ce36:	4f                   	rex.WRXB
    ce37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce3b:	44                   	rex.R
    ce3c:	45                   	rex.RB
    ce3d:	2e 20 59 4f          	and    BYTE PTR cs:[rcx+0x4f],bl
    ce41:	55                   	push   rbp
    ce42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce45:	56                   	push   rsi
    ce46:	45 20 31             	and    BYTE PTR [r9],r14b
    ce49:	30 20                	xor    BYTE PTR [rax],ah
    ce4b:	53                   	push   rbx
    ce4c:	45                   	rex.RB
    ce4d:	43                   	rex.XB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e                   	rex.WRX
    ce50:	44 53                	rex.R push rbx
    ce52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce56:	41                   	rex.B
    ce57:	42                   	rex.X
    ce58:	4f 52                	rex.WRXB push r10
    ce5a:	54                   	push   rsp
    ce5b:	2e 00 00             	add    BYTE PTR cs:[rax],al
    ce5e:	00 00                	add    BYTE PTR [rax],al
    ce60:	52                   	push   rdx
    ce61:	55                   	push   rbp
    ce62:	4e                   	rex.WRX
    ce63:	4e                   	rex.WRX
    ce64:	49                   	rex.WB
    ce65:	4e                   	rex.WRX
    ce66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce6e:	54                   	push   rsp
    ce6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce72:	44                   	rex.R
    ce73:	45                   	rex.RB
    ce74:	2e 20 59 4f          	and    BYTE PTR cs:[rcx+0x4f],bl
    ce78:	55                   	push   rbp
    ce79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce7c:	56                   	push   rsi
    ce7d:	45 20 31             	and    BYTE PTR [r9],r14b
    ce80:	30 20                	xor    BYTE PTR [rax],ah
    ce82:	53                   	push   rbx
    ce83:	45                   	rex.RB
    ce84:	43                   	rex.XB
    ce85:	4f                   	rex.WRXB
    ce86:	4e                   	rex.WRX
    ce87:	44 53                	rex.R push rbx
    ce89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce8d:	41                   	rex.B
    ce8e:	42                   	rex.X
    ce8f:	4f 52                	rex.WRXB push r10
    ce91:	54                   	push   rsp
    ce92:	2e 00 55 6e          	add    BYTE PTR cs:[rbp+0x6e],dl
    ce96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ce9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ce9e:	67 75 6d             	addr32 jne cf0e <_IO_stdin_used+0xf0e>
    cea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cea3:	74 20                	je     cec5 <_IO_stdin_used+0xec5>
    cea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    ceaa:	70 64                	jo     cf10 <_IO_stdin_used+0xf10>
    ceac:	71 68                	jno    cf16 <_IO_stdin_used+0xf16>
    ceae:	74 65                	je     cf15 <_IO_stdin_used+0xf15>
    ceb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    ceb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ceb8:	76 69                	jbe    cf23 <_IO_stdin_used+0xf23>
    ceba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cec1:	79 2e 
    cec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ceca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cecb:	73 69                	jae    cf36 <_IO_stdin_used+0xf36>
    cecd:	73 68                	jae    cf37 <_IO_stdin_used+0xf37>
    cecf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ced5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cedc:	70 
    cedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    cede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee6:	79 20                	jns    cf08 <_IO_stdin_used+0xf08>
    cee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    ceef:	74 63                	je     cf54 <_IO_stdin_used+0xf54>
    cef1:	2f                   	(bad)  
    cef2:	76 69                	jbe    cf5d <_IO_stdin_used+0xf5d>
    cef4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cefb:	79 2e 
    cefd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf00:	66 29 00             	sub    WORD PTR [rax],ax
    cf03:	2f                   	(bad)  
    cf04:	65 74 63             	gs je  cf6a <_IO_stdin_used+0xf6a>
    cf07:	2f                   	(bad)  
    cf08:	76 69                	jbe    cf73 <_IO_stdin_used+0xf73>
    cf0a:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf11:	69 6c 
    cf13:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    cf17:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf1b:	72 73                	jb     cf90 <_IO_stdin_used+0xf90>
    cf1d:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf22:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf23:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf27:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf28:	65 73 00             	gs jae cf2b <_IO_stdin_used+0xf2b>
    cf2b:	00 00                	add    BYTE PTR [rax],al
    cf2d:	00 00                	add    BYTE PTR [rax],al
    cf2f:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf32:	47                   	rex.RXB
    cf33:	49                   	rex.WB
    cf34:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf39:	74 65                	je     cfa0 <_IO_stdin_used+0xfa0>
    cf3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf3c:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf43:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cf4a:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cf4d:	25 73 0a 00 70       	and    eax,0x70000a73
    cf52:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cf55:	5f                   	pop    rdi
    cf56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cf57:	67 72 20             	addr32 jb cf7a <_IO_stdin_used+0xf7a>
    cf5a:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cf61:	5f                   	pop    rdi
    cf62:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf63:	70 65                	jo     cfca <_IO_stdin_used+0xfca>
    cf65:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf66:	5f                   	pop    rdi
    cf67:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf68:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cf6f:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cf72:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cf76:	70 74                	jo     cfec <_IO_stdin_used+0xfec>
    cf78:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cf7d:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cf81:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf82:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cf88:	72 76                	jb     d000 <_IO_stdin_used+0x1000>
    cf8a:	65 72 20             	gs jb  cfad <_IO_stdin_used+0xfad>
    cf8d:	73 74                	jae    d003 <_IO_stdin_used+0x1003>
    cf8f:	61                   	(bad)  
    cf90:	72 74                	jb     d006 <_IO_stdin_used+0x1006>
    cf92:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cf96:	31 32                	xor    DWORD PTR [rdx],esi
    cf98:	37                   	(bad)  
    cf99:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    cf9c:	30 2e                	xor    BYTE PTR [rsi],ch
    cf9e:	31 3a                	xor    DWORD PTR [rdx],edi
    cfa0:	36 34 31             	ss xor al,0x31
    cfa3:	00 ee                	add    dh,ch
    cfa5:	9a                   	(bad)  
    cfa6:	ff                   	(bad)  
    cfa7:	ff 2b                	jmp    FWORD PTR [rbx]
    cfa9:	9b                   	fwait
    cfaa:	ff                   	(bad)  
    cfab:	ff 69 9b             	jmp    FWORD PTR [rcx-0x65]
    cfae:	ff                   	(bad)  
    cfaf:	ff 69 9b             	jmp    FWORD PTR [rcx-0x65]
    cfb2:	ff                   	(bad)  
    cfb3:	ff                   	(bad)  
    cfb4:	fa                   	cli    
    cfb5:	9a                   	(bad)  
    cfb6:	ff                   	(bad)  
    cfb7:	ff 09                	dec    DWORD PTR [rcx]
    cfb9:	9b                   	fwait
    cfba:	ff                   	(bad)  
    cfbb:	ff 69 9b             	jmp    FWORD PTR [rcx-0x65]
    cfbe:	ff                   	(bad)  
    cfbf:	ff 69 9b             	jmp    FWORD PTR [rcx-0x65]
    cfc2:	ff                   	(bad)  
    cfc3:	ff 69 9b             	jmp    FWORD PTR [rcx-0x65]
    cfc6:	ff                   	(bad)  
    cfc7:	ff 69 9b             	jmp    FWORD PTR [rcx-0x65]
    cfca:	ff                   	(bad)  
    cfcb:	ff 69 9b             	jmp    FWORD PTR [rcx-0x65]
    cfce:	ff                   	(bad)  
    cfcf:	ff 69 9b             	jmp    FWORD PTR [rcx-0x65]
    cfd2:	ff                   	(bad)  
    cfd3:	ff 19                	call   FWORD PTR [rcx]
    cfd5:	9b                   	fwait
    cfd6:	ff                   	(bad)  
    cfd7:	ff 22                	jmp    QWORD PTR [rdx]
    cfd9:	9b                   	fwait
    cfda:	ff                   	(bad)  
    cfdb:	ff 69 9b             	jmp    FWORD PTR [rcx-0x65]
    cfde:	ff                   	(bad)  
    cfdf:	ff 69 9b             	jmp    FWORD PTR [rcx-0x65]
    cfe2:	ff                   	(bad)  
    cfe3:	ff 4a 9b             	dec    DWORD PTR [rdx-0x65]
    cfe6:	ff                   	(bad)  
    cfe7:	ff 0a                	dec    DWORD PTR [rdx]
    cfe9:	43 61                	rex.XB (bad) 
    cfeb:	75 67                	jne    d054 <_IO_stdin_used+0x1054>
    cfed:	68 74 20 73 69       	push   0x69732074
    cff2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    cff4:	61                   	(bad)  
    cff5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cff6:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f060 <_end+0x744e4040>
    cffc:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fc75 <_end+0x650d4c55>
    d002:	78 69                	js     d06d <_IO_stdin_used+0x106d>
    d004:	74 69                	je     d06f <_IO_stdin_used+0x106f>
    d006:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d007:	67 2e 2e 2e 0a 00    	cs cs or al,BYTE PTR cs:[eax]
    d00d:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d011:	61                   	(bad)  
    d012:	6c                   	ins    BYTE PTR es:[rdi],dx
    d013:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d016:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d019:	74 73                	je     d08e <_IO_stdin_used+0x108e>
    d01b:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d01e:	75 67                	jne    d087 <_IO_stdin_used+0x1087>
    d020:	68 74 3a 20 25       	push   0x25203a74
    d025:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d028:	53                   	push   rbx
    d029:	74 61                	je     d08c <_IO_stdin_used+0x108c>
    d02b:	74 69                	je     d096 <_IO_stdin_used+0x1096>
    d02d:	73 74                	jae    d0a3 <_IO_stdin_used+0x10a3>
    d02f:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d036:	61                   	(bad)  
    d037:	64 64 72 65          	fs fs jb d0a0 <_IO_stdin_used+0x10a0>
    d03b:	73 73                	jae    d0b0 <_IO_stdin_used+0x10b0>
    d03d:	20 20                	and    BYTE PTR [rax],ah
    d03f:	20 20                	and    BYTE PTR [rax],ah
    d041:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d043:	75 6e                	jne    d0b3 <_IO_stdin_used+0x10b3>
    d045:	74 0a                	je     d051 <_IO_stdin_used+0x1051>
    d047:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d04c:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d051:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d056:	2d 2d 00 00 00       	sub    eax,0x2d
    d05b:	00 00                	add    BYTE PTR [rax],al
    d05d:	00 00                	add    BYTE PTR [rax],al
    d05f:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909dad8 <_end+0x8f62ab8>
    d065:	74 6f                	je     d0d6 <_IO_stdin_used+0x10d6>
    d067:	74 61                	je     d0ca <_IO_stdin_used+0x10ca>
    d069:	6c                   	ins    BYTE PTR es:[rdi],dx
    d06a:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d06d:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d070:	74 73                	je     d0e5 <_IO_stdin_used+0x10e5>
    d072:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f598 <_end+0xa514578>
    d078:	09 09                	or     DWORD PTR [rcx],ecx
    d07a:	74 6f                	je     d0eb <_IO_stdin_used+0x10eb>
    d07c:	74 61                	je     d0df <_IO_stdin_used+0x10df>
    d07e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d07f:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d082:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d083:	74 20                	je     d0a5 <_IO_stdin_used+0x10a5>
    d085:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d08a:	09 09                	or     DWORD PTR [rcx],ecx
    d08c:	74 6f                	je     d0fd <_IO_stdin_used+0x10fd>
    d08e:	74 61                	je     d0f1 <_IO_stdin_used+0x10f1>
    d090:	6c                   	ins    BYTE PTR es:[rdi],dx
    d091:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d094:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d097:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d09c:	09 09                	or     DWORD PTR [rcx],ecx
    d09e:	54                   	push   rsp
    d09f:	43 50                	rex.XB push r8
    d0a1:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0a5:	74 20                	je     d0c7 <_IO_stdin_used+0x10c7>
    d0a7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0ac:	09 09                	or     DWORD PTR [rcx],ecx
    d0ae:	54                   	push   rsp
    d0af:	43 50                	rex.XB push r8
    d0b1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0b4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0b7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0bc:	09 09                	or     DWORD PTR [rcx],ecx
    d0be:	55                   	push   rbp
    d0bf:	44 50                	rex.R push rax
    d0c1:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0c4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0c5:	74 20                	je     d0e7 <_IO_stdin_used+0x10e7>
    d0c7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0cc:	09 09                	or     DWORD PTR [rcx],ecx
    d0ce:	55                   	push   rbp
    d0cf:	44 50                	rex.R push rax
    d0d1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0d4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0d7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0dc:	09 09                	or     DWORD PTR [rcx],ecx
    d0de:	49                   	rex.WB
    d0df:	43                   	rex.XB
    d0e0:	4d 50                	rex.WRB push r8
    d0e2:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0e6:	74 20                	je     d108 <_IO_stdin_used+0x1108>
    d0e8:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0ed:	09 09                	or     DWORD PTR [rcx],ecx
    d0ef:	49                   	rex.WB
    d0f0:	43                   	rex.XB
    d0f1:	4d 50                	rex.WRB push r8
    d0f3:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0f6:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0f9:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0fe:	0a 00                	or     al,BYTE PTR [rax]
    d100:	77 00                	ja     d102 <_IO_stdin_used+0x1102>
    d102:	2f                   	(bad)  
    d103:	75 73                	jne    d178 <_IO_stdin_used+0x1178>
    d105:	72 2f                	jb     d136 <_IO_stdin_used+0x1136>
    d107:	73 68                	jae    d171 <_IO_stdin_used+0x1171>
    d109:	61                   	(bad)  
    d10a:	72 65                	jb     d171 <_IO_stdin_used+0x1171>
    d10c:	2f                   	(bad)  
    d10d:	76 69                	jbe    d178 <_IO_stdin_used+0x1178>
    d10f:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d116:	63 61 
    d118:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d11b:	2e 63 73 76          	movsxd esi,DWORD PTR cs:[rbx+0x76]
    d11f:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d122:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d123:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d124:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d125:	74 20                	je     d147 <_IO_stdin_used+0x1147>
    d127:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d128:	70 65                	jo     d18f <_IO_stdin_used+0x118f>
    d12a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d12b:	20 2f                	and    BYTE PTR [rdi],ch
    d12d:	75 73                	jne    d1a2 <_IO_stdin_used+0x11a2>
    d12f:	72 2f                	jb     d160 <_IO_stdin_used+0x1160>
    d131:	73 68                	jae    d19b <_IO_stdin_used+0x119b>
    d133:	61                   	(bad)  
    d134:	72 65                	jb     d19b <_IO_stdin_used+0x119b>
    d136:	2f                   	(bad)  
    d137:	76 69                	jbe    d1a2 <_IO_stdin_used+0x11a2>
    d139:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d140:	63 61 
    d142:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d145:	2e 63 73 76          	movsxd esi,DWORD PTR cs:[rbx+0x76]
    d149:	3a 20                	cmp    ah,BYTE PTR [rax]
    d14b:	70 72                	jo     d1bf <_IO_stdin_used+0x11bf>
    d14d:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d154:	61                   	(bad)  
    d155:	72 70                	jb     d1c7 <_IO_stdin_used+0x11c7>
    d157:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d15a:	68 65 20 74 6f       	push   0x6f742065
    d15f:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d162:	72 65                	jb     d1c9 <_IO_stdin_used+0x11c9>
    d164:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d166:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df1df <_end+0x3e1a41bf>
    d16c:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dbe5 <_end+0x24ed2bc5>
    d172:	73 2c                	jae    d1a0 <_IO_stdin_used+0x11a0>
    d174:	25 73 0a 00 31       	and    eax,0x31000a73
    d179:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    d17c:	30 00                	xor    BYTE PTR [rax],al
    d17e:	00 00                	add    BYTE PTR [rax],al
    d180:	56                   	push   rsi
    d181:	49                   	rex.WB
    d182:	47                   	rex.RXB
    d183:	49                   	rex.WB
    d184:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d188:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc02 <_end+0x2cf62be2>
    d18f:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d192:	64 65 62             	fs gs (bad) 
    d195:	75 67                	jne    d1fe <_IO_stdin_used+0x11fe>
    d197:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d19a:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d19e:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1a3:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d1aa:	74 68                	je     d214 <_IO_stdin_used+0x1214>
    d1ac:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d1b3:	61                   	(bad)  
    d1b4:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d1b8:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d1bd:	66 61                	data16 (bad) 
    d1bf:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d1c2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1c4:	73 65                	jae    d22b <_IO_stdin_used+0x122b>
    d1c6:	74 20                	je     d1e8 <_IO_stdin_used+0x11e8>
    d1c8:	74 68                	je     d232 <_IO_stdin_used+0x1232>
    d1ca:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d1ce:	74 65                	je     d235 <_IO_stdin_used+0x1235>
    d1d0:	72 66                	jb     d238 <_IO_stdin_used+0x1238>
    d1d2:	61                   	(bad)  
    d1d3:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d1d6:	74 6f                	je     d247 <_IO_stdin_used+0x1247>
    d1d8:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d1dc:	74 65                	je     d243 <_IO_stdin_used+0x1243>
    d1de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d1df:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d1e2:	0a 09                	or     cl,BYTE PTR [rcx]
    d1e4:	2d 70 20 70 72       	sub    eax,0x72702070
    d1e9:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d1f0:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d1f4:	0a 09                	or     cl,BYTE PTR [rcx]
    d1f6:	2d 71 20 65 78       	sub    eax,0x78652071
    d1fb:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d202:	74 
    d203:	6c                   	ins    BYTE PTR es:[rdi],dx
    d204:	79 0a                	jns    d210 <_IO_stdin_used+0x1210>
    d206:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d209:	00 2f                	add    BYTE PTR [rdi],ch
    d20b:	70 72                	jo     d27f <_IO_stdin_used+0x127f>
    d20d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d20e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d210:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d213:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d21a:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d21d:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d220:	6d                   	ins    DWORD PTR es:[rdi],dx
    d221:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d225:	75 6e                	jne    d295 <_IO_stdin_used+0x1295>
    d227:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f292 <_end+0x70504272>
    d22e:	75 73                	jne    d2a3 <_IO_stdin_used+0x12a3>
    d230:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d232:	25 73 00 00 00       	and    eax,0x73
    d237:	00 e2                	add    dl,ah
    d239:	96                   	xchg   esi,eax
    d23a:	88 e2                	mov    dl,ah
    d23c:	96                   	xchg   esi,eax
    d23d:	88 e2                	mov    dl,ah
    d23f:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d246:	88 e2                	mov    dl,ah
    d248:	96                   	xchg   esi,eax
    d249:	88 e2                	mov    dl,ah
    d24b:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d252:	88 e2                	mov    dl,ah
    d254:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d25b:	96                   	xchg   esi,eax
    d25c:	88 e2                	mov    dl,ah
    d25e:	96                   	xchg   esi,eax
    d25f:	88 e2                	mov    dl,ah
    d261:	96                   	xchg   esi,eax
    d262:	88 e2                	mov    dl,ah
    d264:	96                   	xchg   esi,eax
    d265:	88 e2                	mov    dl,ah
    d267:	96                   	xchg   esi,eax
    d268:	88 e2                	mov    dl,ah
    d26a:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d271:	96                   	xchg   esi,eax
    d272:	88 e2                	mov    dl,ah
    d274:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d27b:	88 0a                	mov    BYTE PTR [rdx],cl
    d27d:	e2 96                	loop   d215 <_IO_stdin_used+0x1215>
    d27f:	88 e2                	mov    dl,ah
    d281:	96                   	xchg   esi,eax
    d282:	88 e2                	mov    dl,ah
    d284:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d28b:	88 e2                	mov    dl,ah
    d28d:	96                   	xchg   esi,eax
    d28e:	88 e2                	mov    dl,ah
    d290:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d297:	88 e2                	mov    dl,ah
    d299:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2a0:	88 e2                	mov    dl,ah
    d2a2:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d2a9:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d2af:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d2b5:	96                   	xchg   esi,eax
    d2b6:	88 e2                	mov    dl,ah
    d2b8:	96                   	xchg   esi,eax
    d2b9:	88 e2                	mov    dl,ah
    d2bb:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2c2:	88 0a                	mov    BYTE PTR [rdx],cl
    d2c4:	e2 96                	loop   d25c <_IO_stdin_used+0x125c>
    d2c6:	88 e2                	mov    dl,ah
    d2c8:	96                   	xchg   esi,eax
    d2c9:	88 e2                	mov    dl,ah
    d2cb:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2d2:	88 e2                	mov    dl,ah
    d2d4:	96                   	xchg   esi,eax
    d2d5:	88 e2                	mov    dl,ah
    d2d7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2de:	88 e2                	mov    dl,ah
    d2e0:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2e7:	88 e2                	mov    dl,ah
    d2e9:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d2f0:	e2 96                	loop   d288 <_IO_stdin_used+0x1288>
    d2f2:	88 e2                	mov    dl,ah
    d2f4:	96                   	xchg   esi,eax
    d2f5:	88 e2                	mov    dl,ah
    d2f7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2fe:	88 e2                	mov    dl,ah
    d300:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d307:	88 0a                	mov    BYTE PTR [rdx],cl
    d309:	e2 80                	loop   d28b <_IO_stdin_used+0x128b>
    d30b:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d311:	88 e2                	mov    dl,ah
    d313:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d31a:	96                   	xchg   esi,eax
    d31b:	88 e2                	mov    dl,ah
    d31d:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d324:	88 e2                	mov    dl,ah
    d326:	96                   	xchg   esi,eax
    d327:	88 e2                	mov    dl,ah
    d329:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d330:	88 e2                	mov    dl,ah
    d332:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d339:	88 e2                	mov    dl,ah
    d33b:	96                   	xchg   esi,eax
    d33c:	88 e2                	mov    dl,ah
    d33e:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d345:	88 e2                	mov    dl,ah
    d347:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d34e:	88 0a                	mov    BYTE PTR [rdx],cl
    d350:	20 e2                	and    dl,ah
    d352:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d359:	88 e2                	mov    dl,ah
    d35b:	96                   	xchg   esi,eax
    d35c:	88 e2                	mov    dl,ah
    d35e:	96                   	xchg   esi,eax
    d35f:	88 e2                	mov    dl,ah
    d361:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d368:	96                   	xchg   esi,eax
    d369:	88 e2                	mov    dl,ah
    d36b:	96                   	xchg   esi,eax
    d36c:	88 e2                	mov    dl,ah
    d36e:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d375:	88 e2                	mov    dl,ah
    d377:	96                   	xchg   esi,eax
    d378:	88 e2                	mov    dl,ah
    d37a:	96                   	xchg   esi,eax
    d37b:	88 e2                	mov    dl,ah
    d37d:	96                   	xchg   esi,eax
    d37e:	88 e2                	mov    dl,ah
    d380:	96                   	xchg   esi,eax
    d381:	88 e2                	mov    dl,ah
    d383:	96                   	xchg   esi,eax
    d384:	88 e2                	mov    dl,ah
    d386:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d38d:	88 e2                	mov    dl,ah
    d38f:	96                   	xchg   esi,eax
    d390:	88 e2                	mov    dl,ah
    d392:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d399:	88 e2                	mov    dl,ah
    d39b:	96                   	xchg   esi,eax
    d39c:	88 e2                	mov    dl,ah
    d39e:	96                   	xchg   esi,eax
    d39f:	88 e2                	mov    dl,ah
    d3a1:	96                   	xchg   esi,eax
    d3a2:	88 e2                	mov    dl,ah
    d3a4:	96                   	xchg   esi,eax
    d3a5:	88 e2                	mov    dl,ah
    d3a7:	96                   	xchg   esi,eax
    d3a8:	88 00                	mov    BYTE PTR [rax],al
    d3aa:	00 00                	add    BYTE PTR [rax],al
    d3ac:	00 00                	add    BYTE PTR [rax],al
    d3ae:	00 00                	add    BYTE PTR [rax],al
    d3b0:	0a 00                	or     al,BYTE PTR [rax]
    d3b2:	0d 00 00 00 00       	or     eax,0x0
    d3b7:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d3ba:	68 5f 73 65 72       	push   0x7265735f
    d3bf:	76 65                	jbe    d426 <_IO_stdin_used+0x1426>
    d3c1:	72 2e                	jb     d3f1 <_IO_stdin_used+0x13f1>
    d3c3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3c5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3c8:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d3cf:	20 
    d3d0:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d3d3:	61                   	(bad)  
    d3d4:	74 65                	je     d43b <_IO_stdin_used+0x143b>
    d3d6:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d3d9:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d3dc:	74 00                	je     d3de <_IO_stdin_used+0x13de>
    d3de:	00 00                	add    BYTE PTR [rax],al
    d3e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d3e1:	73 68                	jae    d44b <_IO_stdin_used+0x144b>
    d3e3:	5f                   	pop    rdi
    d3e4:	73 65                	jae    d44b <_IO_stdin_used+0x144b>
    d3e6:	72 76                	jb     d45e <_IO_stdin_used+0x145e>
    d3e8:	65 72 2e             	gs jb  d419 <_IO_stdin_used+0x1419>
    d3eb:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3ed:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3f0:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d3f7:	6e 
    d3f8:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d3fb:	74 73                	je     d470 <_IO_stdin_used+0x1470>
    d3fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d3fe:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d401:	70 74                	jo     d477 <_IO_stdin_used+0x1477>
    d403:	00 00                	add    BYTE PTR [rax],al
    d405:	00 00                	add    BYTE PTR [rax],al
    d407:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d40a:	68 5f 73 65 72       	push   0x7265735f
    d40f:	76 65                	jbe    d476 <_IO_stdin_used+0x1476>
    d411:	72 2e                	jb     d441 <_IO_stdin_used+0x1441>
    d413:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d415:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d418:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d419:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d420:	20 
    d421:	73 6f                	jae    d492 <_IO_stdin_used+0x1492>
    d423:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d426:	74 20                	je     d448 <_IO_stdin_used+0x1448>
    d428:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d42a:	72 20                	jb     d44c <_IO_stdin_used+0x144c>
    d42c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d42d:	73 68                	jae    d497 <_IO_stdin_used+0x1497>
    d42f:	5f                   	pop    rdi
    d430:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d435:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d43c:	00 
    d43d:	00 00                	add    BYTE PTR [rax],al
    d43f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d442:	68 5f 73 65 72       	push   0x7265735f
    d447:	76 65                	jbe    d4ae <_IO_stdin_used+0x14ae>
    d449:	72 2e                	jb     d479 <_IO_stdin_used+0x1479>
    d44b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d44d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d450:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d457:	6e 
    d458:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d45c:	74 65                	je     d4c3 <_IO_stdin_used+0x14c3>
    d45e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d45f:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d466:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d469:	68 5f 66 64 00       	push   0x64665f
    d46e:	00 00                	add    BYTE PTR [rax],al
    d470:	46 61                	rex.RX (bad) 
    d472:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d479:	6f 
    d47a:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d47d:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d480:	74 20                	je     d4a2 <_IO_stdin_used+0x14a2>
    d482:	61                   	(bad)  
    d483:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d486:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d48d:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df06 <_end+0x2fed2ee6>
    d493:	78 25                	js     d4ba <_IO_stdin_used+0x14ba>
    d495:	30 32                	xor    BYTE PTR [rdx],dh
    d497:	78 0a                	js     d4a3 <_IO_stdin_used+0x14a3>
    d499:	00 00                	add    BYTE PTR [rax],al
    d49b:	00 00                	add    BYTE PTR [rax],al
    d49d:	00 00                	add    BYTE PTR [rax],al
    d49f:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4a2:	00 00                	add    BYTE PTR [rax],al
    d4a4:	00 00                	add    BYTE PTR [rax],al
    d4a6:	00 00                	add    BYTE PTR [rax],al
    d4a8:	42 61                	rex.X (bad) 
    d4aa:	73 69                	jae    d515 <_IO_stdin_used+0x1515>
    d4ac:	63 20                	movsxd esp,DWORD PTR [rax]
    d4ae:	70 6f                	jo     d51f <_IO_stdin_used+0x151f>
    d4b0:	72 74                	jb     d526 <_IO_stdin_used+0x1526>
    d4b2:	73 63                	jae    d517 <_IO_stdin_used+0x1517>
    d4b4:	61                   	(bad)  
    d4b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4b6:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4ba:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4bf:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4c3:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4c4:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d4c7:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d4ca:	64 72 65             	fs jb  d532 <_IO_stdin_used+0x1532>
    d4cd:	73 73                	jae    d542 <_IO_stdin_used+0x1542>
    d4cf:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df48 <_IO_stdin_used+0x1f48>
    d4d5:	00 00                	add    BYTE PTR [rax],al
    d4d7:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d4da:	72 74                	jb     d550 <_IO_stdin_used+0x1550>
    d4dc:	73 63                	jae    d541 <_IO_stdin_used+0x1541>
    d4de:	61                   	(bad)  
    d4df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4e0:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4e4:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4e9:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4ed:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4ee:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f567 <_end+0x744e4547>
    d4f4:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df6d <_IO_stdin_used+0x1f6d>
    d4fa:	00 00                	add    BYTE PTR [rax],al
    d4fc:	00 00                	add    BYTE PTR [rax],al
    d4fe:	00 00                	add    BYTE PTR [rax],al
    d500:	46                   	rex.RX
    d501:	49                   	rex.WB
    d502:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d506:	72 74                	jb     d57c <_IO_stdin_used+0x157c>
    d508:	73 63                	jae    d56d <_IO_stdin_used+0x156d>
    d50a:	61                   	(bad)  
    d50b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d50c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d510:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d515:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d518:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d519:	6d                   	ins    DWORD PTR es:[rdi],dx
    d51a:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d51d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d520:	64 72 65             	fs jb  d588 <_IO_stdin_used+0x1588>
    d523:	73 73                	jae    d598 <_IO_stdin_used+0x1598>
    d525:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df9e <_IO_stdin_used+0x1f9e>
    d52b:	00 00                	add    BYTE PTR [rax],al
    d52d:	00 00                	add    BYTE PTR [rax],al
    d52f:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d532:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d536:	72 74                	jb     d5ac <_IO_stdin_used+0x15ac>
    d538:	73 63                	jae    d59d <_IO_stdin_used+0x159d>
    d53a:	61                   	(bad)  
    d53b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d53c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d540:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d545:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d548:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d549:	6d                   	ins    DWORD PTR es:[rdi],dx
    d54a:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5c3 <_end+0x744e45a3>
    d550:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000dfc9 <_end+0x2fed2fa9>
    d556:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
    d559:	30 2e                	xor    BYTE PTR [rsi],ch
    d55b:	31 00                	xor    DWORD PTR [rax],eax
    d55d:	30 2e                	xor    BYTE PTR [rsi],ch
    d55f:	30 2e                	xor    BYTE PTR [rsi],ch
    d561:	30 2e                	xor    BYTE PTR [rsi],ch
    d563:	31 00                	xor    DWORD PTR [rax],eax
    d565:	00 00                	add    BYTE PTR [rax],al
    d567:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d56a:	70 20                	jo     d58c <_IO_stdin_used+0x158c>
    d56c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d56e:	74 72                	je     d5e2 <_IO_stdin_used+0x15e2>
    d570:	79 20                	jns    d592 <_IO_stdin_used+0x1592>
    d572:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d575:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d576:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d57c:	72 20                	jb     d59e <_IO_stdin_used+0x159e>
    d57e:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d585:	65 73 73             	gs jae d5fb <_IO_stdin_used+0x15fb>
    d588:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211001 <_end+0x770d5fe1>
    d58e:	61                   	(bad)  
    d58f:	73 20                	jae    d5b1 <_IO_stdin_used+0x15b1>
    d591:	25 73 20 69 73       	and    eax,0x73692073
    d596:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d599:	77 20                	ja     d5bb <_IO_stdin_used+0x15bb>
    d59b:	25 73 00 72 00       	and    eax,0x720073
    d5a0:	2f                   	(bad)  
    d5a1:	75 73                	jne    d616 <_IO_stdin_used+0x1616>
    d5a3:	72 2f                	jb     d5d4 <_IO_stdin_used+0x15d4>
    d5a5:	73 68                	jae    d60f <_IO_stdin_used+0x160f>
    d5a7:	61                   	(bad)  
    d5a8:	72 65                	jb     d60f <_IO_stdin_used+0x160f>
    d5aa:	2f                   	(bad)  
    d5ab:	76 69                	jbe    d616 <_IO_stdin_used+0x1616>
    d5ad:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d5b4:	63 61 
    d5b6:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d5b9:	2e 63 73 76          	movsxd esi,DWORD PTR cs:[rbx+0x76]
    d5bd:	00 00                	add    BYTE PTR [rax],al
    d5bf:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d5c2:	75 6c                	jne    d630 <_IO_stdin_used+0x1630>
    d5c4:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d5c8:	74 20                	je     d5ea <_IO_stdin_used+0x15ea>
    d5ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5cc:	61                   	(bad)  
    d5cd:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d5d1:	70 20                	jo     d5f3 <_IO_stdin_used+0x15f3>
    d5d3:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d5d6:	68 65 20 66 72       	push   0x72662065
    d5db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5dd:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d5e1:	61                   	(bad)  
    d5e2:	62 61                	(bad)  
    d5e4:	73 65                	jae    d64b <_IO_stdin_used+0x164b>
    d5e6:	2c 20                	sub    al,0x20
    d5e8:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d5ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5f0:	65 78 69             	gs js  d65c <_IO_stdin_used+0x165c>
    d5f3:	73 74                	jae    d669 <_IO_stdin_used+0x1669>
    d5f5:	61                   	(bad)  
    d5f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5f7:	74 00                	je     d5f9 <_IO_stdin_used+0x15f9>
    d5f9:	0a 00                	or     al,BYTE PTR [rax]
    d5fb:	2c 00                	sub    al,0x0
    d5fd:	00 00                	add    BYTE PTR [rax],al
    d5ff:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d603:	20 31                	and    BYTE PTR [rcx],dh
    d605:	2e 30 20             	xor    BYTE PTR cs:[rax],ah
    d608:	44                   	rex.R
    d609:	41 54                	push   r12
    d60b:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d60e:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d612:	20 31                	and    BYTE PTR [rcx],dh
    d614:	2e 32 20             	xor    ah,BYTE PTR cs:[rax]
    d617:	44                   	rex.R
    d618:	41 54                	push   r12
    d61a:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d61d:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d621:	20 31                	and    BYTE PTR [rcx],dh
    d623:	2e 33 20             	xor    esp,DWORD PTR cs:[rax]
    d626:	44                   	rex.R
    d627:	41 54                	push   r12
    d629:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d62c:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d62f:	69 65 6e 74 20 48 65 	imul   esp,DWORD PTR [rbp+0x6e],0x65482074
    d636:	6c                   	ins    BYTE PTR es:[rdi],dx
    d637:	6c                   	ins    BYTE PTR es:[rdi],dx
    d638:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d639:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    d63c:	72 76                	jb     d6b4 <_IO_stdin_used+0x16b4>
    d63e:	65 72 20             	gs jb  d661 <_IO_stdin_used+0x1661>
    d641:	48                   	rex.W
    d642:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d644:	6c                   	ins    BYTE PTR es:[rdi],dx
    d645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d646:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d649:	77 20                	ja     d66b <_IO_stdin_used+0x166b>
    d64b:	53                   	push   rbx
    d64c:	65 73 73             	gs jae d6c2 <_IO_stdin_used+0x16c2>
    d64f:	69 6f 6e 20 54 69 63 	imul   ebp,DWORD PTR [rdi+0x6e],0x63695420
    d656:	6b 65 74 00          	imul   esp,DWORD PTR [rbp+0x74],0x0
    d65a:	43                   	rex.XB
    d65b:	65 72 74             	gs jb  d6d2 <_IO_stdin_used+0x16d2>
    d65e:	69 66 69 63 61 74 65 	imul   esp,DWORD PTR [rsi+0x69],0x65746163
    d665:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d668:	69 65 6e 74 20 4b 65 	imul   esp,DWORD PTR [rbp+0x6e],0x654b2074
    d66f:	78 00                	js     d671 <_IO_stdin_used+0x1671>
    d671:	00 00                	add    BYTE PTR [rax],al
    d673:	00 a9 ab ff ff 0d    	add    BYTE PTR [rcx+0xdffffab],ch
    d679:	ab                   	stos   DWORD PTR es:[rdi],eax
    d67a:	ff                   	(bad)  
    d67b:	ff 26                	jmp    QWORD PTR [rsi]
    d67d:	ab                   	stos   DWORD PTR es:[rdi],eax
    d67e:	ff                   	(bad)  
    d67f:	ff a9 ab ff ff 47    	jmp    FWORD PTR [rcx+0x47ffffab]
    d685:	ab                   	stos   DWORD PTR es:[rdi],eax
    d686:	ff                   	(bad)  
    d687:	ff a9 ab ff ff a9    	jmp    FWORD PTR [rcx-0x56000055]
    d68d:	ab                   	stos   DWORD PTR es:[rdi],eax
    d68e:	ff                   	(bad)  
    d68f:	ff a9 ab ff ff a9    	jmp    FWORD PTR [rcx-0x56000055]
    d695:	ab                   	stos   DWORD PTR es:[rdi],eax
    d696:	ff                   	(bad)  
    d697:	ff a9 ab ff ff 89    	jmp    FWORD PTR [rcx-0x76000055]
    d69d:	ab                   	stos   DWORD PTR es:[rdi],eax
    d69e:	ff                   	(bad)  
    d69f:	ff 68 ab             	jmp    FWORD PTR [rax-0x55]
    d6a2:	ff                   	(bad)  
    d6a3:	ff 00                	inc    DWORD PTR [rax]
    d6a5:	00 00                	add    BYTE PTR [rax],al
    d6a7:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d6aa:	64 61                	fs (bad) 
    d6ac:	74 69                	je     d717 <_IO_stdin_used+0x1717>
    d6ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6af:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d6b4:	53                   	push   rbx
    d6b5:	51                   	push   rcx
    d6b6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d6b7:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d6be:	6f 
    d6bf:	72 3a                	jb     d6fb <_IO_stdin_used+0x16fb>
    d6c1:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e13a <__GNU_EH_FRAME_HDR+0xd6>
    d6c7:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d6ca:	53                   	push   rbx
    d6cb:	45 52                	rex.RB push r10
    d6cd:	54                   	push   rsp
    d6ce:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d6d1:	54                   	push   rsp
    d6d2:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d6d6:	70 5f                	jo     d737 <_IO_stdin_used+0x1737>
    d6d8:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d6db:	68 65 20 28 69       	push   0x69282065
    d6e0:	70 5f                	jo     d741 <_IO_stdin_used+0x1741>
    d6e2:	61                   	(bad)  
    d6e3:	64 64 72 65          	fs fs jb d74c <_IO_stdin_used+0x174c>
    d6e7:	73 73                	jae    d75c <_IO_stdin_used+0x175c>
    d6e9:	2c 20                	sub    al,0x20
    d6eb:	6d                   	ins    DWORD PTR es:[rdi],dx
    d6ec:	61                   	(bad)  
    d6ed:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d6f0:	64 64 72 65          	fs fs jb d759 <_IO_stdin_used+0x1759>
    d6f4:	73 73                	jae    d769 <_IO_stdin_used+0x1769>
    d6f6:	29 20                	sub    DWORD PTR [rax],esp
    d6f8:	56                   	push   rsi
    d6f9:	41                   	rex.B
    d6fa:	4c 55                	rex.WR push rbp
    d6fc:	45 53                	rex.RB push r11
    d6fe:	20 28                	and    BYTE PTR [rax],ch
    d700:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf979 <_end+0x20194959>
    d706:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f97f <_end+0x3b16495f>
    d70c:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d70f:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d716:	63 6f 
    d718:	75 6e                	jne    d788 <_IO_stdin_used+0x1788>
    d71a:	74 65                	je     d781 <_IO_stdin_used+0x1781>
    d71c:	72 65                	jb     d783 <_IO_stdin_used+0x1783>
    d71e:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d722:	72 6f                	jb     d793 <_IO_stdin_used+0x1793>
    d724:	72 3a                	jb     d760 <_IO_stdin_used+0x1760>
    d726:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e19f <_end+0x2eed317f>
    d72c:	75 73                	jne    d7a1 <_IO_stdin_used+0x17a1>
    d72e:	72 2f                	jb     d75f <_IO_stdin_used+0x175f>
    d730:	73 68                	jae    d79a <_IO_stdin_used+0x179a>
    d732:	61                   	(bad)  
    d733:	72 65                	jb     d79a <_IO_stdin_used+0x179a>
    d735:	2f                   	(bad)  
    d736:	76 69                	jbe    d7a1 <_IO_stdin_used+0x17a1>
    d738:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d73f:	2e 64 
    d741:	62                   	(bad)  
    d742:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d745:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d74c:	72 6f 
    d74e:	72 20                	jb     d770 <_IO_stdin_used+0x1770>
    d750:	25 73 0a 00 00       	and    eax,0xa73
    d755:	00 00                	add    BYTE PTR [rax],al
    d757:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d75a:	53                   	push   rbx
    d75b:	45 52                	rex.RB push r10
    d75d:	54                   	push   rsp
    d75e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d761:	54                   	push   rsp
    d762:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d766:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d76d:	20 28                	and    BYTE PTR [rax],ch
    d76f:	73 65                	jae    d7d6 <_IO_stdin_used+0x17d6>
    d771:	72 76                	jb     d7e9 <_IO_stdin_used+0x17e9>
    d773:	5f                   	pop    rdi
    d774:	61                   	(bad)  
    d775:	64 64 72 2c          	fs fs jb d7a5 <_IO_stdin_used+0x17a5>
    d779:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d77c:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d783:	73 65                	jae    d7ea <_IO_stdin_used+0x17ea>
    d785:	72 76                	jb     d7fd <_IO_stdin_used+0x17fd>
    d787:	5f                   	pop    rdi
    d788:	70 6f                	jo     d7f9 <_IO_stdin_used+0x17f9>
    d78a:	72 74                	jb     d800 <_IO_stdin_used+0x1800>
    d78c:	2c 63                	sub    al,0x63
    d78e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d78f:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d796:	73 65                	jae    d7fd <_IO_stdin_used+0x17fd>
    d798:	72 76                	jb     d810 <_IO_stdin_used+0x1810>
    d79a:	5f                   	pop    rdi
    d79b:	70 6b                	jo     d808 <_IO_stdin_used+0x1808>
    d79d:	74 5f                	je     d7fe <_IO_stdin_used+0x17fe>
    d79f:	73 65                	jae    d806 <_IO_stdin_used+0x1806>
    d7a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7a2:	74 2c                	je     d7d0 <_IO_stdin_used+0x17d0>
    d7a4:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7a8:	70 6b                	jo     d815 <_IO_stdin_used+0x1815>
    d7aa:	74 5f                	je     d80b <_IO_stdin_used+0x180b>
    d7ac:	73 65                	jae    d813 <_IO_stdin_used+0x1813>
    d7ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7af:	74 2c                	je     d7dd <_IO_stdin_used+0x17dd>
    d7b1:	73 65                	jae    d818 <_IO_stdin_used+0x1818>
    d7b3:	72 76                	jb     d82b <_IO_stdin_used+0x182b>
    d7b5:	5f                   	pop    rdi
    d7b6:	70 6b                	jo     d823 <_IO_stdin_used+0x1823>
    d7b8:	74 5f                	je     d819 <_IO_stdin_used+0x1819>
    d7ba:	72 65                	jb     d821 <_IO_stdin_used+0x1821>
    d7bc:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7bf:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7c3:	70 6b                	jo     d830 <_IO_stdin_used+0x1830>
    d7c5:	74 5f                	je     d826 <_IO_stdin_used+0x1826>
    d7c7:	72 65                	jb     d82e <_IO_stdin_used+0x182e>
    d7c9:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7cc:	70 72                	jo     d840 <_IO_stdin_used+0x1840>
    d7ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7cf:	74 6f                	je     d840 <_IO_stdin_used+0x1840>
    d7d1:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d7d4:	2c 61                	sub    al,0x61
    d7d6:	76 67                	jbe    d83f <_IO_stdin_used+0x183f>
    d7d8:	5f                   	pop    rdi
    d7d9:	70 70                	jo     d84b <_IO_stdin_used+0x184b>
    d7db:	73 2c                	jae    d809 <_IO_stdin_used+0x1809>
    d7dd:	73 74                	jae    d853 <_IO_stdin_used+0x1853>
    d7df:	61                   	(bad)  
    d7e0:	72 74                	jb     d856 <_IO_stdin_used+0x1856>
    d7e2:	5f                   	pop    rdi
    d7e3:	74 69                	je     d84e <_IO_stdin_used+0x184e>
    d7e5:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7e6:	65 2c 65             	gs sub al,0x65
    d7e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7ea:	64 5f                	fs pop rdi
    d7ec:	74 69                	je     d857 <_IO_stdin_used+0x1857>
    d7ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7ef:	65 2c 64             	gs sub al,0x64
    d7f2:	61                   	(bad)  
    d7f3:	74 61                	je     d856 <_IO_stdin_used+0x1856>
    d7f5:	5f                   	pop    rdi
    d7f6:	70 6b                	jo     d863 <_IO_stdin_used+0x1863>
    d7f8:	74 73                	je     d86d <_IO_stdin_used+0x186d>
    d7fa:	2c 63                	sub    al,0x63
    d7fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7fe:	74 72                	je     d872 <_IO_stdin_used+0x1872>
    d800:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d801:	6c                   	ins    BYTE PTR es:[rdi],dx
    d802:	5f                   	pop    rdi
    d803:	70 6b                	jo     d870 <_IO_stdin_used+0x1870>
    d805:	74 73                	je     d87a <_IO_stdin_used+0x187a>
    d807:	29 20                	sub    DWORD PTR [rax],esp
    d809:	56                   	push   rsi
    d80a:	41                   	rex.B
    d80b:	4c 55                	rex.WR push rbp
    d80d:	45 53                	rex.RB push r11
    d80f:	20 28                	and    BYTE PTR [rax],ch
    d811:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfa8a <_end+0x22194a6a>
    d817:	25 73 22 2c 25       	and    eax,0x252c2273
    d81c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d81d:	64 2c 25             	fs sub al,0x25
    d820:	6c                   	ins    BYTE PTR es:[rdi],dx
    d821:	64 2c 25             	fs sub al,0x25
    d824:	64 2c 25             	fs sub al,0x25
    d827:	64 2c 25             	fs sub al,0x25
    d82a:	64 2c 25             	fs sub al,0x25
    d82d:	64 2c 25             	fs sub al,0x25
    d830:	64 2c 25             	fs sub al,0x25
    d833:	64 2c 25             	fs sub al,0x25
    d836:	6c                   	ins    BYTE PTR es:[rdi],dx
    d837:	64 2c 25             	fs sub al,0x25
    d83a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d83b:	64 2c 25             	fs sub al,0x25
    d83e:	64 2c 25             	fs sub al,0x25
    d841:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d844:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d847:	4c                   	rex.WR
    d848:	49 54                	rex.WB push r12
    d84a:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d84e:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d851:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d852:	74 65                	je     d8b9 <_IO_stdin_used+0x18b9>
    d854:	72 65                	jb     d8bb <_IO_stdin_used+0x18bb>
    d856:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d85a:	72 6f                	jb     d8cb <_IO_stdin_used+0x18cb>
    d85c:	72 3a                	jb     d898 <_IO_stdin_used+0x1898>
    d85e:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e2d7 <_end+0x52ed32b7>
    d864:	74 72                	je     d8d8 <_IO_stdin_used+0x18d8>
    d866:	6c                   	ins    BYTE PTR es:[rdi],dx
    d867:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d868:	63 20                	movsxd esp,DWORD PTR [rax]
    d86a:	73 75                	jae    d8e1 <_IO_stdin_used+0x18e1>
    d86c:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d86f:	73 73                	jae    d8e4 <_IO_stdin_used+0x18e4>
    d871:	66 75 6c             	data16 jne d8e0 <_IO_stdin_used+0x18e0>
    d874:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d877:	65 72 79             	gs jb  d8f3 <_IO_stdin_used+0x18f3>
    d87a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d87c:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d881:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d882:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d889:	6f 
    d88a:	72 72                	jb     d8fe <_IO_stdin_used+0x18fe>
    d88c:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d891:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d892:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d899:	6f 
    d89a:	72 72                	jb     d90e <_IO_stdin_used+0x190e>
    d89c:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d8a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8a2:	73 73                	jae    d917 <_IO_stdin_used+0x1917>
    d8a4:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d8ab:	50                   	push   rax
    d8ac:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d8af:	75 74                	jne    d925 <_IO_stdin_used+0x1925>
    d8b1:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d8b5:	72 63                	jb     d91a <_IO_stdin_used+0x191a>
    d8b7:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d8bb:	74 65                	je     d922 <_IO_stdin_used+0x1922>
    d8bd:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8be:	70 74                	jo     d934 <_IO_stdin_used+0x1934>
    d8c0:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8c2:	25 73 28 73 75       	and    eax,0x75732873
    d8c7:	73 70                	jae    d939 <_IO_stdin_used+0x1939>
    d8c9:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d8ce:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d8d3:	2e 20 25 64 20 66 61 	and    BYTE PTR cs:[rip+0x61662064],ah        # 6166f93e <_end+0x6153491e>
    d8da:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d8e1:	67 
    d8e2:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d8e9:	50                   	push   rax
    d8ea:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d8ef:	4c                   	rex.WR
    d8f0:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d8f4:	54                   	push   rsp
    d8f5:	52                   	push   rdx
    d8f6:	41                   	rex.B
    d8f7:	4e 53                	rex.WRX push rbx
    d8f9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8fb:	25 64 3a 20 25       	and    eax,0x25203a64
    d900:	73 3a                	jae    d93c <_IO_stdin_used+0x193c>
    d902:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d907:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261380 <_end+0x64126360>
    d90d:	0a 00                	or     al,BYTE PTR [rax]
    d90f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d912:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d916:	57                   	push   rdi
    d917:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d91a:	4e 56                	rex.WRX push rsi
    d91c:	3a 20                	cmp    ah,BYTE PTR [rax]
    d91e:	25 64 3a 20 25       	and    eax,0x25203a64
    d923:	73 3a                	jae    d95f <_IO_stdin_used+0x195f>
    d925:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d92a:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613a3 <_end+0x64126383>
    d930:	0a 00                	or     al,BYTE PTR [rax]
    d932:	00 00                	add    BYTE PTR [rax],al
    d934:	00 00                	add    BYTE PTR [rax],al
    d936:	00 00                	add    BYTE PTR [rax],al
    d938:	53                   	push   rbx
    d939:	50                   	push   rax
    d93a:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d93f:	20 32                	and    BYTE PTR [rdx],dh
    d941:	2f                   	(bad)  
    d942:	33 3a                	xor    edi,DWORD PTR [rdx]
    d944:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 252113ae <_end+0x250d638e>
    d94a:	73 3a                	jae    d986 <_IO_stdin_used+0x1986>
    d94c:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d951:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613ca <_end+0x641263aa>
    d957:	0a 00                	or     al,BYTE PTR [rax]
    d959:	00 00                	add    BYTE PTR [rax],al
    d95b:	00 00                	add    BYTE PTR [rax],al
    d95d:	00 00                	add    BYTE PTR [rax],al
    d95f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d962:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d966:	54                   	push   rsp
    d967:	52                   	push   rdx
    d968:	59                   	pop    rcx
    d969:	3a 20                	cmp    ah,BYTE PTR [rax]
    d96b:	25 64 3a 20 53       	and    eax,0x53203a64
    d970:	45 53                	rex.RB push r11
    d972:	53                   	push   rbx
    d973:	49                   	rex.WB
    d974:	4f                   	rex.WRXB
    d975:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d979:	54                   	push   rsp
    d97a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d97c:	25 73 3a 25 64       	and    eax,0x64253a73
    d981:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9c5 <_end+0x731249a5>
    d987:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3f1 <__GNU_EH_FRAME_HDR+0x38d>
    d98d:	00 00                	add    BYTE PTR [rax],al
    d98f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d992:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d996:	54                   	push   rsp
    d997:	52                   	push   rdx
    d998:	59                   	pop    rcx
    d999:	3a 20                	cmp    ah,BYTE PTR [rax]
    d99b:	25 64 3a 20 50       	and    eax,0x50203a64
    d9a0:	4f                   	rex.WRXB
    d9a1:	4c                   	rex.WR
    d9a2:	49 54                	rex.WB push r12
    d9a4:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9a8:	4e 56                	rex.WRX push rsi
    d9aa:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9ad:	44 20 33             	and    BYTE PTR [rbx],r14b
    d9b0:	2f                   	(bad)  
    d9b1:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9b3:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426142c <_end+0x6412640c>
    d9b9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9fd <_end+0x731249dd>
    d9bf:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e429 <__GNU_EH_FRAME_HDR+0x3c5>
    d9c5:	00 00                	add    BYTE PTR [rax],al
    d9c7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9ca:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9ce:	54                   	push   rsp
    d9cf:	52                   	push   rdx
    d9d0:	59                   	pop    rcx
    d9d1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9d3:	25 64 3a 20 50       	and    eax,0x50203a64
    d9d8:	4f                   	rex.WRXB
    d9d9:	4c                   	rex.WR
    d9da:	49 54                	rex.WB push r12
    d9dc:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9e0:	4e 56                	rex.WRX push rsi
    d9e2:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9e5:	44 20 32             	and    BYTE PTR [rdx],r14b
    d9e8:	2f                   	(bad)  
    d9e9:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9eb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261464 <_end+0x64126444>
    d9f1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa35 <_end+0x73124a15>
    d9f7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e461 <__GNU_EH_FRAME_HDR+0x3fd>
    d9fd:	00 00                	add    BYTE PTR [rax],al
    d9ff:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    da02:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    da06:	54                   	push   rsp
    da07:	52                   	push   rdx
    da08:	59                   	pop    rcx
    da09:	3a 20                	cmp    ah,BYTE PTR [rax]
    da0b:	25 64 3a 20 50       	and    eax,0x50203a64
    da10:	4f                   	rex.WRXB
    da11:	4c                   	rex.WR
    da12:	49 54                	rex.WB push r12
    da14:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da18:	4e 56                	rex.WRX push rsi
    da1a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da1d:	44 20 31             	and    BYTE PTR [rcx],r14b
    da20:	2f                   	(bad)  
    da21:	33 3a                	xor    edi,DWORD PTR [rdx]
    da23:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426149c <_end+0x6412647c>
    da29:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa6d <_end+0x73124a4d>
    da2f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e499 <__GNU_EH_FRAME_HDR+0x435>
    da35:	00 00                	add    BYTE PTR [rax],al
    da37:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    da3a:	00 00                	add    BYTE PTR [rax],al
    da3c:	00 00                	add    BYTE PTR [rax],al
    da3e:	00 00                	add    BYTE PTR [rax],al
    da40:	43 52                	rex.XB push r10
    da42:	49 54                	rex.WB push r12
    da44:	49                   	rex.WB
    da45:	43                   	rex.XB
    da46:	41                   	rex.B
    da47:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    da4b:	49                   	rex.WB
    da4c:	4c                   	rex.WR
    da4d:	45                   	rex.RB
    da4e:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    da53:	4f 50                	rex.WRXB push r8
    da55:	45                   	rex.RB
    da56:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    da5a:	4c                   	rex.WR
    da5b:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    da5f:	52                   	push   rdx
    da60:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    da64:	47                   	rex.RXB
    da65:	49                   	rex.WB
    da66:	4e                   	rex.WRX
    da67:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    da6a:	25 73 0a 00 25       	and    eax,0x25000a73
    da6f:	73 20                	jae    da91 <_IO_stdin_used+0x1a91>
    da71:	25 73 20 25 73       	and    eax,0x73252073
    da76:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325faba <_end+0x73124a9a>
    da7c:	0a 00                	or     al,BYTE PTR [rax]
    da7e:	25 73 20 25 73       	and    eax,0x73252073
    da83:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614fc <_end+0x641264dc>
    da89:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325facd <_end+0x73124aad>
    da8f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4f9 <__GNU_EH_FRAME_HDR+0x495>
    da95:	00 00                	add    BYTE PTR [rax],al
    da97:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    da9a:	79 00                	jns    da9c <_IO_stdin_used+0x1a9c>
    da9c:	41                   	rex.B
    da9d:	4e 59                	rex.WRX pop rcx
    da9f:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    daa2:	4d 50                	rex.WRB push r8
    daa4:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    daa8:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    daab:	50                   	push   rax
    daac:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    daaf:	72 5f                	jb     db10 <_IO_stdin_used+0x1b10>
    dab1:	6d                   	ins    DWORD PTR es:[rdi],dx
    dab2:	61                   	(bad)  
    dab3:	74 63                	je     db18 <_IO_stdin_used+0x1b18>
    dab5:	68 00 6e 6f 6e       	push   0x6e6f6e00
    daba:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    dabe:	72 65                	jb     db25 <_IO_stdin_used+0x1b25>
    dac0:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dac3:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dac7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dac8:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dacb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dacc:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    dad1:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    dad4:	25 73 0a 00 3b       	and    eax,0x3b000a73
    dad9:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    dadc:	75 6e                	jne    db4c <_IO_stdin_used+0x1b4c>
    dade:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    dae2:	65 72 61             	gs jb  db46 <_IO_stdin_used+0x1b46>
    dae5:	74 6f                	je     db56 <_IO_stdin_used+0x1b56>
    dae7:	72 00                	jb     dae9 <_IO_stdin_used+0x1ae9>
    dae9:	61                   	(bad)  
    daea:	6c                   	ins    BYTE PTR es:[rdi],dx
    daeb:	65 72 74             	gs jb  db62 <_IO_stdin_used+0x1b62>
    daee:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    daf1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daf2:	6d                   	ins    DWORD PTR es:[rdi],dx
    daf3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    daf5:	65 74 00             	gs je  daf8 <_IO_stdin_used+0x1af8>
    daf8:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    dafd:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    db04:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db05:	61                   	(bad)  
    db06:	6c                   	ins    BYTE PTR es:[rdi],dx
    db07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db08:	65 74 00             	gs je  db0b <_IO_stdin_used+0x1b0b>
    db0b:	22 3b                	and    bh,BYTE PTR [rbx]
    db0d:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    db10:	6d                   	ins    DWORD PTR es:[rdi],dx
    db11:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    db14:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    db17:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    db1a:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    db1e:	74 68                	je     db88 <_IO_stdin_used+0x1b88>
    db20:	3a 00                	cmp    al,BYTE PTR [rax]
    db22:	74 79                	je     db9d <_IO_stdin_used+0x1b9d>
    db24:	70 65                	jo     db8b <_IO_stdin_used+0x1b8b>
    db26:	3a 00                	cmp    al,BYTE PTR [rax]
    db28:	74 61                	je     db8b <_IO_stdin_used+0x1b8b>
    db2a:	72 67                	jb     db93 <_IO_stdin_used+0x1b93>
    db2c:	65 74 3a             	gs je  db69 <_IO_stdin_used+0x1b69>
    db2f:	22 00                	and    al,BYTE PTR [rax]
    db31:	73 65                	jae    db98 <_IO_stdin_used+0x1b98>
    db33:	76 3a                	jbe    db6f <_IO_stdin_used+0x1b6f>
    db35:	00 00                	add    BYTE PTR [rax],al
    db37:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    db3a:	6c                   	ins    BYTE PTR es:[rdi],dx
    db3b:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db3f:	76 65                	jbe    dba6 <_IO_stdin_used+0x1ba6>
    db41:	72 69                	jb     dbac <_IO_stdin_used+0x1bac>
    db43:	74 79                	je     dbbe <_IO_stdin_used+0x1bbe>
    db45:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db49:	75 6c                	jne    dbb7 <_IO_stdin_used+0x1bb7>
    db4b:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db4f:	20 3e                	and    BYTE PTR [rsi],bh
    db51:	20 30                	and    BYTE PTR [rax],dh
    db53:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    db56:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    db5d:	00 
    db5e:	00 00                	add    BYTE PTR [rax],al
    db60:	52                   	push   rdx
    db61:	75 6c                	jne    dbcf <_IO_stdin_used+0x1bcf>
    db63:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db67:	76 65                	jbe    dbce <_IO_stdin_used+0x1bce>
    db69:	72 69                	jb     dbd4 <_IO_stdin_used+0x1bd4>
    db6b:	74 79                	je     dbe6 <_IO_stdin_used+0x1be6>
    db6d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db71:	75 6c                	jne    dbdf <_IO_stdin_used+0x1bdf>
    db73:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db77:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    db7a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db7b:	75 6d                	jne    dbea <_IO_stdin_used+0x1bea>
    db7d:	65 72 69             	gs jb  dbe9 <_IO_stdin_used+0x1be9>
    db80:	63 20                	movsxd esp,DWORD PTR [rax]
    db82:	76 61                	jbe    dbe5 <_IO_stdin_used+0x1be5>
    db84:	6c                   	ins    BYTE PTR es:[rdi],dx
    db85:	75 65                	jne    dbec <_IO_stdin_used+0x1bec>
    db87:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    db8a:	79 70                	jns    dbfc <_IO_stdin_used+0x1bfc>
    db8c:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    db8f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db91:	76 61                	jbe    dbf4 <_IO_stdin_used+0x1bf4>
    db93:	6c                   	ins    BYTE PTR es:[rdi],dx
    db94:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    db9b:	20 
    db9c:	74 79                	je     dc17 <_IO_stdin_used+0x1c17>
    db9e:	70 65                	jo     dc05 <_IO_stdin_used+0x1c05>
    dba0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dba3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dba4:	75 65                	jne    dc0b <_IO_stdin_used+0x1c0b>
    dba6:	00 00                	add    BYTE PTR [rax],al
    dba8:	25 73 3a 20 69       	and    eax,0x69203a73
    dbad:	74 79                	je     dc28 <_IO_stdin_used+0x1c28>
    dbaf:	70 65                	jo     dc16 <_IO_stdin_used+0x1c16>
    dbb1:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dbb4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb5:	79 20                	jns    dbd7 <_IO_stdin_used+0x1bd7>
    dbb7:	61                   	(bad)  
    dbb8:	70 70                	jo     dc2a <_IO_stdin_used+0x1c2a>
    dbba:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbbb:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dbc2:	72 75                	jb     dc39 <_IO_stdin_used+0x1c39>
    dbc4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbc5:	65 73 20             	gs jae dbe8 <_IO_stdin_used+0x1be8>
    dbc8:	77 69                	ja     dc33 <_IO_stdin_used+0x1c33>
    dbca:	74 68                	je     dc34 <_IO_stdin_used+0x1c34>
    dbcc:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dbcf:	4d 50                	rex.WRB push r8
    dbd1:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dbd4:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dbd7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbd8:	74 6f                	je     dc49 <_IO_stdin_used+0x1c49>
    dbda:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dbdd:	0a 00                	or     al,BYTE PTR [rax]
    dbdf:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    dbe6:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dbe8:	76 61                	jbe    dc4b <_IO_stdin_used+0x1c4b>
    dbea:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbeb:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dbf2:	70 
    dbf3:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dbf6:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dbfb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbfc:	75 65                	jne    dc63 <_IO_stdin_used+0x1c63>
    dbfe:	00 00                	add    BYTE PTR [rax],al
    dc00:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dc07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc08:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc09:	79 20                	jns    dc2b <_IO_stdin_used+0x1c2b>
    dc0b:	61                   	(bad)  
    dc0c:	70 70                	jo     dc7e <_IO_stdin_used+0x1c7e>
    dc0e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc0f:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc16:	72 75                	jb     dc8d <_IO_stdin_used+0x1c8d>
    dc18:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc19:	65 73 20             	gs jae dc3c <_IO_stdin_used+0x1c3c>
    dc1c:	77 69                	ja     dc87 <_IO_stdin_used+0x1c87>
    dc1e:	74 68                	je     dc88 <_IO_stdin_used+0x1c88>
    dc20:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc23:	4d 50                	rex.WRB push r8
    dc25:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc28:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc2b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc2c:	74 6f                	je     dc9d <_IO_stdin_used+0x1c9d>
    dc2e:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc31:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc34:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc35:	70 5f                	jo     dc96 <_IO_stdin_used+0x1c96>
    dc37:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dc3e:	61 
    dc3f:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc40:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc47:	20 
    dc48:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dc4f:	65 
	...
    dc58:	49                   	rex.WB
    dc59:	43                   	rex.XB
    dc5a:	4d 50                	rex.WRB push r8
    dc5c:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dc5f:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc62:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc63:	79 20                	jns    dc85 <_IO_stdin_used+0x1c85>
    dc65:	61                   	(bad)  
    dc66:	70 70                	jo     dcd8 <_IO_stdin_used+0x1cd8>
    dc68:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc69:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc70:	72 75                	jb     dce7 <_IO_stdin_used+0x1ce7>
    dc72:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc73:	65 73 20             	gs jae dc96 <_IO_stdin_used+0x1c96>
    dc76:	77 69                	ja     dce1 <_IO_stdin_used+0x1ce1>
    dc78:	74 68                	je     dce2 <_IO_stdin_used+0x1ce2>
    dc7a:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc7d:	4d 50                	rex.WRB push r8
    dc7f:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc82:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc86:	74 6f                	je     dcf7 <_IO_stdin_used+0x1cf7>
    dc88:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc8b:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc8e:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc8f:	70 5f                	jo     dcf0 <_IO_stdin_used+0x1cf0>
    dc91:	73 65                	jae    dcf8 <_IO_stdin_used+0x1cf8>
    dc93:	71 3a                	jno    dccf <_IO_stdin_used+0x1ccf>
    dc95:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dc98:	76 61                	jbe    dcfb <_IO_stdin_used+0x1cfb>
    dc9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc9b:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dca2:	20 
    dca3:	73 65                	jae    dd0a <_IO_stdin_used+0x1d0a>
    dca5:	71 75                	jno    dd1c <_IO_stdin_used+0x1d1c>
    dca7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dca9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dcac:	76 61                	jbe    dd0f <_IO_stdin_used+0x1d0f>
    dcae:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcaf:	75 65                	jne    dd16 <_IO_stdin_used+0x1d16>
    dcb1:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dcb5:	3a 00                	cmp    al,BYTE PTR [rax]
    dcb7:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dcb9:	76 61                	jbe    dd1c <_IO_stdin_used+0x1d1c>
    dcbb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcbc:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dcc3:	76 
    dcc4:	61                   	(bad)  
    dcc5:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc6:	75 65                	jne    dd2d <_IO_stdin_used+0x1d2d>
    dcc8:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dccb:	61                   	(bad)  
    dccc:	67 73 3a             	addr32 jae dd09 <_IO_stdin_used+0x1d09>
    dccf:	22 00                	and    al,BYTE PTR [rax]
    dcd1:	00 00                	add    BYTE PTR [rax],al
    dcd3:	00 00                	add    BYTE PTR [rax],al
    dcd5:	00 00                	add    BYTE PTR [rax],al
    dcd7:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dcda:	61                   	(bad)  
    dcdb:	67 73 20             	addr32 jae dcfe <_IO_stdin_used+0x1cfe>
    dcde:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcdf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dce0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce1:	79 20                	jns    dd03 <_IO_stdin_used+0x1d03>
    dce3:	61                   	(bad)  
    dce4:	70 70                	jo     dd56 <_IO_stdin_used+0x1d56>
    dce6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce7:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dcee:	72 75                	jb     dd65 <_IO_stdin_used+0x1d65>
    dcf0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcf1:	65 73 20             	gs jae dd14 <_IO_stdin_used+0x1d14>
    dcf4:	77 69                	ja     dd5f <_IO_stdin_used+0x1d5f>
    dcf6:	74 68                	je     dd60 <_IO_stdin_used+0x1d60>
    dcf8:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dcfc:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dcff:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dd02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd03:	74 6f                	je     dd74 <_IO_stdin_used+0x1d74>
    dd05:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dd08:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dd0b:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dd0e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dd10:	76 61                	jbe    dd73 <_IO_stdin_used+0x1d73>
    dd12:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd13:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dd1a:	76 
    dd1b:	61                   	(bad)  
    dd1c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd1d:	75 65                	jne    dd84 <_IO_stdin_used+0x1d84>
    dd1f:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dd22:	72 65                	jb     dd89 <_IO_stdin_used+0x1d89>
    dd24:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dd26:	00 00                	add    BYTE PTR [rax],al
    dd28:	46 61                	rex.RX (bad) 
    dd2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dd31:	20 
    dd32:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dd35:	70 69                	jo     dda0 <_IO_stdin_used+0x1da0>
    dd37:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd38:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dd3c:	67 75 6c             	addr32 jne ddab <_IO_stdin_used+0x1dab>
    dd3f:	61                   	(bad)  
    dd40:	72 20                	jb     dd62 <_IO_stdin_used+0x1d62>
    dd42:	65 78 70             	gs js  ddb5 <_IO_stdin_used+0x1db5>
    dd45:	72 65                	jb     ddac <_IO_stdin_used+0x1dac>
    dd47:	73 73                	jae    ddbc <_IO_stdin_used+0x1dbc>
    dd49:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dd50:	7a 65                	jp     ddb7 <_IO_stdin_used+0x1db7>
    dd52:	3a 00                	cmp    al,BYTE PTR [rax]
    dd54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd55:	66 66 73 65          	data16 data16 jae ddbe <_IO_stdin_used+0x1dbe>
    dd59:	74 3a                	je     dd95 <_IO_stdin_used+0x1d95>
    dd5b:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    dd5e:	74 61                	je     ddc1 <_IO_stdin_used+0x1dc1>
    dd60:	62                   	(bad)  
    dd61:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd62:	69 73 68 65 64 00 6e 	imul   esi,DWORD PTR [rbx+0x68],0x6e006465
    dd69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd6a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dd6c:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
    dd6f:	70 74                	jo     dde5 <_IO_stdin_used+0x1de5>
    dd71:	00 25 63 00 25 30    	add    BYTE PTR [rip+0x30250063],ah        # 3025ddda <_end+0x30122dba>
    dd77:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    dd7a:	00 00                	add    BYTE PTR [rax],al
    dd7c:	3e 00 3c 00          	add    BYTE PTR ds:[rax+rax*1],bh
    dd80:	21 00                	and    DWORD PTR [rax],eax
    dd82:	3c 3d                	cmp    al,0x3d
    dd84:	00 3e                	add    BYTE PTR [rsi],bh
    dd86:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dd8b:	75 70                	jne    ddfd <_IO_stdin_used+0x1dfd>
    dd8d:	70 6f                	jo     ddfe <_IO_stdin_used+0x1dfe>
    dd8f:	72 74                	jb     de05 <_IO_stdin_used+0x1e05>
    dd91:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    dd96:	65 72 61             	gs jb  ddfa <_IO_stdin_used+0x1dfa>
    dd99:	74 6f                	je     de0a <_IO_stdin_used+0x1e0a>
    dd9b:	72 00                	jb     dd9d <_IO_stdin_used+0x1d9d>
    dd9d:	00 00                	add    BYTE PTR [rax],al
    dd9f:	00 c6                	add    dh,al
    dda1:	d0 ff                	sar    bh,1
    dda3:	ff 18                	call   FWORD PTR [rax]
    dda5:	d1 ff                	sar    edi,1
    dda7:	ff 31                	push   QWORD PTR [rcx]
    dda9:	d1 ff                	sar    edi,1
    ddab:	ff e6                	jmp    rsi
    ddad:	d0 ff                	sar    bh,1
    ddaf:	ff                   	(bad)  
    ddb0:	ff d0                	call   rax
    ddb2:	ff                   	(bad)  
    ddb3:	ff 4a d1             	dec    DWORD PTR [rdx-0x2f]
    ddb6:	ff                   	(bad)  
    ddb7:	ff 2e                	jmp    FWORD PTR [rsi]
    ddb9:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 790fef <_end+0x655fcf>
    ddbf:	25 30 32 78 20       	and    eax,0x20783230
    ddc4:	2d 2d 20 25 30       	sub    eax,0x3025202d
    ddc9:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
    ddcc:	00 00                	add    BYTE PTR [rax],al
    ddce:	00 00                	add    BYTE PTR [rax],al
    ddd0:	73 72                	jae    de44 <_IO_stdin_used+0x1e44>
    ddd2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ddd4:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddd5:	75 61                	jne    de38 <_IO_stdin_used+0x1e38>
    ddd7:	2f                   	(bad)  
    ddd8:	73 63                	jae    de3d <_IO_stdin_used+0x1e3d>
    ddda:	72 69                	jb     de45 <_IO_stdin_used+0x1e45>
    dddc:	70 74                	jo     de52 <_IO_stdin_used+0x1e52>
    ddde:	73 2f                	jae    de0f <_IO_stdin_used+0x1e0f>
    dde0:	68 65 6c 6c 6f       	push   0x6f6c6c65
    dde5:	74 65                	je     de4c <_IO_stdin_used+0x1e4c>
    dde7:	73 74                	jae    de5d <_IO_stdin_used+0x1e5d>
    dde9:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    ddeb:	75 61                	jne    de4e <_IO_stdin_used+0x1e4e>
    dded:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    ddf0:	2f                   	(bad)  
    ddf1:	65 74 63             	gs je  de57 <_IO_stdin_used+0x1e57>
    ddf4:	2f                   	(bad)  
    ddf5:	76 69                	jbe    de60 <_IO_stdin_used+0x1e60>
    ddf7:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    ddfe:	72 69 
    de00:	70 74                	jo     de76 <_IO_stdin_used+0x1e76>
    de02:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    de06:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    de0a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de11:	20 
    de12:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de15:	6c                   	ins    BYTE PTR es:[rdi],dx
    de16:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    de1b:	75 61                	jne    de7e <_IO_stdin_used+0x1e7e>
    de1d:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    de20:	72 69                	jb     de8b <_IO_stdin_used+0x1e8b>
    de22:	70 74                	jo     de98 <_IO_stdin_used+0x1e98>
    de24:	73 3a                	jae    de60 <_IO_stdin_used+0x1e60>
    de26:	20 2f                	and    BYTE PTR [rdi],ch
    de28:	65 74 63             	gs je  de8e <_IO_stdin_used+0x1e8e>
    de2b:	2f                   	(bad)  
    de2c:	76 69                	jbe    de97 <_IO_stdin_used+0x1e97>
    de2e:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de35:	72 69 
    de37:	70 74                	jo     dead <_IO_stdin_used+0x1ead>
    de39:	2e 63 6f 6e          	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
    de3d:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    de41:	74 20                	je     de63 <_IO_stdin_used+0x1e63>
    de43:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    de45:	75 6e                	jne    deb5 <_IO_stdin_used+0x1eb5>
    de47:	64 2e 00 2e          	fs add BYTE PTR cs:[rsi],ch
    de4b:	2a 2e                	sub    ch,BYTE PTR [rsi]
    de4d:	6c                   	ins    BYTE PTR es:[rdi],dx
    de4e:	75 61                	jne    deb1 <_IO_stdin_used+0x1eb1>
    de50:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    de52:	2a 00                	sub    al,BYTE PTR [rax]
    de54:	6c                   	ins    BYTE PTR es:[rdi],dx
    de55:	5f                   	pop    rdi
    de56:	73 63                	jae    debb <_IO_stdin_used+0x1ebb>
    de58:	72 69                	jb     dec3 <_IO_stdin_used+0x1ec3>
    de5a:	70 74                	jo     ded0 <_IO_stdin_used+0x1ed0>
    de5c:	5f                   	pop    rdi
    de5d:	72 6f                	jb     dece <_IO_stdin_used+0x1ece>
    de5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de60:	74 3d                	je     de9f <_IO_stdin_used+0x1e9f>
    de62:	00 0a                	add    BYTE PTR [rdx],cl
    de64:	00 00                	add    BYTE PTR [rax],al
    de66:	00 00                	add    BYTE PTR [rax],al
    de68:	49 50                	rex.WB push r8
    de6a:	76 36                	jbe    dea2 <_IO_stdin_used+0x1ea2>
    de6c:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfee5 <_end+0x3e1a4ec5>
    de72:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250feeb <_end+0x723d4ecb>
    de78:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de79:	74 6f                	je     deea <_IO_stdin_used+0x1eea>
    de7b:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de7e:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    de81:	6d                   	ins    DWORD PTR es:[rdi],dx
    de82:	62                   	(bad)  
    de83:	65 72 20             	gs jb  dea6 <_IO_stdin_used+0x1ea6>
    de86:	3d 20 25 64 0a       	cmp    eax,0xa642520
    de8b:	00 00                	add    BYTE PTR [rax],al
    de8d:	00 00                	add    BYTE PTR [rax],al
    de8f:	00 5b 4e             	add    BYTE PTR [rbx+0x4e],bl
    de92:	20 25 73 20 53 20    	and    BYTE PTR [rip+0x20532073],ah        # 2053ff0b <_end+0x20404eeb>
    de98:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    de9b:	30 32                	xor    BYTE PTR [rdx],dh
    de9d:	78 20                	js     debf <_IO_stdin_used+0x1ebf>
    de9f:	45 20 30             	and    BYTE PTR [r8],r14b
    dea2:	78 25                	js     dec9 <_IO_stdin_used+0x1ec9>
    dea4:	30 32                	xor    BYTE PTR [rdx],dh
    dea6:	78 5d                	js     df05 <_IO_stdin_used+0x1f05>
    dea8:	0a 00                	or     al,BYTE PTR [rax]
    deaa:	00 00                	add    BYTE PTR [rax],al
    deac:	00 00                	add    BYTE PTR [rax],al
    deae:	00 00                	add    BYTE PTR [rax],al
    deb0:	53                   	push   rbx
    deb1:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
    deb4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    deb6:	74 61                	je     df19 <_IO_stdin_used+0x1f19>
    deb8:	74 69                	je     df23 <_IO_stdin_used+0x1f23>
    deba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    debb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    debc:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    debf:	75 6c                	jne    df2d <_IO_stdin_used+0x1f2d>
    dec1:	74 20                	je     dee3 <_IO_stdin_used+0x1ee3>
    dec3:	61                   	(bad)  
    dec4:	74 20                	je     dee6 <_IO_stdin_used+0x1ee6>
    dec6:	25 73 3a 20 61       	and    eax,0x61203a73
    decb:	70 70                	jo     df3d <_IO_stdin_used+0x1f3d>
    decd:	6c                   	ins    BYTE PTR es:[rdi],dx
    dece:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    ded5:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    ded8:	61                   	(bad)  
    ded9:	73 68                	jae    df43 <_IO_stdin_used+0x1f43>
    dedb:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    dedf:	46 75 6e             	rex.RX jne df50 <_IO_stdin_used+0x1f50>
    dee2:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    dee6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dee7:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    deea:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    deed:	72 61                	jb     df50 <_IO_stdin_used+0x1f50>
    deef:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    def2:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    def6:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # e96f <__GNU_EH_FRAME_HDR+0x90b>
    defc:	00 00                	add    BYTE PTR [rax],al
    defe:	00 00                	add    BYTE PTR [rax],al
    df00:	5b                   	pop    rbx
    df01:	4e 20 25 73 20 53 20 	rex.WRX and BYTE PTR [rip+0x20532073],r12b        # 2053ff7b <_end+0x20404f5b>
    df08:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df0b:	30 32                	xor    BYTE PTR [rdx],dh
    df0d:	78 20                	js     df2f <_IO_stdin_used+0x1f2f>
    df0f:	45 20 30             	and    BYTE PTR [r8],r14b
    df12:	78 25                	js     df39 <_IO_stdin_used+0x1f39>
    df14:	30 32                	xor    BYTE PTR [rdx],dh
    df16:	78 20                	js     df38 <_IO_stdin_used+0x1f38>
    df18:	28 2e                	sub    BYTE PTR [rsi],ch
    df1a:	2f                   	(bad)  
    df1b:	76 69                	jbe    df86 <_IO_stdin_used+0x1f86>
    df1d:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    df24:	28 2b 
    df26:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df29:	30 32                	xor    BYTE PTR [rdx],dh
    df2b:	78 29                	js     df56 <_IO_stdin_used+0x1f56>
    df2d:	29 5d 0a             	sub    DWORD PTR [rbp+0xa],ebx
	...
    df38:	55                   	push   rbp
    df39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3a:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    df3e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3f:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    df42:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df43:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    df47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df48:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    df4b:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    df4e:	6d                   	ins    DWORD PTR es:[rdi],dx
    df4f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df50:	72 79                	jb     dfcb <_IO_stdin_used+0x1fcb>
    df52:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    df55:	66 73 65             	data16 jae dfbd <_IO_stdin_used+0x1fbd>
    df58:	74 20                	je     df7a <_IO_stdin_used+0x1f7a>
    df5a:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df5d:	30 32                	xor    BYTE PTR [rdx],dh
    df5f:	78 0a                	js     df6b <_IO_stdin_used+0x1f6b>
    df61:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    df64:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    df6b:	44 
    df6c:	75 6d                	jne    dfdb <_IO_stdin_used+0x1fdb>
    df6e:	70 3a                	jo     dfaa <_IO_stdin_used+0x1faa>
    df70:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df73:	41 58                	pop    r8
    df75:	5d                   	pop    rbp
    df76:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f9c <_end+0x25655f7c>
    df7c:	30 32                	xor    BYTE PTR [rdx],dh
    df7e:	78 0a                	js     df8a <_IO_stdin_used+0x1f8a>
    df80:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df83:	42 58                	rex.X pop rax
    df85:	5d                   	pop    rbp
    df86:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fac <_end+0x25655f8c>
    df8c:	30 32                	xor    BYTE PTR [rdx],dh
    df8e:	78 0a                	js     df9a <_IO_stdin_used+0x1f9a>
    df90:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df93:	43 58                	rex.XB pop r8
    df95:	5d                   	pop    rbp
    df96:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fbc <_end+0x25655f9c>
    df9c:	30 32                	xor    BYTE PTR [rdx],dh
    df9e:	78 0a                	js     dfaa <_IO_stdin_used+0x1faa>
    dfa0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfa3:	44 58                	rex.R pop rax
    dfa5:	5d                   	pop    rbp
    dfa6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fcc <_end+0x25655fac>
    dfac:	30 32                	xor    BYTE PTR [rdx],dh
    dfae:	78 0a                	js     dfba <_IO_stdin_used+0x1fba>
    dfb0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfb3:	53                   	push   rbx
    dfb4:	50                   	push   rax
    dfb5:	5d                   	pop    rbp
    dfb6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fdc <_end+0x25655fbc>
    dfbc:	30 32                	xor    BYTE PTR [rdx],dh
    dfbe:	78 0a                	js     dfca <_IO_stdin_used+0x1fca>
    dfc0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfc3:	42 50                	rex.X push rax
    dfc5:	5d                   	pop    rbp
    dfc6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fec <_end+0x25655fcc>
    dfcc:	30 32                	xor    BYTE PTR [rdx],dh
    dfce:	78 0a                	js     dfda <_IO_stdin_used+0x1fda>
	...
    dfd8:	72 00                	jb     dfda <_IO_stdin_used+0x1fda>
    dfda:	2f                   	(bad)  
    dfdb:	75 73                	jne    e050 <_IO_stdin_used+0x2050>
    dfdd:	72 2f                	jb     e00e <_IO_stdin_used+0x200e>
    dfdf:	73 68                	jae    e049 <_IO_stdin_used+0x2049>
    dfe1:	61                   	(bad)  
    dfe2:	72 65                	jb     e049 <_IO_stdin_used+0x2049>
    dfe4:	2f                   	(bad)  
    dfe5:	76 69                	jbe    e050 <_IO_stdin_used+0x2050>
    dfe7:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    dfee:	6d 61 
    dff0:	70 2e                	jo     e020 <_IO_stdin_used+0x2020>
    dff2:	74 78                	je     e06c <__GNU_EH_FRAME_HDR+0x8>
    dff4:	74 00                	je     dff6 <_IO_stdin_used+0x1ff6>
    dff6:	00 00                	add    BYTE PTR [rax],al
    dff8:	46                   	rex.RX
    dff9:	41 54                	push   r12
    dffb:	41                   	rex.B
    dffc:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    e000:	52                   	push   rdx
    e001:	4f 52                	rex.WRXB push r10
    e003:	3a 20                	cmp    ah,BYTE PTR [rax]
    e005:	6d                   	ins    DWORD PTR es:[rdi],dx
    e006:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e008:	6d                   	ins    DWORD PTR es:[rdi],dx
    e009:	61                   	(bad)  
    e00a:	70 2e                	jo     e03a <_IO_stdin_used+0x203a>
    e00c:	74 78                	je     e086 <__GNU_EH_FRAME_HDR+0x22>
    e00e:	74 20                	je     e030 <_IO_stdin_used+0x2030>
    e010:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e011:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e012:	74 20                	je     e034 <_IO_stdin_used+0x2034>
    e014:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e016:	75 6e                	jne    e086 <__GNU_EH_FRAME_HDR+0x22>
    e018:	64 2e 50             	fs cs push rax
    e01b:	6c                   	ins    BYTE PTR es:[rdi],dx
    e01c:	65 61                	gs (bad) 
    e01e:	73 65                	jae    e085 <__GNU_EH_FRAME_HDR+0x21>
    e020:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e023:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e026:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e027:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    e02a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e02b:	5f                   	pop    rdi
    e02c:	6d                   	ins    DWORD PTR es:[rdi],dx
    e02d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e02f:	5f                   	pop    rdi
    e030:	6d                   	ins    DWORD PTR es:[rdi],dx
    e031:	61                   	(bad)  
    e032:	70 2e                	jo     e062 <_IO_stdin_used+0x2062>
    e034:	70 79                	jo     e0af <__GNU_EH_FRAME_HDR+0x4b>
    e036:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    e039:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    e03d:	70 79                	jo     e0b8 <__GNU_EH_FRAME_HDR+0x54>
    e03f:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e042:	6d                   	ins    DWORD PTR es:[rdi],dx
    e043:	6d                   	ins    DWORD PTR es:[rdi],dx
    e044:	61                   	(bad)  
    e045:	70 2e                	jo     e075 <__GNU_EH_FRAME_HDR+0x11>
    e047:	74 78                	je     e0c1 <__GNU_EH_FRAME_HDR+0x5d>
    e049:	74 20                	je     e06b <__GNU_EH_FRAME_HDR+0x7>
    e04b:	74 6f                	je     e0bc <__GNU_EH_FRAME_HDR+0x58>
    e04d:	20 2f                	and    BYTE PTR [rdi],ch
    e04f:	75 73                	jne    e0c4 <__GNU_EH_FRAME_HDR+0x60>
    e051:	72 2f                	jb     e082 <__GNU_EH_FRAME_HDR+0x1e>
    e053:	73 68                	jae    e0bd <__GNU_EH_FRAME_HDR+0x59>
    e055:	61                   	(bad)  
    e056:	72 65                	jb     e0bd <__GNU_EH_FRAME_HDR+0x59>
    e058:	2f                   	(bad)  
    e059:	76 69                	jbe    e0c4 <__GNU_EH_FRAME_HDR+0x60>
    e05b:	67                   	addr32
    e05c:	69                   	.byte 0x69
    e05d:	6c                   	ins    BYTE PTR es:[rdi],dx
    e05e:	00 0a                	add    BYTE PTR [rdx],cl
    e060:	00 20                	add    BYTE PTR [rax],ah
	...

Disassembly of section .eh_frame_hdr:

000000000000e064 <__GNU_EH_FRAME_HDR>:
    e064:	01 1b                	add    DWORD PTR [rbx],ebx
    e066:	03 3b                	add    edi,DWORD PTR [rbx]
    e068:	c0 03 00             	rol    BYTE PTR [rbx],0x0
    e06b:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    e06e:	00 00                	add    BYTE PTR [rax],al
    e070:	bc 3f ff ff f4       	mov    esp,0xf4ffff3f
    e075:	03 00                	add    eax,DWORD PTR [rax]
    e077:	00 fc                	add    ah,bh
    e079:	43 ff                	rex.XB (bad) 
    e07b:	ff 1c 04             	call   FWORD PTR [rsp+rax*1]
    e07e:	00 00                	add    BYTE PTR [rax],al
    e080:	0c 44                	or     al,0x44
    e082:	ff                   	(bad)  
    e083:	ff 34 04             	push   QWORD PTR [rsp+rax*1]
    e086:	00 00                	add    BYTE PTR [rax],al
    e088:	3c 48                	cmp    al,0x48
    e08a:	ff                   	(bad)  
    e08b:	ff                   	(bad)  
    e08c:	dc 03                	fadd   QWORD PTR [rbx]
    e08e:	00 00                	add    BYTE PTR [rax],al
    e090:	25 49 ff ff 4c       	and    eax,0x4cffff49
    e095:	04 00                	add    al,0x0
    e097:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    e09a:	ff                   	(bad)  
    e09b:	ff 6c 04 00          	jmp    FWORD PTR [rsp+rax*1+0x0]
    e09f:	00 ac 4a ff ff 94 04 	add    BYTE PTR [rdx+rcx*2+0x494ffff],ch
    e0a6:	00 00                	add    BYTE PTR [rax],al
    e0a8:	a0 4d ff ff b4 04 00 	movabs al,ds:0xb3000004b4ffff4d
    e0af:	00 b3 
    e0b1:	4e ff                	rex.WRX (bad) 
    e0b3:	ff d4                	call   rsp
    e0b5:	04 00                	add    al,0x0
    e0b7:	00 61 4f             	add    BYTE PTR [rcx+0x4f],ah
    e0ba:	ff                   	(bad)  
    e0bb:	ff f4                	push   rsp
    e0bd:	04 00                	add    al,0x0
    e0bf:	00 07                	add    BYTE PTR [rdi],al
    e0c1:	50                   	push   rax
    e0c2:	ff                   	(bad)  
    e0c3:	ff 14 05 00 00 9c 50 	call   QWORD PTR [rax*1+0x509c0000]
    e0ca:	ff                   	(bad)  
    e0cb:	ff 34 05 00 00 30 51 	push   QWORD PTR [rax*1+0x51300000]
    e0d2:	ff                   	(bad)  
    e0d3:	ff 54 05 00          	call   QWORD PTR [rbp+rax*1+0x0]
    e0d7:	00 fc                	add    ah,bh
    e0d9:	52                   	push   rdx
    e0da:	ff                   	(bad)  
    e0db:	ff 80 05 00 00 d0    	inc    DWORD PTR [rax-0x2ffffffb]
    e0e1:	53                   	push   rbx
    e0e2:	ff                   	(bad)  
    e0e3:	ff a4 05 00 00 97 54 	jmp    QWORD PTR [rbp+rax*1+0x54970000]
    e0ea:	ff                   	(bad)  
    e0eb:	ff c8                	dec    eax
    e0ed:	05 00 00 ea 54       	add    eax,0x54ea0000
    e0f2:	ff                   	(bad)  
    e0f3:	ff                   	(bad)  
    e0f4:	e8 05 00 00 1d       	call   1d00e0fe <_end+0x1ced30de>
    e0f9:	55                   	push   rbp
    e0fa:	ff                   	(bad)  
    e0fb:	ff 08                	dec    DWORD PTR [rax]
    e0fd:	06                   	(bad)  
    e0fe:	00 00                	add    BYTE PTR [rax],al
    e100:	3e 55                	ds push rbp
    e102:	ff                   	(bad)  
    e103:	ff 28                	jmp    FWORD PTR [rax]
    e105:	06                   	(bad)  
    e106:	00 00                	add    BYTE PTR [rax],al
    e108:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    e109:	55                   	push   rbp
    e10a:	ff                   	(bad)  
    e10b:	ff 4c 06 00          	dec    DWORD PTR [rsi+rax*1+0x0]
    e10f:	00 cc                	add    ah,cl
    e111:	59                   	pop    rcx
    e112:	ff                   	(bad)  
    e113:	ff 6c 06 00          	jmp    FWORD PTR [rsi+rax*1+0x0]
    e117:	00 29                	add    BYTE PTR [rcx],ch
    e119:	5b                   	pop    rbx
    e11a:	ff                   	(bad)  
    e11b:	ff 8c 06 00 00 6d 63 	dec    DWORD PTR [rsi+rax*1+0x636d0000]
    e122:	ff                   	(bad)  
    e123:	ff ac 06 00 00 b0 6c 	jmp    FWORD PTR [rsi+rax*1+0x6cb00000]
    e12a:	ff                   	(bad)  
    e12b:	ff cc                	dec    esp
    e12d:	06                   	(bad)  
    e12e:	00 00                	add    BYTE PTR [rax],al
    e130:	05 6e ff ff ec       	add    eax,0xecffff6e
    e135:	06                   	(bad)  
    e136:	00 00                	add    BYTE PTR [rax],al
    e138:	04 6f                	add    al,0x6f
    e13a:	ff                   	(bad)  
    e13b:	ff 0c 07             	dec    DWORD PTR [rdi+rax*1]
    e13e:	00 00                	add    BYTE PTR [rax],al
    e140:	f0 6f                	lock outs dx,DWORD PTR ds:[rsi]
    e142:	ff                   	(bad)  
    e143:	ff 2c 07             	jmp    FWORD PTR [rdi+rax*1]
    e146:	00 00                	add    BYTE PTR [rax],al
    e148:	a2 73 ff ff 4c 07 00 	movabs ds:0x250000074cffff73,al
    e14f:	00 25 
    e151:	74 ff                	je     e152 <__GNU_EH_FRAME_HDR+0xee>
    e153:	ff 6c 07 00          	jmp    FWORD PTR [rdi+rax*1+0x0]
    e157:	00 4f 76             	add    BYTE PTR [rdi+0x76],cl
    e15a:	ff                   	(bad)  
    e15b:	ff 94 07 00 00 8f 78 	call   QWORD PTR [rdi+rax*1+0x788f0000]
    e162:	ff                   	(bad)  
    e163:	ff                   	(bad)  
    e164:	b8 07 00 00 f5       	mov    eax,0xf5000007
    e169:	78 ff                	js     e16a <__GNU_EH_FRAME_HDR+0x106>
    e16b:	ff                   	(bad)  
    e16c:	d8 07                	fadd   DWORD PTR [rdi]
    e16e:	00 00                	add    BYTE PTR [rax],al
    e170:	0c 79                	or     al,0x79
    e172:	ff                   	(bad)  
    e173:	ff                   	(bad)  
    e174:	f8                   	clc    
    e175:	07                   	(bad)  
    e176:	00 00                	add    BYTE PTR [rax],al
    e178:	5d                   	pop    rbp
    e179:	79 ff                	jns    e17a <__GNU_EH_FRAME_HDR+0x116>
    e17b:	ff 1c 08             	call   FWORD PTR [rax+rcx*1]
    e17e:	00 00                	add    BYTE PTR [rax],al
    e180:	9d                   	popf   
    e181:	7f ff                	jg     e182 <__GNU_EH_FRAME_HDR+0x11e>
    e183:	ff 40 08             	inc    DWORD PTR [rax+0x8]
    e186:	00 00                	add    BYTE PTR [rax],al
    e188:	b7 7f                	mov    bh,0x7f
    e18a:	ff                   	(bad)  
    e18b:	ff 60 08             	jmp    QWORD PTR [rax+0x8]
    e18e:	00 00                	add    BYTE PTR [rax],al
    e190:	e0 7f                	loopne e211 <__GNU_EH_FRAME_HDR+0x1ad>
    e192:	ff                   	(bad)  
    e193:	ff 80 08 00 00 10    	inc    DWORD PTR [rax+0x10000008]
    e199:	80 ff ff             	cmp    bh,0xff
    e19c:	a0 08 00 00 47 80 ff 	movabs al,ds:0xbcffff8047000008
    e1a3:	ff bc 
    e1a5:	08 00                	or     BYTE PTR [rax],al
    e1a7:	00 8c 81 ff ff dc 08 	add    BYTE PTR [rcx+rax*4+0x8dcffff],cl
    e1ae:	00 00                	add    BYTE PTR [rax],al
    e1b0:	ec                   	in     al,dx
    e1b1:	82                   	(bad)  
    e1b2:	ff                   	(bad)  
    e1b3:	ff                   	(bad)  
    e1b4:	fc                   	cld    
    e1b5:	08 00                	or     BYTE PTR [rax],al
    e1b7:	00 4d 83             	add    BYTE PTR [rbp-0x7d],cl
    e1ba:	ff                   	(bad)  
    e1bb:	ff 1c 09             	call   FWORD PTR [rcx+rcx*1]
    e1be:	00 00                	add    BYTE PTR [rax],al
    e1c0:	86 83 ff ff 3c 09    	xchg   BYTE PTR [rbx+0x93cffff],al
    e1c6:	00 00                	add    BYTE PTR [rax],al
    e1c8:	44 84 ff             	test   dil,r15b
    e1cb:	ff 5c 09 00          	call   FWORD PTR [rcx+rcx*1+0x0]
    e1cf:	00 02                	add    BYTE PTR [rdx],al
    e1d1:	87 ff                	xchg   edi,edi
    e1d3:	ff                   	(bad)  
    e1d4:	7c 09                	jl     e1df <__GNU_EH_FRAME_HDR+0x17b>
    e1d6:	00 00                	add    BYTE PTR [rax],al
    e1d8:	fa                   	cli    
    e1d9:	88 ff                	mov    bh,bh
    e1db:	ff 9c 09 00 00 54 89 	call   FWORD PTR [rcx+rcx*1-0x76ac0000]
    e1e2:	ff                   	(bad)  
    e1e3:	ff                   	(bad)  
    e1e4:	bc 09 00 00 3a       	mov    esp,0x3a000009
    e1e9:	8c ff                	mov    edi,?
    e1eb:	ff                   	(bad)  
    e1ec:	dc 09                	fmul   QWORD PTR [rcx]
    e1ee:	00 00                	add    BYTE PTR [rax],al
    e1f0:	8f                   	(bad)  
    e1f1:	90                   	nop
    e1f2:	ff                   	(bad)  
    e1f3:	ff                   	(bad)  
    e1f4:	fc                   	cld    
    e1f5:	09 00                	or     DWORD PTR [rax],eax
    e1f7:	00 b9 90 ff ff 18    	add    BYTE PTR [rcx+0x18ffff90],bh
    e1fd:	0a 00                	or     al,BYTE PTR [rax]
    e1ff:	00 70 92             	add    BYTE PTR [rax-0x6e],dh
    e202:	ff                   	(bad)  
    e203:	ff                   	(bad)  
    e204:	3c 0a                	cmp    al,0xa
    e206:	00 00                	add    BYTE PTR [rax],al
    e208:	87 92 ff ff 5c 0a    	xchg   DWORD PTR [rdx+0xa5cffff],edx
    e20e:	00 00                	add    BYTE PTR [rax],al
    e210:	d6                   	(bad)  
    e211:	92                   	xchg   edx,eax
    e212:	ff                   	(bad)  
    e213:	ff                   	(bad)  
    e214:	7c 0a                	jl     e220 <__GNU_EH_FRAME_HDR+0x1bc>
    e216:	00 00                	add    BYTE PTR [rax],al
    e218:	23 93 ff ff 9c 0a    	and    edx,DWORD PTR [rbx+0xa9cffff]
    e21e:	00 00                	add    BYTE PTR [rax],al
    e220:	9a                   	(bad)  
    e221:	94                   	xchg   esp,eax
    e222:	ff                   	(bad)  
    e223:	ff                   	(bad)  
    e224:	b8 0a 00 00 36       	mov    eax,0x3600000a
    e229:	95                   	xchg   ebp,eax
    e22a:	ff                   	(bad)  
    e22b:	ff                   	(bad)  
    e22c:	dc 0a                	fmul   QWORD PTR [rdx]
    e22e:	00 00                	add    BYTE PTR [rax],al
    e230:	24 97                	and    al,0x97
    e232:	ff                   	(bad)  
    e233:	ff                   	(bad)  
    e234:	fc                   	cld    
    e235:	0a 00                	or     al,BYTE PTR [rax]
    e237:	00 0c 99             	add    BYTE PTR [rcx+rbx*4],cl
    e23a:	ff                   	(bad)  
    e23b:	ff 1c 0b             	call   FWORD PTR [rbx+rcx*1]
    e23e:	00 00                	add    BYTE PTR [rax],al
    e240:	78 99                	js     e1db <__GNU_EH_FRAME_HDR+0x177>
    e242:	ff                   	(bad)  
    e243:	ff                   	(bad)  
    e244:	3c 0b                	cmp    al,0xb
    e246:	00 00                	add    BYTE PTR [rax],al
    e248:	ea                   	(bad)  
    e249:	99                   	cdq    
    e24a:	ff                   	(bad)  
    e24b:	ff 5c 0b 00          	call   FWORD PTR [rbx+rcx*1+0x0]
    e24f:	00 fb                	add    bl,bh
    e251:	9a                   	(bad)  
    e252:	ff                   	(bad)  
    e253:	ff                   	(bad)  
    e254:	7c 0b                	jl     e261 <__GNU_EH_FRAME_HDR+0x1fd>
    e256:	00 00                	add    BYTE PTR [rax],al
    e258:	57                   	push   rdi
    e259:	9b                   	fwait
    e25a:	ff                   	(bad)  
    e25b:	ff 9c 0b 00 00 95 9b 	call   FWORD PTR [rbx+rcx*1-0x646b0000]
    e262:	ff                   	(bad)  
    e263:	ff                   	(bad)  
    e264:	bc 0b 00 00 1b       	mov    esp,0x1b00000b
    e269:	9c                   	pushf  
    e26a:	ff                   	(bad)  
    e26b:	ff                   	(bad)  
    e26c:	dc 0b                	fmul   QWORD PTR [rbx]
    e26e:	00 00                	add    BYTE PTR [rax],al
    e270:	fa                   	cli    
    e271:	9c                   	pushf  
    e272:	ff                   	(bad)  
    e273:	ff                   	(bad)  
    e274:	fc                   	cld    
    e275:	0b 00                	or     eax,DWORD PTR [rax]
    e277:	00 6e 9d             	add    BYTE PTR [rsi-0x63],ch
    e27a:	ff                   	(bad)  
    e27b:	ff 1c 0c             	call   FWORD PTR [rsp+rcx*1]
    e27e:	00 00                	add    BYTE PTR [rax],al
    e280:	0a 9e ff ff 3c 0c    	or     bl,BYTE PTR [rsi+0xc3cffff]
    e286:	00 00                	add    BYTE PTR [rax],al
    e288:	33 9e ff ff 5c 0c    	xor    ebx,DWORD PTR [rsi+0xc5cffff]
    e28e:	00 00                	add    BYTE PTR [rax],al
    e290:	5c                   	pop    rsp
    e291:	9e                   	sahf   
    e292:	ff                   	(bad)  
    e293:	ff                   	(bad)  
    e294:	7c 0c                	jl     e2a2 <__GNU_EH_FRAME_HDR+0x23e>
    e296:	00 00                	add    BYTE PTR [rax],al
    e298:	b0 9f                	mov    al,0x9f
    e29a:	ff                   	(bad)  
    e29b:	ff a4 0c 00 00 c3 a0 	jmp    QWORD PTR [rsp+rcx*1-0x5f3d0000]
    e2a2:	ff                   	(bad)  
    e2a3:	ff c4                	inc    esp
    e2a5:	0c 00                	or     al,0x0
    e2a7:	00 bc a1 ff ff e4 0c 	add    BYTE PTR [rcx+riz*4+0xce4ffff],bh
    e2ae:	00 00                	add    BYTE PTR [rax],al
    e2b0:	5e                   	pop    rsi
    e2b1:	a2 ff ff 04 0d 00 00 	movabs ds:0xa27c00000d04ffff,al
    e2b8:	7c a2 
    e2ba:	ff                   	(bad)  
    e2bb:	ff 24 0d 00 00 df a3 	jmp    QWORD PTR [rcx*1-0x5c210000]
    e2c2:	ff                   	(bad)  
    e2c3:	ff 44 0d 00          	inc    DWORD PTR [rbp+rcx*1+0x0]
    e2c7:	00 f0                	add    al,dh
    e2c9:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e2ca:	ff                   	(bad)  
    e2cb:	ff 74 0d 00          	push   QWORD PTR [rbp+rcx*1+0x0]
    e2cf:	00 a2 a6 ff ff 94    	add    BYTE PTR [rdx-0x6b00005a],ah
    e2d5:	0d 00 00 47 a7       	or     eax,0xa7470000
    e2da:	ff                   	(bad)  
    e2db:	ff b4 0d 00 00 f3 a7 	push   QWORD PTR [rbp+rcx*1-0x580d0000]
    e2e2:	ff                   	(bad)  
    e2e3:	ff                   	(bad)  
    e2e4:	dc 0d 00 00 c8 a8    	fmul   QWORD PTR [rip+0xffffffffa8c80000]        # ffffffffa8c8e2ea <_end+0xffffffffa8b532ca>
    e2ea:	ff                   	(bad)  
    e2eb:	ff                   	(bad)  
    e2ec:	fc                   	cld    
    e2ed:	0d 00 00 a7 a9       	or     eax,0xa9a70000
    e2f2:	ff                   	(bad)  
    e2f3:	ff 1c 0e             	call   FWORD PTR [rsi+rcx*1]
    e2f6:	00 00                	add    BYTE PTR [rax],al
    e2f8:	24 aa                	and    al,0xaa
    e2fa:	ff                   	(bad)  
    e2fb:	ff                   	(bad)  
    e2fc:	3c 0e                	cmp    al,0xe
    e2fe:	00 00                	add    BYTE PTR [rax],al
    e300:	5a                   	pop    rdx
    e301:	ab                   	stos   DWORD PTR es:[rdi],eax
    e302:	ff                   	(bad)  
    e303:	ff 5c 0e 00          	call   FWORD PTR [rsi+rcx*1+0x0]
    e307:	00 d8                	add    al,bl
    e309:	ab                   	stos   DWORD PTR es:[rdi],eax
    e30a:	ff                   	(bad)  
    e30b:	ff                   	(bad)  
    e30c:	7c 0e                	jl     e31c <__GNU_EH_FRAME_HDR+0x2b8>
    e30e:	00 00                	add    BYTE PTR [rax],al
    e310:	11 ae ff ff 9c 0e    	adc    DWORD PTR [rsi+0xe9cffff],ebp
    e316:	00 00                	add    BYTE PTR [rax],al
    e318:	da ae ff ff bc 0e    	fisubr DWORD PTR [rsi+0xebcffff]
    e31e:	00 00                	add    BYTE PTR [rax],al
    e320:	7b b0                	jnp    e2d2 <__GNU_EH_FRAME_HDR+0x26e>
    e322:	ff                   	(bad)  
    e323:	ff                   	(bad)  
    e324:	dc 0e                	fmul   QWORD PTR [rsi]
    e326:	00 00                	add    BYTE PTR [rax],al
    e328:	8e b1 ff ff fc 0e    	mov    ?,WORD PTR [rcx+0xefcffff]
    e32e:	00 00                	add    BYTE PTR [rax],al
    e330:	f4                   	hlt    
    e331:	b1 ff                	mov    cl,0xff
    e333:	ff 1c 0f             	call   FWORD PTR [rdi+rcx*1]
    e336:	00 00                	add    BYTE PTR [rax],al
    e338:	69 b2 ff ff 3c 0f 00 	imul   esi,DWORD PTR [rdx+0xf3cffff],0xb3440000
    e33f:	00 44 b3 
    e342:	ff                   	(bad)  
    e343:	ff 5c 0f 00          	call   FWORD PTR [rdi+rcx*1+0x0]
    e347:	00 b6 b4 ff ff 7c    	add    BYTE PTR [rsi+0x7cffffb4],dh
    e34d:	0f 00 00             	sldt   WORD PTR [rax]
    e350:	22 b5 ff ff 9c 0f    	and    dh,BYTE PTR [rbp+0xf9cffff]
    e356:	00 00                	add    BYTE PTR [rax],al
    e358:	a2 b5 ff ff bc 0f 00 	movabs ds:0xb800000fbcffffb5,al
    e35f:	00 b8 
    e361:	b5 ff                	mov    ch,0xff
    e363:	ff                   	(bad)  
    e364:	dc 0f                	fmul   QWORD PTR [rdi]
    e366:	00 00                	add    BYTE PTR [rax],al
    e368:	f3 b6 ff             	repz mov dh,0xff
    e36b:	ff 00                	inc    DWORD PTR [rax]
    e36d:	10 00                	adc    BYTE PTR [rax],al
    e36f:	00 57 b7             	add    BYTE PTR [rdi-0x49],dl
    e372:	ff                   	(bad)  
    e373:	ff 20                	jmp    QWORD PTR [rax]
    e375:	10 00                	adc    BYTE PTR [rax],al
    e377:	00 aa b7 ff ff 40    	add    BYTE PTR [rdx+0x40ffffb7],ch
    e37d:	10 00                	adc    BYTE PTR [rax],al
    e37f:	00 5b b8             	add    BYTE PTR [rbx-0x48],bl
    e382:	ff                   	(bad)  
    e383:	ff 60 10             	jmp    QWORD PTR [rax+0x10]
    e386:	00 00                	add    BYTE PTR [rax],al
    e388:	26 b9 ff ff 80 10    	es mov ecx,0x1080ffff
    e38e:	00 00                	add    BYTE PTR [rax],al
    e390:	7b b9                	jnp    e34b <__GNU_EH_FRAME_HDR+0x2e7>
    e392:	ff                   	(bad)  
    e393:	ff a0 10 00 00 ab    	jmp    QWORD PTR [rax-0x54fffff0]
    e399:	b9 ff ff c0 10       	mov    ecx,0x10c0ffff
    e39e:	00 00                	add    BYTE PTR [rax],al
    e3a0:	12 ba ff ff e0 10    	adc    bh,BYTE PTR [rdx+0x10e0ffff]
    e3a6:	00 00                	add    BYTE PTR [rax],al
    e3a8:	75 c9                	jne    e373 <__GNU_EH_FRAME_HDR+0x30f>
    e3aa:	ff                   	(bad)  
    e3ab:	ff 04 11             	inc    DWORD PTR [rcx+rdx*1]
    e3ae:	00 00                	add    BYTE PTR [rax],al
    e3b0:	bb c9 ff ff 24       	mov    ebx,0x24ffffc9
    e3b5:	11 00                	adc    DWORD PTR [rax],eax
    e3b7:	00 f9                	add    cl,bh
    e3b9:	cb                   	retf   
    e3ba:	ff                   	(bad)  
    e3bb:	ff 4c 11 00          	dec    DWORD PTR [rcx+rdx*1+0x0]
    e3bf:	00 a4 cd ff ff 6c 11 	add    BYTE PTR [rbp+rcx*8+0x116cffff],ah
    e3c6:	00 00                	add    BYTE PTR [rax],al
    e3c8:	b6 ce                	mov    dh,0xce
    e3ca:	ff                   	(bad)  
    e3cb:	ff 8c 11 00 00 73 cf 	dec    DWORD PTR [rcx+rdx*1-0x308d0000]
    e3d2:	ff                   	(bad)  
    e3d3:	ff b4 11 00 00 0e d1 	push   QWORD PTR [rcx+rdx*1-0x2ef20000]
    e3da:	ff                   	(bad)  
    e3db:	ff                   	(bad)  
    e3dc:	dc 11                	fcom   QWORD PTR [rcx]
    e3de:	00 00                	add    BYTE PTR [rax],al
    e3e0:	b3 d1                	mov    bl,0xd1
    e3e2:	ff                   	(bad)  
    e3e3:	ff                   	(bad)  
    e3e4:	fc                   	cld    
    e3e5:	11 00                	adc    DWORD PTR [rax],eax
    e3e7:	00 f6                	add    dh,dh
    e3e9:	d2 ff                	sar    bh,cl
    e3eb:	ff 1c 12             	call   FWORD PTR [rdx+rdx*1]
    e3ee:	00 00                	add    BYTE PTR [rax],al
    e3f0:	e9 d3 ff ff 3c       	jmp    3d00e3c8 <_end+0x3ced33a8>
    e3f5:	12 00                	adc    al,BYTE PTR [rax]
    e3f7:	00 59 d4             	add    BYTE PTR [rcx-0x2c],bl
    e3fa:	ff                   	(bad)  
    e3fb:	ff 5c 12 00          	call   FWORD PTR [rdx+rdx*1+0x0]
    e3ff:	00 fe                	add    dh,bh
    e401:	d6                   	(bad)  
    e402:	ff                   	(bad)  
    e403:	ff                   	(bad)  
    e404:	7c 12                	jl     e418 <__GNU_EH_FRAME_HDR+0x3b4>
    e406:	00 00                	add    BYTE PTR [rax],al
    e408:	68 d7 ff ff 9c       	push   0xffffffff9cffffd7
    e40d:	12 00                	adc    al,BYTE PTR [rax]
    e40f:	00 d6                	add    dh,dl
    e411:	d7                   	xlat   BYTE PTR ds:[rbx]
    e412:	ff                   	(bad)  
    e413:	ff                   	(bad)  
    e414:	bc 12 00 00 6c       	mov    esp,0x6c000012
    e419:	d9 ff                	fcos   
    e41b:	ff e4                	jmp    rsp
    e41d:	12 00                	adc    al,BYTE PTR [rax]
    e41f:	00 dc                	add    ah,bl
    e421:	d9 ff                	fcos   
    e423:	ff 2c 13             	jmp    FWORD PTR [rbx+rdx*1]
	...

Disassembly of section .eh_frame:

000000000000e428 <__FRAME_END__-0xf7c>:
    e428:	14 00                	adc    al,0x0
    e42a:	00 00                	add    BYTE PTR [rax],al
    e42c:	00 00                	add    BYTE PTR [rax],al
    e42e:	00 00                	add    BYTE PTR [rax],al
    e430:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e433:	00 01                	add    BYTE PTR [rcx],al
    e435:	78 10                	js     e447 <__GNU_EH_FRAME_HDR+0x3e3>
    e437:	01 1b                	add    DWORD PTR [rbx],ebx
    e439:	0c 07                	or     al,0x7
    e43b:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e441:	00 00                	add    BYTE PTR [rax],al
    e443:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e446:	00 00                	add    BYTE PTR [rax],al
    e448:	58                   	pop    rax
    e449:	44 ff                	rex.R (bad) 
    e44b:	ff 2f                	jmp    FWORD PTR [rdi]
    e44d:	00 00                	add    BYTE PTR [rax],al
    e44f:	00 00                	add    BYTE PTR [rax],al
    e451:	44 07                	rex.R (bad) 
    e453:	10 00                	adc    BYTE PTR [rax],al
    e455:	00 00                	add    BYTE PTR [rax],al
    e457:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e45a:	00 00                	add    BYTE PTR [rax],al
    e45c:	34 00                	xor    al,0x0
    e45e:	00 00                	add    BYTE PTR [rax],al
    e460:	c0 3b ff             	sar    BYTE PTR [rbx],0xff
    e463:	ff 40 04             	inc    DWORD PTR [rax+0x4]
    e466:	00 00                	add    BYTE PTR [rax],al
    e468:	00 0e                	add    BYTE PTR [rsi],cl
    e46a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e46d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e470:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e473:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e476:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e478:	2a 33                	sub    dh,BYTE PTR [rbx]
    e47a:	24 22                	and    al,0x22
    e47c:	00 00                	add    BYTE PTR [rax],al
    e47e:	00 00                	add    BYTE PTR [rax],al
    e480:	14 00                	adc    al,0x0
    e482:	00 00                	add    BYTE PTR [rax],al
    e484:	5c                   	pop    rsp
    e485:	00 00                	add    BYTE PTR [rax],al
    e487:	00 d8                	add    al,bl
    e489:	3f                   	(bad)  
    e48a:	ff                   	(bad)  
    e48b:	ff 10                	call   QWORD PTR [rax]
	...
    e495:	00 00                	add    BYTE PTR [rax],al
    e497:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e49a:	00 00                	add    BYTE PTR [rax],al
    e49c:	74 00                	je     e49e <__GNU_EH_FRAME_HDR+0x43a>
    e49e:	00 00                	add    BYTE PTR [rax],al
    e4a0:	d0 3f                	sar    BYTE PTR [rdi],1
    e4a2:	ff                   	(bad)  
    e4a3:	ff 30                	push   QWORD PTR [rax]
    e4a5:	04 00                	add    al,0x0
	...
    e4af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4b2:	00 00                	add    BYTE PTR [rax],al
    e4b4:	8c 00                	mov    WORD PTR [rax],es
    e4b6:	00 00                	add    BYTE PTR [rax],al
    e4b8:	d1 44 ff ff          	rol    DWORD PTR [rdi+rdi*8-0x1],1
    e4bc:	3a 00                	cmp    al,BYTE PTR [rax]
    e4be:	00 00                	add    BYTE PTR [rax],al
    e4c0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e4c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4c9:	71 0c                	jno    e4d7 <__GNU_EH_FRAME_HDR+0x473>
    e4cb:	07                   	(bad)  
    e4cc:	08 00                	or     BYTE PTR [rax],al
    e4ce:	00 00                	add    BYTE PTR [rax],al
    e4d0:	24 00                	and    al,0x0
    e4d2:	00 00                	add    BYTE PTR [rax],al
    e4d4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e4d5:	00 00                	add    BYTE PTR [rax],al
    e4d7:	00 eb                	add    bl,ch
    e4d9:	44 ff                	rex.R (bad) 
    e4db:	ff 4d 01             	dec    DWORD PTR [rbp+0x1]
    e4de:	00 00                	add    BYTE PTR [rax],al
    e4e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e4e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e4e9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e4ed:	3f                   	(bad)  
    e4ee:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e4f1:	08 00                	or     BYTE PTR [rax],al
    e4f3:	00 00                	add    BYTE PTR [rax],al
    e4f5:	00 00                	add    BYTE PTR [rax],al
    e4f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4fa:	00 00                	add    BYTE PTR [rax],al
    e4fc:	d4                   	(bad)  
    e4fd:	00 00                	add    BYTE PTR [rax],al
    e4ff:	00 10                	add    BYTE PTR [rax],dl
    e501:	46 ff                	rex.RX (bad) 
    e503:	ff f4                	push   rsp
    e505:	02 00                	add    al,BYTE PTR [rax]
    e507:	00 00                	add    BYTE PTR [rax],al
    e509:	45 0e                	rex.RB (bad) 
    e50b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e511:	03 eb                	add    ebp,ebx
    e513:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e516:	08 00                	or     BYTE PTR [rax],al
    e518:	1c 00                	sbb    al,0x0
    e51a:	00 00                	add    BYTE PTR [rax],al
    e51c:	f4                   	hlt    
    e51d:	00 00                	add    BYTE PTR [rax],al
    e51f:	00 e4                	add    ah,ah
    e521:	48 ff                	rex.W (bad) 
    e523:	ff 13                	call   QWORD PTR [rbx]
    e525:	01 00                	add    DWORD PTR [rax],eax
    e527:	00 00                	add    BYTE PTR [rax],al
    e529:	45 0e                	rex.RB (bad) 
    e52b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e531:	03 0a                	add    ecx,DWORD PTR [rdx]
    e533:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e536:	08 00                	or     BYTE PTR [rax],al
    e538:	1c 00                	sbb    al,0x0
    e53a:	00 00                	add    BYTE PTR [rax],al
    e53c:	14 01                	adc    al,0x1
    e53e:	00 00                	add    BYTE PTR [rax],al
    e540:	d7                   	xlat   BYTE PTR ds:[rbx]
    e541:	49 ff                	rex.WB (bad) 
    e543:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    e549:	45 0e                	rex.RB (bad) 
    e54b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e551:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e557:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e55a:	00 00                	add    BYTE PTR [rax],al
    e55c:	34 01                	xor    al,0x1
    e55e:	00 00                	add    BYTE PTR [rax],al
    e560:	65 4a ff             	gs rex.WX (bad) 
    e563:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    e569:	45 0e                	rex.RB (bad) 
    e56b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e571:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e577:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e57a:	00 00                	add    BYTE PTR [rax],al
    e57c:	54                   	push   rsp
    e57d:	01 00                	add    DWORD PTR [rax],eax
    e57f:	00 eb                	add    bl,ch
    e581:	4a ff                	rex.WX (bad) 
    e583:	ff 95 00 00 00 00    	call   QWORD PTR [rbp+0x0]
    e589:	45 0e                	rex.RB (bad) 
    e58b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e591:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e598:	1c 00                	sbb    al,0x0
    e59a:	00 00                	add    BYTE PTR [rax],al
    e59c:	74 01                	je     e59f <__GNU_EH_FRAME_HDR+0x53b>
    e59e:	00 00                	add    BYTE PTR [rax],al
    e5a0:	60                   	(bad)  
    e5a1:	4b ff                	rex.WXB (bad) 
    e5a3:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e5aa:	0e                   	(bad)  
    e5ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5b1:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e5b7:	00 28                	add    BYTE PTR [rax],ch
    e5b9:	00 00                	add    BYTE PTR [rax],al
    e5bb:	00 94 01 00 00 d4 4b 	add    BYTE PTR [rcx+rax*1+0x4bd40000],dl
    e5c2:	ff                   	(bad)  
    e5c3:	ff cc                	dec    esp
    e5c5:	01 00                	add    DWORD PTR [rax],eax
    e5c7:	00 00                	add    BYTE PTR [rax],al
    e5c9:	45 0e                	rex.RB (bad) 
    e5cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5d1:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e5d4:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e5db:	07                   	(bad)  
    e5dc:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e5e2:	00 00                	add    BYTE PTR [rax],al
    e5e4:	20 00                	and    BYTE PTR [rax],al
    e5e6:	00 00                	add    BYTE PTR [rax],al
    e5e8:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e5eb:	00 74 4d ff          	add    BYTE PTR [rbp+rcx*2-0x1],dh
    e5ef:	ff d4                	call   rsp
    e5f1:	00 00                	add    BYTE PTR [rax],al
    e5f3:	00 00                	add    BYTE PTR [rax],al
    e5f5:	45 0e                	rex.RB (bad) 
    e5f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5fd:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e601:	c6                   	(bad)  
    e602:	0c 07                	or     al,0x7
    e604:	08 00                	or     BYTE PTR [rax],al
    e606:	00 00                	add    BYTE PTR [rax],al
    e608:	20 00                	and    BYTE PTR [rax],al
    e60a:	00 00                	add    BYTE PTR [rax],al
    e60c:	e4 01                	in     al,0x1
    e60e:	00 00                	add    BYTE PTR [rax],al
    e610:	24 4e                	and    al,0x4e
    e612:	ff                   	(bad)  
    e613:	ff c7                	inc    edi
    e615:	00 00                	add    BYTE PTR [rax],al
    e617:	00 00                	add    BYTE PTR [rax],al
    e619:	45 0e                	rex.RB (bad) 
    e61b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e621:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e625:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e62a:	00 00                	add    BYTE PTR [rax],al
    e62c:	1c 00                	sbb    al,0x0
    e62e:	00 00                	add    BYTE PTR [rax],al
    e630:	08 02                	or     BYTE PTR [rdx],al
    e632:	00 00                	add    BYTE PTR [rax],al
    e634:	c7                   	(bad)  
    e635:	4e ff                	rex.WRX (bad) 
    e637:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    e63a:	00 00                	add    BYTE PTR [rax],al
    e63c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e63f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e645:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e648:	07                   	(bad)  
    e649:	08 00                	or     BYTE PTR [rax],al
    e64b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e64e:	00 00                	add    BYTE PTR [rax],al
    e650:	28 02                	sub    BYTE PTR [rdx],al
    e652:	00 00                	add    BYTE PTR [rax],al
    e654:	fa                   	cli    
    e655:	4e ff                	rex.WRX (bad) 
    e657:	ff 33                	push   QWORD PTR [rbx]
    e659:	00 00                	add    BYTE PTR [rax],al
    e65b:	00 00                	add    BYTE PTR [rax],al
    e65d:	45 0e                	rex.RB (bad) 
    e65f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e665:	6a 0c                	push   0xc
    e667:	07                   	(bad)  
    e668:	08 00                	or     BYTE PTR [rax],al
    e66a:	00 00                	add    BYTE PTR [rax],al
    e66c:	1c 00                	sbb    al,0x0
    e66e:	00 00                	add    BYTE PTR [rax],al
    e670:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e673:	00 0d 4f ff ff 21    	add    BYTE PTR [rip+0x21ffff4f],cl        # 2200e5c8 <_end+0x21ed35a8>
    e679:	00 00                	add    BYTE PTR [rax],al
    e67b:	00 00                	add    BYTE PTR [rax],al
    e67d:	45 0e                	rex.RB (bad) 
    e67f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e685:	58                   	pop    rax
    e686:	0c 07                	or     al,0x7
    e688:	08 00                	or     BYTE PTR [rax],al
    e68a:	00 00                	add    BYTE PTR [rax],al
    e68c:	20 00                	and    BYTE PTR [rax],al
    e68e:	00 00                	add    BYTE PTR [rax],al
    e690:	68 02 00 00 0e       	push   0xe000002
    e695:	4f ff                	rex.WRXB (bad) 
    e697:	ff 69 00             	jmp    FWORD PTR [rcx+0x0]
    e69a:	00 00                	add    BYTE PTR [rax],al
    e69c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e69f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6a5:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6a9:	5b                   	pop    rbx
    e6aa:	0c 07                	or     al,0x7
    e6ac:	08 00                	or     BYTE PTR [rax],al
    e6ae:	00 00                	add    BYTE PTR [rax],al
    e6b0:	1c 00                	sbb    al,0x0
    e6b2:	00 00                	add    BYTE PTR [rax],al
    e6b4:	8c 02                	mov    WORD PTR [rdx],es
    e6b6:	00 00                	add    BYTE PTR [rax],al
    e6b8:	53                   	push   rbx
    e6b9:	4f ff                	rex.WRXB (bad) 
    e6bb:	ff 25 04 00 00 00    	jmp    QWORD PTR [rip+0x4]        # e6c5 <__GNU_EH_FRAME_HDR+0x661>
    e6c1:	45 0e                	rex.RB (bad) 
    e6c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6c9:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e6cc:	0c 07                	or     al,0x7
    e6ce:	08 00                	or     BYTE PTR [rax],al
    e6d0:	1c 00                	sbb    al,0x0
    e6d2:	00 00                	add    BYTE PTR [rax],al
    e6d4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e6d5:	02 00                	add    al,BYTE PTR [rax]
    e6d7:	00 58 53             	add    BYTE PTR [rax+0x53],bl
    e6da:	ff                   	(bad)  
    e6db:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    e6de:	00 00                	add    BYTE PTR [rax],al
    e6e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6e9:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e6ed:	07                   	(bad)  
    e6ee:	08 00                	or     BYTE PTR [rax],al
    e6f0:	1c 00                	sbb    al,0x0
    e6f2:	00 00                	add    BYTE PTR [rax],al
    e6f4:	cc                   	int3   
    e6f5:	02 00                	add    al,BYTE PTR [rax]
    e6f7:	00 95 54 ff ff 44    	add    BYTE PTR [rbp+0x44ffff54],dl
    e6fd:	08 00                	or     BYTE PTR [rax],al
    e6ff:	00 00                	add    BYTE PTR [rax],al
    e701:	45 0e                	rex.RB (bad) 
    e703:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e709:	03 3b                	add    edi,DWORD PTR [rbx]
    e70b:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e70e:	08 00                	or     BYTE PTR [rax],al
    e710:	1c 00                	sbb    al,0x0
    e712:	00 00                	add    BYTE PTR [rax],al
    e714:	ec                   	in     al,dx
    e715:	02 00                	add    al,BYTE PTR [rax]
    e717:	00 b9 5c ff ff 43    	add    BYTE PTR [rcx+0x43ffff5c],bh
    e71d:	09 00                	or     DWORD PTR [rax],eax
    e71f:	00 00                	add    BYTE PTR [rax],al
    e721:	45 0e                	rex.RB (bad) 
    e723:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e729:	03 3a                	add    edi,DWORD PTR [rdx]
    e72b:	09 0c 07             	or     DWORD PTR [rdi+rax*1],ecx
    e72e:	08 00                	or     BYTE PTR [rax],al
    e730:	1c 00                	sbb    al,0x0
    e732:	00 00                	add    BYTE PTR [rax],al
    e734:	0c 03                	or     al,0x3
    e736:	00 00                	add    BYTE PTR [rax],al
    e738:	dc 65 ff             	fsub   QWORD PTR [rbp-0x1]
    e73b:	ff 55 01             	call   QWORD PTR [rbp+0x1]
    e73e:	00 00                	add    BYTE PTR [rax],al
    e740:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e743:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e749:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e74d:	07                   	(bad)  
    e74e:	08 00                	or     BYTE PTR [rax],al
    e750:	1c 00                	sbb    al,0x0
    e752:	00 00                	add    BYTE PTR [rax],al
    e754:	2c 03                	sub    al,0x3
    e756:	00 00                	add    BYTE PTR [rax],al
    e758:	11 67 ff             	adc    DWORD PTR [rdi-0x1],esp
    e75b:	ff                   	(bad)  
    e75c:	ff 00                	inc    DWORD PTR [rax]
    e75e:	00 00                	add    BYTE PTR [rax],al
    e760:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e763:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e769:	02 f6                	add    dh,dh
    e76b:	0c 07                	or     al,0x7
    e76d:	08 00                	or     BYTE PTR [rax],al
    e76f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e772:	00 00                	add    BYTE PTR [rax],al
    e774:	4c 03 00             	add    r8,QWORD PTR [rax]
    e777:	00 f0                	add    al,dh
    e779:	67 ff                	addr32 (bad) 
    e77b:	ff                   	(bad)  
    e77c:	ec                   	in     al,dx
    e77d:	00 00                	add    BYTE PTR [rax],al
    e77f:	00 00                	add    BYTE PTR [rax],al
    e781:	45 0e                	rex.RB (bad) 
    e783:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e789:	02 e3                	add    ah,bl
    e78b:	0c 07                	or     al,0x7
    e78d:	08 00                	or     BYTE PTR [rax],al
    e78f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e792:	00 00                	add    BYTE PTR [rax],al
    e794:	6c                   	ins    BYTE PTR es:[rdi],dx
    e795:	03 00                	add    eax,DWORD PTR [rax]
    e797:	00 bc 68 ff ff b2 03 	add    BYTE PTR [rax+rbp*2+0x3b2ffff],bh
    e79e:	00 00                	add    BYTE PTR [rax],al
    e7a0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e7a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7a9:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e7af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7b2:	00 00                	add    BYTE PTR [rax],al
    e7b4:	8c 03                	mov    WORD PTR [rbx],es
    e7b6:	00 00                	add    BYTE PTR [rax],al
    e7b8:	4e 6c                	rex.WRX ins BYTE PTR es:[rdi],dx
    e7ba:	ff                   	(bad)  
    e7bb:	ff 83 00 00 00 00    	inc    DWORD PTR [rbx+0x0]
    e7c1:	45 0e                	rex.RB (bad) 
    e7c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7c9:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e7cc:	07                   	(bad)  
    e7cd:	08 00                	or     BYTE PTR [rax],al
    e7cf:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e7d2:	00 00                	add    BYTE PTR [rax],al
    e7d4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e7d5:	03 00                	add    eax,DWORD PTR [rax]
    e7d7:	00 b1 6c ff ff 2a    	add    BYTE PTR [rcx+0x2affff6c],dh
    e7dd:	02 00                	add    al,BYTE PTR [rax]
    e7df:	00 00                	add    BYTE PTR [rax],al
    e7e1:	45 0e                	rex.RB (bad) 
    e7e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7e9:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e7ed:	19 02                	sbb    DWORD PTR [rdx],eax
    e7ef:	0c 07                	or     al,0x7
    e7f1:	08 00                	or     BYTE PTR [rax],al
    e7f3:	00 00                	add    BYTE PTR [rax],al
    e7f5:	00 00                	add    BYTE PTR [rax],al
    e7f7:	00 20                	add    BYTE PTR [rax],ah
    e7f9:	00 00                	add    BYTE PTR [rax],al
    e7fb:	00 d4                	add    ah,dl
    e7fd:	03 00                	add    eax,DWORD PTR [rax]
    e7ff:	00 b3 6e ff ff 40    	add    BYTE PTR [rbx+0x40ffff6e],dh
    e805:	02 00                	add    al,BYTE PTR [rax]
    e807:	00 00                	add    BYTE PTR [rax],al
    e809:	45 0e                	rex.RB (bad) 
    e80b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e811:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e815:	32 02                	xor    al,BYTE PTR [rdx]
    e817:	0c 07                	or     al,0x7
    e819:	08 00                	or     BYTE PTR [rax],al
    e81b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e81e:	00 00                	add    BYTE PTR [rax],al
    e820:	f8                   	clc    
    e821:	03 00                	add    eax,DWORD PTR [rax]
    e823:	00 cf                	add    bh,cl
    e825:	70 ff                	jo     e826 <__GNU_EH_FRAME_HDR+0x7c2>
    e827:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    e82a:	00 00                	add    BYTE PTR [rax],al
    e82c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e82f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e835:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e838:	07                   	(bad)  
    e839:	08 00                	or     BYTE PTR [rax],al
    e83b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e83e:	00 00                	add    BYTE PTR [rax],al
    e840:	18 04 00             	sbb    BYTE PTR [rax+rax*1],al
    e843:	00 15 71 ff ff 17    	add    BYTE PTR [rip+0x17ffff71],dl        # 1800e7ba <_end+0x17ed379a>
    e849:	00 00                	add    BYTE PTR [rax],al
    e84b:	00 00                	add    BYTE PTR [rax],al
    e84d:	45 0e                	rex.RB (bad) 
    e84f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e855:	4e 0c 07             	rex.WRX or al,0x7
    e858:	08 00                	or     BYTE PTR [rax],al
    e85a:	00 00                	add    BYTE PTR [rax],al
    e85c:	20 00                	and    BYTE PTR [rax],al
    e85e:	00 00                	add    BYTE PTR [rax],al
    e860:	38 04 00             	cmp    BYTE PTR [rax+rax*1],al
    e863:	00 0c 71             	add    BYTE PTR [rcx+rsi*2],cl
    e866:	ff                   	(bad)  
    e867:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    e86a:	00 00                	add    BYTE PTR [rax],al
    e86c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e86f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e875:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e878:	07                   	(bad)  
    e879:	08 00                	or     BYTE PTR [rax],al
    e87b:	00 00                	add    BYTE PTR [rax],al
    e87d:	00 00                	add    BYTE PTR [rax],al
    e87f:	00 20                	add    BYTE PTR [rax],ah
    e881:	00 00                	add    BYTE PTR [rax],al
    e883:	00 5c 04 00          	add    BYTE PTR [rsp+rax*1+0x0],bl
    e887:	00 39                	add    BYTE PTR [rcx],bh
    e889:	71 ff                	jno    e88a <__GNU_EH_FRAME_HDR+0x826>
    e88b:	ff 40 06             	inc    DWORD PTR [rax+0x6]
    e88e:	00 00                	add    BYTE PTR [rax],al
    e890:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e893:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e899:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e89d:	32 06                	xor    al,BYTE PTR [rsi]
    e89f:	0c 07                	or     al,0x7
    e8a1:	08 00                	or     BYTE PTR [rax],al
    e8a3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8a6:	00 00                	add    BYTE PTR [rax],al
    e8a8:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
    e8ac:	55                   	push   rbp
    e8ad:	77 ff                	ja     e8ae <__GNU_EH_FRAME_HDR+0x84a>
    e8af:	ff 1a                	call   FWORD PTR [rdx]
    e8b1:	00 00                	add    BYTE PTR [rax],al
    e8b3:	00 00                	add    BYTE PTR [rax],al
    e8b5:	45 0e                	rex.RB (bad) 
    e8b7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8bd:	51                   	push   rcx
    e8be:	0c 07                	or     al,0x7
    e8c0:	08 00                	or     BYTE PTR [rax],al
    e8c2:	00 00                	add    BYTE PTR [rax],al
    e8c4:	1c 00                	sbb    al,0x0
    e8c6:	00 00                	add    BYTE PTR [rax],al
    e8c8:	a0 04 00 00 4f 77 ff 	movabs al,ds:0x29ffff774f000004
    e8cf:	ff 29 
    e8d1:	00 00                	add    BYTE PTR [rax],al
    e8d3:	00 00                	add    BYTE PTR [rax],al
    e8d5:	45 0e                	rex.RB (bad) 
    e8d7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8dd:	60                   	(bad)  
    e8de:	0c 07                	or     al,0x7
    e8e0:	08 00                	or     BYTE PTR [rax],al
    e8e2:	00 00                	add    BYTE PTR [rax],al
    e8e4:	1c 00                	sbb    al,0x0
    e8e6:	00 00                	add    BYTE PTR [rax],al
    e8e8:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
    e8ec:	58                   	pop    rax
    e8ed:	77 ff                	ja     e8ee <__GNU_EH_FRAME_HDR+0x88a>
    e8ef:	ff 30                	push   QWORD PTR [rax]
    e8f1:	00 00                	add    BYTE PTR [rax],al
    e8f3:	00 00                	add    BYTE PTR [rax],al
    e8f5:	45 0e                	rex.RB (bad) 
    e8f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8fd:	67 0c 07             	addr32 or al,0x7
    e900:	08 00                	or     BYTE PTR [rax],al
    e902:	00 00                	add    BYTE PTR [rax],al
    e904:	18 00                	sbb    BYTE PTR [rax],al
    e906:	00 00                	add    BYTE PTR [rax],al
    e908:	e0 04                	loopne e90e <__GNU_EH_FRAME_HDR+0x8aa>
    e90a:	00 00                	add    BYTE PTR [rax],al
    e90c:	68 77 ff ff 37       	push   0x37ffff77
    e911:	00 00                	add    BYTE PTR [rax],al
    e913:	00 00                	add    BYTE PTR [rax],al
    e915:	45 0e                	rex.RB (bad) 
    e917:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e91d:	00 00                	add    BYTE PTR [rax],al
    e91f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e922:	00 00                	add    BYTE PTR [rax],al
    e924:	fc                   	cld    
    e925:	04 00                	add    al,0x0
    e927:	00 83 77 ff ff 45    	add    BYTE PTR [rbx+0x45ffff77],al
    e92d:	01 00                	add    DWORD PTR [rax],eax
    e92f:	00 00                	add    BYTE PTR [rax],al
    e931:	45 0e                	rex.RB (bad) 
    e933:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e939:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    e93c:	0c 07                	or     al,0x7
    e93e:	08 00                	or     BYTE PTR [rax],al
    e940:	1c 00                	sbb    al,0x0
    e942:	00 00                	add    BYTE PTR [rax],al
    e944:	1c 05                	sbb    al,0x5
    e946:	00 00                	add    BYTE PTR [rax],al
    e948:	a8 78                	test   al,0x78
    e94a:	ff                   	(bad)  
    e94b:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    e94e:	00 00                	add    BYTE PTR [rax],al
    e950:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e953:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e959:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    e95c:	0c 07                	or     al,0x7
    e95e:	08 00                	or     BYTE PTR [rax],al
    e960:	1c 00                	sbb    al,0x0
    e962:	00 00                	add    BYTE PTR [rax],al
    e964:	3c 05                	cmp    al,0x5
    e966:	00 00                	add    BYTE PTR [rax],al
    e968:	e8 79 ff ff 61       	call   6200e8e6 <_end+0x61ed38c6>
    e96d:	00 00                	add    BYTE PTR [rax],al
    e96f:	00 00                	add    BYTE PTR [rax],al
    e971:	45 0e                	rex.RB (bad) 
    e973:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e979:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    e97c:	07                   	(bad)  
    e97d:	08 00                	or     BYTE PTR [rax],al
    e97f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e982:	00 00                	add    BYTE PTR [rax],al
    e984:	5c                   	pop    rsp
    e985:	05 00 00 29 7a       	add    eax,0x7a290000
    e98a:	ff                   	(bad)  
    e98b:	ff                   	(bad)  
    e98c:	39 00                	cmp    DWORD PTR [rax],eax
    e98e:	00 00                	add    BYTE PTR [rax],al
    e990:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e993:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e999:	70 0c                	jo     e9a7 <__GNU_EH_FRAME_HDR+0x943>
    e99b:	07                   	(bad)  
    e99c:	08 00                	or     BYTE PTR [rax],al
    e99e:	00 00                	add    BYTE PTR [rax],al
    e9a0:	1c 00                	sbb    al,0x0
    e9a2:	00 00                	add    BYTE PTR [rax],al
    e9a4:	7c 05                	jl     e9ab <__GNU_EH_FRAME_HDR+0x947>
    e9a6:	00 00                	add    BYTE PTR [rax],al
    e9a8:	42 7a ff             	rex.X jp e9aa <__GNU_EH_FRAME_HDR+0x946>
    e9ab:	ff                   	(bad)  
    e9ac:	be 00 00 00 00       	mov    esi,0x0
    e9b1:	45 0e                	rex.RB (bad) 
    e9b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9b9:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    e9bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e9c2:	00 00                	add    BYTE PTR [rax],al
    e9c4:	9c                   	pushf  
    e9c5:	05 00 00 e0 7a       	add    eax,0x7ae00000
    e9ca:	ff                   	(bad)  
    e9cb:	ff                   	(bad)  
    e9cc:	be 02 00 00 00       	mov    esi,0x2
    e9d1:	45 0e                	rex.RB (bad) 
    e9d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9d9:	03 b5 02 0c 07 08    	add    esi,DWORD PTR [rbp+0x8070c02]
    e9df:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e9e2:	00 00                	add    BYTE PTR [rax],al
    e9e4:	bc 05 00 00 7e       	mov    esp,0x7e000005
    e9e9:	7d ff                	jge    e9ea <__GNU_EH_FRAME_HDR+0x986>
    e9eb:	ff                   	(bad)  
    e9ec:	f8                   	clc    
    e9ed:	01 00                	add    DWORD PTR [rax],eax
    e9ef:	00 00                	add    BYTE PTR [rax],al
    e9f1:	45 0e                	rex.RB (bad) 
    e9f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9f9:	03 ef                	add    ebp,edi
    e9fb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e9fe:	08 00                	or     BYTE PTR [rax],al
    ea00:	1c 00                	sbb    al,0x0
    ea02:	00 00                	add    BYTE PTR [rax],al
    ea04:	dc 05 00 00 56 7f    	fadd   QWORD PTR [rip+0x7f560000]        # 7f56ea0a <_end+0x7f4339ea>
    ea0a:	ff                   	(bad)  
    ea0b:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    ea0e:	00 00                	add    BYTE PTR [rax],al
    ea10:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea19:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    ea1c:	07                   	(bad)  
    ea1d:	08 00                	or     BYTE PTR [rax],al
    ea1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea22:	00 00                	add    BYTE PTR [rax],al
    ea24:	fc                   	cld    
    ea25:	05 00 00 90 7f       	add    eax,0x7f900000
    ea2a:	ff                   	(bad)  
    ea2b:	ff e6                	jmp    rsi
    ea2d:	02 00                	add    al,BYTE PTR [rax]
    ea2f:	00 00                	add    BYTE PTR [rax],al
    ea31:	45 0e                	rex.RB (bad) 
    ea33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea39:	03 dd                	add    ebx,ebp
    ea3b:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    ea3e:	08 00                	or     BYTE PTR [rax],al
    ea40:	1c 00                	sbb    al,0x0
    ea42:	00 00                	add    BYTE PTR [rax],al
    ea44:	1c 06                	sbb    al,0x6
    ea46:	00 00                	add    BYTE PTR [rax],al
    ea48:	56                   	push   rsi
    ea49:	82                   	(bad)  
    ea4a:	ff                   	(bad)  
    ea4b:	ff 55 04             	call   QWORD PTR [rbp+0x4]
    ea4e:	00 00                	add    BYTE PTR [rax],al
    ea50:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea59:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    ea5c:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    ea60:	18 00                	sbb    BYTE PTR [rax],al
    ea62:	00 00                	add    BYTE PTR [rax],al
    ea64:	3c 06                	cmp    al,0x6
    ea66:	00 00                	add    BYTE PTR [rax],al
    ea68:	8b 86 ff ff 2a 00    	mov    eax,DWORD PTR [rsi+0x2affff]
    ea6e:	00 00                	add    BYTE PTR [rax],al
    ea70:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea79:	00 00                	add    BYTE PTR [rax],al
    ea7b:	00 20                	add    BYTE PTR [rax],ah
    ea7d:	00 00                	add    BYTE PTR [rax],al
    ea7f:	00 58 06             	add    BYTE PTR [rax+0x6],bl
    ea82:	00 00                	add    BYTE PTR [rax],al
    ea84:	99                   	cdq    
    ea85:	86 ff                	xchg   bh,bh
    ea87:	ff b7 01 00 00 00    	push   QWORD PTR [rdi+0x1]
    ea8d:	45 0e                	rex.RB (bad) 
    ea8f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea95:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    ea99:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    ea9a:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ea9d:	08 00                	or     BYTE PTR [rax],al
    ea9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eaa2:	00 00                	add    BYTE PTR [rax],al
    eaa4:	7c 06                	jl     eaac <__GNU_EH_FRAME_HDR+0xa48>
    eaa6:	00 00                	add    BYTE PTR [rax],al
    eaa8:	2c 88                	sub    al,0x88
    eaaa:	ff                   	(bad)  
    eaab:	ff 17                	call   QWORD PTR [rdi]
    eaad:	00 00                	add    BYTE PTR [rax],al
    eaaf:	00 00                	add    BYTE PTR [rax],al
    eab1:	45 0e                	rex.RB (bad) 
    eab3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eab9:	4e 0c 07             	rex.WRX or al,0x7
    eabc:	08 00                	or     BYTE PTR [rax],al
    eabe:	00 00                	add    BYTE PTR [rax],al
    eac0:	1c 00                	sbb    al,0x0
    eac2:	00 00                	add    BYTE PTR [rax],al
    eac4:	9c                   	pushf  
    eac5:	06                   	(bad)  
    eac6:	00 00                	add    BYTE PTR [rax],al
    eac8:	23 88 ff ff 4f 00    	and    ecx,DWORD PTR [rax+0x4fffff]
    eace:	00 00                	add    BYTE PTR [rax],al
    ead0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ead3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ead9:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    eadc:	07                   	(bad)  
    eadd:	08 00                	or     BYTE PTR [rax],al
    eadf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eae2:	00 00                	add    BYTE PTR [rax],al
    eae4:	bc 06 00 00 52       	mov    esp,0x52000006
    eae9:	88 ff                	mov    bh,bh
    eaeb:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    eaee:	00 00                	add    BYTE PTR [rax],al
    eaf0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eaf3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaf9:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    eafd:	08 00                	or     BYTE PTR [rax],al
    eaff:	00 18                	add    BYTE PTR [rax],bl
    eb01:	00 00                	add    BYTE PTR [rax],al
    eb03:	00 dc                	add    ah,bl
    eb05:	06                   	(bad)  
    eb06:	00 00                	add    BYTE PTR [rax],al
    eb08:	7f 88                	jg     ea92 <__GNU_EH_FRAME_HDR+0xa2e>
    eb0a:	ff                   	(bad)  
    eb0b:	ff 77 01             	push   QWORD PTR [rdi+0x1]
    eb0e:	00 00                	add    BYTE PTR [rax],al
    eb10:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb19:	00 00                	add    BYTE PTR [rax],al
    eb1b:	00 20                	add    BYTE PTR [rax],ah
    eb1d:	00 00                	add    BYTE PTR [rax],al
    eb1f:	00 f8                	add    al,bh
    eb21:	06                   	(bad)  
    eb22:	00 00                	add    BYTE PTR [rax],al
    eb24:	da 89 ff ff 9c 00    	fimul  DWORD PTR [rcx+0x9cffff]
    eb2a:	00 00                	add    BYTE PTR [rax],al
    eb2c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb2f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb35:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    eb3b:	00 00                	add    BYTE PTR [rax],al
    eb3d:	00 00                	add    BYTE PTR [rax],al
    eb3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb42:	00 00                	add    BYTE PTR [rax],al
    eb44:	1c 07                	sbb    al,0x7
    eb46:	00 00                	add    BYTE PTR [rax],al
    eb48:	52                   	push   rdx
    eb49:	8a ff                	mov    bh,bh
    eb4b:	ff                   	(bad)  
    eb4c:	ee                   	out    dx,al
    eb4d:	01 00                	add    DWORD PTR [rax],eax
    eb4f:	00 00                	add    BYTE PTR [rax],al
    eb51:	45 0e                	rex.RB (bad) 
    eb53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb59:	03 e5                	add    esp,ebp
    eb5b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eb5e:	08 00                	or     BYTE PTR [rax],al
    eb60:	1c 00                	sbb    al,0x0
    eb62:	00 00                	add    BYTE PTR [rax],al
    eb64:	3c 07                	cmp    al,0x7
    eb66:	00 00                	add    BYTE PTR [rax],al
    eb68:	20 8c ff ff e8 01 00 	and    BYTE PTR [rdi+rdi*8+0x1e8ff],cl
    eb6f:	00 00                	add    BYTE PTR [rax],al
    eb71:	45 0e                	rex.RB (bad) 
    eb73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb79:	03 df                	add    ebx,edi
    eb7b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eb7e:	08 00                	or     BYTE PTR [rax],al
    eb80:	1c 00                	sbb    al,0x0
    eb82:	00 00                	add    BYTE PTR [rax],al
    eb84:	5c                   	pop    rsp
    eb85:	07                   	(bad)  
    eb86:	00 00                	add    BYTE PTR [rax],al
    eb88:	e8 8d ff ff 6c       	call   6d00eb1a <_end+0x6ced3afa>
    eb8d:	00 00                	add    BYTE PTR [rax],al
    eb8f:	00 00                	add    BYTE PTR [rax],al
    eb91:	45 0e                	rex.RB (bad) 
    eb93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb99:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    eb9c:	07                   	(bad)  
    eb9d:	08 00                	or     BYTE PTR [rax],al
    eb9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eba2:	00 00                	add    BYTE PTR [rax],al
    eba4:	7c 07                	jl     ebad <__GNU_EH_FRAME_HDR+0xb49>
    eba6:	00 00                	add    BYTE PTR [rax],al
    eba8:	34 8e                	xor    al,0x8e
    ebaa:	ff                   	(bad)  
    ebab:	ff 72 00             	push   QWORD PTR [rdx+0x0]
    ebae:	00 00                	add    BYTE PTR [rax],al
    ebb0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebb9:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    ebbc:	07                   	(bad)  
    ebbd:	08 00                	or     BYTE PTR [rax],al
    ebbf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebc2:	00 00                	add    BYTE PTR [rax],al
    ebc4:	9c                   	pushf  
    ebc5:	07                   	(bad)  
    ebc6:	00 00                	add    BYTE PTR [rax],al
    ebc8:	86 8e ff ff 11 01    	xchg   BYTE PTR [rsi+0x111ffff],cl
    ebce:	00 00                	add    BYTE PTR [rax],al
    ebd0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebd9:	03 08                	add    ecx,DWORD PTR [rax]
    ebdb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ebde:	08 00                	or     BYTE PTR [rax],al
    ebe0:	1c 00                	sbb    al,0x0
    ebe2:	00 00                	add    BYTE PTR [rax],al
    ebe4:	bc 07 00 00 77       	mov    esp,0x77000007
    ebe9:	8f                   	(bad)  
    ebea:	ff                   	(bad)  
    ebeb:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
    ebef:	00 00                	add    BYTE PTR [rax],al
    ebf1:	45 0e                	rex.RB (bad) 
    ebf3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebf9:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    ebfc:	07                   	(bad)  
    ebfd:	08 00                	or     BYTE PTR [rax],al
    ebff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec02:	00 00                	add    BYTE PTR [rax],al
    ec04:	dc 07                	fadd   QWORD PTR [rdi]
    ec06:	00 00                	add    BYTE PTR [rax],al
    ec08:	b3 8f                	mov    bl,0x8f
    ec0a:	ff                   	(bad)  
    ec0b:	ff                   	(bad)  
    ec0c:	3e 00 00             	add    BYTE PTR ds:[rax],al
    ec0f:	00 00                	add    BYTE PTR [rax],al
    ec11:	45 0e                	rex.RB (bad) 
    ec13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec19:	75 0c                	jne    ec27 <__GNU_EH_FRAME_HDR+0xbc3>
    ec1b:	07                   	(bad)  
    ec1c:	08 00                	or     BYTE PTR [rax],al
    ec1e:	00 00                	add    BYTE PTR [rax],al
    ec20:	1c 00                	sbb    al,0x0
    ec22:	00 00                	add    BYTE PTR [rax],al
    ec24:	fc                   	cld    
    ec25:	07                   	(bad)  
    ec26:	00 00                	add    BYTE PTR [rax],al
    ec28:	d1 8f ff ff 86 00    	ror    DWORD PTR [rdi+0x86ffff],1
    ec2e:	00 00                	add    BYTE PTR [rax],al
    ec30:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec39:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    ec3c:	07                   	(bad)  
    ec3d:	08 00                	or     BYTE PTR [rax],al
    ec3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec42:	00 00                	add    BYTE PTR [rax],al
    ec44:	1c 08                	sbb    al,0x8
    ec46:	00 00                	add    BYTE PTR [rax],al
    ec48:	37                   	(bad)  
    ec49:	90                   	nop
    ec4a:	ff                   	(bad)  
    ec4b:	ff                   	(bad)  
    ec4c:	df 00                	fild   WORD PTR [rax]
    ec4e:	00 00                	add    BYTE PTR [rax],al
    ec50:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec59:	02 d6                	add    dl,dh
    ec5b:	0c 07                	or     al,0x7
    ec5d:	08 00                	or     BYTE PTR [rax],al
    ec5f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec62:	00 00                	add    BYTE PTR [rax],al
    ec64:	3c 08                	cmp    al,0x8
    ec66:	00 00                	add    BYTE PTR [rax],al
    ec68:	f6 90 ff ff 74 00    	not    BYTE PTR [rax+0x74ffff]
    ec6e:	00 00                	add    BYTE PTR [rax],al
    ec70:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec79:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ec7c:	07                   	(bad)  
    ec7d:	08 00                	or     BYTE PTR [rax],al
    ec7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec82:	00 00                	add    BYTE PTR [rax],al
    ec84:	5c                   	pop    rsp
    ec85:	08 00                	or     BYTE PTR [rax],al
    ec87:	00 4a 91             	add    BYTE PTR [rdx-0x6f],cl
    ec8a:	ff                   	(bad)  
    ec8b:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ec92:	0e                   	(bad)  
    ec93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec99:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ec9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eca2:	00 00                	add    BYTE PTR [rax],al
    eca4:	7c 08                	jl     ecae <__GNU_EH_FRAME_HDR+0xc4a>
    eca6:	00 00                	add    BYTE PTR [rax],al
    eca8:	c6                   	(bad)  
    eca9:	91                   	xchg   ecx,eax
    ecaa:	ff                   	(bad)  
    ecab:	ff 29                	jmp    FWORD PTR [rcx]
    ecad:	00 00                	add    BYTE PTR [rax],al
    ecaf:	00 00                	add    BYTE PTR [rax],al
    ecb1:	45 0e                	rex.RB (bad) 
    ecb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecb9:	60                   	(bad)  
    ecba:	0c 07                	or     al,0x7
    ecbc:	08 00                	or     BYTE PTR [rax],al
    ecbe:	00 00                	add    BYTE PTR [rax],al
    ecc0:	1c 00                	sbb    al,0x0
    ecc2:	00 00                	add    BYTE PTR [rax],al
    ecc4:	9c                   	pushf  
    ecc5:	08 00                	or     BYTE PTR [rax],al
    ecc7:	00 cf                	add    bh,cl
    ecc9:	91                   	xchg   ecx,eax
    ecca:	ff                   	(bad)  
    eccb:	ff 29                	jmp    FWORD PTR [rcx]
    eccd:	00 00                	add    BYTE PTR [rax],al
    eccf:	00 00                	add    BYTE PTR [rax],al
    ecd1:	45 0e                	rex.RB (bad) 
    ecd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecd9:	60                   	(bad)  
    ecda:	0c 07                	or     al,0x7
    ecdc:	08 00                	or     BYTE PTR [rax],al
    ecde:	00 00                	add    BYTE PTR [rax],al
    ece0:	24 00                	and    al,0x0
    ece2:	00 00                	add    BYTE PTR [rax],al
    ece4:	bc 08 00 00 d8       	mov    esp,0xd8000008
    ece9:	91                   	xchg   ecx,eax
    ecea:	ff                   	(bad)  
    eceb:	ff 54 01 00          	call   QWORD PTR [rcx+rax*1+0x0]
    ecef:	00 00                	add    BYTE PTR [rax],al
    ecf1:	45 0e                	rex.RB (bad) 
    ecf3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecf9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ecfd:	46 01 0c 07          	add    DWORD PTR [rdi+r8*1],r9d
    ed01:	08 00                	or     BYTE PTR [rax],al
    ed03:	00 00                	add    BYTE PTR [rax],al
    ed05:	00 00                	add    BYTE PTR [rax],al
    ed07:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed0a:	00 00                	add    BYTE PTR [rax],al
    ed0c:	e4 08                	in     al,0x8
    ed0e:	00 00                	add    BYTE PTR [rax],al
    ed10:	04 93                	add    al,0x93
    ed12:	ff                   	(bad)  
    ed13:	ff 13                	call   QWORD PTR [rbx]
    ed15:	01 00                	add    DWORD PTR [rax],eax
    ed17:	00 00                	add    BYTE PTR [rax],al
    ed19:	45 0e                	rex.RB (bad) 
    ed1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed21:	03 0a                	add    ecx,DWORD PTR [rdx]
    ed23:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ed26:	08 00                	or     BYTE PTR [rax],al
    ed28:	1c 00                	sbb    al,0x0
    ed2a:	00 00                	add    BYTE PTR [rax],al
    ed2c:	04 09                	add    al,0x9
    ed2e:	00 00                	add    BYTE PTR [rax],al
    ed30:	f7 93 ff ff f9 00    	not    DWORD PTR [rbx+0xf9ffff]
    ed36:	00 00                	add    BYTE PTR [rax],al
    ed38:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed41:	02 f0                	add    dh,al
    ed43:	0c 07                	or     al,0x7
    ed45:	08 00                	or     BYTE PTR [rax],al
    ed47:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed4a:	00 00                	add    BYTE PTR [rax],al
    ed4c:	24 09                	and    al,0x9
    ed4e:	00 00                	add    BYTE PTR [rax],al
    ed50:	d0 94 ff ff a2 00 00 	rcl    BYTE PTR [rdi+rdi*8+0xa2ff],1
    ed57:	00 00                	add    BYTE PTR [rax],al
    ed59:	45 0e                	rex.RB (bad) 
    ed5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed61:	02 99 0c 07 08 00    	add    bl,BYTE PTR [rcx+0x8070c]
    ed67:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed6a:	00 00                	add    BYTE PTR [rax],al
    ed6c:	44 09 00             	or     DWORD PTR [rax],r8d
    ed6f:	00 52 95             	add    BYTE PTR [rdx-0x6b],dl
    ed72:	ff                   	(bad)  
    ed73:	ff 1e                	call   FWORD PTR [rsi]
    ed75:	00 00                	add    BYTE PTR [rax],al
    ed77:	00 00                	add    BYTE PTR [rax],al
    ed79:	45 0e                	rex.RB (bad) 
    ed7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed81:	55                   	push   rbp
    ed82:	0c 07                	or     al,0x7
    ed84:	08 00                	or     BYTE PTR [rax],al
    ed86:	00 00                	add    BYTE PTR [rax],al
    ed88:	1c 00                	sbb    al,0x0
    ed8a:	00 00                	add    BYTE PTR [rax],al
    ed8c:	64 09 00             	or     DWORD PTR fs:[rax],eax
    ed8f:	00 50 95             	add    BYTE PTR [rax-0x6b],dl
    ed92:	ff                   	(bad)  
    ed93:	ff 63 01             	jmp    QWORD PTR [rbx+0x1]
    ed96:	00 00                	add    BYTE PTR [rax],al
    ed98:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eda1:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    eda4:	0c 07                	or     al,0x7
    eda6:	08 00                	or     BYTE PTR [rax],al
    eda8:	2c 00                	sub    al,0x0
    edaa:	00 00                	add    BYTE PTR [rax],al
    edac:	84 09                	test   BYTE PTR [rcx],cl
    edae:	00 00                	add    BYTE PTR [rax],al
    edb0:	93                   	xchg   ebx,eax
    edb1:	96                   	xchg   esi,eax
    edb2:	ff                   	(bad)  
    edb3:	ff 11                	call   QWORD PTR [rcx]
    edb5:	02 00                	add    al,BYTE PTR [rax]
    edb7:	00 00                	add    BYTE PTR [rax],al
    edb9:	45 0e                	rex.RB (bad) 
    edbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edc1:	50                   	push   rax
    edc2:	8f 03                	pop    QWORD PTR [rbx]
    edc4:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    edcb:	07                   	(bad)  
    edcc:	03 f8                	add    edi,eax
    edce:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    edd1:	08 00                	or     BYTE PTR [rax],al
    edd3:	00 00                	add    BYTE PTR [rax],al
    edd5:	00 00                	add    BYTE PTR [rax],al
    edd7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edda:	00 00                	add    BYTE PTR [rax],al
    eddc:	b4 09                	mov    ah,0x9
    edde:	00 00                	add    BYTE PTR [rax],al
    ede0:	74 98                	je     ed7a <__GNU_EH_FRAME_HDR+0xd16>
    ede2:	ff                   	(bad)  
    ede3:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
    ede9:	45 0e                	rex.RB (bad) 
    edeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edf1:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    edf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edfa:	00 00                	add    BYTE PTR [rax],al
    edfc:	d4                   	(bad)  
    edfd:	09 00                	or     DWORD PTR [rax],eax
    edff:	00 06                	add    BYTE PTR [rsi],al
    ee01:	99                   	cdq    
    ee02:	ff                   	(bad)  
    ee03:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    ee09:	45 0e                	rex.RB (bad) 
    ee0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee11:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    ee18:	24 00                	and    al,0x0
    ee1a:	00 00                	add    BYTE PTR [rax],al
    ee1c:	f4                   	hlt    
    ee1d:	09 00                	or     DWORD PTR [rax],eax
    ee1f:	00 8b 99 ff ff ac    	add    BYTE PTR [rbx-0x53000067],cl
    ee25:	00 00                	add    BYTE PTR [rax],al
    ee27:	00 00                	add    BYTE PTR [rax],al
    ee29:	45 0e                	rex.RB (bad) 
    ee2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee31:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    ee35:	9e                   	sahf   
    ee36:	0c 07                	or     al,0x7
    ee38:	08 00                	or     BYTE PTR [rax],al
    ee3a:	00 00                	add    BYTE PTR [rax],al
    ee3c:	00 00                	add    BYTE PTR [rax],al
    ee3e:	00 00                	add    BYTE PTR [rax],al
    ee40:	1c 00                	sbb    al,0x0
    ee42:	00 00                	add    BYTE PTR [rax],al
    ee44:	1c 0a                	sbb    al,0xa
    ee46:	00 00                	add    BYTE PTR [rax],al
    ee48:	0f 9a ff             	setp   bh
    ee4b:	ff d5                	call   rbp
    ee4d:	00 00                	add    BYTE PTR [rax],al
    ee4f:	00 00                	add    BYTE PTR [rax],al
    ee51:	45 0e                	rex.RB (bad) 
    ee53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee59:	02 cc                	add    cl,ah
    ee5b:	0c 07                	or     al,0x7
    ee5d:	08 00                	or     BYTE PTR [rax],al
    ee5f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee62:	00 00                	add    BYTE PTR [rax],al
    ee64:	3c 0a                	cmp    al,0xa
    ee66:	00 00                	add    BYTE PTR [rax],al
    ee68:	c4                   	(bad)  
    ee69:	9a                   	(bad)  
    ee6a:	ff                   	(bad)  
    ee6b:	ff                   	(bad)  
    ee6c:	df 00                	fild   WORD PTR [rax]
    ee6e:	00 00                	add    BYTE PTR [rax],al
    ee70:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee79:	02 d6                	add    dl,dh
    ee7b:	0c 07                	or     al,0x7
    ee7d:	08 00                	or     BYTE PTR [rax],al
    ee7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee82:	00 00                	add    BYTE PTR [rax],al
    ee84:	5c                   	pop    rsp
    ee85:	0a 00                	or     al,BYTE PTR [rax]
    ee87:	00 83 9b ff ff 7d    	add    BYTE PTR [rbx+0x7dffff9b],al
    ee8d:	00 00                	add    BYTE PTR [rax],al
    ee8f:	00 00                	add    BYTE PTR [rax],al
    ee91:	45 0e                	rex.RB (bad) 
    ee93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee99:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    ee9d:	08 00                	or     BYTE PTR [rax],al
    ee9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eea2:	00 00                	add    BYTE PTR [rax],al
    eea4:	7c 0a                	jl     eeb0 <__GNU_EH_FRAME_HDR+0xe4c>
    eea6:	00 00                	add    BYTE PTR [rax],al
    eea8:	e0 9b                	loopne ee45 <__GNU_EH_FRAME_HDR+0xde1>
    eeaa:	ff                   	(bad)  
    eeab:	ff 36                	push   QWORD PTR [rsi]
    eead:	01 00                	add    DWORD PTR [rax],eax
    eeaf:	00 00                	add    BYTE PTR [rax],al
    eeb1:	45 0e                	rex.RB (bad) 
    eeb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eeb9:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807fac0 <_end+0x7f44aa0>
    eebf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eec2:	00 00                	add    BYTE PTR [rax],al
    eec4:	9c                   	pushf  
    eec5:	0a 00                	or     al,BYTE PTR [rax]
    eec7:	00 f6                	add    dh,dh
    eec9:	9c                   	pushf  
    eeca:	ff                   	(bad)  
    eecb:	ff                   	(bad)  
    eecc:	7e 00                	jle    eece <__GNU_EH_FRAME_HDR+0xe6a>
    eece:	00 00                	add    BYTE PTR [rax],al
    eed0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eed3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eed9:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    eedc:	07                   	(bad)  
    eedd:	08 00                	or     BYTE PTR [rax],al
    eedf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eee2:	00 00                	add    BYTE PTR [rax],al
    eee4:	bc 0a 00 00 54       	mov    esp,0x5400000a
    eee9:	9d                   	popf   
    eeea:	ff                   	(bad)  
    eeeb:	ff                   	(bad)  
    eeec:	39 02                	cmp    DWORD PTR [rdx],eax
    eeee:	00 00                	add    BYTE PTR [rax],al
    eef0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eef3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eef9:	03 30                	add    esi,DWORD PTR [rax]
    eefb:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    eefe:	08 00                	or     BYTE PTR [rax],al
    ef00:	1c 00                	sbb    al,0x0
    ef02:	00 00                	add    BYTE PTR [rax],al
    ef04:	dc 0a                	fmul   QWORD PTR [rdx]
    ef06:	00 00                	add    BYTE PTR [rax],al
    ef08:	6d                   	ins    DWORD PTR es:[rdi],dx
    ef09:	9f                   	lahf   
    ef0a:	ff                   	(bad)  
    ef0b:	ff c9                	dec    ecx
    ef0d:	00 00                	add    BYTE PTR [rax],al
    ef0f:	00 00                	add    BYTE PTR [rax],al
    ef11:	45 0e                	rex.RB (bad) 
    ef13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef19:	02 c0                	add    al,al
    ef1b:	0c 07                	or     al,0x7
    ef1d:	08 00                	or     BYTE PTR [rax],al
    ef1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef22:	00 00                	add    BYTE PTR [rax],al
    ef24:	fc                   	cld    
    ef25:	0a 00                	or     al,BYTE PTR [rax]
    ef27:	00 16                	add    BYTE PTR [rsi],dl
    ef29:	a0 ff ff a1 01 00 00 	movabs al,ds:0x4500000001a1ffff
    ef30:	00 45 
    ef32:	0e                   	(bad)  
    ef33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef39:	03 98 01 0c 07 08    	add    ebx,DWORD PTR [rax+0x8070c01]
    ef3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef42:	00 00                	add    BYTE PTR [rax],al
    ef44:	1c 0b                	sbb    al,0xb
    ef46:	00 00                	add    BYTE PTR [rax],al
    ef48:	97                   	xchg   edi,eax
    ef49:	a1 ff ff 13 01 00 00 	movabs eax,ds:0x450000000113ffff
    ef50:	00 45 
    ef52:	0e                   	(bad)  
    ef53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef59:	03 0a                	add    ecx,DWORD PTR [rdx]
    ef5b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ef5e:	08 00                	or     BYTE PTR [rax],al
    ef60:	1c 00                	sbb    al,0x0
    ef62:	00 00                	add    BYTE PTR [rax],al
    ef64:	3c 0b                	cmp    al,0xb
    ef66:	00 00                	add    BYTE PTR [rax],al
    ef68:	8a a2 ff ff 66 00    	mov    ah,BYTE PTR [rdx+0x66ffff]
    ef6e:	00 00                	add    BYTE PTR [rax],al
    ef70:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef79:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    ef7c:	07                   	(bad)  
    ef7d:	08 00                	or     BYTE PTR [rax],al
    ef7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef82:	00 00                	add    BYTE PTR [rax],al
    ef84:	5c                   	pop    rsp
    ef85:	0b 00                	or     eax,DWORD PTR [rax]
    ef87:	00 d0                	add    al,dl
    ef89:	a2 ff ff 75 00 00 00 	movabs ds:0x450000000075ffff,al
    ef90:	00 45 
    ef92:	0e                   	(bad)  
    ef93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef99:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    ef9d:	08 00                	or     BYTE PTR [rax],al
    ef9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efa2:	00 00                	add    BYTE PTR [rax],al
    efa4:	7c 0b                	jl     efb1 <__GNU_EH_FRAME_HDR+0xf4d>
    efa6:	00 00                	add    BYTE PTR [rax],al
    efa8:	25 a3 ff ff db       	and    eax,0xdbffffa3
    efad:	00 00                	add    BYTE PTR [rax],al
    efaf:	00 00                	add    BYTE PTR [rax],al
    efb1:	45 0e                	rex.RB (bad) 
    efb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efb9:	02 d2                	add    dl,dl
    efbb:	0c 07                	or     al,0x7
    efbd:	08 00                	or     BYTE PTR [rax],al
    efbf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efc2:	00 00                	add    BYTE PTR [rax],al
    efc4:	9c                   	pushf  
    efc5:	0b 00                	or     eax,DWORD PTR [rax]
    efc7:	00 e0                	add    al,ah
    efc9:	a3 ff ff 72 01 00 00 	movabs ds:0x450000000172ffff,eax
    efd0:	00 45 
    efd2:	0e                   	(bad)  
    efd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efd9:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    efdc:	0c 07                	or     al,0x7
    efde:	08 00                	or     BYTE PTR [rax],al
    efe0:	1c 00                	sbb    al,0x0
    efe2:	00 00                	add    BYTE PTR [rax],al
    efe4:	bc 0b 00 00 32       	mov    esp,0x3200000b
    efe9:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    efea:	ff                   	(bad)  
    efeb:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    efef:	00 00                	add    BYTE PTR [rax],al
    eff1:	45 0e                	rex.RB (bad) 
    eff3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eff9:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    effc:	07                   	(bad)  
    effd:	08 00                	or     BYTE PTR [rax],al
    efff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f002:	00 00                	add    BYTE PTR [rax],al
    f004:	dc 0b                	fmul   QWORD PTR [rbx]
    f006:	00 00                	add    BYTE PTR [rax],al
    f008:	7e a5                	jle    efaf <__GNU_EH_FRAME_HDR+0xf4b>
    f00a:	ff                   	(bad)  
    f00b:	ff 80 00 00 00 00    	inc    DWORD PTR [rax+0x0]
    f011:	45 0e                	rex.RB (bad) 
    f013:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f019:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    f01c:	07                   	(bad)  
    f01d:	08 00                	or     BYTE PTR [rax],al
    f01f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f022:	00 00                	add    BYTE PTR [rax],al
    f024:	fc                   	cld    
    f025:	0b 00                	or     eax,DWORD PTR [rax]
    f027:	00 de                	add    dh,bl
    f029:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f02a:	ff                   	(bad)  
    f02b:	ff 16                	call   QWORD PTR [rsi]
    f02d:	00 00                	add    BYTE PTR [rax],al
    f02f:	00 00                	add    BYTE PTR [rax],al
    f031:	45 0e                	rex.RB (bad) 
    f033:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f039:	4d 0c 07             	rex.WRB or al,0x7
    f03c:	08 00                	or     BYTE PTR [rax],al
    f03e:	00 00                	add    BYTE PTR [rax],al
    f040:	20 00                	and    BYTE PTR [rax],al
    f042:	00 00                	add    BYTE PTR [rax],al
    f044:	1c 0c                	sbb    al,0xc
    f046:	00 00                	add    BYTE PTR [rax],al
    f048:	d4                   	(bad)  
    f049:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f04a:	ff                   	(bad)  
    f04b:	ff                   	(bad)  
    f04c:	3b 01                	cmp    eax,DWORD PTR [rcx]
    f04e:	00 00                	add    BYTE PTR [rax],al
    f050:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f053:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f059:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f05d:	2d 01 0c 07 08       	sub    eax,0x8070c01
    f062:	00 00                	add    BYTE PTR [rax],al
    f064:	1c 00                	sbb    al,0x0
    f066:	00 00                	add    BYTE PTR [rax],al
    f068:	40 0c 00             	or     al,0x0
    f06b:	00 eb                	add    bl,ch
    f06d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f06e:	ff                   	(bad)  
    f06f:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
    f073:	00 00                	add    BYTE PTR [rax],al
    f075:	45 0e                	rex.RB (bad) 
    f077:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f07d:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    f080:	07                   	(bad)  
    f081:	08 00                	or     BYTE PTR [rax],al
    f083:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f086:	00 00                	add    BYTE PTR [rax],al
    f088:	60                   	(bad)  
    f089:	0c 00                	or     al,0x0
    f08b:	00 2f                	add    BYTE PTR [rdi],ch
    f08d:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f08e:	ff                   	(bad)  
    f08f:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f092:	00 00                	add    BYTE PTR [rax],al
    f094:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f097:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f09d:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f0a0:	07                   	(bad)  
    f0a1:	08 00                	or     BYTE PTR [rax],al
    f0a3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0a6:	00 00                	add    BYTE PTR [rax],al
    f0a8:	80 0c 00 00          	or     BYTE PTR [rax+rax*1],0x0
    f0ac:	62                   	(bad)  
    f0ad:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f0ae:	ff                   	(bad)  
    f0af:	ff b1 00 00 00 00    	push   QWORD PTR [rcx+0x0]
    f0b5:	45 0e                	rex.RB (bad) 
    f0b7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0bd:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    f0c3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0c6:	00 00                	add    BYTE PTR [rax],al
    f0c8:	a0 0c 00 00 f3 a7 ff 	movabs al,ds:0xcbffffa7f300000c
    f0cf:	ff cb 
    f0d1:	00 00                	add    BYTE PTR [rax],al
    f0d3:	00 00                	add    BYTE PTR [rax],al
    f0d5:	45 0e                	rex.RB (bad) 
    f0d7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0dd:	02 c2                	add    al,dl
    f0df:	0c 07                	or     al,0x7
    f0e1:	08 00                	or     BYTE PTR [rax],al
    f0e3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0e6:	00 00                	add    BYTE PTR [rax],al
    f0e8:	c0 0c 00 00          	ror    BYTE PTR [rax+rax*1],0x0
    f0ec:	9e                   	sahf   
    f0ed:	a8 ff                	test   al,0xff
    f0ef:	ff 55 00             	call   QWORD PTR [rbp+0x0]
    f0f2:	00 00                	add    BYTE PTR [rax],al
    f0f4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0fd:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    f101:	08 00                	or     BYTE PTR [rax],al
    f103:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f106:	00 00                	add    BYTE PTR [rax],al
    f108:	e0 0c                	loopne f116 <__GNU_EH_FRAME_HDR+0x10b2>
    f10a:	00 00                	add    BYTE PTR [rax],al
    f10c:	d3 a8 ff ff 30 00    	shr    DWORD PTR [rax+0x30ffff],cl
    f112:	00 00                	add    BYTE PTR [rax],al
    f114:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f117:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f11d:	67 0c 07             	addr32 or al,0x7
    f120:	08 00                	or     BYTE PTR [rax],al
    f122:	00 00                	add    BYTE PTR [rax],al
    f124:	1c 00                	sbb    al,0x0
    f126:	00 00                	add    BYTE PTR [rax],al
    f128:	00 0d 00 00 e3 a8    	add    BYTE PTR [rip+0xffffffffa8e30000],cl        # ffffffffa8e3f12e <_end+0xffffffffa8d0410e>
    f12e:	ff                   	(bad)  
    f12f:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
    f132:	00 00                	add    BYTE PTR [rax],al
    f134:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f137:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f13d:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f140:	07                   	(bad)  
    f141:	08 00                	or     BYTE PTR [rax],al
    f143:	00 20                	add    BYTE PTR [rax],ah
    f145:	00 00                	add    BYTE PTR [rax],al
    f147:	00 20                	add    BYTE PTR [rax],ah
    f149:	0d 00 00 2a a9       	or     eax,0xa92a0000
    f14e:	ff                   	(bad)  
    f14f:	ff 63 0f             	jmp    QWORD PTR [rbx+0xf]
    f152:	00 00                	add    BYTE PTR [rax],al
    f154:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f157:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f15d:	03 5a 0f             	add    ebx,DWORD PTR [rdx+0xf]
    f160:	0c 07                	or     al,0x7
    f162:	08 00                	or     BYTE PTR [rax],al
    f164:	00 00                	add    BYTE PTR [rax],al
    f166:	00 00                	add    BYTE PTR [rax],al
    f168:	1c 00                	sbb    al,0x0
    f16a:	00 00                	add    BYTE PTR [rax],al
    f16c:	44 0d 00 00 69 b8    	rex.R or eax,0xb8690000
    f172:	ff                   	(bad)  
    f173:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
    f176:	00 00                	add    BYTE PTR [rax],al
    f178:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f17b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f181:	7d 0c                	jge    f18f <__GNU_EH_FRAME_HDR+0x112b>
    f183:	07                   	(bad)  
    f184:	08 00                	or     BYTE PTR [rax],al
    f186:	00 00                	add    BYTE PTR [rax],al
    f188:	24 00                	and    al,0x0
    f18a:	00 00                	add    BYTE PTR [rax],al
    f18c:	64 0d 00 00 8f b8    	fs or  eax,0xb88f0000
    f192:	ff                   	(bad)  
    f193:	ff                   	(bad)  
    f194:	3e 02 00             	add    al,BYTE PTR ds:[rax]
    f197:	00 00                	add    BYTE PTR [rax],al
    f199:	45 0e                	rex.RB (bad) 
    f19b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1a1:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f1a4:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f1a7:	05 83 06 03 2a       	add    eax,0x2a030683
    f1ac:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f1af:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f1b2:	00 00                	add    BYTE PTR [rax],al
    f1b4:	8c 0d 00 00 a5 ba    	mov    WORD PTR [rip+0xffffffffbaa50000],cs        # ffffffffbaa5f1ba <_end+0xffffffffba92419a>
    f1ba:	ff                   	(bad)  
    f1bb:	ff ab 01 00 00 00    	jmp    FWORD PTR [rbx+0x1]
    f1c1:	45 0e                	rex.RB (bad) 
    f1c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1c9:	03 a2 01 0c 07 08    	add    esp,DWORD PTR [rdx+0x8070c01]
    f1cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1d2:	00 00                	add    BYTE PTR [rax],al
    f1d4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    f1d5:	0d 00 00 30 bc       	or     eax,0xbc300000
    f1da:	ff                   	(bad)  
    f1db:	ff 12                	call   QWORD PTR [rdx]
    f1dd:	01 00                	add    DWORD PTR [rax],eax
    f1df:	00 00                	add    BYTE PTR [rax],al
    f1e1:	45 0e                	rex.RB (bad) 
    f1e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1e9:	03 09                	add    ecx,DWORD PTR [rcx]
    f1eb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f1ee:	08 00                	or     BYTE PTR [rax],al
    f1f0:	24 00                	and    al,0x0
    f1f2:	00 00                	add    BYTE PTR [rax],al
    f1f4:	cc                   	int3   
    f1f5:	0d 00 00 22 bd       	or     eax,0xbd220000
    f1fa:	ff                   	(bad)  
    f1fb:	ff                   	(bad)  
    f1fc:	bd 00 00 00 00       	mov    ebp,0x0
    f201:	45 0e                	rex.RB (bad) 
    f203:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f209:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f20d:	af                   	scas   eax,DWORD PTR es:[rdi]
    f20e:	0c 07                	or     al,0x7
    f210:	08 00                	or     BYTE PTR [rax],al
    f212:	00 00                	add    BYTE PTR [rax],al
    f214:	00 00                	add    BYTE PTR [rax],al
    f216:	00 00                	add    BYTE PTR [rax],al
    f218:	24 00                	and    al,0x0
    f21a:	00 00                	add    BYTE PTR [rax],al
    f21c:	f4                   	hlt    
    f21d:	0d 00 00 b7 bd       	or     eax,0xbdb70000
    f222:	ff                   	(bad)  
    f223:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    f229:	45 0e                	rex.RB (bad) 
    f22b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f231:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f234:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f238:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f23b:	08 00                	or     BYTE PTR [rax],al
    f23d:	00 00                	add    BYTE PTR [rax],al
    f23f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f242:	00 00                	add    BYTE PTR [rax],al
    f244:	1c 0e                	sbb    al,0xe
    f246:	00 00                	add    BYTE PTR [rax],al
    f248:	2a bf ff ff a5 00    	sub    bh,BYTE PTR [rdi+0xa5ffff]
    f24e:	00 00                	add    BYTE PTR [rax],al
    f250:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f253:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f259:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f260:	1c 00                	sbb    al,0x0
    f262:	00 00                	add    BYTE PTR [rax],al
    f264:	3c 0e                	cmp    al,0xe
    f266:	00 00                	add    BYTE PTR [rax],al
    f268:	af                   	scas   eax,DWORD PTR es:[rdi]
    f269:	bf ff ff 43 01       	mov    edi,0x143ffff
    f26e:	00 00                	add    BYTE PTR [rax],al
    f270:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f273:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f279:	03 3a                	add    edi,DWORD PTR [rdx]
    f27b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f27e:	08 00                	or     BYTE PTR [rax],al
    f280:	1c 00                	sbb    al,0x0
    f282:	00 00                	add    BYTE PTR [rax],al
    f284:	5c                   	pop    rsp
    f285:	0e                   	(bad)  
    f286:	00 00                	add    BYTE PTR [rax],al
    f288:	d2 c0                	rol    al,cl
    f28a:	ff                   	(bad)  
    f28b:	ff f3                	push   rbx
    f28d:	00 00                	add    BYTE PTR [rax],al
    f28f:	00 00                	add    BYTE PTR [rax],al
    f291:	45 0e                	rex.RB (bad) 
    f293:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f299:	02 ea                	add    ch,dl
    f29b:	0c 07                	or     al,0x7
    f29d:	08 00                	or     BYTE PTR [rax],al
    f29f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f2a2:	00 00                	add    BYTE PTR [rax],al
    f2a4:	7c 0e                	jl     f2b4 <__GNU_EH_FRAME_HDR+0x1250>
    f2a6:	00 00                	add    BYTE PTR [rax],al
    f2a8:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f2a9:	c1 ff ff             	sar    edi,0xff
    f2ac:	70 00                	jo     f2ae <__GNU_EH_FRAME_HDR+0x124a>
    f2ae:	00 00                	add    BYTE PTR [rax],al
    f2b0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f2b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2b9:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f2bc:	07                   	(bad)  
    f2bd:	08 00                	or     BYTE PTR [rax],al
    f2bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f2c2:	00 00                	add    BYTE PTR [rax],al
    f2c4:	9c                   	pushf  
    f2c5:	0e                   	(bad)  
    f2c6:	00 00                	add    BYTE PTR [rax],al
    f2c8:	f5                   	cmc    
    f2c9:	c1 ff ff             	sar    edi,0xff
    f2cc:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f2cd:	02 00                	add    al,BYTE PTR [rax]
    f2cf:	00 00                	add    BYTE PTR [rax],al
    f2d1:	45 0e                	rex.RB (bad) 
    f2d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2d9:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f2dc:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f2e0:	1c 00                	sbb    al,0x0
    f2e2:	00 00                	add    BYTE PTR [rax],al
    f2e4:	bc 0e 00 00 7a       	mov    esp,0x7a00000e
    f2e9:	c4                   	(bad)  
    f2ea:	ff                   	(bad)  
    f2eb:	ff 6a 00             	jmp    FWORD PTR [rdx+0x0]
    f2ee:	00 00                	add    BYTE PTR [rax],al
    f2f0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f2f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2f9:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f2fc:	07                   	(bad)  
    f2fd:	08 00                	or     BYTE PTR [rax],al
    f2ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f302:	00 00                	add    BYTE PTR [rax],al
    f304:	dc 0e                	fmul   QWORD PTR [rsi]
    f306:	00 00                	add    BYTE PTR [rax],al
    f308:	c4                   	(bad)  
    f309:	c4                   	(bad)  
    f30a:	ff                   	(bad)  
    f30b:	ff 6e 00             	jmp    FWORD PTR [rsi+0x0]
    f30e:	00 00                	add    BYTE PTR [rax],al
    f310:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f313:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f319:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f31c:	07                   	(bad)  
    f31d:	08 00                	or     BYTE PTR [rax],al
    f31f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    f322:	00 00                	add    BYTE PTR [rax],al
    f324:	fc                   	cld    
    f325:	0e                   	(bad)  
    f326:	00 00                	add    BYTE PTR [rax],al
    f328:	12 c5                	adc    al,ch
    f32a:	ff                   	(bad)  
    f32b:	ff 8e 01 00 00 00    	dec    DWORD PTR [rsi+0x1]
    f331:	45 0e                	rex.RB (bad) 
    f333:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f339:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f33d:	80 01 0c             	add    BYTE PTR [rcx],0xc
    f340:	07                   	(bad)  
    f341:	08 00                	or     BYTE PTR [rax],al
    f343:	00 00                	add    BYTE PTR [rax],al
    f345:	00 00                	add    BYTE PTR [rax],al
    f347:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
    f34b:	00 24 0f             	add    BYTE PTR [rdi+rcx*1],ah
    f34e:	00 00                	add    BYTE PTR [rax],al
    f350:	80 c6 ff             	add    dh,0xff
    f353:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
    f356:	00 00                	add    BYTE PTR [rax],al
    f358:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    f35b:	10 8f 02 49 0e 18    	adc    BYTE PTR [rdi+0x180e4902],cl
    f361:	8e 03                	mov    es,WORD PTR [rbx]
    f363:	45 0e                	rex.RB (bad) 
    f365:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
    f36b:	8c 05 44 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e44],es        # ffffffff863101b5 <_end+0xffffffff861d5195>
    f371:	06                   	(bad)  
    f372:	48 0e                	rex.W (bad) 
    f374:	38 83 07 47 0e 40    	cmp    BYTE PTR [rbx+0x400e4707],al
    f37a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    f37b:	0e                   	(bad)  
    f37c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    f37f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    f382:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    f385:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    f388:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    f38b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    f38e:	08 00                	or     BYTE PTR [rax],al
    f390:	10 00                	adc    BYTE PTR [rax],al
    f392:	00 00                	add    BYTE PTR [rax],al
    f394:	6c                   	ins    BYTE PTR es:[rdi],dx
    f395:	0f 00 00             	sldt   WORD PTR [rax]
    f398:	a8 c6                	test   al,0xc6
    f39a:	ff                   	(bad)  
    f39b:	ff 05 00 00 00 00    	inc    DWORD PTR [rip+0x0]        # f3a1 <__GNU_EH_FRAME_HDR+0x133d>
    f3a1:	00 00                	add    BYTE PTR [rax],al
	...

000000000000f3a4 <__FRAME_END__>:
    f3a4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b68 <buffer.4704+0x10ae8>:
	...

Disassembly of section .init_array:

0000000000010b68 <__frame_dummy_init_array_entry>:
   10b68:	80 29 00             	sub    BYTE PTR [rcx],0x0
   10b6b:	00 00                	add    BYTE PTR [rax],al
   10b6d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b70 <__do_global_dtors_aux_fini_array_entry>:
   10b70:	40 29 00             	rex sub DWORD PTR [rax],eax
   10b73:	00 00                	add    BYTE PTR [rax],al
   10b75:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b78 <_DYNAMIC>:
   10b78:	01 00                	add    DWORD PTR [rax],eax
   10b7a:	00 00                	add    BYTE PTR [rax],al
   10b7c:	00 00                	add    BYTE PTR [rax],al
   10b7e:	00 00                	add    BYTE PTR [rax],al
   10b80:	01 00                	add    DWORD PTR [rax],eax
   10b82:	00 00                	add    BYTE PTR [rax],al
   10b84:	00 00                	add    BYTE PTR [rax],al
   10b86:	00 00                	add    BYTE PTR [rax],al
   10b88:	01 00                	add    DWORD PTR [rax],eax
   10b8a:	00 00                	add    BYTE PTR [rax],al
   10b8c:	00 00                	add    BYTE PTR [rax],al
   10b8e:	00 00                	add    BYTE PTR [rax],al
   10b90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   10b91:	00 00                	add    BYTE PTR [rax],al
   10b93:	00 00                	add    BYTE PTR [rax],al
   10b95:	00 00                	add    BYTE PTR [rax],al
   10b97:	00 01                	add    BYTE PTR [rcx],al
   10b99:	00 00                	add    BYTE PTR [rax],al
   10b9b:	00 00                	add    BYTE PTR [rax],al
   10b9d:	00 00                	add    BYTE PTR [rax],al
   10b9f:	00 ab 00 00 00 00    	add    BYTE PTR [rbx+0x0],ch
   10ba5:	00 00                	add    BYTE PTR [rax],al
   10ba7:	00 01                	add    BYTE PTR [rcx],al
   10ba9:	00 00                	add    BYTE PTR [rax],al
   10bab:	00 00                	add    BYTE PTR [rax],al
   10bad:	00 00                	add    BYTE PTR [rax],al
   10baf:	00 ff                	add    bh,bh
   10bb1:	00 00                	add    BYTE PTR [rax],al
   10bb3:	00 00                	add    BYTE PTR [rax],al
   10bb5:	00 00                	add    BYTE PTR [rax],al
   10bb7:	00 01                	add    BYTE PTR [rcx],al
   10bb9:	00 00                	add    BYTE PTR [rax],al
   10bbb:	00 00                	add    BYTE PTR [rax],al
   10bbd:	00 00                	add    BYTE PTR [rax],al
   10bbf:	00 64 01 00          	add    BYTE PTR [rcx+rax*1+0x0],ah
   10bc3:	00 00                	add    BYTE PTR [rax],al
   10bc5:	00 00                	add    BYTE PTR [rax],al
   10bc7:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10bca:	00 00                	add    BYTE PTR [rax],al
   10bcc:	00 00                	add    BYTE PTR [rax],al
   10bce:	00 00                	add    BYTE PTR [rax],al
   10bd0:	00 20                	add    BYTE PTR [rax],ah
   10bd2:	00 00                	add    BYTE PTR [rax],al
   10bd4:	00 00                	add    BYTE PTR [rax],al
   10bd6:	00 00                	add    BYTE PTR [rax],al
   10bd8:	0d 00 00 00 00       	or     eax,0x0
   10bdd:	00 00                	add    BYTE PTR [rax],al
   10bdf:	00 48 ba             	add    BYTE PTR [rax-0x46],cl
   10be2:	00 00                	add    BYTE PTR [rax],al
   10be4:	00 00                	add    BYTE PTR [rax],al
   10be6:	00 00                	add    BYTE PTR [rax],al
   10be8:	19 00                	sbb    DWORD PTR [rax],eax
   10bea:	00 00                	add    BYTE PTR [rax],al
   10bec:	00 00                	add    BYTE PTR [rax],al
   10bee:	00 00                	add    BYTE PTR [rax],al
   10bf0:	68 0b 01 00 00       	push   0x10b
   10bf5:	00 00                	add    BYTE PTR [rax],al
   10bf7:	00 1b                	add    BYTE PTR [rbx],bl
   10bf9:	00 00                	add    BYTE PTR [rax],al
   10bfb:	00 00                	add    BYTE PTR [rax],al
   10bfd:	00 00                	add    BYTE PTR [rax],al
   10bff:	00 08                	add    BYTE PTR [rax],cl
   10c01:	00 00                	add    BYTE PTR [rax],al
   10c03:	00 00                	add    BYTE PTR [rax],al
   10c05:	00 00                	add    BYTE PTR [rax],al
   10c07:	00 1a                	add    BYTE PTR [rdx],bl
   10c09:	00 00                	add    BYTE PTR [rax],al
   10c0b:	00 00                	add    BYTE PTR [rax],al
   10c0d:	00 00                	add    BYTE PTR [rax],al
   10c0f:	00 70 0b             	add    BYTE PTR [rax+0xb],dh
   10c12:	01 00                	add    DWORD PTR [rax],eax
   10c14:	00 00                	add    BYTE PTR [rax],al
   10c16:	00 00                	add    BYTE PTR [rax],al
   10c18:	1c 00                	sbb    al,0x0
   10c1a:	00 00                	add    BYTE PTR [rax],al
   10c1c:	00 00                	add    BYTE PTR [rax],al
   10c1e:	00 00                	add    BYTE PTR [rax],al
   10c20:	08 00                	or     BYTE PTR [rax],al
   10c22:	00 00                	add    BYTE PTR [rax],al
   10c24:	00 00                	add    BYTE PTR [rax],al
   10c26:	00 00                	add    BYTE PTR [rax],al
   10c28:	f5                   	cmc    
   10c29:	fe                   	(bad)  
   10c2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c2d:	00 00                	add    BYTE PTR [rax],al
   10c2f:	00 d8                	add    al,bl
   10c31:	03 00                	add    eax,DWORD PTR [rax]
   10c33:	00 00                	add    BYTE PTR [rax],al
   10c35:	00 00                	add    BYTE PTR [rax],al
   10c37:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c3d <_DYNAMIC+0xc5>
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 10                	add    BYTE PTR [rax],dl
   10c41:	0b 00                	or     eax,DWORD PTR [rax]
   10c43:	00 00                	add    BYTE PTR [rax],al
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 06                	add    BYTE PTR [rsi],al
   10c49:	00 00                	add    BYTE PTR [rax],al
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 08                	add    BYTE PTR [rax],cl
   10c51:	04 00                	add    al,0x0
   10c53:	00 00                	add    BYTE PTR [rax],al
   10c55:	00 00                	add    BYTE PTR [rax],al
   10c57:	00 0a                	add    BYTE PTR [rdx],cl
   10c59:	00 00                	add    BYTE PTR [rax],al
   10c5b:	00 00                	add    BYTE PTR [rax],al
   10c5d:	00 00                	add    BYTE PTR [rax],al
   10c5f:	00 15 03 00 00 00    	add    BYTE PTR [rip+0x3],dl        # 10c68 <_DYNAMIC+0xf0>
   10c65:	00 00                	add    BYTE PTR [rax],al
   10c67:	00 0b                	add    BYTE PTR [rbx],cl
   10c69:	00 00                	add    BYTE PTR [rax],al
   10c6b:	00 00                	add    BYTE PTR [rax],al
   10c6d:	00 00                	add    BYTE PTR [rax],al
   10c6f:	00 18                	add    BYTE PTR [rax],bl
   10c71:	00 00                	add    BYTE PTR [rax],al
   10c73:	00 00                	add    BYTE PTR [rax],al
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c7d <_DYNAMIC+0x105>
	...
   10c85:	00 00                	add    BYTE PTR [rax],al
   10c87:	00 03                	add    BYTE PTR [rbx],al
   10c89:	00 00                	add    BYTE PTR [rax],al
   10c8b:	00 00                	add    BYTE PTR [rax],al
   10c8d:	00 00                	add    BYTE PTR [rax],al
   10c8f:	00 a8 0d 01 00 00    	add    BYTE PTR [rax+0x10d],ch
   10c95:	00 00                	add    BYTE PTR [rax],al
   10c97:	00 02                	add    BYTE PTR [rdx],al
   10c99:	00 00                	add    BYTE PTR [rax],al
   10c9b:	00 00                	add    BYTE PTR [rax],al
   10c9d:	00 00                	add    BYTE PTR [rax],al
   10c9f:	00 48 06             	add    BYTE PTR [rax+0x6],cl
   10ca2:	00 00                	add    BYTE PTR [rax],al
   10ca4:	00 00                	add    BYTE PTR [rax],al
   10ca6:	00 00                	add    BYTE PTR [rax],al
   10ca8:	14 00                	adc    al,0x0
   10caa:	00 00                	add    BYTE PTR [rax],al
   10cac:	00 00                	add    BYTE PTR [rax],al
   10cae:	00 00                	add    BYTE PTR [rax],al
   10cb0:	07                   	(bad)  
   10cb1:	00 00                	add    BYTE PTR [rax],al
   10cb3:	00 00                	add    BYTE PTR [rax],al
   10cb5:	00 00                	add    BYTE PTR [rax],al
   10cb7:	00 17                	add    BYTE PTR [rdi],dl
   10cb9:	00 00                	add    BYTE PTR [rax],al
   10cbb:	00 00                	add    BYTE PTR [rax],al
   10cbd:	00 00                	add    BYTE PTR [rax],al
   10cbf:	00 60 10             	add    BYTE PTR [rax+0x10],ah
   10cc2:	00 00                	add    BYTE PTR [rax],al
   10cc4:	00 00                	add    BYTE PTR [rax],al
   10cc6:	00 00                	add    BYTE PTR [rax],al
   10cc8:	07                   	(bad)  
   10cc9:	00 00                	add    BYTE PTR [rax],al
   10ccb:	00 00                	add    BYTE PTR [rax],al
   10ccd:	00 00                	add    BYTE PTR [rax],al
   10ccf:	00 40 0f             	add    BYTE PTR [rax+0xf],al
   10cd2:	00 00                	add    BYTE PTR [rax],al
   10cd4:	00 00                	add    BYTE PTR [rax],al
   10cd6:	00 00                	add    BYTE PTR [rax],al
   10cd8:	08 00                	or     BYTE PTR [rax],al
   10cda:	00 00                	add    BYTE PTR [rax],al
   10cdc:	00 00                	add    BYTE PTR [rax],al
   10cde:	00 00                	add    BYTE PTR [rax],al
   10ce0:	20 01                	and    BYTE PTR [rcx],al
   10ce2:	00 00                	add    BYTE PTR [rax],al
   10ce4:	00 00                	add    BYTE PTR [rax],al
   10ce6:	00 00                	add    BYTE PTR [rax],al
   10ce8:	09 00                	or     DWORD PTR [rax],eax
   10cea:	00 00                	add    BYTE PTR [rax],al
   10cec:	00 00                	add    BYTE PTR [rax],al
   10cee:	00 00                	add    BYTE PTR [rax],al
   10cf0:	18 00                	sbb    BYTE PTR [rax],al
   10cf2:	00 00                	add    BYTE PTR [rax],al
   10cf4:	00 00                	add    BYTE PTR [rax],al
   10cf6:	00 00                	add    BYTE PTR [rax],al
   10cf8:	1e                   	(bad)  
   10cf9:	00 00                	add    BYTE PTR [rax],al
   10cfb:	00 00                	add    BYTE PTR [rax],al
   10cfd:	00 00                	add    BYTE PTR [rax],al
   10cff:	00 08                	add    BYTE PTR [rax],cl
   10d01:	00 00                	add    BYTE PTR [rax],al
   10d03:	00 00                	add    BYTE PTR [rax],al
   10d05:	00 00                	add    BYTE PTR [rax],al
   10d07:	00 fb                	add    bl,bh
   10d09:	ff                   	(bad)  
   10d0a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d0d:	00 00                	add    BYTE PTR [rax],al
   10d0f:	00 01                	add    BYTE PTR [rcx],al
   10d11:	00 00                	add    BYTE PTR [rax],al
   10d13:	08 00                	or     BYTE PTR [rax],al
   10d15:	00 00                	add    BYTE PTR [rax],al
   10d17:	00 fe                	add    dh,bh
   10d19:	ff                   	(bad)  
   10d1a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d1d:	00 00                	add    BYTE PTR [rax],al
   10d1f:	00 c0                	add    al,al
   10d21:	0e                   	(bad)  
   10d22:	00 00                	add    BYTE PTR [rax],al
   10d24:	00 00                	add    BYTE PTR [rax],al
   10d26:	00 00                	add    BYTE PTR [rax],al
   10d28:	ff                   	(bad)  
   10d29:	ff                   	(bad)  
   10d2a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d2d:	00 00                	add    BYTE PTR [rax],al
   10d2f:	00 03                	add    BYTE PTR [rbx],al
   10d31:	00 00                	add    BYTE PTR [rax],al
   10d33:	00 00                	add    BYTE PTR [rax],al
   10d35:	00 00                	add    BYTE PTR [rax],al
   10d37:	00 f0                	add    al,dh
   10d39:	ff                   	(bad)  
   10d3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d3d:	00 00                	add    BYTE PTR [rax],al
   10d3f:	00 26                	add    BYTE PTR [rsi],ah
   10d41:	0e                   	(bad)  
   10d42:	00 00                	add    BYTE PTR [rax],al
   10d44:	00 00                	add    BYTE PTR [rax],al
   10d46:	00 00                	add    BYTE PTR [rax],al
   10d48:	f9                   	stc    
   10d49:	ff                   	(bad)  
   10d4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d4d:	00 00                	add    BYTE PTR [rax],al
   10d4f:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010da8 <_GLOBAL_OFFSET_TABLE_>:
   10da8:	78 0b                	js     10db5 <_GLOBAL_OFFSET_TABLE_+0xd>
   10daa:	01 00                	add    DWORD PTR [rax],eax
	...
   10dc0:	30 20                	xor    BYTE PTR [rax],ah
   10dc2:	00 00                	add    BYTE PTR [rax],al
   10dc4:	00 00                	add    BYTE PTR [rax],al
   10dc6:	00 00                	add    BYTE PTR [rax],al
   10dc8:	40 20 00             	and    BYTE PTR [rax],al
   10dcb:	00 00                	add    BYTE PTR [rax],al
   10dcd:	00 00                	add    BYTE PTR [rax],al
   10dcf:	00 50 20             	add    BYTE PTR [rax+0x20],dl
   10dd2:	00 00                	add    BYTE PTR [rax],al
   10dd4:	00 00                	add    BYTE PTR [rax],al
   10dd6:	00 00                	add    BYTE PTR [rax],al
   10dd8:	60                   	(bad)  
   10dd9:	20 00                	and    BYTE PTR [rax],al
   10ddb:	00 00                	add    BYTE PTR [rax],al
   10ddd:	00 00                	add    BYTE PTR [rax],al
   10ddf:	00 70 20             	add    BYTE PTR [rax+0x20],dh
   10de2:	00 00                	add    BYTE PTR [rax],al
   10de4:	00 00                	add    BYTE PTR [rax],al
   10de6:	00 00                	add    BYTE PTR [rax],al
   10de8:	80 20 00             	and    BYTE PTR [rax],0x0
   10deb:	00 00                	add    BYTE PTR [rax],al
   10ded:	00 00                	add    BYTE PTR [rax],al
   10def:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10df5:	00 00                	add    BYTE PTR [rax],al
   10df7:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 c0                	add    al,al
   10e09:	20 00                	and    BYTE PTR [rax],al
   10e0b:	00 00                	add    BYTE PTR [rax],al
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 d0                	add    al,dl
   10e11:	20 00                	and    BYTE PTR [rax],al
   10e13:	00 00                	add    BYTE PTR [rax],al
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 e0                	add    al,ah
   10e19:	20 00                	and    BYTE PTR [rax],al
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 f0                	add    al,dh
   10e21:	20 00                	and    BYTE PTR [rax],al
   10e23:	00 00                	add    BYTE PTR [rax],al
   10e25:	00 00                	add    BYTE PTR [rax],al
   10e27:	00 00                	add    BYTE PTR [rax],al
   10e29:	21 00                	and    DWORD PTR [rax],eax
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 10                	add    BYTE PTR [rax],dl
   10e31:	21 00                	and    DWORD PTR [rax],eax
   10e33:	00 00                	add    BYTE PTR [rax],al
   10e35:	00 00                	add    BYTE PTR [rax],al
   10e37:	00 20                	add    BYTE PTR [rax],ah
   10e39:	21 00                	and    DWORD PTR [rax],eax
   10e3b:	00 00                	add    BYTE PTR [rax],al
   10e3d:	00 00                	add    BYTE PTR [rax],al
   10e3f:	00 30                	add    BYTE PTR [rax],dh
   10e41:	21 00                	and    DWORD PTR [rax],eax
   10e43:	00 00                	add    BYTE PTR [rax],al
   10e45:	00 00                	add    BYTE PTR [rax],al
   10e47:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e4a:	00 00                	add    BYTE PTR [rax],al
   10e4c:	00 00                	add    BYTE PTR [rax],al
   10e4e:	00 00                	add    BYTE PTR [rax],al
   10e50:	50                   	push   rax
   10e51:	21 00                	and    DWORD PTR [rax],eax
   10e53:	00 00                	add    BYTE PTR [rax],al
   10e55:	00 00                	add    BYTE PTR [rax],al
   10e57:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e5a:	00 00                	add    BYTE PTR [rax],al
   10e5c:	00 00                	add    BYTE PTR [rax],al
   10e5e:	00 00                	add    BYTE PTR [rax],al
   10e60:	70 21                	jo     10e83 <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e62:	00 00                	add    BYTE PTR [rax],al
   10e64:	00 00                	add    BYTE PTR [rax],al
   10e66:	00 00                	add    BYTE PTR [rax],al
   10e68:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e6b:	00 00                	add    BYTE PTR [rax],al
   10e6d:	00 00                	add    BYTE PTR [rax],al
   10e6f:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e75:	00 00                	add    BYTE PTR [rax],al
   10e77:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 c0                	add    al,al
   10e89:	21 00                	and    DWORD PTR [rax],eax
   10e8b:	00 00                	add    BYTE PTR [rax],al
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 d0                	add    al,dl
   10e91:	21 00                	and    DWORD PTR [rax],eax
   10e93:	00 00                	add    BYTE PTR [rax],al
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 e0                	add    al,ah
   10e99:	21 00                	and    DWORD PTR [rax],eax
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 f0                	add    al,dh
   10ea1:	21 00                	and    DWORD PTR [rax],eax
   10ea3:	00 00                	add    BYTE PTR [rax],al
   10ea5:	00 00                	add    BYTE PTR [rax],al
   10ea7:	00 00                	add    BYTE PTR [rax],al
   10ea9:	22 00                	and    al,BYTE PTR [rax]
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 10                	add    BYTE PTR [rax],dl
   10eb1:	22 00                	and    al,BYTE PTR [rax]
   10eb3:	00 00                	add    BYTE PTR [rax],al
   10eb5:	00 00                	add    BYTE PTR [rax],al
   10eb7:	00 20                	add    BYTE PTR [rax],ah
   10eb9:	22 00                	and    al,BYTE PTR [rax]
   10ebb:	00 00                	add    BYTE PTR [rax],al
   10ebd:	00 00                	add    BYTE PTR [rax],al
   10ebf:	00 30                	add    BYTE PTR [rax],dh
   10ec1:	22 00                	and    al,BYTE PTR [rax]
   10ec3:	00 00                	add    BYTE PTR [rax],al
   10ec5:	00 00                	add    BYTE PTR [rax],al
   10ec7:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10eca:	00 00                	add    BYTE PTR [rax],al
   10ecc:	00 00                	add    BYTE PTR [rax],al
   10ece:	00 00                	add    BYTE PTR [rax],al
   10ed0:	50                   	push   rax
   10ed1:	22 00                	and    al,BYTE PTR [rax]
   10ed3:	00 00                	add    BYTE PTR [rax],al
   10ed5:	00 00                	add    BYTE PTR [rax],al
   10ed7:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10eda:	00 00                	add    BYTE PTR [rax],al
   10edc:	00 00                	add    BYTE PTR [rax],al
   10ede:	00 00                	add    BYTE PTR [rax],al
   10ee0:	70 22                	jo     10f04 <_GLOBAL_OFFSET_TABLE_+0x15c>
   10ee2:	00 00                	add    BYTE PTR [rax],al
   10ee4:	00 00                	add    BYTE PTR [rax],al
   10ee6:	00 00                	add    BYTE PTR [rax],al
   10ee8:	80 22 00             	and    BYTE PTR [rdx],0x0
   10eeb:	00 00                	add    BYTE PTR [rax],al
   10eed:	00 00                	add    BYTE PTR [rax],al
   10eef:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10ef5:	00 00                	add    BYTE PTR [rax],al
   10ef7:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 c0                	add    al,al
   10f09:	22 00                	and    al,BYTE PTR [rax]
   10f0b:	00 00                	add    BYTE PTR [rax],al
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 d0                	add    al,dl
   10f11:	22 00                	and    al,BYTE PTR [rax]
   10f13:	00 00                	add    BYTE PTR [rax],al
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 e0                	add    al,ah
   10f19:	22 00                	and    al,BYTE PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 f0                	add    al,dh
   10f21:	22 00                	and    al,BYTE PTR [rax]
   10f23:	00 00                	add    BYTE PTR [rax],al
   10f25:	00 00                	add    BYTE PTR [rax],al
   10f27:	00 00                	add    BYTE PTR [rax],al
   10f29:	23 00                	and    eax,DWORD PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 10                	add    BYTE PTR [rax],dl
   10f31:	23 00                	and    eax,DWORD PTR [rax]
   10f33:	00 00                	add    BYTE PTR [rax],al
   10f35:	00 00                	add    BYTE PTR [rax],al
   10f37:	00 20                	add    BYTE PTR [rax],ah
   10f39:	23 00                	and    eax,DWORD PTR [rax]
   10f3b:	00 00                	add    BYTE PTR [rax],al
   10f3d:	00 00                	add    BYTE PTR [rax],al
   10f3f:	00 30                	add    BYTE PTR [rax],dh
   10f41:	23 00                	and    eax,DWORD PTR [rax]
   10f43:	00 00                	add    BYTE PTR [rax],al
   10f45:	00 00                	add    BYTE PTR [rax],al
   10f47:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f4a:	00 00                	add    BYTE PTR [rax],al
   10f4c:	00 00                	add    BYTE PTR [rax],al
   10f4e:	00 00                	add    BYTE PTR [rax],al
   10f50:	50                   	push   rax
   10f51:	23 00                	and    eax,DWORD PTR [rax]
   10f53:	00 00                	add    BYTE PTR [rax],al
   10f55:	00 00                	add    BYTE PTR [rax],al
   10f57:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f5a:	00 00                	add    BYTE PTR [rax],al
   10f5c:	00 00                	add    BYTE PTR [rax],al
   10f5e:	00 00                	add    BYTE PTR [rax],al
   10f60:	70 23                	jo     10f85 <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f62:	00 00                	add    BYTE PTR [rax],al
   10f64:	00 00                	add    BYTE PTR [rax],al
   10f66:	00 00                	add    BYTE PTR [rax],al
   10f68:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f6b:	00 00                	add    BYTE PTR [rax],al
   10f6d:	00 00                	add    BYTE PTR [rax],al
   10f6f:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f75:	00 00                	add    BYTE PTR [rax],al
   10f77:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 c0                	add    al,al
   10f89:	23 00                	and    eax,DWORD PTR [rax]
   10f8b:	00 00                	add    BYTE PTR [rax],al
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 d0                	add    al,dl
   10f91:	23 00                	and    eax,DWORD PTR [rax]
   10f93:	00 00                	add    BYTE PTR [rax],al
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 e0                	add    al,ah
   10f99:	23 00                	and    eax,DWORD PTR [rax]
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 f0                	add    al,dh
   10fa1:	23 00                	and    eax,DWORD PTR [rax]
   10fa3:	00 00                	add    BYTE PTR [rax],al
   10fa5:	00 00                	add    BYTE PTR [rax],al
   10fa7:	00 00                	add    BYTE PTR [rax],al
   10fa9:	24 00                	and    al,0x0
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 10                	add    BYTE PTR [rax],dl
   10fb1:	24 00                	and    al,0x0
   10fb3:	00 00                	add    BYTE PTR [rax],al
   10fb5:	00 00                	add    BYTE PTR [rax],al
   10fb7:	00 20                	add    BYTE PTR [rax],ah
   10fb9:	24 00                	and    al,0x0
   10fbb:	00 00                	add    BYTE PTR [rax],al
   10fbd:	00 00                	add    BYTE PTR [rax],al
   10fbf:	00 30                	add    BYTE PTR [rax],dh
   10fc1:	24 00                	and    al,0x0
   10fc3:	00 00                	add    BYTE PTR [rax],al
   10fc5:	00 00                	add    BYTE PTR [rax],al
   10fc7:	00 40 24             	add    BYTE PTR [rax+0x24],al
   10fca:	00 00                	add    BYTE PTR [rax],al
   10fcc:	00 00                	add    BYTE PTR [rax],al
   10fce:	00 00                	add    BYTE PTR [rax],al
   10fd0:	50                   	push   rax
   10fd1:	24 00                	and    al,0x0
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.4704+0x1>
   c:	20 39                	and    BYTE PTR [rcx],bh
   e:	2e 34 2e             	cs xor al,0x2e
  11:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627548 <_end+0x754ec528>
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <buffer.4704+0xf>
  1a:	31 7e 32             	xor    DWORD PTR [rsi+0x32],edi
  1d:	30 2e                	xor    BYTE PTR [rsi],ch
  1f:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  22:	20 39                	and    BYTE PTR [rcx],bh
  24:	2e 34 2e             	cs xor al,0x2e
  27:	30 00                	xor    BYTE PTR [rax],al
