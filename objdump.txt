
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.0+0x30d>
 360:	78 38                	js     39a <buffer.0+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 5a 8e             	add    BYTE PTR [rdx-0x72],bl
 3b2:	86 75 c6             	xchg   BYTE PTR [rbp-0x3a],dh
 3b5:	f4                   	hlt    
 3b6:	a0 e9 98 4c 07 3d eb 	movabs al,ds:0x5f97eb3d074c98e9
 3bd:	97 5f 
 3bf:	e1 f9                	loope  3ba <buffer.0+0x33a>
 3c1:	83 c2 e5             	add    edx,0xffffffe5

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 48 00             	add    BYTE PTR [rax+0x0],cl
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	32 b3 f0 a9 b3 a2    	xor    dh,BYTE PTR [rbx-0x5d4c5610]
 416:	f7 12                	not    DWORD PTR [rdx]

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	88 00                	mov    BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	12 00                	adc    al,BYTE PTR [rax]
	...
 446:	00 00                	add    BYTE PTR [rax],al
 448:	41 01 00             	add    DWORD PTR [r8],eax
 44b:	00 12                	add    BYTE PTR [rdx],dl
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 8a 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],cl
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 dd                	add    ch,bl
 479:	01 00                	add    DWORD PTR [rax],eax
 47b:	00 12                	add    BYTE PTR [rdx],dl
	...
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 48 02             	add    BYTE PTR [rax+0x2],cl
 492:	00 00                	add    BYTE PTR [rax],al
 494:	12 00                	adc    al,BYTE PTR [rax]
	...
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	c5 01 00             	(bad)
 4ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 90 00 00 00 12    	add    BYTE PTR [rax+0x12000000],dl
	...
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 01                	add    BYTE PTR [rcx],al
 4d9:	01 00                	add    DWORD PTR [rax],eax
 4db:	00 12                	add    BYTE PTR [rdx],dl
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 1d 00 00 00 20    	add    BYTE PTR [rip+0x20000000],bl        # 200004f5 <_end+0x1fec54ed>
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 92 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],dl
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 42 02             	add    BYTE PTR [rdx+0x2],al
 522:	00 00                	add    BYTE PTR [rax],al
 524:	12 00                	adc    al,BYTE PTR [rax]
	...
 536:	00 00                	add    BYTE PTR [rax],al
 538:	7d 02                	jge    53c <__abi_tag+0x178>
 53a:	00 00                	add    BYTE PTR [rax],al
 53c:	12 00                	adc    al,BYTE PTR [rax]
	...
 54e:	00 00                	add    BYTE PTR [rax],al
 550:	75 02                	jne    554 <__abi_tag+0x190>
 552:	00 00                	add    BYTE PTR [rax],al
 554:	12 00                	adc    al,BYTE PTR [rax]
	...
 566:	00 00                	add    BYTE PTR [rax],al
 568:	7b 00                	jnp    56a <__abi_tag+0x1a6>
 56a:	00 00                	add    BYTE PTR [rax],al
 56c:	12 00                	adc    al,BYTE PTR [rax]
	...
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	b0 01                	mov    al,0x1
 582:	00 00                	add    BYTE PTR [rax],al
 584:	12 00                	adc    al,BYTE PTR [rax]
	...
 596:	00 00                	add    BYTE PTR [rax],al
 598:	24 01                	and    al,0x1
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	eb 01                	jmp    5b3 <__abi_tag+0x1ef>
 5b2:	00 00                	add    BYTE PTR [rax],al
 5b4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5c6:	00 00                	add    BYTE PTR [rax],al
 5c8:	3a 01                	cmp    al,BYTE PTR [rcx]
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	aa                   	stos   BYTE PTR es:[rdi],al
 5e1:	01 00                	add    DWORD PTR [rax],eax
 5e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5f5:	00 00                	add    BYTE PTR [rax],al
 5f7:	00 51 02             	add    BYTE PTR [rcx+0x2],dl
 5fa:	00 00                	add    BYTE PTR [rax],al
 5fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 60e:	00 00                	add    BYTE PTR [rax],al
 610:	50                   	push   rax
 611:	00 00                	add    BYTE PTR [rax],al
 613:	00 12                	add    BYTE PTR [rdx],dl
	...
 625:	00 00                	add    BYTE PTR [rax],al
 627:	00 93 02 00 00 12    	add    BYTE PTR [rbx+0x12000002],dl
	...
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 642:	00 00                	add    BYTE PTR [rax],al
 644:	12 00                	adc    al,BYTE PTR [rax]
	...
 656:	00 00                	add    BYTE PTR [rax],al
 658:	a3 00 00 00 12 00 00 	movabs ds:0x12000000,eax
 65f:	00 00 
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 01                	add    BYTE PTR [rcx],al
 671:	00 00                	add    BYTE PTR [rax],al
 673:	00 20                	add    BYTE PTR [rax],ah
	...
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 02                	add    BYTE PTR [rdx],al
 689:	02 00                	add    al,BYTE PTR [rax]
 68b:	00 12                	add    BYTE PTR [rdx],dl
	...
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
 6a2:	00 00                	add    BYTE PTR [rax],al
 6a4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6b6:	00 00                	add    BYTE PTR [rax],al
 6b8:	76 00                	jbe    6ba <__abi_tag+0x2f6>
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	19 02                	sbb    DWORD PTR [rdx],eax
 6d2:	00 00                	add    BYTE PTR [rax],al
 6d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	2c 00                	sub    al,0x0
 6ea:	00 00                	add    BYTE PTR [rax],al
 6ec:	20 00                	and    BYTE PTR [rax],al
	...
 6fe:	00 00                	add    BYTE PTR [rax],al
 700:	59                   	pop    rcx
 701:	02 00                	add    al,BYTE PTR [rax]
 703:	00 12                	add    BYTE PTR [rdx],dl
	...
 715:	00 00                	add    BYTE PTR [rax],al
 717:	00 2f                	add    BYTE PTR [rdi],ch
 719:	02 00                	add    al,BYTE PTR [rax]
 71b:	00 12                	add    BYTE PTR [rdx],dl
	...
 72d:	00 00                	add    BYTE PTR [rax],al
 72f:	00 1e                	add    BYTE PTR [rsi],bl
 731:	01 00                	add    DWORD PTR [rax],eax
 733:	00 12                	add    BYTE PTR [rdx],dl
	...
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 18                	add    BYTE PTR [rax],bl
 749:	01 00                	add    DWORD PTR [rax],eax
 74b:	00 12                	add    BYTE PTR [rdx],dl
	...
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	00 20                	add    BYTE PTR [rax],ah
 761:	02 00                	add    al,BYTE PTR [rax]
 763:	00 12                	add    BYTE PTR [rdx],dl
	...
 775:	00 00                	add    BYTE PTR [rax],al
 777:	00 d5                	add    ch,dl
 779:	00 00                	add    BYTE PTR [rax],al
 77b:	00 12                	add    BYTE PTR [rdx],dl
	...
 78d:	00 00                	add    BYTE PTR [rax],al
 78f:	00 fb                	add    bl,bh
 791:	01 00                	add    DWORD PTR [rax],eax
 793:	00 12                	add    BYTE PTR [rdx],dl
	...
 7a5:	00 00                	add    BYTE PTR [rax],al
 7a7:	00 67 02             	add    BYTE PTR [rdi+0x2],ah
 7aa:	00 00                	add    BYTE PTR [rax],al
 7ac:	12 00                	adc    al,BYTE PTR [rax]
	...
 7be:	00 00                	add    BYTE PTR [rax],al
 7c0:	91                   	xchg   ecx,eax
 7c1:	01 00                	add    DWORD PTR [rax],eax
 7c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 d6                	add    dh,dl
 7d9:	01 00                	add    DWORD PTR [rax],eax
 7db:	00 12                	add    BYTE PTR [rdx],dl
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 ae 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],ch
	...
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 a5 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],ah
	...
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 68 01             	add    BYTE PTR [rax+0x1],ch
 822:	00 00                	add    BYTE PTR [rax],al
 824:	12 00                	adc    al,BYTE PTR [rax]
	...
 836:	00 00                	add    BYTE PTR [rax],al
 838:	9e                   	sahf   
 839:	01 00                	add    DWORD PTR [rax],eax
 83b:	00 12                	add    BYTE PTR [rdx],dl
	...
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 29                	add    BYTE PTR [rcx],ch
 851:	01 00                	add    DWORD PTR [rax],eax
 853:	00 12                	add    BYTE PTR [rdx],dl
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 e0                	add    al,ah
 869:	00 00                	add    BYTE PTR [rax],al
 86b:	00 12                	add    BYTE PTR [rdx],dl
	...
 87d:	00 00                	add    BYTE PTR [rax],al
 87f:	00 bd 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bh
	...
 895:	00 00                	add    BYTE PTR [rax],al
 897:	00 97 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],dl
	...
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 eb                	add    bl,ch
 8b1:	00 00                	add    BYTE PTR [rax],al
 8b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 82 02 00 00 12    	add    BYTE PTR [rdx+0x12000002],al
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 82 01 00 00 12    	add    BYTE PTR [rdx+0x12000001],al
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 f9                	add    cl,bh
 8f9:	00 00                	add    BYTE PTR [rax],al
 8fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 be 01 00 00 12    	add    BYTE PTR [rsi+0x12000001],bh
	...
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 cf                	add    bh,cl
 929:	01 00                	add    DWORD PTR [rax],eax
 92b:	00 12                	add    BYTE PTR [rdx],dl
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 cb                	add    bl,cl
 941:	00 00                	add    BYTE PTR [rax],al
 943:	00 12                	add    BYTE PTR [rdx],dl
	...
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 95a:	00 00                	add    BYTE PTR [rax],al
 95c:	12 00                	adc    al,BYTE PTR [rax]
	...
 96e:	00 00                	add    BYTE PTR [rax],al
 970:	b7 01                	mov    bh,0x1
 972:	00 00                	add    BYTE PTR [rax],al
 974:	12 00                	adc    al,BYTE PTR [rax]
	...
 986:	00 00                	add    BYTE PTR [rax],al
 988:	11 02                	adc    DWORD PTR [rdx],eax
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	12 00                	adc    al,BYTE PTR [rax]
	...
 99e:	00 00                	add    BYTE PTR [rax],al
 9a0:	4e 01 00             	rex.WRX add QWORD PTR [rax],r8
 9a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 37                	add    BYTE PTR [rdi],dh
 9b9:	02 00                	add    al,BYTE PTR [rax]
 9bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 9cd:	00 00                	add    BYTE PTR [rax],al
 9cf:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 9d2:	00 00                	add    BYTE PTR [rax],al
 9d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	3c 02                	cmp    al,0x2
 9ea:	00 00                	add    BYTE PTR [rax],al
 9ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 9fe:	00 00                	add    BYTE PTR [rax],al
 a00:	60                   	(bad)  
 a01:	02 00                	add    al,BYTE PTR [rax]
 a03:	00 12                	add    BYTE PTR [rdx],dl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 89 01 00 00 12    	add    BYTE PTR [rcx+0x12000001],cl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 30                	add    BYTE PTR [rax],dh
 a31:	01 00                	add    DWORD PTR [rax],eax
 a33:	00 12                	add    BYTE PTR [rdx],dl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 26                	add    BYTE PTR [rsi],ah
 a49:	02 00                	add    al,BYTE PTR [rax]
 a4b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 70 01             	add    BYTE PTR [rax+0x1],dh
 a62:	00 00                	add    BYTE PTR [rax],al
 a64:	12 00                	adc    al,BYTE PTR [rax]
	...
 a76:	00 00                	add    BYTE PTR [rax],al
 a78:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 a79:	02 00                	add    al,BYTE PTR [rax]
 a7b:	00 12                	add    BYTE PTR [rdx],dl
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 96 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],dl
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 35 01 00 00 12    	add    BYTE PTR [rip+0x12000001],dh        # 12000aae <_end+0x11ec5aa6>
	...
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 09                	add    BYTE PTR [rcx],cl
 ac1:	01 00                	add    DWORD PTR [rax],eax
 ac3:	00 22                	add    BYTE PTR [rdx],ah
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 f3                	add    bl,dh
 ad9:	01 00                	add    DWORD PTR [rax],eax
 adb:	00 12                	add    BYTE PTR [rdx],dl
 add:	00 10                	add    BYTE PTR [rax],dl
 adf:	00 89 94 00 00 00    	add    BYTE PTR [rcx+0x94],cl
 ae5:	00 00                	add    BYTE PTR [rax],al
 ae7:	00 3a                	add    BYTE PTR [rdx],bh
 ae9:	01 00                	add    DWORD PTR [rax],eax
 aeb:	00 00                	add    BYTE PTR [rax],al
 aed:	00 00                	add    BYTE PTR [rax],al
 aef:	00 e4                	add    ah,ah
 af1:	01 00                	add    DWORD PTR [rax],eax
 af3:	00 11                	add    BYTE PTR [rcx],dl
 af5:	00 1b                	add    BYTE PTR [rbx],bl
 af7:	00 60 10             	add    BYTE PTR [rax+0x10],ah
 afa:	01 00                	add    DWORD PTR [rax],eax
 afc:	00 00                	add    BYTE PTR [rax],al
 afe:	00 00                	add    BYTE PTR [rax],al
 b00:	08 00                	or     BYTE PTR [rax],al
 b02:	00 00                	add    BYTE PTR [rax],al
 b04:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b08 <.dynstr>:
 b08:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b0b:	54                   	push   rsp
 b0c:	4d 5f                	rex.WRB pop r15
 b0e:	64 65 72 65          	fs gs jb b77 <__abi_tag+0x7b3>
 b12:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b19:	4d 
 b1a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b1e:	65 54                	gs push rsp
 b20:	61                   	(bad)  
 b21:	62                   	(bad)  
 b22:	6c                   	ins    BYTE PTR es:[rdi],dx
 b23:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b27:	67 6d                	ins    DWORD PTR es:[edi],dx
 b29:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b2a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b2b:	5f                   	pop    rdi
 b2c:	73 74                	jae    ba2 <__abi_tag+0x7de>
 b2e:	61                   	(bad)  
 b2f:	72 74                	jb     ba5 <__abi_tag+0x7e1>
 b31:	5f                   	pop    rdi
 b32:	5f                   	pop    rdi
 b33:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b36:	54                   	push   rsp
 b37:	4d 5f                	rex.WRB pop r15
 b39:	72 65                	jb     ba0 <__abi_tag+0x7dc>
 b3b:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b42:	4d 
 b43:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b46:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b47:	65 54                	gs push rsp
 b49:	61                   	(bad)  
 b4a:	62                   	(bad)  
 b4b:	6c                   	ins    BYTE PTR es:[rdi],dx
 b4c:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 b50:	61                   	(bad)  
 b51:	70 5f                	jo     bb2 <__abi_tag+0x7ee>
 b53:	6c                   	ins    BYTE PTR es:[rdi],dx
 b54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b56:	70 00                	jo     b58 <__abi_tag+0x794>
 b58:	70 63                	jo     bbd <__abi_tag+0x7f9>
 b5a:	61                   	(bad)  
 b5b:	70 5f                	jo     bbc <__abi_tag+0x7f8>
 b5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b5e:	70 65                	jo     bc5 <__abi_tag+0x801>
 b60:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b61:	5f                   	pop    rdi
 b62:	6c                   	ins    BYTE PTR es:[rdi],dx
 b63:	69 76 65 00 73 71 6c 	imul   esi,DWORD PTR [rsi+0x65],0x6c717300
 b6a:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 b71:	72 
 b72:	6d                   	ins    DWORD PTR es:[rdi],dx
 b73:	73 67                	jae    bdc <__abi_tag+0x818>
 b75:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 b78:	6c                   	ins    BYTE PTR es:[rdi],dx
 b79:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 b80:	65 
 b81:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 b85:	6c                   	ins    BYTE PTR es:[rdi],dx
 b86:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 b8d:	65 
 b8e:	63 00                	movsxd eax,DWORD PTR [rax]
 b90:	73 71                	jae    c03 <__abi_tag+0x83f>
 b92:	6c                   	ins    BYTE PTR es:[rdi],dx
 b93:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 b9a:	6f 
 b9b:	73 65                	jae    c02 <__abi_tag+0x83e>
 b9d:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 ba0:	6c                   	ins    BYTE PTR es:[rdi],dx
 ba1:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 ba8:	65 
 ba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 baa:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 bae:	5f                   	pop    rdi
 baf:	73 65                	jae    c16 <__abi_tag+0x852>
 bb1:	74 74                	je     c27 <__abi_tag+0x863>
 bb3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bb4:	70 00                	jo     bb6 <__abi_tag+0x7f2>
 bb6:	6c                   	ins    BYTE PTR es:[rdi],dx
 bb7:	75 61                	jne    c1a <__abi_tag+0x856>
 bb9:	4c 5f                	rex.WR pop rdi
 bbb:	6c                   	ins    BYTE PTR es:[rdi],dx
 bbc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bbd:	61                   	(bad)  
 bbe:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 bc5:	6c 
 bc6:	75 61                	jne    c29 <__abi_tag+0x865>
 bc8:	4c 5f                	rex.WR pop rdi
 bca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bcb:	65 77 73             	gs ja  c41 <__abi_tag+0x87d>
 bce:	74 61                	je     c31 <__abi_tag+0x86d>
 bd0:	74 65                	je     c37 <__abi_tag+0x873>
 bd2:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 bd6:	5f                   	pop    rdi
 bd7:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 bdb:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 be0:	5f                   	pop    rdi
 be1:	70 63                	jo     c46 <__abi_tag+0x882>
 be3:	61                   	(bad)  
 be4:	6c                   	ins    BYTE PTR es:[rdi],dx
 be5:	6c                   	ins    BYTE PTR es:[rdi],dx
 be6:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 be9:	75 61                	jne    c4c <__abi_tag+0x888>
 beb:	5f                   	pop    rdi
 bec:	67 65 74 74          	addr32 gs je c64 <__abi_tag+0x8a0>
 bf0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bf1:	70 00                	jo     bf3 <__abi_tag+0x82f>
 bf3:	6c                   	ins    BYTE PTR es:[rdi],dx
 bf4:	75 61                	jne    c57 <__abi_tag+0x893>
 bf6:	4c 5f                	rex.WR pop rdi
 bf8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bf9:	70 65                	jo     c60 <__abi_tag+0x89c>
 bfb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bfc:	6c                   	ins    BYTE PTR es:[rdi],dx
 bfd:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 c04:	6c                   	ins    BYTE PTR es:[rdi],dx
 c05:	69 6e 65 00 73 74 72 	imul   ebp,DWORD PTR [rsi+0x65],0x72747300
 c0c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c0d:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 c10:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 c13:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 c16:	5f                   	pop    rdi
 c17:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 c1d:	7a 65                	jp     c84 <__abi_tag+0x8c0>
 c1f:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 c22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c23:	68 6c 00 6e 74       	push   0x746e006c
 c28:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c29:	68 73 00 72 65       	push   0x65720073
 c2e:	61                   	(bad)  
 c2f:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 c33:	72 63                	jb     c98 <__abi_tag+0x8d4>
 c35:	68 72 00 6c 6f       	push   0x6f6c0072
 c3a:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 c3d:	74 69                	je     ca8 <__abi_tag+0x8e4>
 c3f:	6d                   	ins    DWORD PTR es:[rdi],dx
 c40:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 c44:	6c                   	ins    BYTE PTR es:[rdi],dx
 c45:	6c                   	ins    BYTE PTR es:[rdi],dx
 c46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c47:	63 00                	movsxd eax,DWORD PTR [rax]
 c49:	70 74                	jo     cbf <__abi_tag+0x8fb>
 c4b:	68 72 65 61 64       	push   0x64616572
 c50:	5f                   	pop    rdi
 c51:	6a 6f                	push   0x6f
 c53:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 c5a:	73 70                	jae    ccc <__abi_tag+0x908>
 c5c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c5d:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 c60:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 c63:	72 61                	jb     cc6 <__abi_tag+0x902>
 c65:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 c68:	73 79                	jae    ce3 <__abi_tag+0x91f>
 c6a:	6d                   	ins    DWORD PTR es:[rdi],dx
 c6b:	62                   	(bad)  
 c6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c6d:	6c                   	ins    BYTE PTR es:[rdi],dx
 c6e:	73 00                	jae    c70 <__abi_tag+0x8ac>
 c70:	72 65                	jb     cd7 <__abi_tag+0x913>
 c72:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 c76:	70 00                	jo     c78 <__abi_tag+0x8b4>
 c78:	5f                   	pop    rdi
 c79:	5f                   	pop    rdi
 c7a:	6c                   	ins    BYTE PTR es:[rdi],dx
 c7b:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 c82:	72 74                	jb     cf8 <__abi_tag+0x934>
 c84:	5f                   	pop    rdi
 c85:	6d                   	ins    DWORD PTR es:[rdi],dx
 c86:	61                   	(bad)  
 c87:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 c8e:	6d                   	ins    DWORD PTR es:[rdi],dx
 c8f:	70 00                	jo     c91 <__abi_tag+0x8cd>
 c91:	66 70 72             	data16 jo d06 <__abi_tag+0x942>
 c94:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 c9b:	75 74                	jne    d11 <__abi_tag+0x94d>
 c9d:	73 00                	jae    c9f <__abi_tag+0x8db>
 c9f:	73 6f                	jae    d10 <__abi_tag+0x94c>
 ca1:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 ca4:	74 00                	je     ca6 <__abi_tag+0x8e2>
 ca6:	73 69                	jae    d11 <__abi_tag+0x94d>
 ca8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 caa:	61                   	(bad)  
 cab:	6c                   	ins    BYTE PTR es:[rdi],dx
 cac:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 caf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cb0:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 cb6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 cb7:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 cba:	74 6f                	je     d2b <__abi_tag+0x967>
 cbc:	70 74                	jo     d32 <__abi_tag+0x96e>
 cbe:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 cc1:	6c                   	ins    BYTE PTR es:[rdi],dx
 cc2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cc3:	73 65                	jae    d2a <__abi_tag+0x966>
 cc5:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cc8:	72 63                	jb     d2d <__abi_tag+0x969>
 cca:	70 79                	jo     d45 <__abi_tag+0x981>
 ccc:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 ccf:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 cd2:	72 61                	jb     d35 <__abi_tag+0x971>
 cd4:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 cd7:	73 74                	jae    d4d <__abi_tag+0x989>
 cd9:	72 74                	jb     d4f <__abi_tag+0x98b>
 cdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cdc:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 cdf:	74 72                	je     d53 <__abi_tag+0x98f>
 ce1:	74 6f                	je     d52 <__abi_tag+0x98e>
 ce3:	6c                   	ins    BYTE PTR es:[rdi],dx
 ce4:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 ce7:	6d                   	ins    DWORD PTR es:[rdi],dx
 ce8:	73 65                	jae    d4f <__abi_tag+0x98b>
 cea:	74 00                	je     cec <__abi_tag+0x928>
 cec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ced:	70 74                	jo     d63 <__abi_tag+0x99f>
 cef:	61                   	(bad)  
 cf0:	72 67                	jb     d59 <__abi_tag+0x995>
 cf2:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cf5:	72 6e                	jb     d65 <__abi_tag+0x9a1>
 cf7:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 cfa:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 cfd:	64 69 67 69 74 00 73 	imul   esp,DWORD PTR fs:[rdi+0x69],0x74730074
 d04:	74 
 d05:	72 73                	jb     d7a <__abi_tag+0x9b6>
 d07:	74 72                	je     d7b <__abi_tag+0x9b7>
 d09:	00 70 74             	add    BYTE PTR [rax+0x74],dh
 d0c:	68 72 65 61 64       	push   0x64616572
 d11:	5f                   	pop    rdi
 d12:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 d15:	61                   	(bad)  
 d16:	74 65                	je     d7d <__abi_tag+0x9b9>
 d18:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d1b:	72 6e                	jb     d8b <__abi_tag+0x9c7>
 d1d:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 d20:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d23:	72 6c                	jb     d91 <__abi_tag+0x9cd>
 d25:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 d27:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 d2a:	65 65 70 00          	gs gs jo d2e <__abi_tag+0x96a>
 d2e:	67 65 74 64          	addr32 gs je d96 <__abi_tag+0x9d2>
 d32:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 d34:	69 6d 00 73 70 72 69 	imul   ebp,DWORD PTR [rbp+0x0],0x69727073
 d3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d3c:	74 66                	je     da4 <__abi_tag+0x9e0>
 d3e:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 d41:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d42:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 d46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d48:	6c                   	ins    BYTE PTR es:[rdi],dx
 d49:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 d4c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d4d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d4e:	73 00                	jae    d50 <__abi_tag+0x98c>
 d50:	73 6e                	jae    dc0 <__abi_tag+0x9fc>
 d52:	70 72                	jo     dc6 <__abi_tag+0xa02>
 d54:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 d5b:	67 65 78 65          	addr32 gs js dc4 <__abi_tag+0xa00>
 d5f:	63 00                	movsxd eax,DWORD PTR [rax]
 d61:	6c                   	ins    BYTE PTR es:[rdi],dx
 d62:	69 73 74 65 6e 00 70 	imul   esi,DWORD PTR [rbx+0x74],0x70006e65
 d69:	65 72 72             	gs jb  dde <__abi_tag+0xa1a>
 d6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d6d:	72 00                	jb     d6f <__abi_tag+0x9ab>
 d6f:	73 74                	jae    de5 <__abi_tag+0xa21>
 d71:	72 63                	jb     dd6 <__abi_tag+0xa12>
 d73:	61                   	(bad)  
 d74:	74 00                	je     d76 <__abi_tag+0x9b2>
 d76:	61                   	(bad)  
 d77:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 d7a:	70 74                	jo     df0 <__abi_tag+0xa2c>
 d7c:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 d7f:	74 63                	je     de4 <__abi_tag+0xa20>
 d81:	68 61 72 00 65       	push   0x65007261
 d86:	78 69                	js     df1 <__abi_tag+0xa2d>
 d88:	74 00                	je     d8a <__abi_tag+0x9c6>
 d8a:	5f                   	pop    rdi
 d8b:	5f                   	pop    rdi
 d8c:	73 74                	jae    e02 <__abi_tag+0xa3e>
 d8e:	61                   	(bad)  
 d8f:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 d92:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 d95:	5f                   	pop    rdi
 d96:	66 61                	data16 (bad) 
 d98:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 d9f:	6f 
 da0:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 da3:	70 74                	jo     e19 <__abi_tag+0xa55>
 da5:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 da9:	70 63                	jo     e0e <__abi_tag+0xa4a>
 dab:	61                   	(bad)  
 dac:	70 2e                	jo     ddc <__abi_tag+0xa18>
 dae:	73 6f                	jae    e1f <__abi_tag+0xa5b>
 db0:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 db3:	38 00                	cmp    BYTE PTR [rax],al
 db5:	6c                   	ins    BYTE PTR es:[rdi],dx
 db6:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 dbd:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 dc0:	73 6f                	jae    e31 <__abi_tag+0xa6d>
 dc2:	2e 30 00             	cs xor BYTE PTR [rax],al
 dc5:	6c                   	ins    BYTE PTR es:[rdi],dx
 dc6:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 dcd:	33 2e                	xor    ebp,DWORD PTR [rsi]
 dcf:	73 6f                	jae    e40 <__abi_tag+0xa7c>
 dd1:	2e 30 00             	cs xor BYTE PTR [rax],al
 dd4:	6c                   	ins    BYTE PTR es:[rdi],dx
 dd5:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 ddc:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 de1:	5f                   	pop    rdi
 de2:	35 2e 33 00 47       	xor    eax,0x4700332e
 de7:	4c                   	rex.WR
 de8:	49                   	rex.WB
 de9:	42                   	rex.X
 dea:	43 5f                	rex.XB pop r15
 dec:	32 2e                	xor    ch,BYTE PTR [rsi]
 dee:	34 00                	xor    al,0x0
 df0:	47                   	rex.RXB
 df1:	4c                   	rex.WR
 df2:	49                   	rex.WB
 df3:	42                   	rex.X
 df4:	43 5f                	rex.XB pop r15
 df6:	32 2e                	xor    ch,BYTE PTR [rsi]
 df8:	33 2e                	xor    ebp,DWORD PTR [rsi]
 dfa:	34 00                	xor    al,0x0
 dfc:	47                   	rex.RXB
 dfd:	4c                   	rex.WR
 dfe:	49                   	rex.WB
 dff:	42                   	rex.X
 e00:	43 5f                	rex.XB pop r15
 e02:	32 2e                	xor    ch,BYTE PTR [rsi]
 e04:	32 2e                	xor    ch,BYTE PTR [rsi]
 e06:	35 00 47 4c 49       	xor    eax,0x494c4700
 e0b:	42                   	rex.X
 e0c:	43 5f                	rex.XB pop r15
 e0e:	32 2e                	xor    ch,BYTE PTR [rsi]
 e10:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]

Disassembly of section .gnu.version:

0000000000000e14 <.gnu.version>:
 e14:	00 00                	add    BYTE PTR [rax],al
 e16:	00 00                	add    BYTE PTR [rax],al
 e18:	02 00                	add    al,BYTE PTR [rax]
 e1a:	03 00                	add    eax,DWORD PTR [rax]
 e1c:	03 00                	add    eax,DWORD PTR [rax]
 e1e:	03 00                	add    eax,DWORD PTR [rax]
 e20:	03 00                	add    eax,DWORD PTR [rax]
 e22:	03 00                	add    eax,DWORD PTR [rax]
 e24:	03 00                	add    eax,DWORD PTR [rax]
 e26:	00 00                	add    BYTE PTR [rax],al
 e28:	03 00                	add    eax,DWORD PTR [rax]
 e2a:	03 00                	add    eax,DWORD PTR [rax]
 e2c:	03 00                	add    eax,DWORD PTR [rax]
 e2e:	03 00                	add    eax,DWORD PTR [rax]
 e30:	00 00                	add    BYTE PTR [rax],al
 e32:	03 00                	add    eax,DWORD PTR [rax]
 e34:	03 00                	add    eax,DWORD PTR [rax]
 e36:	03 00                	add    eax,DWORD PTR [rax]
 e38:	03 00                	add    eax,DWORD PTR [rax]
 e3a:	03 00                	add    eax,DWORD PTR [rax]
 e3c:	04 00                	add    al,0x0
 e3e:	00 00                	add    BYTE PTR [rax],al
 e40:	03 00                	add    eax,DWORD PTR [rax]
 e42:	00 00                	add    BYTE PTR [rax],al
 e44:	05 00 00 00 02       	add    eax,0x2000000
 e49:	00 03                	add    BYTE PTR [rbx],al
 e4b:	00 03                	add    BYTE PTR [rbx],al
 e4d:	00 03                	add    BYTE PTR [rbx],al
 e4f:	00 00                	add    BYTE PTR [rax],al
 e51:	00 03                	add    BYTE PTR [rbx],al
 e53:	00 03                	add    BYTE PTR [rbx],al
 e55:	00 03                	add    BYTE PTR [rbx],al
 e57:	00 03                	add    BYTE PTR [rbx],al
 e59:	00 03                	add    BYTE PTR [rbx],al
 e5b:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 3001161 <_end+0x2ec6159>
 e61:	00 03                	add    BYTE PTR [rbx],al
 e63:	00 03                	add    BYTE PTR [rbx],al
 e65:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 300116b <_end+0x2ec6163>
 e6b:	00 03                	add    BYTE PTR [rbx],al
 e6d:	00 03                	add    BYTE PTR [rbx],al
 e6f:	00 05 00 05 00 03    	add    BYTE PTR [rip+0x3000500],al        # 3001375 <_end+0x2ec636d>
 e75:	00 05 00 06 00 03    	add    BYTE PTR [rip+0x3000600],al        # 300147b <_end+0x2ec6473>
 e7b:	00 03                	add    BYTE PTR [rbx],al
 e7d:	00 03                	add    BYTE PTR [rbx],al
 e7f:	00 03                	add    BYTE PTR [rbx],al
 e81:	00 05 00 00 00 03    	add    BYTE PTR [rip+0x3000000],al        # 3000e87 <_end+0x2ec5e7f>
 e87:	00 03                	add    BYTE PTR [rbx],al
 e89:	00 03                	add    BYTE PTR [rbx],al
 e8b:	00 03                	add    BYTE PTR [rbx],al
 e8d:	00 00                	add    BYTE PTR [rax],al
 e8f:	00 03                	add    BYTE PTR [rbx],al
 e91:	00 03                	add    BYTE PTR [rbx],al
 e93:	00 03                	add    BYTE PTR [rbx],al
 e95:	00 03                	add    BYTE PTR [rbx],al
 e97:	00 03                	add    BYTE PTR [rbx],al
 e99:	00 02                	add    BYTE PTR [rdx],al
 e9b:	00 03                	add    BYTE PTR [rbx],al
 e9d:	00 00                	add    BYTE PTR [rax],al
 e9f:	00 03                	add    BYTE PTR [rbx],al
 ea1:	00 03                	add    BYTE PTR [rbx],al
 ea3:	00 01                	add    BYTE PTR [rcx],al
 ea5:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

0000000000000ea8 <.gnu.version_r>:
 ea8:	01 00                	add    DWORD PTR [rax],eax
 eaa:	01 00                	add    DWORD PTR [rax],eax
 eac:	bd 02 00 00 10       	mov    ebp,0x10000002
 eb1:	00 00                	add    BYTE PTR [rax],al
 eb3:	00 20                	add    BYTE PTR [rax],ah
 eb5:	00 00                	add    BYTE PTR [rax],al
 eb7:	00 43 28             	add    BYTE PTR [rbx+0x28],al
 eba:	97                   	xchg   edi,eax
 ebb:	01 00                	add    DWORD PTR [rax],eax
 ebd:	00 05 00 d6 02 00    	add    BYTE PTR [rip+0x2d600],al        # 2e4c3 <rules+0x1d1e3>
 ec3:	00 00                	add    BYTE PTR [rax],al
 ec5:	00 00                	add    BYTE PTR [rax],al
 ec7:	00 01                	add    BYTE PTR [rcx],al
 ec9:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 ecc:	cc                   	int3   
 ecd:	02 00                	add    al,BYTE PTR [rax]
 ecf:	00 10                	add    BYTE PTR [rax],dl
 ed1:	00 00                	add    BYTE PTR [rax],al
 ed3:	00 00                	add    BYTE PTR [rax],al
 ed5:	00 00                	add    BYTE PTR [rax],al
 ed7:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 eda:	69 0d 00 00 06 00 de 	imul   ecx,DWORD PTR [rip+0x60000],0x2de        # 60ee4 <rules+0x4fc04>
 ee1:	02 00 00 
 ee4:	10 00                	adc    BYTE PTR [rax],al
 ee6:	00 00                	add    BYTE PTR [rax],al
 ee8:	74 19                	je     f03 <__abi_tag+0xb3f>
 eea:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [rcx],0x40000
 ef0:	e8 02 00 00 10       	call   10000ef7 <_end+0xfec5eef>
 ef5:	00 00                	add    BYTE PTR [rax],al
 ef7:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 efa:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 f00:	f4                   	hlt    
 f01:	02 00                	add    al,BYTE PTR [rax]
 f03:	00 10                	add    BYTE PTR [rax],dl
 f05:	00 00                	add    BYTE PTR [rax],al
 f07:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 f0e:	02 00                	add    al,BYTE PTR [rax]
 f10:	00 03                	add    BYTE PTR [rbx],al
 f12:	00 00                	add    BYTE PTR [rax],al
 f14:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000f18 <.rela.dyn>:
     f18:	80 0b 01             	or     BYTE PTR [rbx],0x1
     f1b:	00 00                	add    BYTE PTR [rax],al
     f1d:	00 00                	add    BYTE PTR [rax],al
     f1f:	00 08                	add    BYTE PTR [rax],cl
     f21:	00 00                	add    BYTE PTR [rax],al
     f23:	00 00                	add    BYTE PTR [rax],al
     f25:	00 00                	add    BYTE PTR [rax],al
     f27:	00 60 29             	add    BYTE PTR [rax+0x29],ah
     f2a:	00 00                	add    BYTE PTR [rax],al
     f2c:	00 00                	add    BYTE PTR [rax],al
     f2e:	00 00                	add    BYTE PTR [rax],al
     f30:	88 0b                	mov    BYTE PTR [rbx],cl
     f32:	01 00                	add    DWORD PTR [rax],eax
     f34:	00 00                	add    BYTE PTR [rax],al
     f36:	00 00                	add    BYTE PTR [rax],al
     f38:	08 00                	or     BYTE PTR [rax],al
     f3a:	00 00                	add    BYTE PTR [rax],al
     f3c:	00 00                	add    BYTE PTR [rax],al
     f3e:	00 00                	add    BYTE PTR [rax],al
     f40:	20 29                	and    BYTE PTR [rcx],ch
     f42:	00 00                	add    BYTE PTR [rax],al
     f44:	00 00                	add    BYTE PTR [rax],al
     f46:	00 00                	add    BYTE PTR [rax],al
     f48:	08 10                	or     BYTE PTR [rax],dl
     f4a:	01 00                	add    DWORD PTR [rax],eax
     f4c:	00 00                	add    BYTE PTR [rax],al
     f4e:	00 00                	add    BYTE PTR [rax],al
     f50:	08 00                	or     BYTE PTR [rax],al
     f52:	00 00                	add    BYTE PTR [rax],al
     f54:	00 00                	add    BYTE PTR [rax],al
     f56:	00 00                	add    BYTE PTR [rax],al
     f58:	08 10                	or     BYTE PTR [rax],dl
     f5a:	01 00                	add    DWORD PTR [rax],eax
     f5c:	00 00                	add    BYTE PTR [rax],al
     f5e:	00 00                	add    BYTE PTR [rax],al
     f60:	28 10                	sub    BYTE PTR [rax],dl
     f62:	01 00                	add    DWORD PTR [rax],eax
     f64:	00 00                	add    BYTE PTR [rax],al
     f66:	00 00                	add    BYTE PTR [rax],al
     f68:	08 00                	or     BYTE PTR [rax],al
     f6a:	00 00                	add    BYTE PTR [rax],al
     f6c:	00 00                	add    BYTE PTR [rax],al
     f6e:	00 00                	add    BYTE PTR [rax],al
     f70:	04 c0                	add    al,0xc0
     f72:	00 00                	add    BYTE PTR [rax],al
     f74:	00 00                	add    BYTE PTR [rax],al
     f76:	00 00                	add    BYTE PTR [rax],al
     f78:	30 10                	xor    BYTE PTR [rax],dl
     f7a:	01 00                	add    DWORD PTR [rax],eax
     f7c:	00 00                	add    BYTE PTR [rax],al
     f7e:	00 00                	add    BYTE PTR [rax],al
     f80:	08 00                	or     BYTE PTR [rax],al
     f82:	00 00                	add    BYTE PTR [rax],al
     f84:	00 00                	add    BYTE PTR [rax],al
     f86:	00 00                	add    BYTE PTR [rax],al
     f88:	1a c0                	sbb    al,al
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	00 00                	add    BYTE PTR [rax],al
     f8e:	00 00                	add    BYTE PTR [rax],al
     f90:	38 10                	cmp    BYTE PTR [rax],dl
     f92:	01 00                	add    DWORD PTR [rax],eax
     f94:	00 00                	add    BYTE PTR [rax],al
     f96:	00 00                	add    BYTE PTR [rax],al
     f98:	08 00                	or     BYTE PTR [rax],al
     f9a:	00 00                	add    BYTE PTR [rax],al
     f9c:	00 00                	add    BYTE PTR [rax],al
     f9e:	00 00                	add    BYTE PTR [rax],al
     fa0:	34 c0                	xor    al,0xc0
     fa2:	00 00                	add    BYTE PTR [rax],al
     fa4:	00 00                	add    BYTE PTR [rax],al
     fa6:	00 00                	add    BYTE PTR [rax],al
     fa8:	d8 0f                	fmul   DWORD PTR [rdi]
     faa:	01 00                	add    DWORD PTR [rax],eax
     fac:	00 00                	add    BYTE PTR [rax],al
     fae:	00 00                	add    BYTE PTR [rax],al
     fb0:	06                   	(bad)  
     fb1:	00 00                	add    BYTE PTR [rax],al
     fb3:	00 09                	add    BYTE PTR [rcx],cl
	...
     fbd:	00 00                	add    BYTE PTR [rax],al
     fbf:	00 e0                	add    al,ah
     fc1:	0f 01 00             	sgdt   [rax]
     fc4:	00 00                	add    BYTE PTR [rax],al
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	06                   	(bad)  
     fc9:	00 00                	add    BYTE PTR [rax],al
     fcb:	00 19                	add    BYTE PTR [rcx],bl
	...
     fd5:	00 00                	add    BYTE PTR [rax],al
     fd7:	00 e8                	add    al,ch
     fd9:	0f 01 00             	sgdt   [rax]
     fdc:	00 00                	add    BYTE PTR [rax],al
     fde:	00 00                	add    BYTE PTR [rax],al
     fe0:	06                   	(bad)  
     fe1:	00 00                	add    BYTE PTR [rax],al
     fe3:	00 1e                	add    BYTE PTR [rsi],bl
	...
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	00 f0                	add    al,dh
     ff1:	0f 01 00             	sgdt   [rax]
     ff4:	00 00                	add    BYTE PTR [rax],al
     ff6:	00 00                	add    BYTE PTR [rax],al
     ff8:	06                   	(bad)  
     ff9:	00 00                	add    BYTE PTR [rax],al
     ffb:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	f8                   	clc    
    1009:	0f 01 00             	sgdt   [rax]
    100c:	00 00                	add    BYTE PTR [rax],al
    100e:	00 00                	add    BYTE PTR [rax],al
    1010:	06                   	(bad)  
    1011:	00 00                	add    BYTE PTR [rax],al
    1013:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    101e:	00 00                	add    BYTE PTR [rax],al
    1020:	60                   	(bad)  
    1021:	10 01                	adc    BYTE PTR [rcx],al
    1023:	00 00                	add    BYTE PTR [rax],al
    1025:	00 00                	add    BYTE PTR [rax],al
    1027:	00 05 00 00 00 49    	add    BYTE PTR [rip+0x49000000],al        # 4900102d <_end+0x48ec6025>
	...

Disassembly of section .rela.plt:

0000000000001038 <.rela.plt>:
    1038:	c8 0d 01 00          	enter  0x10d,0x0
    103c:	00 00                	add    BYTE PTR [rax],al
    103e:	00 00                	add    BYTE PTR [rax],al
    1040:	07                   	(bad)  
    1041:	00 00                	add    BYTE PTR [rax],al
    1043:	00 01                	add    BYTE PTR [rcx],al
	...
    104d:	00 00                	add    BYTE PTR [rax],al
    104f:	00 d0                	add    al,dl
    1051:	0d 01 00 00 00       	or     eax,0x1
    1056:	00 00                	add    BYTE PTR [rax],al
    1058:	07                   	(bad)  
    1059:	00 00                	add    BYTE PTR [rax],al
    105b:	00 02                	add    BYTE PTR [rdx],al
	...
    1065:	00 00                	add    BYTE PTR [rax],al
    1067:	00 d8                	add    al,bl
    1069:	0d 01 00 00 00       	or     eax,0x1
    106e:	00 00                	add    BYTE PTR [rax],al
    1070:	07                   	(bad)  
    1071:	00 00                	add    BYTE PTR [rax],al
    1073:	00 03                	add    BYTE PTR [rbx],al
	...
    107d:	00 00                	add    BYTE PTR [rax],al
    107f:	00 e0                	add    al,ah
    1081:	0d 01 00 00 00       	or     eax,0x1
    1086:	00 00                	add    BYTE PTR [rax],al
    1088:	07                   	(bad)  
    1089:	00 00                	add    BYTE PTR [rax],al
    108b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    1096:	00 00                	add    BYTE PTR [rax],al
    1098:	e8 0d 01 00 00       	call   11aa <__abi_tag+0xde6>
    109d:	00 00                	add    BYTE PTR [rax],al
    109f:	00 07                	add    BYTE PTR [rdi],al
    10a1:	00 00                	add    BYTE PTR [rax],al
    10a3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10a9 <__abi_tag+0xce5>
    10a9:	00 00                	add    BYTE PTR [rax],al
    10ab:	00 00                	add    BYTE PTR [rax],al
    10ad:	00 00                	add    BYTE PTR [rax],al
    10af:	00 f0                	add    al,dh
    10b1:	0d 01 00 00 00       	or     eax,0x1
    10b6:	00 00                	add    BYTE PTR [rax],al
    10b8:	07                   	(bad)  
    10b9:	00 00                	add    BYTE PTR [rax],al
    10bb:	00 06                	add    BYTE PTR [rsi],al
	...
    10c5:	00 00                	add    BYTE PTR [rax],al
    10c7:	00 f8                	add    al,bh
    10c9:	0d 01 00 00 00       	or     eax,0x1
    10ce:	00 00                	add    BYTE PTR [rax],al
    10d0:	07                   	(bad)  
    10d1:	00 00                	add    BYTE PTR [rax],al
    10d3:	00 07                	add    BYTE PTR [rdi],al
	...
    10e1:	0e                   	(bad)  
    10e2:	01 00                	add    DWORD PTR [rax],eax
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	00 00                	add    BYTE PTR [rax],al
    10e8:	07                   	(bad)  
    10e9:	00 00                	add    BYTE PTR [rax],al
    10eb:	00 08                	add    BYTE PTR [rax],cl
	...
    10f5:	00 00                	add    BYTE PTR [rax],al
    10f7:	00 08                	add    BYTE PTR [rax],cl
    10f9:	0e                   	(bad)  
    10fa:	01 00                	add    DWORD PTR [rax],eax
    10fc:	00 00                	add    BYTE PTR [rax],al
    10fe:	00 00                	add    BYTE PTR [rax],al
    1100:	07                   	(bad)  
    1101:	00 00                	add    BYTE PTR [rax],al
    1103:	00 0a                	add    BYTE PTR [rdx],cl
	...
    110d:	00 00                	add    BYTE PTR [rax],al
    110f:	00 10                	add    BYTE PTR [rax],dl
    1111:	0e                   	(bad)  
    1112:	01 00                	add    DWORD PTR [rax],eax
    1114:	00 00                	add    BYTE PTR [rax],al
    1116:	00 00                	add    BYTE PTR [rax],al
    1118:	07                   	(bad)  
    1119:	00 00                	add    BYTE PTR [rax],al
    111b:	00 0b                	add    BYTE PTR [rbx],cl
	...
    1125:	00 00                	add    BYTE PTR [rax],al
    1127:	00 18                	add    BYTE PTR [rax],bl
    1129:	0e                   	(bad)  
    112a:	01 00                	add    DWORD PTR [rax],eax
    112c:	00 00                	add    BYTE PTR [rax],al
    112e:	00 00                	add    BYTE PTR [rax],al
    1130:	07                   	(bad)  
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	20 0e                	and    BYTE PTR [rsi],cl
    1142:	01 00                	add    DWORD PTR [rax],eax
    1144:	00 00                	add    BYTE PTR [rax],al
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	07                   	(bad)  
    1149:	00 00                	add    BYTE PTR [rax],al
    114b:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1151 <__abi_tag+0xd8d>
    1151:	00 00                	add    BYTE PTR [rax],al
    1153:	00 00                	add    BYTE PTR [rax],al
    1155:	00 00                	add    BYTE PTR [rax],al
    1157:	00 28                	add    BYTE PTR [rax],ch
    1159:	0e                   	(bad)  
    115a:	01 00                	add    DWORD PTR [rax],eax
    115c:	00 00                	add    BYTE PTR [rax],al
    115e:	00 00                	add    BYTE PTR [rax],al
    1160:	07                   	(bad)  
    1161:	00 00                	add    BYTE PTR [rax],al
    1163:	00 0e                	add    BYTE PTR [rsi],cl
	...
    116d:	00 00                	add    BYTE PTR [rax],al
    116f:	00 30                	add    BYTE PTR [rax],dh
    1171:	0e                   	(bad)  
    1172:	01 00                	add    DWORD PTR [rax],eax
    1174:	00 00                	add    BYTE PTR [rax],al
    1176:	00 00                	add    BYTE PTR [rax],al
    1178:	07                   	(bad)  
    1179:	00 00                	add    BYTE PTR [rax],al
    117b:	00 0f                	add    BYTE PTR [rdi],cl
	...
    1185:	00 00                	add    BYTE PTR [rax],al
    1187:	00 38                	add    BYTE PTR [rax],bh
    1189:	0e                   	(bad)  
    118a:	01 00                	add    DWORD PTR [rax],eax
    118c:	00 00                	add    BYTE PTR [rax],al
    118e:	00 00                	add    BYTE PTR [rax],al
    1190:	07                   	(bad)  
    1191:	00 00                	add    BYTE PTR [rax],al
    1193:	00 10                	add    BYTE PTR [rax],dl
	...
    119d:	00 00                	add    BYTE PTR [rax],al
    119f:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    11a2:	01 00                	add    DWORD PTR [rax],eax
    11a4:	00 00                	add    BYTE PTR [rax],al
    11a6:	00 00                	add    BYTE PTR [rax],al
    11a8:	07                   	(bad)  
    11a9:	00 00                	add    BYTE PTR [rax],al
    11ab:	00 11                	add    BYTE PTR [rcx],dl
	...
    11b5:	00 00                	add    BYTE PTR [rax],al
    11b7:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    11ba:	01 00                	add    DWORD PTR [rax],eax
    11bc:	00 00                	add    BYTE PTR [rax],al
    11be:	00 00                	add    BYTE PTR [rax],al
    11c0:	07                   	(bad)  
    11c1:	00 00                	add    BYTE PTR [rax],al
    11c3:	00 12                	add    BYTE PTR [rdx],dl
	...
    11cd:	00 00                	add    BYTE PTR [rax],al
    11cf:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    11d2:	01 00                	add    DWORD PTR [rax],eax
    11d4:	00 00                	add    BYTE PTR [rax],al
    11d6:	00 00                	add    BYTE PTR [rax],al
    11d8:	07                   	(bad)  
    11d9:	00 00                	add    BYTE PTR [rax],al
    11db:	00 13                	add    BYTE PTR [rbx],dl
	...
    11e5:	00 00                	add    BYTE PTR [rax],al
    11e7:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
    11ea:	01 00                	add    DWORD PTR [rax],eax
    11ec:	00 00                	add    BYTE PTR [rax],al
    11ee:	00 00                	add    BYTE PTR [rax],al
    11f0:	07                   	(bad)  
    11f1:	00 00                	add    BYTE PTR [rax],al
    11f3:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    11fe:	00 00                	add    BYTE PTR [rax],al
    1200:	60                   	(bad)  
    1201:	0e                   	(bad)  
    1202:	01 00                	add    DWORD PTR [rax],eax
    1204:	00 00                	add    BYTE PTR [rax],al
    1206:	00 00                	add    BYTE PTR [rax],al
    1208:	07                   	(bad)  
    1209:	00 00                	add    BYTE PTR [rax],al
    120b:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 1211 <__abi_tag+0xe4d>
    1211:	00 00                	add    BYTE PTR [rax],al
    1213:	00 00                	add    BYTE PTR [rax],al
    1215:	00 00                	add    BYTE PTR [rax],al
    1217:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    121a:	01 00                	add    DWORD PTR [rax],eax
    121c:	00 00                	add    BYTE PTR [rax],al
    121e:	00 00                	add    BYTE PTR [rax],al
    1220:	07                   	(bad)  
    1221:	00 00                	add    BYTE PTR [rax],al
    1223:	00 16                	add    BYTE PTR [rsi],dl
	...
    122d:	00 00                	add    BYTE PTR [rax],al
    122f:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
    1232:	01 00                	add    DWORD PTR [rax],eax
    1234:	00 00                	add    BYTE PTR [rax],al
    1236:	00 00                	add    BYTE PTR [rax],al
    1238:	07                   	(bad)  
    1239:	00 00                	add    BYTE PTR [rax],al
    123b:	00 17                	add    BYTE PTR [rdi],dl
	...
    1245:	00 00                	add    BYTE PTR [rax],al
    1247:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    124a:	01 00                	add    DWORD PTR [rax],eax
    124c:	00 00                	add    BYTE PTR [rax],al
    124e:	00 00                	add    BYTE PTR [rax],al
    1250:	07                   	(bad)  
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	00 18                	add    BYTE PTR [rax],bl
	...
    125d:	00 00                	add    BYTE PTR [rax],al
    125f:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    1265:	00 00                	add    BYTE PTR [rax],al
    1267:	00 07                	add    BYTE PTR [rdi],al
    1269:	00 00                	add    BYTE PTR [rax],al
    126b:	00 1a                	add    BYTE PTR [rdx],bl
	...
    1275:	00 00                	add    BYTE PTR [rax],al
    1277:	00 88 0e 01 00 00    	add    BYTE PTR [rax+0x10e],cl
    127d:	00 00                	add    BYTE PTR [rax],al
    127f:	00 07                	add    BYTE PTR [rdi],al
    1281:	00 00                	add    BYTE PTR [rax],al
    1283:	00 1b                	add    BYTE PTR [rbx],bl
	...
    128d:	00 00                	add    BYTE PTR [rax],al
    128f:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    1295:	00 00                	add    BYTE PTR [rax],al
    1297:	00 07                	add    BYTE PTR [rdi],al
    1299:	00 00                	add    BYTE PTR [rax],al
    129b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    12a6:	00 00                	add    BYTE PTR [rax],al
    12a8:	98                   	cwde   
    12a9:	0e                   	(bad)  
    12aa:	01 00                	add    DWORD PTR [rax],eax
    12ac:	00 00                	add    BYTE PTR [rax],al
    12ae:	00 00                	add    BYTE PTR [rax],al
    12b0:	07                   	(bad)  
    12b1:	00 00                	add    BYTE PTR [rax],al
    12b3:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 12b9 <__abi_tag+0xef5>
    12b9:	00 00                	add    BYTE PTR [rax],al
    12bb:	00 00                	add    BYTE PTR [rax],al
    12bd:	00 00                	add    BYTE PTR [rax],al
    12bf:	00 a0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ah
    12c5:	00 00                	add    BYTE PTR [rax],al
    12c7:	00 07                	add    BYTE PTR [rdi],al
    12c9:	00 00                	add    BYTE PTR [rax],al
    12cb:	00 1f                	add    BYTE PTR [rdi],bl
	...
    12d5:	00 00                	add    BYTE PTR [rax],al
    12d7:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    12dd:	00 00                	add    BYTE PTR [rax],al
    12df:	00 07                	add    BYTE PTR [rdi],al
    12e1:	00 00                	add    BYTE PTR [rax],al
    12e3:	00 20                	add    BYTE PTR [rax],ah
	...
    12ed:	00 00                	add    BYTE PTR [rax],al
    12ef:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    12f5:	00 00                	add    BYTE PTR [rax],al
    12f7:	00 07                	add    BYTE PTR [rdi],al
    12f9:	00 00                	add    BYTE PTR [rax],al
    12fb:	00 21                	add    BYTE PTR [rcx],ah
	...
    1305:	00 00                	add    BYTE PTR [rax],al
    1307:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    130d:	00 00                	add    BYTE PTR [rax],al
    130f:	00 07                	add    BYTE PTR [rdi],al
    1311:	00 00                	add    BYTE PTR [rax],al
    1313:	00 22                	add    BYTE PTR [rdx],ah
	...
    131d:	00 00                	add    BYTE PTR [rax],al
    131f:	00 c0                	add    al,al
    1321:	0e                   	(bad)  
    1322:	01 00                	add    DWORD PTR [rax],eax
    1324:	00 00                	add    BYTE PTR [rax],al
    1326:	00 00                	add    BYTE PTR [rax],al
    1328:	07                   	(bad)  
    1329:	00 00                	add    BYTE PTR [rax],al
    132b:	00 23                	add    BYTE PTR [rbx],ah
	...
    1335:	00 00                	add    BYTE PTR [rax],al
    1337:	00 c8                	add    al,cl
    1339:	0e                   	(bad)  
    133a:	01 00                	add    DWORD PTR [rax],eax
    133c:	00 00                	add    BYTE PTR [rax],al
    133e:	00 00                	add    BYTE PTR [rax],al
    1340:	07                   	(bad)  
    1341:	00 00                	add    BYTE PTR [rax],al
    1343:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    134e:	00 00                	add    BYTE PTR [rax],al
    1350:	d0 0e                	ror    BYTE PTR [rsi],1
    1352:	01 00                	add    DWORD PTR [rax],eax
    1354:	00 00                	add    BYTE PTR [rax],al
    1356:	00 00                	add    BYTE PTR [rax],al
    1358:	07                   	(bad)  
    1359:	00 00                	add    BYTE PTR [rax],al
    135b:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 1361 <__abi_tag+0xf9d>
    1361:	00 00                	add    BYTE PTR [rax],al
    1363:	00 00                	add    BYTE PTR [rax],al
    1365:	00 00                	add    BYTE PTR [rax],al
    1367:	00 d8                	add    al,bl
    1369:	0e                   	(bad)  
    136a:	01 00                	add    DWORD PTR [rax],eax
    136c:	00 00                	add    BYTE PTR [rax],al
    136e:	00 00                	add    BYTE PTR [rax],al
    1370:	07                   	(bad)  
    1371:	00 00                	add    BYTE PTR [rax],al
    1373:	00 26                	add    BYTE PTR [rsi],ah
	...
    137d:	00 00                	add    BYTE PTR [rax],al
    137f:	00 e0                	add    al,ah
    1381:	0e                   	(bad)  
    1382:	01 00                	add    DWORD PTR [rax],eax
    1384:	00 00                	add    BYTE PTR [rax],al
    1386:	00 00                	add    BYTE PTR [rax],al
    1388:	07                   	(bad)  
    1389:	00 00                	add    BYTE PTR [rax],al
    138b:	00 27                	add    BYTE PTR [rdi],ah
	...
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	00 e8                	add    al,ch
    1399:	0e                   	(bad)  
    139a:	01 00                	add    DWORD PTR [rax],eax
    139c:	00 00                	add    BYTE PTR [rax],al
    139e:	00 00                	add    BYTE PTR [rax],al
    13a0:	07                   	(bad)  
    13a1:	00 00                	add    BYTE PTR [rax],al
    13a3:	00 28                	add    BYTE PTR [rax],ch
	...
    13ad:	00 00                	add    BYTE PTR [rax],al
    13af:	00 f0                	add    al,dh
    13b1:	0e                   	(bad)  
    13b2:	01 00                	add    DWORD PTR [rax],eax
    13b4:	00 00                	add    BYTE PTR [rax],al
    13b6:	00 00                	add    BYTE PTR [rax],al
    13b8:	07                   	(bad)  
    13b9:	00 00                	add    BYTE PTR [rax],al
    13bb:	00 29                	add    BYTE PTR [rcx],ch
	...
    13c5:	00 00                	add    BYTE PTR [rax],al
    13c7:	00 f8                	add    al,bh
    13c9:	0e                   	(bad)  
    13ca:	01 00                	add    DWORD PTR [rax],eax
    13cc:	00 00                	add    BYTE PTR [rax],al
    13ce:	00 00                	add    BYTE PTR [rax],al
    13d0:	07                   	(bad)  
    13d1:	00 00                	add    BYTE PTR [rax],al
    13d3:	00 2a                	add    BYTE PTR [rdx],ch
	...
    13e1:	0f 01 00             	sgdt   [rax]
    13e4:	00 00                	add    BYTE PTR [rax],al
    13e6:	00 00                	add    BYTE PTR [rax],al
    13e8:	07                   	(bad)  
    13e9:	00 00                	add    BYTE PTR [rax],al
    13eb:	00 2b                	add    BYTE PTR [rbx],ch
	...
    13f5:	00 00                	add    BYTE PTR [rax],al
    13f7:	00 08                	add    BYTE PTR [rax],cl
    13f9:	0f 01 00             	sgdt   [rax]
    13fc:	00 00                	add    BYTE PTR [rax],al
    13fe:	00 00                	add    BYTE PTR [rax],al
    1400:	07                   	(bad)  
    1401:	00 00                	add    BYTE PTR [rax],al
    1403:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    140e:	00 00                	add    BYTE PTR [rax],al
    1410:	10 0f                	adc    BYTE PTR [rdi],cl
    1412:	01 00                	add    DWORD PTR [rax],eax
    1414:	00 00                	add    BYTE PTR [rax],al
    1416:	00 00                	add    BYTE PTR [rax],al
    1418:	07                   	(bad)  
    1419:	00 00                	add    BYTE PTR [rax],al
    141b:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 1421 <__abi_tag+0x105d>
    1421:	00 00                	add    BYTE PTR [rax],al
    1423:	00 00                	add    BYTE PTR [rax],al
    1425:	00 00                	add    BYTE PTR [rax],al
    1427:	00 18                	add    BYTE PTR [rax],bl
    1429:	0f 01 00             	sgdt   [rax]
    142c:	00 00                	add    BYTE PTR [rax],al
    142e:	00 00                	add    BYTE PTR [rax],al
    1430:	07                   	(bad)  
    1431:	00 00                	add    BYTE PTR [rax],al
    1433:	00 2e                	add    BYTE PTR [rsi],ch
	...
    143d:	00 00                	add    BYTE PTR [rax],al
    143f:	00 20                	add    BYTE PTR [rax],ah
    1441:	0f 01 00             	sgdt   [rax]
    1444:	00 00                	add    BYTE PTR [rax],al
    1446:	00 00                	add    BYTE PTR [rax],al
    1448:	07                   	(bad)  
    1449:	00 00                	add    BYTE PTR [rax],al
    144b:	00 2f                	add    BYTE PTR [rdi],ch
	...
    1455:	00 00                	add    BYTE PTR [rax],al
    1457:	00 28                	add    BYTE PTR [rax],ch
    1459:	0f 01 00             	sgdt   [rax]
    145c:	00 00                	add    BYTE PTR [rax],al
    145e:	00 00                	add    BYTE PTR [rax],al
    1460:	07                   	(bad)  
    1461:	00 00                	add    BYTE PTR [rax],al
    1463:	00 30                	add    BYTE PTR [rax],dh
	...
    146d:	00 00                	add    BYTE PTR [rax],al
    146f:	00 30                	add    BYTE PTR [rax],dh
    1471:	0f 01 00             	sgdt   [rax]
    1474:	00 00                	add    BYTE PTR [rax],al
    1476:	00 00                	add    BYTE PTR [rax],al
    1478:	07                   	(bad)  
    1479:	00 00                	add    BYTE PTR [rax],al
    147b:	00 31                	add    BYTE PTR [rcx],dh
	...
    1485:	00 00                	add    BYTE PTR [rax],al
    1487:	00 38                	add    BYTE PTR [rax],bh
    1489:	0f 01 00             	sgdt   [rax]
    148c:	00 00                	add    BYTE PTR [rax],al
    148e:	00 00                	add    BYTE PTR [rax],al
    1490:	07                   	(bad)  
    1491:	00 00                	add    BYTE PTR [rax],al
    1493:	00 32                	add    BYTE PTR [rdx],dh
	...
    149d:	00 00                	add    BYTE PTR [rax],al
    149f:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    14a2:	01 00                	add    DWORD PTR [rax],eax
    14a4:	00 00                	add    BYTE PTR [rax],al
    14a6:	00 00                	add    BYTE PTR [rax],al
    14a8:	07                   	(bad)  
    14a9:	00 00                	add    BYTE PTR [rax],al
    14ab:	00 33                	add    BYTE PTR [rbx],dh
	...
    14b5:	00 00                	add    BYTE PTR [rax],al
    14b7:	00 48 0f             	add    BYTE PTR [rax+0xf],cl
    14ba:	01 00                	add    DWORD PTR [rax],eax
    14bc:	00 00                	add    BYTE PTR [rax],al
    14be:	00 00                	add    BYTE PTR [rax],al
    14c0:	07                   	(bad)  
    14c1:	00 00                	add    BYTE PTR [rax],al
    14c3:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    14ce:	00 00                	add    BYTE PTR [rax],al
    14d0:	50                   	push   rax
    14d1:	0f 01 00             	sgdt   [rax]
    14d4:	00 00                	add    BYTE PTR [rax],al
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	07                   	(bad)  
    14d9:	00 00                	add    BYTE PTR [rax],al
    14db:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 14e1 <__abi_tag+0x111d>
    14e1:	00 00                	add    BYTE PTR [rax],al
    14e3:	00 00                	add    BYTE PTR [rax],al
    14e5:	00 00                	add    BYTE PTR [rax],al
    14e7:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    14ea:	01 00                	add    DWORD PTR [rax],eax
    14ec:	00 00                	add    BYTE PTR [rax],al
    14ee:	00 00                	add    BYTE PTR [rax],al
    14f0:	07                   	(bad)  
    14f1:	00 00                	add    BYTE PTR [rax],al
    14f3:	00 36                	add    BYTE PTR [rsi],dh
	...
    14fd:	00 00                	add    BYTE PTR [rax],al
    14ff:	00 60 0f             	add    BYTE PTR [rax+0xf],ah
    1502:	01 00                	add    DWORD PTR [rax],eax
    1504:	00 00                	add    BYTE PTR [rax],al
    1506:	00 00                	add    BYTE PTR [rax],al
    1508:	07                   	(bad)  
    1509:	00 00                	add    BYTE PTR [rax],al
    150b:	00 37                	add    BYTE PTR [rdi],dh
	...
    1515:	00 00                	add    BYTE PTR [rax],al
    1517:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    151a:	01 00                	add    DWORD PTR [rax],eax
    151c:	00 00                	add    BYTE PTR [rax],al
    151e:	00 00                	add    BYTE PTR [rax],al
    1520:	07                   	(bad)  
    1521:	00 00                	add    BYTE PTR [rax],al
    1523:	00 38                	add    BYTE PTR [rax],bh
	...
    152d:	00 00                	add    BYTE PTR [rax],al
    152f:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    1532:	01 00                	add    DWORD PTR [rax],eax
    1534:	00 00                	add    BYTE PTR [rax],al
    1536:	00 00                	add    BYTE PTR [rax],al
    1538:	07                   	(bad)  
    1539:	00 00                	add    BYTE PTR [rax],al
    153b:	00 39                	add    BYTE PTR [rcx],bh
	...
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	00 78 0f             	add    BYTE PTR [rax+0xf],bh
    154a:	01 00                	add    DWORD PTR [rax],eax
    154c:	00 00                	add    BYTE PTR [rax],al
    154e:	00 00                	add    BYTE PTR [rax],al
    1550:	07                   	(bad)  
    1551:	00 00                	add    BYTE PTR [rax],al
    1553:	00 3a                	add    BYTE PTR [rdx],bh
	...
    155d:	00 00                	add    BYTE PTR [rax],al
    155f:	00 80 0f 01 00 00    	add    BYTE PTR [rax+0x10f],al
    1565:	00 00                	add    BYTE PTR [rax],al
    1567:	00 07                	add    BYTE PTR [rdi],al
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	00 3b                	add    BYTE PTR [rbx],bh
	...
    1575:	00 00                	add    BYTE PTR [rax],al
    1577:	00 88 0f 01 00 00    	add    BYTE PTR [rax+0x10f],cl
    157d:	00 00                	add    BYTE PTR [rax],al
    157f:	00 07                	add    BYTE PTR [rdi],al
    1581:	00 00                	add    BYTE PTR [rax],al
    1583:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    158e:	00 00                	add    BYTE PTR [rax],al
    1590:	90                   	nop
    1591:	0f 01 00             	sgdt   [rax]
    1594:	00 00                	add    BYTE PTR [rax],al
    1596:	00 00                	add    BYTE PTR [rax],al
    1598:	07                   	(bad)  
    1599:	00 00                	add    BYTE PTR [rax],al
    159b:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 15a1 <__abi_tag+0x11dd>
    15a1:	00 00                	add    BYTE PTR [rax],al
    15a3:	00 00                	add    BYTE PTR [rax],al
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 98 0f 01 00 00    	add    BYTE PTR [rax+0x10f],bl
    15ad:	00 00                	add    BYTE PTR [rax],al
    15af:	00 07                	add    BYTE PTR [rdi],al
    15b1:	00 00                	add    BYTE PTR [rax],al
    15b3:	00 3e                	add    BYTE PTR [rsi],bh
	...
    15bd:	00 00                	add    BYTE PTR [rax],al
    15bf:	00 a0 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ah
    15c5:	00 00                	add    BYTE PTR [rax],al
    15c7:	00 07                	add    BYTE PTR [rdi],al
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	00 3f                	add    BYTE PTR [rdi],bh
	...
    15d5:	00 00                	add    BYTE PTR [rax],al
    15d7:	00 a8 0f 01 00 00    	add    BYTE PTR [rax+0x10f],ch
    15dd:	00 00                	add    BYTE PTR [rax],al
    15df:	00 07                	add    BYTE PTR [rdi],al
    15e1:	00 00                	add    BYTE PTR [rax],al
    15e3:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    15ee:	00 00                	add    BYTE PTR [rax],al
    15f0:	b0 0f                	mov    al,0xf
    15f2:	01 00                	add    DWORD PTR [rax],eax
    15f4:	00 00                	add    BYTE PTR [rax],al
    15f6:	00 00                	add    BYTE PTR [rax],al
    15f8:	07                   	(bad)  
    15f9:	00 00                	add    BYTE PTR [rax],al
    15fb:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    1606:	00 00                	add    BYTE PTR [rax],al
    1608:	b8 0f 01 00 00       	mov    eax,0x10f
    160d:	00 00                	add    BYTE PTR [rax],al
    160f:	00 07                	add    BYTE PTR [rdi],al
    1611:	00 00                	add    BYTE PTR [rax],al
    1613:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    161e:	00 00                	add    BYTE PTR [rax],al
    1620:	c0 0f 01             	ror    BYTE PTR [rdi],0x1
    1623:	00 00                	add    BYTE PTR [rax],al
    1625:	00 00                	add    BYTE PTR [rax],al
    1627:	00 07                	add    BYTE PTR [rdi],al
    1629:	00 00                	add    BYTE PTR [rax],al
    162b:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    1637:	00 c8                	add    al,cl
    1639:	0f 01 00             	sgdt   [rax]
    163c:	00 00                	add    BYTE PTR [rax],al
    163e:	00 00                	add    BYTE PTR [rax],al
    1640:	07                   	(bad)  
    1641:	00 00                	add    BYTE PTR [rax],al
    1643:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    164e:	00 00                	add    BYTE PTR [rax],al
    1650:	d0 0f                	ror    BYTE PTR [rdi],1
    1652:	01 00                	add    DWORD PTR [rax],eax
    1654:	00 00                	add    BYTE PTR [rax],al
    1656:	00 00                	add    BYTE PTR [rax],al
    1658:	07                   	(bad)  
    1659:	00 00                	add    BYTE PTR [rax],al
    165b:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 c9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefc9]        # 10fd8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 92 ed 00 00    	push   QWORD PTR [rip+0xed92]        # 10db8 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 93 ed 00 00 	bnd jmp QWORD PTR [rip+0xed93]        # 10dc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    244f:	90                   	nop

Disassembly of section .plt.got:

0000000000002450 <__cxa_finalize@plt>:
    2450:	f3 0f 1e fa          	endbr64 
    2454:	f2 ff 25 95 eb 00 00 	bnd jmp QWORD PTR [rip+0xeb95]        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    245b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002460 <sqlite3_close@plt>:
    2460:	f3 0f 1e fa          	endbr64 
    2464:	f2 ff 25 5d e9 00 00 	bnd jmp QWORD PTR [rip+0xe95d]        # 10dc8 <sqlite3_close>
    246b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002470 <pthread_join@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 55 e9 00 00 	bnd jmp QWORD PTR [rip+0xe955]        # 10dd0 <pthread_join@GLIBC_2.34>
    247b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002480 <printf@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 4d e9 00 00 	bnd jmp QWORD PTR [rip+0xe94d]        # 10dd8 <printf@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002490 <memset@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 45 e9 00 00 	bnd jmp QWORD PTR [rip+0xe945]        # 10de0 <memset@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <snprintf@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 3d e9 00 00 	bnd jmp QWORD PTR [rip+0xe93d]        # 10de8 <snprintf@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <backtrace@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 35 e9 00 00 	bnd jmp QWORD PTR [rip+0xe935]        # 10df0 <backtrace@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <close@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 2d e9 00 00 	bnd jmp QWORD PTR [rip+0xe92d]        # 10df8 <close@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <strncat@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 25 e9 00 00 	bnd jmp QWORD PTR [rip+0xe925]        # 10e00 <strncat@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <puts@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 1d e9 00 00 	bnd jmp QWORD PTR [rip+0xe91d]        # 10e08 <puts@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <htons@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 15 e9 00 00 	bnd jmp QWORD PTR [rip+0xe915]        # 10e10 <htons@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <exit@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 0d e9 00 00 	bnd jmp QWORD PTR [rip+0xe90d]        # 10e18 <exit@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <putchar@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 05 e9 00 00 	bnd jmp QWORD PTR [rip+0xe905]        # 10e20 <putchar@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <sqlite3_exec@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 fd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8fd]        # 10e28 <sqlite3_exec>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <getopt@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 f5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8f5]        # 10e30 <getopt@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <read@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 ed e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ed]        # 10e38 <read@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <strncmp@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10e40 <strncmp@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <malloc@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10e48 <malloc@GLIBC_2.2.5>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <fopen@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10e50 <fopen@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <regexec@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10e58 <regexec@GLIBC_2.3.4>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <pcap_open_live@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10e60 <pcap_open_live>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <setsockopt@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10e68 <setsockopt@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <sqlite3_free@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10e70 <sqlite3_free>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <lua_settop@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10e78 <lua_settop@LUA_5.3>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <pthread_create@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10e80 <pthread_create@GLIBC_2.34>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <backtrace_symbols@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10e88 <backtrace_symbols@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <free@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10e90 <free@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <strlen@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10e98 <strlen@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <listen@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10ea0 <listen@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <sprintf@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10ea8 <sprintf@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <ntohs@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10eb0 <ntohs@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <ntohl@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10eb8 <ntohl@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <sleep@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10ec0 <sleep@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <lua_pcallk@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10ec8 <lua_pcallk@LUA_5.3>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <strstr@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10ed0 <strstr@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <strcat@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10ed8 <strcat@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <fputs@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10ee0 <fputs@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <strtol@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10ee8 <strtol@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <luaL_loadfilex@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10ef0 <luaL_loadfilex@LUA_5.3>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <atoi@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10ef8 <atoi@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <regcomp@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10f00 <regcomp@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <signal@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10f08 <signal@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <strchr@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10f10 <strchr@GLIBC_2.2.5>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <lua_gettop@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10f18 <lua_gettop@LUA_5.3>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <luaL_newstate@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10f20 <luaL_newstate@LUA_5.3>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <socket@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10f28 <socket@GLIBC_2.2.5>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <luaL_openlibs@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10f30 <luaL_openlibs@LUA_5.3>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <__stack_chk_fail@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10f38 <__stack_chk_fail@GLIBC_2.4>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <strcmp@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10f40 <strcmp@GLIBC_2.2.5>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <getline@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10f48 <getline@GLIBC_2.2.5>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <strcpy@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10f50 <strcpy@GLIBC_2.2.5>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <strtok@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10f58 <strtok@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <lua_close@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10f60 <lua_close@LUA_5.3>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <sqlite3_errmsg@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10f68 <sqlite3_errmsg>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <fclose@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10f70 <fclose@GLIBC_2.2.5>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <strncpy@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10f78 <strncpy@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <strcspn@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10f80 <strcspn@GLIBC_2.2.5>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <bind@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10f88 <bind@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <pcap_loop@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10f90 <pcap_loop>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <htonl@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10f98 <htonl@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <perror@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10fa0 <perror@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <fprintf@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10fa8 <fprintf@GLIBC_2.2.5>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <localtime@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10fb0 <localtime@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <getdelim@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10fb8 <getdelim@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <accept@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10fc0 <accept@GLIBC_2.2.5>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <sqlite3_open@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10fc8 <sqlite3_open>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <time@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10fd0 <time@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002880 <_start>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	31 ed                	xor    ebp,ebp
    2886:	49 89 d1             	mov    r9,rdx
    2889:	5e                   	pop    rsi
    288a:	48 89 e2             	mov    rdx,rsp
    288d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2891:	50                   	push   rax
    2892:	54                   	push   rsp
    2893:	45 31 c0             	xor    r8d,r8d
    2896:	31 c9                	xor    ecx,ecx
    2898:	48 8d 3d 34 40 00 00 	lea    rdi,[rip+0x4034]        # 68d3 <main>
    289f:	ff 15 53 e7 00 00    	call   QWORD PTR [rip+0xe753]        # 10ff8 <__libc_start_main@GLIBC_2.34>
    28a5:	f4                   	hlt    
    28a6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    28ad:	00 00 00 

00000000000028b0 <deregister_tm_clones>:
    28b0:	48 8d 3d 91 e7 00 00 	lea    rdi,[rip+0xe791]        # 11048 <__TMC_END__>
    28b7:	48 8d 05 8a e7 00 00 	lea    rax,[rip+0xe78a]        # 11048 <__TMC_END__>
    28be:	48 39 f8             	cmp    rax,rdi
    28c1:	74 15                	je     28d8 <deregister_tm_clones+0x28>
    28c3:	48 8b 05 16 e7 00 00 	mov    rax,QWORD PTR [rip+0xe716]        # 10fe0 <_ITM_deregisterTMCloneTable>
    28ca:	48 85 c0             	test   rax,rax
    28cd:	74 09                	je     28d8 <deregister_tm_clones+0x28>
    28cf:	ff e0                	jmp    rax
    28d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    28d8:	c3                   	ret    
    28d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000028e0 <register_tm_clones>:
    28e0:	48 8d 3d 61 e7 00 00 	lea    rdi,[rip+0xe761]        # 11048 <__TMC_END__>
    28e7:	48 8d 35 5a e7 00 00 	lea    rsi,[rip+0xe75a]        # 11048 <__TMC_END__>
    28ee:	48 29 fe             	sub    rsi,rdi
    28f1:	48 89 f0             	mov    rax,rsi
    28f4:	48 c1 ee 3f          	shr    rsi,0x3f
    28f8:	48 c1 f8 03          	sar    rax,0x3
    28fc:	48 01 c6             	add    rsi,rax
    28ff:	48 d1 fe             	sar    rsi,1
    2902:	74 14                	je     2918 <register_tm_clones+0x38>
    2904:	48 8b 05 dd e6 00 00 	mov    rax,QWORD PTR [rip+0xe6dd]        # 10fe8 <_ITM_registerTMCloneTable>
    290b:	48 85 c0             	test   rax,rax
    290e:	74 08                	je     2918 <register_tm_clones+0x38>
    2910:	ff e0                	jmp    rax
    2912:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2918:	c3                   	ret    
    2919:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002920 <__do_global_dtors_aux>:
    2920:	f3 0f 1e fa          	endbr64 
    2924:	80 3d 3d e7 00 00 00 	cmp    BYTE PTR [rip+0xe73d],0x0        # 11068 <completed.0>
    292b:	75 2b                	jne    2958 <__do_global_dtors_aux+0x38>
    292d:	55                   	push   rbp
    292e:	48 83 3d ba e6 00 00 	cmp    QWORD PTR [rip+0xe6ba],0x0        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    2935:	00 
    2936:	48 89 e5             	mov    rbp,rsp
    2939:	74 0c                	je     2947 <__do_global_dtors_aux+0x27>
    293b:	48 8b 3d c6 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe6c6]        # 11008 <__dso_handle>
    2942:	e8 09 fb ff ff       	call   2450 <__cxa_finalize@plt>
    2947:	e8 64 ff ff ff       	call   28b0 <deregister_tm_clones>
    294c:	c6 05 15 e7 00 00 01 	mov    BYTE PTR [rip+0xe715],0x1        # 11068 <completed.0>
    2953:	5d                   	pop    rbp
    2954:	c3                   	ret    
    2955:	0f 1f 00             	nop    DWORD PTR [rax]
    2958:	c3                   	ret    
    2959:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002960 <frame_dummy>:
    2960:	f3 0f 1e fa          	endbr64 
    2964:	e9 77 ff ff ff       	jmp    28e0 <register_tm_clones>

0000000000002969 <add_thread>:
    2969:	f3 0f 1e fa          	endbr64 
    296d:	55                   	push   rbp
    296e:	48 89 e5             	mov    rbp,rsp
    2971:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2975:	8b 05 25 e9 00 00    	mov    eax,DWORD PTR [rip+0xe925]        # 112a0 <thread_count>
    297b:	8d 50 01             	lea    edx,[rax+0x1]
    297e:	89 15 1c e9 00 00    	mov    DWORD PTR [rip+0xe91c],edx        # 112a0 <thread_count>
    2984:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    2988:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    298b:	48 98                	cdqe   
    298d:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2994:	00 
    2995:	48 8d 05 04 e7 00 00 	lea    rax,[rip+0xe704]        # 110a0 <threads>
    299c:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    29a0:	90                   	nop
    29a1:	5d                   	pop    rbp
    29a2:	c3                   	ret    

00000000000029a3 <pktmgr>:
    29a3:	f3 0f 1e fa          	endbr64 
    29a7:	55                   	push   rbp
    29a8:	48 89 e5             	mov    rbp,rsp
    29ab:	53                   	push   rbx
    29ac:	48 83 ec 38          	sub    rsp,0x38
    29b0:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    29b4:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    29b8:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    29bc:	0f b6 05 a1 75 10 00 	movzx  eax,BYTE PTR [rip+0x1075a1]        # 109f64 <packet_print>
    29c3:	84 c0                	test   al,al
    29c5:	74 0c                	je     29d3 <pktmgr+0x30>
    29c7:	48 8d 3d 82 96 00 00 	lea    rdi,[rip+0x9682]        # c050 <_IO_stdin_used+0x50>
    29ce:	e8 0d fb ff ff       	call   24e0 <puts@plt>
    29d3:	8b 05 cb e8 00 00    	mov    eax,DWORD PTR [rip+0xe8cb]        # 112a4 <total_pkt_captured>
    29d9:	83 c0 01             	add    eax,0x1
    29dc:	89 05 c2 e8 00 00    	mov    DWORD PTR [rip+0xe8c2],eax        # 112a4 <total_pkt_captured>
    29e2:	8b 05 d8 e8 00 00    	mov    eax,DWORD PTR [rip+0xe8d8]        # 112c0 <pkt_counter>
    29e8:	83 c0 01             	add    eax,0x1
    29eb:	89 05 cf e8 00 00    	mov    DWORD PTR [rip+0xe8cf],eax        # 112c0 <pkt_counter>
    29f1:	8b 15 c9 e8 00 00    	mov    edx,DWORD PTR [rip+0xe8c9]        # 112c0 <pkt_counter>
    29f7:	8b 05 63 75 10 00    	mov    eax,DWORD PTR [rip+0x107563]        # 109f60 <clean_delay_pkts>
    29fd:	39 c2                	cmp    edx,eax
    29ff:	72 0a                	jb     2a0b <pktmgr+0x68>
    2a01:	c7 05 b5 e8 00 00 00 	mov    DWORD PTR [rip+0xe8b5],0x0        # 112c0 <pkt_counter>
    2a08:	00 00 00 
    2a0b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a0f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2a13:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2a17:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2a1b:	0f b7 c0             	movzx  eax,ax
    2a1e:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a23:	74 46                	je     2a6b <pktmgr+0xc8>
    2a25:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a2a:	7f 77                	jg     2aa3 <pktmgr+0x100>
    2a2c:	3d 80 35 00 00       	cmp    eax,0x3580
    2a31:	74 23                	je     2a56 <pktmgr+0xb3>
    2a33:	3d 80 35 00 00       	cmp    eax,0x3580
    2a38:	7f 69                	jg     2aa3 <pktmgr+0x100>
    2a3a:	3d 08 06 00 00       	cmp    eax,0x608
    2a3f:	74 15                	je     2a56 <pktmgr+0xb3>
    2a41:	3d 08 06 00 00       	cmp    eax,0x608
    2a46:	7f 5b                	jg     2aa3 <pktmgr+0x100>
    2a48:	83 f8 08             	cmp    eax,0x8
    2a4b:	74 33                	je     2a80 <pktmgr+0xdd>
    2a4d:	3d 90 00 00 00       	cmp    eax,0x90
    2a52:	74 41                	je     2a95 <pktmgr+0xf2>
    2a54:	eb 4d                	jmp    2aa3 <pktmgr+0x100>
    2a56:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a5a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a5e:	48 89 d6             	mov    rsi,rdx
    2a61:	48 89 c7             	mov    rdi,rax
    2a64:	e8 86 00 00 00       	call   2aef <arpdecode>
    2a69:	eb 7d                	jmp    2ae8 <pktmgr+0x145>
    2a6b:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a6f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a73:	48 89 d6             	mov    rsi,rdx
    2a76:	48 89 c7             	mov    rdi,rax
    2a79:	e8 13 87 00 00       	call   b191 <ip6decode>
    2a7e:	eb 68                	jmp    2ae8 <pktmgr+0x145>
    2a80:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2a84:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a88:	48 89 d6             	mov    rsi,rdx
    2a8b:	48 89 c7             	mov    rdi,rax
    2a8e:	e8 56 0b 00 00       	call   35e9 <ipv4pktmgr>
    2a93:	eb 53                	jmp    2ae8 <pktmgr+0x145>
    2a95:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a99:	48 89 c7             	mov    rdi,rax
    2a9c:	e8 42 03 00 00       	call   2de3 <loopback_ctp_decode>
    2aa1:	eb 45                	jmp    2ae8 <pktmgr+0x145>
    2aa3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2aa7:	48 89 c7             	mov    rdi,rax
    2aaa:	e8 f5 04 00 00       	call   2fa4 <uc_mac_ntoa>
    2aaf:	48 89 c3             	mov    rbx,rax
    2ab2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2ab6:	48 83 c0 06          	add    rax,0x6
    2aba:	48 89 c7             	mov    rdi,rax
    2abd:	e8 e2 04 00 00       	call   2fa4 <uc_mac_ntoa>
    2ac2:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2ac8:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2ace:	48 89 d9             	mov    rcx,rbx
    2ad1:	48 89 c2             	mov    rdx,rax
    2ad4:	48 8d 35 bd 95 00 00 	lea    rsi,[rip+0x95bd]        # c098 <_IO_stdin_used+0x98>
    2adb:	48 8d 3d e8 95 00 00 	lea    rdi,[rip+0x95e8]        # c0ca <_IO_stdin_used+0xca>
    2ae2:	e8 2e 67 00 00       	call   9215 <lfprintf>
    2ae7:	90                   	nop
    2ae8:	90                   	nop
    2ae9:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2aed:	c9                   	leave  
    2aee:	c3                   	ret    

0000000000002aef <arpdecode>:
    2aef:	f3 0f 1e fa          	endbr64 
    2af3:	55                   	push   rbp
    2af4:	48 89 e5             	mov    rbp,rsp
    2af7:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2afe:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2b05:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2b0c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2b13:	00 00 
    2b15:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2b19:	31 c0                	xor    eax,eax
    2b1b:	0f b6 05 42 74 10 00 	movzx  eax,BYTE PTR [rip+0x107442]        # 109f64 <packet_print>
    2b22:	84 c0                	test   al,al
    2b24:	74 18                	je     2b3e <arpdecode+0x4f>
    2b26:	48 8d 35 bb 95 00 00 	lea    rsi,[rip+0x95bb]        # c0e8 <_IO_stdin_used+0xe8>
    2b2d:	48 8d 3d bc 95 00 00 	lea    rdi,[rip+0x95bc]        # c0f0 <_IO_stdin_used+0xf0>
    2b34:	b8 00 00 00 00       	mov    eax,0x0
    2b39:	e8 42 f9 ff ff       	call   2480 <printf@plt>
    2b3e:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2b45:	48 83 c0 0e          	add    rax,0xe
    2b49:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2b50:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2b57:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2b5b:	0f b7 c0             	movzx  eax,ax
    2b5e:	3d 00 18 00 00       	cmp    eax,0x1800
    2b63:	74 35                	je     2b9a <arpdecode+0xab>
    2b65:	3d 00 18 00 00       	cmp    eax,0x1800
    2b6a:	0f 8f 1d 02 00 00    	jg     2d8d <arpdecode+0x29e>
    2b70:	3d 00 02 00 00       	cmp    eax,0x200
    2b75:	0f 84 eb 00 00 00    	je     2c66 <arpdecode+0x177>
    2b7b:	3d 00 02 00 00       	cmp    eax,0x200
    2b80:	0f 8f 07 02 00 00    	jg     2d8d <arpdecode+0x29e>
    2b86:	83 f8 02             	cmp    eax,0x2
    2b89:	0f 84 d7 00 00 00    	je     2c66 <arpdecode+0x177>
    2b8f:	3d 00 01 00 00       	cmp    eax,0x100
    2b94:	0f 85 f3 01 00 00    	jne    2d8d <arpdecode+0x29e>
    2b9a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2ba1:	48 83 c0 18          	add    rax,0x18
    2ba5:	48 89 c7             	mov    rdi,rax
    2ba8:	e8 9d 04 00 00       	call   304a <u8_ipv4_ntoa>
    2bad:	48 89 c1             	mov    rcx,rax
    2bb0:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2bb4:	ba 20 00 00 00       	mov    edx,0x20
    2bb9:	48 89 ce             	mov    rsi,rcx
    2bbc:	48 89 c7             	mov    rdi,rax
    2bbf:	e8 fc fb ff ff       	call   27c0 <strncpy@plt>
    2bc4:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2bcb:	48 83 c0 0e          	add    rax,0xe
    2bcf:	48 89 c7             	mov    rdi,rax
    2bd2:	e8 73 04 00 00       	call   304a <u8_ipv4_ntoa>
    2bd7:	48 89 c1             	mov    rcx,rax
    2bda:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2bde:	ba 20 00 00 00       	mov    edx,0x20
    2be3:	48 89 ce             	mov    rsi,rcx
    2be6:	48 89 c7             	mov    rdi,rax
    2be9:	e8 d2 fb ff ff       	call   27c0 <strncpy@plt>
    2bee:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2bf2:	ba 05 00 00 00       	mov    edx,0x5
    2bf7:	48 8d 35 f5 94 00 00 	lea    rsi,[rip+0x94f5]        # c0f3 <_IO_stdin_used+0xf3>
    2bfe:	48 89 c7             	mov    rdi,rax
    2c01:	e8 4a f9 ff ff       	call   2550 <strncmp@plt>
    2c06:	85 c0                	test   eax,eax
    2c08:	75 2c                	jne    2c36 <arpdecode+0x147>
    2c0a:	0f b6 05 53 73 10 00 	movzx  eax,BYTE PTR [rip+0x107353]        # 109f64 <packet_print>
    2c11:	84 c0                	test   al,al
    2c13:	0f 84 97 01 00 00    	je     2db0 <arpdecode+0x2c1>
    2c19:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c1d:	48 89 c6             	mov    rsi,rax
    2c20:	48 8d 3d d9 94 00 00 	lea    rdi,[rip+0x94d9]        # c100 <_IO_stdin_used+0x100>
    2c27:	b8 00 00 00 00       	mov    eax,0x0
    2c2c:	e8 4f f8 ff ff       	call   2480 <printf@plt>
    2c31:	e9 7a 01 00 00       	jmp    2db0 <arpdecode+0x2c1>
    2c36:	0f b6 05 27 73 10 00 	movzx  eax,BYTE PTR [rip+0x107327]        # 109f64 <packet_print>
    2c3d:	84 c0                	test   al,al
    2c3f:	0f 84 6b 01 00 00    	je     2db0 <arpdecode+0x2c1>
    2c45:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2c49:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c4d:	48 89 c6             	mov    rsi,rax
    2c50:	48 8d 3d c9 94 00 00 	lea    rdi,[rip+0x94c9]        # c120 <_IO_stdin_used+0x120>
    2c57:	b8 00 00 00 00       	mov    eax,0x0
    2c5c:	e8 1f f8 ff ff       	call   2480 <printf@plt>
    2c61:	e9 4a 01 00 00       	jmp    2db0 <arpdecode+0x2c1>
    2c66:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c6d:	48 83 c0 08          	add    rax,0x8
    2c71:	48 89 c7             	mov    rdi,rax
    2c74:	e8 7d 02 00 00       	call   2ef6 <mac_ntoa>
    2c79:	48 89 c1             	mov    rcx,rax
    2c7c:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c80:	ba 40 00 00 00       	mov    edx,0x40
    2c85:	48 89 ce             	mov    rsi,rcx
    2c88:	48 89 c7             	mov    rdi,rax
    2c8b:	e8 30 fb ff ff       	call   27c0 <strncpy@plt>
    2c90:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c97:	48 83 c0 0e          	add    rax,0xe
    2c9b:	48 89 c7             	mov    rdi,rax
    2c9e:	e8 a7 03 00 00       	call   304a <u8_ipv4_ntoa>
    2ca3:	48 89 c1             	mov    rcx,rax
    2ca6:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2caa:	ba 20 00 00 00       	mov    edx,0x20
    2caf:	48 89 ce             	mov    rsi,rcx
    2cb2:	48 89 c7             	mov    rdi,rax
    2cb5:	e8 06 fb ff ff       	call   27c0 <strncpy@plt>
    2cba:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cbe:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cc2:	48 89 d6             	mov    rsi,rdx
    2cc5:	48 89 c7             	mov    rdi,rax
    2cc8:	e8 2d 50 00 00       	call   7cfa <entry_exists>
    2ccd:	83 f8 ff             	cmp    eax,0xffffffff
    2cd0:	74 15                	je     2ce7 <arpdecode+0x1f8>
    2cd2:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cd6:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cda:	48 89 d6             	mov    rsi,rdx
    2cdd:	48 89 c7             	mov    rdi,rax
    2ce0:	e8 c2 4e 00 00       	call   7ba7 <compare_entries>
    2ce5:	eb 7d                	jmp    2d64 <arpdecode+0x275>
    2ce7:	0f b6 05 33 72 10 00 	movzx  eax,BYTE PTR [rip+0x107233]        # 109f21 <use_sqlite>
    2cee:	84 c0                	test   al,al
    2cf0:	74 5f                	je     2d51 <arpdecode+0x262>
    2cf2:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2cf9:	00 00 00 
    2cfc:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2d00:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2d07:	48 89 d6             	mov    rsi,rdx
    2d0a:	48 89 c7             	mov    rdi,rax
    2d0d:	e8 5e fa ff ff       	call   2770 <strcpy@plt>
    2d12:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d16:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d1d:	48 83 c2 10          	add    rdx,0x10
    2d21:	48 89 c6             	mov    rsi,rax
    2d24:	48 89 d7             	mov    rdi,rdx
    2d27:	e8 44 fa ff ff       	call   2770 <strcpy@plt>
    2d2c:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d33:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2d3a:	48 89 d1             	mov    rcx,rdx
    2d3d:	48 8d 15 21 54 00 00 	lea    rdx,[rip+0x5421]        # 8165 <update_db>
    2d44:	be 00 00 00 00       	mov    esi,0x0
    2d49:	48 89 c7             	mov    rdi,rax
    2d4c:	e8 7f f8 ff ff       	call   25d0 <pthread_create@plt>
    2d51:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d55:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d59:	48 89 d6             	mov    rsi,rdx
    2d5c:	48 89 c7             	mov    rdi,rax
    2d5f:	e8 22 4f 00 00       	call   7c86 <add_entry>
    2d64:	0f b6 05 f9 71 10 00 	movzx  eax,BYTE PTR [rip+0x1071f9]        # 109f64 <packet_print>
    2d6b:	84 c0                	test   al,al
    2d6d:	74 44                	je     2db3 <arpdecode+0x2c4>
    2d6f:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d73:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d77:	48 89 c6             	mov    rsi,rax
    2d7a:	48 8d 3d c7 93 00 00 	lea    rdi,[rip+0x93c7]        # c148 <_IO_stdin_used+0x148>
    2d81:	b8 00 00 00 00       	mov    eax,0x0
    2d86:	e8 f5 f6 ff ff       	call   2480 <printf@plt>
    2d8b:	eb 26                	jmp    2db3 <arpdecode+0x2c4>
    2d8d:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d94:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2d98:	0f b7 c0             	movzx  eax,ax
    2d9b:	89 c6                	mov    esi,eax
    2d9d:	48 8d 3d c3 93 00 00 	lea    rdi,[rip+0x93c3]        # c167 <_IO_stdin_used+0x167>
    2da4:	b8 00 00 00 00       	mov    eax,0x0
    2da9:	e8 d2 f6 ff ff       	call   2480 <printf@plt>
    2dae:	eb 04                	jmp    2db4 <arpdecode+0x2c5>
    2db0:	90                   	nop
    2db1:	eb 01                	jmp    2db4 <arpdecode+0x2c5>
    2db3:	90                   	nop
    2db4:	48 8d 35 c4 93 00 00 	lea    rsi,[rip+0x93c4]        # c17f <_IO_stdin_used+0x17f>
    2dbb:	48 8d 3d 2e 93 00 00 	lea    rdi,[rip+0x932e]        # c0f0 <_IO_stdin_used+0xf0>
    2dc2:	b8 00 00 00 00       	mov    eax,0x0
    2dc7:	e8 b4 f6 ff ff       	call   2480 <printf@plt>
    2dcc:	90                   	nop
    2dcd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2dd1:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2dd8:	00 00 
    2dda:	74 05                	je     2de1 <arpdecode+0x2f2>
    2ddc:	e8 5f f9 ff ff       	call   2740 <__stack_chk_fail@plt>
    2de1:	c9                   	leave  
    2de2:	c3                   	ret    

0000000000002de3 <loopback_ctp_decode>:
    2de3:	f3 0f 1e fa          	endbr64 
    2de7:	55                   	push   rbp
    2de8:	48 89 e5             	mov    rbp,rsp
    2deb:	48 83 ec 60          	sub    rsp,0x60
    2def:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2df3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2dfa:	00 00 
    2dfc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2e00:	31 c0                	xor    eax,eax
    2e02:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e06:	48 83 c0 0e          	add    rax,0xe
    2e0a:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2e0e:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e12:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2e16:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e1a:	48 83 c0 06          	add    rax,0x6
    2e1e:	48 89 c7             	mov    rdi,rax
    2e21:	e8 7e 01 00 00       	call   2fa4 <uc_mac_ntoa>
    2e26:	48 89 c1             	mov    rcx,rax
    2e29:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e2d:	ba 18 00 00 00       	mov    edx,0x18
    2e32:	48 89 ce             	mov    rsi,rcx
    2e35:	48 89 c7             	mov    rdi,rax
    2e38:	e8 83 f9 ff ff       	call   27c0 <strncpy@plt>
    2e3d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e41:	48 89 c7             	mov    rdi,rax
    2e44:	e8 5b 01 00 00       	call   2fa4 <uc_mac_ntoa>
    2e49:	48 89 c1             	mov    rcx,rax
    2e4c:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2e50:	ba 18 00 00 00       	mov    edx,0x18
    2e55:	48 89 ce             	mov    rsi,rcx
    2e58:	48 89 c7             	mov    rdi,rax
    2e5b:	e8 60 f9 ff ff       	call   27c0 <strncpy@plt>
    2e60:	0f b6 05 fd 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070fd]        # 109f64 <packet_print>
    2e67:	84 c0                	test   al,al
    2e69:	74 1c                	je     2e87 <loopback_ctp_decode+0xa4>
    2e6b:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2e6f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e73:	48 89 c6             	mov    rsi,rax
    2e76:	48 8d 3d 07 93 00 00 	lea    rdi,[rip+0x9307]        # c184 <_IO_stdin_used+0x184>
    2e7d:	b8 00 00 00 00       	mov    eax,0x0
    2e82:	e8 f9 f5 ff ff       	call   2480 <printf@plt>
    2e87:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2e8b:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2e8f:	0f b7 c0             	movzx  eax,ax
    2e92:	83 f8 01             	cmp    eax,0x1
    2e95:	75 19                	jne    2eb0 <loopback_ctp_decode+0xcd>
    2e97:	0f b6 05 c6 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070c6]        # 109f64 <packet_print>
    2e9e:	84 c0                	test   al,al
    2ea0:	74 39                	je     2edb <loopback_ctp_decode+0xf8>
    2ea2:	48 8d 3d e9 92 00 00 	lea    rdi,[rip+0x92e9]        # c192 <_IO_stdin_used+0x192>
    2ea9:	e8 32 f6 ff ff       	call   24e0 <puts@plt>
    2eae:	eb 2b                	jmp    2edb <loopback_ctp_decode+0xf8>
    2eb0:	0f b6 05 ad 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070ad]        # 109f64 <packet_print>
    2eb7:	84 c0                	test   al,al
    2eb9:	74 23                	je     2ede <loopback_ctp_decode+0xfb>
    2ebb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2ebf:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2ec3:	0f b7 c0             	movzx  eax,ax
    2ec6:	89 c6                	mov    esi,eax
    2ec8:	48 8d 3d cb 92 00 00 	lea    rdi,[rip+0x92cb]        # c19a <_IO_stdin_used+0x19a>
    2ecf:	b8 00 00 00 00       	mov    eax,0x0
    2ed4:	e8 a7 f5 ff ff       	call   2480 <printf@plt>
    2ed9:	eb 03                	jmp    2ede <loopback_ctp_decode+0xfb>
    2edb:	90                   	nop
    2edc:	eb 01                	jmp    2edf <loopback_ctp_decode+0xfc>
    2ede:	90                   	nop
    2edf:	90                   	nop
    2ee0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ee4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2eeb:	00 00 
    2eed:	74 05                	je     2ef4 <loopback_ctp_decode+0x111>
    2eef:	e8 4c f8 ff ff       	call   2740 <__stack_chk_fail@plt>
    2ef4:	c9                   	leave  
    2ef5:	c3                   	ret    

0000000000002ef6 <mac_ntoa>:
    2ef6:	f3 0f 1e fa          	endbr64 
    2efa:	55                   	push   rbp
    2efb:	48 89 e5             	mov    rbp,rsp
    2efe:	48 83 ec 20          	sub    rsp,0x20
    2f02:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2f06:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2f0a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2f0e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f12:	48 83 c0 05          	add    rax,0x5
    2f16:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f19:	0f b6 f0             	movzx  esi,al
    2f1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f20:	48 83 c0 04          	add    rax,0x4
    2f24:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f27:	0f b6 c8             	movzx  ecx,al
    2f2a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f2e:	48 83 c0 03          	add    rax,0x3
    2f32:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f35:	0f b6 d0             	movzx  edx,al
    2f38:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f3c:	48 83 c0 02          	add    rax,0x2
    2f40:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f43:	44 0f b6 c8          	movzx  r9d,al
    2f47:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f4b:	48 83 c0 01          	add    rax,0x1
    2f4f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f52:	44 0f b6 c0          	movzx  r8d,al
    2f56:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f5a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f5d:	0f b6 c0             	movzx  eax,al
    2f60:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2f67:	00 00 
    2f69:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    2f70:	48 83 ec 08          	sub    rsp,0x8
    2f74:	56                   	push   rsi
    2f75:	51                   	push   rcx
    2f76:	52                   	push   rdx
    2f77:	89 c1                	mov    ecx,eax
    2f79:	48 8d 15 38 92 00 00 	lea    rdx,[rip+0x9238]        # c1b8 <_IO_stdin_used+0x1b8>
    2f80:	be 80 00 00 00       	mov    esi,0x80
    2f85:	b8 00 00 00 00       	mov    eax,0x0
    2f8a:	e8 11 f5 ff ff       	call   24a0 <snprintf@plt>
    2f8f:	48 83 c4 20          	add    rsp,0x20
    2f93:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    2f9a:	00 00 
    2f9c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    2fa2:	c9                   	leave  
    2fa3:	c3                   	ret    

0000000000002fa4 <uc_mac_ntoa>:
    2fa4:	f3 0f 1e fa          	endbr64 
    2fa8:	55                   	push   rbp
    2fa9:	48 89 e5             	mov    rbp,rsp
    2fac:	48 83 ec 10          	sub    rsp,0x10
    2fb0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2fb4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fb8:	48 83 c0 05          	add    rax,0x5
    2fbc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fbf:	0f b6 f0             	movzx  esi,al
    2fc2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fc6:	48 83 c0 04          	add    rax,0x4
    2fca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fcd:	0f b6 c8             	movzx  ecx,al
    2fd0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fd4:	48 83 c0 03          	add    rax,0x3
    2fd8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fdb:	0f b6 d0             	movzx  edx,al
    2fde:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fe2:	48 83 c0 02          	add    rax,0x2
    2fe6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fe9:	44 0f b6 c8          	movzx  r9d,al
    2fed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2ff1:	48 83 c0 01          	add    rax,0x1
    2ff5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2ff8:	44 0f b6 c0          	movzx  r8d,al
    2ffc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3000:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3003:	0f b6 c0             	movzx  eax,al
    3006:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    300d:	00 00 
    300f:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    3016:	48 83 ec 08          	sub    rsp,0x8
    301a:	56                   	push   rsi
    301b:	51                   	push   rcx
    301c:	52                   	push   rdx
    301d:	89 c1                	mov    ecx,eax
    301f:	48 8d 15 92 91 00 00 	lea    rdx,[rip+0x9192]        # c1b8 <_IO_stdin_used+0x1b8>
    3026:	be 80 00 00 00       	mov    esi,0x80
    302b:	b8 00 00 00 00       	mov    eax,0x0
    3030:	e8 6b f4 ff ff       	call   24a0 <snprintf@plt>
    3035:	48 83 c4 20          	add    rsp,0x20
    3039:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3040:	00 00 
    3042:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3048:	c9                   	leave  
    3049:	c3                   	ret    

000000000000304a <u8_ipv4_ntoa>:
    304a:	f3 0f 1e fa          	endbr64 
    304e:	55                   	push   rbp
    304f:	48 89 e5             	mov    rbp,rsp
    3052:	48 83 ec 20          	sub    rsp,0x20
    3056:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    305a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    305e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3062:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3066:	48 83 c0 03          	add    rax,0x3
    306a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    306d:	0f b6 d0             	movzx  edx,al
    3070:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3074:	48 83 c0 02          	add    rax,0x2
    3078:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    307b:	44 0f b6 c0          	movzx  r8d,al
    307f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3083:	48 83 c0 01          	add    rax,0x1
    3087:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    308a:	0f b6 f0             	movzx  esi,al
    308d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3091:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3094:	0f b6 c0             	movzx  eax,al
    3097:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    309e:	00 00 
    30a0:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    30a7:	48 83 ec 08          	sub    rsp,0x8
    30ab:	52                   	push   rdx
    30ac:	45 89 c1             	mov    r9d,r8d
    30af:	41 89 f0             	mov    r8d,esi
    30b2:	89 c1                	mov    ecx,eax
    30b4:	48 8d 15 1b 91 00 00 	lea    rdx,[rip+0x911b]        # c1d6 <_IO_stdin_used+0x1d6>
    30bb:	be 80 00 00 00       	mov    esi,0x80
    30c0:	b8 00 00 00 00       	mov    eax,0x0
    30c5:	e8 d6 f3 ff ff       	call   24a0 <snprintf@plt>
    30ca:	48 83 c4 10          	add    rsp,0x10
    30ce:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    30d5:	00 00 
    30d7:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    30dd:	c9                   	leave  
    30de:	c3                   	ret    

00000000000030df <ipv4_ntoa>:
    30df:	f3 0f 1e fa          	endbr64 
    30e3:	55                   	push   rbp
    30e4:	48 89 e5             	mov    rbp,rsp
    30e7:	48 83 ec 20          	sub    rsp,0x20
    30eb:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    30ee:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    30f2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    30f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30fa:	48 83 c0 03          	add    rax,0x3
    30fe:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3101:	0f b6 d0             	movzx  edx,al
    3104:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3108:	48 83 c0 02          	add    rax,0x2
    310c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    310f:	44 0f b6 c0          	movzx  r8d,al
    3113:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3117:	48 83 c0 01          	add    rax,0x1
    311b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    311e:	0f b6 f0             	movzx  esi,al
    3121:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3125:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3128:	0f b6 c0             	movzx  eax,al
    312b:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    3132:	00 00 
    3134:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    313b:	48 83 ec 08          	sub    rsp,0x8
    313f:	52                   	push   rdx
    3140:	45 89 c1             	mov    r9d,r8d
    3143:	41 89 f0             	mov    r8d,esi
    3146:	89 c1                	mov    ecx,eax
    3148:	48 8d 15 87 90 00 00 	lea    rdx,[rip+0x9087]        # c1d6 <_IO_stdin_used+0x1d6>
    314f:	be 80 00 00 00       	mov    esi,0x80
    3154:	b8 00 00 00 00       	mov    eax,0x0
    3159:	e8 42 f3 ff ff       	call   24a0 <snprintf@plt>
    315e:	48 83 c4 10          	add    rsp,0x10
    3162:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3169:	00 00 
    316b:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3171:	c9                   	leave  
    3172:	c3                   	ret    

0000000000003173 <inet6_ntoa>:
    3173:	f3 0f 1e fa          	endbr64 
    3177:	55                   	push   rbp
    3178:	48 89 e5             	mov    rbp,rsp
    317b:	41 57                	push   r15
    317d:	41 56                	push   r14
    317f:	41 55                	push   r13
    3181:	41 54                	push   r12
    3183:	53                   	push   rbx
    3184:	48 83 ec 38          	sub    rsp,0x38
    3188:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    318c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3193:	00 00 
    3195:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3199:	31 c0                	xor    eax,eax
    319b:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    31a2:	00 00 
    31a4:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    31aa:	ba 80 00 00 00       	mov    edx,0x80
    31af:	be 00 00 00 00       	mov    esi,0x0
    31b4:	48 89 c7             	mov    rdi,rax
    31b7:	e8 d4 f2 ff ff       	call   2490 <memset@plt>
    31bc:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    31c3:	00 
    31c4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31c8:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    31cc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31d0:	48 83 c0 0f          	add    rax,0xf
    31d4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31d7:	0f b6 c8             	movzx  ecx,al
    31da:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31de:	48 83 c0 0e          	add    rax,0xe
    31e2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31e5:	0f b6 f8             	movzx  edi,al
    31e8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31ec:	48 83 c0 0d          	add    rax,0xd
    31f0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31f3:	0f b6 c0             	movzx  eax,al
    31f6:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    31f9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    31fd:	48 83 c0 0c          	add    rax,0xc
    3201:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3204:	0f b6 d8             	movzx  ebx,al
    3207:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    320a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    320e:	48 83 c0 0b          	add    rax,0xb
    3212:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3215:	44 0f b6 f8          	movzx  r15d,al
    3219:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    321d:	48 83 c0 0a          	add    rax,0xa
    3221:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3224:	44 0f b6 f0          	movzx  r14d,al
    3228:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    322c:	48 83 c0 09          	add    rax,0x9
    3230:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3233:	44 0f b6 e8          	movzx  r13d,al
    3237:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    323b:	48 83 c0 08          	add    rax,0x8
    323f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3242:	44 0f b6 e0          	movzx  r12d,al
    3246:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    324a:	48 83 c0 07          	add    rax,0x7
    324e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3251:	0f b6 d8             	movzx  ebx,al
    3254:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3258:	48 83 c0 06          	add    rax,0x6
    325c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    325f:	44 0f b6 d8          	movzx  r11d,al
    3263:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3267:	48 83 c0 05          	add    rax,0x5
    326b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    326e:	44 0f b6 d0          	movzx  r10d,al
    3272:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3276:	48 83 c0 04          	add    rax,0x4
    327a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    327d:	44 0f b6 c8          	movzx  r9d,al
    3281:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3285:	48 83 c0 03          	add    rax,0x3
    3289:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    328c:	44 0f b6 c0          	movzx  r8d,al
    3290:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3294:	48 83 c0 02          	add    rax,0x2
    3298:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    329b:	0f b6 d0             	movzx  edx,al
    329e:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    32a1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32a5:	48 83 c0 01          	add    rax,0x1
    32a9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ac:	0f b6 f0             	movzx  esi,al
    32af:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32b3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32b6:	0f b6 d0             	movzx  edx,al
    32b9:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    32c0:	00 00 
    32c2:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    32c8:	48 83 ec 08          	sub    rsp,0x8
    32cc:	51                   	push   rcx
    32cd:	57                   	push   rdi
    32ce:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    32d1:	51                   	push   rcx
    32d2:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    32d5:	51                   	push   rcx
    32d6:	41 57                	push   r15
    32d8:	41 56                	push   r14
    32da:	41 55                	push   r13
    32dc:	41 54                	push   r12
    32de:	53                   	push   rbx
    32df:	41 53                	push   r11
    32e1:	41 52                	push   r10
    32e3:	41 51                	push   r9
    32e5:	41 50                	push   r8
    32e7:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    32eb:	41 89 f0             	mov    r8d,esi
    32ee:	89 d1                	mov    ecx,edx
    32f0:	48 8d 15 f1 8e 00 00 	lea    rdx,[rip+0x8ef1]        # c1e8 <_IO_stdin_used+0x1e8>
    32f7:	be 80 00 00 00       	mov    esi,0x80
    32fc:	48 89 c7             	mov    rdi,rax
    32ff:	b8 00 00 00 00       	mov    eax,0x0
    3304:	e8 97 f1 ff ff       	call   24a0 <snprintf@plt>
    3309:	48 83 c4 70          	add    rsp,0x70
    330d:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3314:	00 00 
    3316:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    331c:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    3320:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    3327:	00 00 
    3329:	74 05                	je     3330 <inet6_ntoa+0x1bd>
    332b:	e8 10 f4 ff ff       	call   2740 <__stack_chk_fail@plt>
    3330:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    3334:	5b                   	pop    rbx
    3335:	41 5c                	pop    r12
    3337:	41 5d                	pop    r13
    3339:	41 5e                	pop    r14
    333b:	41 5f                	pop    r15
    333d:	5d                   	pop    rbp
    333e:	c3                   	ret    

000000000000333f <get_formated_time>:
    333f:	f3 0f 1e fa          	endbr64 
    3343:	55                   	push   rbp
    3344:	48 89 e5             	mov    rbp,rsp
    3347:	53                   	push   rbx
    3348:	48 83 ec 58          	sub    rsp,0x58
    334c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3353:	00 00 
    3355:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3359:	31 c0                	xor    eax,eax
    335b:	bf ff 00 00 00       	mov    edi,0xff
    3360:	e8 fb f1 ff ff       	call   2560 <malloc@plt>
    3365:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3369:	bf 00 00 00 00       	mov    edi,0x0
    336e:	e8 fd f4 ff ff       	call   2870 <time@plt>
    3373:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3377:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    337b:	48 89 c7             	mov    rdi,rax
    337e:	e8 ad f4 ff ff       	call   2830 <localtime@plt>
    3383:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3386:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    338a:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    338e:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    3392:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3396:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    339a:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    339e:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    33a2:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    33a6:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    33aa:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    33ae:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    33b2:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    33b6:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    33ba:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    33bd:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    33c0:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    33c4:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    33c8:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    33cb:	8d 48 01             	lea    ecx,[rax+0x1]
    33ce:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    33d1:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    33d7:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    33db:	57                   	push   rdi
    33dc:	56                   	push   rsi
    33dd:	48 8d 35 4c 8e 00 00 	lea    rsi,[rip+0x8e4c]        # c230 <_IO_stdin_used+0x230>
    33e4:	48 89 c7             	mov    rdi,rax
    33e7:	b8 00 00 00 00       	mov    eax,0x0
    33ec:	e8 2f f2 ff ff       	call   2620 <sprintf@plt>
    33f1:	48 83 c4 10          	add    rsp,0x10
    33f5:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    33f9:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    33fd:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    3404:	00 00 
    3406:	74 05                	je     340d <get_formated_time+0xce>
    3408:	e8 33 f3 ff ff       	call   2740 <__stack_chk_fail@plt>
    340d:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3411:	c9                   	leave  
    3412:	c3                   	ret    

0000000000003413 <cb_get_formatted_time>:
    3413:	f3 0f 1e fa          	endbr64 
    3417:	55                   	push   rbp
    3418:	48 89 e5             	mov    rbp,rsp
    341b:	53                   	push   rbx
    341c:	48 83 ec 68          	sub    rsp,0x68
    3420:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3424:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    342b:	00 00 
    342d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    3431:	31 c0                	xor    eax,eax
    3433:	bf 00 00 00 00       	mov    edi,0x0
    3438:	e8 33 f4 ff ff       	call   2870 <time@plt>
    343d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3441:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    3445:	48 89 c7             	mov    rdi,rax
    3448:	e8 e3 f3 ff ff       	call   2830 <localtime@plt>
    344d:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3450:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    3454:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3458:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    345c:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3460:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3464:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3468:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    346c:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3470:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3474:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3478:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    347c:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3480:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3484:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3487:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    348a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    348e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3492:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3495:	8d 48 01             	lea    ecx,[rax+0x1]
    3498:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    349b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    34a1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    34a5:	57                   	push   rdi
    34a6:	56                   	push   rsi
    34a7:	48 8d 35 82 8d 00 00 	lea    rsi,[rip+0x8d82]        # c230 <_IO_stdin_used+0x230>
    34ae:	48 89 c7             	mov    rdi,rax
    34b1:	b8 00 00 00 00       	mov    eax,0x0
    34b6:	e8 65 f1 ff ff       	call   2620 <sprintf@plt>
    34bb:	48 83 c4 10          	add    rsp,0x10
    34bf:	90                   	nop
    34c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34c4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    34cb:	00 00 
    34cd:	74 05                	je     34d4 <cb_get_formatted_time+0xc1>
    34cf:	e8 6c f2 ff ff       	call   2740 <__stack_chk_fail@plt>
    34d4:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    34d8:	c9                   	leave  
    34d9:	c3                   	ret    

00000000000034da <strloc>:
    34da:	f3 0f 1e fa          	endbr64 
    34de:	55                   	push   rbp
    34df:	48 89 e5             	mov    rbp,rsp
    34e2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    34e6:	89 f0                	mov    eax,esi
    34e8:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    34eb:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    34f2:	eb 1e                	jmp    3512 <strloc+0x38>
    34f4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    34f7:	48 63 d0             	movsxd rdx,eax
    34fa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    34fe:	48 01 d0             	add    rax,rdx
    3501:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3504:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    3507:	75 05                	jne    350e <strloc+0x34>
    3509:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    350c:	eb 1d                	jmp    352b <strloc+0x51>
    350e:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    3512:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3515:	48 63 d0             	movsxd rdx,eax
    3518:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    351c:	48 01 d0             	add    rax,rdx
    351f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3522:	84 c0                	test   al,al
    3524:	75 ce                	jne    34f4 <strloc+0x1a>
    3526:	b8 ff ff ff ff       	mov    eax,0xffffffff
    352b:	5d                   	pop    rbp
    352c:	c3                   	ret    

000000000000352d <fail>:
    352d:	f3 0f 1e fa          	endbr64 
    3531:	55                   	push   rbp
    3532:	48 89 e5             	mov    rbp,rsp
    3535:	48 83 ec 10          	sub    rsp,0x10
    3539:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    353d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    3541:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    3545:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3549:	48 89 c6             	mov    rsi,rax
    354c:	48 8d 3d f9 8c 00 00 	lea    rdi,[rip+0x8cf9]        # c24c <_IO_stdin_used+0x24c>
    3553:	b8 00 00 00 00       	mov    eax,0x0
    3558:	e8 23 ef ff ff       	call   2480 <printf@plt>
    355d:	90                   	nop
    355e:	c9                   	leave  
    355f:	c3                   	ret    

0000000000003560 <char_is_printable>:
    3560:	f3 0f 1e fa          	endbr64 
    3564:	55                   	push   rbp
    3565:	48 89 e5             	mov    rbp,rsp
    3568:	89 f8                	mov    eax,edi
    356a:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    356d:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    3571:	7f 07                	jg     357a <char_is_printable+0x1a>
    3573:	b8 00 00 00 00       	mov    eax,0x0
    3578:	eb 05                	jmp    357f <char_is_printable+0x1f>
    357a:	b8 01 00 00 00       	mov    eax,0x1
    357f:	5d                   	pop    rbp
    3580:	c3                   	ret    

0000000000003581 <test_string_arr_print>:
    3581:	f3 0f 1e fa          	endbr64 
    3585:	55                   	push   rbp
    3586:	48 89 e5             	mov    rbp,rsp
    3589:	53                   	push   rbx
    358a:	48 83 ec 28          	sub    rsp,0x28
    358e:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    3592:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3599:	eb 2c                	jmp    35c7 <test_string_arr_print+0x46>
    359b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    359e:	48 63 d0             	movsxd rdx,eax
    35a1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    35a5:	48 01 d0             	add    rax,rdx
    35a8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35ab:	0f be c0             	movsx  eax,al
    35ae:	89 c7                	mov    edi,eax
    35b0:	e8 ab ff ff ff       	call   3560 <char_is_printable>
    35b5:	83 f0 01             	xor    eax,0x1
    35b8:	84 c0                	test   al,al
    35ba:	74 07                	je     35c3 <test_string_arr_print+0x42>
    35bc:	b8 00 00 00 00       	mov    eax,0x0
    35c1:	eb 20                	jmp    35e3 <test_string_arr_print+0x62>
    35c3:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    35c7:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    35ca:	48 63 d8             	movsxd rbx,eax
    35cd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    35d1:	48 89 c7             	mov    rdi,rax
    35d4:	e8 27 f0 ff ff       	call   2600 <strlen@plt>
    35d9:	48 39 c3             	cmp    rbx,rax
    35dc:	72 bd                	jb     359b <test_string_arr_print+0x1a>
    35de:	b8 01 00 00 00       	mov    eax,0x1
    35e3:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    35e7:	c9                   	leave  
    35e8:	c3                   	ret    

00000000000035e9 <ipv4pktmgr>:
    35e9:	f3 0f 1e fa          	endbr64 
    35ed:	55                   	push   rbp
    35ee:	48 89 e5             	mov    rbp,rsp
    35f1:	48 81 ec e0 04 00 00 	sub    rsp,0x4e0
    35f8:	48 89 bd 28 fb ff ff 	mov    QWORD PTR [rbp-0x4d8],rdi
    35ff:	48 89 b5 20 fb ff ff 	mov    QWORD PTR [rbp-0x4e0],rsi
    3606:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    360d:	00 00 
    360f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3613:	31 c0                	xor    eax,eax
    3615:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    361c:	48 83 c0 0e          	add    rax,0xe
    3620:	48 89 85 48 fb ff ff 	mov    QWORD PTR [rbp-0x4b8],rax
    3627:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    362e:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    3631:	89 c7                	mov    edi,eax
    3633:	e8 08 f0 ff ff       	call   2640 <ntohl@plt>
    3638:	89 85 6c fb ff ff    	mov    DWORD PTR [rbp-0x494],eax
    363e:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3645:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    3648:	89 c7                	mov    edi,eax
    364a:	e8 f1 ef ff ff       	call   2640 <ntohl@plt>
    364f:	89 85 68 fb ff ff    	mov    DWORD PTR [rbp-0x498],eax
    3655:	8b 95 68 fb ff ff    	mov    edx,DWORD PTR [rbp-0x498]
    365b:	8b 05 67 69 10 00    	mov    eax,DWORD PTR [rip+0x106967]        # 109fc8 <homenetmask>
    3661:	21 d0                	and    eax,edx
    3663:	89 85 3c fb ff ff    	mov    DWORD PTR [rbp-0x4c4],eax
    3669:	8b 95 6c fb ff ff    	mov    edx,DWORD PTR [rbp-0x494]
    366f:	8b 05 53 69 10 00    	mov    eax,DWORD PTR [rip+0x106953]        # 109fc8 <homenetmask>
    3675:	21 d0                	and    eax,edx
    3677:	89 85 40 fb ff ff    	mov    DWORD PTR [rbp-0x4c0],eax
    367d:	8b 05 41 69 10 00    	mov    eax,DWORD PTR [rip+0x106941]        # 109fc4 <homenet>
    3683:	39 85 3c fb ff ff    	cmp    DWORD PTR [rbp-0x4c4],eax
    3689:	75 0c                	jne    3697 <ipv4pktmgr+0xae>
    368b:	c7 85 70 fb ff ff 45 	mov    DWORD PTR [rbp-0x490],0x45
    3692:	00 00 00 
    3695:	eb 24                	jmp    36bb <ipv4pktmgr+0xd2>
    3697:	8b 05 27 69 10 00    	mov    eax,DWORD PTR [rip+0x106927]        # 109fc4 <homenet>
    369d:	39 85 40 fb ff ff    	cmp    DWORD PTR [rbp-0x4c0],eax
    36a3:	75 0c                	jne    36b1 <ipv4pktmgr+0xc8>
    36a5:	c7 85 70 fb ff ff 46 	mov    DWORD PTR [rbp-0x490],0x46
    36ac:	00 00 00 
    36af:	eb 0a                	jmp    36bb <ipv4pktmgr+0xd2>
    36b1:	c7 85 70 fb ff ff 47 	mov    DWORD PTR [rbp-0x490],0x47
    36b8:	00 00 00 
    36bb:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    36c2:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    36c5:	89 85 80 fb ff ff    	mov    DWORD PTR [rbp-0x480],eax
    36cb:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    36d2:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    36d9:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    36e0:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    36e3:	48 8b 95 28 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d8]
    36ea:	48 83 c2 0e          	add    rdx,0xe
    36ee:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    36f1:	83 e2 0f             	and    edx,0xf
    36f4:	0f b6 d2             	movzx  edx,dl
    36f7:	c1 e2 02             	shl    edx,0x2
    36fa:	29 d0                	sub    eax,edx
    36fc:	83 e8 0e             	sub    eax,0xe
    36ff:	89 85 44 fb ff ff    	mov    DWORD PTR [rbp-0x4bc],eax
    3705:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    370c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    370f:	89 c7                	mov    edi,eax
    3711:	e8 c9 f9 ff ff       	call   30df <ipv4_ntoa>
    3716:	48 89 c1             	mov    rcx,rax
    3719:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3720:	ba 10 00 00 00       	mov    edx,0x10
    3725:	48 89 ce             	mov    rsi,rcx
    3728:	48 89 c7             	mov    rdi,rax
    372b:	e8 90 f0 ff ff       	call   27c0 <strncpy@plt>
    3730:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3737:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    373a:	89 c7                	mov    edi,eax
    373c:	e8 9e f9 ff ff       	call   30df <ipv4_ntoa>
    3741:	48 89 c1             	mov    rcx,rax
    3744:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    374b:	ba 10 00 00 00       	mov    edx,0x10
    3750:	48 89 ce             	mov    rsi,rcx
    3753:	48 89 c7             	mov    rdi,rax
    3756:	e8 65 f0 ff ff       	call   27c0 <strncpy@plt>
    375b:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3762:	48 89 c7             	mov    rdi,rax
    3765:	e8 0c 42 00 00       	call   7976 <init_member>
    376a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3771:	48 89 c7             	mov    rdi,rax
    3774:	e8 fd 41 00 00       	call   7976 <init_member>
    3779:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3780:	48 89 c7             	mov    rdi,rax
    3783:	e8 bf 20 00 00       	call   5847 <is_blocked_ipv4>
    3788:	84 c0                	test   al,al
    378a:	74 44                	je     37d0 <ipv4pktmgr+0x1e7>
    378c:	b8 00 00 00 00       	mov    eax,0x0
    3791:	e8 a9 fb ff ff       	call   333f <get_formated_time>
    3796:	48 89 c6             	mov    rsi,rax
    3799:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    37a0:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37a7:	48 89 d1             	mov    rcx,rdx
    37aa:	48 89 f2             	mov    rdx,rsi
    37ad:	48 8d 35 a4 8a 00 00 	lea    rsi,[rip+0x8aa4]        # c258 <_IO_stdin_used+0x258>
    37b4:	48 89 c7             	mov    rdi,rax
    37b7:	b8 00 00 00 00       	mov    eax,0x0
    37bc:	e8 5f ee ff ff       	call   2620 <sprintf@plt>
    37c1:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37c8:	48 89 c7             	mov    rdi,rax
    37cb:	e8 b7 5b 00 00       	call   9387 <saprintf>
    37d0:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37d7:	48 89 c7             	mov    rdi,rax
    37da:	e8 68 20 00 00       	call   5847 <is_blocked_ipv4>
    37df:	84 c0                	test   al,al
    37e1:	74 44                	je     3827 <ipv4pktmgr+0x23e>
    37e3:	b8 00 00 00 00       	mov    eax,0x0
    37e8:	e8 52 fb ff ff       	call   333f <get_formated_time>
    37ed:	48 89 c6             	mov    rsi,rax
    37f0:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    37f7:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37fe:	48 89 d1             	mov    rcx,rdx
    3801:	48 89 f2             	mov    rdx,rsi
    3804:	48 8d 35 7d 8a 00 00 	lea    rsi,[rip+0x8a7d]        # c288 <_IO_stdin_used+0x288>
    380b:	48 89 c7             	mov    rdi,rax
    380e:	b8 00 00 00 00       	mov    eax,0x0
    3813:	e8 08 ee ff ff       	call   2620 <sprintf@plt>
    3818:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    381f:	48 89 c7             	mov    rdi,rax
    3822:	e8 60 5b 00 00       	call   9387 <saprintf>
    3827:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    382e:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    3835:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    383c:	48 89 85 60 fb ff ff 	mov    QWORD PTR [rbp-0x4a0],rax
    3843:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    384a:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    384e:	66 83 f8 20          	cmp    ax,0x20
    3852:	74 11                	je     3865 <ipv4pktmgr+0x27c>
    3854:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    385b:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    385f:	66 3d 02 01          	cmp    ax,0x102
    3863:	75 66                	jne    38cb <ipv4pktmgr+0x2e2>
    3865:	48 8d 35 44 8a 00 00 	lea    rsi,[rip+0x8a44]        # c2b0 <_IO_stdin_used+0x2b0>
    386c:	48 8d 3d 42 8a 00 00 	lea    rdi,[rip+0x8a42]        # c2b5 <_IO_stdin_used+0x2b5>
    3873:	b8 00 00 00 00       	mov    eax,0x0
    3878:	e8 03 ec ff ff       	call   2480 <printf@plt>
    387d:	0f b6 05 e0 66 10 00 	movzx  eax,BYTE PTR [rip+0x1066e0]        # 109f64 <packet_print>
    3884:	84 c0                	test   al,al
    3886:	74 1a                	je     38a2 <ipv4pktmgr+0x2b9>
    3888:	48 8d 35 34 8a 00 00 	lea    rsi,[rip+0x8a34]        # c2c3 <_IO_stdin_used+0x2c3>
    388f:	48 8d 3d 32 8a 00 00 	lea    rdi,[rip+0x8a32]        # c2c8 <_IO_stdin_used+0x2c8>
    3896:	b8 00 00 00 00       	mov    eax,0x0
    389b:	e8 e0 eb ff ff       	call   2480 <printf@plt>
    38a0:	eb 29                	jmp    38cb <ipv4pktmgr+0x2e2>
    38a2:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    38a9:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38b0:	48 8d 0d 0c 8a 00 00 	lea    rcx,[rip+0x8a0c]        # c2c3 <_IO_stdin_used+0x2c3>
    38b7:	48 89 c6             	mov    rsi,rax
    38ba:	48 8d 3d 0a 8a 00 00 	lea    rdi,[rip+0x8a0a]        # c2cb <_IO_stdin_used+0x2cb>
    38c1:	b8 00 00 00 00       	mov    eax,0x0
    38c6:	e8 b5 eb ff ff       	call   2480 <printf@plt>
    38cb:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    38d2:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    38d6:	0f b6 c0             	movzx  eax,al
    38d9:	83 f8 11             	cmp    eax,0x11
    38dc:	0f 84 b8 00 00 00    	je     399a <ipv4pktmgr+0x3b1>
    38e2:	83 f8 11             	cmp    eax,0x11
    38e5:	0f 8f db 00 00 00    	jg     39c6 <ipv4pktmgr+0x3dd>
    38eb:	83 f8 06             	cmp    eax,0x6
    38ee:	74 7e                	je     396e <ipv4pktmgr+0x385>
    38f0:	83 f8 06             	cmp    eax,0x6
    38f3:	0f 8f cd 00 00 00    	jg     39c6 <ipv4pktmgr+0x3dd>
    38f9:	83 f8 01             	cmp    eax,0x1
    38fc:	74 0a                	je     3908 <ipv4pktmgr+0x31f>
    38fe:	83 f8 02             	cmp    eax,0x2
    3901:	74 2d                	je     3930 <ipv4pktmgr+0x347>
    3903:	e9 be 00 00 00       	jmp    39c6 <ipv4pktmgr+0x3dd>
    3908:	c7 85 7c fb ff ff 80 	mov    DWORD PTR [rbp-0x484],0x80
    390f:	00 00 00 
    3912:	48 8d 95 50 fb ff ff 	lea    rdx,[rbp-0x4b0]
    3919:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3920:	48 89 d6             	mov    rsi,rdx
    3923:	48 89 c7             	mov    rdi,rax
    3926:	e8 40 02 00 00       	call   3b6b <ip4_icmp_decode>
    392b:	e9 c7 00 00 00       	jmp    39f7 <ipv4pktmgr+0x40e>
    3930:	c7 85 7c fb ff ff ff 	mov    DWORD PTR [rbp-0x484],0xffffffff
    3937:	ff ff ff 
    393a:	8b 05 00 d7 00 00    	mov    eax,DWORD PTR [rip+0xd700]        # 11040 <total_conversations>
    3940:	83 e8 01             	sub    eax,0x1
    3943:	89 05 f7 d6 00 00    	mov    DWORD PTR [rip+0xd6f7],eax        # 11040 <total_conversations>
    3949:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    3950:	48 8b 8d 58 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x4a8]
    3957:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    395e:	48 89 ce             	mov    rsi,rcx
    3961:	48 89 c7             	mov    rdi,rax
    3964:	e8 57 14 00 00       	call   4dc0 <ip4_igmp_decode>
    3969:	e9 89 00 00 00       	jmp    39f7 <ipv4pktmgr+0x40e>
    396e:	c7 85 7c fb ff ff 7e 	mov    DWORD PTR [rbp-0x484],0x7e
    3975:	00 00 00 
    3978:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    397f:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    3986:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    398d:	48 89 ce             	mov    rsi,rcx
    3990:	48 89 c7             	mov    rdi,rax
    3993:	e8 17 0a 00 00       	call   43af <ip4_tcp_decode>
    3998:	eb 5d                	jmp    39f7 <ipv4pktmgr+0x40e>
    399a:	c7 85 7c fb ff ff 7f 	mov    DWORD PTR [rbp-0x484],0x7f
    39a1:	00 00 00 
    39a4:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    39ab:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    39b2:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39b9:	48 89 ce             	mov    rsi,rcx
    39bc:	48 89 c7             	mov    rdi,rax
    39bf:	e8 a7 12 00 00       	call   4c6b <ip4_udp_decode>
    39c4:	eb 31                	jmp    39f7 <ipv4pktmgr+0x40e>
    39c6:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    39cd:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    39d1:	0f b6 c8             	movzx  ecx,al
    39d4:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    39db:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    39e2:	48 89 c6             	mov    rsi,rax
    39e5:	48 8d 3d ec 88 00 00 	lea    rdi,[rip+0x88ec]        # c2d8 <_IO_stdin_used+0x2d8>
    39ec:	b8 00 00 00 00       	mov    eax,0x0
    39f1:	e8 8a ea ff ff       	call   2480 <printf@plt>
    39f6:	90                   	nop
    39f7:	90                   	nop
    39f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    39fc:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3a03:	00 00 
    3a05:	74 05                	je     3a0c <ipv4pktmgr+0x423>
    3a07:	e8 34 ed ff ff       	call   2740 <__stack_chk_fail@plt>
    3a0c:	c9                   	leave  
    3a0d:	c3                   	ret    

0000000000003a0e <ip6_icmp_decode>:
    3a0e:	f3 0f 1e fa          	endbr64 
    3a12:	55                   	push   rbp
    3a13:	48 89 e5             	mov    rbp,rsp
    3a16:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3a1a:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3a1e:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3a22:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3a26:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3a2d:	00 00 
    3a2f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3a33:	31 c0                	xor    eax,eax
    3a35:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3a39:	48 83 c0 36          	add    rax,0x36
    3a3d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3a41:	0f b6 05 1c 65 10 00 	movzx  eax,BYTE PTR [rip+0x10651c]        # 109f64 <packet_print>
    3a48:	84 c0                	test   al,al
    3a4a:	0f 84 04 01 00 00    	je     3b54 <ip6_icmp_decode+0x146>
    3a50:	48 8d 35 a9 88 00 00 	lea    rsi,[rip+0x88a9]        # c300 <_IO_stdin_used+0x300>
    3a57:	48 8d 3d a8 88 00 00 	lea    rdi,[rip+0x88a8]        # c306 <_IO_stdin_used+0x306>
    3a5e:	b8 00 00 00 00       	mov    eax,0x0
    3a63:	e8 18 ea ff ff       	call   2480 <printf@plt>
    3a68:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3a6c:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3a70:	48 89 c6             	mov    rsi,rax
    3a73:	48 8d 3d 8f 88 00 00 	lea    rdi,[rip+0x888f]        # c309 <_IO_stdin_used+0x309>
    3a7a:	b8 00 00 00 00       	mov    eax,0x0
    3a7f:	e8 fc e9 ff ff       	call   2480 <printf@plt>
    3a84:	48 8d 3d 8d 88 00 00 	lea    rdi,[rip+0x888d]        # c318 <_IO_stdin_used+0x318>
    3a8b:	b8 00 00 00 00       	mov    eax,0x0
    3a90:	e8 eb e9 ff ff       	call   2480 <printf@plt>
    3a95:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3a99:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3a9c:	0f b6 c0             	movzx  eax,al
    3a9f:	3d 8f 00 00 00       	cmp    eax,0x8f
    3aa4:	74 68                	je     3b0e <ip6_icmp_decode+0x100>
    3aa6:	3d 8f 00 00 00       	cmp    eax,0x8f
    3aab:	0f 8f 8b 00 00 00    	jg     3b3c <ip6_icmp_decode+0x12e>
    3ab1:	3d 87 00 00 00       	cmp    eax,0x87
    3ab6:	74 77                	je     3b2f <ip6_icmp_decode+0x121>
    3ab8:	3d 87 00 00 00       	cmp    eax,0x87
    3abd:	7f 7d                	jg     3b3c <ip6_icmp_decode+0x12e>
    3abf:	3d 82 00 00 00       	cmp    eax,0x82
    3ac4:	74 56                	je     3b1c <ip6_icmp_decode+0x10e>
    3ac6:	3d 85 00 00 00       	cmp    eax,0x85
    3acb:	75 6f                	jne    3b3c <ip6_icmp_decode+0x12e>
    3acd:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3ad1:	48 83 c0 0a          	add    rax,0xa
    3ad5:	48 89 c7             	mov    rdi,rax
    3ad8:	e8 19 f4 ff ff       	call   2ef6 <mac_ntoa>
    3add:	48 89 c1             	mov    rcx,rax
    3ae0:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3ae4:	ba 40 00 00 00       	mov    edx,0x40
    3ae9:	48 89 ce             	mov    rsi,rcx
    3aec:	48 89 c7             	mov    rdi,rax
    3aef:	e8 cc ec ff ff       	call   27c0 <strncpy@plt>
    3af4:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3af8:	48 89 c6             	mov    rsi,rax
    3afb:	48 8d 3d 1f 88 00 00 	lea    rdi,[rip+0x881f]        # c321 <_IO_stdin_used+0x321>
    3b02:	b8 00 00 00 00       	mov    eax,0x0
    3b07:	e8 74 e9 ff ff       	call   2480 <printf@plt>
    3b0c:	eb 2e                	jmp    3b3c <ip6_icmp_decode+0x12e>
    3b0e:	48 8d 3d 2b 88 00 00 	lea    rdi,[rip+0x882b]        # c340 <_IO_stdin_used+0x340>
    3b15:	e8 c6 e9 ff ff       	call   24e0 <puts@plt>
    3b1a:	eb 20                	jmp    3b3c <ip6_icmp_decode+0x12e>
    3b1c:	48 8d 3d 42 88 00 00 	lea    rdi,[rip+0x8842]        # c365 <_IO_stdin_used+0x365>
    3b23:	b8 00 00 00 00       	mov    eax,0x0
    3b28:	e8 53 e9 ff ff       	call   2480 <printf@plt>
    3b2d:	eb 0d                	jmp    3b3c <ip6_icmp_decode+0x12e>
    3b2f:	48 8d 3d 49 88 00 00 	lea    rdi,[rip+0x8849]        # c37f <_IO_stdin_used+0x37f>
    3b36:	e8 a5 e9 ff ff       	call   24e0 <puts@plt>
    3b3b:	90                   	nop
    3b3c:	48 8d 35 52 88 00 00 	lea    rsi,[rip+0x8852]        # c395 <_IO_stdin_used+0x395>
    3b43:	48 8d 3d bc 87 00 00 	lea    rdi,[rip+0x87bc]        # c306 <_IO_stdin_used+0x306>
    3b4a:	b8 00 00 00 00       	mov    eax,0x0
    3b4f:	e8 2c e9 ff ff       	call   2480 <printf@plt>
    3b54:	90                   	nop
    3b55:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3b59:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3b60:	00 00 
    3b62:	74 05                	je     3b69 <ip6_icmp_decode+0x15b>
    3b64:	e8 d7 eb ff ff       	call   2740 <__stack_chk_fail@plt>
    3b69:	c9                   	leave  
    3b6a:	c3                   	ret    

0000000000003b6b <ip4_icmp_decode>:
    3b6b:	f3 0f 1e fa          	endbr64 
    3b6f:	55                   	push   rbp
    3b70:	48 89 e5             	mov    rbp,rsp
    3b73:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3b7a:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3b81:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3b88:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3b8f:	00 00 
    3b91:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3b95:	31 c0                	xor    eax,eax
    3b97:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3b9e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3ba2:	ba 5e 00 00 00       	mov    edx,0x5e
    3ba7:	be 01 00 00 00       	mov    esi,0x1
    3bac:	48 89 c7             	mov    rdi,rax
    3baf:	e8 0b 13 00 00       	call   4ebf <add_ip_addr_or_inc_counter>
    3bb4:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bbb:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3bbf:	ba 5e 00 00 00       	mov    edx,0x5e
    3bc4:	be 00 00 00 00       	mov    esi,0x0
    3bc9:	48 89 c7             	mov    rdi,rax
    3bcc:	e8 ee 12 00 00       	call   4ebf <add_ip_addr_or_inc_counter>
    3bd1:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bd8:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3bdc:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3be3:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3bea:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3bee:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3bf5:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3bfc:	48 83 c0 22          	add    rax,0x22
    3c00:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3c07:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c0e:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3c12:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c19:	48 89 10             	mov    QWORD PTR [rax],rdx
    3c1c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c23:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3c2a:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    3c2e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c35:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c38:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3c3e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c45:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c48:	8d 50 d6             	lea    edx,[rax-0x2a]
    3c4b:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c52:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3c55:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3c5c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3c5f:	3c 08                	cmp    al,0x8
    3c61:	0f 85 55 01 00 00    	jne    3dbc <ip4_icmp_decode+0x251>
    3c67:	8b 05 1b d4 00 00    	mov    eax,DWORD PTR [rip+0xd41b]        # 11088 <strict_nmap_host_alive_check>
    3c6d:	83 f8 01             	cmp    eax,0x1
    3c70:	0f 85 46 01 00 00    	jne    3dbc <ip4_icmp_decode+0x251>
    3c76:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c7d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c81:	48 89 c7             	mov    rdi,rax
    3c84:	e8 7b 3c 00 00       	call   7904 <member_exists>
    3c89:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3c8f:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3c96:	0f 84 83 00 00 00    	je     3d1f <ip4_icmp_decode+0x1b4>
    3c9c:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3ca2:	48 63 d0             	movsxd rdx,eax
    3ca5:	48 89 d0             	mov    rax,rdx
    3ca8:	48 c1 e0 02          	shl    rax,0x2
    3cac:	48 01 d0             	add    rax,rdx
    3caf:	48 c1 e0 03          	shl    rax,0x3
    3cb3:	48 01 d0             	add    rax,rdx
    3cb6:	48 c1 e0 04          	shl    rax,0x4
    3cba:	48 8d 15 5f f8 0e 00 	lea    rdx,[rip+0xef85f]        # f3520 <watchlist>
    3cc1:	48 01 d0             	add    rax,rdx
    3cc4:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3ccb:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cd2:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3cd5:	85 c0                	test   eax,eax
    3cd7:	0f 85 a8 02 00 00    	jne    3f85 <ip4_icmp_decode+0x41a>
    3cdd:	bf 00 00 00 00       	mov    edi,0x0
    3ce2:	e8 89 eb ff ff       	call   2870 <time@plt>
    3ce7:	48 89 c2             	mov    rdx,rax
    3cea:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cf1:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3cf5:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3cfc:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3d03:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d0a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d0d:	8d 50 01             	lea    edx,[rax+0x1]
    3d10:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d17:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3d1a:	e9 66 02 00 00       	jmp    3f85 <ip4_icmp_decode+0x41a>
    3d1f:	8b 05 f3 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2f3]        # 11018 <watchlist_num>
    3d25:	83 c0 01             	add    eax,0x1
    3d28:	89 05 ea d2 00 00    	mov    DWORD PTR [rip+0xd2ea],eax        # 11018 <watchlist_num>
    3d2e:	8b 05 e4 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2e4]        # 11018 <watchlist_num>
    3d34:	48 63 d0             	movsxd rdx,eax
    3d37:	48 89 d0             	mov    rax,rdx
    3d3a:	48 c1 e0 02          	shl    rax,0x2
    3d3e:	48 01 d0             	add    rax,rdx
    3d41:	48 c1 e0 03          	shl    rax,0x3
    3d45:	48 01 d0             	add    rax,rdx
    3d48:	48 c1 e0 04          	shl    rax,0x4
    3d4c:	48 8d 15 cd f7 0e 00 	lea    rdx,[rip+0xef7cd]        # f3520 <watchlist>
    3d53:	48 01 d0             	add    rax,rdx
    3d56:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3d5d:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d64:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3d68:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3d6f:	48 89 c6             	mov    rsi,rax
    3d72:	48 89 d7             	mov    rdi,rdx
    3d75:	e8 f6 e9 ff ff       	call   2770 <strcpy@plt>
    3d7a:	bf 00 00 00 00       	mov    edi,0x0
    3d7f:	e8 ec ea ff ff       	call   2870 <time@plt>
    3d84:	48 89 c2             	mov    rdx,rax
    3d87:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d8e:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d92:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3d99:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3da0:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3da7:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3daa:	8d 50 01             	lea    edx,[rax+0x1]
    3dad:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3db4:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3db7:	e9 c9 01 00 00       	jmp    3f85 <ip4_icmp_decode+0x41a>
    3dbc:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3dc3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3dc6:	3c 0d                	cmp    al,0xd
    3dc8:	0f 85 ba 01 00 00    	jne    3f88 <ip4_icmp_decode+0x41d>
    3dce:	8b 05 b0 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2b0]        # 11084 <strict_icmp_timestamp_req>
    3dd4:	83 f8 01             	cmp    eax,0x1
    3dd7:	74 0f                	je     3de8 <ip4_icmp_decode+0x27d>
    3dd9:	8b 05 a9 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2a9]        # 11088 <strict_nmap_host_alive_check>
    3ddf:	83 f8 01             	cmp    eax,0x1
    3de2:	0f 85 a0 01 00 00    	jne    3f88 <ip4_icmp_decode+0x41d>
    3de8:	8b 05 96 d2 00 00    	mov    eax,DWORD PTR [rip+0xd296]        # 11084 <strict_icmp_timestamp_req>
    3dee:	85 c0                	test   eax,eax
    3df0:	74 22                	je     3e14 <ip4_icmp_decode+0x2a9>
    3df2:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3df9:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e00:	48 89 c6             	mov    rsi,rax
    3e03:	48 8d 3d 96 85 00 00 	lea    rdi,[rip+0x8596]        # c3a0 <_IO_stdin_used+0x3a0>
    3e0a:	b8 00 00 00 00       	mov    eax,0x0
    3e0f:	e8 6c e6 ff ff       	call   2480 <printf@plt>
    3e14:	8b 05 6e d2 00 00    	mov    eax,DWORD PTR [rip+0xd26e]        # 11088 <strict_nmap_host_alive_check>
    3e1a:	85 c0                	test   eax,eax
    3e1c:	0f 84 66 01 00 00    	je     3f88 <ip4_icmp_decode+0x41d>
    3e22:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e29:	48 89 c7             	mov    rdi,rax
    3e2c:	e8 d3 3a 00 00       	call   7904 <member_exists>
    3e31:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3e37:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3e3e:	0f 84 44 01 00 00    	je     3f88 <ip4_icmp_decode+0x41d>
    3e44:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3e4a:	48 63 d0             	movsxd rdx,eax
    3e4d:	48 89 d0             	mov    rax,rdx
    3e50:	48 c1 e0 02          	shl    rax,0x2
    3e54:	48 01 d0             	add    rax,rdx
    3e57:	48 c1 e0 03          	shl    rax,0x3
    3e5b:	48 01 d0             	add    rax,rdx
    3e5e:	48 c1 e0 04          	shl    rax,0x4
    3e62:	48 8d 15 b7 f6 0e 00 	lea    rdx,[rip+0xef6b7]        # f3520 <watchlist>
    3e69:	48 01 d0             	add    rax,rdx
    3e6c:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3e73:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e7a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e7d:	83 f8 03             	cmp    eax,0x3
    3e80:	0f 85 05 01 00 00    	jne    3f8b <ip4_icmp_decode+0x420>
    3e86:	bf 00 00 00 00       	mov    edi,0x0
    3e8b:	e8 e0 e9 ff ff       	call   2870 <time@plt>
    3e90:	48 89 c2             	mov    rdx,rax
    3e93:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3e9a:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3e9e:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ea5:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3ea9:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3eb0:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3eb4:	48 89 d0             	mov    rax,rdx
    3eb7:	48 29 c8             	sub    rax,rcx
    3eba:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3ec0:	0f 87 c2 00 00 00    	ja     3f88 <ip4_icmp_decode+0x41d>
    3ec6:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3ecd:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3ed4:	48 89 c6             	mov    rsi,rax
    3ed7:	48 8d 3d 0a 85 00 00 	lea    rdi,[rip+0x850a]        # c3e8 <_IO_stdin_used+0x3e8>
    3ede:	b8 00 00 00 00       	mov    eax,0x0
    3ee3:	e8 98 e5 ff ff       	call   2480 <printf@plt>
    3ee8:	48 8b 05 41 d1 00 00 	mov    rax,QWORD PTR [rip+0xd141]        # 11030 <def_log_file>
    3eef:	48 8d 35 5c 85 00 00 	lea    rsi,[rip+0x855c]        # c452 <_IO_stdin_used+0x452>
    3ef6:	48 89 c7             	mov    rdi,rax
    3ef9:	e8 72 e6 ff ff       	call   2570 <fopen@plt>
    3efe:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3f05:	b8 00 00 00 00       	mov    eax,0x0
    3f0a:	e8 30 f4 ff ff       	call   333f <get_formated_time>
    3f0f:	48 89 c6             	mov    rsi,rax
    3f12:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3f19:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3f20:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f27:	49 89 f0             	mov    r8,rsi
    3f2a:	48 8d 35 27 85 00 00 	lea    rsi,[rip+0x8527]        # c458 <_IO_stdin_used+0x458>
    3f31:	48 89 c7             	mov    rdi,rax
    3f34:	b8 00 00 00 00       	mov    eax,0x0
    3f39:	e8 e2 e6 ff ff       	call   2620 <sprintf@plt>
    3f3e:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3f45:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f4c:	48 89 d6             	mov    rsi,rdx
    3f4f:	48 89 c7             	mov    rdi,rax
    3f52:	e8 39 e7 ff ff       	call   2690 <fputs@plt>
    3f57:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3f5e:	48 89 c7             	mov    rdi,rax
    3f61:	e8 4a e8 ff ff       	call   27b0 <fclose@plt>
    3f66:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f6d:	48 83 c0 28          	add    rax,0x28
    3f71:	ba 28 00 00 00       	mov    edx,0x28
    3f76:	be 00 00 00 00       	mov    esi,0x0
    3f7b:	48 89 c7             	mov    rdi,rax
    3f7e:	e8 0d e5 ff ff       	call   2490 <memset@plt>
    3f83:	eb 07                	jmp    3f8c <ip4_icmp_decode+0x421>
    3f85:	90                   	nop
    3f86:	eb 04                	jmp    3f8c <ip4_icmp_decode+0x421>
    3f88:	90                   	nop
    3f89:	eb 01                	jmp    3f8c <ip4_icmp_decode+0x421>
    3f8b:	90                   	nop
    3f8c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3f93:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    3f9a:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3fa1:	48 89 c7             	mov    rdi,rax
    3fa4:	e8 50 24 00 00       	call   63f9 <rulemgr>
    3fa9:	0f b6 05 b4 5f 10 00 	movzx  eax,BYTE PTR [rip+0x105fb4]        # 109f64 <packet_print>
    3fb0:	84 c0                	test   al,al
    3fb2:	0f 84 e0 03 00 00    	je     4398 <ip4_icmp_decode+0x82d>
    3fb8:	48 8d 35 41 83 00 00 	lea    rsi,[rip+0x8341]        # c300 <_IO_stdin_used+0x300>
    3fbf:	48 8d 3d 40 83 00 00 	lea    rdi,[rip+0x8340]        # c306 <_IO_stdin_used+0x306>
    3fc6:	b8 00 00 00 00       	mov    eax,0x0
    3fcb:	e8 b0 e4 ff ff       	call   2480 <printf@plt>
    3fd0:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3fd7:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3fde:	48 89 c6             	mov    rsi,rax
    3fe1:	48 8d 3d e0 84 00 00 	lea    rdi,[rip+0x84e0]        # c4c8 <_IO_stdin_used+0x4c8>
    3fe8:	b8 00 00 00 00       	mov    eax,0x0
    3fed:	e8 8e e4 ff ff       	call   2480 <printf@plt>
    3ff2:	48 8d 3d de 84 00 00 	lea    rdi,[rip+0x84de]        # c4d7 <_IO_stdin_used+0x4d7>
    3ff9:	b8 00 00 00 00       	mov    eax,0x0
    3ffe:	e8 7d e4 ff ff       	call   2480 <printf@plt>
    4003:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    400a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    400d:	0f b6 c0             	movzx  eax,al
    4010:	83 f8 0e             	cmp    eax,0xe
    4013:	0f 87 46 03 00 00    	ja     435f <ip4_icmp_decode+0x7f4>
    4019:	89 c0                	mov    eax,eax
    401b:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    4022:	00 
    4023:	48 8d 05 b6 88 00 00 	lea    rax,[rip+0x88b6]        # c8e0 <_IO_stdin_used+0x8e0>
    402a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    402d:	48 98                	cdqe   
    402f:	48 8d 15 aa 88 00 00 	lea    rdx,[rip+0x88aa]        # c8e0 <_IO_stdin_used+0x8e0>
    4036:	48 01 d0             	add    rax,rdx
    4039:	3e ff e0             	notrack jmp rax
    403c:	48 8d 3d 9b 84 00 00 	lea    rdi,[rip+0x849b]        # c4de <_IO_stdin_used+0x4de>
    4043:	e8 98 e4 ff ff       	call   24e0 <puts@plt>
    4048:	e9 33 03 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    404d:	48 8d 3d 96 84 00 00 	lea    rdi,[rip+0x8496]        # c4ea <_IO_stdin_used+0x4ea>
    4054:	b8 00 00 00 00       	mov    eax,0x0
    4059:	e8 22 e4 ff ff       	call   2480 <printf@plt>
    405e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4065:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4069:	0f b6 c0             	movzx  eax,al
    406c:	83 f8 0f             	cmp    eax,0xf
    406f:	0f 87 1e 01 00 00    	ja     4193 <ip4_icmp_decode+0x628>
    4075:	89 c0                	mov    eax,eax
    4077:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    407e:	00 
    407f:	48 8d 05 96 88 00 00 	lea    rax,[rip+0x8896]        # c91c <_IO_stdin_used+0x91c>
    4086:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4089:	48 98                	cdqe   
    408b:	48 8d 15 8a 88 00 00 	lea    rdx,[rip+0x888a]        # c91c <_IO_stdin_used+0x91c>
    4092:	48 01 d0             	add    rax,rdx
    4095:	3e ff e0             	notrack jmp rax
    4098:	48 8d 3d 65 84 00 00 	lea    rdi,[rip+0x8465]        # c504 <_IO_stdin_used+0x504>
    409f:	e8 3c e4 ff ff       	call   24e0 <puts@plt>
    40a4:	e9 0c 01 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40a9:	48 8d 3d 6b 84 00 00 	lea    rdi,[rip+0x846b]        # c51b <_IO_stdin_used+0x51b>
    40b0:	e8 2b e4 ff ff       	call   24e0 <puts@plt>
    40b5:	e9 fb 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40ba:	48 8d 3d 6e 84 00 00 	lea    rdi,[rip+0x846e]        # c52f <_IO_stdin_used+0x52f>
    40c1:	e8 1a e4 ff ff       	call   24e0 <puts@plt>
    40c6:	e9 ea 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40cb:	48 8d 3d 75 84 00 00 	lea    rdi,[rip+0x8475]        # c547 <_IO_stdin_used+0x547>
    40d2:	e8 09 e4 ff ff       	call   24e0 <puts@plt>
    40d7:	e9 d9 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40dc:	48 8d 3d 78 84 00 00 	lea    rdi,[rip+0x8478]        # c55b <_IO_stdin_used+0x55b>
    40e3:	e8 f8 e3 ff ff       	call   24e0 <puts@plt>
    40e8:	e9 c8 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40ed:	48 8d 3d 7f 84 00 00 	lea    rdi,[rip+0x847f]        # c573 <_IO_stdin_used+0x573>
    40f4:	e8 e7 e3 ff ff       	call   24e0 <puts@plt>
    40f9:	e9 b7 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    40fe:	48 8d 3d 8b 84 00 00 	lea    rdi,[rip+0x848b]        # c590 <_IO_stdin_used+0x590>
    4105:	e8 d6 e3 ff ff       	call   24e0 <puts@plt>
    410a:	e9 a6 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    410f:	48 8d 3d a2 84 00 00 	lea    rdi,[rip+0x84a2]        # c5b8 <_IO_stdin_used+0x5b8>
    4116:	e8 c5 e3 ff ff       	call   24e0 <puts@plt>
    411b:	e9 95 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    4120:	48 8d 3d b1 84 00 00 	lea    rdi,[rip+0x84b1]        # c5d8 <_IO_stdin_used+0x5d8>
    4127:	e8 b4 e3 ff ff       	call   24e0 <puts@plt>
    412c:	e9 84 00 00 00       	jmp    41b5 <ip4_icmp_decode+0x64a>
    4131:	48 8d 3d b8 84 00 00 	lea    rdi,[rip+0x84b8]        # c5f0 <_IO_stdin_used+0x5f0>
    4138:	e8 a3 e3 ff ff       	call   24e0 <puts@plt>
    413d:	eb 76                	jmp    41b5 <ip4_icmp_decode+0x64a>
    413f:	48 8d 3d d2 84 00 00 	lea    rdi,[rip+0x84d2]        # c618 <_IO_stdin_used+0x618>
    4146:	e8 95 e3 ff ff       	call   24e0 <puts@plt>
    414b:	eb 68                	jmp    41b5 <ip4_icmp_decode+0x64a>
    414d:	48 8d 3d ec 84 00 00 	lea    rdi,[rip+0x84ec]        # c640 <_IO_stdin_used+0x640>
    4154:	e8 87 e3 ff ff       	call   24e0 <puts@plt>
    4159:	eb 5a                	jmp    41b5 <ip4_icmp_decode+0x64a>
    415b:	48 8d 3d fd 84 00 00 	lea    rdi,[rip+0x84fd]        # c65f <_IO_stdin_used+0x65f>
    4162:	e8 79 e3 ff ff       	call   24e0 <puts@plt>
    4167:	eb 4c                	jmp    41b5 <ip4_icmp_decode+0x64a>
    4169:	48 8d 3d 10 85 00 00 	lea    rdi,[rip+0x8510]        # c680 <_IO_stdin_used+0x680>
    4170:	e8 6b e3 ff ff       	call   24e0 <puts@plt>
    4175:	eb 3e                	jmp    41b5 <ip4_icmp_decode+0x64a>
    4177:	48 8d 3d 2f 85 00 00 	lea    rdi,[rip+0x852f]        # c6ad <_IO_stdin_used+0x6ad>
    417e:	e8 5d e3 ff ff       	call   24e0 <puts@plt>
    4183:	eb 30                	jmp    41b5 <ip4_icmp_decode+0x64a>
    4185:	48 8d 3d 44 85 00 00 	lea    rdi,[rip+0x8544]        # c6d0 <_IO_stdin_used+0x6d0>
    418c:	e8 4f e3 ff ff       	call   24e0 <puts@plt>
    4191:	eb 22                	jmp    41b5 <ip4_icmp_decode+0x64a>
    4193:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    419a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    419e:	0f b6 c0             	movzx  eax,al
    41a1:	89 c6                	mov    esi,eax
    41a3:	48 8d 3d 45 85 00 00 	lea    rdi,[rip+0x8545]        # c6ef <_IO_stdin_used+0x6ef>
    41aa:	b8 00 00 00 00       	mov    eax,0x0
    41af:	e8 cc e2 ff ff       	call   2480 <printf@plt>
    41b4:	90                   	nop
    41b5:	e9 c6 01 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    41ba:	48 8d 3d 47 85 00 00 	lea    rdi,[rip+0x8547]        # c708 <_IO_stdin_used+0x708>
    41c1:	e8 1a e3 ff ff       	call   24e0 <puts@plt>
    41c6:	e9 b5 01 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    41cb:	48 8d 3d 55 85 00 00 	lea    rdi,[rip+0x8555]        # c727 <_IO_stdin_used+0x727>
    41d2:	b8 00 00 00 00       	mov    eax,0x0
    41d7:	e8 a4 e2 ff ff       	call   2480 <printf@plt>
    41dc:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    41e3:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    41e7:	0f b6 c0             	movzx  eax,al
    41ea:	83 f8 03             	cmp    eax,0x3
    41ed:	74 44                	je     4233 <ip4_icmp_decode+0x6c8>
    41ef:	83 f8 03             	cmp    eax,0x3
    41f2:	7f 4d                	jg     4241 <ip4_icmp_decode+0x6d6>
    41f4:	83 f8 02             	cmp    eax,0x2
    41f7:	74 2c                	je     4225 <ip4_icmp_decode+0x6ba>
    41f9:	83 f8 02             	cmp    eax,0x2
    41fc:	7f 43                	jg     4241 <ip4_icmp_decode+0x6d6>
    41fe:	85 c0                	test   eax,eax
    4200:	74 07                	je     4209 <ip4_icmp_decode+0x69e>
    4202:	83 f8 01             	cmp    eax,0x1
    4205:	74 10                	je     4217 <ip4_icmp_decode+0x6ac>
    4207:	eb 38                	jmp    4241 <ip4_icmp_decode+0x6d6>
    4209:	48 8d 3d 23 85 00 00 	lea    rdi,[rip+0x8523]        # c733 <_IO_stdin_used+0x733>
    4210:	e8 cb e2 ff ff       	call   24e0 <puts@plt>
    4215:	eb 4c                	jmp    4263 <ip4_icmp_decode+0x6f8>
    4217:	48 8d 3d 2d 85 00 00 	lea    rdi,[rip+0x852d]        # c74b <_IO_stdin_used+0x74b>
    421e:	e8 bd e2 ff ff       	call   24e0 <puts@plt>
    4223:	eb 3e                	jmp    4263 <ip4_icmp_decode+0x6f8>
    4225:	48 8d 3d 34 85 00 00 	lea    rdi,[rip+0x8534]        # c760 <_IO_stdin_used+0x760>
    422c:	e8 af e2 ff ff       	call   24e0 <puts@plt>
    4231:	eb 30                	jmp    4263 <ip4_icmp_decode+0x6f8>
    4233:	48 8d 3d 46 85 00 00 	lea    rdi,[rip+0x8546]        # c780 <_IO_stdin_used+0x780>
    423a:	e8 a1 e2 ff ff       	call   24e0 <puts@plt>
    423f:	eb 22                	jmp    4263 <ip4_icmp_decode+0x6f8>
    4241:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4248:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    424c:	0f b6 c0             	movzx  eax,al
    424f:	89 c6                	mov    esi,eax
    4251:	48 8d 3d 97 84 00 00 	lea    rdi,[rip+0x8497]        # c6ef <_IO_stdin_used+0x6ef>
    4258:	b8 00 00 00 00       	mov    eax,0x0
    425d:	e8 1e e2 ff ff       	call   2480 <printf@plt>
    4262:	90                   	nop
    4263:	e9 18 01 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    4268:	48 8d 3d 2e 85 00 00 	lea    rdi,[rip+0x852e]        # c79d <_IO_stdin_used+0x79d>
    426f:	e8 6c e2 ff ff       	call   24e0 <puts@plt>
    4274:	e9 07 01 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    4279:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4280:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4284:	84 c0                	test   al,al
    4286:	75 16                	jne    429e <ip4_icmp_decode+0x733>
    4288:	48 8d 3d 21 85 00 00 	lea    rdi,[rip+0x8521]        # c7b0 <_IO_stdin_used+0x7b0>
    428f:	b8 00 00 00 00       	mov    eax,0x0
    4294:	e8 e7 e1 ff ff       	call   2480 <printf@plt>
    4299:	e9 e2 00 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    429e:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42a5:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42a9:	0f b6 c0             	movzx  eax,al
    42ac:	89 c6                	mov    esi,eax
    42ae:	48 8d 3d 3b 85 00 00 	lea    rdi,[rip+0x853b]        # c7f0 <_IO_stdin_used+0x7f0>
    42b5:	b8 00 00 00 00       	mov    eax,0x0
    42ba:	e8 c1 e1 ff ff       	call   2480 <printf@plt>
    42bf:	e9 bc 00 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    42c4:	48 8d 3d 52 85 00 00 	lea    rdi,[rip+0x8552]        # c81d <_IO_stdin_used+0x81d>
    42cb:	e8 10 e2 ff ff       	call   24e0 <puts@plt>
    42d0:	e9 ab 00 00 00       	jmp    4380 <ip4_icmp_decode+0x815>
    42d5:	48 8d 3d 58 85 00 00 	lea    rdi,[rip+0x8558]        # c834 <_IO_stdin_used+0x834>
    42dc:	b8 00 00 00 00       	mov    eax,0x0
    42e1:	e8 9a e1 ff ff       	call   2480 <printf@plt>
    42e6:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42ed:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42f1:	84 c0                	test   al,al
    42f3:	75 0e                	jne    4303 <ip4_icmp_decode+0x798>
    42f5:	48 8d 3d 4f 85 00 00 	lea    rdi,[rip+0x854f]        # c84b <_IO_stdin_used+0x84b>
    42fc:	e8 df e1 ff ff       	call   24e0 <puts@plt>
    4301:	eb 7d                	jmp    4380 <ip4_icmp_decode+0x815>
    4303:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    430a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    430e:	3c 01                	cmp    al,0x1
    4310:	75 0e                	jne    4320 <ip4_icmp_decode+0x7b5>
    4312:	48 8d 3d 4f 85 00 00 	lea    rdi,[rip+0x854f]        # c868 <_IO_stdin_used+0x868>
    4319:	e8 c2 e1 ff ff       	call   24e0 <puts@plt>
    431e:	eb 60                	jmp    4380 <ip4_icmp_decode+0x815>
    4320:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4327:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    432b:	0f b6 c0             	movzx  eax,al
    432e:	89 c6                	mov    esi,eax
    4330:	48 8d 3d 58 85 00 00 	lea    rdi,[rip+0x8558]        # c88f <_IO_stdin_used+0x88f>
    4337:	b8 00 00 00 00       	mov    eax,0x0
    433c:	e8 3f e1 ff ff       	call   2480 <printf@plt>
    4341:	eb 3d                	jmp    4380 <ip4_icmp_decode+0x815>
    4343:	48 8d 3d 5b 85 00 00 	lea    rdi,[rip+0x855b]        # c8a5 <_IO_stdin_used+0x8a5>
    434a:	e8 91 e1 ff ff       	call   24e0 <puts@plt>
    434f:	eb 2f                	jmp    4380 <ip4_icmp_decode+0x815>
    4351:	48 8d 3d 60 85 00 00 	lea    rdi,[rip+0x8560]        # c8b8 <_IO_stdin_used+0x8b8>
    4358:	e8 83 e1 ff ff       	call   24e0 <puts@plt>
    435d:	eb 21                	jmp    4380 <ip4_icmp_decode+0x815>
    435f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4366:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4369:	0f b6 c0             	movzx  eax,al
    436c:	89 c6                	mov    esi,eax
    436e:	48 8d 3d 54 85 00 00 	lea    rdi,[rip+0x8554]        # c8c9 <_IO_stdin_used+0x8c9>
    4375:	b8 00 00 00 00       	mov    eax,0x0
    437a:	e8 01 e1 ff ff       	call   2480 <printf@plt>
    437f:	90                   	nop
    4380:	48 8d 35 0e 80 00 00 	lea    rsi,[rip+0x800e]        # c395 <_IO_stdin_used+0x395>
    4387:	48 8d 3d 78 7f 00 00 	lea    rdi,[rip+0x7f78]        # c306 <_IO_stdin_used+0x306>
    438e:	b8 00 00 00 00       	mov    eax,0x0
    4393:	e8 e8 e0 ff ff       	call   2480 <printf@plt>
    4398:	90                   	nop
    4399:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    439d:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    43a4:	00 00 
    43a6:	74 05                	je     43ad <ip4_icmp_decode+0x842>
    43a8:	e8 93 e3 ff ff       	call   2740 <__stack_chk_fail@plt>
    43ad:	c9                   	leave  
    43ae:	c3                   	ret    

00000000000043af <ip4_tcp_decode>:
    43af:	f3 0f 1e fa          	endbr64 
    43b3:	55                   	push   rbp
    43b4:	48 89 e5             	mov    rbp,rsp
    43b7:	53                   	push   rbx
    43b8:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    43bf:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    43c3:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    43c7:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    43ce:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    43d2:	48 83 c0 22          	add    rax,0x22
    43d6:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    43da:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    43de:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    43e2:	c0 e8 04             	shr    al,0x4
    43e5:	0f b6 c0             	movzx  eax,al
    43e8:	c1 e0 02             	shl    eax,0x2
    43eb:	48 98                	cdqe   
    43ed:	48 8d 50 22          	lea    rdx,[rax+0x22]
    43f1:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    43f5:	48 01 c2             	add    rdx,rax
    43f8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    43fc:	48 89 10             	mov    QWORD PTR [rax],rdx
    43ff:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4403:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    4406:	89 c2                	mov    edx,eax
    4408:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    440c:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4410:	c0 e8 04             	shr    al,0x4
    4413:	0f b6 c0             	movzx  eax,al
    4416:	c1 e0 02             	shl    eax,0x2
    4419:	89 c1                	mov    ecx,eax
    441b:	89 d0                	mov    eax,edx
    441d:	29 c8                	sub    eax,ecx
    441f:	83 e8 22             	sub    eax,0x22
    4422:	89 c2                	mov    edx,eax
    4424:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4428:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    442b:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    442f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4433:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4437:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    443b:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    443f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    4443:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4447:	ba 5c 00 00 00       	mov    edx,0x5c
    444c:	be 01 00 00 00       	mov    esi,0x1
    4451:	48 89 c7             	mov    rdi,rax
    4454:	e8 66 0a 00 00       	call   4ebf <add_ip_addr_or_inc_counter>
    4459:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    445d:	ba 5c 00 00 00       	mov    edx,0x5c
    4462:	be 00 00 00 00       	mov    esi,0x0
    4467:	48 89 c7             	mov    rdi,rax
    446a:	e8 50 0a 00 00       	call   4ebf <add_ip_addr_or_inc_counter>
    446f:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
    4476:	c6 45 9f 00          	mov    BYTE PTR [rbp-0x61],0x0
    447a:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
    447e:	c6 45 a1 00          	mov    BYTE PTR [rbp-0x5f],0x0
    4482:	c6 45 a2 00          	mov    BYTE PTR [rbp-0x5e],0x0
    4486:	c6 45 a3 00          	mov    BYTE PTR [rbp-0x5d],0x0
    448a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    448e:	48 83 c0 68          	add    rax,0x68
    4492:	ba 08 00 00 00       	mov    edx,0x8
    4497:	be 00 00 00 00       	mov    esi,0x0
    449c:	48 89 c7             	mov    rdi,rax
    449f:	e8 ec df ff ff       	call   2490 <memset@plt>
    44a4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44a8:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    44ac:	0f b7 c0             	movzx  eax,ax
    44af:	89 c7                	mov    edi,eax
    44b1:	e8 7a e1 ff ff       	call   2630 <ntohs@plt>
    44b6:	0f b7 c0             	movzx  eax,ax
    44b9:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    44bc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44c0:	0f b7 00             	movzx  eax,WORD PTR [rax]
    44c3:	0f b7 c0             	movzx  eax,ax
    44c6:	89 c7                	mov    edi,eax
    44c8:	e8 63 e1 ff ff       	call   2630 <ntohs@plt>
    44cd:	0f b7 c0             	movzx  eax,ax
    44d0:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    44d3:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44d7:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    44db:	0f b7 c0             	movzx  eax,ax
    44de:	89 c7                	mov    edi,eax
    44e0:	e8 4b e1 ff ff       	call   2630 <ntohs@plt>
    44e5:	0f b7 d0             	movzx  edx,ax
    44e8:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44ec:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    44ef:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44f3:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    44f6:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    44f9:	0f b6 05 64 5a 10 00 	movzx  eax,BYTE PTR [rip+0x105a64]        # 109f64 <packet_print>
    4500:	84 c0                	test   al,al
    4502:	74 4e                	je     4552 <ip4_tcp_decode+0x1a3>
    4504:	48 8d 35 55 84 00 00 	lea    rsi,[rip+0x8455]        # c960 <_IO_stdin_used+0x960>
    450b:	48 8d 3d 54 84 00 00 	lea    rdi,[rip+0x8454]        # c966 <_IO_stdin_used+0x966>
    4512:	b8 00 00 00 00       	mov    eax,0x0
    4517:	e8 64 df ff ff       	call   2480 <printf@plt>
    451c:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
    451f:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    4523:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    4526:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    452a:	41 89 f0             	mov    r8d,esi
    452d:	48 89 c6             	mov    rsi,rax
    4530:	48 8d 3d 32 84 00 00 	lea    rdi,[rip+0x8432]        # c969 <_IO_stdin_used+0x969>
    4537:	b8 00 00 00 00       	mov    eax,0x0
    453c:	e8 3f df ff ff       	call   2480 <printf@plt>
    4541:	48 8d 3d 36 84 00 00 	lea    rdi,[rip+0x8436]        # c97e <_IO_stdin_used+0x97e>
    4548:	b8 00 00 00 00       	mov    eax,0x0
    454d:	e8 2e df ff ff       	call   2480 <printf@plt>
    4552:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4556:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    455a:	c0 e8 04             	shr    al,0x4
    455d:	83 e0 01             	and    eax,0x1
    4560:	0f b6 c0             	movzx  eax,al
    4563:	89 c7                	mov    edi,eax
    4565:	e8 c6 e0 ff ff       	call   2630 <ntohs@plt>
    456a:	66 85 c0             	test   ax,ax
    456d:	74 43                	je     45b2 <ip4_tcp_decode+0x203>
    456f:	0f b6 05 ee 59 10 00 	movzx  eax,BYTE PTR [rip+0x1059ee]        # 109f64 <packet_print>
    4576:	84 c0                	test   al,al
    4578:	74 18                	je     4592 <ip4_tcp_decode+0x1e3>
    457a:	48 8d 35 04 84 00 00 	lea    rsi,[rip+0x8404]        # c985 <_IO_stdin_used+0x985>
    4581:	48 8d 3d 03 84 00 00 	lea    rdi,[rip+0x8403]        # c98b <_IO_stdin_used+0x98b>
    4588:	b8 00 00 00 00       	mov    eax,0x0
    458d:	e8 ee de ff ff       	call   2480 <printf@plt>
    4592:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
    4596:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    459a:	48 8d 58 68          	lea    rbx,[rax+0x68]
    459e:	48 89 df             	mov    rdi,rbx
    45a1:	e8 5a e0 ff ff       	call   2600 <strlen@plt>
    45a6:	48 01 d8             	add    rax,rbx
    45a9:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    45ae:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    45b2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    45b6:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    45ba:	83 e0 01             	and    eax,0x1
    45bd:	0f b6 c0             	movzx  eax,al
    45c0:	89 c7                	mov    edi,eax
    45c2:	e8 69 e0 ff ff       	call   2630 <ntohs@plt>
    45c7:	66 85 c0             	test   ax,ax
    45ca:	74 43                	je     460f <ip4_tcp_decode+0x260>
    45cc:	0f b6 05 91 59 10 00 	movzx  eax,BYTE PTR [rip+0x105991]        # 109f64 <packet_print>
    45d3:	84 c0                	test   al,al
    45d5:	74 18                	je     45ef <ip4_tcp_decode+0x240>
    45d7:	48 8d 35 b5 83 00 00 	lea    rsi,[rip+0x83b5]        # c993 <_IO_stdin_used+0x993>
    45de:	48 8d 3d b4 83 00 00 	lea    rdi,[rip+0x83b4]        # c999 <_IO_stdin_used+0x999>
    45e5:	b8 00 00 00 00       	mov    eax,0x0
    45ea:	e8 91 de ff ff       	call   2480 <printf@plt>
    45ef:	c6 45 a2 01          	mov    BYTE PTR [rbp-0x5e],0x1
    45f3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45f7:	48 8d 58 68          	lea    rbx,[rax+0x68]
    45fb:	48 89 df             	mov    rdi,rbx
    45fe:	e8 fd df ff ff       	call   2600 <strlen@plt>
    4603:	48 01 d8             	add    rax,rbx
    4606:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    460b:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    460f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4613:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4617:	c0 e8 03             	shr    al,0x3
    461a:	83 e0 01             	and    eax,0x1
    461d:	0f b6 c0             	movzx  eax,al
    4620:	89 c7                	mov    edi,eax
    4622:	e8 09 e0 ff ff       	call   2630 <ntohs@plt>
    4627:	66 85 c0             	test   ax,ax
    462a:	74 43                	je     466f <ip4_tcp_decode+0x2c0>
    462c:	0f b6 05 31 59 10 00 	movzx  eax,BYTE PTR [rip+0x105931]        # 109f64 <packet_print>
    4633:	84 c0                	test   al,al
    4635:	74 18                	je     464f <ip4_tcp_decode+0x2a0>
    4637:	48 8d 35 63 83 00 00 	lea    rsi,[rip+0x8363]        # c9a1 <_IO_stdin_used+0x9a1>
    463e:	48 8d 3d 62 83 00 00 	lea    rdi,[rip+0x8362]        # c9a7 <_IO_stdin_used+0x9a7>
    4645:	b8 00 00 00 00       	mov    eax,0x0
    464a:	e8 31 de ff ff       	call   2480 <printf@plt>
    464f:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4653:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4657:	48 8d 58 68          	lea    rbx,[rax+0x68]
    465b:	48 89 df             	mov    rdi,rbx
    465e:	e8 9d df ff ff       	call   2600 <strlen@plt>
    4663:	48 01 d8             	add    rax,rbx
    4666:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    466b:	c6 45 a3 01          	mov    BYTE PTR [rbp-0x5d],0x1
    466f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4673:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4677:	c0 e8 02             	shr    al,0x2
    467a:	83 e0 01             	and    eax,0x1
    467d:	0f b6 c0             	movzx  eax,al
    4680:	89 c7                	mov    edi,eax
    4682:	e8 a9 df ff ff       	call   2630 <ntohs@plt>
    4687:	66 85 c0             	test   ax,ax
    468a:	74 43                	je     46cf <ip4_tcp_decode+0x320>
    468c:	0f b6 05 d1 58 10 00 	movzx  eax,BYTE PTR [rip+0x1058d1]        # 109f64 <packet_print>
    4693:	84 c0                	test   al,al
    4695:	74 18                	je     46af <ip4_tcp_decode+0x300>
    4697:	48 8d 35 11 83 00 00 	lea    rsi,[rip+0x8311]        # c9af <_IO_stdin_used+0x9af>
    469e:	48 8d 3d 10 83 00 00 	lea    rdi,[rip+0x8310]        # c9b5 <_IO_stdin_used+0x9b5>
    46a5:	b8 00 00 00 00       	mov    eax,0x0
    46aa:	e8 d1 dd ff ff       	call   2480 <printf@plt>
    46af:	c6 45 9f 01          	mov    BYTE PTR [rbp-0x61],0x1
    46b3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46b7:	48 8d 58 68          	lea    rbx,[rax+0x68]
    46bb:	48 89 df             	mov    rdi,rbx
    46be:	e8 3d df ff ff       	call   2600 <strlen@plt>
    46c3:	48 01 d8             	add    rax,rbx
    46c6:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    46cb:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    46cf:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46d3:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46d7:	d0 e8                	shr    al,1
    46d9:	83 e0 01             	and    eax,0x1
    46dc:	0f b6 c0             	movzx  eax,al
    46df:	89 c7                	mov    edi,eax
    46e1:	e8 4a df ff ff       	call   2630 <ntohs@plt>
    46e6:	66 85 c0             	test   ax,ax
    46e9:	74 43                	je     472e <ip4_tcp_decode+0x37f>
    46eb:	0f b6 05 72 58 10 00 	movzx  eax,BYTE PTR [rip+0x105872]        # 109f64 <packet_print>
    46f2:	84 c0                	test   al,al
    46f4:	74 18                	je     470e <ip4_tcp_decode+0x35f>
    46f6:	48 8d 35 c0 82 00 00 	lea    rsi,[rip+0x82c0]        # c9bd <_IO_stdin_used+0x9bd>
    46fd:	48 8d 3d bf 82 00 00 	lea    rdi,[rip+0x82bf]        # c9c3 <_IO_stdin_used+0x9c3>
    4704:	b8 00 00 00 00       	mov    eax,0x0
    4709:	e8 72 dd ff ff       	call   2480 <printf@plt>
    470e:	c6 45 a1 01          	mov    BYTE PTR [rbp-0x5f],0x1
    4712:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4716:	48 8d 58 68          	lea    rbx,[rax+0x68]
    471a:	48 89 df             	mov    rdi,rbx
    471d:	e8 de de ff ff       	call   2600 <strlen@plt>
    4722:	48 01 d8             	add    rax,rbx
    4725:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    472a:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    472e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4732:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4736:	c0 e8 05             	shr    al,0x5
    4739:	83 e0 01             	and    eax,0x1
    473c:	0f b6 c0             	movzx  eax,al
    473f:	89 c7                	mov    edi,eax
    4741:	e8 ea de ff ff       	call   2630 <ntohs@plt>
    4746:	66 85 c0             	test   ax,ax
    4749:	74 3f                	je     478a <ip4_tcp_decode+0x3db>
    474b:	0f b6 05 12 58 10 00 	movzx  eax,BYTE PTR [rip+0x105812]        # 109f64 <packet_print>
    4752:	84 c0                	test   al,al
    4754:	74 18                	je     476e <ip4_tcp_decode+0x3bf>
    4756:	48 8d 35 6e 82 00 00 	lea    rsi,[rip+0x826e]        # c9cb <_IO_stdin_used+0x9cb>
    475d:	48 8d 3d 6d 82 00 00 	lea    rdi,[rip+0x826d]        # c9d1 <_IO_stdin_used+0x9d1>
    4764:	b8 00 00 00 00       	mov    eax,0x0
    4769:	e8 12 dd ff ff       	call   2480 <printf@plt>
    476e:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4772:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4776:	48 8d 58 68          	lea    rbx,[rax+0x68]
    477a:	48 89 df             	mov    rdi,rbx
    477d:	e8 7e de ff ff       	call   2600 <strlen@plt>
    4782:	48 01 d8             	add    rax,rbx
    4785:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    478a:	0f b6 05 d3 57 10 00 	movzx  eax,BYTE PTR [rip+0x1057d3]        # 109f64 <packet_print>
    4791:	84 c0                	test   al,al
    4793:	74 3c                	je     47d1 <ip4_tcp_decode+0x422>
    4795:	48 8d 35 c4 81 00 00 	lea    rsi,[rip+0x81c4]        # c960 <_IO_stdin_used+0x960>
    479c:	48 8d 3d c3 81 00 00 	lea    rdi,[rip+0x81c3]        # c966 <_IO_stdin_used+0x966>
    47a3:	b8 00 00 00 00       	mov    eax,0x0
    47a8:	e8 d3 dc ff ff       	call   2480 <printf@plt>
    47ad:	48 8d 3d 25 82 00 00 	lea    rdi,[rip+0x8225]        # c9d9 <_IO_stdin_used+0x9d9>
    47b4:	e8 27 dd ff ff       	call   24e0 <puts@plt>
    47b9:	48 8d 35 1b 82 00 00 	lea    rsi,[rip+0x821b]        # c9db <_IO_stdin_used+0x9db>
    47c0:	48 8d 3d 9f 81 00 00 	lea    rdi,[rip+0x819f]        # c966 <_IO_stdin_used+0x966>
    47c7:	b8 00 00 00 00       	mov    eax,0x0
    47cc:	e8 af dc ff ff       	call   2480 <printf@plt>
    47d1:	83 7d a4 03          	cmp    DWORD PTR [rbp-0x5c],0x3
    47d5:	7f 06                	jg     47dd <ip4_tcp_decode+0x42e>
    47d7:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
    47db:	75 41                	jne    481e <ip4_tcp_decode+0x46f>
    47dd:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
    47e0:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    47e4:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    47e7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    47eb:	48 8d 0d e9 81 00 00 	lea    rcx,[rip+0x81e9]        # c9db <_IO_stdin_used+0x9db>
    47f2:	51                   	push   rcx
    47f3:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
    47f6:	51                   	push   rcx
    47f7:	41 89 f9             	mov    r9d,edi
    47fa:	49 89 f0             	mov    r8,rsi
    47fd:	89 d1                	mov    ecx,edx
    47ff:	48 89 c2             	mov    rdx,rax
    4802:	48 8d 35 a6 81 00 00 	lea    rsi,[rip+0x81a6]        # c9af <_IO_stdin_used+0x9af>
    4809:	48 8d 3d d0 81 00 00 	lea    rdi,[rip+0x81d0]        # c9e0 <_IO_stdin_used+0x9e0>
    4810:	b8 00 00 00 00       	mov    eax,0x0
    4815:	e8 66 dc ff ff       	call   2480 <printf@plt>
    481a:	48 83 c4 10          	add    rsp,0x10
    481e:	0f b6 05 9d 57 10 00 	movzx  eax,BYTE PTR [rip+0x10579d]        # 109fc2 <use_spi>
    4825:	84 c0                	test   al,al
    4827:	0f 84 8c 00 00 00    	je     48b9 <ip4_tcp_decode+0x50a>
    482d:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4831:	74 1a                	je     484d <ip4_tcp_decode+0x49e>
    4833:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4837:	74 14                	je     484d <ip4_tcp_decode+0x49e>
    4839:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    483d:	75 0e                	jne    484d <ip4_tcp_decode+0x49e>
    483f:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4843:	48 89 c7             	mov    rdi,rax
    4846:	e8 14 48 00 00       	call   905f <handle_data_pkt>
    484b:	eb 6c                	jmp    48b9 <ip4_tcp_decode+0x50a>
    484d:	80 7d a2 00          	cmp    BYTE PTR [rbp-0x5e],0x0
    4851:	74 14                	je     4867 <ip4_tcp_decode+0x4b8>
    4853:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4857:	74 0e                	je     4867 <ip4_tcp_decode+0x4b8>
    4859:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    485d:	48 89 c7             	mov    rdi,rax
    4860:	e8 e7 46 00 00       	call   8f4c <polite_end>
    4865:	eb 52                	jmp    48b9 <ip4_tcp_decode+0x50a>
    4867:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    486b:	74 14                	je     4881 <ip4_tcp_decode+0x4d2>
    486d:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    4871:	75 0e                	jne    4881 <ip4_tcp_decode+0x4d2>
    4873:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4877:	48 89 c7             	mov    rdi,rax
    487a:	e8 2a 42 00 00       	call   8aa9 <add_new_conversation>
    487f:	eb 38                	jmp    48b9 <ip4_tcp_decode+0x50a>
    4881:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4885:	74 1a                	je     48a1 <ip4_tcp_decode+0x4f2>
    4887:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    488b:	74 14                	je     48a1 <ip4_tcp_decode+0x4f2>
    488d:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4891:	75 0e                	jne    48a1 <ip4_tcp_decode+0x4f2>
    4893:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4897:	48 89 c7             	mov    rdi,rax
    489a:	e8 43 44 00 00       	call   8ce2 <spi_ud_thw>
    489f:	eb 18                	jmp    48b9 <ip4_tcp_decode+0x50a>
    48a1:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48a5:	74 12                	je     48b9 <ip4_tcp_decode+0x50a>
    48a7:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    48ab:	75 0c                	jne    48b9 <ip4_tcp_decode+0x50a>
    48ad:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48b1:	48 89 c7             	mov    rdi,rax
    48b4:	e8 f2 44 00 00       	call   8dab <update_table>
    48b9:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    48bd:	74 17                	je     48d6 <ip4_tcp_decode+0x527>
    48bf:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48c3:	74 11                	je     48d6 <ip4_tcp_decode+0x527>
    48c5:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    48c9:	75 0b                	jne    48d6 <ip4_tcp_decode+0x527>
    48cb:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48cf:	c7 40 70 01 00 00 00 	mov    DWORD PTR [rax+0x70],0x1
    48d6:	80 7d 9f 00          	cmp    BYTE PTR [rbp-0x61],0x0
    48da:	0f 84 8f 01 00 00    	je     4a6f <ip4_tcp_decode+0x6c0>
    48e0:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48e4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    48e8:	48 89 c7             	mov    rdi,rax
    48eb:	e8 14 30 00 00       	call   7904 <member_exists>
    48f0:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    48f3:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    48f7:	0f 84 db 00 00 00    	je     49d8 <ip4_tcp_decode+0x629>
    48fd:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    4900:	48 63 d0             	movsxd rdx,eax
    4903:	48 89 d0             	mov    rax,rdx
    4906:	48 c1 e0 02          	shl    rax,0x2
    490a:	48 01 d0             	add    rax,rdx
    490d:	48 c1 e0 03          	shl    rax,0x3
    4911:	48 01 d0             	add    rax,rdx
    4914:	48 c1 e0 04          	shl    rax,0x4
    4918:	48 8d 15 01 ec 0e 00 	lea    rdx,[rip+0xeec01]        # f3520 <watchlist>
    491f:	48 01 d0             	add    rax,rdx
    4922:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    4926:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    492a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    492e:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    4932:	48 83 c2 08          	add    rdx,0x8
    4936:	48 89 c6             	mov    rsi,rax
    4939:	48 89 d7             	mov    rdi,rdx
    493c:	e8 2f de ff ff       	call   2770 <strcpy@plt>
    4941:	bf 00 00 00 00       	mov    edi,0x0
    4946:	e8 25 df ff ff       	call   2870 <time@plt>
    494b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    494f:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4955:	8d 72 01             	lea    esi,[rdx+0x1]
    4958:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    495c:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4962:	48 89 c1             	mov    rcx,rax
    4965:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4969:	89 d2                	mov    edx,edx
    496b:	48 83 c2 28          	add    rdx,0x28
    496f:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4974:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4978:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    497e:	83 f8 1d             	cmp    eax,0x1d
    4981:	0f 86 e8 00 00 00    	jbe    4a6f <ip4_tcp_decode+0x6c0>
    4987:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    498b:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4992:	00 00 00 
    4995:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4999:	48 89 c7             	mov    rdi,rax
    499c:	e8 21 2b 00 00       	call   74c2 <tcp_rst_portscan_detect>
    49a1:	84 c0                	test   al,al
    49a3:	0f 84 c6 00 00 00    	je     4a6f <ip4_tcp_decode+0x6c0>
    49a9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49ad:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    49b4:	00 00 00 
    49b7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49bb:	48 05 50 01 00 00    	add    rax,0x150
    49c1:	ba f0 00 00 00       	mov    edx,0xf0
    49c6:	be 00 00 00 00       	mov    esi,0x0
    49cb:	48 89 c7             	mov    rdi,rax
    49ce:	e8 bd da ff ff       	call   2490 <memset@plt>
    49d3:	e9 97 00 00 00       	jmp    4a6f <ip4_tcp_decode+0x6c0>
    49d8:	8b 05 3a c6 00 00    	mov    eax,DWORD PTR [rip+0xc63a]        # 11018 <watchlist_num>
    49de:	83 c0 01             	add    eax,0x1
    49e1:	89 05 31 c6 00 00    	mov    DWORD PTR [rip+0xc631],eax        # 11018 <watchlist_num>
    49e7:	8b 05 2b c6 00 00    	mov    eax,DWORD PTR [rip+0xc62b]        # 11018 <watchlist_num>
    49ed:	48 63 d0             	movsxd rdx,eax
    49f0:	48 89 d0             	mov    rax,rdx
    49f3:	48 c1 e0 02          	shl    rax,0x2
    49f7:	48 01 d0             	add    rax,rdx
    49fa:	48 c1 e0 03          	shl    rax,0x3
    49fe:	48 01 d0             	add    rax,rdx
    4a01:	48 c1 e0 04          	shl    rax,0x4
    4a05:	48 8d 15 14 eb 0e 00 	lea    rdx,[rip+0xeeb14]        # f3520 <watchlist>
    4a0c:	48 01 d0             	add    rax,rdx
    4a0f:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4a13:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4a17:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4a1b:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4a1f:	48 83 c2 08          	add    rdx,0x8
    4a23:	48 89 c6             	mov    rsi,rax
    4a26:	48 89 d7             	mov    rdi,rdx
    4a29:	e8 42 dd ff ff       	call   2770 <strcpy@plt>
    4a2e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4a32:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a39:	00 00 00 
    4a3c:	bf 00 00 00 00       	mov    edi,0x0
    4a41:	e8 2a de ff ff       	call   2870 <time@plt>
    4a46:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4a4a:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4a50:	8d 72 01             	lea    esi,[rdx+0x1]
    4a53:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4a57:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4a5d:	48 89 c1             	mov    rcx,rax
    4a60:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4a64:	89 d2                	mov    edx,edx
    4a66:	48 83 c2 28          	add    rdx,0x28
    4a6a:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4a6f:	8b 05 13 c6 00 00    	mov    eax,DWORD PTR [rip+0xc613]        # 11088 <strict_nmap_host_alive_check>
    4a75:	83 f8 01             	cmp    eax,0x1
    4a78:	0f 85 f6 00 00 00    	jne    4b74 <ip4_tcp_decode+0x7c5>
    4a7e:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4a82:	74 0c                	je     4a90 <ip4_tcp_decode+0x6e1>
    4a84:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4a88:	74 26                	je     4ab0 <ip4_tcp_decode+0x701>
    4a8a:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4a8e:	74 20                	je     4ab0 <ip4_tcp_decode+0x701>
    4a90:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4a94:	0f 84 da 00 00 00    	je     4b74 <ip4_tcp_decode+0x7c5>
    4a9a:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4aa1:	74 0d                	je     4ab0 <ip4_tcp_decode+0x701>
    4aa3:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4aaa:	0f 85 c4 00 00 00    	jne    4b74 <ip4_tcp_decode+0x7c5>
    4ab0:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    4ab3:	3b 45 ac             	cmp    eax,DWORD PTR [rbp-0x54]
    4ab6:	76 0a                	jbe    4ac2 <ip4_tcp_decode+0x713>
    4ab8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4abc:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4ac0:	eb 08                	jmp    4aca <ip4_tcp_decode+0x71b>
    4ac2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4ac6:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4aca:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4ace:	48 89 c7             	mov    rdi,rax
    4ad1:	e8 2e 2e 00 00       	call   7904 <member_exists>
    4ad6:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4ad9:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    4add:	0f 84 91 00 00 00    	je     4b74 <ip4_tcp_decode+0x7c5>
    4ae3:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4ae6:	48 63 d0             	movsxd rdx,eax
    4ae9:	48 89 d0             	mov    rax,rdx
    4aec:	48 c1 e0 02          	shl    rax,0x2
    4af0:	48 01 d0             	add    rax,rdx
    4af3:	48 c1 e0 03          	shl    rax,0x3
    4af7:	48 01 d0             	add    rax,rdx
    4afa:	48 c1 e0 04          	shl    rax,0x4
    4afe:	48 8d 15 1b ea 0e 00 	lea    rdx,[rip+0xeea1b]        # f3520 <watchlist>
    4b05:	48 01 d0             	add    rax,rdx
    4b08:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4b0c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b10:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4b13:	85 c0                	test   eax,eax
    4b15:	75 2a                	jne    4b41 <ip4_tcp_decode+0x792>
    4b17:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b1b:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b1e:	83 f8 01             	cmp    eax,0x1
    4b21:	75 1e                	jne    4b41 <ip4_tcp_decode+0x792>
    4b23:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b27:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4b2e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b32:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b35:	8d 50 01             	lea    edx,[rax+0x1]
    4b38:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b3c:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4b3f:	eb 33                	jmp    4b74 <ip4_tcp_decode+0x7c5>
    4b41:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b45:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4b48:	85 c0                	test   eax,eax
    4b4a:	75 28                	jne    4b74 <ip4_tcp_decode+0x7c5>
    4b4c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b50:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b53:	83 f8 02             	cmp    eax,0x2
    4b56:	75 1c                	jne    4b74 <ip4_tcp_decode+0x7c5>
    4b58:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b5c:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4b63:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b67:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b6a:	8d 50 01             	lea    edx,[rax+0x1]
    4b6d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b71:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4b74:	0f b6 05 e9 53 10 00 	movzx  eax,BYTE PTR [rip+0x1053e9]        # 109f64 <packet_print>
    4b7b:	84 c0                	test   al,al
    4b7d:	74 3a                	je     4bb9 <ip4_tcp_decode+0x80a>
    4b7f:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4b83:	74 34                	je     4bb9 <ip4_tcp_decode+0x80a>
    4b85:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4b89:	74 2e                	je     4bb9 <ip4_tcp_decode+0x80a>
    4b8b:	0f b6 45 a2          	movzx  eax,BYTE PTR [rbp-0x5e]
    4b8f:	83 f0 01             	xor    eax,0x1
    4b92:	84 c0                	test   al,al
    4b94:	74 23                	je     4bb9 <ip4_tcp_decode+0x80a>
    4b96:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4b9a:	74 06                	je     4ba2 <ip4_tcp_decode+0x7f3>
    4b9c:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4ba0:	75 17                	jne    4bb9 <ip4_tcp_decode+0x80a>
    4ba2:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4ba6:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4baa:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4bae:	48 89 c6             	mov    rsi,rax
    4bb1:	48 89 d7             	mov    rdi,rdx
    4bb4:	e8 20 39 00 00       	call   84d9 <http_disect>
    4bb9:	83 7d a8 15          	cmp    DWORD PTR [rbp-0x58],0x15
    4bbd:	74 06                	je     4bc5 <ip4_tcp_decode+0x816>
    4bbf:	83 7d ac 15          	cmp    DWORD PTR [rbp-0x54],0x15
    4bc3:	75 2d                	jne    4bf2 <ip4_tcp_decode+0x843>
    4bc5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4bc9:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4bcd:	c0 e8 04             	shr    al,0x4
    4bd0:	0f b6 c0             	movzx  eax,al
    4bd3:	c1 e0 02             	shl    eax,0x2
    4bd6:	48 98                	cdqe   
    4bd8:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4bdc:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4be0:	48 01 c2             	add    rdx,rax
    4be3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4be7:	48 89 c6             	mov    rsi,rax
    4bea:	48 89 d7             	mov    rdi,rdx
    4bed:	e8 d2 3a 00 00       	call   86c4 <ftp_disect>
    4bf2:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4bf9:	74 09                	je     4c04 <ip4_tcp_decode+0x855>
    4bfb:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4c02:	75 29                	jne    4c2d <ip4_tcp_decode+0x87e>
    4c04:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4c08:	74 23                	je     4c2d <ip4_tcp_decode+0x87e>
    4c0a:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4c0e:	74 1d                	je     4c2d <ip4_tcp_decode+0x87e>
    4c10:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c14:	48 8b 00             	mov    rax,QWORD PTR [rax]
    4c17:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
    4c1e:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    4c22:	48 89 ce             	mov    rsi,rcx
    4c25:	48 89 c7             	mov    rdi,rax
    4c28:	e8 0e 33 00 00       	call   7f3b <tls_decode>
    4c2d:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4c34:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4c37:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4c3b:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c3f:	c0 e8 04             	shr    al,0x4
    4c42:	0f b6 c0             	movzx  eax,al
    4c45:	c1 e0 02             	shl    eax,0x2
    4c48:	89 c1                	mov    ecx,eax
    4c4a:	89 d0                	mov    eax,edx
    4c4c:	29 c8                	sub    eax,ecx
    4c4e:	8d 50 de             	lea    edx,[rax-0x22]
    4c51:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c55:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4c58:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c5c:	48 89 c7             	mov    rdi,rax
    4c5f:	e8 95 17 00 00       	call   63f9 <rulemgr>
    4c64:	90                   	nop
    4c65:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4c69:	c9                   	leave  
    4c6a:	c3                   	ret    

0000000000004c6b <ip4_udp_decode>:
    4c6b:	f3 0f 1e fa          	endbr64 
    4c6f:	55                   	push   rbp
    4c70:	48 89 e5             	mov    rbp,rsp
    4c73:	48 83 ec 30          	sub    rsp,0x30
    4c77:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4c7b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4c7f:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4c83:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c87:	48 83 c0 22          	add    rax,0x22
    4c8b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4c8f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4c93:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4c97:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4c9b:	48 89 10             	mov    QWORD PTR [rax],rdx
    4c9e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4ca2:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4ca6:	ba 5d 00 00 00       	mov    edx,0x5d
    4cab:	be 01 00 00 00       	mov    esi,0x1
    4cb0:	48 89 c7             	mov    rdi,rax
    4cb3:	e8 07 02 00 00       	call   4ebf <add_ip_addr_or_inc_counter>
    4cb8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4cbc:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4cc0:	ba 5d 00 00 00       	mov    edx,0x5d
    4cc5:	be 00 00 00 00       	mov    esi,0x0
    4cca:	48 89 c7             	mov    rdi,rax
    4ccd:	e8 ed 01 00 00       	call   4ebf <add_ip_addr_or_inc_counter>
    4cd2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4cd6:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4cd9:	0f b7 c0             	movzx  eax,ax
    4cdc:	89 c7                	mov    edi,eax
    4cde:	e8 4d d9 ff ff       	call   2630 <ntohs@plt>
    4ce3:	0f b7 c0             	movzx  eax,ax
    4ce6:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4ce9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4ced:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4cf1:	0f b7 c0             	movzx  eax,ax
    4cf4:	89 c7                	mov    edi,eax
    4cf6:	e8 35 d9 ff ff       	call   2630 <ntohs@plt>
    4cfb:	0f b7 c0             	movzx  eax,ax
    4cfe:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4d01:	0f b6 05 5c 52 10 00 	movzx  eax,BYTE PTR [rip+0x10525c]        # 109f64 <packet_print>
    4d08:	84 c0                	test   al,al
    4d0a:	74 5d                	je     4d69 <ip4_udp_decode+0xfe>
    4d0c:	48 8d 35 0d 7d 00 00 	lea    rsi,[rip+0x7d0d]        # ca20 <_IO_stdin_used+0xa20>
    4d13:	48 8d 3d 0c 7d 00 00 	lea    rdi,[rip+0x7d0c]        # ca26 <_IO_stdin_used+0xa26>
    4d1a:	b8 00 00 00 00       	mov    eax,0x0
    4d1f:	e8 5c d7 ff ff       	call   2480 <printf@plt>
    4d24:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d28:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4d2c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d30:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d34:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4d37:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4d3a:	41 89 f0             	mov    r8d,esi
    4d3d:	48 89 c6             	mov    rsi,rax
    4d40:	48 8d 3d e2 7c 00 00 	lea    rdi,[rip+0x7ce2]        # ca29 <_IO_stdin_used+0xa29>
    4d47:	b8 00 00 00 00       	mov    eax,0x0
    4d4c:	e8 2f d7 ff ff       	call   2480 <printf@plt>
    4d51:	48 8d 35 ea 7c 00 00 	lea    rsi,[rip+0x7cea]        # ca42 <_IO_stdin_used+0xa42>
    4d58:	48 8d 3d c7 7c 00 00 	lea    rdi,[rip+0x7cc7]        # ca26 <_IO_stdin_used+0xa26>
    4d5f:	b8 00 00 00 00       	mov    eax,0x0
    4d64:	e8 17 d7 ff ff       	call   2480 <printf@plt>
    4d69:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d6d:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4d70:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4d73:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d77:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4d7a:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4d7d:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4d81:	74 06                	je     4d89 <ip4_udp_decode+0x11e>
    4d83:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4d87:	75 17                	jne    4da0 <ip4_udp_decode+0x135>
    4d89:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d8d:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4d91:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d95:	48 89 c6             	mov    rsi,rax
    4d98:	48 89 d7             	mov    rdi,rdx
    4d9b:	e8 eb 37 00 00       	call   858b <dns_disect>
    4da0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4da4:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4da7:	8d 50 d6             	lea    edx,[rax-0x2a]
    4daa:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dae:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4db1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4db5:	48 89 c7             	mov    rdi,rax
    4db8:	e8 3c 16 00 00       	call   63f9 <rulemgr>
    4dbd:	90                   	nop
    4dbe:	c9                   	leave  
    4dbf:	c3                   	ret    

0000000000004dc0 <ip4_igmp_decode>:
    4dc0:	f3 0f 1e fa          	endbr64 
    4dc4:	55                   	push   rbp
    4dc5:	48 89 e5             	mov    rbp,rsp
    4dc8:	48 83 ec 60          	sub    rsp,0x60
    4dcc:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4dd0:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4dd4:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4dd8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4ddf:	00 00 
    4de1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4de5:	31 c0                	xor    eax,eax
    4de7:	0f b6 05 76 51 10 00 	movzx  eax,BYTE PTR [rip+0x105176]        # 109f64 <packet_print>
    4dee:	84 c0                	test   al,al
    4df0:	0f 84 b1 00 00 00    	je     4ea7 <ip4_igmp_decode+0xe7>
    4df6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4dfa:	48 83 c0 26          	add    rax,0x26
    4dfe:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4e02:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4e06:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4e0a:	48 89 c6             	mov    rsi,rax
    4e0d:	48 8d 3d 34 7c 00 00 	lea    rdi,[rip+0x7c34]        # ca48 <_IO_stdin_used+0xa48>
    4e14:	b8 00 00 00 00       	mov    eax,0x0
    4e19:	e8 62 d6 ff ff       	call   2480 <printf@plt>
    4e1e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4e22:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4e25:	0f b6 c0             	movzx  eax,al
    4e28:	83 f8 11             	cmp    eax,0x11
    4e2b:	74 07                	je     4e34 <ip4_igmp_decode+0x74>
    4e2d:	83 f8 22             	cmp    eax,0x22
    4e30:	74 10                	je     4e42 <ip4_igmp_decode+0x82>
    4e32:	eb 54                	jmp    4e88 <ip4_igmp_decode+0xc8>
    4e34:	48 8d 3d 22 7c 00 00 	lea    rdi,[rip+0x7c22]        # ca5d <_IO_stdin_used+0xa5d>
    4e3b:	e8 a0 d6 ff ff       	call   24e0 <puts@plt>
    4e40:	eb 66                	jmp    4ea8 <ip4_igmp_decode+0xe8>
    4e42:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4e46:	48 83 c0 26          	add    rax,0x26
    4e4a:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4e4e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4e52:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4e55:	89 c7                	mov    edi,eax
    4e57:	e8 83 e2 ff ff       	call   30df <ipv4_ntoa>
    4e5c:	48 89 c2             	mov    rdx,rax
    4e5f:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4e63:	48 89 d6             	mov    rsi,rdx
    4e66:	48 89 c7             	mov    rdi,rax
    4e69:	e8 02 d9 ff ff       	call   2770 <strcpy@plt>
    4e6e:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4e72:	48 89 c6             	mov    rsi,rax
    4e75:	48 8d 3d fc 7b 00 00 	lea    rdi,[rip+0x7bfc]        # ca78 <_IO_stdin_used+0xa78>
    4e7c:	b8 00 00 00 00       	mov    eax,0x0
    4e81:	e8 fa d5 ff ff       	call   2480 <printf@plt>
    4e86:	eb 20                	jmp    4ea8 <ip4_igmp_decode+0xe8>
    4e88:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4e8c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4e8f:	0f b6 c0             	movzx  eax,al
    4e92:	89 c6                	mov    esi,eax
    4e94:	48 8d 3d 13 7c 00 00 	lea    rdi,[rip+0x7c13]        # caae <_IO_stdin_used+0xaae>
    4e9b:	b8 00 00 00 00       	mov    eax,0x0
    4ea0:	e8 db d5 ff ff       	call   2480 <printf@plt>
    4ea5:	eb 01                	jmp    4ea8 <ip4_igmp_decode+0xe8>
    4ea7:	90                   	nop
    4ea8:	90                   	nop
    4ea9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4ead:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4eb4:	00 00 
    4eb6:	74 05                	je     4ebd <ip4_igmp_decode+0xfd>
    4eb8:	e8 83 d8 ff ff       	call   2740 <__stack_chk_fail@plt>
    4ebd:	c9                   	leave  
    4ebe:	c3                   	ret    

0000000000004ebf <add_ip_addr_or_inc_counter>:
    4ebf:	f3 0f 1e fa          	endbr64 
    4ec3:	55                   	push   rbp
    4ec4:	48 89 e5             	mov    rbp,rsp
    4ec7:	48 83 ec 60          	sub    rsp,0x60
    4ecb:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4ecf:	89 f0                	mov    eax,esi
    4ed1:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4ed4:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4ed7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4ede:	00 00 
    4ee0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4ee4:	31 c0                	xor    eax,eax
    4ee6:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4eea:	ba 08 00 00 00       	mov    edx,0x8
    4eef:	be 00 00 00 00       	mov    esi,0x0
    4ef4:	48 89 c7             	mov    rdi,rax
    4ef7:	e8 94 d5 ff ff       	call   2490 <memset@plt>
    4efc:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4f00:	ba 1c 00 00 00       	mov    edx,0x1c
    4f05:	be 00 00 00 00       	mov    esi,0x0
    4f0a:	48 89 c7             	mov    rdi,rax
    4f0d:	e8 7e d5 ff ff       	call   2490 <memset@plt>
    4f12:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4f16:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f1a:	ba 18 00 00 00       	mov    edx,0x18
    4f1f:	48 89 ce             	mov    rsi,rcx
    4f22:	48 89 c7             	mov    rdi,rax
    4f25:	e8 96 d8 ff ff       	call   27c0 <strncpy@plt>
    4f2a:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4f2e:	ba 1c 00 00 00       	mov    edx,0x1c
    4f33:	be 00 00 00 00       	mov    esi,0x0
    4f38:	48 89 c7             	mov    rdi,rax
    4f3b:	e8 50 d5 ff ff       	call   2490 <memset@plt>
    4f40:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f44:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4f48:	48 83 c2 08          	add    rdx,0x8
    4f4c:	48 89 c6             	mov    rsi,rax
    4f4f:	48 89 d7             	mov    rdi,rdx
    4f52:	e8 19 d8 ff ff       	call   2770 <strcpy@plt>
    4f57:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    4f5b:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    4f5e:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    4f61:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4f64:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4f68:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    4f6c:	48 89 d1             	mov    rcx,rdx
    4f6f:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 4fab <verify_ip_addr>
    4f76:	be 00 00 00 00       	mov    esi,0x0
    4f7b:	48 89 c7             	mov    rdi,rax
    4f7e:	e8 4d d6 ff ff       	call   25d0 <pthread_create@plt>
    4f83:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4f87:	be 00 00 00 00       	mov    esi,0x0
    4f8c:	48 89 c7             	mov    rdi,rax
    4f8f:	e8 dc d4 ff ff       	call   2470 <pthread_join@plt>
    4f94:	90                   	nop
    4f95:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f99:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4fa0:	00 00 
    4fa2:	74 05                	je     4fa9 <add_ip_addr_or_inc_counter+0xea>
    4fa4:	e8 97 d7 ff ff       	call   2740 <__stack_chk_fail@plt>
    4fa9:	c9                   	leave  
    4faa:	c3                   	ret    

0000000000004fab <verify_ip_addr>:
    4fab:	f3 0f 1e fa          	endbr64 
    4faf:	55                   	push   rbp
    4fb0:	48 89 e5             	mov    rbp,rsp
    4fb3:	48 83 ec 30          	sub    rsp,0x30
    4fb7:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    4fbb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4fbf:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    4fc3:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    4fca:	e9 c9 00 00 00       	jmp    5098 <verify_ip_addr+0xed>
    4fcf:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    4fd2:	48 63 d0             	movsxd rdx,eax
    4fd5:	48 89 d0             	mov    rax,rdx
    4fd8:	48 c1 e0 02          	shl    rax,0x2
    4fdc:	48 01 d0             	add    rax,rdx
    4fdf:	48 c1 e0 03          	shl    rax,0x3
    4fe3:	48 01 d0             	add    rax,rdx
    4fe6:	48 c1 e0 04          	shl    rax,0x4
    4fea:	48 8d 15 2f e5 0e 00 	lea    rdx,[rip+0xee52f]        # f3520 <watchlist>
    4ff1:	48 01 d0             	add    rax,rdx
    4ff4:	48 8d 50 08          	lea    rdx,[rax+0x8]
    4ff8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    4ffc:	48 83 c0 08          	add    rax,0x8
    5000:	48 89 d6             	mov    rsi,rdx
    5003:	48 89 c7             	mov    rdi,rax
    5006:	e8 45 d7 ff ff       	call   2750 <strcmp@plt>
    500b:	85 c0                	test   eax,eax
    500d:	0f 85 81 00 00 00    	jne    5094 <verify_ip_addr+0xe9>
    5013:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5016:	48 63 d0             	movsxd rdx,eax
    5019:	48 89 d0             	mov    rax,rdx
    501c:	48 c1 e0 02          	shl    rax,0x2
    5020:	48 01 d0             	add    rax,rdx
    5023:	48 c1 e0 03          	shl    rax,0x3
    5027:	48 01 d0             	add    rax,rdx
    502a:	48 c1 e0 04          	shl    rax,0x4
    502e:	48 89 c2             	mov    rdx,rax
    5031:	48 8d 05 40 e7 0e 00 	lea    rax,[rip+0xee740]        # f3778 <watchlist+0x258>
    5038:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    503b:	8d 48 01             	lea    ecx,[rax+0x1]
    503e:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5041:	48 63 d0             	movsxd rdx,eax
    5044:	48 89 d0             	mov    rax,rdx
    5047:	48 c1 e0 02          	shl    rax,0x2
    504b:	48 01 d0             	add    rax,rdx
    504e:	48 c1 e0 03          	shl    rax,0x3
    5052:	48 01 d0             	add    rax,rdx
    5055:	48 c1 e0 04          	shl    rax,0x4
    5059:	48 89 c2             	mov    rdx,rax
    505c:	48 8d 05 15 e7 0e 00 	lea    rax,[rip+0xee715]        # f3778 <watchlist+0x258>
    5063:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    5066:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5069:	48 63 d0             	movsxd rdx,eax
    506c:	48 89 d0             	mov    rax,rdx
    506f:	48 c1 e0 02          	shl    rax,0x2
    5073:	48 01 d0             	add    rax,rdx
    5076:	48 c1 e0 03          	shl    rax,0x3
    507a:	48 01 d0             	add    rax,rdx
    507d:	48 c1 e0 04          	shl    rax,0x4
    5081:	48 8d 15 98 e4 0e 00 	lea    rdx,[rip+0xee498]        # f3520 <watchlist>
    5088:	48 01 d0             	add    rax,rdx
    508b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    508f:	e9 f5 00 00 00       	jmp    5189 <verify_ip_addr+0x1de>
    5094:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    5098:	8b 05 7a bf 00 00    	mov    eax,DWORD PTR [rip+0xbf7a]        # 11018 <watchlist_num>
    509e:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    50a1:	0f 8e 28 ff ff ff    	jle    4fcf <verify_ip_addr+0x24>
    50a7:	bf 90 02 00 00       	mov    edi,0x290
    50ac:	e8 af d4 ff ff       	call   2560 <malloc@plt>
    50b1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    50b5:	8b 05 5d bf 00 00    	mov    eax,DWORD PTR [rip+0xbf5d]        # 11018 <watchlist_num>
    50bb:	83 c0 01             	add    eax,0x1
    50be:	89 05 54 bf 00 00    	mov    DWORD PTR [rip+0xbf54],eax        # 11018 <watchlist_num>
    50c4:	8b 05 4e bf 00 00    	mov    eax,DWORD PTR [rip+0xbf4e]        # 11018 <watchlist_num>
    50ca:	48 63 d0             	movsxd rdx,eax
    50cd:	48 89 d0             	mov    rax,rdx
    50d0:	48 c1 e0 02          	shl    rax,0x2
    50d4:	48 01 d0             	add    rax,rdx
    50d7:	48 c1 e0 03          	shl    rax,0x3
    50db:	48 01 d0             	add    rax,rdx
    50de:	48 c1 e0 04          	shl    rax,0x4
    50e2:	48 89 c1             	mov    rcx,rax
    50e5:	48 8d 05 34 e4 0e 00 	lea    rax,[rip+0xee434]        # f3520 <watchlist>
    50ec:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    50f0:	48 01 c8             	add    rax,rcx
    50f3:	48 89 d6             	mov    rsi,rdx
    50f6:	ba 52 00 00 00       	mov    edx,0x52
    50fb:	48 89 c7             	mov    rdi,rax
    50fe:	48 89 d1             	mov    rcx,rdx
    5101:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    5104:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5108:	48 83 c0 08          	add    rax,0x8
    510c:	ba 0f 00 00 00       	mov    edx,0xf
    5111:	be 00 00 00 00       	mov    esi,0x0
    5116:	48 89 c7             	mov    rdi,rax
    5119:	e8 72 d3 ff ff       	call   2490 <memset@plt>
    511e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5122:	48 8d 48 08          	lea    rcx,[rax+0x8]
    5126:	8b 05 ec be 00 00    	mov    eax,DWORD PTR [rip+0xbeec]        # 11018 <watchlist_num>
    512c:	48 63 d0             	movsxd rdx,eax
    512f:	48 89 d0             	mov    rax,rdx
    5132:	48 c1 e0 02          	shl    rax,0x2
    5136:	48 01 d0             	add    rax,rdx
    5139:	48 c1 e0 03          	shl    rax,0x3
    513d:	48 01 d0             	add    rax,rdx
    5140:	48 c1 e0 04          	shl    rax,0x4
    5144:	48 8d 15 d5 e3 0e 00 	lea    rdx,[rip+0xee3d5]        # f3520 <watchlist>
    514b:	48 01 d0             	add    rax,rdx
    514e:	48 83 c0 08          	add    rax,0x8
    5152:	48 89 ce             	mov    rsi,rcx
    5155:	48 89 c7             	mov    rdi,rax
    5158:	e8 13 d6 ff ff       	call   2770 <strcpy@plt>
    515d:	8b 05 b5 be 00 00    	mov    eax,DWORD PTR [rip+0xbeb5]        # 11018 <watchlist_num>
    5163:	48 63 d0             	movsxd rdx,eax
    5166:	48 89 d0             	mov    rax,rdx
    5169:	48 c1 e0 02          	shl    rax,0x2
    516d:	48 01 d0             	add    rax,rdx
    5170:	48 c1 e0 03          	shl    rax,0x3
    5174:	48 01 d0             	add    rax,rdx
    5177:	48 c1 e0 04          	shl    rax,0x4
    517b:	48 8d 15 9e e3 0e 00 	lea    rdx,[rip+0xee39e]        # f3520 <watchlist>
    5182:	48 01 d0             	add    rax,rdx
    5185:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5189:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    518d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5190:	84 c0                	test   al,al
    5192:	74 36                	je     51ca <verify_ip_addr+0x21f>
    5194:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5198:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    519e:	8d 50 01             	lea    edx,[rax+0x1]
    51a1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51a5:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    51ab:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51af:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    51b5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51b9:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    51bc:	01 c2                	add    edx,eax
    51be:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51c2:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    51c8:	eb 34                	jmp    51fe <verify_ip_addr+0x253>
    51ca:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51ce:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    51d4:	8d 50 01             	lea    edx,[rax+0x1]
    51d7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51db:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    51e1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51e5:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    51eb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51ef:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    51f2:	01 c2                	add    edx,eax
    51f4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51f8:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    51fe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5202:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    5208:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    520c:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    520f:	01 c2                	add    edx,eax
    5211:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5215:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    521b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    521f:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    5225:	8d 14 00             	lea    edx,[rax+rax*1]
    5228:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    522c:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    5232:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5236:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    5239:	83 f8 5e             	cmp    eax,0x5e
    523c:	0f 84 9b 00 00 00    	je     52dd <verify_ip_addr+0x332>
    5242:	83 f8 5e             	cmp    eax,0x5e
    5245:	0f 8f cf 00 00 00    	jg     531a <verify_ip_addr+0x36f>
    524b:	83 f8 5c             	cmp    eax,0x5c
    524e:	74 0a                	je     525a <verify_ip_addr+0x2af>
    5250:	83 f8 5d             	cmp    eax,0x5d
    5253:	74 48                	je     529d <verify_ip_addr+0x2f2>
    5255:	e9 c0 00 00 00       	jmp    531a <verify_ip_addr+0x36f>
    525a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    525e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5261:	84 c0                	test   al,al
    5263:	74 1c                	je     5281 <verify_ip_addr+0x2d6>
    5265:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5269:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    526f:	8d 50 01             	lea    edx,[rax+0x1]
    5272:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5276:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    527c:	e9 d5 00 00 00       	jmp    5356 <verify_ip_addr+0x3ab>
    5281:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5285:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    528b:	8d 50 01             	lea    edx,[rax+0x1]
    528e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5292:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    5298:	e9 b9 00 00 00       	jmp    5356 <verify_ip_addr+0x3ab>
    529d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52a1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52a4:	84 c0                	test   al,al
    52a6:	74 1c                	je     52c4 <verify_ip_addr+0x319>
    52a8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ac:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    52b2:	8d 50 01             	lea    edx,[rax+0x1]
    52b5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52b9:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    52bf:	e9 92 00 00 00       	jmp    5356 <verify_ip_addr+0x3ab>
    52c4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52c8:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    52ce:	8d 50 01             	lea    edx,[rax+0x1]
    52d1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52d5:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    52db:	eb 79                	jmp    5356 <verify_ip_addr+0x3ab>
    52dd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52e1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52e4:	84 c0                	test   al,al
    52e6:	74 19                	je     5301 <verify_ip_addr+0x356>
    52e8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52ec:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    52f2:	8d 50 01             	lea    edx,[rax+0x1]
    52f5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52f9:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    52ff:	eb 55                	jmp    5356 <verify_ip_addr+0x3ab>
    5301:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5305:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    530b:	8d 50 01             	lea    edx,[rax+0x1]
    530e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5312:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    5318:	eb 3c                	jmp    5356 <verify_ip_addr+0x3ab>
    531a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    531e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5321:	84 c0                	test   al,al
    5323:	74 19                	je     533e <verify_ip_addr+0x393>
    5325:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5329:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    532f:	8d 50 01             	lea    edx,[rax+0x1]
    5332:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5336:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    533c:	eb 17                	jmp    5355 <verify_ip_addr+0x3aa>
    533e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5342:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    5348:	8d 50 01             	lea    edx,[rax+0x1]
    534b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    534f:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    5355:	90                   	nop
    5356:	b8 01 00 00 00       	mov    eax,0x1
    535b:	c9                   	leave  
    535c:	c3                   	ret    

000000000000535d <ascii_hexdump>:
    535d:	f3 0f 1e fa          	endbr64 
    5361:	55                   	push   rbp
    5362:	48 89 e5             	mov    rbp,rsp
    5365:	48 83 ec 20          	sub    rsp,0x20
    5369:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    536d:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    5370:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5377:	eb 52                	jmp    53cb <ascii_hexdump+0x6e>
    5379:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    537c:	48 63 d0             	movsxd rdx,eax
    537f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5383:	48 01 d0             	add    rax,rdx
    5386:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5389:	3c 20                	cmp    al,0x20
    538b:	76 30                	jbe    53bd <ascii_hexdump+0x60>
    538d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5390:	48 63 d0             	movsxd rdx,eax
    5393:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5397:	48 01 d0             	add    rax,rdx
    539a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    539d:	3c 7e                	cmp    al,0x7e
    539f:	77 1c                	ja     53bd <ascii_hexdump+0x60>
    53a1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    53a4:	48 63 d0             	movsxd rdx,eax
    53a7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53ab:	48 01 d0             	add    rax,rdx
    53ae:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53b1:	0f b6 c0             	movzx  eax,al
    53b4:	89 c7                	mov    edi,eax
    53b6:	e8 55 d1 ff ff       	call   2510 <putchar@plt>
    53bb:	eb 0a                	jmp    53c7 <ascii_hexdump+0x6a>
    53bd:	bf 2e 00 00 00       	mov    edi,0x2e
    53c2:	e8 49 d1 ff ff       	call   2510 <putchar@plt>
    53c7:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    53cb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    53ce:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    53d1:	7c a6                	jl     5379 <ascii_hexdump+0x1c>
    53d3:	bf 0a 00 00 00       	mov    edi,0xa
    53d8:	e8 33 d1 ff ff       	call   2510 <putchar@plt>
    53dd:	90                   	nop
    53de:	c9                   	leave  
    53df:	c3                   	ret    

00000000000053e0 <stdout_alert>:
    53e0:	f3 0f 1e fa          	endbr64 
    53e4:	55                   	push   rbp
    53e5:	48 89 e5             	mov    rbp,rsp
    53e8:	53                   	push   rbx
    53e9:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    53f0:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    53f7:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    53fe:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    5404:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    540b:	00 00 
    540d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5411:	31 c0                	xor    eax,eax
    5413:	bf 00 00 00 00       	mov    edi,0x0
    5418:	e8 53 d4 ff ff       	call   2870 <time@plt>
    541d:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    5424:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    542b:	48 89 c7             	mov    rdi,rax
    542e:	e8 fd d3 ff ff       	call   2830 <localtime@plt>
    5433:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    5436:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    543a:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    5441:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    5448:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    544c:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    5450:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    5457:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    545e:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    5462:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    5466:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    546d:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    5474:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    5478:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    547f:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    5485:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    548b:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    5492:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    5499:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    549f:	8d 48 01             	lea    ecx,[rax+0x1]
    54a2:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    54a8:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    54ae:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    54b5:	57                   	push   rdi
    54b6:	56                   	push   rsi
    54b7:	48 8d 35 08 76 00 00 	lea    rsi,[rip+0x7608]        # cac6 <_IO_stdin_used+0xac6>
    54be:	48 89 c7             	mov    rdi,rax
    54c1:	b8 00 00 00 00       	mov    eax,0x0
    54c6:	e8 55 d1 ff ff       	call   2620 <sprintf@plt>
    54cb:	48 83 c4 10          	add    rsp,0x10
    54cf:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54d6:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    54d9:	3d 80 00 00 00       	cmp    eax,0x80
    54de:	75 4e                	jne    552e <stdout_alert+0x14e>
    54e0:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54e7:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    54eb:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    54f2:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    54f6:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    54fd:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    5504:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    550b:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5512:	49 89 f9             	mov    r9,rdi
    5515:	49 89 f0             	mov    r8,rsi
    5518:	48 8d 35 c3 75 00 00 	lea    rsi,[rip+0x75c3]        # cae2 <_IO_stdin_used+0xae2>
    551f:	48 89 c7             	mov    rdi,rax
    5522:	b8 00 00 00 00       	mov    eax,0x0
    5527:	e8 f4 d0 ff ff       	call   2620 <sprintf@plt>
    552c:	eb 61                	jmp    558f <stdout_alert+0x1af>
    552e:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5535:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    5538:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    553f:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    5543:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    554a:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    554e:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5555:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    5559:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5560:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    5567:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    556e:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5575:	57                   	push   rdi
    5576:	56                   	push   rsi
    5577:	48 8d 35 74 75 00 00 	lea    rsi,[rip+0x7574]        # caf2 <_IO_stdin_used+0xaf2>
    557e:	48 89 c7             	mov    rdi,rax
    5581:	b8 00 00 00 00       	mov    eax,0x0
    5586:	e8 95 d0 ff ff       	call   2620 <sprintf@plt>
    558b:	48 83 c4 10          	add    rsp,0x10
    558f:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5596:	48 89 c6             	mov    rsi,rax
    5599:	48 8d 3d 68 75 00 00 	lea    rdi,[rip+0x7568]        # cb08 <_IO_stdin_used+0xb08>
    55a0:	b8 00 00 00 00       	mov    eax,0x0
    55a5:	e8 d6 ce ff ff       	call   2480 <printf@plt>
    55aa:	48 8b 05 7f ba 00 00 	mov    rax,QWORD PTR [rip+0xba7f]        # 11030 <def_log_file>
    55b1:	48 8d 35 53 75 00 00 	lea    rsi,[rip+0x7553]        # cb0b <_IO_stdin_used+0xb0b>
    55b8:	48 89 c7             	mov    rdi,rax
    55bb:	e8 b0 cf ff ff       	call   2570 <fopen@plt>
    55c0:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    55c7:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    55ce:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55d5:	48 89 d6             	mov    rsi,rdx
    55d8:	48 89 c7             	mov    rdi,rax
    55db:	e8 b0 d0 ff ff       	call   2690 <fputs@plt>
    55e0:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    55e7:	48 89 c7             	mov    rdi,rax
    55ea:	e8 c1 d1 ff ff       	call   27b0 <fclose@plt>
    55ef:	90                   	nop
    55f0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    55f4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    55fb:	00 00 
    55fd:	74 05                	je     5604 <stdout_alert+0x224>
    55ff:	e8 3c d1 ff ff       	call   2740 <__stack_chk_fail@plt>
    5604:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5608:	c9                   	leave  
    5609:	c3                   	ret    

000000000000560a <str_match_parser>:
    560a:	f3 0f 1e fa          	endbr64 
    560e:	55                   	push   rbp
    560f:	48 89 e5             	mov    rbp,rsp
    5612:	53                   	push   rbx
    5613:	48 83 ec 48          	sub    rsp,0x48
    5617:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    561b:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    561f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5626:	00 00 
    5628:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    562c:	31 c0                	xor    eax,eax
    562e:	48 89 e0             	mov    rax,rsp
    5631:	48 89 c3             	mov    rbx,rax
    5634:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5638:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    563b:	85 c0                	test   eax,eax
    563d:	75 0a                	jne    5649 <str_match_parser+0x3f>
    563f:	b8 00 00 00 00       	mov    eax,0x0
    5644:	e9 e1 01 00 00       	jmp    582a <str_match_parser+0x220>
    5649:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    564d:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5650:	83 c0 01             	add    eax,0x1
    5653:	01 c0                	add    eax,eax
    5655:	48 98                	cdqe   
    5657:	48 83 e8 01          	sub    rax,0x1
    565b:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    565f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5663:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5666:	83 c0 01             	add    eax,0x1
    5669:	01 c0                	add    eax,eax
    566b:	48 98                	cdqe   
    566d:	49 89 c2             	mov    r10,rax
    5670:	41 bb 00 00 00 00    	mov    r11d,0x0
    5676:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    567a:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    567d:	83 c0 01             	add    eax,0x1
    5680:	01 c0                	add    eax,eax
    5682:	48 98                	cdqe   
    5684:	49 89 c0             	mov    r8,rax
    5687:	41 b9 00 00 00 00    	mov    r9d,0x0
    568d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5691:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5694:	83 c0 01             	add    eax,0x1
    5697:	01 c0                	add    eax,eax
    5699:	48 98                	cdqe   
    569b:	ba 10 00 00 00       	mov    edx,0x10
    56a0:	48 83 ea 01          	sub    rdx,0x1
    56a4:	48 01 d0             	add    rax,rdx
    56a7:	be 10 00 00 00       	mov    esi,0x10
    56ac:	ba 00 00 00 00       	mov    edx,0x0
    56b1:	48 f7 f6             	div    rsi
    56b4:	48 6b c0 10          	imul   rax,rax,0x10
    56b8:	48 89 c1             	mov    rcx,rax
    56bb:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    56c2:	48 89 e2             	mov    rdx,rsp
    56c5:	48 29 ca             	sub    rdx,rcx
    56c8:	48 39 d4             	cmp    rsp,rdx
    56cb:	74 12                	je     56df <str_match_parser+0xd5>
    56cd:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    56d4:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    56db:	00 00 
    56dd:	eb e9                	jmp    56c8 <str_match_parser+0xbe>
    56df:	48 89 c2             	mov    rdx,rax
    56e2:	81 e2 ff 0f 00 00    	and    edx,0xfff
    56e8:	48 29 d4             	sub    rsp,rdx
    56eb:	48 89 c2             	mov    rdx,rax
    56ee:	81 e2 ff 0f 00 00    	and    edx,0xfff
    56f4:	48 85 d2             	test   rdx,rdx
    56f7:	74 10                	je     5709 <str_match_parser+0xff>
    56f9:	25 ff 0f 00 00       	and    eax,0xfff
    56fe:	48 83 e8 08          	sub    rax,0x8
    5702:	48 01 e0             	add    rax,rsp
    5705:	48 83 08 00          	or     QWORD PTR [rax],0x0
    5709:	48 89 e0             	mov    rax,rsp
    570c:	48 83 c0 00          	add    rax,0x0
    5710:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5714:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5718:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    571b:	83 c0 01             	add    eax,0x1
    571e:	01 c0                	add    eax,eax
    5720:	48 63 d0             	movsxd rdx,eax
    5723:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5727:	be 00 00 00 00       	mov    esi,0x0
    572c:	48 89 c7             	mov    rdi,rax
    572f:	e8 5c cd ff ff       	call   2490 <memset@plt>
    5734:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    573b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    573f:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    5745:	85 c0                	test   eax,eax
    5747:	74 5f                	je     57a8 <str_match_parser+0x19e>
    5749:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    574d:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5750:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    5753:	eb 42                	jmp    5797 <str_match_parser+0x18d>
    5755:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5759:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    575c:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    575f:	48 98                	cdqe   
    5761:	48 01 d0             	add    rax,rdx
    5764:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5767:	0f b6 d0             	movzx  edx,al
    576a:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    576d:	8d 48 01             	lea    ecx,[rax+0x1]
    5770:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    5773:	01 c0                	add    eax,eax
    5775:	48 63 c8             	movsxd rcx,eax
    5778:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    577c:	48 01 c8             	add    rax,rcx
    577f:	48 8d 35 87 73 00 00 	lea    rsi,[rip+0x7387]        # cb0d <_IO_stdin_used+0xb0d>
    5786:	48 89 c7             	mov    rdi,rax
    5789:	b8 00 00 00 00       	mov    eax,0x0
    578e:	e8 8d ce ff ff       	call   2620 <sprintf@plt>
    5793:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    5797:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    579b:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    57a1:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    57a4:	7c af                	jl     5755 <str_match_parser+0x14b>
    57a6:	eb 5a                	jmp    5802 <str_match_parser+0x1f8>
    57a8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57ac:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    57af:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    57b2:	eb 42                	jmp    57f6 <str_match_parser+0x1ec>
    57b4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57b8:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    57bb:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    57be:	48 98                	cdqe   
    57c0:	48 01 d0             	add    rax,rdx
    57c3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    57c6:	0f b6 d0             	movzx  edx,al
    57c9:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    57cc:	8d 48 01             	lea    ecx,[rax+0x1]
    57cf:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    57d2:	01 c0                	add    eax,eax
    57d4:	48 63 c8             	movsxd rcx,eax
    57d7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57db:	48 01 c8             	add    rax,rcx
    57de:	48 8d 35 28 73 00 00 	lea    rsi,[rip+0x7328]        # cb0d <_IO_stdin_used+0xb0d>
    57e5:	48 89 c7             	mov    rdi,rax
    57e8:	b8 00 00 00 00       	mov    eax,0x0
    57ed:	e8 2e ce ff ff       	call   2620 <sprintf@plt>
    57f2:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    57f6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57fa:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    57fd:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    5800:	7c b2                	jl     57b4 <str_match_parser+0x1aa>
    5802:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5806:	48 8d 50 40          	lea    rdx,[rax+0x40]
    580a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    580e:	48 89 d6             	mov    rsi,rdx
    5811:	48 89 c7             	mov    rdi,rax
    5814:	e8 57 ce ff ff       	call   2670 <strstr@plt>
    5819:	48 85 c0             	test   rax,rax
    581c:	74 07                	je     5825 <str_match_parser+0x21b>
    581e:	b8 01 00 00 00       	mov    eax,0x1
    5823:	eb 05                	jmp    582a <str_match_parser+0x220>
    5825:	b8 00 00 00 00       	mov    eax,0x0
    582a:	48 89 dc             	mov    rsp,rbx
    582d:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    5831:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    5838:	00 00 
    583a:	74 05                	je     5841 <str_match_parser+0x237>
    583c:	e8 ff ce ff ff       	call   2740 <__stack_chk_fail@plt>
    5841:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5845:	c9                   	leave  
    5846:	c3                   	ret    

0000000000005847 <is_blocked_ipv4>:
    5847:	f3 0f 1e fa          	endbr64 
    584b:	55                   	push   rbp
    584c:	48 89 e5             	mov    rbp,rsp
    584f:	48 83 ec 20          	sub    rsp,0x20
    5853:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    5857:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    585e:	eb 3b                	jmp    589b <is_blocked_ipv4+0x54>
    5860:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5863:	48 63 d0             	movsxd rdx,eax
    5866:	48 89 d0             	mov    rax,rdx
    5869:	48 c1 e0 03          	shl    rax,0x3
    586d:	48 01 d0             	add    rax,rdx
    5870:	48 01 c0             	add    rax,rax
    5873:	48 8d 15 66 da 0e 00 	lea    rdx,[rip+0xeda66]        # f32e0 <blocked_ipv4_addrs>
    587a:	48 01 c2             	add    rdx,rax
    587d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5881:	48 89 d6             	mov    rsi,rdx
    5884:	48 89 c7             	mov    rdi,rax
    5887:	e8 c4 ce ff ff       	call   2750 <strcmp@plt>
    588c:	85 c0                	test   eax,eax
    588e:	75 07                	jne    5897 <is_blocked_ipv4+0x50>
    5890:	b8 01 00 00 00       	mov    eax,0x1
    5895:	eb 14                	jmp    58ab <is_blocked_ipv4+0x64>
    5897:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    589b:	8b 05 6f b7 00 00    	mov    eax,DWORD PTR [rip+0xb76f]        # 11010 <blk_ipv4_len>
    58a1:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    58a4:	7e ba                	jle    5860 <is_blocked_ipv4+0x19>
    58a6:	b8 00 00 00 00       	mov    eax,0x0
    58ab:	c9                   	leave  
    58ac:	c3                   	ret    

00000000000058ad <none>:
    58ad:	f3 0f 1e fa          	endbr64 
    58b1:	55                   	push   rbp
    58b2:	48 89 e5             	mov    rbp,rsp
    58b5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    58b9:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    58bd:	b8 01 00 00 00       	mov    eax,0x1
    58c2:	5d                   	pop    rbp
    58c3:	c3                   	ret    

00000000000058c4 <pcre_match>:
    58c4:	f3 0f 1e fa          	endbr64 
    58c8:	55                   	push   rbp
    58c9:	48 89 e5             	mov    rbp,rsp
    58cc:	48 83 ec 10          	sub    rsp,0x10
    58d0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    58d4:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    58d8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    58dc:	48 8b 00             	mov    rax,QWORD PTR [rax]
    58df:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    58e3:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    58ea:	41 b8 00 00 00 00    	mov    r8d,0x0
    58f0:	b9 00 00 00 00       	mov    ecx,0x0
    58f5:	ba 00 00 00 00       	mov    edx,0x0
    58fa:	48 89 c6             	mov    rsi,rax
    58fd:	e8 7e cc ff ff       	call   2580 <regexec@plt>
    5902:	83 f8 01             	cmp    eax,0x1
    5905:	75 07                	jne    590e <pcre_match+0x4a>
    5907:	b8 00 00 00 00       	mov    eax,0x0
    590c:	eb 05                	jmp    5913 <pcre_match+0x4f>
    590e:	b8 01 00 00 00       	mov    eax,0x1
    5913:	c9                   	leave  
    5914:	c3                   	ret    

0000000000005915 <rule_library_parser>:
    5915:	f3 0f 1e fa          	endbr64 
    5919:	55                   	push   rbp
    591a:	48 89 e5             	mov    rbp,rsp
    591d:	53                   	push   rbx
    591e:	48 83 ec 48          	sub    rsp,0x48
    5922:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    5926:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    592d:	00 00 
    592f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5933:	31 c0                	xor    eax,eax
    5935:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5939:	48 8d 35 d8 71 00 00 	lea    rsi,[rip+0x71d8]        # cb18 <_IO_stdin_used+0xb18>
    5940:	48 89 c7             	mov    rdi,rax
    5943:	e8 28 cc ff ff       	call   2570 <fopen@plt>
    5948:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    594c:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    5951:	75 22                	jne    5975 <rule_library_parser+0x60>
    5953:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5957:	48 89 c6             	mov    rsi,rax
    595a:	48 8d 3d bf 71 00 00 	lea    rdi,[rip+0x71bf]        # cb20 <_IO_stdin_used+0xb20>
    5961:	b8 00 00 00 00       	mov    eax,0x0
    5966:	e8 15 cb ff ff       	call   2480 <printf@plt>
    596b:	bf 01 00 00 00       	mov    edi,0x1
    5970:	e8 8b cb ff ff       	call   2500 <exit@plt>
    5975:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    597c:	00 
    597d:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5984:	00 
    5985:	e9 70 05 00 00       	jmp    5efa <rule_library_parser+0x5e5>
    598a:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    598e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5992:	48 8d 35 ad 71 00 00 	lea    rsi,[rip+0x71ad]        # cb46 <_IO_stdin_used+0xb46>
    5999:	48 89 c7             	mov    rdi,rax
    599c:	e8 2f ce ff ff       	call   27d0 <strcspn@plt>
    59a1:	48 01 d8             	add    rax,rbx
    59a4:	c6 00 00             	mov    BYTE PTR [rax],0x0
    59a7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59ab:	48 89 c7             	mov    rdi,rax
    59ae:	e8 b9 05 00 00       	call   5f6c <is_comment>
    59b3:	84 c0                	test   al,al
    59b5:	74 05                	je     59bc <rule_library_parser+0xa7>
    59b7:	e9 3e 05 00 00       	jmp    5efa <rule_library_parser+0x5e5>
    59bc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59c0:	ba 1a 00 00 00       	mov    edx,0x1a
    59c5:	48 8d 35 7c 71 00 00 	lea    rsi,[rip+0x717c]        # cb48 <_IO_stdin_used+0xb48>
    59cc:	48 89 c7             	mov    rdi,rax
    59cf:	e8 7c cb ff ff       	call   2550 <strncmp@plt>
    59d4:	85 c0                	test   eax,eax
    59d6:	75 39                	jne    5a11 <rule_library_parser+0xfc>
    59d8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59dc:	48 83 c0 1a          	add    rax,0x1a
    59e0:	48 8d 35 7c 71 00 00 	lea    rsi,[rip+0x717c]        # cb63 <_IO_stdin_used+0xb63>
    59e7:	48 89 c7             	mov    rdi,rax
    59ea:	e8 61 cd ff ff       	call   2750 <strcmp@plt>
    59ef:	85 c0                	test   eax,eax
    59f1:	75 0f                	jne    5a02 <rule_library_parser+0xed>
    59f3:	c7 05 87 b6 00 00 01 	mov    DWORD PTR [rip+0xb687],0x1        # 11084 <strict_icmp_timestamp_req>
    59fa:	00 00 00 
    59fd:	e9 e2 04 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5a02:	c7 05 78 b6 00 00 00 	mov    DWORD PTR [rip+0xb678],0x0        # 11084 <strict_icmp_timestamp_req>
    5a09:	00 00 00 
    5a0c:	e9 d3 04 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5a11:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a15:	ba 1d 00 00 00       	mov    edx,0x1d
    5a1a:	48 8d 35 46 71 00 00 	lea    rsi,[rip+0x7146]        # cb67 <_IO_stdin_used+0xb67>
    5a21:	48 89 c7             	mov    rdi,rax
    5a24:	e8 27 cb ff ff       	call   2550 <strncmp@plt>
    5a29:	85 c0                	test   eax,eax
    5a2b:	75 39                	jne    5a66 <rule_library_parser+0x151>
    5a2d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a31:	48 83 c0 1d          	add    rax,0x1d
    5a35:	48 8d 35 27 71 00 00 	lea    rsi,[rip+0x7127]        # cb63 <_IO_stdin_used+0xb63>
    5a3c:	48 89 c7             	mov    rdi,rax
    5a3f:	e8 0c cd ff ff       	call   2750 <strcmp@plt>
    5a44:	85 c0                	test   eax,eax
    5a46:	75 0f                	jne    5a57 <rule_library_parser+0x142>
    5a48:	c7 05 36 b6 00 00 01 	mov    DWORD PTR [rip+0xb636],0x1        # 11088 <strict_nmap_host_alive_check>
    5a4f:	00 00 00 
    5a52:	e9 8d 04 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5a57:	c7 05 27 b6 00 00 00 	mov    DWORD PTR [rip+0xb627],0x0        # 11088 <strict_nmap_host_alive_check>
    5a5e:	00 00 00 
    5a61:	e9 7e 04 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5a66:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a6a:	ba 17 00 00 00       	mov    edx,0x17
    5a6f:	48 8d 35 0f 71 00 00 	lea    rsi,[rip+0x710f]        # cb85 <_IO_stdin_used+0xb85>
    5a76:	48 89 c7             	mov    rdi,rax
    5a79:	e8 d2 ca ff ff       	call   2550 <strncmp@plt>
    5a7e:	85 c0                	test   eax,eax
    5a80:	75 43                	jne    5ac5 <rule_library_parser+0x1b0>
    5a82:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a86:	48 89 c7             	mov    rdi,rax
    5a89:	e8 72 cb ff ff       	call   2600 <strlen@plt>
    5a8e:	48 83 f8 17          	cmp    rax,0x17
    5a92:	77 16                	ja     5aaa <rule_library_parser+0x195>
    5a94:	48 8d 3d 02 71 00 00 	lea    rdi,[rip+0x7102]        # cb9d <_IO_stdin_used+0xb9d>
    5a9b:	e8 40 ca ff ff       	call   24e0 <puts@plt>
    5aa0:	bf 01 00 00 00       	mov    edi,0x1
    5aa5:	e8 56 ca ff ff       	call   2500 <exit@plt>
    5aaa:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5aae:	48 83 c0 17          	add    rax,0x17
    5ab2:	48 89 c7             	mov    rdi,rax
    5ab5:	e8 06 cc ff ff       	call   26c0 <atoi@plt>
    5aba:	89 05 a0 44 10 00    	mov    DWORD PTR [rip+0x1044a0],eax        # 109f60 <clean_delay_pkts>
    5ac0:	e9 1f 04 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5ac5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ac9:	ba 18 00 00 00       	mov    edx,0x18
    5ace:	48 8d 35 e2 70 00 00 	lea    rsi,[rip+0x70e2]        # cbb7 <_IO_stdin_used+0xbb7>
    5ad5:	48 89 c7             	mov    rdi,rax
    5ad8:	e8 73 ca ff ff       	call   2550 <strncmp@plt>
    5add:	85 c0                	test   eax,eax
    5adf:	75 46                	jne    5b27 <rule_library_parser+0x212>
    5ae1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ae5:	48 89 c7             	mov    rdi,rax
    5ae8:	e8 13 cb ff ff       	call   2600 <strlen@plt>
    5aed:	48 83 f8 18          	cmp    rax,0x18
    5af1:	75 16                	jne    5b09 <rule_library_parser+0x1f4>
    5af3:	48 8d 3d a3 70 00 00 	lea    rdi,[rip+0x70a3]        # cb9d <_IO_stdin_used+0xb9d>
    5afa:	e8 e1 c9 ff ff       	call   24e0 <puts@plt>
    5aff:	bf 01 00 00 00       	mov    edi,0x1
    5b04:	e8 f7 c9 ff ff       	call   2500 <exit@plt>
    5b09:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b0d:	48 83 c0 18          	add    rax,0x18
    5b11:	48 89 c7             	mov    rdi,rax
    5b14:	e8 a7 cb ff ff       	call   26c0 <atoi@plt>
    5b19:	48 98                	cdqe   
    5b1b:	48 89 05 96 b7 00 00 	mov    QWORD PTR [rip+0xb796],rax        # 112b8 <clean_delay>
    5b22:	e9 bd 03 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5b27:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b2b:	ba 0b 00 00 00       	mov    edx,0xb
    5b30:	48 8d 35 99 70 00 00 	lea    rsi,[rip+0x7099]        # cbd0 <_IO_stdin_used+0xbd0>
    5b37:	48 89 c7             	mov    rdi,rax
    5b3a:	e8 11 ca ff ff       	call   2550 <strncmp@plt>
    5b3f:	85 c0                	test   eax,eax
    5b41:	75 33                	jne    5b76 <rule_library_parser+0x261>
    5b43:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b47:	48 83 c0 0b          	add    rax,0xb
    5b4b:	48 8d 35 11 70 00 00 	lea    rsi,[rip+0x7011]        # cb63 <_IO_stdin_used+0xb63>
    5b52:	48 89 c7             	mov    rdi,rax
    5b55:	e8 f6 cb ff ff       	call   2750 <strcmp@plt>
    5b5a:	85 c0                	test   eax,eax
    5b5c:	75 0c                	jne    5b6a <rule_library_parser+0x255>
    5b5e:	c6 05 bc 43 10 00 01 	mov    BYTE PTR [rip+0x1043bc],0x1        # 109f21 <use_sqlite>
    5b65:	e9 7a 03 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5b6a:	c6 05 b0 43 10 00 00 	mov    BYTE PTR [rip+0x1043b0],0x0        # 109f21 <use_sqlite>
    5b71:	e9 6e 03 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5b76:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b7a:	ba 15 00 00 00       	mov    edx,0x15
    5b7f:	48 8d 35 56 70 00 00 	lea    rsi,[rip+0x7056]        # cbdc <_IO_stdin_used+0xbdc>
    5b86:	48 89 c7             	mov    rdi,rax
    5b89:	e8 c2 c9 ff ff       	call   2550 <strncmp@plt>
    5b8e:	85 c0                	test   eax,eax
    5b90:	75 34                	jne    5bc6 <rule_library_parser+0x2b1>
    5b92:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b96:	48 83 c0 15          	add    rax,0x15
    5b9a:	48 89 c6             	mov    rsi,rax
    5b9d:	48 8d 3d 9c 43 10 00 	lea    rdi,[rip+0x10439c]        # 109f40 <sqlite_db_path>
    5ba4:	e8 c7 cb ff ff       	call   2770 <strcpy@plt>
    5ba9:	48 8d 35 90 43 10 00 	lea    rsi,[rip+0x104390]        # 109f40 <sqlite_db_path>
    5bb0:	48 8d 3d 3b 70 00 00 	lea    rdi,[rip+0x703b]        # cbf2 <_IO_stdin_used+0xbf2>
    5bb7:	b8 00 00 00 00       	mov    eax,0x0
    5bbc:	e8 d8 2b 00 00       	call   8799 <livedebug>
    5bc1:	e9 1e 03 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5bc6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bca:	ba 0b 00 00 00       	mov    edx,0xb
    5bcf:	48 8d 35 35 70 00 00 	lea    rsi,[rip+0x7035]        # cc0b <_IO_stdin_used+0xc0b>
    5bd6:	48 89 c7             	mov    rdi,rax
    5bd9:	e8 72 c9 ff ff       	call   2550 <strncmp@plt>
    5bde:	85 c0                	test   eax,eax
    5be0:	75 34                	jne    5c16 <rule_library_parser+0x301>
    5be2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5be6:	48 83 c0 0b          	add    rax,0xb
    5bea:	48 89 c6             	mov    rsi,rax
    5bed:	48 8d 3d 7c 43 10 00 	lea    rdi,[rip+0x10437c]        # 109f70 <input_adapter>
    5bf4:	e8 77 cb ff ff       	call   2770 <strcpy@plt>
    5bf9:	48 8d 35 70 43 10 00 	lea    rsi,[rip+0x104370]        # 109f70 <input_adapter>
    5c00:	48 8d 3d 11 70 00 00 	lea    rdi,[rip+0x7011]        # cc18 <_IO_stdin_used+0xc18>
    5c07:	b8 00 00 00 00       	mov    eax,0x0
    5c0c:	e8 88 2b 00 00       	call   8799 <livedebug>
    5c11:	e9 ce 02 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5c16:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c1a:	ba 0c 00 00 00       	mov    edx,0xc
    5c1f:	48 8d 35 25 70 00 00 	lea    rsi,[rip+0x7025]        # cc4b <_IO_stdin_used+0xc4b>
    5c26:	48 89 c7             	mov    rdi,rax
    5c29:	e8 22 c9 ff ff       	call   2550 <strncmp@plt>
    5c2e:	85 c0                	test   eax,eax
    5c30:	75 34                	jne    5c66 <rule_library_parser+0x351>
    5c32:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c36:	48 83 c0 0c          	add    rax,0xc
    5c3a:	48 89 c6             	mov    rsi,rax
    5c3d:	48 8d 3d 3c 43 10 00 	lea    rdi,[rip+0x10433c]        # 109f80 <output_adapter>
    5c44:	e8 27 cb ff ff       	call   2770 <strcpy@plt>
    5c49:	48 8d 35 30 43 10 00 	lea    rsi,[rip+0x104330]        # 109f80 <output_adapter>
    5c50:	48 8d 3d 01 70 00 00 	lea    rdi,[rip+0x7001]        # cc58 <_IO_stdin_used+0xc58>
    5c57:	b8 00 00 00 00       	mov    eax,0x0
    5c5c:	e8 38 2b 00 00       	call   8799 <livedebug>
    5c61:	e9 7e 02 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5c66:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c6a:	ba 05 00 00 00       	mov    edx,0x5
    5c6f:	48 8d 35 16 70 00 00 	lea    rsi,[rip+0x7016]        # cc8c <_IO_stdin_used+0xc8c>
    5c76:	48 89 c7             	mov    rdi,rax
    5c79:	e8 d2 c8 ff ff       	call   2550 <strncmp@plt>
    5c7e:	85 c0                	test   eax,eax
    5c80:	0f 85 81 00 00 00    	jne    5d07 <rule_library_parser+0x3f2>
    5c86:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c8a:	48 83 c0 05          	add    rax,0x5
    5c8e:	48 89 c6             	mov    rsi,rax
    5c91:	48 8d 3d fa 6f 00 00 	lea    rdi,[rip+0x6ffa]        # cc92 <_IO_stdin_used+0xc92>
    5c98:	b8 00 00 00 00       	mov    eax,0x0
    5c9d:	e8 f7 2a 00 00       	call   8799 <livedebug>
    5ca2:	48 8d 3d f2 6f 00 00 	lea    rdi,[rip+0x6ff2]        # cc9b <_IO_stdin_used+0xc9b>
    5ca9:	b8 00 00 00 00       	mov    eax,0x0
    5cae:	e8 cd c7 ff ff       	call   2480 <printf@plt>
    5cb3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cb7:	48 83 c0 05          	add    rax,0x5
    5cbb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5cbe:	0f b6 15 e2 6f 00 00 	movzx  edx,BYTE PTR [rip+0x6fe2]        # cca7 <_IO_stdin_used+0xca7>
    5cc5:	0f b6 c0             	movzx  eax,al
    5cc8:	0f b6 d2             	movzx  edx,dl
    5ccb:	29 d0                	sub    eax,edx
    5ccd:	85 c0                	test   eax,eax
    5ccf:	75 1b                	jne    5cec <rule_library_parser+0x3d7>
    5cd1:	c7 05 49 b3 00 00 02 	mov    DWORD PTR [rip+0xb349],0x2        # 11024 <VIGIL_MODE>
    5cd8:	00 00 00 
    5cdb:	48 8d 3d c7 6f 00 00 	lea    rdi,[rip+0x6fc7]        # cca9 <_IO_stdin_used+0xca9>
    5ce2:	e8 f9 c7 ff ff       	call   24e0 <puts@plt>
    5ce7:	e9 f8 01 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5cec:	c7 05 2e b3 00 00 01 	mov    DWORD PTR [rip+0xb32e],0x1        # 11024 <VIGIL_MODE>
    5cf3:	00 00 00 
    5cf6:	48 8d 3d c3 6f 00 00 	lea    rdi,[rip+0x6fc3]        # ccc0 <_IO_stdin_used+0xcc0>
    5cfd:	e8 de c7 ff ff       	call   24e0 <puts@plt>
    5d02:	e9 dd 01 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5d07:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d0b:	ba 08 00 00 00       	mov    edx,0x8
    5d10:	48 8d 35 c0 6f 00 00 	lea    rsi,[rip+0x6fc0]        # ccd7 <_IO_stdin_used+0xcd7>
    5d17:	48 89 c7             	mov    rdi,rax
    5d1a:	e8 31 c8 ff ff       	call   2550 <strncmp@plt>
    5d1f:	85 c0                	test   eax,eax
    5d21:	75 34                	jne    5d57 <rule_library_parser+0x442>
    5d23:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d27:	48 83 c0 08          	add    rax,0x8
    5d2b:	48 89 c6             	mov    rsi,rax
    5d2e:	48 8d 3d 5b 42 10 00 	lea    rdi,[rip+0x10425b]        # 109f90 <local_ip>
    5d35:	e8 36 ca ff ff       	call   2770 <strcpy@plt>
    5d3a:	48 8d 35 4f 42 10 00 	lea    rsi,[rip+0x10424f]        # 109f90 <local_ip>
    5d41:	48 8d 3d 98 6f 00 00 	lea    rdi,[rip+0x6f98]        # cce0 <_IO_stdin_used+0xce0>
    5d48:	b8 00 00 00 00       	mov    eax,0x0
    5d4d:	e8 47 2a 00 00       	call   8799 <livedebug>
    5d52:	e9 8d 01 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5d57:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d5b:	ba 06 00 00 00       	mov    edx,0x6
    5d60:	48 8d 35 94 6f 00 00 	lea    rsi,[rip+0x6f94]        # ccfb <_IO_stdin_used+0xcfb>
    5d67:	48 89 c7             	mov    rdi,rax
    5d6a:	e8 e1 c7 ff ff       	call   2550 <strncmp@plt>
    5d6f:	85 c0                	test   eax,eax
    5d71:	75 1c                	jne    5d8f <rule_library_parser+0x47a>
    5d73:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d77:	48 83 c0 06          	add    rax,0x6
    5d7b:	48 89 c6             	mov    rsi,rax
    5d7e:	48 8d 3d 2b 42 10 00 	lea    rdi,[rip+0x10422b]        # 109fb0 <def_gw>
    5d85:	e8 e6 c9 ff ff       	call   2770 <strcpy@plt>
    5d8a:	e9 55 01 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5d8f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d93:	ba 08 00 00 00       	mov    edx,0x8
    5d98:	48 8d 35 63 6f 00 00 	lea    rsi,[rip+0x6f63]        # cd02 <_IO_stdin_used+0xd02>
    5d9f:	48 89 c7             	mov    rdi,rax
    5da2:	e8 a9 c7 ff ff       	call   2550 <strncmp@plt>
    5da7:	85 c0                	test   eax,eax
    5da9:	75 3f                	jne    5dea <rule_library_parser+0x4d5>
    5dab:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5daf:	48 83 c0 08          	add    rax,0x8
    5db3:	48 8d 35 a9 6d 00 00 	lea    rsi,[rip+0x6da9]        # cb63 <_IO_stdin_used+0xb63>
    5dba:	48 89 c7             	mov    rdi,rax
    5dbd:	e8 8e c9 ff ff       	call   2750 <strcmp@plt>
    5dc2:	85 c0                	test   eax,eax
    5dc4:	75 18                	jne    5dde <rule_library_parser+0x4c9>
    5dc6:	c6 05 f5 41 10 00 01 	mov    BYTE PTR [rip+0x1041f5],0x1        # 109fc2 <use_spi>
    5dcd:	48 8d 3d 37 6f 00 00 	lea    rdi,[rip+0x6f37]        # cd0b <_IO_stdin_used+0xd0b>
    5dd4:	e8 07 c7 ff ff       	call   24e0 <puts@plt>
    5dd9:	e9 06 01 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5dde:	c6 05 dd 41 10 00 00 	mov    BYTE PTR [rip+0x1041dd],0x0        # 109fc2 <use_spi>
    5de5:	e9 fa 00 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5dea:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dee:	ba 09 00 00 00       	mov    edx,0x9
    5df3:	48 8d 35 2a 6f 00 00 	lea    rsi,[rip+0x6f2a]        # cd24 <_IO_stdin_used+0xd24>
    5dfa:	48 89 c7             	mov    rdi,rax
    5dfd:	e8 4e c7 ff ff       	call   2550 <strncmp@plt>
    5e02:	85 c0                	test   eax,eax
    5e04:	75 27                	jne    5e2d <rule_library_parser+0x518>
    5e06:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e0a:	48 89 c7             	mov    rdi,rax
    5e0d:	e8 83 01 00 00       	call   5f95 <rstrip>
    5e12:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e16:	48 83 c0 09          	add    rax,0x9
    5e1a:	48 89 c7             	mov    rdi,rax
    5e1d:	e8 30 4f 00 00       	call   ad52 <homenet_toi>
    5e22:	89 05 9c 41 10 00    	mov    DWORD PTR [rip+0x10419c],eax        # 109fc4 <homenet>
    5e28:	e9 b7 00 00 00       	jmp    5ee4 <rule_library_parser+0x5cf>
    5e2d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e31:	ba 0e 00 00 00       	mov    edx,0xe
    5e36:	48 8d 35 f1 6e 00 00 	lea    rsi,[rip+0x6ef1]        # cd2e <_IO_stdin_used+0xd2e>
    5e3d:	48 89 c7             	mov    rdi,rax
    5e40:	e8 0b c7 ff ff       	call   2550 <strncmp@plt>
    5e45:	85 c0                	test   eax,eax
    5e47:	75 24                	jne    5e6d <rule_library_parser+0x558>
    5e49:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e4d:	48 89 c7             	mov    rdi,rax
    5e50:	e8 40 01 00 00       	call   5f95 <rstrip>
    5e55:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e59:	48 83 c0 0e          	add    rax,0xe
    5e5d:	48 89 c7             	mov    rdi,rax
    5e60:	e8 ed 4e 00 00       	call   ad52 <homenet_toi>
    5e65:	89 05 5d 41 10 00    	mov    DWORD PTR [rip+0x10415d],eax        # 109fc8 <homenetmask>
    5e6b:	eb 77                	jmp    5ee4 <rule_library_parser+0x5cf>
    5e6d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e71:	ba 09 00 00 00       	mov    edx,0x9
    5e76:	48 8d 35 c0 6e 00 00 	lea    rsi,[rip+0x6ec0]        # cd3d <_IO_stdin_used+0xd3d>
    5e7d:	48 89 c7             	mov    rdi,rax
    5e80:	e8 cb c6 ff ff       	call   2550 <strncmp@plt>
    5e85:	85 c0                	test   eax,eax
    5e87:	75 3f                	jne    5ec8 <rule_library_parser+0x5b3>
    5e89:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e8d:	48 89 c7             	mov    rdi,rax
    5e90:	e8 00 01 00 00       	call   5f95 <rstrip>
    5e95:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e99:	48 83 c0 09          	add    rax,0x9
    5e9d:	48 8d 35 a3 6e 00 00 	lea    rsi,[rip+0x6ea3]        # cd47 <_IO_stdin_used+0xd47>
    5ea4:	48 89 c7             	mov    rdi,rax
    5ea7:	e8 a4 c8 ff ff       	call   2750 <strcmp@plt>
    5eac:	85 c0                	test   eax,eax
    5eae:	75 0c                	jne    5ebc <rule_library_parser+0x5a7>
    5eb0:	c7 05 ae 40 10 00 04 	mov    DWORD PTR [rip+0x1040ae],0x4        # 109f68 <vigil_location>
    5eb7:	00 00 00 
    5eba:	eb 28                	jmp    5ee4 <rule_library_parser+0x5cf>
    5ebc:	c7 05 a2 40 10 00 03 	mov    DWORD PTR [rip+0x1040a2],0x3        # 109f68 <vigil_location>
    5ec3:	00 00 00 
    5ec6:	eb 1c                	jmp    5ee4 <rule_library_parser+0x5cf>
    5ec8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ecc:	48 89 c7             	mov    rdi,rax
    5ecf:	e8 7e 00 00 00       	call   5f52 <is_rule>
    5ed4:	84 c0                	test   al,al
    5ed6:	74 0c                	je     5ee4 <rule_library_parser+0x5cf>
    5ed8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5edc:	48 89 c7             	mov    rdi,rax
    5edf:	e8 18 01 00 00       	call   5ffc <rule_parser>
    5ee4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ee8:	ba 08 00 00 00       	mov    edx,0x8
    5eed:	be 00 00 00 00       	mov    esi,0x0
    5ef2:	48 89 c7             	mov    rdi,rax
    5ef5:	e8 96 c5 ff ff       	call   2490 <memset@plt>
    5efa:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5efe:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5f02:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5f06:	48 89 ce             	mov    rsi,rcx
    5f09:	48 89 c7             	mov    rdi,rax
    5f0c:	e8 4f c8 ff ff       	call   2760 <getline@plt>
    5f11:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5f15:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5f1a:	0f 85 6a fa ff ff    	jne    598a <rule_library_parser+0x75>
    5f20:	8b 05 fe b0 00 00    	mov    eax,DWORD PTR [rip+0xb0fe]        # 11024 <VIGIL_MODE>
    5f26:	3d ff ff 00 00       	cmp    eax,0xffff
    5f2b:	75 0a                	jne    5f37 <rule_library_parser+0x622>
    5f2d:	c7 05 ed b0 00 00 01 	mov    DWORD PTR [rip+0xb0ed],0x1        # 11024 <VIGIL_MODE>
    5f34:	00 00 00 
    5f37:	90                   	nop
    5f38:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5f3c:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5f43:	00 00 
    5f45:	74 05                	je     5f4c <rule_library_parser+0x637>
    5f47:	e8 f4 c7 ff ff       	call   2740 <__stack_chk_fail@plt>
    5f4c:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5f50:	c9                   	leave  
    5f51:	c3                   	ret    

0000000000005f52 <is_rule>:
    5f52:	f3 0f 1e fa          	endbr64 
    5f56:	55                   	push   rbp
    5f57:	48 89 e5             	mov    rbp,rsp
    5f5a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f5e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f62:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5f65:	3c 24                	cmp    al,0x24
    5f67:	0f 94 c0             	sete   al
    5f6a:	5d                   	pop    rbp
    5f6b:	c3                   	ret    

0000000000005f6c <is_comment>:
    5f6c:	f3 0f 1e fa          	endbr64 
    5f70:	55                   	push   rbp
    5f71:	48 89 e5             	mov    rbp,rsp
    5f74:	48 83 ec 10          	sub    rsp,0x10
    5f78:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5f7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5f80:	be 23 00 00 00       	mov    esi,0x23
    5f85:	48 89 c7             	mov    rdi,rax
    5f88:	e8 63 c7 ff ff       	call   26f0 <strchr@plt>
    5f8d:	48 85 c0             	test   rax,rax
    5f90:	0f 95 c0             	setne  al
    5f93:	c9                   	leave  
    5f94:	c3                   	ret    

0000000000005f95 <rstrip>:
    5f95:	f3 0f 1e fa          	endbr64 
    5f99:	55                   	push   rbp
    5f9a:	48 89 e5             	mov    rbp,rsp
    5f9d:	48 83 ec 10          	sub    rsp,0x10
    5fa1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5fa5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5fa9:	48 8d 35 96 6b 00 00 	lea    rsi,[rip+0x6b96]        # cb46 <_IO_stdin_used+0xb46>
    5fb0:	48 89 c7             	mov    rdi,rax
    5fb3:	e8 18 c8 ff ff       	call   27d0 <strcspn@plt>
    5fb8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5fbc:	48 01 d0             	add    rax,rdx
    5fbf:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5fc2:	90                   	nop
    5fc3:	c9                   	leave  
    5fc4:	c3                   	ret    

0000000000005fc5 <syntax_error>:
    5fc5:	f3 0f 1e fa          	endbr64 
    5fc9:	55                   	push   rbp
    5fca:	48 89 e5             	mov    rbp,rsp
    5fcd:	48 83 ec 10          	sub    rsp,0x10
    5fd1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5fd5:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    5fd8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    5fdc:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    5fdf:	89 c6                	mov    esi,eax
    5fe1:	48 8d 3d 68 6d 00 00 	lea    rdi,[rip+0x6d68]        # cd50 <_IO_stdin_used+0xd50>
    5fe8:	b8 00 00 00 00       	mov    eax,0x0
    5fed:	e8 8e c4 ff ff       	call   2480 <printf@plt>
    5ff2:	bf 01 00 00 00       	mov    edi,0x1
    5ff7:	e8 04 c5 ff ff       	call   2500 <exit@plt>

0000000000005ffc <rule_parser>:
    5ffc:	f3 0f 1e fa          	endbr64 
    6000:	55                   	push   rbp
    6001:	48 89 e5             	mov    rbp,rsp
    6004:	48 83 ec 40          	sub    rsp,0x40
    6008:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    600c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6013:	00 00 
    6015:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6019:	31 c0                	xor    eax,eax
    601b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    601f:	48 83 c0 01          	add    rax,0x1
    6023:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6027:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    602b:	48 8d 35 e6 6a 00 00 	lea    rsi,[rip+0x6ae6]        # cb18 <_IO_stdin_used+0xb18>
    6032:	48 89 c7             	mov    rdi,rax
    6035:	e8 36 c5 ff ff       	call   2570 <fopen@plt>
    603a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    603e:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    6043:	75 22                	jne    6067 <rule_parser+0x6b>
    6045:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6049:	48 89 c6             	mov    rsi,rax
    604c:	48 8d 3d 1d 6d 00 00 	lea    rdi,[rip+0x6d1d]        # cd70 <_IO_stdin_used+0xd70>
    6053:	b8 00 00 00 00       	mov    eax,0x0
    6058:	e8 23 c4 ff ff       	call   2480 <printf@plt>
    605d:	bf 01 00 00 00       	mov    edi,0x1
    6062:	e8 99 c4 ff ff       	call   2500 <exit@plt>
    6067:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    606b:	48 89 c6             	mov    rsi,rax
    606e:	48 8d 3d 2e 6d 00 00 	lea    rdi,[rip+0x6d2e]        # cda3 <_IO_stdin_used+0xda3>
    6075:	b8 00 00 00 00       	mov    eax,0x0
    607a:	e8 01 c4 ff ff       	call   2480 <printf@plt>
    607f:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6086:	00 
    6087:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    608e:	00 
    608f:	eb 54                	jmp    60e5 <rule_parser+0xe9>
    6091:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6095:	48 89 c7             	mov    rdi,rax
    6098:	e8 cf fe ff ff       	call   5f6c <is_comment>
    609d:	84 c0                	test   al,al
    609f:	74 02                	je     60a3 <rule_parser+0xa7>
    60a1:	eb 42                	jmp    60e5 <rule_parser+0xe9>
    60a3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    60a7:	48 89 c7             	mov    rdi,rax
    60aa:	e8 e6 fe ff ff       	call   5f95 <rstrip>
    60af:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    60b3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    60b6:	0f b6 c0             	movzx  eax,al
    60b9:	f7 d8                	neg    eax
    60bb:	85 c0                	test   eax,eax
    60bd:	75 02                	jne    60c1 <rule_parser+0xc5>
    60bf:	eb 24                	jmp    60e5 <rule_parser+0xe9>
    60c1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    60c5:	48 8d 35 e8 6c 00 00 	lea    rsi,[rip+0x6ce8]        # cdb4 <_IO_stdin_used+0xdb4>
    60cc:	48 89 c7             	mov    rdi,rax
    60cf:	e8 9c c5 ff ff       	call   2670 <strstr@plt>
    60d4:	48 85 c0             	test   rax,rax
    60d7:	74 0c                	je     60e5 <rule_parser+0xe9>
    60d9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    60dd:	48 89 c7             	mov    rdi,rax
    60e0:	e8 fd 37 00 00       	call   98e2 <line_parser>
    60e5:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    60e9:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    60ed:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    60f1:	48 89 ce             	mov    rsi,rcx
    60f4:	48 89 c7             	mov    rdi,rax
    60f7:	e8 64 c6 ff ff       	call   2760 <getline@plt>
    60fc:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6100:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    6105:	75 8a                	jne    6091 <rule_parser+0x95>
    6107:	0f b6 05 12 3e 10 00 	movzx  eax,BYTE PTR [rip+0x103e12]        # 109f20 <debug_mode>
    610e:	84 c0                	test   al,al
    6110:	74 18                	je     612a <rule_parser+0x12e>
    6112:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6116:	48 89 c6             	mov    rsi,rax
    6119:	48 8d 3d 9a 6c 00 00 	lea    rdi,[rip+0x6c9a]        # cdba <_IO_stdin_used+0xdba>
    6120:	b8 00 00 00 00       	mov    eax,0x0
    6125:	e8 56 c3 ff ff       	call   2480 <printf@plt>
    612a:	90                   	nop
    612b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    612f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    6136:	00 00 
    6138:	74 05                	je     613f <rule_parser+0x143>
    613a:	e8 01 c6 ff ff       	call   2740 <__stack_chk_fail@plt>
    613f:	c9                   	leave  
    6140:	c3                   	ret    

0000000000006141 <deny_conf_parser>:
    6141:	f3 0f 1e fa          	endbr64 
    6145:	55                   	push   rbp
    6146:	48 89 e5             	mov    rbp,rsp
    6149:	48 83 ec 50          	sub    rsp,0x50
    614d:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    6151:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6158:	00 00 
    615a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    615e:	31 c0                	xor    eax,eax
    6160:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6164:	48 8d 35 ad 69 00 00 	lea    rsi,[rip+0x69ad]        # cb18 <_IO_stdin_used+0xb18>
    616b:	48 89 c7             	mov    rdi,rax
    616e:	e8 fd c3 ff ff       	call   2570 <fopen@plt>
    6173:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    6177:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    617c:	75 22                	jne    61a0 <deny_conf_parser+0x5f>
    617e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    6182:	48 89 c6             	mov    rsi,rax
    6185:	48 8d 3d 44 6c 00 00 	lea    rdi,[rip+0x6c44]        # cdd0 <_IO_stdin_used+0xdd0>
    618c:	b8 00 00 00 00       	mov    eax,0x0
    6191:	e8 ea c2 ff ff       	call   2480 <printf@plt>
    6196:	bf 01 00 00 00       	mov    edi,0x1
    619b:	e8 60 c3 ff ff       	call   2500 <exit@plt>
    61a0:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    61a7:	00 
    61a8:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    61af:	00 
    61b0:	e9 9a 00 00 00       	jmp    624f <deny_conf_parser+0x10e>
    61b5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    61b9:	48 89 c7             	mov    rdi,rax
    61bc:	e8 d4 fd ff ff       	call   5f95 <rstrip>
    61c1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    61c5:	48 89 c7             	mov    rdi,rax
    61c8:	e8 9f fd ff ff       	call   5f6c <is_comment>
    61cd:	84 c0                	test   al,al
    61cf:	74 02                	je     61d3 <deny_conf_parser+0x92>
    61d1:	eb 7c                	jmp    624f <deny_conf_parser+0x10e>
    61d3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    61d7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    61da:	0f b6 c0             	movzx  eax,al
    61dd:	f7 d8                	neg    eax
    61df:	85 c0                	test   eax,eax
    61e1:	75 02                	jne    61e5 <deny_conf_parser+0xa4>
    61e3:	eb 6a                	jmp    624f <deny_conf_parser+0x10e>
    61e5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    61e9:	48 8d 35 11 6c 00 00 	lea    rsi,[rip+0x6c11]        # ce01 <_IO_stdin_used+0xe01>
    61f0:	48 89 c7             	mov    rdi,rax
    61f3:	e8 78 c4 ff ff       	call   2670 <strstr@plt>
    61f8:	48 85 c0             	test   rax,rax
    61fb:	74 52                	je     624f <deny_conf_parser+0x10e>
    61fd:	8b 05 0d ae 00 00    	mov    eax,DWORD PTR [rip+0xae0d]        # 11010 <blk_ipv4_len>
    6203:	83 c0 01             	add    eax,0x1
    6206:	89 05 04 ae 00 00    	mov    DWORD PTR [rip+0xae04],eax        # 11010 <blk_ipv4_len>
    620c:	8b 05 fe ad 00 00    	mov    eax,DWORD PTR [rip+0xadfe]        # 11010 <blk_ipv4_len>
    6212:	48 63 d0             	movsxd rdx,eax
    6215:	48 89 d0             	mov    rax,rdx
    6218:	48 c1 e0 03          	shl    rax,0x3
    621c:	48 01 d0             	add    rax,rdx
    621f:	48 01 c0             	add    rax,rax
    6222:	48 8d 15 b7 d0 0e 00 	lea    rdx,[rip+0xed0b7]        # f32e0 <blocked_ipv4_addrs>
    6229:	48 01 d0             	add    rax,rdx
    622c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6230:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6234:	48 83 c0 05          	add    rax,0x5
    6238:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    623c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6240:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    6244:	48 89 d6             	mov    rsi,rdx
    6247:	48 89 c7             	mov    rdi,rax
    624a:	e8 21 c5 ff ff       	call   2770 <strcpy@plt>
    624f:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    6253:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6257:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    625b:	48 89 ce             	mov    rsi,rcx
    625e:	48 89 c7             	mov    rdi,rax
    6261:	e8 fa c4 ff ff       	call   2760 <getline@plt>
    6266:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    626a:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    626f:	0f 85 40 ff ff ff    	jne    61b5 <deny_conf_parser+0x74>
    6275:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6279:	48 85 c0             	test   rax,rax
    627c:	74 0c                	je     628a <deny_conf_parser+0x149>
    627e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6282:	48 89 c7             	mov    rdi,rax
    6285:	e8 66 c3 ff ff       	call   25f0 <free@plt>
    628a:	90                   	nop
    628b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    628f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    6296:	00 00 
    6298:	74 05                	je     629f <deny_conf_parser+0x15e>
    629a:	e8 a1 c4 ff ff       	call   2740 <__stack_chk_fail@plt>
    629f:	c9                   	leave  
    62a0:	c3                   	ret    

00000000000062a1 <host_mon_parser>:
    62a1:	f3 0f 1e fa          	endbr64 
    62a5:	55                   	push   rbp
    62a6:	48 89 e5             	mov    rbp,rsp
    62a9:	48 83 ec 10          	sub    rsp,0x10
    62ad:	48 8b 05 84 ad 00 00 	mov    rax,QWORD PTR [rip+0xad84]        # 11038 <default_host_conf>
    62b4:	48 8d 35 5d 68 00 00 	lea    rsi,[rip+0x685d]        # cb18 <_IO_stdin_used+0xb18>
    62bb:	48 89 c7             	mov    rdi,rax
    62be:	e8 ad c2 ff ff       	call   2570 <fopen@plt>
    62c3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    62c7:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    62cc:	75 25                	jne    62f3 <host_mon_parser+0x52>
    62ce:	48 8b 05 63 ad 00 00 	mov    rax,QWORD PTR [rip+0xad63]        # 11038 <default_host_conf>
    62d5:	48 89 c6             	mov    rsi,rax
    62d8:	48 8d 3d 27 6b 00 00 	lea    rdi,[rip+0x6b27]        # ce06 <_IO_stdin_used+0xe06>
    62df:	b8 00 00 00 00       	mov    eax,0x0
    62e4:	e8 97 c1 ff ff       	call   2480 <printf@plt>
    62e9:	bf 01 00 00 00       	mov    edi,0x1
    62ee:	e8 0d c2 ff ff       	call   2500 <exit@plt>
    62f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    62f7:	48 89 c7             	mov    rdi,rax
    62fa:	e8 b1 c4 ff ff       	call   27b0 <fclose@plt>
    62ff:	90                   	nop
    6300:	c9                   	leave  
    6301:	c3                   	ret    

0000000000006302 <test_encrypt>:
    6302:	f3 0f 1e fa          	endbr64 
    6306:	55                   	push   rbp
    6307:	48 89 e5             	mov    rbp,rsp
    630a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    630e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6312:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6316:	0f b6 80 48 01 00 00 	movzx  eax,BYTE PTR [rax+0x148]
    631d:	84 c0                	test   al,al
    631f:	74 13                	je     6334 <test_encrypt+0x32>
    6321:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6325:	0f b6 40 38          	movzx  eax,BYTE PTR [rax+0x38]
    6329:	84 c0                	test   al,al
    632b:	74 07                	je     6334 <test_encrypt+0x32>
    632d:	b8 00 00 00 00       	mov    eax,0x0
    6332:	eb 05                	jmp    6339 <test_encrypt+0x37>
    6334:	b8 01 00 00 00       	mov    eax,0x1
    6339:	5d                   	pop    rbp
    633a:	c3                   	ret    

000000000000633b <rule_app>:
    633b:	f3 0f 1e fa          	endbr64 
    633f:	55                   	push   rbp
    6340:	48 89 e5             	mov    rbp,rsp
    6343:	48 83 ec 20          	sub    rsp,0x20
    6347:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    634b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    634f:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6353:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6357:	48 89 d6             	mov    rsi,rdx
    635a:	48 89 c7             	mov    rdi,rax
    635d:	e8 1f 03 00 00       	call   6681 <r_engine>
    6362:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    6365:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    6369:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    636d:	48 89 d6             	mov    rsi,rdx
    6370:	48 89 c7             	mov    rdi,rax
    6373:	e8 c8 48 00 00       	call   ac40 <d_engine>
    6378:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    637b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    637f:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    6386:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    638a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    638e:	48 89 d6             	mov    rsi,rdx
    6391:	48 89 c7             	mov    rdi,rax
    6394:	ff d1                	call   rcx
    6396:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    6399:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    639d:	74 40                	je     63df <rule_app+0xa4>
    639f:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    63a3:	74 3a                	je     63df <rule_app+0xa4>
    63a5:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    63a9:	74 34                	je     63df <rule_app+0xa4>
    63ab:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63af:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    63b6:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    63ba:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    63be:	ba 00 00 00 00       	mov    edx,0x0
    63c3:	48 89 ce             	mov    rsi,rcx
    63c6:	48 89 c7             	mov    rdi,rax
    63c9:	41 ff d0             	call   r8
    63cc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63d0:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    63d3:	8d 50 01             	lea    edx,[rax+0x1]
    63d6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63da:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    63dd:	eb 17                	jmp    63f6 <rule_app+0xbb>
    63df:	8b 05 3f ac 00 00    	mov    eax,DWORD PTR [rip+0xac3f]        # 11024 <VIGIL_MODE>
    63e5:	83 f8 02             	cmp    eax,0x2
    63e8:	75 0c                	jne    63f6 <rule_app+0xbb>
    63ea:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    63ee:	48 89 c7             	mov    rdi,rax
    63f1:	e8 82 24 00 00       	call   8878 <forward_packet>
    63f6:	90                   	nop
    63f7:	c9                   	leave  
    63f8:	c3                   	ret    

00000000000063f9 <rulemgr>:
    63f9:	f3 0f 1e fa          	endbr64 
    63fd:	55                   	push   rbp
    63fe:	48 89 e5             	mov    rbp,rsp
    6401:	48 83 ec 20          	sub    rsp,0x20
    6405:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6409:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    6410:	e9 59 02 00 00       	jmp    666e <rulemgr+0x275>
    6415:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6418:	8d 50 01             	lea    edx,[rax+0x1]
    641b:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    641e:	48 98                	cdqe   
    6420:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    6427:	48 8d 15 b2 ae 00 00 	lea    rdx,[rip+0xaeb2]        # 112e0 <rules>
    642e:	48 01 d0             	add    rax,rdx
    6431:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6435:	0f b6 05 90 3b 10 00 	movzx  eax,BYTE PTR [rip+0x103b90]        # 109fcc <in_test_mode>
    643c:	84 c0                	test   al,al
    643e:	74 30                	je     6470 <rulemgr+0x77>
    6440:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6444:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6447:	83 f8 46             	cmp    eax,0x46
    644a:	75 0d                	jne    6459 <rulemgr+0x60>
    644c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6450:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    6457:	eb 17                	jmp    6470 <rulemgr+0x77>
    6459:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    645d:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6460:	83 f8 45             	cmp    eax,0x45
    6463:	75 0b                	jne    6470 <rulemgr+0x77>
    6465:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6469:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    6470:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6474:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    647a:	83 f8 ff             	cmp    eax,0xffffffff
    647d:	74 19                	je     6498 <rulemgr+0x9f>
    647f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6483:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    6486:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    648a:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6490:	39 c2                	cmp    edx,eax
    6492:	0f 85 d6 01 00 00    	jne    666e <rulemgr+0x275>
    6498:	0f b6 05 e1 ab 00 00 	movzx  eax,BYTE PTR [rip+0xabe1]        # 11080 <demo_mode>
    649f:	84 c0                	test   al,al
    64a1:	75 0f                	jne    64b2 <rulemgr+0xb9>
    64a3:	8b 05 bf 3a 10 00    	mov    eax,DWORD PTR [rip+0x103abf]        # 109f68 <vigil_location>
    64a9:	83 f8 03             	cmp    eax,0x3
    64ac:	0f 85 86 00 00 00    	jne    6538 <rulemgr+0x13f>
    64b2:	8b 05 b0 3a 10 00    	mov    eax,DWORD PTR [rip+0x103ab0]        # 109f68 <vigil_location>
    64b8:	83 f8 03             	cmp    eax,0x3
    64bb:	0f 85 ad 01 00 00    	jne    666e <rulemgr+0x275>
    64c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64c5:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    64c8:	83 f8 ff             	cmp    eax,0xffffffff
    64cb:	74 16                	je     64e3 <rulemgr+0xea>
    64cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64d1:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    64d4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64d8:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    64db:	39 c2                	cmp    edx,eax
    64dd:	0f 85 8b 01 00 00    	jne    666e <rulemgr+0x275>
    64e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64e7:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    64ea:	83 f8 ff             	cmp    eax,0xffffffff
    64ed:	74 16                	je     6505 <rulemgr+0x10c>
    64ef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64f3:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    64f6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64fa:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    64fd:	39 c2                	cmp    edx,eax
    64ff:	0f 85 69 01 00 00    	jne    666e <rulemgr+0x275>
    6505:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6509:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    650d:	48 89 d6             	mov    rsi,rdx
    6510:	48 89 c7             	mov    rdi,rax
    6513:	e8 ea fd ff ff       	call   6302 <test_encrypt>
    6518:	84 c0                	test   al,al
    651a:	0f 84 4e 01 00 00    	je     666e <rulemgr+0x275>
    6520:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6524:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6528:	48 89 d6             	mov    rsi,rdx
    652b:	48 89 c7             	mov    rdi,rax
    652e:	e8 08 fe ff ff       	call   633b <rule_app>
    6533:	e9 36 01 00 00       	jmp    666e <rulemgr+0x275>
    6538:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    653c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    653f:	83 f8 47             	cmp    eax,0x47
    6542:	74 16                	je     655a <rulemgr+0x161>
    6544:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6548:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    654b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    654f:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6552:	39 c2                	cmp    edx,eax
    6554:	0f 85 14 01 00 00    	jne    666e <rulemgr+0x275>
    655a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    655e:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6564:	3d 80 00 00 00       	cmp    eax,0x80
    6569:	75 18                	jne    6583 <rulemgr+0x18a>
    656b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    656f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6573:	48 89 d6             	mov    rsi,rdx
    6576:	48 89 c7             	mov    rdi,rax
    6579:	e8 bd fd ff ff       	call   633b <rule_app>
    657e:	e9 eb 00 00 00       	jmp    666e <rulemgr+0x275>
    6583:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6587:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    658a:	83 f8 47             	cmp    eax,0x47
    658d:	75 79                	jne    6608 <rulemgr+0x20f>
    658f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6593:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6596:	83 f8 ff             	cmp    eax,0xffffffff
    6599:	74 28                	je     65c3 <rulemgr+0x1ca>
    659b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    659f:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    65a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65a6:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65a9:	39 c2                	cmp    edx,eax
    65ab:	74 16                	je     65c3 <rulemgr+0x1ca>
    65ad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65b1:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    65b4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65b8:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65bb:	39 c2                	cmp    edx,eax
    65bd:	0f 85 ab 00 00 00    	jne    666e <rulemgr+0x275>
    65c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65c7:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65ca:	83 f8 ff             	cmp    eax,0xffffffff
    65cd:	74 24                	je     65f3 <rulemgr+0x1fa>
    65cf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65d3:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    65d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65da:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65dd:	39 c2                	cmp    edx,eax
    65df:	74 12                	je     65f3 <rulemgr+0x1fa>
    65e1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65e5:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    65e8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65ec:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    65ef:	39 c2                	cmp    edx,eax
    65f1:	75 7b                	jne    666e <rulemgr+0x275>
    65f3:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65f7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65fb:	48 89 d6             	mov    rsi,rdx
    65fe:	48 89 c7             	mov    rdi,rax
    6601:	e8 35 fd ff ff       	call   633b <rule_app>
    6606:	eb 66                	jmp    666e <rulemgr+0x275>
    6608:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    660c:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    660f:	83 f8 ff             	cmp    eax,0xffffffff
    6612:	74 12                	je     6626 <rulemgr+0x22d>
    6614:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6618:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    661b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    661f:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6622:	39 c2                	cmp    edx,eax
    6624:	75 48                	jne    666e <rulemgr+0x275>
    6626:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    662a:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    662d:	83 f8 ff             	cmp    eax,0xffffffff
    6630:	74 12                	je     6644 <rulemgr+0x24b>
    6632:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6636:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6639:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    663d:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6640:	39 c2                	cmp    edx,eax
    6642:	75 2a                	jne    666e <rulemgr+0x275>
    6644:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6648:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    664c:	48 89 d6             	mov    rsi,rdx
    664f:	48 89 c7             	mov    rdi,rax
    6652:	e8 ab fc ff ff       	call   6302 <test_encrypt>
    6657:	84 c0                	test   al,al
    6659:	74 13                	je     666e <rulemgr+0x275>
    665b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    665f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6663:	48 89 d6             	mov    rsi,rdx
    6666:	48 89 c7             	mov    rdi,rax
    6669:	e8 cd fc ff ff       	call   633b <rule_app>
    666e:	8b 05 a0 a9 00 00    	mov    eax,DWORD PTR [rip+0xa9a0]        # 11014 <num_rules>
    6674:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    6677:	0f 8e 98 fd ff ff    	jle    6415 <rulemgr+0x1c>
    667d:	90                   	nop
    667e:	90                   	nop
    667f:	c9                   	leave  
    6680:	c3                   	ret    

0000000000006681 <r_engine>:
    6681:	f3 0f 1e fa          	endbr64 
    6685:	55                   	push   rbp
    6686:	48 89 e5             	mov    rbp,rsp
    6689:	48 83 ec 10          	sub    rsp,0x10
    668d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6691:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6695:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6699:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    669c:	3d 80 00 00 00       	cmp    eax,0x80
    66a1:	0f 85 d9 00 00 00    	jne    6780 <r_engine+0xff>
    66a7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66ab:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    66b2:	84 c0                	test   al,al
    66b4:	74 25                	je     66db <r_engine+0x5a>
    66b6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66ba:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    66be:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    66c2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66c6:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    66cd:	38 c2                	cmp    dl,al
    66cf:	74 0a                	je     66db <r_engine+0x5a>
    66d1:	b8 00 00 00 00       	mov    eax,0x0
    66d6:	e9 9c 01 00 00       	jmp    6877 <r_engine+0x1f6>
    66db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66df:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    66e6:	84 c0                	test   al,al
    66e8:	74 26                	je     6710 <r_engine+0x8f>
    66ea:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    66ee:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    66f2:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    66f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66fa:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    6701:	66 39 c2             	cmp    dx,ax
    6704:	74 0a                	je     6710 <r_engine+0x8f>
    6706:	b8 00 00 00 00       	mov    eax,0x0
    670b:	e9 67 01 00 00       	jmp    6877 <r_engine+0x1f6>
    6710:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6714:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    671b:	84 c0                	test   al,al
    671d:	74 26                	je     6745 <r_engine+0xc4>
    671f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6723:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6727:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    672b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    672f:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    6736:	66 39 c2             	cmp    dx,ax
    6739:	74 0a                	je     6745 <r_engine+0xc4>
    673b:	b8 00 00 00 00       	mov    eax,0x0
    6740:	e9 32 01 00 00       	jmp    6877 <r_engine+0x1f6>
    6745:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6749:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    6750:	84 c0                	test   al,al
    6752:	0f 84 dc 00 00 00    	je     6834 <r_engine+0x1b3>
    6758:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    675c:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6760:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6763:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6767:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    676e:	38 c2                	cmp    dl,al
    6770:	0f 84 be 00 00 00    	je     6834 <r_engine+0x1b3>
    6776:	b8 00 00 00 00       	mov    eax,0x0
    677b:	e9 f7 00 00 00       	jmp    6877 <r_engine+0x1f6>
    6780:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6784:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6787:	83 f8 7e             	cmp    eax,0x7e
    678a:	0f 85 a4 00 00 00    	jne    6834 <r_engine+0x1b3>
    6790:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6794:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    679b:	84 c0                	test   al,al
    679d:	74 2e                	je     67cd <r_engine+0x14c>
    679f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67a3:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    67a7:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    67aa:	89 c7                	mov    edi,eax
    67ac:	e8 8f be ff ff       	call   2640 <ntohl@plt>
    67b1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    67b5:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    67bc:	0f b7 d2             	movzx  edx,dx
    67bf:	39 d0                	cmp    eax,edx
    67c1:	74 0a                	je     67cd <r_engine+0x14c>
    67c3:	b8 00 00 00 00       	mov    eax,0x0
    67c8:	e9 aa 00 00 00       	jmp    6877 <r_engine+0x1f6>
    67cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67d1:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    67d8:	84 c0                	test   al,al
    67da:	74 29                	je     6805 <r_engine+0x184>
    67dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67e0:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    67e7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67eb:	48 83 c0 68          	add    rax,0x68
    67ef:	48 89 d6             	mov    rsi,rdx
    67f2:	48 89 c7             	mov    rdi,rax
    67f5:	e8 56 bf ff ff       	call   2750 <strcmp@plt>
    67fa:	85 c0                	test   eax,eax
    67fc:	74 07                	je     6805 <r_engine+0x184>
    67fe:	b8 00 00 00 00       	mov    eax,0x0
    6803:	eb 72                	jmp    6877 <r_engine+0x1f6>
    6805:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6809:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    6810:	84 c0                	test   al,al
    6812:	74 20                	je     6834 <r_engine+0x1b3>
    6814:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6818:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    681c:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    681f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6823:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    6829:	39 c2                	cmp    edx,eax
    682b:	74 07                	je     6834 <r_engine+0x1b3>
    682d:	b8 00 00 00 00       	mov    eax,0x0
    6832:	eb 43                	jmp    6877 <r_engine+0x1f6>
    6834:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6838:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    683c:	48 85 c0             	test   rax,rax
    683f:	74 31                	je     6872 <r_engine+0x1f1>
    6841:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6845:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    684c:	84 c0                	test   al,al
    684e:	74 22                	je     6872 <r_engine+0x1f1>
    6850:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6854:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6858:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    685c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6860:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    6867:	38 c2                	cmp    dl,al
    6869:	74 07                	je     6872 <r_engine+0x1f1>
    686b:	b8 00 00 00 00       	mov    eax,0x0
    6870:	eb 05                	jmp    6877 <r_engine+0x1f6>
    6872:	b8 01 00 00 00       	mov    eax,0x1
    6877:	c9                   	leave  
    6878:	c3                   	ret    

0000000000006879 <test_tcp_session_status>:
    6879:	f3 0f 1e fa          	endbr64 
    687d:	55                   	push   rbp
    687e:	48 89 e5             	mov    rbp,rsp
    6881:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6885:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6889:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    688d:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6893:	83 f8 7e             	cmp    eax,0x7e
    6896:	75 34                	jne    68cc <test_tcp_session_status+0x53>
    6898:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    689c:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    689f:	83 f8 7e             	cmp    eax,0x7e
    68a2:	75 28                	jne    68cc <test_tcp_session_status+0x53>
    68a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68a8:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    68ae:	83 f8 01             	cmp    eax,0x1
    68b1:	75 12                	jne    68c5 <test_tcp_session_status+0x4c>
    68b3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68b7:	8b 40 70             	mov    eax,DWORD PTR [rax+0x70]
    68ba:	85 c0                	test   eax,eax
    68bc:	75 07                	jne    68c5 <test_tcp_session_status+0x4c>
    68be:	b8 00 00 00 00       	mov    eax,0x0
    68c3:	eb 0c                	jmp    68d1 <test_tcp_session_status+0x58>
    68c5:	b8 01 00 00 00       	mov    eax,0x1
    68ca:	eb 05                	jmp    68d1 <test_tcp_session_status+0x58>
    68cc:	b8 01 00 00 00       	mov    eax,0x1
    68d1:	5d                   	pop    rbp
    68d2:	c3                   	ret    

00000000000068d3 <main>:
    68d3:	f3 0f 1e fa          	endbr64 
    68d7:	55                   	push   rbp
    68d8:	48 89 e5             	mov    rbp,rsp
    68db:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    68e2:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    68e8:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    68ef:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    68f6:	00 00 
    68f8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    68fc:	31 c0                	xor    eax,eax
    68fe:	b8 00 00 00 00       	mov    eax,0x0
    6903:	e8 69 4d 00 00       	call   b671 <load_fn_mem_map>
    6908:	48 8d 35 d3 02 00 00 	lea    rsi,[rip+0x2d3]        # 6be2 <sigint_processor>
    690f:	bf 02 00 00 00       	mov    edi,0x2
    6914:	e8 c7 bd ff ff       	call   26e0 <signal@plt>
    6919:	48 8d 05 d4 49 00 00 	lea    rax,[rip+0x49d4]        # b2f4 <crash_handler>
    6920:	48 89 c6             	mov    rsi,rax
    6923:	bf 0b 00 00 00       	mov    edi,0xb
    6928:	e8 b3 bd ff ff       	call   26e0 <signal@plt>
    692d:	b8 00 00 00 00       	mov    eax,0x0
    6932:	e8 d8 08 00 00       	call   720f <print_logo>
    6937:	b8 00 00 00 00       	mov    eax,0x0
    693c:	e8 1c 07 00 00       	call   705d <print_cpu_info>
    6941:	c7 05 5d a9 00 00 01 	mov    DWORD PTR [rip+0xa95d],0x1        # 112a8 <is_running>
    6948:	00 00 00 
    694b:	bf 00 00 00 00       	mov    edi,0x0
    6950:	e8 1b bf ff ff       	call   2870 <time@plt>
    6955:	48 89 05 54 a9 00 00 	mov    QWORD PTR [rip+0xa954],rax        # 112b0 <last_clean_time>
    695c:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6963:	0f 85 e3 00 00 00    	jne    6a4c <main+0x179>
    6969:	b8 00 00 00 00       	mov    eax,0x0
    696e:	e8 c0 06 00 00       	call   7033 <print_help_and_exit>
    6973:	e9 d4 00 00 00       	jmp    6a4c <main+0x179>
    6978:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    697e:	83 e8 64             	sub    eax,0x64
    6981:	83 f8 10             	cmp    eax,0x10
    6984:	0f 87 9e 00 00 00    	ja     6a28 <main+0x155>
    698a:	89 c0                	mov    eax,eax
    698c:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    6993:	00 
    6994:	48 8d 05 61 66 00 00 	lea    rax,[rip+0x6661]        # cffc <_IO_stdin_used+0xffc>
    699b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    699e:	48 98                	cdqe   
    69a0:	48 8d 15 55 66 00 00 	lea    rdx,[rip+0x6655]        # cffc <_IO_stdin_used+0xffc>
    69a7:	48 01 d0             	add    rax,rdx
    69aa:	3e ff e0             	notrack jmp rax
    69ad:	c6 05 6c 35 10 00 01 	mov    BYTE PTR [rip+0x10356c],0x1        # 109f20 <debug_mode>
    69b4:	e9 93 00 00 00       	jmp    6a4c <main+0x179>
    69b9:	b8 00 00 00 00       	mov    eax,0x0
    69be:	e8 70 06 00 00       	call   7033 <print_help_and_exit>
    69c3:	e9 84 00 00 00       	jmp    6a4c <main+0x179>
    69c8:	48 8b 05 91 a6 00 00 	mov    rax,QWORD PTR [rip+0xa691]        # 11060 <optarg@@GLIBC_2.2.5>
    69cf:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    69d6:	eb 74                	jmp    6a4c <main+0x179>
    69d8:	c6 05 85 35 10 00 01 	mov    BYTE PTR [rip+0x103585],0x1        # 109f64 <packet_print>
    69df:	eb 6b                	jmp    6a4c <main+0x179>
    69e1:	c6 05 7d 35 10 00 01 	mov    BYTE PTR [rip+0x10357d],0x1        # 109f65 <quiet_exit>
    69e8:	eb 62                	jmp    6a4c <main+0x179>
    69ea:	48 8d 3d 2f 64 00 00 	lea    rdi,[rip+0x642f]        # ce20 <_IO_stdin_used+0xe20>
    69f1:	e8 ea ba ff ff       	call   24e0 <puts@plt>
    69f6:	bf 0a 00 00 00       	mov    edi,0xa
    69fb:	e8 50 bc ff ff       	call   2650 <sleep@plt>
    6a00:	c6 05 79 a6 00 00 01 	mov    BYTE PTR [rip+0xa679],0x1        # 11080 <demo_mode>
    6a07:	eb 43                	jmp    6a4c <main+0x179>
    6a09:	48 8d 3d 50 64 00 00 	lea    rdi,[rip+0x6450]        # ce60 <_IO_stdin_used+0xe60>
    6a10:	e8 cb ba ff ff       	call   24e0 <puts@plt>
    6a15:	bf 0a 00 00 00       	mov    edi,0xa
    6a1a:	e8 31 bc ff ff       	call   2650 <sleep@plt>
    6a1f:	c6 05 a6 35 10 00 01 	mov    BYTE PTR [rip+0x1035a6],0x1        # 109fcc <in_test_mode>
    6a26:	eb 24                	jmp    6a4c <main+0x179>
    6a28:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6a2e:	89 c6                	mov    esi,eax
    6a30:	48 8d 3d 5d 64 00 00 	lea    rdi,[rip+0x645d]        # ce94 <_IO_stdin_used+0xe94>
    6a37:	b8 00 00 00 00       	mov    eax,0x0
    6a3c:	e8 3f ba ff ff       	call   2480 <printf@plt>
    6a41:	b8 00 00 00 00       	mov    eax,0x0
    6a46:	e8 e8 05 00 00       	call   7033 <print_help_and_exit>
    6a4b:	90                   	nop
    6a4c:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6a53:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    6a59:	48 8d 15 4a 64 00 00 	lea    rdx,[rip+0x644a]        # ceaa <_IO_stdin_used+0xeaa>
    6a60:	48 89 ce             	mov    rsi,rcx
    6a63:	89 c7                	mov    edi,eax
    6a65:	e8 c6 ba ff ff       	call   2530 <getopt@plt>
    6a6a:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6a70:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    6a77:	0f 85 fb fe ff ff    	jne    6978 <main+0xa5>
    6a7d:	48 8d 3d 2f 64 00 00 	lea    rdi,[rip+0x642f]        # ceb3 <_IO_stdin_used+0xeb3>
    6a84:	e8 b8 f6 ff ff       	call   6141 <deny_conf_parser>
    6a89:	48 8d 3d 38 64 00 00 	lea    rdi,[rip+0x6438]        # cec8 <_IO_stdin_used+0xec8>
    6a90:	e8 4b ba ff ff       	call   24e0 <puts@plt>
    6a95:	b8 00 00 00 00       	mov    eax,0x0
    6a9a:	e8 49 13 00 00       	call   7de8 <load_csv_arp_cache>
    6a9f:	83 f8 ff             	cmp    eax,0xffffffff
    6aa2:	74 0e                	je     6ab2 <main+0x1df>
    6aa4:	48 8d 3d 5d 64 00 00 	lea    rdi,[rip+0x645d]        # cf08 <_IO_stdin_used+0xf08>
    6aab:	e8 30 ba ff ff       	call   24e0 <puts@plt>
    6ab0:	eb 0c                	jmp    6abe <main+0x1eb>
    6ab2:	48 8d 3d 6f 64 00 00 	lea    rdi,[rip+0x646f]        # cf28 <_IO_stdin_used+0xf28>
    6ab9:	e8 22 ba ff ff       	call   24e0 <puts@plt>
    6abe:	48 8d 3d 94 64 00 00 	lea    rdi,[rip+0x6494]        # cf59 <_IO_stdin_used+0xf59>
    6ac5:	e8 4b ee ff ff       	call   5915 <rule_library_parser>
    6aca:	48 8d 3d 9e 64 00 00 	lea    rdi,[rip+0x649e]        # cf6f <_IO_stdin_used+0xf6f>
    6ad1:	e8 0a ba ff ff       	call   24e0 <puts@plt>
    6ad6:	b8 00 00 00 00       	mov    eax,0x0
    6adb:	e8 3a 3d 00 00       	call   a81a <rule_processor>
    6ae0:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6ae7:	48 89 c6             	mov    rsi,rax
    6aea:	48 8d 3d 97 64 00 00 	lea    rdi,[rip+0x6497]        # cf88 <_IO_stdin_used+0xf88>
    6af1:	b8 00 00 00 00       	mov    eax,0x0
    6af6:	e8 85 b9 ff ff       	call   2480 <printf@plt>
    6afb:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6b02:	00 00 00 00 
    6b06:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6b0d:	00 00 00 00 
    6b11:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6b18:	b8 00 00 00 00       	mov    eax,0x0
    6b1d:	b9 fd 00 00 00       	mov    ecx,0xfd
    6b22:	48 89 d7             	mov    rdi,rdx
    6b25:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6b28:	48 89 fa             	mov    rdx,rdi
    6b2b:	89 02                	mov    DWORD PTR [rdx],eax
    6b2d:	48 83 c2 04          	add    rdx,0x4
    6b31:	66 89 02             	mov    WORD PTR [rdx],ax
    6b34:	48 83 c2 02          	add    rdx,0x2
    6b38:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6b3f:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6b46:	49 89 d0             	mov    r8,rdx
    6b49:	b9 64 00 00 00       	mov    ecx,0x64
    6b4e:	ba 01 00 00 00       	mov    edx,0x1
    6b53:	be 00 04 00 00       	mov    esi,0x400
    6b58:	48 89 c7             	mov    rdi,rax
    6b5b:	e8 30 ba ff ff       	call   2590 <pcap_open_live@plt>
    6b60:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6b67:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6b6e:	00 
    6b6f:	75 16                	jne    6b87 <main+0x2b4>
    6b71:	48 8d 3d 31 64 00 00 	lea    rdi,[rip+0x6431]        # cfa9 <_IO_stdin_used+0xfa9>
    6b78:	e8 93 bc ff ff       	call   2810 <perror@plt>
    6b7d:	bf 01 00 00 00       	mov    edi,0x1
    6b82:	e8 79 b9 ff ff       	call   2500 <exit@plt>
    6b87:	b8 00 00 00 00       	mov    eax,0x0
    6b8c:	e8 bd 44 00 00       	call   b04e <collect_scripts>
    6b91:	b8 00 00 00 00       	mov    eax,0x0
    6b96:	e8 8b 06 00 00       	call   7226 <start_nsh_server>
    6b9b:	48 8d 3d 26 64 00 00 	lea    rdi,[rip+0x6426]        # cfc8 <_IO_stdin_used+0xfc8>
    6ba2:	e8 39 b9 ff ff       	call   24e0 <puts@plt>
    6ba7:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6bae:	b9 00 00 00 00       	mov    ecx,0x0
    6bb3:	48 8d 15 e9 bd ff ff 	lea    rdx,[rip+0xffffffffffffbde9]        # 29a3 <pktmgr>
    6bba:	be ff ff ff ff       	mov    esi,0xffffffff
    6bbf:	48 89 c7             	mov    rdi,rax
    6bc2:	e8 29 bc ff ff       	call   27f0 <pcap_loop@plt>
    6bc7:	b8 00 00 00 00       	mov    eax,0x0
    6bcc:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6bd0:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6bd7:	00 00 
    6bd9:	74 05                	je     6be0 <main+0x30d>
    6bdb:	e8 60 bb ff ff       	call   2740 <__stack_chk_fail@plt>
    6be0:	c9                   	leave  
    6be1:	c3                   	ret    

0000000000006be2 <sigint_processor>:
    6be2:	f3 0f 1e fa          	endbr64 
    6be6:	55                   	push   rbp
    6be7:	48 89 e5             	mov    rbp,rsp
    6bea:	41 54                	push   r12
    6bec:	53                   	push   rbx
    6bed:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6bf4:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6bfa:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6c01:	00 00 
    6c03:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6c07:	31 c0                	xor    eax,eax
    6c09:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6c10:	00 00 00 
    6c13:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6c1a:	48 89 c7             	mov    rdi,rax
    6c1d:	e8 f1 c7 ff ff       	call   3413 <cb_get_formatted_time>
    6c22:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6c29:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6c2f:	89 c6                	mov    esi,eax
    6c31:	48 8d 3d 08 64 00 00 	lea    rdi,[rip+0x6408]        # d040 <_IO_stdin_used+0x1040>
    6c38:	b8 00 00 00 00       	mov    eax,0x0
    6c3d:	e8 3e b8 ff ff       	call   2480 <printf@plt>
    6c42:	48 8d 3d 1c 64 00 00 	lea    rdi,[rip+0x641c]        # d065 <_IO_stdin_used+0x1065>
    6c49:	e8 c2 bb ff ff       	call   2810 <perror@plt>
    6c4e:	0f b6 05 10 33 10 00 	movzx  eax,BYTE PTR [rip+0x103310]        # 109f65 <quiet_exit>
    6c55:	83 f0 01             	xor    eax,0x1
    6c58:	84 c0                	test   al,al
    6c5a:	0f 84 2e 02 00 00    	je     6e8e <sigint_processor+0x2ac>
    6c60:	8b 05 3e a6 00 00    	mov    eax,DWORD PTR [rip+0xa63e]        # 112a4 <total_pkt_captured>
    6c66:	89 c6                	mov    esi,eax
    6c68:	48 8d 3d f7 63 00 00 	lea    rdi,[rip+0x63f7]        # d066 <_IO_stdin_used+0x1066>
    6c6f:	b8 00 00 00 00       	mov    eax,0x0
    6c74:	e8 07 b8 ff ff       	call   2480 <printf@plt>
    6c79:	48 8d 3d 00 64 00 00 	lea    rdi,[rip+0x6400]        # d080 <_IO_stdin_used+0x1080>
    6c80:	e8 5b b8 ff ff       	call   24e0 <puts@plt>
    6c85:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6c8c:	00 00 00 
    6c8f:	e9 e8 01 00 00       	jmp    6e7c <sigint_processor+0x29a>
    6c94:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6c9a:	48 63 d0             	movsxd rdx,eax
    6c9d:	48 89 d0             	mov    rax,rdx
    6ca0:	48 c1 e0 02          	shl    rax,0x2
    6ca4:	48 01 d0             	add    rax,rdx
    6ca7:	48 c1 e0 03          	shl    rax,0x3
    6cab:	48 01 d0             	add    rax,rdx
    6cae:	48 c1 e0 04          	shl    rax,0x4
    6cb2:	48 89 c2             	mov    rdx,rax
    6cb5:	48 8d 05 d4 ca 0e 00 	lea    rax,[rip+0xecad4]        # f3790 <watchlist+0x270>
    6cbc:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6cc0:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cc6:	48 63 d0             	movsxd rdx,eax
    6cc9:	48 89 d0             	mov    rax,rdx
    6ccc:	48 c1 e0 02          	shl    rax,0x2
    6cd0:	48 01 d0             	add    rax,rdx
    6cd3:	48 c1 e0 03          	shl    rax,0x3
    6cd7:	48 01 d0             	add    rax,rdx
    6cda:	48 c1 e0 04          	shl    rax,0x4
    6cde:	48 89 c2             	mov    rdx,rax
    6ce1:	48 8d 05 9c ca 0e 00 	lea    rax,[rip+0xeca9c]        # f3784 <watchlist+0x264>
    6ce8:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6cec:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cf2:	48 63 d0             	movsxd rdx,eax
    6cf5:	48 89 d0             	mov    rax,rdx
    6cf8:	48 c1 e0 02          	shl    rax,0x2
    6cfc:	48 01 d0             	add    rax,rdx
    6cff:	48 c1 e0 03          	shl    rax,0x3
    6d03:	48 01 d0             	add    rax,rdx
    6d06:	48 c1 e0 04          	shl    rax,0x4
    6d0a:	48 89 c2             	mov    rdx,rax
    6d0d:	48 8d 05 78 ca 0e 00 	lea    rax,[rip+0xeca78]        # f378c <watchlist+0x26c>
    6d14:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6d18:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d1e:	48 63 d0             	movsxd rdx,eax
    6d21:	48 89 d0             	mov    rax,rdx
    6d24:	48 c1 e0 02          	shl    rax,0x2
    6d28:	48 01 d0             	add    rax,rdx
    6d2b:	48 c1 e0 03          	shl    rax,0x3
    6d2f:	48 01 d0             	add    rax,rdx
    6d32:	48 c1 e0 04          	shl    rax,0x4
    6d36:	48 89 c2             	mov    rdx,rax
    6d39:	48 8d 05 40 ca 0e 00 	lea    rax,[rip+0xeca40]        # f3780 <watchlist+0x260>
    6d40:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6d44:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d4a:	48 63 d0             	movsxd rdx,eax
    6d4d:	48 89 d0             	mov    rax,rdx
    6d50:	48 c1 e0 02          	shl    rax,0x2
    6d54:	48 01 d0             	add    rax,rdx
    6d57:	48 c1 e0 03          	shl    rax,0x3
    6d5b:	48 01 d0             	add    rax,rdx
    6d5e:	48 c1 e0 04          	shl    rax,0x4
    6d62:	48 89 c2             	mov    rdx,rax
    6d65:	48 8d 05 1c ca 0e 00 	lea    rax,[rip+0xeca1c]        # f3788 <watchlist+0x268>
    6d6c:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6d6f:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d75:	48 63 d0             	movsxd rdx,eax
    6d78:	48 89 d0             	mov    rax,rdx
    6d7b:	48 c1 e0 02          	shl    rax,0x2
    6d7f:	48 01 d0             	add    rax,rdx
    6d82:	48 c1 e0 03          	shl    rax,0x3
    6d86:	48 01 d0             	add    rax,rdx
    6d89:	48 c1 e0 04          	shl    rax,0x4
    6d8d:	48 89 c2             	mov    rdx,rax
    6d90:	48 8d 05 e5 c9 0e 00 	lea    rax,[rip+0xec9e5]        # f377c <watchlist+0x25c>
    6d97:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6d9b:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6da1:	48 63 d0             	movsxd rdx,eax
    6da4:	48 89 d0             	mov    rax,rdx
    6da7:	48 c1 e0 02          	shl    rax,0x2
    6dab:	48 01 d0             	add    rax,rdx
    6dae:	48 c1 e0 03          	shl    rax,0x3
    6db2:	48 01 d0             	add    rax,rdx
    6db5:	48 c1 e0 04          	shl    rax,0x4
    6db9:	48 89 c2             	mov    rdx,rax
    6dbc:	48 8d 05 d9 c9 0e 00 	lea    rax,[rip+0xec9d9]        # f379c <watchlist+0x27c>
    6dc3:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6dc6:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dcc:	48 63 d0             	movsxd rdx,eax
    6dcf:	48 89 d0             	mov    rax,rdx
    6dd2:	48 c1 e0 02          	shl    rax,0x2
    6dd6:	48 01 d0             	add    rax,rdx
    6dd9:	48 c1 e0 03          	shl    rax,0x3
    6ddd:	48 01 d0             	add    rax,rdx
    6de0:	48 c1 e0 04          	shl    rax,0x4
    6de4:	48 89 c2             	mov    rdx,rax
    6de7:	48 8d 05 b2 c9 0e 00 	lea    rax,[rip+0xec9b2]        # f37a0 <watchlist+0x280>
    6dee:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6df1:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6df7:	48 63 d0             	movsxd rdx,eax
    6dfa:	48 89 d0             	mov    rax,rdx
    6dfd:	48 c1 e0 02          	shl    rax,0x2
    6e01:	48 01 d0             	add    rax,rdx
    6e04:	48 c1 e0 03          	shl    rax,0x3
    6e08:	48 01 d0             	add    rax,rdx
    6e0b:	48 c1 e0 04          	shl    rax,0x4
    6e0f:	48 89 c2             	mov    rdx,rax
    6e12:	48 8d 05 5f c9 0e 00 	lea    rax,[rip+0xec95f]        # f3778 <watchlist+0x258>
    6e19:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6e1c:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e22:	48 63 d0             	movsxd rdx,eax
    6e25:	48 89 d0             	mov    rax,rdx
    6e28:	48 c1 e0 02          	shl    rax,0x2
    6e2c:	48 01 d0             	add    rax,rdx
    6e2f:	48 c1 e0 03          	shl    rax,0x3
    6e33:	48 01 d0             	add    rax,rdx
    6e36:	48 c1 e0 04          	shl    rax,0x4
    6e3a:	48 8d 15 df c6 0e 00 	lea    rdx,[rip+0xec6df]        # f3520 <watchlist>
    6e41:	48 01 d0             	add    rax,rdx
    6e44:	48 83 c0 08          	add    rax,0x8
    6e48:	48 83 ec 08          	sub    rsp,0x8
    6e4c:	41 53                	push   r11
    6e4e:	41 52                	push   r10
    6e50:	41 51                	push   r9
    6e52:	41 50                	push   r8
    6e54:	57                   	push   rdi
    6e55:	45 89 e1             	mov    r9d,r12d
    6e58:	41 89 d8             	mov    r8d,ebx
    6e5b:	89 f2                	mov    edx,esi
    6e5d:	48 89 c6             	mov    rsi,rax
    6e60:	48 8d 3d 51 62 00 00 	lea    rdi,[rip+0x6251]        # d0b8 <_IO_stdin_used+0x10b8>
    6e67:	b8 00 00 00 00       	mov    eax,0x0
    6e6c:	e8 0f b6 ff ff       	call   2480 <printf@plt>
    6e71:	48 83 c4 30          	add    rsp,0x30
    6e75:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6e7c:	8b 05 96 a1 00 00    	mov    eax,DWORD PTR [rip+0xa196]        # 11018 <watchlist_num>
    6e82:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6e88:	0f 8e 06 fe ff ff    	jle    6c94 <sigint_processor+0xb2>
    6e8e:	48 8d 35 c3 62 00 00 	lea    rsi,[rip+0x62c3]        # d158 <_IO_stdin_used+0x1158>
    6e95:	48 8d 3d be 62 00 00 	lea    rdi,[rip+0x62be]        # d15a <_IO_stdin_used+0x115a>
    6e9c:	e8 cf b6 ff ff       	call   2570 <fopen@plt>
    6ea1:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6ea8:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6eaf:	00 
    6eb0:	0f 85 99 00 00 00    	jne    6f4f <sigint_processor+0x36d>
    6eb6:	48 8d 3d bb 62 00 00 	lea    rdi,[rip+0x62bb]        # d178 <_IO_stdin_used+0x1178>
    6ebd:	e8 1e b6 ff ff       	call   24e0 <puts@plt>
    6ec2:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6ec9:	48 89 c7             	mov    rdi,rax
    6ecc:	e8 df b8 ff ff       	call   27b0 <fclose@plt>
    6ed1:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6ed8:	00 00 00 
    6edb:	eb 5f                	jmp    6f3c <sigint_processor+0x35a>
    6edd:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6ee3:	48 63 d0             	movsxd rdx,eax
    6ee6:	48 89 d0             	mov    rax,rdx
    6ee9:	48 c1 e0 04          	shl    rax,0x4
    6eed:	48 01 d0             	add    rax,rdx
    6ef0:	48 01 c0             	add    rax,rax
    6ef3:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6ef7:	48 8d 05 22 0e 10 00 	lea    rax,[rip+0x100e22]        # 107d20 <arpcache>
    6efe:	48 01 c2             	add    rdx,rax
    6f01:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6f07:	48 63 c8             	movsxd rcx,eax
    6f0a:	48 89 c8             	mov    rax,rcx
    6f0d:	48 c1 e0 04          	shl    rax,0x4
    6f11:	48 01 c8             	add    rax,rcx
    6f14:	48 01 c0             	add    rax,rax
    6f17:	48 8d 0d 02 0e 10 00 	lea    rcx,[rip+0x100e02]        # 107d20 <arpcache>
    6f1e:	48 01 c8             	add    rax,rcx
    6f21:	48 89 c6             	mov    rsi,rax
    6f24:	48 8d 3d 94 62 00 00 	lea    rdi,[rip+0x6294]        # d1bf <_IO_stdin_used+0x11bf>
    6f2b:	b8 00 00 00 00       	mov    eax,0x0
    6f30:	e8 4b b5 ff ff       	call   2480 <printf@plt>
    6f35:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    6f3c:	8b 05 da a0 00 00    	mov    eax,DWORD PTR [rip+0xa0da]        # 1101c <arp_entries>
    6f42:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    6f48:	7e 93                	jle    6edd <sigint_processor+0x2fb>
    6f4a:	e9 da 00 00 00       	jmp    7029 <sigint_processor+0x447>
    6f4f:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    6f56:	00 00 00 
    6f59:	eb 67                	jmp    6fc2 <sigint_processor+0x3e0>
    6f5b:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6f61:	48 63 d0             	movsxd rdx,eax
    6f64:	48 89 d0             	mov    rax,rdx
    6f67:	48 c1 e0 04          	shl    rax,0x4
    6f6b:	48 01 d0             	add    rax,rdx
    6f6e:	48 01 c0             	add    rax,rax
    6f71:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6f75:	48 8d 05 a4 0d 10 00 	lea    rax,[rip+0x100da4]        # 107d20 <arpcache>
    6f7c:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    6f80:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6f86:	48 63 d0             	movsxd rdx,eax
    6f89:	48 89 d0             	mov    rax,rdx
    6f8c:	48 c1 e0 04          	shl    rax,0x4
    6f90:	48 01 d0             	add    rax,rdx
    6f93:	48 01 c0             	add    rax,rax
    6f96:	48 8d 15 83 0d 10 00 	lea    rdx,[rip+0x100d83]        # 107d20 <arpcache>
    6f9d:	48 01 c2             	add    rdx,rax
    6fa0:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6fa7:	48 8d 35 1b 62 00 00 	lea    rsi,[rip+0x621b]        # d1c9 <_IO_stdin_used+0x11c9>
    6fae:	48 89 c7             	mov    rdi,rax
    6fb1:	b8 00 00 00 00       	mov    eax,0x0
    6fb6:	e8 65 b8 ff ff       	call   2820 <fprintf@plt>
    6fbb:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    6fc2:	8b 05 54 a0 00 00    	mov    eax,DWORD PTR [rip+0xa054]        # 1101c <arp_entries>
    6fc8:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    6fce:	7e 8b                	jle    6f5b <sigint_processor+0x379>
    6fd0:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6fd7:	48 89 c7             	mov    rdi,rax
    6fda:	e8 d1 b7 ff ff       	call   27b0 <fclose@plt>
    6fdf:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    6fe6:	00 00 00 
    6fe9:	eb 2f                	jmp    701a <sigint_processor+0x438>
    6feb:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    6ff1:	48 98                	cdqe   
    6ff3:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    6ffa:	00 
    6ffb:	48 8d 05 9e a0 00 00 	lea    rax,[rip+0xa09e]        # 110a0 <threads>
    7002:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    7006:	be 00 00 00 00       	mov    esi,0x0
    700b:	48 89 c7             	mov    rdi,rax
    700e:	e8 5d b4 ff ff       	call   2470 <pthread_join@plt>
    7013:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    701a:	8b 05 80 a2 00 00    	mov    eax,DWORD PTR [rip+0xa280]        # 112a0 <thread_count>
    7020:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    7026:	7c c3                	jl     6feb <sigint_processor+0x409>
    7028:	90                   	nop
    7029:	bf 00 00 00 00       	mov    edi,0x0
    702e:	e8 cd b4 ff ff       	call   2500 <exit@plt>

0000000000007033 <print_help_and_exit>:
    7033:	f3 0f 1e fa          	endbr64 
    7037:	55                   	push   rbp
    7038:	48 89 e5             	mov    rbp,rsp
    703b:	48 8d 35 8e 61 00 00 	lea    rsi,[rip+0x618e]        # d1d0 <_IO_stdin_used+0x11d0>
    7042:	48 8d 3d 8f 61 00 00 	lea    rdi,[rip+0x618f]        # d1d8 <_IO_stdin_used+0x11d8>
    7049:	b8 00 00 00 00       	mov    eax,0x0
    704e:	e8 2d b4 ff ff       	call   2480 <printf@plt>
    7053:	bf 00 00 00 00       	mov    edi,0x0
    7058:	e8 a3 b4 ff ff       	call   2500 <exit@plt>

000000000000705d <print_cpu_info>:
    705d:	f3 0f 1e fa          	endbr64 
    7061:	55                   	push   rbp
    7062:	48 89 e5             	mov    rbp,rsp
    7065:	53                   	push   rbx
    7066:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    706d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7074:	00 00 
    7076:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    707a:	31 c0                	xor    eax,eax
    707c:	48 8d 35 dc 61 00 00 	lea    rsi,[rip+0x61dc]        # d25f <_IO_stdin_used+0x125f>
    7083:	48 8d 3d d8 61 00 00 	lea    rdi,[rip+0x61d8]        # d262 <_IO_stdin_used+0x1262>
    708a:	e8 e1 b4 ff ff       	call   2570 <fopen@plt>
    708f:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    7096:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    709d:	00 00 00 00 
    70a1:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    70a8:	00 00 00 00 
    70ac:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    70b3:	00 00 00 
    70b6:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    70bd:	ba 00 02 00 00       	mov    edx,0x200
    70c2:	be 00 00 00 00       	mov    esi,0x0
    70c7:	48 89 c7             	mov    rdi,rax
    70ca:	e8 c1 b3 ff ff       	call   2490 <memset@plt>
    70cf:	e9 b3 00 00 00       	jmp    7187 <print_cpu_info+0x12a>
    70d4:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    70db:	ba 0a 00 00 00       	mov    edx,0xa
    70e0:	48 89 c6             	mov    rsi,rax
    70e3:	48 8d 3d 86 61 00 00 	lea    rdi,[rip+0x6186]        # d270 <_IO_stdin_used+0x1270>
    70ea:	e8 61 b4 ff ff       	call   2550 <strncmp@plt>
    70ef:	85 c0                	test   eax,eax
    70f1:	0f 85 90 00 00 00    	jne    7187 <print_cpu_info+0x12a>
    70f7:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    70fe:	00 00 00 
    7101:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    7108:	00 00 00 
    710b:	eb 2e                	jmp    713b <print_cpu_info+0xde>
    710d:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    7114:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    711a:	48 98                	cdqe   
    711c:	48 01 d0             	add    rax,rdx
    711f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7122:	3c 3a                	cmp    al,0x3a
    7124:	75 0e                	jne    7134 <print_cpu_info+0xd7>
    7126:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    712c:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    7132:	eb 24                	jmp    7158 <print_cpu_info+0xfb>
    7134:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    713b:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7141:	48 63 d8             	movsxd rbx,eax
    7144:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    714b:	48 89 c7             	mov    rdi,rax
    714e:	e8 ad b4 ff ff       	call   2600 <strlen@plt>
    7153:	48 39 c3             	cmp    rbx,rax
    7156:	72 b5                	jb     710d <print_cpu_info+0xb0>
    7158:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    715f:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    7166:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    716c:	48 98                	cdqe   
    716e:	48 83 c0 02          	add    rax,0x2
    7172:	48 01 c2             	add    rdx,rax
    7175:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    717c:	48 89 d6             	mov    rsi,rdx
    717f:	48 89 c7             	mov    rdi,rax
    7182:	e8 f9 b4 ff ff       	call   2680 <strcat@plt>
    7187:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    718e:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    7195:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    719c:	48 89 d1             	mov    rcx,rdx
    719f:	ba 0a 00 00 00       	mov    edx,0xa
    71a4:	48 89 c7             	mov    rdi,rax
    71a7:	e8 94 b6 ff ff       	call   2840 <getdelim@plt>
    71ac:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    71b0:	0f 85 1e ff ff ff    	jne    70d4 <print_cpu_info+0x77>
    71b6:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    71bd:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    71c3:	89 c6                	mov    esi,eax
    71c5:	48 8d 3d af 60 00 00 	lea    rdi,[rip+0x60af]        # d27b <_IO_stdin_used+0x127b>
    71cc:	b8 00 00 00 00       	mov    eax,0x0
    71d1:	e8 aa b2 ff ff       	call   2480 <printf@plt>
    71d6:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    71dd:	48 89 c7             	mov    rdi,rax
    71e0:	e8 0b b4 ff ff       	call   25f0 <free@plt>
    71e5:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    71ec:	48 89 c7             	mov    rdi,rax
    71ef:	e8 bc b5 ff ff       	call   27b0 <fclose@plt>
    71f4:	90                   	nop
    71f5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    71f9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    7200:	00 00 
    7202:	74 05                	je     7209 <print_cpu_info+0x1ac>
    7204:	e8 37 b5 ff ff       	call   2740 <__stack_chk_fail@plt>
    7209:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    720d:	c9                   	leave  
    720e:	c3                   	ret    

000000000000720f <print_logo>:
    720f:	f3 0f 1e fa          	endbr64 
    7213:	55                   	push   rbp
    7214:	48 89 e5             	mov    rbp,rsp
    7217:	48 8d 3d 72 60 00 00 	lea    rdi,[rip+0x6072]        # d290 <_IO_stdin_used+0x1290>
    721e:	e8 bd b2 ff ff       	call   24e0 <puts@plt>
    7223:	90                   	nop
    7224:	5d                   	pop    rbp
    7225:	c3                   	ret    

0000000000007226 <start_nsh_server>:
    7226:	f3 0f 1e fa          	endbr64 
    722a:	55                   	push   rbp
    722b:	48 89 e5             	mov    rbp,rsp
    722e:	48 83 ec 10          	sub    rsp,0x10
    7232:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7239:	00 00 
    723b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    723f:	31 c0                	xor    eax,eax
    7241:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    7245:	b9 00 00 00 00       	mov    ecx,0x0
    724a:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 72c2 <actually_start_nsh_server>
    7251:	be 00 00 00 00       	mov    esi,0x0
    7256:	48 89 c7             	mov    rdi,rax
    7259:	e8 72 b3 ff ff       	call   25d0 <pthread_create@plt>
    725e:	90                   	nop
    725f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7263:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    726a:	00 00 
    726c:	74 05                	je     7273 <start_nsh_server+0x4d>
    726e:	e8 cd b4 ff ff       	call   2740 <__stack_chk_fail@plt>
    7273:	c9                   	leave  
    7274:	c3                   	ret    

0000000000007275 <rnstrip>:
    7275:	f3 0f 1e fa          	endbr64 
    7279:	55                   	push   rbp
    727a:	48 89 e5             	mov    rbp,rsp
    727d:	48 83 ec 10          	sub    rsp,0x10
    7281:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7285:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7289:	48 8d 35 78 61 00 00 	lea    rsi,[rip+0x6178]        # d408 <_IO_stdin_used+0x1408>
    7290:	48 89 c7             	mov    rdi,rax
    7293:	e8 38 b5 ff ff       	call   27d0 <strcspn@plt>
    7298:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    729c:	48 01 d0             	add    rax,rdx
    729f:	c6 00 00             	mov    BYTE PTR [rax],0x0
    72a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    72a6:	48 8d 35 5d 61 00 00 	lea    rsi,[rip+0x615d]        # d40a <_IO_stdin_used+0x140a>
    72ad:	48 89 c7             	mov    rdi,rax
    72b0:	e8 1b b5 ff ff       	call   27d0 <strcspn@plt>
    72b5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    72b9:	48 01 d0             	add    rax,rdx
    72bc:	c6 00 00             	mov    BYTE PTR [rax],0x0
    72bf:	90                   	nop
    72c0:	c9                   	leave  
    72c1:	c3                   	ret    

00000000000072c2 <actually_start_nsh_server>:
    72c2:	f3 0f 1e fa          	endbr64 
    72c6:	55                   	push   rbp
    72c7:	48 89 e5             	mov    rbp,rsp
    72ca:	48 83 ec 50          	sub    rsp,0x50
    72ce:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    72d5:	00 00 
    72d7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    72db:	31 c0                	xor    eax,eax
    72dd:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    72e4:	ba 00 00 00 00       	mov    edx,0x0
    72e9:	be 01 00 00 00       	mov    esi,0x1
    72ee:	bf 02 00 00 00       	mov    edi,0x2
    72f3:	e8 28 b4 ff ff       	call   2720 <socket@plt>
    72f8:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    72fb:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    72ff:	75 16                	jne    7317 <actually_start_nsh_server+0x55>
    7301:	48 8d 3d 08 61 00 00 	lea    rdi,[rip+0x6108]        # d410 <_IO_stdin_used+0x1410>
    7308:	e8 d3 b1 ff ff       	call   24e0 <puts@plt>
    730d:	bf 01 00 00 00       	mov    edi,0x1
    7312:	e8 e9 b1 ff ff       	call   2500 <exit@plt>
    7317:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    731b:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    731e:	41 b8 04 00 00 00    	mov    r8d,0x4
    7324:	48 89 d1             	mov    rcx,rdx
    7327:	ba 02 00 00 00       	mov    edx,0x2
    732c:	be 01 00 00 00       	mov    esi,0x1
    7331:	89 c7                	mov    edi,eax
    7333:	e8 68 b2 ff ff       	call   25a0 <setsockopt@plt>
    7338:	85 c0                	test   eax,eax
    733a:	74 16                	je     7352 <actually_start_nsh_server+0x90>
    733c:	48 8d 3d f5 60 00 00 	lea    rdi,[rip+0x60f5]        # d438 <_IO_stdin_used+0x1438>
    7343:	e8 98 b1 ff ff       	call   24e0 <puts@plt>
    7348:	bf 01 00 00 00       	mov    edi,0x1
    734d:	e8 ae b1 ff ff       	call   2500 <exit@plt>
    7352:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    7358:	bf 00 00 00 00       	mov    edi,0x0
    735d:	e8 9e b4 ff ff       	call   2800 <htonl@plt>
    7362:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    7365:	bf 81 02 00 00       	mov    edi,0x281
    736a:	e8 81 b1 ff ff       	call   24f0 <htons@plt>
    736f:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    7373:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    7377:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    737a:	ba 10 00 00 00       	mov    edx,0x10
    737f:	48 89 ce             	mov    rsi,rcx
    7382:	89 c7                	mov    edi,eax
    7384:	e8 57 b4 ff ff       	call   27e0 <bind@plt>
    7389:	85 c0                	test   eax,eax
    738b:	79 16                	jns    73a3 <actually_start_nsh_server+0xe1>
    738d:	48 8d 3d cc 60 00 00 	lea    rdi,[rip+0x60cc]        # d460 <_IO_stdin_used+0x1460>
    7394:	e8 47 b1 ff ff       	call   24e0 <puts@plt>
    7399:	bf 01 00 00 00       	mov    edi,0x1
    739e:	e8 5d b1 ff ff       	call   2500 <exit@plt>
    73a3:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    73a6:	be 05 00 00 00       	mov    esi,0x5
    73ab:	89 c7                	mov    edi,eax
    73ad:	e8 5e b2 ff ff       	call   2610 <listen@plt>
    73b2:	85 c0                	test   eax,eax
    73b4:	79 16                	jns    73cc <actually_start_nsh_server+0x10a>
    73b6:	48 8d 3d db 60 00 00 	lea    rdi,[rip+0x60db]        # d498 <_IO_stdin_used+0x1498>
    73bd:	e8 1e b1 ff ff       	call   24e0 <puts@plt>
    73c2:	bf 01 00 00 00       	mov    edi,0x1
    73c7:	e8 34 b1 ff ff       	call   2500 <exit@plt>
    73cc:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    73d0:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    73d4:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    73d7:	48 89 ce             	mov    rsi,rcx
    73da:	89 c7                	mov    edi,eax
    73dc:	e8 6f b4 ff ff       	call   2850 <accept@plt>
    73e1:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    73e4:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    73e8:	79 20                	jns    740a <actually_start_nsh_server+0x148>
    73ea:	b8 00 00 00 00       	mov    eax,0x0
    73ef:	e8 4b bf ff ff       	call   333f <get_formated_time>
    73f4:	48 89 c6             	mov    rsi,rax
    73f7:	48 8d 3d ca 60 00 00 	lea    rdi,[rip+0x60ca]        # d4c8 <_IO_stdin_used+0x14c8>
    73fe:	b8 00 00 00 00       	mov    eax,0x0
    7403:	e8 78 b0 ff ff       	call   2480 <printf@plt>
    7408:	eb c2                	jmp    73cc <actually_start_nsh_server+0x10a>
    740a:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    740d:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    7410:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    7414:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    7418:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    741c:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    7420:	48 89 d1             	mov    rcx,rdx
    7423:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 7439 <accept_cmd>
    742a:	be 00 00 00 00       	mov    esi,0x0
    742f:	48 89 c7             	mov    rdi,rax
    7432:	e8 99 b1 ff ff       	call   25d0 <pthread_create@plt>
    7437:	eb 93                	jmp    73cc <actually_start_nsh_server+0x10a>

0000000000007439 <accept_cmd>:
    7439:	f3 0f 1e fa          	endbr64 
    743d:	55                   	push   rbp
    743e:	48 89 e5             	mov    rbp,rsp
    7441:	48 83 ec 30          	sub    rsp,0x30
    7445:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    7449:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    744d:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    7451:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7455:	8b 00                	mov    eax,DWORD PTR [rax]
    7457:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    745e:	00 00 
    7460:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    7467:	ba 00 04 00 00       	mov    edx,0x400
    746c:	48 89 ce             	mov    rsi,rcx
    746f:	89 c7                	mov    edi,eax
    7471:	e8 ca b0 ff ff       	call   2540 <read@plt>
    7476:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    7479:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    747d:	7e 32                	jle    74b1 <accept_cmd+0x78>
    747f:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7486:	00 00 
    7488:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    748e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7492:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7496:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7499:	0f b6 c0             	movzx  eax,al
    749c:	89 c6                	mov    esi,eax
    749e:	48 8d 3d 45 60 00 00 	lea    rdi,[rip+0x6045]        # d4ea <_IO_stdin_used+0x14ea>
    74a5:	b8 00 00 00 00       	mov    eax,0x0
    74aa:	e8 d1 af ff ff       	call   2480 <printf@plt>
    74af:	eb a0                	jmp    7451 <accept_cmd+0x18>
    74b1:	90                   	nop
    74b2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    74b6:	8b 00                	mov    eax,DWORD PTR [rax]
    74b8:	89 c7                	mov    edi,eax
    74ba:	e8 01 b0 ff ff       	call   24c0 <close@plt>
    74bf:	90                   	nop
    74c0:	c9                   	leave  
    74c1:	c3                   	ret    

00000000000074c2 <tcp_rst_portscan_detect>:
    74c2:	f3 0f 1e fa          	endbr64 
    74c6:	55                   	push   rbp
    74c7:	48 89 e5             	mov    rbp,rsp
    74ca:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    74d1:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    74d8:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    74df:	00 00 
    74e1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    74e5:	31 c0                	xor    eax,eax
    74e7:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    74ee:	00 00 00 
    74f1:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    74f8:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    74fe:	83 f8 1e             	cmp    eax,0x1e
    7501:	74 0a                	je     750d <tcp_rst_portscan_detect+0x4b>
    7503:	b8 00 00 00 00       	mov    eax,0x0
    7508:	e9 8d 01 00 00       	jmp    769a <tcp_rst_portscan_detect+0x1d8>
    750d:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7514:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    751a:	83 e8 01             	sub    eax,0x1
    751d:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    7523:	eb 6c                	jmp    7591 <tcp_rst_portscan_detect+0xcf>
    7525:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    752b:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7531:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7538:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    753e:	48 63 d2             	movsxd rdx,edx
    7541:	48 83 c2 28          	add    rdx,0x28
    7545:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    754a:	89 c1                	mov    ecx,eax
    754c:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    7553:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    755a:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7560:	48 63 d2             	movsxd rdx,edx
    7563:	48 83 c2 28          	add    rdx,0x28
    7567:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    756c:	29 c1                	sub    ecx,eax
    756e:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    7574:	8d 50 01             	lea    edx,[rax+0x1]
    7577:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    757d:	89 ca                	mov    edx,ecx
    757f:	48 98                	cdqe   
    7581:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    7588:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    758f:	74 0b                	je     759c <tcp_rst_portscan_detect+0xda>
    7591:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    7598:	75 8b                	jne    7525 <tcp_rst_portscan_detect+0x63>
    759a:	eb 01                	jmp    759d <tcp_rst_portscan_detect+0xdb>
    759c:	90                   	nop
    759d:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    75a4:	00 00 00 
    75a7:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    75ae:	00 00 00 
    75b1:	eb 24                	jmp    75d7 <tcp_rst_portscan_detect+0x115>
    75b3:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    75b9:	48 98                	cdqe   
    75bb:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    75c2:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    75c7:	7f 07                	jg     75d0 <tcp_rst_portscan_detect+0x10e>
    75c9:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    75d0:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    75d7:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    75dd:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    75e3:	7c ce                	jl     75b3 <tcp_rst_portscan_detect+0xf1>
    75e5:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    75eb:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    75f1:	0f 85 9e 00 00 00    	jne    7695 <tcp_rst_portscan_detect+0x1d3>
    75f7:	48 8b 05 32 9a 00 00 	mov    rax,QWORD PTR [rip+0x9a32]        # 11030 <def_log_file>
    75fe:	48 8d 35 f3 5e 00 00 	lea    rsi,[rip+0x5ef3]        # d4f8 <_IO_stdin_used+0x14f8>
    7605:	48 89 c7             	mov    rdi,rax
    7608:	e8 63 af ff ff       	call   2570 <fopen@plt>
    760d:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    7614:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    761b:	48 83 c0 08          	add    rax,0x8
    761f:	48 89 c6             	mov    rsi,rax
    7622:	48 8d 3d d7 5e 00 00 	lea    rdi,[rip+0x5ed7]        # d500 <_IO_stdin_used+0x1500>
    7629:	b8 00 00 00 00       	mov    eax,0x0
    762e:	e8 4d ae ff ff       	call   2480 <printf@plt>
    7633:	b8 00 00 00 00       	mov    eax,0x0
    7638:	e8 02 bd ff ff       	call   333f <get_formated_time>
    763d:	48 89 c1             	mov    rcx,rax
    7640:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7647:	48 8d 50 08          	lea    rdx,[rax+0x8]
    764b:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7652:	48 8d 35 d7 5e 00 00 	lea    rsi,[rip+0x5ed7]        # d530 <_IO_stdin_used+0x1530>
    7659:	48 89 c7             	mov    rdi,rax
    765c:	b8 00 00 00 00       	mov    eax,0x0
    7661:	e8 ba af ff ff       	call   2620 <sprintf@plt>
    7666:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    766d:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7674:	48 89 d6             	mov    rsi,rdx
    7677:	48 89 c7             	mov    rdi,rax
    767a:	e8 11 b0 ff ff       	call   2690 <fputs@plt>
    767f:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    7686:	48 89 c7             	mov    rdi,rax
    7689:	e8 22 b1 ff ff       	call   27b0 <fclose@plt>
    768e:	b8 01 00 00 00       	mov    eax,0x1
    7693:	eb 05                	jmp    769a <tcp_rst_portscan_detect+0x1d8>
    7695:	b8 00 00 00 00       	mov    eax,0x0
    769a:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    769e:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    76a5:	00 00 
    76a7:	74 05                	je     76ae <tcp_rst_portscan_detect+0x1ec>
    76a9:	e8 92 b0 ff ff       	call   2740 <__stack_chk_fail@plt>
    76ae:	c9                   	leave  
    76af:	c3                   	ret    

00000000000076b0 <fin_rst_portscan_detect>:
    76b0:	f3 0f 1e fa          	endbr64 
    76b4:	55                   	push   rbp
    76b5:	48 89 e5             	mov    rbp,rsp
    76b8:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    76bf:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    76c6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    76cd:	00 00 
    76cf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    76d3:	31 c0                	xor    eax,eax
    76d5:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    76dc:	00 00 00 
    76df:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    76e6:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    76e9:	83 f8 1e             	cmp    eax,0x1e
    76ec:	74 0a                	je     76f8 <fin_rst_portscan_detect+0x48>
    76ee:	b8 00 00 00 00       	mov    eax,0x0
    76f3:	e9 8a 01 00 00       	jmp    7882 <fin_rst_portscan_detect+0x1d2>
    76f8:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    76ff:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7702:	83 e8 01             	sub    eax,0x1
    7705:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    770b:	eb 6c                	jmp    7779 <fin_rst_portscan_detect+0xc9>
    770d:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    7713:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7719:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7720:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7726:	48 63 d2             	movsxd rdx,edx
    7729:	48 83 c2 0a          	add    rdx,0xa
    772d:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7732:	89 c1                	mov    ecx,eax
    7734:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    773b:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7742:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7748:	48 63 d2             	movsxd rdx,edx
    774b:	48 83 c2 0a          	add    rdx,0xa
    774f:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7754:	29 c1                	sub    ecx,eax
    7756:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    775c:	8d 50 01             	lea    edx,[rax+0x1]
    775f:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    7765:	89 ca                	mov    edx,ecx
    7767:	48 98                	cdqe   
    7769:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    7770:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    7777:	74 0b                	je     7784 <fin_rst_portscan_detect+0xd4>
    7779:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    7780:	75 8b                	jne    770d <fin_rst_portscan_detect+0x5d>
    7782:	eb 01                	jmp    7785 <fin_rst_portscan_detect+0xd5>
    7784:	90                   	nop
    7785:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    778c:	00 00 00 
    778f:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    7796:	00 00 00 
    7799:	eb 24                	jmp    77bf <fin_rst_portscan_detect+0x10f>
    779b:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    77a1:	48 98                	cdqe   
    77a3:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    77aa:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    77af:	7f 07                	jg     77b8 <fin_rst_portscan_detect+0x108>
    77b1:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    77b8:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    77bf:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    77c5:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    77cb:	7c ce                	jl     779b <fin_rst_portscan_detect+0xeb>
    77cd:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    77d3:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    77d9:	0f 85 9e 00 00 00    	jne    787d <fin_rst_portscan_detect+0x1cd>
    77df:	48 8b 05 4a 98 00 00 	mov    rax,QWORD PTR [rip+0x984a]        # 11030 <def_log_file>
    77e6:	48 8d 35 0b 5d 00 00 	lea    rsi,[rip+0x5d0b]        # d4f8 <_IO_stdin_used+0x14f8>
    77ed:	48 89 c7             	mov    rdi,rax
    77f0:	e8 7b ad ff ff       	call   2570 <fopen@plt>
    77f5:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    77fc:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7803:	48 83 c0 08          	add    rax,0x8
    7807:	48 89 c6             	mov    rsi,rax
    780a:	48 8d 3d 47 5d 00 00 	lea    rdi,[rip+0x5d47]        # d558 <_IO_stdin_used+0x1558>
    7811:	b8 00 00 00 00       	mov    eax,0x0
    7816:	e8 65 ac ff ff       	call   2480 <printf@plt>
    781b:	b8 00 00 00 00       	mov    eax,0x0
    7820:	e8 1a bb ff ff       	call   333f <get_formated_time>
    7825:	48 89 c1             	mov    rcx,rax
    7828:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    782f:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7833:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    783a:	48 8d 35 47 5d 00 00 	lea    rsi,[rip+0x5d47]        # d588 <_IO_stdin_used+0x1588>
    7841:	48 89 c7             	mov    rdi,rax
    7844:	b8 00 00 00 00       	mov    eax,0x0
    7849:	e8 d2 ad ff ff       	call   2620 <sprintf@plt>
    784e:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    7855:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    785c:	48 89 d6             	mov    rsi,rdx
    785f:	48 89 c7             	mov    rdi,rax
    7862:	e8 29 ae ff ff       	call   2690 <fputs@plt>
    7867:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    786e:	48 89 c7             	mov    rdi,rax
    7871:	e8 3a af ff ff       	call   27b0 <fclose@plt>
    7876:	b8 01 00 00 00       	mov    eax,0x1
    787b:	eb 05                	jmp    7882 <fin_rst_portscan_detect+0x1d2>
    787d:	b8 00 00 00 00       	mov    eax,0x0
    7882:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    7886:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    788d:	00 00 
    788f:	74 05                	je     7896 <fin_rst_portscan_detect+0x1e6>
    7891:	e8 aa ae ff ff       	call   2740 <__stack_chk_fail@plt>
    7896:	c9                   	leave  
    7897:	c3                   	ret    

0000000000007898 <member_ready_for_scan>:
    7898:	f3 0f 1e fa          	endbr64 
    789c:	55                   	push   rbp
    789d:	48 89 e5             	mov    rbp,rsp
    78a0:	48 83 ec 10          	sub    rsp,0x10
    78a4:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    78ab:	eb 48                	jmp    78f5 <member_ready_for_scan+0x5d>
    78ad:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    78b0:	48 63 d0             	movsxd rdx,eax
    78b3:	48 89 d0             	mov    rax,rdx
    78b6:	48 c1 e0 02          	shl    rax,0x2
    78ba:	48 01 d0             	add    rax,rdx
    78bd:	48 c1 e0 03          	shl    rax,0x3
    78c1:	48 01 d0             	add    rax,rdx
    78c4:	48 c1 e0 04          	shl    rax,0x4
    78c8:	48 8d 15 51 bc 0e 00 	lea    rdx,[rip+0xebc51]        # f3520 <watchlist>
    78cf:	48 01 d0             	add    rax,rdx
    78d2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    78d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    78da:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    78e0:	83 f8 1d             	cmp    eax,0x1d
    78e3:	76 0c                	jbe    78f1 <member_ready_for_scan+0x59>
    78e5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    78e9:	48 89 c7             	mov    rdi,rax
    78ec:	e8 d1 fb ff ff       	call   74c2 <tcp_rst_portscan_detect>
    78f1:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    78f5:	8b 05 1d 97 00 00    	mov    eax,DWORD PTR [rip+0x971d]        # 11018 <watchlist_num>
    78fb:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    78fe:	7e ad                	jle    78ad <member_ready_for_scan+0x15>
    7900:	90                   	nop
    7901:	90                   	nop
    7902:	c9                   	leave  
    7903:	c3                   	ret    

0000000000007904 <member_exists>:
    7904:	f3 0f 1e fa          	endbr64 
    7908:	55                   	push   rbp
    7909:	48 89 e5             	mov    rbp,rsp
    790c:	48 83 ec 20          	sub    rsp,0x20
    7910:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7914:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    791b:	eb 47                	jmp    7964 <member_exists+0x60>
    791d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7920:	8d 50 01             	lea    edx,[rax+0x1]
    7923:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    7926:	48 63 d0             	movsxd rdx,eax
    7929:	48 89 d0             	mov    rax,rdx
    792c:	48 c1 e0 02          	shl    rax,0x2
    7930:	48 01 d0             	add    rax,rdx
    7933:	48 c1 e0 03          	shl    rax,0x3
    7937:	48 01 d0             	add    rax,rdx
    793a:	48 c1 e0 04          	shl    rax,0x4
    793e:	48 8d 15 db bb 0e 00 	lea    rdx,[rip+0xebbdb]        # f3520 <watchlist>
    7945:	48 01 d0             	add    rax,rdx
    7948:	48 8d 50 08          	lea    rdx,[rax+0x8]
    794c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7950:	48 89 c6             	mov    rsi,rax
    7953:	48 89 d7             	mov    rdi,rdx
    7956:	e8 f5 ad ff ff       	call   2750 <strcmp@plt>
    795b:	85 c0                	test   eax,eax
    795d:	75 05                	jne    7964 <member_exists+0x60>
    795f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7962:	eb 10                	jmp    7974 <member_exists+0x70>
    7964:	8b 05 ae 96 00 00    	mov    eax,DWORD PTR [rip+0x96ae]        # 11018 <watchlist_num>
    796a:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    796d:	7e ae                	jle    791d <member_exists+0x19>
    796f:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7974:	c9                   	leave  
    7975:	c3                   	ret    

0000000000007976 <init_member>:
    7976:	f3 0f 1e fa          	endbr64 
    797a:	55                   	push   rbp
    797b:	48 89 e5             	mov    rbp,rsp
    797e:	48 83 ec 20          	sub    rsp,0x20
    7982:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7986:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    798a:	48 89 c7             	mov    rdi,rax
    798d:	e8 72 ff ff ff       	call   7904 <member_exists>
    7992:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7995:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    7999:	74 42                	je     79dd <init_member+0x67>
    799b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    799e:	48 63 d0             	movsxd rdx,eax
    79a1:	48 89 d0             	mov    rax,rdx
    79a4:	48 c1 e0 02          	shl    rax,0x2
    79a8:	48 01 d0             	add    rax,rdx
    79ab:	48 c1 e0 03          	shl    rax,0x3
    79af:	48 01 d0             	add    rax,rdx
    79b2:	48 c1 e0 04          	shl    rax,0x4
    79b6:	48 8d 15 63 bb 0e 00 	lea    rdx,[rip+0xebb63]        # f3520 <watchlist>
    79bd:	48 01 d0             	add    rax,rdx
    79c0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    79c4:	bf 00 00 00 00       	mov    edi,0x0
    79c9:	e8 a2 ae ff ff       	call   2870 <time@plt>
    79ce:	48 89 c2             	mov    rdx,rax
    79d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    79d5:	48 89 10             	mov    QWORD PTR [rax],rdx
    79d8:	e9 a8 00 00 00       	jmp    7a85 <init_member+0x10f>
    79dd:	48 8d 3d c9 5b 00 00 	lea    rdi,[rip+0x5bc9]        # d5ad <_IO_stdin_used+0x15ad>
    79e4:	e8 1b ff ff ff       	call   7904 <member_exists>
    79e9:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    79ec:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    79f0:	74 2b                	je     7a1d <init_member+0xa7>
    79f2:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    79f5:	48 63 d0             	movsxd rdx,eax
    79f8:	48 89 d0             	mov    rax,rdx
    79fb:	48 c1 e0 02          	shl    rax,0x2
    79ff:	48 01 d0             	add    rax,rdx
    7a02:	48 c1 e0 03          	shl    rax,0x3
    7a06:	48 01 d0             	add    rax,rdx
    7a09:	48 c1 e0 04          	shl    rax,0x4
    7a0d:	48 8d 15 0c bb 0e 00 	lea    rdx,[rip+0xebb0c]        # f3520 <watchlist>
    7a14:	48 01 d0             	add    rax,rdx
    7a17:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7a1b:	eb 3b                	jmp    7a58 <init_member+0xe2>
    7a1d:	8b 05 f5 95 00 00    	mov    eax,DWORD PTR [rip+0x95f5]        # 11018 <watchlist_num>
    7a23:	83 c0 01             	add    eax,0x1
    7a26:	89 05 ec 95 00 00    	mov    DWORD PTR [rip+0x95ec],eax        # 11018 <watchlist_num>
    7a2c:	8b 05 e6 95 00 00    	mov    eax,DWORD PTR [rip+0x95e6]        # 11018 <watchlist_num>
    7a32:	48 63 d0             	movsxd rdx,eax
    7a35:	48 89 d0             	mov    rax,rdx
    7a38:	48 c1 e0 02          	shl    rax,0x2
    7a3c:	48 01 d0             	add    rax,rdx
    7a3f:	48 c1 e0 03          	shl    rax,0x3
    7a43:	48 01 d0             	add    rax,rdx
    7a46:	48 c1 e0 04          	shl    rax,0x4
    7a4a:	48 8d 15 cf ba 0e 00 	lea    rdx,[rip+0xebacf]        # f3520 <watchlist>
    7a51:	48 01 d0             	add    rax,rdx
    7a54:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7a58:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a5c:	ba 08 00 00 00       	mov    edx,0x8
    7a61:	be 00 00 00 00       	mov    esi,0x0
    7a66:	48 89 c7             	mov    rdi,rax
    7a69:	e8 22 aa ff ff       	call   2490 <memset@plt>
    7a6e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a72:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7a76:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a7a:	48 89 c6             	mov    rsi,rax
    7a7d:	48 89 d7             	mov    rdi,rdx
    7a80:	e8 eb ac ff ff       	call   2770 <strcpy@plt>
    7a85:	c9                   	leave  
    7a86:	c3                   	ret    

0000000000007a87 <ready_for_clean>:
    7a87:	f3 0f 1e fa          	endbr64 
    7a8b:	55                   	push   rbp
    7a8c:	48 89 e5             	mov    rbp,rsp
    7a8f:	48 83 ec 10          	sub    rsp,0x10
    7a93:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7a97:	bf 00 00 00 00       	mov    edi,0x0
    7a9c:	e8 cf ad ff ff       	call   2870 <time@plt>
    7aa1:	48 89 c2             	mov    rdx,rax
    7aa4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7aa8:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7aab:	48 29 c2             	sub    rdx,rax
    7aae:	48 8b 05 03 98 00 00 	mov    rax,QWORD PTR [rip+0x9803]        # 112b8 <clean_delay>
    7ab5:	48 39 c2             	cmp    rdx,rax
    7ab8:	72 22                	jb     7adc <ready_for_clean+0x55>
    7aba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7abe:	48 83 c0 08          	add    rax,0x8
    7ac2:	48 8d 35 ec 5a 00 00 	lea    rsi,[rip+0x5aec]        # d5b5 <_IO_stdin_used+0x15b5>
    7ac9:	48 89 c7             	mov    rdi,rax
    7acc:	e8 7f ac ff ff       	call   2750 <strcmp@plt>
    7ad1:	85 c0                	test   eax,eax
    7ad3:	74 07                	je     7adc <ready_for_clean+0x55>
    7ad5:	b8 01 00 00 00       	mov    eax,0x1
    7ada:	eb 05                	jmp    7ae1 <ready_for_clean+0x5a>
    7adc:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7ae1:	c9                   	leave  
    7ae2:	c3                   	ret    

0000000000007ae3 <clean>:
    7ae3:	f3 0f 1e fa          	endbr64 
    7ae7:	55                   	push   rbp
    7ae8:	48 89 e5             	mov    rbp,rsp
    7aeb:	48 83 ec 10          	sub    rsp,0x10
    7aef:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7af3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7af7:	ba 08 00 00 00       	mov    edx,0x8
    7afc:	be 00 00 00 00       	mov    esi,0x0
    7b01:	48 89 c7             	mov    rdi,rax
    7b04:	e8 87 a9 ff ff       	call   2490 <memset@plt>
    7b09:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b0d:	48 83 c0 08          	add    rax,0x8
    7b11:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7b18:	2e 31 00 
    7b1b:	48 89 08             	mov    QWORD PTR [rax],rcx
    7b1e:	90                   	nop
    7b1f:	c9                   	leave  
    7b20:	c3                   	ret    

0000000000007b21 <scan_for_clean>:
    7b21:	f3 0f 1e fa          	endbr64 
    7b25:	55                   	push   rbp
    7b26:	48 89 e5             	mov    rbp,rsp
    7b29:	48 83 ec 10          	sub    rsp,0x10
    7b2d:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7b34:	eb 62                	jmp    7b98 <scan_for_clean+0x77>
    7b36:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7b39:	48 63 d0             	movsxd rdx,eax
    7b3c:	48 89 d0             	mov    rax,rdx
    7b3f:	48 c1 e0 02          	shl    rax,0x2
    7b43:	48 01 d0             	add    rax,rdx
    7b46:	48 c1 e0 03          	shl    rax,0x3
    7b4a:	48 01 d0             	add    rax,rdx
    7b4d:	48 c1 e0 04          	shl    rax,0x4
    7b51:	48 8d 15 c8 b9 0e 00 	lea    rdx,[rip+0xeb9c8]        # f3520 <watchlist>
    7b58:	48 01 d0             	add    rax,rdx
    7b5b:	48 89 c7             	mov    rdi,rax
    7b5e:	e8 24 ff ff ff       	call   7a87 <ready_for_clean>
    7b63:	85 c0                	test   eax,eax
    7b65:	7e 2d                	jle    7b94 <scan_for_clean+0x73>
    7b67:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7b6a:	48 63 d0             	movsxd rdx,eax
    7b6d:	48 89 d0             	mov    rax,rdx
    7b70:	48 c1 e0 02          	shl    rax,0x2
    7b74:	48 01 d0             	add    rax,rdx
    7b77:	48 c1 e0 03          	shl    rax,0x3
    7b7b:	48 01 d0             	add    rax,rdx
    7b7e:	48 c1 e0 04          	shl    rax,0x4
    7b82:	48 8d 15 97 b9 0e 00 	lea    rdx,[rip+0xeb997]        # f3520 <watchlist>
    7b89:	48 01 d0             	add    rax,rdx
    7b8c:	48 89 c7             	mov    rdi,rax
    7b8f:	e8 4f ff ff ff       	call   7ae3 <clean>
    7b94:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7b98:	8b 05 7a 94 00 00    	mov    eax,DWORD PTR [rip+0x947a]        # 11018 <watchlist_num>
    7b9e:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7ba1:	7e 93                	jle    7b36 <scan_for_clean+0x15>
    7ba3:	90                   	nop
    7ba4:	90                   	nop
    7ba5:	c9                   	leave  
    7ba6:	c3                   	ret    

0000000000007ba7 <compare_entries>:
    7ba7:	f3 0f 1e fa          	endbr64 
    7bab:	55                   	push   rbp
    7bac:	48 89 e5             	mov    rbp,rsp
    7baf:	48 83 ec 20          	sub    rsp,0x20
    7bb3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7bb7:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7bbb:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7bc2:	e9 ac 00 00 00       	jmp    7c73 <compare_entries+0xcc>
    7bc7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7bca:	48 63 d0             	movsxd rdx,eax
    7bcd:	48 89 d0             	mov    rax,rdx
    7bd0:	48 c1 e0 04          	shl    rax,0x4
    7bd4:	48 01 d0             	add    rax,rdx
    7bd7:	48 01 c0             	add    rax,rax
    7bda:	48 8d 15 3f 01 10 00 	lea    rdx,[rip+0x10013f]        # 107d20 <arpcache>
    7be1:	48 01 c2             	add    rdx,rax
    7be4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7be8:	48 89 c6             	mov    rsi,rax
    7beb:	48 89 d7             	mov    rdi,rdx
    7bee:	e8 a3 01 00 00       	call   7d96 <compare_ip_entry>
    7bf3:	85 c0                	test   eax,eax
    7bf5:	74 78                	je     7c6f <compare_entries+0xc8>
    7bf7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7bfa:	48 63 d0             	movsxd rdx,eax
    7bfd:	48 89 d0             	mov    rax,rdx
    7c00:	48 c1 e0 04          	shl    rax,0x4
    7c04:	48 01 d0             	add    rax,rdx
    7c07:	48 01 c0             	add    rax,rax
    7c0a:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7c0e:	48 8d 05 0b 01 10 00 	lea    rax,[rip+0x10010b]        # 107d20 <arpcache>
    7c15:	48 01 c2             	add    rdx,rax
    7c18:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7c1c:	48 89 c6             	mov    rsi,rax
    7c1f:	48 89 d7             	mov    rdi,rdx
    7c22:	e8 98 01 00 00       	call   7dbf <compare_mac_entry>
    7c27:	85 c0                	test   eax,eax
    7c29:	75 44                	jne    7c6f <compare_entries+0xc8>
    7c2b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c2e:	48 63 d0             	movsxd rdx,eax
    7c31:	48 89 d0             	mov    rax,rdx
    7c34:	48 c1 e0 04          	shl    rax,0x4
    7c38:	48 01 d0             	add    rax,rdx
    7c3b:	48 01 c0             	add    rax,rax
    7c3e:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7c42:	48 8d 05 d7 00 10 00 	lea    rax,[rip+0x1000d7]        # 107d20 <arpcache>
    7c49:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7c4d:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7c51:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7c55:	48 89 d1             	mov    rcx,rdx
    7c58:	48 89 f2             	mov    rdx,rsi
    7c5b:	48 89 c6             	mov    rsi,rax
    7c5e:	48 8d 3d 5b 59 00 00 	lea    rdi,[rip+0x595b]        # d5c0 <_IO_stdin_used+0x15c0>
    7c65:	b8 00 00 00 00       	mov    eax,0x0
    7c6a:	e8 11 a8 ff ff       	call   2480 <printf@plt>
    7c6f:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7c73:	8b 05 a3 93 00 00    	mov    eax,DWORD PTR [rip+0x93a3]        # 1101c <arp_entries>
    7c79:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7c7c:	0f 8e 45 ff ff ff    	jle    7bc7 <compare_entries+0x20>
    7c82:	90                   	nop
    7c83:	90                   	nop
    7c84:	c9                   	leave  
    7c85:	c3                   	ret    

0000000000007c86 <add_entry>:
    7c86:	f3 0f 1e fa          	endbr64 
    7c8a:	55                   	push   rbp
    7c8b:	48 89 e5             	mov    rbp,rsp
    7c8e:	48 83 ec 20          	sub    rsp,0x20
    7c92:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7c96:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7c9a:	8b 05 7c 93 00 00    	mov    eax,DWORD PTR [rip+0x937c]        # 1101c <arp_entries>
    7ca0:	83 c0 01             	add    eax,0x1
    7ca3:	89 05 73 93 00 00    	mov    DWORD PTR [rip+0x9373],eax        # 1101c <arp_entries>
    7ca9:	8b 05 6d 93 00 00    	mov    eax,DWORD PTR [rip+0x936d]        # 1101c <arp_entries>
    7caf:	48 63 d0             	movsxd rdx,eax
    7cb2:	48 89 d0             	mov    rax,rdx
    7cb5:	48 c1 e0 04          	shl    rax,0x4
    7cb9:	48 01 d0             	add    rax,rdx
    7cbc:	48 01 c0             	add    rax,rax
    7cbf:	48 8d 15 5a 00 10 00 	lea    rdx,[rip+0x10005a]        # 107d20 <arpcache>
    7cc6:	48 01 d0             	add    rax,rdx
    7cc9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7ccd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7cd1:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7cd5:	48 89 d6             	mov    rsi,rdx
    7cd8:	48 89 c7             	mov    rdi,rax
    7cdb:	e8 90 aa ff ff       	call   2770 <strcpy@plt>
    7ce0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7ce4:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7ce8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7cec:	48 89 c6             	mov    rsi,rax
    7cef:	48 89 d7             	mov    rdi,rdx
    7cf2:	e8 79 aa ff ff       	call   2770 <strcpy@plt>
    7cf7:	90                   	nop
    7cf8:	c9                   	leave  
    7cf9:	c3                   	ret    

0000000000007cfa <entry_exists>:
    7cfa:	f3 0f 1e fa          	endbr64 
    7cfe:	55                   	push   rbp
    7cff:	48 89 e5             	mov    rbp,rsp
    7d02:	48 83 ec 20          	sub    rsp,0x20
    7d06:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7d0a:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7d0e:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7d15:	eb 6d                	jmp    7d84 <entry_exists+0x8a>
    7d17:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d1a:	48 63 d0             	movsxd rdx,eax
    7d1d:	48 89 d0             	mov    rax,rdx
    7d20:	48 c1 e0 04          	shl    rax,0x4
    7d24:	48 01 d0             	add    rax,rdx
    7d27:	48 01 c0             	add    rax,rax
    7d2a:	48 8d 15 ef ff 0f 00 	lea    rdx,[rip+0xfffef]        # 107d20 <arpcache>
    7d31:	48 01 c2             	add    rdx,rax
    7d34:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d38:	48 89 c6             	mov    rsi,rax
    7d3b:	48 89 d7             	mov    rdi,rdx
    7d3e:	e8 53 00 00 00       	call   7d96 <compare_ip_entry>
    7d43:	85 c0                	test   eax,eax
    7d45:	75 39                	jne    7d80 <entry_exists+0x86>
    7d47:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d4a:	48 63 d0             	movsxd rdx,eax
    7d4d:	48 89 d0             	mov    rax,rdx
    7d50:	48 c1 e0 04          	shl    rax,0x4
    7d54:	48 01 d0             	add    rax,rdx
    7d57:	48 01 c0             	add    rax,rax
    7d5a:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d5e:	48 8d 05 bb ff 0f 00 	lea    rax,[rip+0xfffbb]        # 107d20 <arpcache>
    7d65:	48 01 c2             	add    rdx,rax
    7d68:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7d6c:	48 89 c6             	mov    rsi,rax
    7d6f:	48 89 d7             	mov    rdi,rdx
    7d72:	e8 48 00 00 00       	call   7dbf <compare_mac_entry>
    7d77:	85 c0                	test   eax,eax
    7d79:	75 05                	jne    7d80 <entry_exists+0x86>
    7d7b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d7e:	eb 14                	jmp    7d94 <entry_exists+0x9a>
    7d80:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7d84:	8b 05 92 92 00 00    	mov    eax,DWORD PTR [rip+0x9292]        # 1101c <arp_entries>
    7d8a:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7d8d:	7e 88                	jle    7d17 <entry_exists+0x1d>
    7d8f:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7d94:	c9                   	leave  
    7d95:	c3                   	ret    

0000000000007d96 <compare_ip_entry>:
    7d96:	f3 0f 1e fa          	endbr64 
    7d9a:	55                   	push   rbp
    7d9b:	48 89 e5             	mov    rbp,rsp
    7d9e:	48 83 ec 10          	sub    rsp,0x10
    7da2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7da6:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7daa:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7dae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7db2:	48 89 d6             	mov    rsi,rdx
    7db5:	48 89 c7             	mov    rdi,rax
    7db8:	e8 93 a9 ff ff       	call   2750 <strcmp@plt>
    7dbd:	c9                   	leave  
    7dbe:	c3                   	ret    

0000000000007dbf <compare_mac_entry>:
    7dbf:	f3 0f 1e fa          	endbr64 
    7dc3:	55                   	push   rbp
    7dc4:	48 89 e5             	mov    rbp,rsp
    7dc7:	48 83 ec 10          	sub    rsp,0x10
    7dcb:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7dcf:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7dd3:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7dd7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7ddb:	48 89 d6             	mov    rsi,rdx
    7dde:	48 89 c7             	mov    rdi,rax
    7de1:	e8 6a a9 ff ff       	call   2750 <strcmp@plt>
    7de6:	c9                   	leave  
    7de7:	c3                   	ret    

0000000000007de8 <load_csv_arp_cache>:
    7de8:	f3 0f 1e fa          	endbr64 
    7dec:	55                   	push   rbp
    7ded:	48 89 e5             	mov    rbp,rsp
    7df0:	53                   	push   rbx
    7df1:	48 83 ec 68          	sub    rsp,0x68
    7df5:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7dfc:	00 00 
    7dfe:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7e02:	31 c0                	xor    eax,eax
    7e04:	48 8d 35 eb 57 00 00 	lea    rsi,[rip+0x57eb]        # d5f6 <_IO_stdin_used+0x15f6>
    7e0b:	48 8d 3d e6 57 00 00 	lea    rdi,[rip+0x57e6]        # d5f8 <_IO_stdin_used+0x15f8>
    7e12:	e8 59 a7 ff ff       	call   2570 <fopen@plt>
    7e17:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7e1b:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7e20:	75 22                	jne    7e44 <load_csv_arp_cache+0x5c>
    7e22:	48 8d 3d ef 57 00 00 	lea    rdi,[rip+0x57ef]        # d618 <_IO_stdin_used+0x1618>
    7e29:	e8 b2 a6 ff ff       	call   24e0 <puts@plt>
    7e2e:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7e32:	48 89 c7             	mov    rdi,rax
    7e35:	e8 76 a9 ff ff       	call   27b0 <fclose@plt>
    7e3a:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7e3f:	e9 dd 00 00 00       	jmp    7f21 <load_csv_arp_cache+0x139>
    7e44:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7e4b:	00 
    7e4c:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7e53:	00 
    7e54:	eb 7c                	jmp    7ed2 <load_csv_arp_cache+0xea>
    7e56:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7e5a:	48 85 c0             	test   rax,rax
    7e5d:	0f 84 97 00 00 00    	je     7efa <load_csv_arp_cache+0x112>
    7e63:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7e67:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7e6b:	48 8d 35 df 57 00 00 	lea    rsi,[rip+0x57df]        # d651 <_IO_stdin_used+0x1651>
    7e72:	48 89 c7             	mov    rdi,rax
    7e75:	e8 56 a9 ff ff       	call   27d0 <strcspn@plt>
    7e7a:	48 01 d8             	add    rax,rbx
    7e7d:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7e80:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7e84:	48 8d 35 c8 57 00 00 	lea    rsi,[rip+0x57c8]        # d653 <_IO_stdin_used+0x1653>
    7e8b:	48 89 c7             	mov    rdi,rax
    7e8e:	e8 ed a8 ff ff       	call   2780 <strtok@plt>
    7e93:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7e97:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7e9b:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7e9f:	48 89 d6             	mov    rsi,rdx
    7ea2:	48 89 c7             	mov    rdi,rax
    7ea5:	e8 c6 a8 ff ff       	call   2770 <strcpy@plt>
    7eaa:	48 8d 35 a2 57 00 00 	lea    rsi,[rip+0x57a2]        # d653 <_IO_stdin_used+0x1653>
    7eb1:	bf 00 00 00 00       	mov    edi,0x0
    7eb6:	e8 c5 a8 ff ff       	call   2780 <strtok@plt>
    7ebb:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7ebf:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7ec3:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7ec7:	48 89 d6             	mov    rsi,rdx
    7eca:	48 89 c7             	mov    rdi,rax
    7ecd:	e8 9e a8 ff ff       	call   2770 <strcpy@plt>
    7ed2:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    7ed6:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    7eda:	48 8d 45 98          	lea    rax,[rbp-0x68]
    7ede:	48 89 ce             	mov    rsi,rcx
    7ee1:	48 89 c7             	mov    rdi,rax
    7ee4:	e8 77 a8 ff ff       	call   2760 <getline@plt>
    7ee9:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7eed:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    7ef2:	0f 85 5e ff ff ff    	jne    7e56 <load_csv_arp_cache+0x6e>
    7ef8:	eb 01                	jmp    7efb <load_csv_arp_cache+0x113>
    7efa:	90                   	nop
    7efb:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7eff:	48 85 c0             	test   rax,rax
    7f02:	74 0c                	je     7f10 <load_csv_arp_cache+0x128>
    7f04:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f08:	48 89 c7             	mov    rdi,rax
    7f0b:	e8 e0 a6 ff ff       	call   25f0 <free@plt>
    7f10:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7f14:	48 89 c7             	mov    rdi,rax
    7f17:	e8 94 a8 ff ff       	call   27b0 <fclose@plt>
    7f1c:	b8 01 00 00 00       	mov    eax,0x1
    7f21:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7f25:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    7f2c:	00 00 
    7f2e:	74 05                	je     7f35 <load_csv_arp_cache+0x14d>
    7f30:	e8 0b a8 ff ff       	call   2740 <__stack_chk_fail@plt>
    7f35:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7f39:	c9                   	leave  
    7f3a:	c3                   	ret    

0000000000007f3b <tls_decode>:
    7f3b:	f3 0f 1e fa          	endbr64 
    7f3f:	55                   	push   rbp
    7f40:	48 89 e5             	mov    rbp,rsp
    7f43:	48 83 ec 30          	sub    rsp,0x30
    7f47:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7f4b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7f4f:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    7f53:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7f57:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7f5b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7f5f:	0f b7 40 01          	movzx  eax,WORD PTR [rax+0x1]
    7f63:	0f b7 c0             	movzx  eax,ax
    7f66:	3d 03 03 00 00       	cmp    eax,0x303
    7f6b:	74 6a                	je     7fd7 <tls_decode+0x9c>
    7f6d:	3d 03 03 00 00       	cmp    eax,0x303
    7f72:	0f 8f c7 00 00 00    	jg     803f <tls_decode+0x104>
    7f78:	3d 01 03 00 00       	cmp    eax,0x301
    7f7d:	74 0c                	je     7f8b <tls_decode+0x50>
    7f7f:	3d 02 03 00 00       	cmp    eax,0x302
    7f84:	74 2b                	je     7fb1 <tls_decode+0x76>
    7f86:	e9 b4 00 00 00       	jmp    803f <tls_decode+0x104>
    7f8b:	0f b6 05 d2 1f 10 00 	movzx  eax,BYTE PTR [rip+0x101fd2]        # 109f64 <packet_print>
    7f92:	84 c0                	test   al,al
    7f94:	74 11                	je     7fa7 <tls_decode+0x6c>
    7f96:	48 8d 3d bb 56 00 00 	lea    rdi,[rip+0x56bb]        # d658 <_IO_stdin_used+0x1658>
    7f9d:	b8 00 00 00 00       	mov    eax,0x0
    7fa2:	e8 d9 a4 ff ff       	call   2480 <printf@plt>
    7fa7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7fab:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    7faf:	eb 4b                	jmp    7ffc <tls_decode+0xc1>
    7fb1:	0f b6 05 ac 1f 10 00 	movzx  eax,BYTE PTR [rip+0x101fac]        # 109f64 <packet_print>
    7fb8:	84 c0                	test   al,al
    7fba:	74 11                	je     7fcd <tls_decode+0x92>
    7fbc:	48 8d 3d a4 56 00 00 	lea    rdi,[rip+0x56a4]        # d667 <_IO_stdin_used+0x1667>
    7fc3:	b8 00 00 00 00       	mov    eax,0x0
    7fc8:	e8 b3 a4 ff ff       	call   2480 <printf@plt>
    7fcd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7fd1:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    7fd5:	eb 25                	jmp    7ffc <tls_decode+0xc1>
    7fd7:	0f b6 05 86 1f 10 00 	movzx  eax,BYTE PTR [rip+0x101f86]        # 109f64 <packet_print>
    7fde:	84 c0                	test   al,al
    7fe0:	74 11                	je     7ff3 <tls_decode+0xb8>
    7fe2:	48 8d 3d 8d 56 00 00 	lea    rdi,[rip+0x568d]        # d676 <_IO_stdin_used+0x1676>
    7fe9:	b8 00 00 00 00       	mov    eax,0x0
    7fee:	e8 8d a4 ff ff       	call   2480 <printf@plt>
    7ff3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7ff7:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    7ffb:	90                   	nop
    7ffc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8000:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8003:	0f b6 c0             	movzx  eax,al
    8006:	83 f8 17             	cmp    eax,0x17
    8009:	74 37                	je     8042 <tls_decode+0x107>
    800b:	83 f8 17             	cmp    eax,0x17
    800e:	7f 35                	jg     8045 <tls_decode+0x10a>
    8010:	83 f8 16             	cmp    eax,0x16
    8013:	74 11                	je     8026 <tls_decode+0xeb>
    8015:	83 f8 16             	cmp    eax,0x16
    8018:	7f 2b                	jg     8045 <tls_decode+0x10a>
    801a:	83 f8 14             	cmp    eax,0x14
    801d:	74 29                	je     8048 <tls_decode+0x10d>
    801f:	83 f8 15             	cmp    eax,0x15
    8022:	74 27                	je     804b <tls_decode+0x110>
    8024:	eb 1f                	jmp    8045 <tls_decode+0x10a>
    8026:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    802a:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    802e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8032:	48 89 ce             	mov    rsi,rcx
    8035:	48 89 c7             	mov    rdi,rax
    8038:	e8 11 00 00 00       	call   804e <tlshandshake>
    803d:	eb 0d                	jmp    804c <tls_decode+0x111>
    803f:	90                   	nop
    8040:	eb 0a                	jmp    804c <tls_decode+0x111>
    8042:	90                   	nop
    8043:	eb 07                	jmp    804c <tls_decode+0x111>
    8045:	90                   	nop
    8046:	eb 04                	jmp    804c <tls_decode+0x111>
    8048:	90                   	nop
    8049:	eb 01                	jmp    804c <tls_decode+0x111>
    804b:	90                   	nop
    804c:	c9                   	leave  
    804d:	c3                   	ret    

000000000000804e <tlshandshake>:
    804e:	f3 0f 1e fa          	endbr64 
    8052:	55                   	push   rbp
    8053:	48 89 e5             	mov    rbp,rsp
    8056:	48 83 ec 30          	sub    rsp,0x30
    805a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    805e:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8062:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    8066:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    806a:	48 83 c0 08          	add    rax,0x8
    806e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8072:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8076:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8079:	0f b6 c0             	movzx  eax,al
    807c:	83 f8 0b             	cmp    eax,0xb
    807f:	0f 87 bf 00 00 00    	ja     8144 <tlshandshake+0xf6>
    8085:	89 c0                	mov    eax,eax
    8087:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    808e:	00 
    808f:	48 8d 05 36 56 00 00 	lea    rax,[rip+0x5636]        # d6cc <_IO_stdin_used+0x16cc>
    8096:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    8099:	48 98                	cdqe   
    809b:	48 8d 15 2a 56 00 00 	lea    rdx,[rip+0x562a]        # d6cc <_IO_stdin_used+0x16cc>
    80a2:	48 01 d0             	add    rax,rdx
    80a5:	3e ff e0             	notrack jmp rax
    80a8:	48 8d 3d d6 55 00 00 	lea    rdi,[rip+0x55d6]        # d685 <_IO_stdin_used+0x1685>
    80af:	e8 2c a4 ff ff       	call   24e0 <puts@plt>
    80b4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80b8:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80bc:	e9 83 00 00 00       	jmp    8144 <tlshandshake+0xf6>
    80c1:	0f b6 05 9c 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101e9c]        # 109f64 <packet_print>
    80c8:	84 c0                	test   al,al
    80ca:	74 0c                	je     80d8 <tlshandshake+0x8a>
    80cc:	48 8d 3d bf 55 00 00 	lea    rdi,[rip+0x55bf]        # d692 <_IO_stdin_used+0x1692>
    80d3:	e8 08 a4 ff ff       	call   24e0 <puts@plt>
    80d8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80dc:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80e0:	eb 62                	jmp    8144 <tlshandshake+0xf6>
    80e2:	0f b6 05 7b 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101e7b]        # 109f64 <packet_print>
    80e9:	84 c0                	test   al,al
    80eb:	74 0c                	je     80f9 <tlshandshake+0xab>
    80ed:	48 8d 3d ab 55 00 00 	lea    rdi,[rip+0x55ab]        # d69f <_IO_stdin_used+0x169f>
    80f4:	e8 e7 a3 ff ff       	call   24e0 <puts@plt>
    80f9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80fd:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8101:	eb 41                	jmp    8144 <tlshandshake+0xf6>
    8103:	0f b6 05 5a 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101e5a]        # 109f64 <packet_print>
    810a:	84 c0                	test   al,al
    810c:	74 0c                	je     811a <tlshandshake+0xcc>
    810e:	48 8d 3d 9d 55 00 00 	lea    rdi,[rip+0x559d]        # d6b2 <_IO_stdin_used+0x16b2>
    8115:	e8 c6 a3 ff ff       	call   24e0 <puts@plt>
    811a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    811e:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8122:	eb 20                	jmp    8144 <tlshandshake+0xf6>
    8124:	0f b6 05 39 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101e39]        # 109f64 <packet_print>
    812b:	84 c0                	test   al,al
    812d:	74 0c                	je     813b <tlshandshake+0xed>
    812f:	48 8d 3d 88 55 00 00 	lea    rdi,[rip+0x5588]        # d6be <_IO_stdin_used+0x16be>
    8136:	e8 a5 a3 ff ff       	call   24e0 <puts@plt>
    813b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    813f:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8143:	90                   	nop
    8144:	90                   	nop
    8145:	c9                   	leave  
    8146:	c3                   	ret    

0000000000008147 <callback>:
    8147:	f3 0f 1e fa          	endbr64 
    814b:	55                   	push   rbp
    814c:	48 89 e5             	mov    rbp,rsp
    814f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    8153:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    8156:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    815a:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    815e:	b8 00 00 00 00       	mov    eax,0x0
    8163:	5d                   	pop    rbp
    8164:	c3                   	ret    

0000000000008165 <update_db>:
    8165:	f3 0f 1e fa          	endbr64 
    8169:	55                   	push   rbp
    816a:	48 89 e5             	mov    rbp,rsp
    816d:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    8174:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    817b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8182:	00 00 
    8184:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8188:	31 c0                	xor    eax,eax
    818a:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    8191:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    8198:	48 8d 3d 61 55 00 00 	lea    rdi,[rip+0x5561]        # d700 <_IO_stdin_used+0x1700>
    819f:	e8 3c a3 ff ff       	call   24e0 <puts@plt>
    81a4:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    81ab:	00 00 00 00 
    81af:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    81b6:	48 89 c6             	mov    rsi,rax
    81b9:	48 8d 3d 80 1d 10 00 	lea    rdi,[rip+0x101d80]        # 109f40 <sqlite_db_path>
    81c0:	e8 9b a6 ff ff       	call   2860 <sqlite3_open@plt>
    81c5:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    81cb:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    81d2:	74 28                	je     81fc <update_db+0x97>
    81d4:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    81db:	48 89 c7             	mov    rdi,rax
    81de:	e8 bd a5 ff ff       	call   27a0 <sqlite3_errmsg@plt>
    81e3:	48 89 c6             	mov    rsi,rax
    81e6:	48 8d 3d 1f 55 00 00 	lea    rdi,[rip+0x551f]        # d70c <_IO_stdin_used+0x170c>
    81ed:	b8 00 00 00 00       	mov    eax,0x0
    81f2:	e8 89 a2 ff ff       	call   2480 <printf@plt>
    81f7:	e9 a2 00 00 00       	jmp    829e <update_db+0x139>
    81fc:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    8203:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    8206:	85 c0                	test   eax,eax
    8208:	75 2e                	jne    8238 <update_db+0xd3>
    820a:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    8211:	48 8d 48 10          	lea    rcx,[rax+0x10]
    8215:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    821c:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    8223:	48 8d 35 f6 54 00 00 	lea    rsi,[rip+0x54f6]        # d720 <_IO_stdin_used+0x1720>
    822a:	48 89 c7             	mov    rdi,rax
    822d:	b8 00 00 00 00       	mov    eax,0x0
    8232:	e8 e9 a3 ff ff       	call   2620 <sprintf@plt>
    8237:	90                   	nop
    8238:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    823f:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    8246:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    824d:	49 89 d0             	mov    r8,rdx
    8250:	b9 00 00 00 00       	mov    ecx,0x0
    8255:	ba 00 00 00 00       	mov    edx,0x0
    825a:	48 89 c7             	mov    rdi,rax
    825d:	e8 be a2 ff ff       	call   2520 <sqlite3_exec@plt>
    8262:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    8268:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    826f:	74 2c                	je     829d <update_db+0x138>
    8271:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    8278:	48 89 c6             	mov    rsi,rax
    827b:	48 8d 3d e3 54 00 00 	lea    rdi,[rip+0x54e3]        # d765 <_IO_stdin_used+0x1765>
    8282:	b8 00 00 00 00       	mov    eax,0x0
    8287:	e8 f4 a1 ff ff       	call   2480 <printf@plt>
    828c:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    8293:	48 89 c7             	mov    rdi,rax
    8296:	e8 15 a3 ff ff       	call   25b0 <sqlite3_free@plt>
    829b:	eb 01                	jmp    829e <update_db+0x139>
    829d:	90                   	nop
    829e:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    82a5:	48 89 c7             	mov    rdi,rax
    82a8:	e8 b3 a1 ff ff       	call   2460 <sqlite3_close@plt>
    82ad:	b8 01 00 00 00       	mov    eax,0x1
    82b2:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    82b6:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    82bd:	00 00 
    82bf:	74 05                	je     82c6 <update_db+0x161>
    82c1:	e8 7a a4 ff ff       	call   2740 <__stack_chk_fail@plt>
    82c6:	c9                   	leave  
    82c7:	c3                   	ret    

00000000000082c8 <update_spi_db>:
    82c8:	f3 0f 1e fa          	endbr64 
    82cc:	55                   	push   rbp
    82cd:	48 89 e5             	mov    rbp,rsp
    82d0:	41 57                	push   r15
    82d2:	41 56                	push   r14
    82d4:	41 55                	push   r13
    82d6:	41 54                	push   r12
    82d8:	53                   	push   rbx
    82d9:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    82e0:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    82e7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    82ee:	00 00 
    82f0:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    82f4:	31 c0                	xor    eax,eax
    82f6:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    82fd:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    8304:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    830b:	48 89 c6             	mov    rsi,rax
    830e:	48 8d 3d 6e 54 00 00 	lea    rdi,[rip+0x546e]        # d783 <_IO_stdin_used+0x1783>
    8315:	e8 46 a5 ff ff       	call   2860 <sqlite3_open@plt>
    831a:	85 c0                	test   eax,eax
    831c:	74 3c                	je     835a <update_spi_db+0x92>
    831e:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8325:	48 89 c7             	mov    rdi,rax
    8328:	e8 73 a4 ff ff       	call   27a0 <sqlite3_errmsg@plt>
    832d:	48 89 c6             	mov    rsi,rax
    8330:	48 8d 3d 64 54 00 00 	lea    rdi,[rip+0x5464]        # d79b <_IO_stdin_used+0x179b>
    8337:	b8 00 00 00 00       	mov    eax,0x0
    833c:	e8 3f a1 ff ff       	call   2480 <printf@plt>
    8341:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8348:	48 89 c7             	mov    rdi,rax
    834b:	e8 10 a1 ff ff       	call   2460 <sqlite3_close@plt>
    8350:	b8 00 00 00 00       	mov    eax,0x0
    8355:	e9 5c 01 00 00       	jmp    84b6 <update_spi_db+0x1ee>
    835a:	48 8d 05 4f 54 00 00 	lea    rax,[rip+0x544f]        # d7b0 <_IO_stdin_used+0x17b0>
    8361:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    8368:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    836f:	8b 90 80 00 00 00    	mov    edx,DWORD PTR [rax+0x80]
    8375:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    837c:	44 8b 78 7c          	mov    r15d,DWORD PTR [rax+0x7c]
    8380:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8387:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    838e:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8395:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    839c:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    83a3:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    83aa:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    83b1:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    83b7:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    83be:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    83c2:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    83c5:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    83cc:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    83d0:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    83d7:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    83db:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    83de:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    83e5:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    83e9:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    83f0:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    83f3:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    83f9:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8400:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    8403:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    8409:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8410:	48 8d 48 29          	lea    rcx,[rax+0x29]
    8414:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    841b:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    8422:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    8429:	52                   	push   rdx
    842a:	41 57                	push   r15
    842c:	41 56                	push   r14
    842e:	41 55                	push   r13
    8430:	41 54                	push   r12
    8432:	53                   	push   rbx
    8433:	41 53                	push   r11
    8435:	41 52                	push   r10
    8437:	41 51                	push   r9
    8439:	41 50                	push   r8
    843b:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    8442:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    8449:	48 89 fa             	mov    rdx,rdi
    844c:	48 89 c7             	mov    rdi,rax
    844f:	b8 00 00 00 00       	mov    eax,0x0
    8454:	e8 c7 a1 ff ff       	call   2620 <sprintf@plt>
    8459:	48 83 c4 50          	add    rsp,0x50
    845d:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    8464:	00 00 00 00 
    8468:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    846f:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    8476:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    847d:	49 89 d0             	mov    r8,rdx
    8480:	b9 00 00 00 00       	mov    ecx,0x0
    8485:	ba 00 00 00 00       	mov    edx,0x0
    848a:	48 89 c7             	mov    rdi,rax
    848d:	e8 8e a0 ff ff       	call   2520 <sqlite3_exec@plt>
    8492:	85 c0                	test   eax,eax
    8494:	74 1b                	je     84b1 <update_spi_db+0x1e9>
    8496:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    849d:	48 89 c6             	mov    rsi,rax
    84a0:	48 8d 3d f6 53 00 00 	lea    rdi,[rip+0x53f6]        # d89d <_IO_stdin_used+0x189d>
    84a7:	b8 00 00 00 00       	mov    eax,0x0
    84ac:	e8 cf 9f ff ff       	call   2480 <printf@plt>
    84b1:	b8 00 00 00 00       	mov    eax,0x0
    84b6:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    84ba:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    84c1:	00 00 
    84c3:	74 05                	je     84ca <update_spi_db+0x202>
    84c5:	e8 76 a2 ff ff       	call   2740 <__stack_chk_fail@plt>
    84ca:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    84ce:	5b                   	pop    rbx
    84cf:	41 5c                	pop    r12
    84d1:	41 5d                	pop    r13
    84d3:	41 5e                	pop    r14
    84d5:	41 5f                	pop    r15
    84d7:	5d                   	pop    rbp
    84d8:	c3                   	ret    

00000000000084d9 <http_disect>:
    84d9:	f3 0f 1e fa          	endbr64 
    84dd:	55                   	push   rbp
    84de:	48 89 e5             	mov    rbp,rsp
    84e1:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    84e8:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    84ef:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    84f6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    84fd:	00 00 
    84ff:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8503:	31 c0                	xor    eax,eax
    8505:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    850c:	be 0d 00 00 00       	mov    esi,0xd
    8511:	48 89 c7             	mov    rdi,rax
    8514:	e8 c1 af ff ff       	call   34da <strloc>
    8519:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    851f:	48 8d 3d 95 53 00 00 	lea    rdi,[rip+0x5395]        # d8bb <_IO_stdin_used+0x18bb>
    8526:	e8 b5 9f ff ff       	call   24e0 <puts@plt>
    852b:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8532:	48 89 c7             	mov    rdi,rax
    8535:	e8 47 b0 ff ff       	call   3581 <test_string_arr_print>
    853a:	83 f0 01             	xor    eax,0x1
    853d:	84 c0                	test   al,al
    853f:	75 33                	jne    8574 <http_disect+0x9b>
    8541:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    8547:	48 63 d0             	movsxd rdx,eax
    854a:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    8551:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    8558:	48 89 ce             	mov    rsi,rcx
    855b:	48 89 c7             	mov    rdi,rax
    855e:	e8 5d a2 ff ff       	call   27c0 <strncpy@plt>
    8563:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    856a:	48 89 c7             	mov    rdi,rax
    856d:	e8 6e 9f ff ff       	call   24e0 <puts@plt>
    8572:	eb 01                	jmp    8575 <http_disect+0x9c>
    8574:	90                   	nop
    8575:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8579:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8580:	00 00 
    8582:	74 05                	je     8589 <http_disect+0xb0>
    8584:	e8 b7 a1 ff ff       	call   2740 <__stack_chk_fail@plt>
    8589:	c9                   	leave  
    858a:	c3                   	ret    

000000000000858b <dns_disect>:
    858b:	f3 0f 1e fa          	endbr64 
    858f:	55                   	push   rbp
    8590:	48 89 e5             	mov    rbp,rsp
    8593:	48 83 ec 30          	sub    rsp,0x30
    8597:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    859b:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    859f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    85a3:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    85a7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    85ab:	48 83 c0 0c          	add    rax,0xc
    85af:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    85b3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    85b7:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    85bb:	66 85 c0             	test   ax,ax
    85be:	75 6d                	jne    862d <dns_disect+0xa2>
    85c0:	bf 00 04 00 00       	mov    edi,0x400
    85c5:	e8 96 9f ff ff       	call   2560 <malloc@plt>
    85ca:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    85ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    85d2:	ba 08 00 00 00       	mov    edx,0x8
    85d7:	be 00 00 00 00       	mov    esi,0x0
    85dc:	48 89 c7             	mov    rdi,rax
    85df:	e8 ac 9e ff ff       	call   2490 <memset@plt>
    85e4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    85e8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    85ec:	48 89 d6             	mov    rsi,rdx
    85ef:	48 89 c7             	mov    rdi,rax
    85f2:	e8 39 00 00 00       	call   8630 <get_dns_name>
    85f7:	0f b6 05 66 19 10 00 	movzx  eax,BYTE PTR [rip+0x101966]        # 109f64 <packet_print>
    85fe:	84 c0                	test   al,al
    8600:	74 18                	je     861a <dns_disect+0x8f>
    8602:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8606:	48 89 c6             	mov    rsi,rax
    8609:	48 8d 3d bd 52 00 00 	lea    rdi,[rip+0x52bd]        # d8cd <_IO_stdin_used+0x18cd>
    8610:	b8 00 00 00 00       	mov    eax,0x0
    8615:	e8 66 9e ff ff       	call   2480 <printf@plt>
    861a:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    861f:	74 0c                	je     862d <dns_disect+0xa2>
    8621:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8625:	48 89 c7             	mov    rdi,rax
    8628:	e8 c3 9f ff ff       	call   25f0 <free@plt>
    862d:	90                   	nop
    862e:	c9                   	leave  
    862f:	c3                   	ret    

0000000000008630 <get_dns_name>:
    8630:	f3 0f 1e fa          	endbr64 
    8634:	55                   	push   rbp
    8635:	48 89 e5             	mov    rbp,rsp
    8638:	53                   	push   rbx
    8639:	48 83 ec 28          	sub    rsp,0x28
    863d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8641:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8645:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    864c:	eb 57                	jmp    86a5 <get_dns_name+0x75>
    864e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8651:	48 63 d0             	movsxd rdx,eax
    8654:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8658:	48 01 d0             	add    rax,rdx
    865b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    865e:	3c 20                	cmp    al,0x20
    8660:	7e 24                	jle    8686 <get_dns_name+0x56>
    8662:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8665:	48 63 d0             	movsxd rdx,eax
    8668:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    866c:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    8670:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8674:	ba 01 00 00 00       	mov    edx,0x1
    8679:	48 89 ce             	mov    rsi,rcx
    867c:	48 89 c7             	mov    rdi,rax
    867f:	e8 4c 9e ff ff       	call   24d0 <strncat@plt>
    8684:	eb 1b                	jmp    86a1 <get_dns_name+0x71>
    8686:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    868a:	48 89 c7             	mov    rdi,rax
    868d:	e8 6e 9f ff ff       	call   2600 <strlen@plt>
    8692:	48 89 c2             	mov    rdx,rax
    8695:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8699:	48 01 d0             	add    rax,rdx
    869c:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    86a1:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    86a5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    86a8:	48 63 d8             	movsxd rbx,eax
    86ab:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    86af:	48 89 c7             	mov    rdi,rax
    86b2:	e8 49 9f ff ff       	call   2600 <strlen@plt>
    86b7:	48 39 c3             	cmp    rbx,rax
    86ba:	72 92                	jb     864e <get_dns_name+0x1e>
    86bc:	90                   	nop
    86bd:	90                   	nop
    86be:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    86c2:	c9                   	leave  
    86c3:	c3                   	ret    

00000000000086c4 <ftp_disect>:
    86c4:	f3 0f 1e fa          	endbr64 
    86c8:	55                   	push   rbp
    86c9:	48 89 e5             	mov    rbp,rsp
    86cc:	48 83 ec 20          	sub    rsp,0x20
    86d0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    86d4:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    86d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86dc:	48 8d 35 f5 51 00 00 	lea    rsi,[rip+0x51f5]        # d8d8 <_IO_stdin_used+0x18d8>
    86e3:	48 89 c7             	mov    rdi,rax
    86e6:	e8 85 9f ff ff       	call   2670 <strstr@plt>
    86eb:	48 85 c0             	test   rax,rax
    86ee:	75 1c                	jne    870c <ftp_disect+0x48>
    86f0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86f4:	48 8d 35 ed 51 00 00 	lea    rsi,[rip+0x51ed]        # d8e8 <_IO_stdin_used+0x18e8>
    86fb:	48 89 c7             	mov    rdi,rax
    86fe:	e8 6d 9f ff ff       	call   2670 <strstr@plt>
    8703:	48 85 c0             	test   rax,rax
    8706:	0f 84 8a 00 00 00    	je     8796 <ftp_disect+0xd2>
    870c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8710:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8714:	48 89 c7             	mov    rdi,rax
    8717:	e8 e8 f1 ff ff       	call   7904 <member_exists>
    871c:	48 63 d0             	movsxd rdx,eax
    871f:	48 89 d0             	mov    rax,rdx
    8722:	48 c1 e0 02          	shl    rax,0x2
    8726:	48 01 d0             	add    rax,rdx
    8729:	48 c1 e0 03          	shl    rax,0x3
    872d:	48 01 d0             	add    rax,rdx
    8730:	48 c1 e0 04          	shl    rax,0x4
    8734:	48 8d 15 e5 ad 0e 00 	lea    rdx,[rip+0xeade5]        # f3520 <watchlist>
    873b:	48 01 d0             	add    rax,rdx
    873e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8742:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8746:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    874c:	8d 50 01             	lea    edx,[rax+0x1]
    874f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8753:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    8759:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    875d:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    8763:	83 f8 04             	cmp    eax,0x4
    8766:	7e 2e                	jle    8796 <ftp_disect+0xd2>
    8768:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    876c:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    8772:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8776:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    877a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    877e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8782:	48 89 c6             	mov    rsi,rax
    8785:	48 8d 3d 6c 51 00 00 	lea    rdi,[rip+0x516c]        # d8f8 <_IO_stdin_used+0x18f8>
    878c:	b8 00 00 00 00       	mov    eax,0x0
    8791:	e8 ea 9c ff ff       	call   2480 <printf@plt>
    8796:	90                   	nop
    8797:	c9                   	leave  
    8798:	c3                   	ret    

0000000000008799 <livedebug>:
    8799:	f3 0f 1e fa          	endbr64 
    879d:	55                   	push   rbp
    879e:	48 89 e5             	mov    rbp,rsp
    87a1:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    87a8:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    87af:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    87b6:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    87bd:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    87c4:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    87cb:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    87d2:	84 c0                	test   al,al
    87d4:	74 20                	je     87f6 <livedebug+0x5d>
    87d6:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    87da:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    87de:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    87e2:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    87e6:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    87ea:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    87ee:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    87f2:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    87f6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    87fd:	00 00 
    87ff:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    8806:	31 c0                	xor    eax,eax
    8808:	0f b6 05 11 17 10 00 	movzx  eax,BYTE PTR [rip+0x101711]        # 109f20 <debug_mode>
    880f:	84 c0                	test   al,al
    8811:	74 4b                	je     885e <livedebug+0xc5>
    8813:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    881a:	00 00 00 
    881d:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    8824:	00 00 00 
    8827:	48 8d 45 10          	lea    rax,[rbp+0x10]
    882b:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8832:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8839:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8840:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    8847:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    884e:	48 89 d6             	mov    rsi,rdx
    8851:	48 89 c7             	mov    rdi,rax
    8854:	b8 00 00 00 00       	mov    eax,0x0
    8859:	e8 22 9c ff ff       	call   2480 <printf@plt>
    885e:	90                   	nop
    885f:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    8866:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    886d:	00 00 
    886f:	74 05                	je     8876 <livedebug+0xdd>
    8871:	e8 ca 9e ff ff       	call   2740 <__stack_chk_fail@plt>
    8876:	c9                   	leave  
    8877:	c3                   	ret    

0000000000008878 <forward_packet>:
    8878:	f3 0f 1e fa          	endbr64 
    887c:	55                   	push   rbp
    887d:	48 89 e5             	mov    rbp,rsp
    8880:	48 83 ec 20          	sub    rsp,0x20
    8884:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8888:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    888c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8890:	48 8d 35 f9 16 10 00 	lea    rsi,[rip+0x1016f9]        # 109f90 <local_ip>
    8897:	48 89 c7             	mov    rdi,rax
    889a:	e8 b1 9e ff ff       	call   2750 <strcmp@plt>
    889f:	85 c0                	test   eax,eax
    88a1:	74 4f                	je     88f2 <forward_packet+0x7a>
    88a3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88a7:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    88ab:	48 8d 35 de 16 10 00 	lea    rsi,[rip+0x1016de]        # 109f90 <local_ip>
    88b2:	48 89 c7             	mov    rdi,rax
    88b5:	e8 96 9e ff ff       	call   2750 <strcmp@plt>
    88ba:	85 c0                	test   eax,eax
    88bc:	74 34                	je     88f2 <forward_packet+0x7a>
    88be:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88c2:	48 8b 00             	mov    rax,QWORD PTR [rax]
    88c5:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    88c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88cd:	48 89 d6             	mov    rsi,rdx
    88d0:	48 89 c7             	mov    rdi,rax
    88d3:	e8 98 9e ff ff       	call   2770 <strcpy@plt>
    88d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    88dc:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    88df:	83 e8 0e             	sub    eax,0xe
    88e2:	89 c2                	mov    edx,eax
    88e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88e8:	89 d6                	mov    esi,edx
    88ea:	48 89 c7             	mov    rdi,rax
    88ed:	e8 6b ca ff ff       	call   535d <ascii_hexdump>
    88f2:	90                   	nop
    88f3:	c9                   	leave  
    88f4:	c3                   	ret    

00000000000088f5 <conversation_exists>:
    88f5:	f3 0f 1e fa          	endbr64 
    88f9:	55                   	push   rbp
    88fa:	48 89 e5             	mov    rbp,rsp
    88fd:	48 83 ec 20          	sub    rsp,0x20
    8901:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8905:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    890c:	e9 ff 00 00 00       	jmp    8a10 <conversation_exists+0x11b>
    8911:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8914:	48 98                	cdqe   
    8916:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    891d:	48 8d 15 bc 16 10 00 	lea    rdx,[rip+0x1016bc]        # 109fe0 <spi_table>
    8924:	48 01 d0             	add    rax,rdx
    8927:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    892b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    892f:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    8936:	84 c0                	test   al,al
    8938:	0f 84 ce 00 00 00    	je     8a0c <conversation_exists+0x117>
    893e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8942:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8945:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8949:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    894c:	39 c2                	cmp    edx,eax
    894e:	75 58                	jne    89a8 <conversation_exists+0xb3>
    8950:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8954:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8957:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    895b:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    895e:	39 c2                	cmp    edx,eax
    8960:	75 46                	jne    89a8 <conversation_exists+0xb3>
    8962:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8966:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    896a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    896e:	48 89 d6             	mov    rsi,rdx
    8971:	48 89 c7             	mov    rdi,rax
    8974:	e8 d7 9d ff ff       	call   2750 <strcmp@plt>
    8979:	85 c0                	test   eax,eax
    897b:	0f 85 8a 00 00 00    	jne    8a0b <conversation_exists+0x116>
    8981:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8985:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8989:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    898d:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8991:	48 89 d6             	mov    rsi,rdx
    8994:	48 89 c7             	mov    rdi,rax
    8997:	e8 b4 9d ff ff       	call   2750 <strcmp@plt>
    899c:	85 c0                	test   eax,eax
    899e:	75 6b                	jne    8a0b <conversation_exists+0x116>
    89a0:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    89a3:	e9 81 00 00 00       	jmp    8a29 <conversation_exists+0x134>
    89a8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89ac:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    89af:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89b3:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    89b6:	39 c2                	cmp    edx,eax
    89b8:	75 52                	jne    8a0c <conversation_exists+0x117>
    89ba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89be:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    89c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89c5:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    89c8:	39 c2                	cmp    edx,eax
    89ca:	75 40                	jne    8a0c <conversation_exists+0x117>
    89cc:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    89d0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89d4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    89d8:	48 89 d6             	mov    rsi,rdx
    89db:	48 89 c7             	mov    rdi,rax
    89de:	e8 6d 9d ff ff       	call   2750 <strcmp@plt>
    89e3:	85 c0                	test   eax,eax
    89e5:	75 25                	jne    8a0c <conversation_exists+0x117>
    89e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89eb:	48 8d 50 29          	lea    rdx,[rax+0x29]
    89ef:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89f3:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    89f7:	48 89 d6             	mov    rsi,rdx
    89fa:	48 89 c7             	mov    rdi,rax
    89fd:	e8 4e 9d ff ff       	call   2750 <strcmp@plt>
    8a02:	85 c0                	test   eax,eax
    8a04:	75 06                	jne    8a0c <conversation_exists+0x117>
    8a06:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8a09:	eb 1e                	jmp    8a29 <conversation_exists+0x134>
    8a0b:	90                   	nop
    8a0c:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8a10:	8b 05 2a 86 00 00    	mov    eax,DWORD PTR [rip+0x862a]        # 11040 <total_conversations>
    8a16:	8d 50 01             	lea    edx,[rax+0x1]
    8a19:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8a1c:	39 c2                	cmp    edx,eax
    8a1e:	0f 87 ed fe ff ff    	ja     8911 <conversation_exists+0x1c>
    8a24:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8a29:	c9                   	leave  
    8a2a:	c3                   	ret    

0000000000008a2b <get_new_spi_location>:
    8a2b:	f3 0f 1e fa          	endbr64 
    8a2f:	55                   	push   rbp
    8a30:	48 89 e5             	mov    rbp,rsp
    8a33:	8b 05 07 86 00 00    	mov    eax,DWORD PTR [rip+0x8607]        # 11040 <total_conversations>
    8a39:	83 f8 ff             	cmp    eax,0xffffffff
    8a3c:	75 17                	jne    8a55 <get_new_spi_location+0x2a>
    8a3e:	8b 05 fc 85 00 00    	mov    eax,DWORD PTR [rip+0x85fc]        # 11040 <total_conversations>
    8a44:	83 c0 01             	add    eax,0x1
    8a47:	89 05 f3 85 00 00    	mov    DWORD PTR [rip+0x85f3],eax        # 11040 <total_conversations>
    8a4d:	8b 05 ed 85 00 00    	mov    eax,DWORD PTR [rip+0x85ed]        # 11040 <total_conversations>
    8a53:	eb 52                	jmp    8aa7 <get_new_spi_location+0x7c>
    8a55:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    8a5c:	eb 27                	jmp    8a85 <get_new_spi_location+0x5a>
    8a5e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8a61:	48 98                	cdqe   
    8a63:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8a6a:	48 8d 15 1f 16 10 00 	lea    rdx,[rip+0x10161f]        # 10a090 <spi_table+0xb0>
    8a71:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    8a75:	83 f0 01             	xor    eax,0x1
    8a78:	84 c0                	test   al,al
    8a7a:	74 05                	je     8a81 <get_new_spi_location+0x56>
    8a7c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8a7f:	eb 26                	jmp    8aa7 <get_new_spi_location+0x7c>
    8a81:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    8a85:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    8a88:	8b 05 b2 85 00 00    	mov    eax,DWORD PTR [rip+0x85b2]        # 11040 <total_conversations>
    8a8e:	39 c2                	cmp    edx,eax
    8a90:	72 cc                	jb     8a5e <get_new_spi_location+0x33>
    8a92:	8b 05 a8 85 00 00    	mov    eax,DWORD PTR [rip+0x85a8]        # 11040 <total_conversations>
    8a98:	83 c0 01             	add    eax,0x1
    8a9b:	89 05 9f 85 00 00    	mov    DWORD PTR [rip+0x859f],eax        # 11040 <total_conversations>
    8aa1:	8b 05 99 85 00 00    	mov    eax,DWORD PTR [rip+0x8599]        # 11040 <total_conversations>
    8aa7:	5d                   	pop    rbp
    8aa8:	c3                   	ret    

0000000000008aa9 <add_new_conversation>:
    8aa9:	f3 0f 1e fa          	endbr64 
    8aad:	55                   	push   rbp
    8aae:	48 89 e5             	mov    rbp,rsp
    8ab1:	48 83 ec 20          	sub    rsp,0x20
    8ab5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8ab9:	0f b6 05 02 15 10 00 	movzx  eax,BYTE PTR [rip+0x101502]        # 109fc2 <use_spi>
    8ac0:	84 c0                	test   al,al
    8ac2:	0f 84 17 02 00 00    	je     8cdf <add_new_conversation+0x236>
    8ac8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8acc:	48 89 c7             	mov    rdi,rax
    8acf:	e8 21 fe ff ff       	call   88f5 <conversation_exists>
    8ad4:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8ad7:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8adb:	0f 84 88 00 00 00    	je     8b69 <add_new_conversation+0xc0>
    8ae1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8ae4:	48 98                	cdqe   
    8ae6:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8aed:	48 8d 15 ec 14 10 00 	lea    rdx,[rip+0x1014ec]        # 109fe0 <spi_table>
    8af4:	48 01 d0             	add    rax,rdx
    8af7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8afb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8aff:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    8b05:	8d 50 01             	lea    edx,[rax+0x1]
    8b08:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b0c:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    8b12:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b16:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8b1c:	8d 50 01             	lea    edx,[rax+0x1]
    8b1f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b23:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8b29:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b2d:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8b30:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8b34:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b38:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8b3b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b3f:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8b43:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b46:	41 89 f9             	mov    r9d,edi
    8b49:	49 89 c8             	mov    r8,rcx
    8b4c:	89 d1                	mov    ecx,edx
    8b4e:	48 89 f2             	mov    rdx,rsi
    8b51:	89 c6                	mov    esi,eax
    8b53:	48 8d 3d e6 4d 00 00 	lea    rdi,[rip+0x4de6]        # d940 <_IO_stdin_used+0x1940>
    8b5a:	b8 00 00 00 00       	mov    eax,0x0
    8b5f:	e8 1c 99 ff ff       	call   2480 <printf@plt>
    8b64:	e9 76 01 00 00       	jmp    8cdf <add_new_conversation+0x236>
    8b69:	b8 00 00 00 00       	mov    eax,0x0
    8b6e:	e8 b8 fe ff ff       	call   8a2b <get_new_spi_location>
    8b73:	48 98                	cdqe   
    8b75:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8b7c:	48 8d 15 5d 14 10 00 	lea    rdx,[rip+0x10145d]        # 109fe0 <spi_table>
    8b83:	48 01 d0             	add    rax,rdx
    8b86:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8b8a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b8e:	ba 08 00 00 00       	mov    edx,0x8
    8b93:	be 00 00 00 00       	mov    esi,0x0
    8b98:	48 89 c7             	mov    rdi,rax
    8b9b:	e8 f0 98 ff ff       	call   2490 <memset@plt>
    8ba0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ba4:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    8bab:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8baf:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8bb3:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8bb7:	48 83 c2 29          	add    rdx,0x29
    8bbb:	48 89 c6             	mov    rsi,rax
    8bbe:	48 89 d7             	mov    rdi,rdx
    8bc1:	e8 aa 9b ff ff       	call   2770 <strcpy@plt>
    8bc6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8bca:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8bce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8bd2:	48 89 d6             	mov    rsi,rdx
    8bd5:	48 89 c7             	mov    rdi,rax
    8bd8:	e8 93 9b ff ff       	call   2770 <strcpy@plt>
    8bdd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8be1:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8be4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8be8:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    8beb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8bef:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8bf2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8bf6:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    8bf9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8bfd:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    8c04:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c08:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    8c0c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c10:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    8c14:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c18:	48 8d 50 60          	lea    rdx,[rax+0x60]
    8c1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c20:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    8c24:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8c28:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c2c:	48 89 d6             	mov    rsi,rdx
    8c2f:	48 89 c7             	mov    rdi,rax
    8c32:	e8 8e 04 00 00       	call   90c5 <increment_stats>
    8c37:	bf 00 00 00 00       	mov    edi,0x0
    8c3c:	e8 2f 9c ff ff       	call   2870 <time@plt>
    8c41:	48 89 c2             	mov    rdx,rax
    8c44:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c48:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    8c4f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c53:	c7 80 80 00 00 00 00 	mov    DWORD PTR [rax+0x80],0x0
    8c5a:	00 00 00 
    8c5d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c61:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8c67:	8d 50 01             	lea    edx,[rax+0x1]
    8c6a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c6e:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8c74:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c78:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8c7b:	89 c2                	mov    edx,eax
    8c7d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c81:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    8c87:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c8b:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8c8e:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8c92:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c96:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8c99:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c9d:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8ca1:	8b 05 99 83 00 00    	mov    eax,DWORD PTR [rip+0x8399]        # 11040 <total_conversations>
    8ca7:	41 89 f9             	mov    r9d,edi
    8caa:	49 89 c8             	mov    r8,rcx
    8cad:	89 d1                	mov    ecx,edx
    8caf:	48 89 f2             	mov    rdx,rsi
    8cb2:	89 c6                	mov    esi,eax
    8cb4:	48 8d 3d ad 4c 00 00 	lea    rdi,[rip+0x4cad]        # d968 <_IO_stdin_used+0x1968>
    8cbb:	b8 00 00 00 00       	mov    eax,0x0
    8cc0:	e8 bb 97 ff ff       	call   2480 <printf@plt>
    8cc5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cc9:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8ccc:	83 f8 7e             	cmp    eax,0x7e
    8ccf:	75 0e                	jne    8cdf <add_new_conversation+0x236>
    8cd1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cd5:	c7 80 8c 00 00 00 f3 	mov    DWORD PTR [rax+0x8c],0xf3
    8cdc:	00 00 00 
    8cdf:	90                   	nop
    8ce0:	c9                   	leave  
    8ce1:	c3                   	ret    

0000000000008ce2 <spi_ud_thw>:
    8ce2:	f3 0f 1e fa          	endbr64 
    8ce6:	55                   	push   rbp
    8ce7:	48 89 e5             	mov    rbp,rsp
    8cea:	48 83 ec 20          	sub    rsp,0x20
    8cee:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8cf2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cf6:	48 89 c7             	mov    rdi,rax
    8cf9:	e8 f7 fb ff ff       	call   88f5 <conversation_exists>
    8cfe:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8d01:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8d05:	0f 84 9d 00 00 00    	je     8da8 <spi_ud_thw+0xc6>
    8d0b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8d0e:	48 98                	cdqe   
    8d10:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8d17:	48 8d 15 c2 12 10 00 	lea    rdx,[rip+0x1012c2]        # 109fe0 <spi_table>
    8d1e:	48 01 d0             	add    rax,rdx
    8d21:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8d25:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d29:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8d2f:	8d 50 01             	lea    edx,[rax+0x1]
    8d32:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d36:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8d3c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d40:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d44:	48 89 d6             	mov    rsi,rdx
    8d47:	48 89 c7             	mov    rdi,rax
    8d4a:	e8 76 03 00 00       	call   90c5 <increment_stats>
    8d4f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d53:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8d56:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d5a:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8d5e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d62:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8d65:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d69:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8d6d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8d70:	41 89 f9             	mov    r9d,edi
    8d73:	49 89 f0             	mov    r8,rsi
    8d76:	89 c6                	mov    esi,eax
    8d78:	48 8d 3d 11 4c 00 00 	lea    rdi,[rip+0x4c11]        # d990 <_IO_stdin_used+0x1990>
    8d7f:	b8 00 00 00 00       	mov    eax,0x0
    8d84:	e8 f7 96 ff ff       	call   2480 <printf@plt>
    8d89:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d8d:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8d93:	3d f3 00 00 00       	cmp    eax,0xf3
    8d98:	75 0e                	jne    8da8 <spi_ud_thw+0xc6>
    8d9a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d9e:	c7 80 8c 00 00 00 f4 	mov    DWORD PTR [rax+0x8c],0xf4
    8da5:	00 00 00 
    8da8:	90                   	nop
    8da9:	c9                   	leave  
    8daa:	c3                   	ret    

0000000000008dab <update_table>:
    8dab:	f3 0f 1e fa          	endbr64 
    8daf:	55                   	push   rbp
    8db0:	48 89 e5             	mov    rbp,rsp
    8db3:	48 83 ec 30          	sub    rsp,0x30
    8db7:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8dbb:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8dc2:	00 00 
    8dc4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8dc8:	31 c0                	xor    eax,eax
    8dca:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8dce:	48 89 c7             	mov    rdi,rax
    8dd1:	e8 1f fb ff ff       	call   88f5 <conversation_exists>
    8dd6:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8dd9:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8ddd:	0f 84 52 01 00 00    	je     8f35 <update_table+0x18a>
    8de3:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8de6:	48 98                	cdqe   
    8de8:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8def:	48 8d 15 ea 11 10 00 	lea    rdx,[rip+0x1011ea]        # 109fe0 <spi_table>
    8df6:	48 01 d0             	add    rax,rdx
    8df9:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8dfd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e01:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8e07:	8d 50 01             	lea    edx,[rax+0x1]
    8e0a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e0e:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8e14:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8e18:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8e1c:	48 89 d6             	mov    rsi,rdx
    8e1f:	48 89 c7             	mov    rdi,rax
    8e22:	e8 9e 02 00 00       	call   90c5 <increment_stats>
    8e27:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e2b:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8e31:	3d f4 00 00 00       	cmp    eax,0xf4
    8e36:	75 4d                	jne    8e85 <update_table+0xda>
    8e38:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e3c:	c7 80 8c 00 00 00 f1 	mov    DWORD PTR [rax+0x8c],0xf1
    8e43:	00 00 00 
    8e46:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8e4a:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8e4d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8e51:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8e55:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8e59:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8e5c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8e60:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8e64:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8e67:	41 89 f9             	mov    r9d,edi
    8e6a:	49 89 f0             	mov    r8,rsi
    8e6d:	89 c6                	mov    esi,eax
    8e6f:	48 8d 3d 42 4b 00 00 	lea    rdi,[rip+0x4b42]        # d9b8 <_IO_stdin_used+0x19b8>
    8e76:	b8 00 00 00 00       	mov    eax,0x0
    8e7b:	e8 00 96 ff ff       	call   2480 <printf@plt>
    8e80:	e9 b0 00 00 00       	jmp    8f35 <update_table+0x18a>
    8e85:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8e89:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8e8f:	3d f6 00 00 00       	cmp    eax,0xf6
    8e94:	0f 85 9b 00 00 00    	jne    8f35 <update_table+0x18a>
    8e9a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8e9e:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8ea1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ea5:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8ea9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ead:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8eb0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8eb4:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8eb8:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8ebb:	41 89 f9             	mov    r9d,edi
    8ebe:	49 89 f0             	mov    r8,rsi
    8ec1:	89 c6                	mov    esi,eax
    8ec3:	48 8d 3d 1e 4b 00 00 	lea    rdi,[rip+0x4b1e]        # d9e8 <_IO_stdin_used+0x19e8>
    8eca:	b8 00 00 00 00       	mov    eax,0x0
    8ecf:	e8 ac 95 ff ff       	call   2480 <printf@plt>
    8ed4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8ed8:	c7 80 8c 00 00 00 fa 	mov    DWORD PTR [rax+0x8c],0xfa
    8edf:	00 00 00 
    8ee2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8ee6:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    8eed:	bf 00 00 00 00       	mov    edi,0x0
    8ef2:	e8 79 99 ff ff       	call   2870 <time@plt>
    8ef7:	48 89 c2             	mov    rdx,rax
    8efa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8efe:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    8f05:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8f09:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    8f0d:	48 89 d1             	mov    rcx,rdx
    8f10:	48 8d 15 b1 f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3b1]        # 82c8 <update_spi_db>
    8f17:	be 00 00 00 00       	mov    esi,0x0
    8f1c:	48 89 c7             	mov    rdi,rax
    8f1f:	e8 ac 96 ff ff       	call   25d0 <pthread_create@plt>
    8f24:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f28:	be 00 00 00 00       	mov    esi,0x0
    8f2d:	48 89 c7             	mov    rdi,rax
    8f30:	e8 3b 95 ff ff       	call   2470 <pthread_join@plt>
    8f35:	90                   	nop
    8f36:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f3a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8f41:	00 00 
    8f43:	74 05                	je     8f4a <update_table+0x19f>
    8f45:	e8 f6 97 ff ff       	call   2740 <__stack_chk_fail@plt>
    8f4a:	c9                   	leave  
    8f4b:	c3                   	ret    

0000000000008f4c <polite_end>:
    8f4c:	f3 0f 1e fa          	endbr64 
    8f50:	55                   	push   rbp
    8f51:	48 89 e5             	mov    rbp,rsp
    8f54:	48 83 ec 20          	sub    rsp,0x20
    8f58:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8f5c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8f60:	48 89 c7             	mov    rdi,rax
    8f63:	e8 8d f9 ff ff       	call   88f5 <conversation_exists>
    8f68:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8f6b:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8f6f:	0f 84 e7 00 00 00    	je     905c <polite_end+0x110>
    8f75:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8f78:	48 98                	cdqe   
    8f7a:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8f81:	48 8d 15 58 10 10 00 	lea    rdx,[rip+0x101058]        # 109fe0 <spi_table>
    8f88:	48 01 d0             	add    rax,rdx
    8f8b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f8f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8f93:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8f99:	8d 50 01             	lea    edx,[rax+0x1]
    8f9c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8fa0:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8fa6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8faa:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8fb0:	3d f5 00 00 00       	cmp    eax,0xf5
    8fb5:	75 4a                	jne    9001 <polite_end+0xb5>
    8fb7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8fbb:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8fbe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8fc2:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8fc6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8fca:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8fcd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8fd1:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8fd5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8fd8:	41 89 f9             	mov    r9d,edi
    8fdb:	49 89 f0             	mov    r8,rsi
    8fde:	89 c6                	mov    esi,eax
    8fe0:	48 8d 3d 39 4a 00 00 	lea    rdi,[rip+0x4a39]        # da20 <_IO_stdin_used+0x1a20>
    8fe7:	b8 00 00 00 00       	mov    eax,0x0
    8fec:	e8 8f 94 ff ff       	call   2480 <printf@plt>
    8ff1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ff5:	c7 80 8c 00 00 00 f6 	mov    DWORD PTR [rax+0x8c],0xf6
    8ffc:	00 00 00 
    8fff:	eb 48                	jmp    9049 <polite_end+0xfd>
    9001:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9005:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9008:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    900c:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    9010:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9014:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9017:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    901b:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    901f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9022:	41 89 f9             	mov    r9d,edi
    9025:	49 89 f0             	mov    r8,rsi
    9028:	89 c6                	mov    esi,eax
    902a:	48 8d 3d 27 4a 00 00 	lea    rdi,[rip+0x4a27]        # da58 <_IO_stdin_used+0x1a58>
    9031:	b8 00 00 00 00       	mov    eax,0x0
    9036:	e8 45 94 ff ff       	call   2480 <printf@plt>
    903b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    903f:	c7 80 8c 00 00 00 f5 	mov    DWORD PTR [rax+0x8c],0xf5
    9046:	00 00 00 
    9049:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    904d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9051:	48 89 d6             	mov    rsi,rdx
    9054:	48 89 c7             	mov    rdi,rax
    9057:	e8 69 00 00 00       	call   90c5 <increment_stats>
    905c:	90                   	nop
    905d:	c9                   	leave  
    905e:	c3                   	ret    

000000000000905f <handle_data_pkt>:
    905f:	f3 0f 1e fa          	endbr64 
    9063:	55                   	push   rbp
    9064:	48 89 e5             	mov    rbp,rsp
    9067:	48 83 ec 20          	sub    rsp,0x20
    906b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    906f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9073:	48 89 c7             	mov    rdi,rax
    9076:	e8 7a f8 ff ff       	call   88f5 <conversation_exists>
    907b:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    907e:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    9082:	74 3e                	je     90c2 <handle_data_pkt+0x63>
    9084:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9087:	48 98                	cdqe   
    9089:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    9090:	48 8d 15 49 0f 10 00 	lea    rdx,[rip+0x100f49]        # 109fe0 <spi_table>
    9097:	48 01 d0             	add    rax,rdx
    909a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    909e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90a2:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    90a5:	8d 50 01             	lea    edx,[rax+0x1]
    90a8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90ac:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    90af:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    90b3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90b7:	48 89 d6             	mov    rsi,rdx
    90ba:	48 89 c7             	mov    rdi,rax
    90bd:	e8 03 00 00 00       	call   90c5 <increment_stats>
    90c2:	90                   	nop
    90c3:	c9                   	leave  
    90c4:	c3                   	ret    

00000000000090c5 <increment_stats>:
    90c5:	f3 0f 1e fa          	endbr64 
    90c9:	55                   	push   rbp
    90ca:	48 89 e5             	mov    rbp,rsp
    90cd:	48 83 ec 10          	sub    rsp,0x10
    90d1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    90d5:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    90d9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90dd:	48 8d 50 29          	lea    rdx,[rax+0x29]
    90e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90e5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    90e9:	48 89 d6             	mov    rsi,rdx
    90ec:	48 89 c7             	mov    rdi,rax
    90ef:	e8 5c 96 ff ff       	call   2750 <strcmp@plt>
    90f4:	85 c0                	test   eax,eax
    90f6:	75 13                	jne    910b <increment_stats+0x46>
    90f8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    90fc:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    90ff:	8d 50 01             	lea    edx,[rax+0x1]
    9102:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9106:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    9109:	eb 2c                	jmp    9137 <increment_stats+0x72>
    910b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    910f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9113:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    9117:	48 89 d6             	mov    rsi,rdx
    911a:	48 89 c7             	mov    rdi,rax
    911d:	e8 2e 96 ff ff       	call   2750 <strcmp@plt>
    9122:	85 c0                	test   eax,eax
    9124:	75 11                	jne    9137 <increment_stats+0x72>
    9126:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    912a:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    912d:	8d 50 01             	lea    edx,[rax+0x1]
    9130:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9134:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    9137:	90                   	nop
    9138:	c9                   	leave  
    9139:	c3                   	ret    

000000000000913a <lprintf>:
    913a:	f3 0f 1e fa          	endbr64 
    913e:	55                   	push   rbp
    913f:	48 89 e5             	mov    rbp,rsp
    9142:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    9149:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    9150:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    9157:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    915e:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    9165:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    916c:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    9173:	84 c0                	test   al,al
    9175:	74 20                	je     9197 <lprintf+0x5d>
    9177:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    917b:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    917f:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    9183:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    9187:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    918b:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    918f:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    9193:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    9197:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    919e:	00 00 
    91a0:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    91a7:	31 c0                	xor    eax,eax
    91a9:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    91b0:	00 00 00 
    91b3:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    91ba:	00 00 00 
    91bd:	48 8d 45 10          	lea    rax,[rbp+0x10]
    91c1:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    91c8:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    91cf:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    91d6:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    91dd:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    91e4:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    91eb:	48 89 ce             	mov    rsi,rcx
    91ee:	48 89 c7             	mov    rdi,rax
    91f1:	b8 00 00 00 00       	mov    eax,0x0
    91f6:	e8 25 96 ff ff       	call   2820 <fprintf@plt>
    91fb:	90                   	nop
    91fc:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    9203:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    920a:	00 00 
    920c:	74 05                	je     9213 <lprintf+0xd9>
    920e:	e8 2d 95 ff ff       	call   2740 <__stack_chk_fail@plt>
    9213:	c9                   	leave  
    9214:	c3                   	ret    

0000000000009215 <lfprintf>:
    9215:	f3 0f 1e fa          	endbr64 
    9219:	55                   	push   rbp
    921a:	48 89 e5             	mov    rbp,rsp
    921d:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    9224:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    922b:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    9232:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    9239:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    9240:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    9247:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    924e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9255:	00 00 
    9257:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    925b:	31 c0                	xor    eax,eax
    925d:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    9264:	48 8d 35 25 48 00 00 	lea    rsi,[rip+0x4825]        # da90 <_IO_stdin_used+0x1a90>
    926b:	48 89 c7             	mov    rdi,rax
    926e:	e8 fd 92 ff ff       	call   2570 <fopen@plt>
    9273:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    927a:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    9281:	00 
    9282:	75 20                	jne    92a4 <lfprintf+0x8f>
    9284:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    928b:	48 89 c6             	mov    rsi,rax
    928e:	48 8d 3d 03 48 00 00 	lea    rdi,[rip+0x4803]        # da98 <_IO_stdin_used+0x1a98>
    9295:	b8 00 00 00 00       	mov    eax,0x0
    929a:	e8 e1 91 ff ff       	call   2480 <printf@plt>
    929f:	e9 cd 00 00 00       	jmp    9371 <lfprintf+0x15c>
    92a4:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    92ab:	48 89 c7             	mov    rdi,rax
    92ae:	e8 60 a1 ff ff       	call   3413 <cb_get_formatted_time>
    92b3:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    92ba:	75 3f                	jne    92fb <lfprintf+0xe6>
    92bc:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    92c3:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    92ca:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    92d1:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    92d8:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    92df:	49 89 f9             	mov    r9,rdi
    92e2:	49 89 f0             	mov    r8,rsi
    92e5:	48 8d 35 da 47 00 00 	lea    rsi,[rip+0x47da]        # dac6 <_IO_stdin_used+0x1ac6>
    92ec:	48 89 c7             	mov    rdi,rax
    92ef:	b8 00 00 00 00       	mov    eax,0x0
    92f4:	e8 27 93 ff ff       	call   2620 <sprintf@plt>
    92f9:	eb 4e                	jmp    9349 <lfprintf+0x134>
    92fb:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    9302:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    9309:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    9310:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    9317:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    931e:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    9324:	56                   	push   rsi
    9325:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    932b:	45 89 c1             	mov    r9d,r8d
    932e:	49 89 f8             	mov    r8,rdi
    9331:	48 8d 35 9e 47 00 00 	lea    rsi,[rip+0x479e]        # dad6 <_IO_stdin_used+0x1ad6>
    9338:	48 89 c7             	mov    rdi,rax
    933b:	b8 00 00 00 00       	mov    eax,0x0
    9340:	e8 db 92 ff ff       	call   2620 <sprintf@plt>
    9345:	48 83 c4 10          	add    rsp,0x10
    9349:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    9350:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9357:	48 89 d6             	mov    rsi,rdx
    935a:	48 89 c7             	mov    rdi,rax
    935d:	e8 2e 93 ff ff       	call   2690 <fputs@plt>
    9362:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    9369:	48 89 c7             	mov    rdi,rax
    936c:	e8 3f 94 ff ff       	call   27b0 <fclose@plt>
    9371:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9375:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    937c:	00 00 
    937e:	74 05                	je     9385 <lfprintf+0x170>
    9380:	e8 bb 93 ff ff       	call   2740 <__stack_chk_fail@plt>
    9385:	c9                   	leave  
    9386:	c3                   	ret    

0000000000009387 <saprintf>:
    9387:	f3 0f 1e fa          	endbr64 
    938b:	55                   	push   rbp
    938c:	48 89 e5             	mov    rbp,rsp
    938f:	48 83 ec 20          	sub    rsp,0x20
    9393:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9397:	48 8b 05 92 7c 00 00 	mov    rax,QWORD PTR [rip+0x7c92]        # 11030 <def_log_file>
    939e:	48 8d 35 eb 46 00 00 	lea    rsi,[rip+0x46eb]        # da90 <_IO_stdin_used+0x1a90>
    93a5:	48 89 c7             	mov    rdi,rax
    93a8:	e8 c3 91 ff ff       	call   2570 <fopen@plt>
    93ad:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    93b1:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    93b6:	75 1a                	jne    93d2 <saprintf+0x4b>
    93b8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    93bc:	48 89 c6             	mov    rsi,rax
    93bf:	48 8d 3d d2 46 00 00 	lea    rdi,[rip+0x46d2]        # da98 <_IO_stdin_used+0x1a98>
    93c6:	b8 00 00 00 00       	mov    eax,0x0
    93cb:	e8 b0 90 ff ff       	call   2480 <printf@plt>
    93d0:	eb 1f                	jmp    93f1 <saprintf+0x6a>
    93d2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    93d6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    93da:	48 89 d6             	mov    rsi,rdx
    93dd:	48 89 c7             	mov    rdi,rax
    93e0:	e8 ab 92 ff ff       	call   2690 <fputs@plt>
    93e5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    93e9:	48 89 c7             	mov    rdi,rax
    93ec:	e8 bf 93 ff ff       	call   27b0 <fclose@plt>
    93f1:	c9                   	leave  
    93f2:	c3                   	ret    

00000000000093f3 <substr>:
    93f3:	f3 0f 1e fa          	endbr64 
    93f7:	55                   	push   rbp
    93f8:	48 89 e5             	mov    rbp,rsp
    93fb:	48 83 ec 20          	sub    rsp,0x20
    93ff:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9403:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    9406:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    9409:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    940c:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    940f:	83 c0 02             	add    eax,0x2
    9412:	48 98                	cdqe   
    9414:	48 89 c7             	mov    rdi,rax
    9417:	e8 44 91 ff ff       	call   2560 <malloc@plt>
    941c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9420:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9423:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9426:	eb 27                	jmp    944f <substr+0x5c>
    9428:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    942b:	48 63 d0             	movsxd rdx,eax
    942e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9432:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    9436:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9439:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    943c:	48 63 d0             	movsxd rdx,eax
    943f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9443:	48 01 c2             	add    rdx,rax
    9446:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    9449:	88 02                	mov    BYTE PTR [rdx],al
    944b:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    944f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9452:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    9455:	7e d1                	jle    9428 <substr+0x35>
    9457:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    945a:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    945d:	48 98                	cdqe   
    945f:	48 8d 50 01          	lea    rdx,[rax+0x1]
    9463:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9467:	48 01 d0             	add    rax,rdx
    946a:	c6 00 00             	mov    BYTE PTR [rax],0x0
    946d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9471:	c9                   	leave  
    9472:	c3                   	ret    

0000000000009473 <delimit>:
    9473:	f3 0f 1e fa          	endbr64 
    9477:	55                   	push   rbp
    9478:	48 89 e5             	mov    rbp,rsp
    947b:	89 f8                	mov    eax,edi
    947d:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    9480:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    9484:	0f 94 c0             	sete   al
    9487:	5d                   	pop    rbp
    9488:	c3                   	ret    

0000000000009489 <isdigit>:
    9489:	f3 0f 1e fa          	endbr64 
    948d:	55                   	push   rbp
    948e:	48 89 e5             	mov    rbp,rsp
    9491:	53                   	push   rbx
    9492:	48 83 ec 28          	sub    rsp,0x28
    9496:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    949a:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    94a1:	e9 f7 00 00 00       	jmp    959d <isdigit+0x114>
    94a6:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    94a9:	48 63 d0             	movsxd rdx,eax
    94ac:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    94b0:	48 01 d0             	add    rax,rdx
    94b3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    94b6:	3c 30                	cmp    al,0x30
    94b8:	0f 84 db 00 00 00    	je     9599 <isdigit+0x110>
    94be:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    94c1:	48 63 d0             	movsxd rdx,eax
    94c4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    94c8:	48 01 d0             	add    rax,rdx
    94cb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    94ce:	3c 31                	cmp    al,0x31
    94d0:	0f 84 c3 00 00 00    	je     9599 <isdigit+0x110>
    94d6:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    94d9:	48 63 d0             	movsxd rdx,eax
    94dc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    94e0:	48 01 d0             	add    rax,rdx
    94e3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    94e6:	3c 32                	cmp    al,0x32
    94e8:	0f 84 ab 00 00 00    	je     9599 <isdigit+0x110>
    94ee:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    94f1:	48 63 d0             	movsxd rdx,eax
    94f4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    94f8:	48 01 d0             	add    rax,rdx
    94fb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    94fe:	3c 33                	cmp    al,0x33
    9500:	0f 84 93 00 00 00    	je     9599 <isdigit+0x110>
    9506:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9509:	48 63 d0             	movsxd rdx,eax
    950c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9510:	48 01 d0             	add    rax,rdx
    9513:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9516:	3c 34                	cmp    al,0x34
    9518:	74 7f                	je     9599 <isdigit+0x110>
    951a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    951d:	48 63 d0             	movsxd rdx,eax
    9520:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9524:	48 01 d0             	add    rax,rdx
    9527:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    952a:	3c 34                	cmp    al,0x34
    952c:	74 6b                	je     9599 <isdigit+0x110>
    952e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9531:	48 63 d0             	movsxd rdx,eax
    9534:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9538:	48 01 d0             	add    rax,rdx
    953b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    953e:	3c 35                	cmp    al,0x35
    9540:	74 57                	je     9599 <isdigit+0x110>
    9542:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9545:	48 63 d0             	movsxd rdx,eax
    9548:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    954c:	48 01 d0             	add    rax,rdx
    954f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9552:	3c 36                	cmp    al,0x36
    9554:	74 43                	je     9599 <isdigit+0x110>
    9556:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9559:	48 63 d0             	movsxd rdx,eax
    955c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9560:	48 01 d0             	add    rax,rdx
    9563:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9566:	3c 37                	cmp    al,0x37
    9568:	74 2f                	je     9599 <isdigit+0x110>
    956a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    956d:	48 63 d0             	movsxd rdx,eax
    9570:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9574:	48 01 d0             	add    rax,rdx
    9577:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    957a:	3c 38                	cmp    al,0x38
    957c:	74 1b                	je     9599 <isdigit+0x110>
    957e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9581:	48 63 d0             	movsxd rdx,eax
    9584:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9588:	48 01 d0             	add    rax,rdx
    958b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    958e:	3c 39                	cmp    al,0x39
    9590:	74 07                	je     9599 <isdigit+0x110>
    9592:	b8 00 00 00 00       	mov    eax,0x0
    9597:	eb 24                	jmp    95bd <isdigit+0x134>
    9599:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    959d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    95a0:	48 63 d8             	movsxd rbx,eax
    95a3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    95a7:	48 89 c7             	mov    rdi,rax
    95aa:	e8 51 90 ff ff       	call   2600 <strlen@plt>
    95af:	48 39 c3             	cmp    rbx,rax
    95b2:	0f 82 ee fe ff ff    	jb     94a6 <isdigit+0x1d>
    95b8:	b8 01 00 00 00       	mov    eax,0x1
    95bd:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    95c1:	c9                   	leave  
    95c2:	c3                   	ret    

00000000000095c3 <assign_port_number>:
    95c3:	f3 0f 1e fa          	endbr64 
    95c7:	55                   	push   rbp
    95c8:	48 89 e5             	mov    rbp,rsp
    95cb:	48 83 ec 10          	sub    rsp,0x10
    95cf:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    95d3:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    95d7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95db:	48 89 c7             	mov    rdi,rax
    95de:	e8 a6 fe ff ff       	call   9489 <isdigit>
    95e3:	84 c0                	test   al,al
    95e5:	74 18                	je     95ff <assign_port_number+0x3c>
    95e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95eb:	48 89 c7             	mov    rdi,rax
    95ee:	e8 cd 90 ff ff       	call   26c0 <atoi@plt>
    95f3:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    95f7:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    95fd:	eb 25                	jmp    9624 <assign_port_number+0x61>
    95ff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9603:	48 8d 35 e6 44 00 00 	lea    rsi,[rip+0x44e6]        # daf0 <_IO_stdin_used+0x1af0>
    960a:	48 89 c7             	mov    rdi,rax
    960d:	e8 3e 91 ff ff       	call   2750 <strcmp@plt>
    9612:	85 c0                	test   eax,eax
    9614:	75 0e                	jne    9624 <assign_port_number+0x61>
    9616:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    961a:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9621:	ff ff ff 
    9624:	90                   	nop
    9625:	c9                   	leave  
    9626:	c3                   	ret    

0000000000009627 <check_port_number>:
    9627:	f3 0f 1e fa          	endbr64 
    962b:	55                   	push   rbp
    962c:	48 89 e5             	mov    rbp,rsp
    962f:	48 83 ec 10          	sub    rsp,0x10
    9633:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9637:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    963b:	48 89 c7             	mov    rdi,rax
    963e:	e8 46 fe ff ff       	call   9489 <isdigit>
    9643:	84 c0                	test   al,al
    9645:	74 0e                	je     9655 <check_port_number+0x2e>
    9647:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    964b:	48 89 c7             	mov    rdi,rax
    964e:	e8 6d 90 ff ff       	call   26c0 <atoi@plt>
    9653:	eb 23                	jmp    9678 <check_port_number+0x51>
    9655:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9659:	48 8d 35 90 44 00 00 	lea    rsi,[rip+0x4490]        # daf0 <_IO_stdin_used+0x1af0>
    9660:	48 89 c7             	mov    rdi,rax
    9663:	e8 e8 90 ff ff       	call   2750 <strcmp@plt>
    9668:	85 c0                	test   eax,eax
    966a:	75 07                	jne    9673 <check_port_number+0x4c>
    966c:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9671:	eb 05                	jmp    9678 <check_port_number+0x51>
    9673:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9678:	c9                   	leave  
    9679:	c3                   	ret    

000000000000967a <assign_protocol>:
    967a:	f3 0f 1e fa          	endbr64 
    967e:	55                   	push   rbp
    967f:	48 89 e5             	mov    rbp,rsp
    9682:	48 83 ec 10          	sub    rsp,0x10
    9686:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    968a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    968e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9692:	48 8d 35 5b 44 00 00 	lea    rsi,[rip+0x445b]        # daf4 <_IO_stdin_used+0x1af4>
    9699:	48 89 c7             	mov    rdi,rax
    969c:	e8 af 90 ff ff       	call   2750 <strcmp@plt>
    96a1:	85 c0                	test   eax,eax
    96a3:	75 10                	jne    96b5 <assign_protocol+0x3b>
    96a5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    96a9:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    96b0:	ff ff ff 
    96b3:	eb 73                	jmp    9728 <assign_protocol+0xae>
    96b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    96b9:	48 8d 35 38 44 00 00 	lea    rsi,[rip+0x4438]        # daf8 <_IO_stdin_used+0x1af8>
    96c0:	48 89 c7             	mov    rdi,rax
    96c3:	e8 88 90 ff ff       	call   2750 <strcmp@plt>
    96c8:	85 c0                	test   eax,eax
    96ca:	75 10                	jne    96dc <assign_protocol+0x62>
    96cc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    96d0:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    96d7:	00 00 00 
    96da:	eb 4c                	jmp    9728 <assign_protocol+0xae>
    96dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    96e0:	48 8d 35 16 44 00 00 	lea    rsi,[rip+0x4416]        # dafd <_IO_stdin_used+0x1afd>
    96e7:	48 89 c7             	mov    rdi,rax
    96ea:	e8 61 90 ff ff       	call   2750 <strcmp@plt>
    96ef:	85 c0                	test   eax,eax
    96f1:	75 10                	jne    9703 <assign_protocol+0x89>
    96f3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    96f7:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    96fe:	00 00 00 
    9701:	eb 25                	jmp    9728 <assign_protocol+0xae>
    9703:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9707:	48 8d 35 f3 43 00 00 	lea    rsi,[rip+0x43f3]        # db01 <_IO_stdin_used+0x1b01>
    970e:	48 89 c7             	mov    rdi,rax
    9711:	e8 3a 90 ff ff       	call   2750 <strcmp@plt>
    9716:	85 c0                	test   eax,eax
    9718:	75 0e                	jne    9728 <assign_protocol+0xae>
    971a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    971e:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    9725:	00 00 00 
    9728:	90                   	nop
    9729:	c9                   	leave  
    972a:	c3                   	ret    

000000000000972b <get_ruletype>:
    972b:	f3 0f 1e fa          	endbr64 
    972f:	55                   	push   rbp
    9730:	48 89 e5             	mov    rbp,rsp
    9733:	48 83 ec 10          	sub    rsp,0x10
    9737:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    973b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    973f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9743:	ba 09 00 00 00       	mov    edx,0x9
    9748:	48 8d 35 b6 43 00 00 	lea    rsi,[rip+0x43b6]        # db05 <_IO_stdin_used+0x1b05>
    974f:	48 89 c7             	mov    rdi,rax
    9752:	e8 f9 8d ff ff       	call   2550 <strncmp@plt>
    9757:	85 c0                	test   eax,eax
    9759:	75 17                	jne    9772 <get_ruletype+0x47>
    975b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    975f:	48 8d 15 a4 be ff ff 	lea    rdx,[rip+0xffffffffffffbea4]        # 560a <str_match_parser>
    9766:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    976d:	e9 82 00 00 00       	jmp    97f4 <get_ruletype+0xc9>
    9772:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9776:	ba 04 00 00 00       	mov    edx,0x4
    977b:	48 8d 35 8d 43 00 00 	lea    rsi,[rip+0x438d]        # db0f <_IO_stdin_used+0x1b0f>
    9782:	48 89 c7             	mov    rdi,rax
    9785:	e8 c6 8d ff ff       	call   2550 <strncmp@plt>
    978a:	85 c0                	test   eax,eax
    978c:	75 14                	jne    97a2 <get_ruletype+0x77>
    978e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9792:	48 8d 15 14 c1 ff ff 	lea    rdx,[rip+0xffffffffffffc114]        # 58ad <none>
    9799:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    97a0:	eb 52                	jmp    97f4 <get_ruletype+0xc9>
    97a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97a6:	ba 04 00 00 00       	mov    edx,0x4
    97ab:	48 8d 35 62 43 00 00 	lea    rsi,[rip+0x4362]        # db14 <_IO_stdin_used+0x1b14>
    97b2:	48 89 c7             	mov    rdi,rax
    97b5:	e8 96 8d ff ff       	call   2550 <strncmp@plt>
    97ba:	85 c0                	test   eax,eax
    97bc:	75 14                	jne    97d2 <get_ruletype+0xa7>
    97be:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    97c2:	48 8d 15 fb c0 ff ff 	lea    rdx,[rip+0xffffffffffffc0fb]        # 58c4 <pcre_match>
    97c9:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    97d0:	eb 22                	jmp    97f4 <get_ruletype+0xc9>
    97d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97d6:	48 89 c6             	mov    rsi,rax
    97d9:	48 8d 3d 39 43 00 00 	lea    rdi,[rip+0x4339]        # db19 <_IO_stdin_used+0x1b19>
    97e0:	b8 00 00 00 00       	mov    eax,0x0
    97e5:	e8 96 8c ff ff       	call   2480 <printf@plt>
    97ea:	bf 01 00 00 00       	mov    edi,0x1
    97ef:	e8 0c 8d ff ff       	call   2500 <exit@plt>
    97f4:	c9                   	leave  
    97f5:	c3                   	ret    

00000000000097f6 <numeric_check>:
    97f6:	f3 0f 1e fa          	endbr64 
    97fa:	55                   	push   rbp
    97fb:	48 89 e5             	mov    rbp,rsp
    97fe:	48 83 ec 30          	sub    rsp,0x30
    9802:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9806:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    9809:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    980d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9811:	48 89 c7             	mov    rdi,rax
    9814:	e8 70 fc ff ff       	call   9489 <isdigit>
    9819:	84 c0                	test   al,al
    981b:	74 27                	je     9844 <numeric_check+0x4e>
    981d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9821:	48 89 c7             	mov    rdi,rax
    9824:	e8 97 8e ff ff       	call   26c0 <atoi@plt>
    9829:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    982c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    982f:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    9832:	77 10                	ja     9844 <numeric_check+0x4e>
    9834:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9837:	48 98                	cdqe   
    9839:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    983d:	72 05                	jb     9844 <numeric_check+0x4e>
    983f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9842:	eb 05                	jmp    9849 <numeric_check+0x53>
    9844:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9849:	c9                   	leave  
    984a:	c3                   	ret    

000000000000984b <sc_strip>:
    984b:	f3 0f 1e fa          	endbr64 
    984f:	55                   	push   rbp
    9850:	48 89 e5             	mov    rbp,rsp
    9853:	48 83 ec 10          	sub    rsp,0x10
    9857:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    985b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    985f:	48 8d 35 ca 42 00 00 	lea    rsi,[rip+0x42ca]        # db30 <_IO_stdin_used+0x1b30>
    9866:	48 89 c7             	mov    rdi,rax
    9869:	e8 62 8f ff ff       	call   27d0 <strcspn@plt>
    986e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9872:	48 01 d0             	add    rax,rdx
    9875:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9878:	90                   	nop
    9879:	c9                   	leave  
    987a:	c3                   	ret    

000000000000987b <void_rule>:
    987b:	f3 0f 1e fa          	endbr64 
    987f:	55                   	push   rbp
    9880:	48 89 e5             	mov    rbp,rsp
    9883:	48 83 ec 10          	sub    rsp,0x10
    9887:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    988b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    988f:	48 05 6e 03 00 00    	add    rax,0x36e
    9895:	ba 0a 00 00 00       	mov    edx,0xa
    989a:	be 00 00 00 00       	mov    esi,0x0
    989f:	48 89 c7             	mov    rdi,rax
    98a2:	e8 e9 8b ff ff       	call   2490 <memset@plt>
    98a7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98ab:	48 05 68 03 00 00    	add    rax,0x368
    98b1:	ba 06 00 00 00       	mov    edx,0x6
    98b6:	be 00 00 00 00       	mov    esi,0x0
    98bb:	48 89 c7             	mov    rdi,rax
    98be:	e8 cd 8b ff ff       	call   2490 <memset@plt>
    98c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98c7:	48 05 50 03 00 00    	add    rax,0x350
    98cd:	ba 18 00 00 00       	mov    edx,0x18
    98d2:	be 00 00 00 00       	mov    esi,0x0
    98d7:	48 89 c7             	mov    rdi,rax
    98da:	e8 b1 8b ff ff       	call   2490 <memset@plt>
    98df:	90                   	nop
    98e0:	c9                   	leave  
    98e1:	c3                   	ret    

00000000000098e2 <line_parser>:
    98e2:	f3 0f 1e fa          	endbr64 
    98e6:	55                   	push   rbp
    98e7:	48 89 e5             	mov    rbp,rsp
    98ea:	53                   	push   rbx
    98eb:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    98f2:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    98f9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9900:	00 00 
    9902:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    9906:	31 c0                	xor    eax,eax
    9908:	8b 05 06 77 00 00    	mov    eax,DWORD PTR [rip+0x7706]        # 11014 <num_rules>
    990e:	83 c0 01             	add    eax,0x1
    9911:	89 05 fd 76 00 00    	mov    DWORD PTR [rip+0x76fd],eax        # 11014 <num_rules>
    9917:	8b 05 f7 76 00 00    	mov    eax,DWORD PTR [rip+0x76f7]        # 11014 <num_rules>
    991d:	48 98                	cdqe   
    991f:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    9926:	48 8d 15 b3 79 00 00 	lea    rdx,[rip+0x79b3]        # 112e0 <rules>
    992d:	48 01 d0             	add    rax,rdx
    9930:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    9934:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9938:	ba 08 00 00 00       	mov    edx,0x8
    993d:	be 00 00 00 00       	mov    esi,0x0
    9942:	48 89 c7             	mov    rdi,rax
    9945:	e8 46 8b ff ff       	call   2490 <memset@plt>
    994a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    994e:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9955:	ff ff ff 
    9958:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    995c:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9963:	ff ff ff 
    9966:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    996a:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    9971:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9975:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    997c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9980:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    9987:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    998b:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    9992:	00 00 00 
    9995:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9999:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    999f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99a3:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    99aa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    99ae:	48 89 c7             	mov    rdi,rax
    99b1:	e8 c5 fe ff ff       	call   987b <void_rule>
    99b6:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    99bd:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    99c4:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    99cb:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    99d2:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    99d9:	48 89 c7             	mov    rdi,rax
    99dc:	e8 1f 8c ff ff       	call   2600 <strlen@plt>
    99e1:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    99e4:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    99eb:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    99f2:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    99f9:	e9 c4 0d 00 00       	jmp    a7c2 <line_parser+0xee0>
    99fe:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9a01:	48 63 d0             	movsxd rdx,eax
    9a04:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9a0b:	48 01 d0             	add    rax,rdx
    9a0e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9a11:	0f be c0             	movsx  eax,al
    9a14:	89 c7                	mov    edi,eax
    9a16:	e8 58 fa ff ff       	call   9473 <delimit>
    9a1b:	83 f0 01             	xor    eax,0x1
    9a1e:	84 c0                	test   al,al
    9a20:	74 04                	je     9a26 <line_parser+0x144>
    9a22:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9a26:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9a29:	48 63 d0             	movsxd rdx,eax
    9a2c:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9a33:	48 01 d0             	add    rax,rdx
    9a36:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9a39:	0f be c0             	movsx  eax,al
    9a3c:	89 c7                	mov    edi,eax
    9a3e:	e8 30 fa ff ff       	call   9473 <delimit>
    9a43:	84 c0                	test   al,al
    9a45:	74 3f                	je     9a86 <line_parser+0x1a4>
    9a47:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9a4a:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    9a4d:	75 37                	jne    9a86 <line_parser+0x1a4>
    9a4f:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9a52:	48 63 d0             	movsxd rdx,eax
    9a55:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9a5c:	48 01 d0             	add    rax,rdx
    9a5f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9a62:	3c 3a                	cmp    al,0x3a
    9a64:	75 11                	jne    9a77 <line_parser+0x195>
    9a66:	48 8d 3d c5 40 00 00 	lea    rdi,[rip+0x40c5]        # db32 <_IO_stdin_used+0x1b32>
    9a6d:	b8 00 00 00 00       	mov    eax,0x0
    9a72:	e8 09 8a ff ff       	call   2480 <printf@plt>
    9a77:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9a7b:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9a7e:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    9a81:	e9 3c 0d 00 00       	jmp    a7c2 <line_parser+0xee0>
    9a86:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9a89:	48 63 d0             	movsxd rdx,eax
    9a8c:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9a93:	48 01 d0             	add    rax,rdx
    9a96:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9a99:	0f be c0             	movsx  eax,al
    9a9c:	89 c7                	mov    edi,eax
    9a9e:	e8 d0 f9 ff ff       	call   9473 <delimit>
    9aa3:	84 c0                	test   al,al
    9aa5:	74 08                	je     9aaf <line_parser+0x1cd>
    9aa7:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9aaa:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9aad:	75 18                	jne    9ac7 <line_parser+0x1e5>
    9aaf:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9ab2:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    9ab5:	0f 85 07 0d 00 00    	jne    a7c2 <line_parser+0xee0>
    9abb:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9abe:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9ac1:	0f 84 fb 0c 00 00    	je     a7c2 <line_parser+0xee0>
    9ac7:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9aca:	8d 50 ff             	lea    edx,[rax-0x1]
    9acd:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    9ad0:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9ad7:	89 ce                	mov    esi,ecx
    9ad9:	48 89 c7             	mov    rdi,rax
    9adc:	e8 12 f9 ff ff       	call   93f3 <substr>
    9ae1:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9ae5:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    9aec:	83 f0 01             	xor    eax,0x1
    9aef:	84 c0                	test   al,al
    9af1:	0f 84 ea 02 00 00    	je     9de1 <line_parser+0x4ff>
    9af7:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9afb:	48 8d 35 3f 40 00 00 	lea    rsi,[rip+0x403f]        # db41 <_IO_stdin_used+0x1b41>
    9b02:	48 89 c7             	mov    rdi,rax
    9b05:	e8 46 8c ff ff       	call   2750 <strcmp@plt>
    9b0a:	85 c0                	test   eax,eax
    9b0c:	75 33                	jne    9b41 <line_parser+0x25f>
    9b0e:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9b15:	83 f0 01             	xor    eax,0x1
    9b18:	84 c0                	test   al,al
    9b1a:	74 25                	je     9b41 <line_parser+0x25f>
    9b1c:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9b23:	83 f0 01             	xor    eax,0x1
    9b26:	84 c0                	test   al,al
    9b28:	74 17                	je     9b41 <line_parser+0x25f>
    9b2a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b2e:	48 8d 15 ab b8 ff ff 	lea    rdx,[rip+0xffffffffffffb8ab]        # 53e0 <stdout_alert>
    9b35:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    9b3c:	e9 5d 0c 00 00       	jmp    a79e <line_parser+0xebc>
    9b41:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9b45:	48 8d 35 ac 3f 00 00 	lea    rsi,[rip+0x3fac]        # daf8 <_IO_stdin_used+0x1af8>
    9b4c:	48 89 c7             	mov    rdi,rax
    9b4f:	e8 fc 8b ff ff       	call   2750 <strcmp@plt>
    9b54:	85 c0                	test   eax,eax
    9b56:	74 45                	je     9b9d <line_parser+0x2bb>
    9b58:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9b5c:	48 8d 35 91 3f 00 00 	lea    rsi,[rip+0x3f91]        # daf4 <_IO_stdin_used+0x1af4>
    9b63:	48 89 c7             	mov    rdi,rax
    9b66:	e8 e5 8b ff ff       	call   2750 <strcmp@plt>
    9b6b:	85 c0                	test   eax,eax
    9b6d:	74 2e                	je     9b9d <line_parser+0x2bb>
    9b6f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9b73:	48 8d 35 83 3f 00 00 	lea    rsi,[rip+0x3f83]        # dafd <_IO_stdin_used+0x1afd>
    9b7a:	48 89 c7             	mov    rdi,rax
    9b7d:	e8 ce 8b ff ff       	call   2750 <strcmp@plt>
    9b82:	85 c0                	test   eax,eax
    9b84:	74 17                	je     9b9d <line_parser+0x2bb>
    9b86:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9b8a:	48 8d 35 70 3f 00 00 	lea    rsi,[rip+0x3f70]        # db01 <_IO_stdin_used+0x1b01>
    9b91:	48 89 c7             	mov    rdi,rax
    9b94:	e8 b7 8b ff ff       	call   2750 <strcmp@plt>
    9b99:	85 c0                	test   eax,eax
    9b9b:	75 34                	jne    9bd1 <line_parser+0x2ef>
    9b9d:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9ba4:	83 f0 01             	xor    eax,0x1
    9ba7:	84 c0                	test   al,al
    9ba9:	74 26                	je     9bd1 <line_parser+0x2ef>
    9bab:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9bb2:	83 f0 01             	xor    eax,0x1
    9bb5:	84 c0                	test   al,al
    9bb7:	74 18                	je     9bd1 <line_parser+0x2ef>
    9bb9:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9bbd:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9bc1:	48 89 d6             	mov    rsi,rdx
    9bc4:	48 89 c7             	mov    rdi,rax
    9bc7:	e8 ae fa ff ff       	call   967a <assign_protocol>
    9bcc:	e9 cd 0b 00 00       	jmp    a79e <line_parser+0xebc>
    9bd1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9bd5:	48 89 c7             	mov    rdi,rax
    9bd8:	e8 ac f8 ff ff       	call   9489 <isdigit>
    9bdd:	84 c0                	test   al,al
    9bdf:	75 17                	jne    9bf8 <line_parser+0x316>
    9be1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9be5:	48 8d 35 04 3f 00 00 	lea    rsi,[rip+0x3f04]        # daf0 <_IO_stdin_used+0x1af0>
    9bec:	48 89 c7             	mov    rdi,rax
    9bef:	e8 5c 8b ff ff       	call   2750 <strcmp@plt>
    9bf4:	85 c0                	test   eax,eax
    9bf6:	75 34                	jne    9c2c <line_parser+0x34a>
    9bf8:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9bff:	83 f0 01             	xor    eax,0x1
    9c02:	84 c0                	test   al,al
    9c04:	74 26                	je     9c2c <line_parser+0x34a>
    9c06:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9c0d:	83 f0 01             	xor    eax,0x1
    9c10:	84 c0                	test   al,al
    9c12:	74 18                	je     9c2c <line_parser+0x34a>
    9c14:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9c18:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9c1c:	48 89 d6             	mov    rsi,rdx
    9c1f:	48 89 c7             	mov    rdi,rax
    9c22:	e8 9c f9 ff ff       	call   95c3 <assign_port_number>
    9c27:	e9 72 0b 00 00       	jmp    a79e <line_parser+0xebc>
    9c2c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9c30:	ba 08 00 00 00       	mov    edx,0x8
    9c35:	48 8d 35 0b 3f 00 00 	lea    rsi,[rip+0x3f0b]        # db47 <_IO_stdin_used+0x1b47>
    9c3c:	48 89 c7             	mov    rdi,rax
    9c3f:	e8 0c 89 ff ff       	call   2550 <strncmp@plt>
    9c44:	85 c0                	test   eax,eax
    9c46:	75 75                	jne    9cbd <line_parser+0x3db>
    9c48:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9c4c:	48 8d 50 09          	lea    rdx,[rax+0x9]
    9c50:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9c54:	48 89 d6             	mov    rsi,rdx
    9c57:	48 89 c7             	mov    rdi,rax
    9c5a:	e8 11 8b ff ff       	call   2770 <strcpy@plt>
    9c5f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c63:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9c66:	85 c0                	test   eax,eax
    9c68:	75 2e                	jne    9c98 <line_parser+0x3b6>
    9c6a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c6e:	8b 00                	mov    eax,DWORD PTR [rax]
    9c70:	85 c0                	test   eax,eax
    9c72:	75 24                	jne    9c98 <line_parser+0x3b6>
    9c74:	8b 15 4a 03 10 00    	mov    edx,DWORD PTR [rip+0x10034a]        # 109fc4 <homenet>
    9c7a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c7e:	89 10                	mov    DWORD PTR [rax],edx
    9c80:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9c84:	48 89 c7             	mov    rdi,rax
    9c87:	e8 9b f9 ff ff       	call   9627 <check_port_number>
    9c8c:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9c90:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9c93:	e9 06 0b 00 00       	jmp    a79e <line_parser+0xebc>
    9c98:	8b 15 26 03 10 00    	mov    edx,DWORD PTR [rip+0x100326]        # 109fc4 <homenet>
    9c9e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ca2:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    9ca5:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9ca9:	48 89 c7             	mov    rdi,rax
    9cac:	e8 76 f9 ff ff       	call   9627 <check_port_number>
    9cb1:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9cb5:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9cb8:	e9 e1 0a 00 00       	jmp    a79e <line_parser+0xebc>
    9cbd:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9cc1:	48 8d 35 88 3e 00 00 	lea    rsi,[rip+0x3e88]        # db50 <_IO_stdin_used+0x1b50>
    9cc8:	48 89 c7             	mov    rdi,rax
    9ccb:	e8 80 8a ff ff       	call   2750 <strcmp@plt>
    9cd0:	85 c0                	test   eax,eax
    9cd2:	75 30                	jne    9d04 <line_parser+0x422>
    9cd4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9cd8:	8b 10                	mov    edx,DWORD PTR [rax]
    9cda:	8b 05 e4 02 10 00    	mov    eax,DWORD PTR [rip+0x1002e4]        # 109fc4 <homenet>
    9ce0:	39 c2                	cmp    edx,eax
    9ce2:	75 10                	jne    9cf4 <line_parser+0x412>
    9ce4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ce8:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    9cef:	e9 aa 0a 00 00       	jmp    a79e <line_parser+0xebc>
    9cf4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9cf8:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    9cff:	e9 9a 0a 00 00       	jmp    a79e <line_parser+0xebc>
    9d04:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d08:	48 8d 35 44 3e 00 00 	lea    rsi,[rip+0x3e44]        # db53 <_IO_stdin_used+0x1b53>
    9d0f:	48 89 c7             	mov    rdi,rax
    9d12:	e8 39 8a ff ff       	call   2750 <strcmp@plt>
    9d17:	85 c0                	test   eax,eax
    9d19:	75 10                	jne    9d2b <line_parser+0x449>
    9d1b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d1f:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9d26:	e9 73 0a 00 00       	jmp    a79e <line_parser+0xebc>
    9d2b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d2f:	ba 0c 00 00 00       	mov    edx,0xc
    9d34:	48 8d 35 1b 3e 00 00 	lea    rsi,[rip+0x3e1b]        # db56 <_IO_stdin_used+0x1b56>
    9d3b:	48 89 c7             	mov    rdi,rax
    9d3e:	e8 0d 88 ff ff       	call   2550 <strncmp@plt>
    9d43:	85 c0                	test   eax,eax
    9d45:	75 7f                	jne    9dc6 <line_parser+0x4e4>
    9d47:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d4b:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9d4f:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9d53:	48 89 d6             	mov    rsi,rdx
    9d56:	48 89 c7             	mov    rdi,rax
    9d59:	e8 12 8a ff ff       	call   2770 <strcpy@plt>
    9d5e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d62:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9d65:	85 c0                	test   eax,eax
    9d67:	75 37                	jne    9da0 <line_parser+0x4be>
    9d69:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d6d:	8b 10                	mov    edx,DWORD PTR [rax]
    9d6f:	8b 05 4f 02 10 00    	mov    eax,DWORD PTR [rip+0x10024f]        # 109fc4 <homenet>
    9d75:	39 c2                	cmp    edx,eax
    9d77:	75 27                	jne    9da0 <line_parser+0x4be>
    9d79:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d7d:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9d84:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9d88:	48 83 c0 01          	add    rax,0x1
    9d8c:	48 89 c7             	mov    rdi,rax
    9d8f:	e8 93 f8 ff ff       	call   9627 <check_port_number>
    9d94:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9d98:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9d9b:	e9 fe 09 00 00       	jmp    a79e <line_parser+0xebc>
    9da0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9da4:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9daa:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9dae:	48 83 c0 01          	add    rax,0x1
    9db2:	48 89 c7             	mov    rdi,rax
    9db5:	e8 6d f8 ff ff       	call   9627 <check_port_number>
    9dba:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9dbe:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9dc1:	e9 d8 09 00 00       	jmp    a79e <line_parser+0xebc>
    9dc6:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9dca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9dcd:	3c 28                	cmp    al,0x28
    9dcf:	0f 85 c9 09 00 00    	jne    a79e <line_parser+0xebc>
    9dd5:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    9ddc:	e9 e1 09 00 00       	jmp    a7c2 <line_parser+0xee0>
    9de1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9de5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9de8:	3c 28                	cmp    al,0x28
    9dea:	75 0e                	jne    9dfa <line_parser+0x518>
    9dec:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9df0:	48 83 c0 01          	add    rax,0x1
    9df4:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9df8:	eb 08                	jmp    9e02 <line_parser+0x520>
    9dfa:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9dfe:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9e02:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    9e09:	0f 84 8e 00 00 00    	je     9e9d <line_parser+0x5bb>
    9e0f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e13:	48 89 c7             	mov    rdi,rax
    9e16:	e8 e5 87 ff ff       	call   2600 <strlen@plt>
    9e1b:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9e1f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e23:	48 01 d0             	add    rax,rdx
    9e26:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9e29:	3c 3b                	cmp    al,0x3b
    9e2b:	75 36                	jne    9e63 <line_parser+0x581>
    9e2d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e31:	48 89 c7             	mov    rdi,rax
    9e34:	e8 c7 87 ff ff       	call   2600 <strlen@plt>
    9e39:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    9e3d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e41:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    9e48:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e4c:	48 89 c6             	mov    rsi,rax
    9e4f:	48 89 cf             	mov    rdi,rcx
    9e52:	e8 79 86 ff ff       	call   24d0 <strncat@plt>
    9e57:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9e5e:	e9 5f 09 00 00       	jmp    a7c2 <line_parser+0xee0>
    9e63:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e67:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    9e6e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9e72:	48 89 c6             	mov    rsi,rax
    9e75:	48 89 d7             	mov    rdi,rdx
    9e78:	e8 03 88 ff ff       	call   2680 <strcat@plt>
    9e7d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e81:	48 8d 98 50 01 00 00 	lea    rbx,[rax+0x150]
    9e88:	48 89 df             	mov    rdi,rbx
    9e8b:	e8 70 87 ff ff       	call   2600 <strlen@plt>
    9e90:	48 01 d8             	add    rax,rbx
    9e93:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9e98:	e9 01 09 00 00       	jmp    a79e <line_parser+0xebc>
    9e9d:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    9ea4:	74 7f                	je     9f25 <line_parser+0x643>
    9ea6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9eaa:	48 8d 35 b2 3c 00 00 	lea    rsi,[rip+0x3cb2]        # db63 <_IO_stdin_used+0x1b63>
    9eb1:	48 89 c7             	mov    rdi,rax
    9eb4:	e8 b7 87 ff ff       	call   2670 <strstr@plt>
    9eb9:	48 85 c0             	test   rax,rax
    9ebc:	74 33                	je     9ef1 <line_parser+0x60f>
    9ebe:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9ec2:	48 89 c7             	mov    rdi,rax
    9ec5:	e8 36 87 ff ff       	call   2600 <strlen@plt>
    9eca:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    9ece:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ed2:	48 8d 48 40          	lea    rcx,[rax+0x40]
    9ed6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9eda:	48 89 c6             	mov    rsi,rax
    9edd:	48 89 cf             	mov    rdi,rcx
    9ee0:	e8 eb 85 ff ff       	call   24d0 <strncat@plt>
    9ee5:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    9eec:	e9 d1 08 00 00       	jmp    a7c2 <line_parser+0xee0>
    9ef1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ef5:	48 8d 50 40          	lea    rdx,[rax+0x40]
    9ef9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9efd:	48 89 c6             	mov    rsi,rax
    9f00:	48 89 d7             	mov    rdi,rdx
    9f03:	e8 78 87 ff ff       	call   2680 <strcat@plt>
    9f08:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f0c:	48 8d 58 40          	lea    rbx,[rax+0x40]
    9f10:	48 89 df             	mov    rdi,rbx
    9f13:	e8 e8 86 ff ff       	call   2600 <strlen@plt>
    9f18:	48 01 d8             	add    rax,rbx
    9f1b:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9f20:	e9 79 08 00 00       	jmp    a79e <line_parser+0xebc>
    9f25:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f29:	ba 06 00 00 00       	mov    edx,0x6
    9f2e:	48 8d 35 31 3c 00 00 	lea    rsi,[rip+0x3c31]        # db66 <_IO_stdin_used+0x1b66>
    9f35:	48 89 c7             	mov    rdi,rax
    9f38:	e8 13 86 ff ff       	call   2550 <strncmp@plt>
    9f3d:	85 c0                	test   eax,eax
    9f3f:	75 37                	jne    9f78 <line_parser+0x696>
    9f41:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f45:	48 89 c7             	mov    rdi,rax
    9f48:	e8 b3 86 ff ff       	call   2600 <strlen@plt>
    9f4d:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    9f51:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f55:	48 8d 48 06          	lea    rcx,[rax+0x6]
    9f59:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f5d:	48 83 c0 20          	add    rax,0x20
    9f61:	48 89 ce             	mov    rsi,rcx
    9f64:	48 89 c7             	mov    rdi,rax
    9f67:	e8 54 88 ff ff       	call   27c0 <strncpy@plt>
    9f6c:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    9f73:	e9 26 08 00 00       	jmp    a79e <line_parser+0xebc>
    9f78:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f7c:	ba 05 00 00 00       	mov    edx,0x5
    9f81:	48 8d 35 e5 3b 00 00 	lea    rsi,[rip+0x3be5]        # db6d <_IO_stdin_used+0x1b6d>
    9f88:	48 89 c7             	mov    rdi,rax
    9f8b:	e8 c0 85 ff ff       	call   2550 <strncmp@plt>
    9f90:	85 c0                	test   eax,eax
    9f92:	75 4d                	jne    9fe1 <line_parser+0x6ff>
    9f94:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    9f9b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f9f:	48 83 c0 05          	add    rax,0x5
    9fa3:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    9fa7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9fab:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    9fb2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    9fb6:	48 89 c6             	mov    rsi,rax
    9fb9:	48 89 d7             	mov    rdi,rdx
    9fbc:	e8 bf 86 ff ff       	call   2680 <strcat@plt>
    9fc1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9fc5:	48 8d 98 50 01 00 00 	lea    rbx,[rax+0x150]
    9fcc:	48 89 df             	mov    rdi,rbx
    9fcf:	e8 2c 86 ff ff       	call   2600 <strlen@plt>
    9fd4:	48 01 d8             	add    rax,rbx
    9fd7:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9fdc:	e9 bd 07 00 00       	jmp    a79e <line_parser+0xebc>
    9fe1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fe5:	ba 06 00 00 00       	mov    edx,0x6
    9fea:	48 8d 35 82 3b 00 00 	lea    rsi,[rip+0x3b82]        # db73 <_IO_stdin_used+0x1b73>
    9ff1:	48 89 c7             	mov    rdi,rax
    9ff4:	e8 57 85 ff ff       	call   2550 <strncmp@plt>
    9ff9:	85 c0                	test   eax,eax
    9ffb:	75 31                	jne    a02e <line_parser+0x74c>
    9ffd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a001:	48 89 c7             	mov    rdi,rax
    a004:	e8 42 f8 ff ff       	call   984b <sc_strip>
    a009:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a00d:	48 83 c0 06          	add    rax,0x6
    a011:	48 89 c7             	mov    rdi,rax
    a014:	e8 a7 86 ff ff       	call   26c0 <atoi@plt>
    a019:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    a01c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a020:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    a023:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    a029:	e9 70 07 00 00       	jmp    a79e <line_parser+0xebc>
    a02e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a032:	ba 05 00 00 00       	mov    edx,0x5
    a037:	48 8d 35 3c 3b 00 00 	lea    rsi,[rip+0x3b3c]        # db7a <_IO_stdin_used+0x1b7a>
    a03e:	48 89 c7             	mov    rdi,rax
    a041:	e8 0a 85 ff ff       	call   2550 <strncmp@plt>
    a046:	85 c0                	test   eax,eax
    a048:	75 3f                	jne    a089 <line_parser+0x7a7>
    a04a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a04e:	48 89 c7             	mov    rdi,rax
    a051:	e8 aa 85 ff ff       	call   2600 <strlen@plt>
    a056:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    a05a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a05e:	48 8d 48 05          	lea    rcx,[rax+0x5]
    a062:	48 8d 45 de          	lea    rax,[rbp-0x22]
    a066:	48 89 ce             	mov    rsi,rcx
    a069:	48 89 c7             	mov    rdi,rax
    a06c:	e8 4f 87 ff ff       	call   27c0 <strncpy@plt>
    a071:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a075:	48 8d 45 de          	lea    rax,[rbp-0x22]
    a079:	48 89 d6             	mov    rsi,rdx
    a07c:	48 89 c7             	mov    rdi,rax
    a07f:	e8 a7 f6 ff ff       	call   972b <get_ruletype>
    a084:	e9 15 07 00 00       	jmp    a79e <line_parser+0xebc>
    a089:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a08d:	ba 08 00 00 00       	mov    edx,0x8
    a092:	48 8d 35 e7 3a 00 00 	lea    rsi,[rip+0x3ae7]        # db80 <_IO_stdin_used+0x1b80>
    a099:	48 89 c7             	mov    rdi,rax
    a09c:	e8 af 84 ff ff       	call   2550 <strncmp@plt>
    a0a1:	85 c0                	test   eax,eax
    a0a3:	0f 85 8f 00 00 00    	jne    a138 <line_parser+0x856>
    a0a9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0ad:	48 83 c0 08          	add    rax,0x8
    a0b1:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    a0b5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a0b9:	48 8d 35 a3 3a 00 00 	lea    rsi,[rip+0x3aa3]        # db63 <_IO_stdin_used+0x1b63>
    a0c0:	48 89 c7             	mov    rdi,rax
    a0c3:	e8 a8 85 ff ff       	call   2670 <strstr@plt>
    a0c8:	48 85 c0             	test   rax,rax
    a0cb:	74 30                	je     a0fd <line_parser+0x81b>
    a0cd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0d1:	48 89 c7             	mov    rdi,rax
    a0d4:	e8 27 85 ff ff       	call   2600 <strlen@plt>
    a0d9:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    a0dd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0e1:	48 8d 48 08          	lea    rcx,[rax+0x8]
    a0e5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0e9:	48 83 c0 40          	add    rax,0x40
    a0ed:	48 89 ce             	mov    rsi,rcx
    a0f0:	48 89 c7             	mov    rdi,rax
    a0f3:	e8 c8 86 ff ff       	call   27c0 <strncpy@plt>
    a0f8:	e9 a1 06 00 00       	jmp    a79e <line_parser+0xebc>
    a0fd:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    a104:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a108:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a10c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a110:	48 89 c6             	mov    rsi,rax
    a113:	48 89 d7             	mov    rdi,rdx
    a116:	e8 65 85 ff ff       	call   2680 <strcat@plt>
    a11b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a11f:	48 8d 58 40          	lea    rbx,[rax+0x40]
    a123:	48 89 df             	mov    rdi,rbx
    a126:	e8 d5 84 ff ff       	call   2600 <strlen@plt>
    a12b:	48 01 d8             	add    rax,rbx
    a12e:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a133:	e9 66 06 00 00       	jmp    a79e <line_parser+0xebc>
    a138:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a13c:	ba 04 00 00 00       	mov    edx,0x4
    a141:	48 8d 35 41 3a 00 00 	lea    rsi,[rip+0x3a41]        # db89 <_IO_stdin_used+0x1b89>
    a148:	48 89 c7             	mov    rdi,rax
    a14b:	e8 00 84 ff ff       	call   2550 <strncmp@plt>
    a150:	85 c0                	test   eax,eax
    a152:	0f 85 8e 00 00 00    	jne    a1e6 <line_parser+0x904>
    a158:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a15c:	48 8d 35 cd 39 00 00 	lea    rsi,[rip+0x39cd]        # db30 <_IO_stdin_used+0x1b30>
    a163:	48 89 c7             	mov    rdi,rax
    a166:	e8 65 86 ff ff       	call   27d0 <strcspn@plt>
    a16b:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    a16f:	48 01 d0             	add    rax,rdx
    a172:	c6 00 00             	mov    BYTE PTR [rax],0x0
    a175:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a179:	48 83 c0 04          	add    rax,0x4
    a17d:	48 89 c7             	mov    rdi,rax
    a180:	e8 04 f3 ff ff       	call   9489 <isdigit>
    a185:	84 c0                	test   al,al
    a187:	74 47                	je     a1d0 <line_parser+0x8ee>
    a189:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a18d:	48 83 c0 04          	add    rax,0x4
    a191:	48 89 c7             	mov    rdi,rax
    a194:	e8 27 85 ff ff       	call   26c0 <atoi@plt>
    a199:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    a19c:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    a1a0:	7e 18                	jle    a1ba <line_parser+0x8d8>
    a1a2:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    a1a6:	7f 12                	jg     a1ba <line_parser+0x8d8>
    a1a8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a1ac:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    a1af:	89 90 4c 01 00 00    	mov    DWORD PTR [rax+0x14c],edx
    a1b5:	e9 e4 05 00 00       	jmp    a79e <line_parser+0xebc>
    a1ba:	48 8d 3d cf 39 00 00 	lea    rdi,[rip+0x39cf]        # db90 <_IO_stdin_used+0x1b90>
    a1c1:	e8 1a 83 ff ff       	call   24e0 <puts@plt>
    a1c6:	bf ff ff ff ff       	mov    edi,0xffffffff
    a1cb:	e8 30 83 ff ff       	call   2500 <exit@plt>
    a1d0:	48 8d 3d e1 39 00 00 	lea    rdi,[rip+0x39e1]        # dbb8 <_IO_stdin_used+0x1bb8>
    a1d7:	e8 04 83 ff ff       	call   24e0 <puts@plt>
    a1dc:	bf ff ff ff ff       	mov    edi,0xffffffff
    a1e1:	e8 1a 83 ff ff       	call   2500 <exit@plt>
    a1e6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1ea:	ba 06 00 00 00       	mov    edx,0x6
    a1ef:	48 8d 35 ea 39 00 00 	lea    rsi,[rip+0x39ea]        # dbe0 <_IO_stdin_used+0x1be0>
    a1f6:	48 89 c7             	mov    rdi,rax
    a1f9:	e8 52 83 ff ff       	call   2550 <strncmp@plt>
    a1fe:	85 c0                	test   eax,eax
    a200:	0f 85 9b 00 00 00    	jne    a2a1 <line_parser+0x9bf>
    a206:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a20a:	48 89 c7             	mov    rdi,rax
    a20d:	e8 39 f6 ff ff       	call   984b <sc_strip>
    a212:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a216:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a21c:	3d 80 00 00 00       	cmp    eax,0x80
    a221:	75 58                	jne    a27b <line_parser+0x999>
    a223:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a227:	48 83 c0 06          	add    rax,0x6
    a22b:	ba ff 00 00 00       	mov    edx,0xff
    a230:	be 00 00 00 00       	mov    esi,0x0
    a235:	48 89 c7             	mov    rdi,rax
    a238:	e8 b9 f5 ff ff       	call   97f6 <numeric_check>
    a23d:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    a240:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    a244:	75 16                	jne    a25c <line_parser+0x97a>
    a246:	48 8d 3d 9a 39 00 00 	lea    rdi,[rip+0x399a]        # dbe7 <_IO_stdin_used+0x1be7>
    a24d:	e8 8e 82 ff ff       	call   24e0 <puts@plt>
    a252:	bf ff ff ff ff       	mov    edi,0xffffffff
    a257:	e8 a4 82 ff ff       	call   2500 <exit@plt>
    a25c:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    a25f:	89 c2                	mov    edx,eax
    a261:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a265:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    a26b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a26f:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    a276:	e9 23 05 00 00       	jmp    a79e <line_parser+0xebc>
    a27b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a27f:	48 83 c0 20          	add    rax,0x20
    a283:	48 89 c6             	mov    rsi,rax
    a286:	48 8d 3d 73 39 00 00 	lea    rdi,[rip+0x3973]        # dc00 <_IO_stdin_used+0x1c00>
    a28d:	b8 00 00 00 00       	mov    eax,0x0
    a292:	e8 e9 81 ff ff       	call   2480 <printf@plt>
    a297:	bf ff ff ff ff       	mov    edi,0xffffffff
    a29c:	e8 5f 82 ff ff       	call   2500 <exit@plt>
    a2a1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2a5:	ba 06 00 00 00       	mov    edx,0x6
    a2aa:	48 8d 35 86 39 00 00 	lea    rsi,[rip+0x3986]        # dc37 <_IO_stdin_used+0x1c37>
    a2b1:	48 89 c7             	mov    rdi,rax
    a2b4:	e8 97 82 ff ff       	call   2550 <strncmp@plt>
    a2b9:	85 c0                	test   eax,eax
    a2bb:	0f 85 86 00 00 00    	jne    a347 <line_parser+0xa65>
    a2c1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2c5:	48 89 c7             	mov    rdi,rax
    a2c8:	e8 7e f5 ff ff       	call   984b <sc_strip>
    a2cd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2d1:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a2d7:	3d 80 00 00 00       	cmp    eax,0x80
    a2dc:	75 58                	jne    a336 <line_parser+0xa54>
    a2de:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2e2:	48 83 c0 06          	add    rax,0x6
    a2e6:	ba ff 00 00 00       	mov    edx,0xff
    a2eb:	be 00 00 00 00       	mov    esi,0x0
    a2f0:	48 89 c7             	mov    rdi,rax
    a2f3:	e8 fe f4 ff ff       	call   97f6 <numeric_check>
    a2f8:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    a2fb:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    a2ff:	75 16                	jne    a317 <line_parser+0xa35>
    a301:	48 8d 3d 36 39 00 00 	lea    rdi,[rip+0x3936]        # dc3e <_IO_stdin_used+0x1c3e>
    a308:	e8 d3 81 ff ff       	call   24e0 <puts@plt>
    a30d:	bf ff ff ff ff       	mov    edi,0xffffffff
    a312:	e8 e9 81 ff ff       	call   2500 <exit@plt>
    a317:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a31a:	89 c2                	mov    edx,eax
    a31c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a320:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a326:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a32a:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a331:	e9 68 04 00 00       	jmp    a79e <line_parser+0xebc>
    a336:	48 8d 3d 1b 39 00 00 	lea    rdi,[rip+0x391b]        # dc58 <_IO_stdin_used+0x1c58>
    a33d:	e8 9e 81 ff ff       	call   24e0 <puts@plt>
    a342:	e9 57 04 00 00       	jmp    a79e <line_parser+0xebc>
    a347:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a34b:	ba 08 00 00 00       	mov    edx,0x8
    a350:	48 8d 35 33 39 00 00 	lea    rsi,[rip+0x3933]        # dc8a <_IO_stdin_used+0x1c8a>
    a357:	48 89 c7             	mov    rdi,rax
    a35a:	e8 f1 81 ff ff       	call   2550 <strncmp@plt>
    a35f:	85 c0                	test   eax,eax
    a361:	0f 85 8c 00 00 00    	jne    a3f3 <line_parser+0xb11>
    a367:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a36b:	48 89 c7             	mov    rdi,rax
    a36e:	e8 d8 f4 ff ff       	call   984b <sc_strip>
    a373:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a377:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a37d:	3d 80 00 00 00       	cmp    eax,0x80
    a382:	75 59                	jne    a3dd <line_parser+0xafb>
    a384:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a388:	48 83 c0 08          	add    rax,0x8
    a38c:	ba ff ff 00 00       	mov    edx,0xffff
    a391:	be 00 00 00 00       	mov    esi,0x0
    a396:	48 89 c7             	mov    rdi,rax
    a399:	e8 58 f4 ff ff       	call   97f6 <numeric_check>
    a39e:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    a3a1:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    a3a5:	75 16                	jne    a3bd <line_parser+0xadb>
    a3a7:	48 8d 3d e5 38 00 00 	lea    rdi,[rip+0x38e5]        # dc93 <_IO_stdin_used+0x1c93>
    a3ae:	e8 2d 81 ff ff       	call   24e0 <puts@plt>
    a3b3:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3b8:	e8 43 81 ff ff       	call   2500 <exit@plt>
    a3bd:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    a3c0:	89 c2                	mov    edx,eax
    a3c2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3c6:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a3cd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3d1:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a3d8:	e9 c1 03 00 00       	jmp    a79e <line_parser+0xebc>
    a3dd:	48 8d 3d cc 38 00 00 	lea    rdi,[rip+0x38cc]        # dcb0 <_IO_stdin_used+0x1cb0>
    a3e4:	e8 f7 80 ff ff       	call   24e0 <puts@plt>
    a3e9:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3ee:	e8 0d 81 ff ff       	call   2500 <exit@plt>
    a3f3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3f7:	ba 09 00 00 00       	mov    edx,0x9
    a3fc:	48 8d 35 e1 38 00 00 	lea    rsi,[rip+0x38e1]        # dce4 <_IO_stdin_used+0x1ce4>
    a403:	48 89 c7             	mov    rdi,rax
    a406:	e8 45 81 ff ff       	call   2550 <strncmp@plt>
    a40b:	85 c0                	test   eax,eax
    a40d:	75 7a                	jne    a489 <line_parser+0xba7>
    a40f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a413:	48 89 c7             	mov    rdi,rax
    a416:	e8 30 f4 ff ff       	call   984b <sc_strip>
    a41b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a41f:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a425:	3d 80 00 00 00       	cmp    eax,0x80
    a42a:	0f 85 6e 03 00 00    	jne    a79e <line_parser+0xebc>
    a430:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a434:	48 83 c0 09          	add    rax,0x9
    a438:	ba ff ff 00 00       	mov    edx,0xffff
    a43d:	be 00 00 00 00       	mov    esi,0x0
    a442:	48 89 c7             	mov    rdi,rax
    a445:	e8 ac f3 ff ff       	call   97f6 <numeric_check>
    a44a:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    a44d:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    a451:	75 16                	jne    a469 <line_parser+0xb87>
    a453:	48 8d 3d 94 38 00 00 	lea    rdi,[rip+0x3894]        # dcee <_IO_stdin_used+0x1cee>
    a45a:	e8 81 80 ff ff       	call   24e0 <puts@plt>
    a45f:	bf ff ff ff ff       	mov    edi,0xffffffff
    a464:	e8 97 80 ff ff       	call   2500 <exit@plt>
    a469:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    a46c:	89 c2                	mov    edx,eax
    a46e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a472:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a479:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a47d:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a484:	e9 15 03 00 00       	jmp    a79e <line_parser+0xebc>
    a489:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a48d:	ba 04 00 00 00       	mov    edx,0x4
    a492:	48 8d 35 71 38 00 00 	lea    rsi,[rip+0x3871]        # dd0a <_IO_stdin_used+0x1d0a>
    a499:	48 89 c7             	mov    rdi,rax
    a49c:	e8 af 80 ff ff       	call   2550 <strncmp@plt>
    a4a1:	85 c0                	test   eax,eax
    a4a3:	75 64                	jne    a509 <line_parser+0xc27>
    a4a5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a4a9:	48 89 c7             	mov    rdi,rax
    a4ac:	e8 9a f3 ff ff       	call   984b <sc_strip>
    a4b1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a4b5:	48 83 c0 04          	add    rax,0x4
    a4b9:	ba ff 00 00 00       	mov    edx,0xff
    a4be:	be 00 00 00 00       	mov    esi,0x0
    a4c3:	48 89 c7             	mov    rdi,rax
    a4c6:	e8 2b f3 ff ff       	call   97f6 <numeric_check>
    a4cb:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    a4ce:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    a4d2:	75 16                	jne    a4ea <line_parser+0xc08>
    a4d4:	48 8d 3d 34 38 00 00 	lea    rdi,[rip+0x3834]        # dd0f <_IO_stdin_used+0x1d0f>
    a4db:	e8 00 80 ff ff       	call   24e0 <puts@plt>
    a4e0:	bf ff ff ff ff       	mov    edi,0xffffffff
    a4e5:	e8 16 80 ff ff       	call   2500 <exit@plt>
    a4ea:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a4ed:	89 c2                	mov    edx,eax
    a4ef:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4f3:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a4f9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4fd:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a504:	e9 95 02 00 00       	jmp    a79e <line_parser+0xebc>
    a509:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a50d:	ba 07 00 00 00       	mov    edx,0x7
    a512:	48 8d 35 08 38 00 00 	lea    rsi,[rip+0x3808]        # dd21 <_IO_stdin_used+0x1d21>
    a519:	48 89 c7             	mov    rdi,rax
    a51c:	e8 2f 80 ff ff       	call   2550 <strncmp@plt>
    a521:	85 c0                	test   eax,eax
    a523:	75 6e                	jne    a593 <line_parser+0xcb1>
    a525:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a529:	48 89 c7             	mov    rdi,rax
    a52c:	e8 1a f3 ff ff       	call   984b <sc_strip>
    a531:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a535:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a53b:	83 f8 7e             	cmp    eax,0x7e
    a53e:	75 3d                	jne    a57d <line_parser+0xc9b>
    a540:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a544:	48 89 c7             	mov    rdi,rax
    a547:	e8 b4 80 ff ff       	call   2600 <strlen@plt>
    a54c:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a550:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a554:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a558:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a55c:	48 05 53 03 00 00    	add    rax,0x353
    a562:	48 89 ce             	mov    rsi,rcx
    a565:	48 89 c7             	mov    rdi,rax
    a568:	e8 53 82 ff ff       	call   27c0 <strncpy@plt>
    a56d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a571:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a578:	e9 21 02 00 00       	jmp    a79e <line_parser+0xebc>
    a57d:	48 8d 3d ac 37 00 00 	lea    rdi,[rip+0x37ac]        # dd30 <_IO_stdin_used+0x1d30>
    a584:	e8 57 7f ff ff       	call   24e0 <puts@plt>
    a589:	bf ff ff ff ff       	mov    edi,0xffffffff
    a58e:	e8 6d 7f ff ff       	call   2500 <exit@plt>
    a593:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a597:	ba 04 00 00 00       	mov    edx,0x4
    a59c:	48 8d 35 be 37 00 00 	lea    rsi,[rip+0x37be]        # dd61 <_IO_stdin_used+0x1d61>
    a5a3:	48 89 c7             	mov    rdi,rax
    a5a6:	e8 a5 7f ff ff       	call   2550 <strncmp@plt>
    a5ab:	85 c0                	test   eax,eax
    a5ad:	75 78                	jne    a627 <line_parser+0xd45>
    a5af:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a5b3:	48 89 c7             	mov    rdi,rax
    a5b6:	e8 90 f2 ff ff       	call   984b <sc_strip>
    a5bb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5bf:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a5c5:	83 f8 7e             	cmp    eax,0x7e
    a5c8:	0f 85 d0 01 00 00    	jne    a79e <line_parser+0xebc>
    a5ce:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a5d2:	48 83 c0 04          	add    rax,0x4
    a5d6:	ba ff ff ff ff       	mov    edx,0xffffffff
    a5db:	be 00 00 00 00       	mov    esi,0x0
    a5e0:	48 89 c7             	mov    rdi,rax
    a5e3:	e8 0e f2 ff ff       	call   97f6 <numeric_check>
    a5e8:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a5eb:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    a5ef:	75 16                	jne    a607 <line_parser+0xd25>
    a5f1:	48 8d 3d 6e 37 00 00 	lea    rdi,[rip+0x376e]        # dd66 <_IO_stdin_used+0x1d66>
    a5f8:	e8 e3 7e ff ff       	call   24e0 <puts@plt>
    a5fd:	bf ff ff ff ff       	mov    edi,0xffffffff
    a602:	e8 f9 7e ff ff       	call   2500 <exit@plt>
    a607:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a60a:	89 c2                	mov    edx,eax
    a60c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a610:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a617:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a61b:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a622:	e9 77 01 00 00       	jmp    a79e <line_parser+0xebc>
    a627:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a62b:	ba 06 00 00 00       	mov    edx,0x6
    a630:	48 8d 35 41 37 00 00 	lea    rsi,[rip+0x3741]        # dd78 <_IO_stdin_used+0x1d78>
    a637:	48 89 c7             	mov    rdi,rax
    a63a:	e8 11 7f ff ff       	call   2550 <strncmp@plt>
    a63f:	85 c0                	test   eax,eax
    a641:	75 7c                	jne    a6bf <line_parser+0xddd>
    a643:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a647:	48 89 c7             	mov    rdi,rax
    a64a:	e8 b1 7f ff ff       	call   2600 <strlen@plt>
    a64f:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a653:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a657:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a65b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a65f:	48 05 10 02 00 00    	add    rax,0x210
    a665:	48 89 ce             	mov    rsi,rcx
    a668:	48 89 c7             	mov    rdi,rax
    a66b:	e8 50 81 ff ff       	call   27c0 <strncpy@plt>
    a670:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a674:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a67b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a67f:	48 05 d0 01 00 00    	add    rax,0x1d0
    a685:	ba 00 00 00 00       	mov    edx,0x0
    a68a:	48 89 ce             	mov    rsi,rcx
    a68d:	48 89 c7             	mov    rdi,rax
    a690:	e8 3b 80 ff ff       	call   26d0 <regcomp@plt>
    a695:	85 c0                	test   eax,eax
    a697:	74 16                	je     a6af <line_parser+0xdcd>
    a699:	48 8d 3d e0 36 00 00 	lea    rdi,[rip+0x36e0]        # dd80 <_IO_stdin_used+0x1d80>
    a6a0:	e8 3b 7e ff ff       	call   24e0 <puts@plt>
    a6a5:	bf ff ff ff ff       	mov    edi,0xffffffff
    a6aa:	e8 51 7e ff ff       	call   2500 <exit@plt>
    a6af:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6b3:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a6ba:	e9 df 00 00 00       	jmp    a79e <line_parser+0xebc>
    a6bf:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6c3:	ba 06 00 00 00       	mov    edx,0x6
    a6c8:	48 8d 35 d6 36 00 00 	lea    rsi,[rip+0x36d6]        # dda5 <_IO_stdin_used+0x1da5>
    a6cf:	48 89 c7             	mov    rdi,rax
    a6d2:	e8 79 7e ff ff       	call   2550 <strncmp@plt>
    a6d7:	85 c0                	test   eax,eax
    a6d9:	75 2d                	jne    a708 <line_parser+0xe26>
    a6db:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6df:	48 89 c7             	mov    rdi,rax
    a6e2:	e8 64 f1 ff ff       	call   984b <sc_strip>
    a6e7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6eb:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a6ef:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6f3:	ba 01 00 00 00       	mov    edx,0x1
    a6f8:	48 89 ce             	mov    rsi,rcx
    a6fb:	48 89 c7             	mov    rdi,rax
    a6fe:	e8 98 03 00 00       	call   aa9b <d_op_parser>
    a703:	e9 96 00 00 00       	jmp    a79e <line_parser+0xebc>
    a708:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a70c:	ba 07 00 00 00       	mov    edx,0x7
    a711:	48 8d 35 94 36 00 00 	lea    rsi,[rip+0x3694]        # ddac <_IO_stdin_used+0x1dac>
    a718:	48 89 c7             	mov    rdi,rax
    a71b:	e8 30 7e ff ff       	call   2550 <strncmp@plt>
    a720:	85 c0                	test   eax,eax
    a722:	75 27                	jne    a74b <line_parser+0xe69>
    a724:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a728:	48 89 c7             	mov    rdi,rax
    a72b:	e8 1b f1 ff ff       	call   984b <sc_strip>
    a730:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a734:	48 83 c0 07          	add    rax,0x7
    a738:	48 89 c7             	mov    rdi,rax
    a73b:	e8 80 7f ff ff       	call   26c0 <atoi@plt>
    a740:	89 c2                	mov    edx,eax
    a742:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a746:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a749:	eb 53                	jmp    a79e <line_parser+0xebc>
    a74b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a74f:	ba 0b 00 00 00       	mov    edx,0xb
    a754:	48 8d 35 59 36 00 00 	lea    rsi,[rip+0x3659]        # ddb4 <_IO_stdin_used+0x1db4>
    a75b:	48 89 c7             	mov    rdi,rax
    a75e:	e8 ed 7d ff ff       	call   2550 <strncmp@plt>
    a763:	85 c0                	test   eax,eax
    a765:	75 10                	jne    a777 <line_parser+0xe95>
    a767:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a76b:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a772:	00 00 00 
    a775:	eb 27                	jmp    a79e <line_parser+0xebc>
    a777:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a77b:	ba 09 00 00 00       	mov    edx,0x9
    a780:	48 8d 35 39 36 00 00 	lea    rsi,[rip+0x3639]        # ddc0 <_IO_stdin_used+0x1dc0>
    a787:	48 89 c7             	mov    rdi,rax
    a78a:	e8 c1 7d ff ff       	call   2550 <strncmp@plt>
    a78f:	85 c0                	test   eax,eax
    a791:	75 0b                	jne    a79e <line_parser+0xebc>
    a793:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a797:	c6 80 48 01 00 00 01 	mov    BYTE PTR [rax+0x148],0x1
    a79e:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a7a1:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    a7a4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a7a8:	48 89 c7             	mov    rdi,rax
    a7ab:	e8 50 7e ff ff       	call   2600 <strlen@plt>
    a7b0:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a7b4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a7b8:	48 01 d0             	add    rax,rdx
    a7bb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a7be:	3c 29                	cmp    al,0x29
    a7c0:	74 3d                	je     a7ff <line_parser+0xf1d>
    a7c2:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a7c5:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    a7c8:	7f 0c                	jg     a7d6 <line_parser+0xef4>
    a7ca:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    a7cd:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    a7d0:	0f 8e 28 f2 ff ff    	jle    99fe <line_parser+0x11c>
    a7d6:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    a7dd:	83 f0 01             	xor    eax,0x1
    a7e0:	84 c0                	test   al,al
    a7e2:	74 1c                	je     a800 <line_parser+0xf1e>
    a7e4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7e8:	48 83 c0 20          	add    rax,0x20
    a7ec:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    a7f3:	6c 65 64 
    a7f6:	48 89 18             	mov    QWORD PTR [rax],rbx
    a7f9:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    a7fd:	eb 01                	jmp    a800 <line_parser+0xf1e>
    a7ff:	90                   	nop
    a800:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a804:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a80b:	00 00 
    a80d:	74 05                	je     a814 <line_parser+0xf32>
    a80f:	e8 2c 7f ff ff       	call   2740 <__stack_chk_fail@plt>
    a814:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    a818:	c9                   	leave  
    a819:	c3                   	ret    

000000000000a81a <rule_processor>:
    a81a:	f3 0f 1e fa          	endbr64 
    a81e:	55                   	push   rbp
    a81f:	48 89 e5             	mov    rbp,rsp
    a822:	48 83 ec 10          	sub    rsp,0x10
    a826:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    a82d:	eb 22                	jmp    a851 <rule_processor+0x37>
    a82f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a832:	48 98                	cdqe   
    a834:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    a83b:	48 8d 15 9e 6a 00 00 	lea    rdx,[rip+0x6a9e]        # 112e0 <rules>
    a842:	48 01 d0             	add    rax,rdx
    a845:	48 89 c7             	mov    rdi,rax
    a848:	e8 13 00 00 00       	call   a860 <process_rule>
    a84d:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    a851:	8b 05 bd 67 00 00    	mov    eax,DWORD PTR [rip+0x67bd]        # 11014 <num_rules>
    a857:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    a85a:	7e d3                	jle    a82f <rule_processor+0x15>
    a85c:	90                   	nop
    a85d:	90                   	nop
    a85e:	c9                   	leave  
    a85f:	c3                   	ret    

000000000000a860 <process_rule>:
    a860:	f3 0f 1e fa          	endbr64 
    a864:	55                   	push   rbp
    a865:	48 89 e5             	mov    rbp,rsp
    a868:	41 57                	push   r15
    a86a:	41 56                	push   r14
    a86c:	41 54                	push   r12
    a86e:	53                   	push   rbx
    a86f:	48 83 ec 40          	sub    rsp,0x40
    a873:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    a877:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a87e:	00 00 
    a880:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    a884:	31 c0                	xor    eax,eax
    a886:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a88a:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    a891:	83 f0 01             	xor    eax,0x1
    a894:	84 c0                	test   al,al
    a896:	0f 84 dd 01 00 00    	je     aa79 <process_rule+0x219>
    a89c:	48 89 e0             	mov    rax,rsp
    a89f:	49 89 c4             	mov    r12,rax
    a8a2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a8a6:	48 83 c0 40          	add    rax,0x40
    a8aa:	48 89 c7             	mov    rdi,rax
    a8ad:	e8 4e 7d ff ff       	call   2600 <strlen@plt>
    a8b2:	48 83 c0 01          	add    rax,0x1
    a8b6:	48 01 c0             	add    rax,rax
    a8b9:	48 89 c2             	mov    rdx,rax
    a8bc:	48 83 ea 01          	sub    rdx,0x1
    a8c0:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    a8c4:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    a8c8:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    a8cf:	00 
    a8d0:	49 89 c6             	mov    r14,rax
    a8d3:	41 bf 00 00 00 00    	mov    r15d,0x0
    a8d9:	ba 10 00 00 00       	mov    edx,0x10
    a8de:	48 83 ea 01          	sub    rdx,0x1
    a8e2:	48 01 d0             	add    rax,rdx
    a8e5:	bb 10 00 00 00       	mov    ebx,0x10
    a8ea:	ba 00 00 00 00       	mov    edx,0x0
    a8ef:	48 f7 f3             	div    rbx
    a8f2:	48 6b c0 10          	imul   rax,rax,0x10
    a8f6:	48 89 c1             	mov    rcx,rax
    a8f9:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    a900:	48 89 e2             	mov    rdx,rsp
    a903:	48 29 ca             	sub    rdx,rcx
    a906:	48 39 d4             	cmp    rsp,rdx
    a909:	74 12                	je     a91d <process_rule+0xbd>
    a90b:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    a912:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    a919:	00 00 
    a91b:	eb e9                	jmp    a906 <process_rule+0xa6>
    a91d:	48 89 c2             	mov    rdx,rax
    a920:	81 e2 ff 0f 00 00    	and    edx,0xfff
    a926:	48 29 d4             	sub    rsp,rdx
    a929:	48 89 c2             	mov    rdx,rax
    a92c:	81 e2 ff 0f 00 00    	and    edx,0xfff
    a932:	48 85 d2             	test   rdx,rdx
    a935:	74 10                	je     a947 <process_rule+0xe7>
    a937:	25 ff 0f 00 00       	and    eax,0xfff
    a93c:	48 83 e8 08          	sub    rax,0x8
    a940:	48 01 e0             	add    rax,rsp
    a943:	48 83 08 00          	or     QWORD PTR [rax],0x0
    a947:	48 89 e0             	mov    rax,rsp
    a94a:	48 83 c0 00          	add    rax,0x0
    a94e:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    a952:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    a959:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a95d:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a961:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a965:	48 05 c8 02 00 00    	add    rax,0x2c8
    a96b:	48 89 d6             	mov    rsi,rdx
    a96e:	48 89 c7             	mov    rdi,rax
    a971:	e8 fa 7d ff ff       	call   2770 <strcpy@plt>
    a976:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    a97d:	e9 a4 00 00 00       	jmp    aa26 <process_rule+0x1c6>
    a982:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a986:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a989:	48 98                	cdqe   
    a98b:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a990:	3c 7c                	cmp    al,0x7c
    a992:	75 18                	jne    a9ac <process_rule+0x14c>
    a994:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    a998:	74 09                	je     a9a3 <process_rule+0x143>
    a99a:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    a9a1:	eb 7f                	jmp    aa22 <process_rule+0x1c2>
    a9a3:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    a9aa:	eb 76                	jmp    aa22 <process_rule+0x1c2>
    a9ac:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    a9b0:	75 3a                	jne    a9ec <process_rule+0x18c>
    a9b2:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a9b6:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a9b9:	48 98                	cdqe   
    a9bb:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a9c0:	0f be c0             	movsx  eax,al
    a9c3:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    a9c6:	48 63 d2             	movsxd rdx,edx
    a9c9:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    a9cd:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    a9d1:	48 01 d1             	add    rcx,rdx
    a9d4:	89 c2                	mov    edx,eax
    a9d6:	48 8d 35 ed 33 00 00 	lea    rsi,[rip+0x33ed]        # ddca <_IO_stdin_used+0x1dca>
    a9dd:	48 89 cf             	mov    rdi,rcx
    a9e0:	b8 00 00 00 00       	mov    eax,0x0
    a9e5:	e8 36 7c ff ff       	call   2620 <sprintf@plt>
    a9ea:	eb 36                	jmp    aa22 <process_rule+0x1c2>
    a9ec:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a9f0:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    a9f3:	48 98                	cdqe   
    a9f5:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    a9fa:	0f be c0             	movsx  eax,al
    a9fd:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    aa00:	01 d2                	add    edx,edx
    aa02:	48 63 ca             	movsxd rcx,edx
    aa05:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    aa09:	48 01 d1             	add    rcx,rdx
    aa0c:	89 c2                	mov    edx,eax
    aa0e:	48 8d 35 b8 33 00 00 	lea    rsi,[rip+0x33b8]        # ddcd <_IO_stdin_used+0x1dcd>
    aa15:	48 89 cf             	mov    rdi,rcx
    aa18:	b8 00 00 00 00       	mov    eax,0x0
    aa1d:	e8 fe 7b ff ff       	call   2620 <sprintf@plt>
    aa22:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    aa26:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    aa29:	48 63 d8             	movsxd rbx,eax
    aa2c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa30:	48 83 c0 40          	add    rax,0x40
    aa34:	48 89 c7             	mov    rdi,rax
    aa37:	e8 c4 7b ff ff       	call   2600 <strlen@plt>
    aa3c:	48 39 c3             	cmp    rbx,rax
    aa3f:	0f 82 3d ff ff ff    	jb     a982 <process_rule+0x122>
    aa45:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa49:	48 83 c0 40          	add    rax,0x40
    aa4d:	ba ff 00 00 00       	mov    edx,0xff
    aa52:	be 00 00 00 00       	mov    esi,0x0
    aa57:	48 89 c7             	mov    rdi,rax
    aa5a:	e8 31 7a ff ff       	call   2490 <memset@plt>
    aa5f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa63:	48 8d 50 40          	lea    rdx,[rax+0x40]
    aa67:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    aa6b:	48 89 c6             	mov    rsi,rax
    aa6e:	48 89 d7             	mov    rdi,rdx
    aa71:	e8 fa 7c ff ff       	call   2770 <strcpy@plt>
    aa76:	4c 89 e4             	mov    rsp,r12
    aa79:	90                   	nop
    aa7a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    aa7e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    aa85:	00 00 
    aa87:	74 05                	je     aa8e <process_rule+0x22e>
    aa89:	e8 b2 7c ff ff       	call   2740 <__stack_chk_fail@plt>
    aa8e:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    aa92:	5b                   	pop    rbx
    aa93:	41 5c                	pop    r12
    aa95:	41 5e                	pop    r14
    aa97:	41 5f                	pop    r15
    aa99:	5d                   	pop    rbp
    aa9a:	c3                   	ret    

000000000000aa9b <d_op_parser>:
    aa9b:	f3 0f 1e fa          	endbr64 
    aa9f:	55                   	push   rbp
    aaa0:	48 89 e5             	mov    rbp,rsp
    aaa3:	48 83 ec 20          	sub    rsp,0x20
    aaa7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    aaab:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    aaaf:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    aab2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aab6:	48 89 c7             	mov    rdi,rax
    aab9:	e8 cb e9 ff ff       	call   9489 <isdigit>
    aabe:	84 c0                	test   al,al
    aac0:	74 23                	je     aae5 <d_op_parser+0x4a>
    aac2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aac6:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    aacd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aad1:	48 89 c7             	mov    rdi,rax
    aad4:	e8 e7 7b ff ff       	call   26c0 <atoi@plt>
    aad9:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    aadd:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    aae0:	e9 59 01 00 00       	jmp    ac3e <d_op_parser+0x1a3>
    aae5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aae9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    aaec:	0f b6 15 e1 32 00 00 	movzx  edx,BYTE PTR [rip+0x32e1]        # ddd4 <_IO_stdin_used+0x1dd4>
    aaf3:	0f b6 c0             	movzx  eax,al
    aaf6:	0f b6 d2             	movzx  edx,dl
    aaf9:	29 d0                	sub    eax,edx
    aafb:	85 c0                	test   eax,eax
    aafd:	75 27                	jne    ab26 <d_op_parser+0x8b>
    aaff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab03:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    ab0a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ab0e:	48 83 c0 01          	add    rax,0x1
    ab12:	48 89 c7             	mov    rdi,rax
    ab15:	e8 a6 7b ff ff       	call   26c0 <atoi@plt>
    ab1a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ab1e:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ab21:	e9 18 01 00 00       	jmp    ac3e <d_op_parser+0x1a3>
    ab26:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ab2a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ab2d:	0f b6 15 a2 32 00 00 	movzx  edx,BYTE PTR [rip+0x32a2]        # ddd6 <_IO_stdin_used+0x1dd6>
    ab34:	0f b6 c0             	movzx  eax,al
    ab37:	0f b6 d2             	movzx  edx,dl
    ab3a:	29 d0                	sub    eax,edx
    ab3c:	85 c0                	test   eax,eax
    ab3e:	75 27                	jne    ab67 <d_op_parser+0xcc>
    ab40:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab44:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    ab4b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ab4f:	48 83 c0 01          	add    rax,0x1
    ab53:	48 89 c7             	mov    rdi,rax
    ab56:	e8 65 7b ff ff       	call   26c0 <atoi@plt>
    ab5b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ab5f:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ab62:	e9 d7 00 00 00       	jmp    ac3e <d_op_parser+0x1a3>
    ab67:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ab6b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ab6e:	0f b6 15 63 32 00 00 	movzx  edx,BYTE PTR [rip+0x3263]        # ddd8 <_IO_stdin_used+0x1dd8>
    ab75:	0f b6 c0             	movzx  eax,al
    ab78:	0f b6 d2             	movzx  edx,dl
    ab7b:	29 d0                	sub    eax,edx
    ab7d:	85 c0                	test   eax,eax
    ab7f:	75 27                	jne    aba8 <d_op_parser+0x10d>
    ab81:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ab85:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    ab8c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ab90:	48 83 c0 01          	add    rax,0x1
    ab94:	48 89 c7             	mov    rdi,rax
    ab97:	e8 24 7b ff ff       	call   26c0 <atoi@plt>
    ab9c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    aba0:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    aba3:	e9 96 00 00 00       	jmp    ac3e <d_op_parser+0x1a3>
    aba8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    abac:	ba 02 00 00 00       	mov    edx,0x2
    abb1:	48 8d 35 22 32 00 00 	lea    rsi,[rip+0x3222]        # ddda <_IO_stdin_used+0x1dda>
    abb8:	48 89 c7             	mov    rdi,rax
    abbb:	e8 90 79 ff ff       	call   2550 <strncmp@plt>
    abc0:	85 c0                	test   eax,eax
    abc2:	75 24                	jne    abe8 <d_op_parser+0x14d>
    abc4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    abc8:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    abcf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    abd3:	48 83 c0 02          	add    rax,0x2
    abd7:	48 89 c7             	mov    rdi,rax
    abda:	e8 e1 7a ff ff       	call   26c0 <atoi@plt>
    abdf:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    abe3:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    abe6:	eb 56                	jmp    ac3e <d_op_parser+0x1a3>
    abe8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    abec:	ba 02 00 00 00       	mov    edx,0x2
    abf1:	48 8d 35 e5 31 00 00 	lea    rsi,[rip+0x31e5]        # dddd <_IO_stdin_used+0x1ddd>
    abf8:	48 89 c7             	mov    rdi,rax
    abfb:	e8 50 79 ff ff       	call   2550 <strncmp@plt>
    ac00:	85 c0                	test   eax,eax
    ac02:	75 24                	jne    ac28 <d_op_parser+0x18d>
    ac04:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac08:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    ac0f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac13:	48 83 c0 02          	add    rax,0x2
    ac17:	48 89 c7             	mov    rdi,rax
    ac1a:	e8 a1 7a ff ff       	call   26c0 <atoi@plt>
    ac1f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ac23:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ac26:	eb 16                	jmp    ac3e <d_op_parser+0x1a3>
    ac28:	48 8d 3d b1 31 00 00 	lea    rdi,[rip+0x31b1]        # dde0 <_IO_stdin_used+0x1de0>
    ac2f:	e8 ac 78 ff ff       	call   24e0 <puts@plt>
    ac34:	bf ff ff ff ff       	mov    edi,0xffffffff
    ac39:	e8 c2 78 ff ff       	call   2500 <exit@plt>
    ac3e:	c9                   	leave  
    ac3f:	c3                   	ret    

000000000000ac40 <d_engine>:
    ac40:	f3 0f 1e fa          	endbr64 
    ac44:	55                   	push   rbp
    ac45:	48 89 e5             	mov    rbp,rsp
    ac48:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ac4c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ac50:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac54:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ac57:	83 f8 ff             	cmp    eax,0xffffffff
    ac5a:	75 0a                	jne    ac66 <d_engine+0x26>
    ac5c:	b8 01 00 00 00       	mov    eax,0x1
    ac61:	e9 ea 00 00 00       	jmp    ad50 <d_engine+0x110>
    ac66:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac6a:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ac6d:	2d a1 00 00 00       	sub    eax,0xa1
    ac72:	83 f8 05             	cmp    eax,0x5
    ac75:	0f 87 d0 00 00 00    	ja     ad4b <d_engine+0x10b>
    ac7b:	89 c0                	mov    eax,eax
    ac7d:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    ac84:	00 
    ac85:	48 8d 05 6c 31 00 00 	lea    rax,[rip+0x316c]        # ddf8 <_IO_stdin_used+0x1df8>
    ac8c:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    ac8f:	48 98                	cdqe   
    ac91:	48 8d 15 60 31 00 00 	lea    rdx,[rip+0x3160]        # ddf8 <_IO_stdin_used+0x1df8>
    ac98:	48 01 d0             	add    rax,rdx
    ac9b:	3e ff e0             	notrack jmp rax
    ac9e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    aca2:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    aca5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aca9:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    acac:	39 c2                	cmp    edx,eax
    acae:	0f 85 87 00 00 00    	jne    ad3b <d_engine+0xfb>
    acb4:	b8 01 00 00 00       	mov    eax,0x1
    acb9:	e9 92 00 00 00       	jmp    ad50 <d_engine+0x110>
    acbe:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acc2:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    acc5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acc9:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    accc:	39 c2                	cmp    edx,eax
    acce:	76 6e                	jbe    ad3e <d_engine+0xfe>
    acd0:	b8 01 00 00 00       	mov    eax,0x1
    acd5:	eb 79                	jmp    ad50 <d_engine+0x110>
    acd7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acdb:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    acde:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ace2:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ace5:	39 c2                	cmp    edx,eax
    ace7:	72 58                	jb     ad41 <d_engine+0x101>
    ace9:	b8 01 00 00 00       	mov    eax,0x1
    acee:	eb 60                	jmp    ad50 <d_engine+0x110>
    acf0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acf4:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    acf7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acfb:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    acfe:	39 c2                	cmp    edx,eax
    ad00:	73 42                	jae    ad44 <d_engine+0x104>
    ad02:	b8 01 00 00 00       	mov    eax,0x1
    ad07:	eb 47                	jmp    ad50 <d_engine+0x110>
    ad09:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad0d:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ad10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad14:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ad17:	39 c2                	cmp    edx,eax
    ad19:	77 2c                	ja     ad47 <d_engine+0x107>
    ad1b:	b8 01 00 00 00       	mov    eax,0x1
    ad20:	eb 2e                	jmp    ad50 <d_engine+0x110>
    ad22:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad26:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ad29:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad2d:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ad30:	39 c2                	cmp    edx,eax
    ad32:	74 16                	je     ad4a <d_engine+0x10a>
    ad34:	b8 01 00 00 00       	mov    eax,0x1
    ad39:	eb 15                	jmp    ad50 <d_engine+0x110>
    ad3b:	90                   	nop
    ad3c:	eb 0d                	jmp    ad4b <d_engine+0x10b>
    ad3e:	90                   	nop
    ad3f:	eb 0a                	jmp    ad4b <d_engine+0x10b>
    ad41:	90                   	nop
    ad42:	eb 07                	jmp    ad4b <d_engine+0x10b>
    ad44:	90                   	nop
    ad45:	eb 04                	jmp    ad4b <d_engine+0x10b>
    ad47:	90                   	nop
    ad48:	eb 01                	jmp    ad4b <d_engine+0x10b>
    ad4a:	90                   	nop
    ad4b:	b8 00 00 00 00       	mov    eax,0x0
    ad50:	5d                   	pop    rbp
    ad51:	c3                   	ret    

000000000000ad52 <homenet_toi>:
    ad52:	f3 0f 1e fa          	endbr64 
    ad56:	55                   	push   rbp
    ad57:	48 89 e5             	mov    rbp,rsp
    ad5a:	53                   	push   rbx
    ad5b:	48 83 ec 38          	sub    rsp,0x38
    ad5f:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    ad63:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ad6a:	00 00 
    ad6c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    ad70:	31 c0                	xor    eax,eax
    ad72:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ad76:	48 8d 35 93 30 00 00 	lea    rsi,[rip+0x3093]        # de10 <_IO_stdin_used+0x1e10>
    ad7d:	48 89 c7             	mov    rdi,rax
    ad80:	e8 fb 79 ff ff       	call   2780 <strtok@plt>
    ad85:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    ad89:	eb 4c                	jmp    add7 <homenet_toi+0x85>
    ad8b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    ad8f:	48 89 c7             	mov    rdi,rax
    ad92:	e8 29 79 ff ff       	call   26c0 <atoi@plt>
    ad97:	89 c3                	mov    ebx,eax
    ad99:	48 8d 45 df          	lea    rax,[rbp-0x21]
    ad9d:	48 89 c7             	mov    rdi,rax
    ada0:	e8 5b 78 ff ff       	call   2600 <strlen@plt>
    ada5:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    ada9:	48 01 d0             	add    rax,rdx
    adac:	89 da                	mov    edx,ebx
    adae:	48 8d 35 5d 30 00 00 	lea    rsi,[rip+0x305d]        # de12 <_IO_stdin_used+0x1e12>
    adb5:	48 89 c7             	mov    rdi,rax
    adb8:	b8 00 00 00 00       	mov    eax,0x0
    adbd:	e8 5e 78 ff ff       	call   2620 <sprintf@plt>
    adc2:	48 8d 35 47 30 00 00 	lea    rsi,[rip+0x3047]        # de10 <_IO_stdin_used+0x1e10>
    adc9:	bf 00 00 00 00       	mov    edi,0x0
    adce:	e8 ad 79 ff ff       	call   2780 <strtok@plt>
    add3:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    add7:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    addc:	75 ad                	jne    ad8b <homenet_toi+0x39>
    adde:	48 8d 45 df          	lea    rax,[rbp-0x21]
    ade2:	ba 10 00 00 00       	mov    edx,0x10
    ade7:	be 00 00 00 00       	mov    esi,0x0
    adec:	48 89 c7             	mov    rdi,rax
    adef:	e8 ac 78 ff ff       	call   26a0 <strtol@plt>
    adf4:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    adf8:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    adff:	00 00 
    ae01:	74 05                	je     ae08 <homenet_toi+0xb6>
    ae03:	e8 38 79 ff ff       	call   2740 <__stack_chk_fail@plt>
    ae08:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    ae0c:	c9                   	leave  
    ae0d:	c3                   	ret    

000000000000ae0e <tcp_check_sum_passed>:
    ae0e:	f3 0f 1e fa          	endbr64 
    ae12:	55                   	push   rbp
    ae13:	48 89 e5             	mov    rbp,rsp
    ae16:	41 54                	push   r12
    ae18:	53                   	push   rbx
    ae19:	48 83 ec 30          	sub    rsp,0x30
    ae1d:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    ae21:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    ae25:	bb 00 00 00 00       	mov    ebx,0x0
    ae2a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ae2e:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    ae32:	0f b7 c0             	movzx  eax,ax
    ae35:	89 c7                	mov    edi,eax
    ae37:	e8 f4 77 ff ff       	call   2630 <ntohs@plt>
    ae3c:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    ae40:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    ae43:	83 e2 0f             	and    edx,0xf
    ae46:	0f b6 d2             	movzx  edx,dl
    ae49:	c1 e2 02             	shl    edx,0x2
    ae4c:	29 d0                	sub    eax,edx
    ae4e:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    ae52:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ae56:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    ae5a:	0f b7 c0             	movzx  eax,ax
    ae5d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    ae61:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    ae65:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    ae69:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    ae6d:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    ae73:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ae77:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    ae7a:	c1 e8 10             	shr    eax,0x10
    ae7d:	89 c0                	mov    eax,eax
    ae7f:	0f b7 c0             	movzx  eax,ax
    ae82:	48 01 c3             	add    rbx,rax
    ae85:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ae89:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    ae8c:	89 c0                	mov    eax,eax
    ae8e:	0f b7 c0             	movzx  eax,ax
    ae91:	48 01 c3             	add    rbx,rax
    ae94:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ae98:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    ae9b:	c1 e8 10             	shr    eax,0x10
    ae9e:	89 c0                	mov    eax,eax
    aea0:	0f b7 c0             	movzx  eax,ax
    aea3:	48 01 c3             	add    rbx,rax
    aea6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aeaa:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    aead:	89 c0                	mov    eax,eax
    aeaf:	0f b7 c0             	movzx  eax,ax
    aeb2:	48 01 c3             	add    rbx,rax
    aeb5:	bf 06 00 00 00       	mov    edi,0x6
    aeba:	e8 31 76 ff ff       	call   24f0 <htons@plt>
    aebf:	0f b7 c0             	movzx  eax,ax
    aec2:	48 01 c3             	add    rbx,rax
    aec5:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    aec9:	89 c7                	mov    edi,eax
    aecb:	e8 20 76 ff ff       	call   24f0 <htons@plt>
    aed0:	0f b7 c0             	movzx  eax,ax
    aed3:	48 01 c3             	add    rbx,rax
    aed6:	eb 1a                	jmp    aef2 <tcp_check_sum_passed+0xe4>
    aed8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    aedc:	48 8d 50 14          	lea    rdx,[rax+0x14]
    aee0:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    aee4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    aee7:	0f b6 c0             	movzx  eax,al
    aeea:	48 01 c3             	add    rbx,rax
    aeed:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    aef2:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    aef7:	77 df                	ja     aed8 <tcp_check_sum_passed+0xca>
    aef9:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    aefe:	74 1d                	je     af1d <tcp_check_sum_passed+0x10f>
    af00:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    af04:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    af07:	0f b6 c0             	movzx  eax,al
    af0a:	48 01 c3             	add    rbx,rax
    af0d:	eb 0e                	jmp    af1d <tcp_check_sum_passed+0x10f>
    af0f:	0f b7 c3             	movzx  eax,bx
    af12:	48 c1 eb 10          	shr    rbx,0x10
    af16:	48 89 da             	mov    rdx,rbx
    af19:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    af1d:	48 89 d8             	mov    rax,rbx
    af20:	48 c1 e8 10          	shr    rax,0x10
    af24:	48 85 c0             	test   rax,rax
    af27:	75 e6                	jne    af0f <tcp_check_sum_passed+0x101>
    af29:	48 f7 d3             	not    rbx
    af2c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    af30:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    af34:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    af38:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    af3c:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    af40:	0f b7 c0             	movzx  eax,ax
    af43:	89 c7                	mov    edi,eax
    af45:	e8 e6 76 ff ff       	call   2630 <ntohs@plt>
    af4a:	44 0f b7 e0          	movzx  r12d,ax
    af4e:	89 d8                	mov    eax,ebx
    af50:	0f b7 c0             	movzx  eax,ax
    af53:	89 c7                	mov    edi,eax
    af55:	e8 d6 76 ff ff       	call   2630 <ntohs@plt>
    af5a:	0f b7 c0             	movzx  eax,ax
    af5d:	44 89 e2             	mov    edx,r12d
    af60:	89 c6                	mov    esi,eax
    af62:	48 8d 3d ae 2e 00 00 	lea    rdi,[rip+0x2eae]        # de17 <_IO_stdin_used+0x1e17>
    af69:	b8 00 00 00 00       	mov    eax,0x0
    af6e:	e8 0d 75 ff ff       	call   2480 <printf@plt>
    af73:	89 d8                	mov    eax,ebx
    af75:	0f b7 c0             	movzx  eax,ax
    af78:	89 c7                	mov    edi,eax
    af7a:	e8 b1 76 ff ff       	call   2630 <ntohs@plt>
    af7f:	89 c3                	mov    ebx,eax
    af81:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    af85:	0f b7 c0             	movzx  eax,ax
    af88:	89 c7                	mov    edi,eax
    af8a:	e8 a1 76 ff ff       	call   2630 <ntohs@plt>
    af8f:	66 39 c3             	cmp    bx,ax
    af92:	75 07                	jne    af9b <tcp_check_sum_passed+0x18d>
    af94:	b8 01 00 00 00       	mov    eax,0x1
    af99:	eb 05                	jmp    afa0 <tcp_check_sum_passed+0x192>
    af9b:	b8 00 00 00 00       	mov    eax,0x0
    afa0:	48 83 c4 30          	add    rsp,0x30
    afa4:	5b                   	pop    rbx
    afa5:	41 5c                	pop    r12
    afa7:	5d                   	pop    rbp
    afa8:	c3                   	ret    

000000000000afa9 <run_hello_script>:
    afa9:	f3 0f 1e fa          	endbr64 
    afad:	55                   	push   rbp
    afae:	48 89 e5             	mov    rbp,rsp
    afb1:	48 83 ec 10          	sub    rsp,0x10
    afb5:	e8 56 77 ff ff       	call   2710 <luaL_newstate@plt>
    afba:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    afbe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afc2:	48 89 c7             	mov    rdi,rax
    afc5:	e8 66 77 ff ff       	call   2730 <luaL_openlibs@plt>
    afca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afce:	ba 00 00 00 00       	mov    edx,0x0
    afd3:	48 8d 35 4e 2e 00 00 	lea    rsi,[rip+0x2e4e]        # de28 <_IO_stdin_used+0x1e28>
    afda:	48 89 c7             	mov    rdi,rax
    afdd:	e8 ce 76 ff ff       	call   26b0 <luaL_loadfilex@plt>
    afe2:	85 c0                	test   eax,eax
    afe4:	75 2b                	jne    b011 <run_hello_script+0x68>
    afe6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    afea:	41 b9 00 00 00 00    	mov    r9d,0x0
    aff0:	41 b8 00 00 00 00    	mov    r8d,0x0
    aff6:	b9 00 00 00 00       	mov    ecx,0x0
    affb:	ba ff ff ff ff       	mov    edx,0xffffffff
    b000:	be 00 00 00 00       	mov    esi,0x0
    b005:	48 89 c7             	mov    rdi,rax
    b008:	e8 53 76 ff ff       	call   2660 <lua_pcallk@plt>
    b00d:	85 c0                	test   eax,eax
    b00f:	74 07                	je     b018 <run_hello_script+0x6f>
    b011:	b8 01 00 00 00       	mov    eax,0x1
    b016:	eb 05                	jmp    b01d <run_hello_script+0x74>
    b018:	b8 00 00 00 00       	mov    eax,0x0
    b01d:	85 c0                	test   eax,eax
    b01f:	75 1e                	jne    b03f <run_hello_script+0x96>
    b021:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b025:	48 89 c7             	mov    rdi,rax
    b028:	e8 d3 76 ff ff       	call   2700 <lua_gettop@plt>
    b02d:	f7 d0                	not    eax
    b02f:	89 c2                	mov    edx,eax
    b031:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b035:	89 d6                	mov    esi,edx
    b037:	48 89 c7             	mov    rdi,rax
    b03a:	e8 81 75 ff ff       	call   25c0 <lua_settop@plt>
    b03f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b043:	48 89 c7             	mov    rdi,rax
    b046:	e8 45 77 ff ff       	call   2790 <lua_close@plt>
    b04b:	90                   	nop
    b04c:	c9                   	leave  
    b04d:	c3                   	ret    

000000000000b04e <collect_scripts>:
    b04e:	f3 0f 1e fa          	endbr64 
    b052:	55                   	push   rbp
    b053:	48 89 e5             	mov    rbp,rsp
    b056:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b05d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b064:	00 00 
    b066:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b06a:	31 c0                	xor    eax,eax
    b06c:	48 8d 35 d3 2d 00 00 	lea    rsi,[rip+0x2dd3]        # de46 <_IO_stdin_used+0x1e46>
    b073:	48 8d 3d ce 2d 00 00 	lea    rdi,[rip+0x2dce]        # de48 <_IO_stdin_used+0x1e48>
    b07a:	e8 f1 74 ff ff       	call   2570 <fopen@plt>
    b07f:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    b083:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    b088:	75 16                	jne    b0a0 <collect_scripts+0x52>
    b08a:	48 8d 3d cf 2d 00 00 	lea    rdi,[rip+0x2dcf]        # de60 <_IO_stdin_used+0x1e60>
    b091:	e8 4a 74 ff ff       	call   24e0 <puts@plt>
    b096:	bf ff ff ff ff       	mov    edi,0xffffffff
    b09b:	e8 60 74 ff ff       	call   2500 <exit@plt>
    b0a0:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    b0a7:	00 00 00 00 
    b0ab:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b0af:	ba 00 00 00 00       	mov    edx,0x0
    b0b4:	48 8d 35 e7 2d 00 00 	lea    rsi,[rip+0x2de7]        # dea2 <_IO_stdin_used+0x1ea2>
    b0bb:	48 89 c7             	mov    rdi,rax
    b0be:	e8 0d 76 ff ff       	call   26d0 <regcomp@plt>
    b0c3:	e9 86 00 00 00       	jmp    b14e <collect_scripts+0x100>
    b0c8:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b0cf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b0d2:	3c 23                	cmp    al,0x23
    b0d4:	75 02                	jne    b0d8 <collect_scripts+0x8a>
    b0d6:	eb 76                	jmp    b14e <collect_scripts+0x100>
    b0d8:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b0df:	ba 0e 00 00 00       	mov    edx,0xe
    b0e4:	48 8d 35 c1 2d 00 00 	lea    rsi,[rip+0x2dc1]        # deac <_IO_stdin_used+0x1eac>
    b0eb:	48 89 c7             	mov    rdi,rax
    b0ee:	e8 5d 74 ff ff       	call   2550 <strncmp@plt>
    b0f3:	85 c0                	test   eax,eax
    b0f5:	75 34                	jne    b12b <collect_scripts+0xdd>
    b0f7:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b0fe:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    b102:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b106:	48 89 d6             	mov    rsi,rdx
    b109:	48 89 c7             	mov    rdi,rax
    b10c:	e8 5f 76 ff ff       	call   2770 <strcpy@plt>
    b111:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b115:	48 8d 35 9f 2d 00 00 	lea    rsi,[rip+0x2d9f]        # debb <_IO_stdin_used+0x1ebb>
    b11c:	48 89 c7             	mov    rdi,rax
    b11f:	e8 ac 76 ff ff       	call   27d0 <strcspn@plt>
    b124:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b129:	eb 23                	jmp    b14e <collect_scripts+0x100>
    b12b:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b132:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b136:	41 b8 00 00 00 00    	mov    r8d,0x0
    b13c:	b9 00 00 00 00       	mov    ecx,0x0
    b141:	ba 00 00 00 00       	mov    edx,0x0
    b146:	48 89 c7             	mov    rdi,rax
    b149:	e8 32 74 ff ff       	call   2580 <regexec@plt>
    b14e:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    b152:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    b159:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    b160:	48 89 ce             	mov    rsi,rcx
    b163:	48 89 c7             	mov    rdi,rax
    b166:	e8 f5 75 ff ff       	call   2760 <getline@plt>
    b16b:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b16f:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    b174:	0f 85 4e ff ff ff    	jne    b0c8 <collect_scripts+0x7a>
    b17a:	90                   	nop
    b17b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b17f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b186:	00 00 
    b188:	74 05                	je     b18f <collect_scripts+0x141>
    b18a:	e8 b1 75 ff ff       	call   2740 <__stack_chk_fail@plt>
    b18f:	c9                   	leave  
    b190:	c3                   	ret    

000000000000b191 <ip6decode>:
    b191:	f3 0f 1e fa          	endbr64 
    b195:	55                   	push   rbp
    b196:	48 89 e5             	mov    rbp,rsp
    b199:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b1a0:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    b1a7:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    b1ae:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b1b5:	00 00 
    b1b7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b1bb:	31 c0                	xor    eax,eax
    b1bd:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b1c4:	48 83 c0 0e          	add    rax,0xe
    b1c8:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b1cc:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b1d0:	48 83 c0 08          	add    rax,0x8
    b1d4:	48 89 c7             	mov    rdi,rax
    b1d7:	e8 97 7f ff ff       	call   3173 <inet6_ntoa>
    b1dc:	48 89 c1             	mov    rcx,rax
    b1df:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b1e3:	ba 29 00 00 00       	mov    edx,0x29
    b1e8:	48 89 ce             	mov    rsi,rcx
    b1eb:	48 89 c7             	mov    rdi,rax
    b1ee:	e8 cd 75 ff ff       	call   27c0 <strncpy@plt>
    b1f3:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b1f7:	48 83 c0 18          	add    rax,0x18
    b1fb:	48 89 c7             	mov    rdi,rax
    b1fe:	e8 70 7f ff ff       	call   3173 <inet6_ntoa>
    b203:	48 89 c1             	mov    rcx,rax
    b206:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b20a:	ba 29 00 00 00       	mov    edx,0x29
    b20f:	48 89 ce             	mov    rsi,rcx
    b212:	48 89 c7             	mov    rdi,rax
    b215:	e8 a6 75 ff ff       	call   27c0 <strncpy@plt>
    b21a:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b21e:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b222:	0f b6 c0             	movzx  eax,al
    b225:	85 c0                	test   eax,eax
    b227:	75 1c                	jne    b245 <ip6decode+0xb4>
    b229:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b22d:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    b231:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b238:	48 89 ce             	mov    rsi,rcx
    b23b:	48 89 c7             	mov    rdi,rax
    b23e:	e8 cb 87 ff ff       	call   3a0e <ip6_icmp_decode>
    b243:	eb 28                	jmp    b26d <ip6decode+0xdc>
    b245:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b249:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b24d:	0f b6 c8             	movzx  ecx,al
    b250:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b254:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b258:	48 89 c6             	mov    rsi,rax
    b25b:	48 8d 3d 5e 2c 00 00 	lea    rdi,[rip+0x2c5e]        # dec0 <_IO_stdin_used+0x1ec0>
    b262:	b8 00 00 00 00       	mov    eax,0x0
    b267:	e8 14 72 ff ff       	call   2480 <printf@plt>
    b26c:	90                   	nop
    b26d:	90                   	nop
    b26e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b272:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b279:	00 00 
    b27b:	74 05                	je     b282 <ip6decode+0xf1>
    b27d:	e8 be 74 ff ff       	call   2740 <__stack_chk_fail@plt>
    b282:	c9                   	leave  
    b283:	c3                   	ret    

000000000000b284 <print_mem_map>:
    b284:	f3 0f 1e fa          	endbr64 
    b288:	55                   	push   rbp
    b289:	48 89 e5             	mov    rbp,rsp
    b28c:	48 83 ec 10          	sub    rsp,0x10
    b290:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b297:	eb 4c                	jmp    b2e5 <print_mem_map+0x61>
    b299:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b29c:	48 63 d0             	movsxd rdx,eax
    b29f:	48 89 d0             	mov    rax,rdx
    b2a2:	48 c1 e0 02          	shl    rax,0x2
    b2a6:	48 01 d0             	add    rax,rdx
    b2a9:	48 c1 e0 03          	shl    rax,0x3
    b2ad:	48 8d 15 4c d5 12 00 	lea    rdx,[rip+0x12d54c]        # 138800 <fn_mem_map>
    b2b4:	48 01 d0             	add    rax,rdx
    b2b7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b2bb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2bf:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b2c2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2c6:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b2c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2cd:	48 89 c6             	mov    rsi,rax
    b2d0:	48 8d 3d 11 2c 00 00 	lea    rdi,[rip+0x2c11]        # dee8 <_IO_stdin_used+0x1ee8>
    b2d7:	b8 00 00 00 00       	mov    eax,0x0
    b2dc:	e8 9f 71 ff ff       	call   2480 <printf@plt>
    b2e1:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b2e5:	8b 05 15 fd 12 00    	mov    eax,DWORD PTR [rip+0x12fd15]        # 13b000 <fn_num>
    b2eb:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b2ee:	7c a9                	jl     b299 <print_mem_map+0x15>
    b2f0:	90                   	nop
    b2f1:	90                   	nop
    b2f2:	c9                   	leave  
    b2f3:	c3                   	ret    

000000000000b2f4 <crash_handler>:
    b2f4:	f3 0f 1e fa          	endbr64 
    b2f8:	55                   	push   rbp
    b2f9:	48 89 e5             	mov    rbp,rsp
    b2fc:	41 54                	push   r12
    b2fe:	53                   	push   rbx
    b2ff:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    b306:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    b30c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b313:	00 00 
    b315:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b319:	31 c0                	xor    eax,eax
    b31b:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b322:	be 14 00 00 00       	mov    esi,0x14
    b327:	48 89 c7             	mov    rdi,rax
    b32a:	e8 81 71 ff ff       	call   24b0 <backtrace@plt>
    b32f:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    b335:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    b33b:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b342:	89 d6                	mov    esi,edx
    b344:	48 89 c7             	mov    rdi,rax
    b347:	e8 94 72 ff ff       	call   25e0 <backtrace_symbols@plt>
    b34c:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    b353:	b8 00 00 00 00       	mov    eax,0x0
    b358:	e8 e2 7f ff ff       	call   333f <get_formated_time>
    b35d:	48 89 c6             	mov    rsi,rax
    b360:	48 8d 3d a1 2b 00 00 	lea    rdi,[rip+0x2ba1]        # df08 <_IO_stdin_used+0x1f08>
    b367:	b8 00 00 00 00       	mov    eax,0x0
    b36c:	e8 0f 71 ff ff       	call   2480 <printf@plt>
    b371:	48 8d 3d bf 2b 00 00 	lea    rdi,[rip+0x2bbf]        # df37 <_IO_stdin_used+0x1f37>
    b378:	e8 63 71 ff ff       	call   24e0 <puts@plt>
    b37d:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    b384:	00 
    b385:	0f 84 6d 01 00 00    	je     b4f8 <crash_handler+0x204>
    b38b:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    b392:	00 00 00 
    b395:	e9 4c 01 00 00       	jmp    b4e6 <crash_handler+0x1f2>
    b39a:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b3a0:	48 98                	cdqe   
    b3a2:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b3a9:	00 
    b3aa:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b3b1:	48 01 d0             	add    rax,rdx
    b3b4:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b3b7:	48 8d 35 8d 2b 00 00 	lea    rsi,[rip+0x2b8d]        # df4b <_IO_stdin_used+0x1f4b>
    b3be:	48 89 c7             	mov    rdi,rax
    b3c1:	e8 aa 72 ff ff       	call   2670 <strstr@plt>
    b3c6:	48 85 c0             	test   rax,rax
    b3c9:	0f 85 0f 01 00 00    	jne    b4de <crash_handler+0x1ea>
    b3cf:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b3d5:	48 98                	cdqe   
    b3d7:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b3de:	00 
    b3df:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b3e6:	48 01 d0             	add    rax,rdx
    b3e9:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b3ec:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b3f2:	48 98                	cdqe   
    b3f4:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b3fb:	00 
    b3fc:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b403:	48 01 d0             	add    rax,rdx
    b406:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b409:	be 2b 00 00 00       	mov    esi,0x2b
    b40e:	48 89 c7             	mov    rdi,rax
    b411:	e8 c4 80 ff ff       	call   34da <strloc>
    b416:	48 98                	cdqe   
    b418:	48 83 c0 01          	add    rax,0x1
    b41c:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b420:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b424:	48 8d 35 24 2b 00 00 	lea    rsi,[rip+0x2b24]        # df4f <_IO_stdin_used+0x1f4f>
    b42b:	48 89 c7             	mov    rdi,rax
    b42e:	b8 00 00 00 00       	mov    eax,0x0
    b433:	e8 e8 71 ff ff       	call   2620 <sprintf@plt>
    b438:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b43c:	be 29 00 00 00       	mov    esi,0x29
    b441:	48 89 c7             	mov    rdi,rax
    b444:	e8 91 80 ff ff       	call   34da <strloc>
    b449:	48 98                	cdqe   
    b44b:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b450:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b454:	ba 10 00 00 00       	mov    edx,0x10
    b459:	be 00 00 00 00       	mov    esi,0x0
    b45e:	48 89 c7             	mov    rdi,rax
    b461:	e8 3a 72 ff ff       	call   26a0 <strtol@plt>
    b466:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b46c:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b472:	89 c7                	mov    edi,eax
    b474:	e8 20 01 00 00       	call   b599 <offset_search>
    b479:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b480:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b487:	74 3a                	je     b4c3 <crash_handler+0x1cf>
    b489:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b490:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b493:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b49a:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b49d:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b4a4:	8b b5 1c ff ff ff    	mov    esi,DWORD PTR [rbp-0xe4]
    b4aa:	41 89 f0             	mov    r8d,esi
    b4ad:	48 89 c6             	mov    rsi,rax
    b4b0:	48 8d 3d a1 2a 00 00 	lea    rdi,[rip+0x2aa1]        # df58 <_IO_stdin_used+0x1f58>
    b4b7:	b8 00 00 00 00       	mov    eax,0x0
    b4bc:	e8 bf 6f ff ff       	call   2480 <printf@plt>
    b4c1:	eb 1c                	jmp    b4df <crash_handler+0x1eb>
    b4c3:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b4c9:	89 c6                	mov    esi,eax
    b4cb:	48 8d 3d be 2a 00 00 	lea    rdi,[rip+0x2abe]        # df90 <_IO_stdin_used+0x1f90>
    b4d2:	b8 00 00 00 00       	mov    eax,0x0
    b4d7:	e8 a4 6f ff ff       	call   2480 <printf@plt>
    b4dc:	eb 01                	jmp    b4df <crash_handler+0x1eb>
    b4de:	90                   	nop
    b4df:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b4e6:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b4ec:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b4f2:	0f 8c a2 fe ff ff    	jl     b39a <crash_handler+0xa6>
    b4f8:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b4ff:	48 89 c7             	mov    rdi,rax
    b502:	e8 e9 70 ff ff       	call   25f0 <free@plt>
    b507:	48 8d 3d ac 2a 00 00 	lea    rdi,[rip+0x2aac]        # dfba <_IO_stdin_used+0x1fba>
    b50e:	e8 cd 6f ff ff       	call   24e0 <puts@plt>
    b513:	89 c6                	mov    esi,eax
    b515:	48 8d 3d ad 2a 00 00 	lea    rdi,[rip+0x2aad]        # dfc9 <_IO_stdin_used+0x1fc9>
    b51c:	b8 00 00 00 00       	mov    eax,0x0
    b521:	e8 5a 6f ff ff       	call   2480 <printf@plt>
    b526:	89 d8                	mov    eax,ebx
    b528:	89 c6                	mov    esi,eax
    b52a:	48 8d 3d a8 2a 00 00 	lea    rdi,[rip+0x2aa8]        # dfd9 <_IO_stdin_used+0x1fd9>
    b531:	b8 00 00 00 00       	mov    eax,0x0
    b536:	e8 45 6f ff ff       	call   2480 <printf@plt>
    b53b:	89 d8                	mov    eax,ebx
    b53d:	89 c6                	mov    esi,eax
    b53f:	48 8d 3d a3 2a 00 00 	lea    rdi,[rip+0x2aa3]        # dfe9 <_IO_stdin_used+0x1fe9>
    b546:	b8 00 00 00 00       	mov    eax,0x0
    b54b:	e8 30 6f ff ff       	call   2480 <printf@plt>
    b550:	89 c8                	mov    eax,ecx
    b552:	89 c6                	mov    esi,eax
    b554:	48 8d 3d 9e 2a 00 00 	lea    rdi,[rip+0x2a9e]        # dff9 <_IO_stdin_used+0x1ff9>
    b55b:	b8 00 00 00 00       	mov    eax,0x0
    b560:	e8 1b 6f ff ff       	call   2480 <printf@plt>
    b565:	89 e0                	mov    eax,esp
    b567:	89 c6                	mov    esi,eax
    b569:	48 8d 3d 99 2a 00 00 	lea    rdi,[rip+0x2a99]        # e009 <_IO_stdin_used+0x2009>
    b570:	b8 00 00 00 00       	mov    eax,0x0
    b575:	e8 06 6f ff ff       	call   2480 <printf@plt>
    b57a:	89 e8                	mov    eax,ebp
    b57c:	89 c6                	mov    esi,eax
    b57e:	48 8d 3d 94 2a 00 00 	lea    rdi,[rip+0x2a94]        # e019 <_IO_stdin_used+0x2019>
    b585:	b8 00 00 00 00       	mov    eax,0x0
    b58a:	e8 f1 6e ff ff       	call   2480 <printf@plt>
    b58f:	bf 01 00 00 00       	mov    edi,0x1
    b594:	e8 67 6f ff ff       	call   2500 <exit@plt>

000000000000b599 <offset_search>:
    b599:	f3 0f 1e fa          	endbr64 
    b59d:	55                   	push   rbp
    b59e:	48 89 e5             	mov    rbp,rsp
    b5a1:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b5a4:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b5ab:	eb 44                	jmp    b5f1 <offset_search+0x58>
    b5ad:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b5b0:	48 63 d0             	movsxd rdx,eax
    b5b3:	48 89 d0             	mov    rax,rdx
    b5b6:	48 c1 e0 02          	shl    rax,0x2
    b5ba:	48 01 d0             	add    rax,rdx
    b5bd:	48 c1 e0 03          	shl    rax,0x3
    b5c1:	48 8d 15 38 d2 12 00 	lea    rdx,[rip+0x12d238]        # 138800 <fn_mem_map>
    b5c8:	48 01 d0             	add    rax,rdx
    b5cb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b5cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b5d3:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b5d6:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b5d9:	76 12                	jbe    b5ed <offset_search+0x54>
    b5db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b5df:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b5e2:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b5e5:	73 06                	jae    b5ed <offset_search+0x54>
    b5e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b5eb:	eb 14                	jmp    b601 <offset_search+0x68>
    b5ed:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b5f1:	8b 05 09 fa 12 00    	mov    eax,DWORD PTR [rip+0x12fa09]        # 13b000 <fn_num>
    b5f7:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b5fa:	7c b1                	jl     b5ad <offset_search+0x14>
    b5fc:	b8 00 00 00 00       	mov    eax,0x0
    b601:	5d                   	pop    rbp
    b602:	c3                   	ret    

000000000000b603 <add_fn>:
    b603:	f3 0f 1e fa          	endbr64 
    b607:	55                   	push   rbp
    b608:	48 89 e5             	mov    rbp,rsp
    b60b:	48 83 ec 20          	sub    rsp,0x20
    b60f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b613:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b616:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b619:	8b 05 e1 f9 12 00    	mov    eax,DWORD PTR [rip+0x12f9e1]        # 13b000 <fn_num>
    b61f:	8d 50 01             	lea    edx,[rax+0x1]
    b622:	89 15 d8 f9 12 00    	mov    DWORD PTR [rip+0x12f9d8],edx        # 13b000 <fn_num>
    b628:	48 63 d0             	movsxd rdx,eax
    b62b:	48 89 d0             	mov    rax,rdx
    b62e:	48 c1 e0 02          	shl    rax,0x2
    b632:	48 01 d0             	add    rax,rdx
    b635:	48 c1 e0 03          	shl    rax,0x3
    b639:	48 8d 15 c0 d1 12 00 	lea    rdx,[rip+0x12d1c0]        # 138800 <fn_mem_map>
    b640:	48 01 d0             	add    rax,rdx
    b643:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b647:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b64b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b64f:	48 89 d6             	mov    rsi,rdx
    b652:	48 89 c7             	mov    rdi,rax
    b655:	e8 16 71 ff ff       	call   2770 <strcpy@plt>
    b65a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b65e:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b661:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b664:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b668:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b66b:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b66e:	90                   	nop
    b66f:	c9                   	leave  
    b670:	c3                   	ret    

000000000000b671 <load_fn_mem_map>:
    b671:	f3 0f 1e fa          	endbr64 
    b675:	55                   	push   rbp
    b676:	48 89 e5             	mov    rbp,rsp
    b679:	53                   	push   rbx
    b67a:	48 83 ec 78          	sub    rsp,0x78
    b67e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b685:	00 00 
    b687:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b68b:	31 c0                	xor    eax,eax
    b68d:	48 8d 35 9c 29 00 00 	lea    rsi,[rip+0x299c]        # e030 <_IO_stdin_used+0x2030>
    b694:	48 8d 3d 97 29 00 00 	lea    rdi,[rip+0x2997]        # e032 <_IO_stdin_used+0x2032>
    b69b:	e8 d0 6e ff ff       	call   2570 <fopen@plt>
    b6a0:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b6a4:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b6a9:	75 16                	jne    b6c1 <load_fn_mem_map+0x50>
    b6ab:	48 8d 3d 9e 29 00 00 	lea    rdi,[rip+0x299e]        # e050 <_IO_stdin_used+0x2050>
    b6b2:	e8 29 6e ff ff       	call   24e0 <puts@plt>
    b6b7:	bf ff ff ff ff       	mov    edi,0xffffffff
    b6bc:	e8 3f 6e ff ff       	call   2500 <exit@plt>
    b6c1:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b6c8:	00 
    b6c9:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b6d0:	00 
    b6d1:	e9 db 00 00 00       	jmp    b7b1 <load_fn_mem_map+0x140>
    b6d6:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b6da:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b6de:	48 8d 35 d2 29 00 00 	lea    rsi,[rip+0x29d2]        # e0b7 <_IO_stdin_used+0x20b7>
    b6e5:	48 89 c7             	mov    rdi,rax
    b6e8:	e8 e3 70 ff ff       	call   27d0 <strcspn@plt>
    b6ed:	48 01 d8             	add    rax,rbx
    b6f0:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b6f3:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b6fa:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b6fe:	48 8d 35 b4 29 00 00 	lea    rsi,[rip+0x29b4]        # e0b9 <_IO_stdin_used+0x20b9>
    b705:	48 89 c7             	mov    rdi,rax
    b708:	e8 73 70 ff ff       	call   2780 <strtok@plt>
    b70d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b711:	eb 7f                	jmp    b792 <load_fn_mem_map+0x121>
    b713:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b717:	74 44                	je     b75d <load_fn_mem_map+0xec>
    b719:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b71d:	7f 59                	jg     b778 <load_fn_mem_map+0x107>
    b71f:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b723:	74 08                	je     b72d <load_fn_mem_map+0xbc>
    b725:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b729:	74 17                	je     b742 <load_fn_mem_map+0xd1>
    b72b:	eb 4b                	jmp    b778 <load_fn_mem_map+0x107>
    b72d:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b731:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b735:	48 89 d6             	mov    rsi,rdx
    b738:	48 89 c7             	mov    rdi,rax
    b73b:	e8 30 70 ff ff       	call   2770 <strcpy@plt>
    b740:	eb 37                	jmp    b779 <load_fn_mem_map+0x108>
    b742:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b746:	ba 10 00 00 00       	mov    edx,0x10
    b74b:	be 00 00 00 00       	mov    esi,0x0
    b750:	48 89 c7             	mov    rdi,rax
    b753:	e8 48 6f ff ff       	call   26a0 <strtol@plt>
    b758:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b75b:	eb 1c                	jmp    b779 <load_fn_mem_map+0x108>
    b75d:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b761:	ba 10 00 00 00       	mov    edx,0x10
    b766:	be 00 00 00 00       	mov    esi,0x0
    b76b:	48 89 c7             	mov    rdi,rax
    b76e:	e8 2d 6f ff ff       	call   26a0 <strtol@plt>
    b773:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b776:	eb 01                	jmp    b779 <load_fn_mem_map+0x108>
    b778:	90                   	nop
    b779:	48 8d 35 39 29 00 00 	lea    rsi,[rip+0x2939]        # e0b9 <_IO_stdin_used+0x20b9>
    b780:	bf 00 00 00 00       	mov    edi,0x0
    b785:	e8 f6 6f ff ff       	call   2780 <strtok@plt>
    b78a:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b78e:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b792:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b797:	0f 85 76 ff ff ff    	jne    b713 <load_fn_mem_map+0xa2>
    b79d:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b7a0:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b7a3:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b7a7:	89 ce                	mov    esi,ecx
    b7a9:	48 89 c7             	mov    rdi,rax
    b7ac:	e8 52 fe ff ff       	call   b603 <add_fn>
    b7b1:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b7b5:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b7b9:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b7bd:	48 89 ce             	mov    rsi,rcx
    b7c0:	48 89 c7             	mov    rdi,rax
    b7c3:	e8 98 6f ff ff       	call   2760 <getline@plt>
    b7c8:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b7cc:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b7d1:	0f 85 ff fe ff ff    	jne    b6d6 <load_fn_mem_map+0x65>
    b7d7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b7db:	48 89 c7             	mov    rdi,rax
    b7de:	e8 cd 6f ff ff       	call   27b0 <fclose@plt>
    b7e3:	90                   	nop
    b7e4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b7e8:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b7ef:	00 00 
    b7f1:	74 05                	je     b7f8 <load_fn_mem_map+0x187>
    b7f3:	e8 48 6f ff ff       	call   2740 <__stack_chk_fail@plt>
    b7f8:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    b7fc:	c9                   	leave  
    b7fd:	c3                   	ret    

Disassembly of section .fini:

000000000000b800 <_fini>:
    b800:	f3 0f 1e fa          	endbr64 
    b804:	48 83 ec 08          	sub    rsp,0x8
    b808:	48 83 c4 08          	add    rsp,0x8
    b80c:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1d1160>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d50a5>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ed1bd3>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e1a31f9>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520d11ff>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9cf3a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x25654415>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a51446a>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f3332c8>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f5925>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250d1338>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e1a334d>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723d3353>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x7312136d>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e1a337e>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ed1d84>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f503c2a>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d4f7d>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744e34ed>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d4ff3>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e1a353d>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ed1f43>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	5c                   	pop    rsp
    c8e1:	77 ff                	ja     c8e2 <_IO_stdin_used+0x8e2>
    c8e3:	ff                   	(bad)  
    c8e4:	7f 7a                	jg     c960 <_IO_stdin_used+0x960>
    c8e6:	ff                   	(bad)  
    c8e7:	ff                   	(bad)  
    c8e8:	7f 7a                	jg     c964 <_IO_stdin_used+0x964>
    c8ea:	ff                   	(bad)  
    c8eb:	ff 6d 77             	jmp    FWORD PTR [rbp+0x77]
    c8ee:	ff                   	(bad)  
    c8ef:	ff                   	(bad)  
    c8f0:	da 78 ff             	fidivr DWORD PTR [rax-0x1]
    c8f3:	ff                   	(bad)  
    c8f4:	eb 78                	jmp    c96e <_IO_stdin_used+0x96e>
    c8f6:	ff                   	(bad)  
    c8f7:	ff                   	(bad)  
    c8f8:	7f 7a                	jg     c974 <_IO_stdin_used+0x974>
    c8fa:	ff                   	(bad)  
    c8fb:	ff                   	(bad)  
    c8fc:	7f 7a                	jg     c978 <_IO_stdin_used+0x978>
    c8fe:	ff                   	(bad)  
    c8ff:	ff 88 79 ff ff 99    	dec    DWORD PTR [rax-0x66000087]
    c905:	79 ff                	jns    c906 <_IO_stdin_used+0x906>
    c907:	ff e4                	jmp    rsp
    c909:	79 ff                	jns    c90a <_IO_stdin_used+0x90a>
    c90b:	ff f5                	push   rbp
    c90d:	79 ff                	jns    c90e <_IO_stdin_used+0x90e>
    c90f:	ff                   	(bad)  
    c910:	7f 7a                	jg     c98c <_IO_stdin_used+0x98c>
    c912:	ff                   	(bad)  
    c913:	ff 63 7a             	jmp    QWORD PTR [rbx+0x7a]
    c916:	ff                   	(bad)  
    c917:	ff 71 7a             	push   QWORD PTR [rcx+0x7a]
    c91a:	ff                   	(bad)  
    c91b:	ff                   	(bad)  
    c91c:	7c 77                	jl     c995 <_IO_stdin_used+0x995>
    c91e:	ff                   	(bad)  
    c91f:	ff 8d 77 ff ff 9e    	dec    DWORD PTR [rbp-0x61000089]
    c925:	77 ff                	ja     c926 <_IO_stdin_used+0x926>
    c927:	ff af 77 ff ff c0    	jmp    FWORD PTR [rdi-0x3f000089]
    c92d:	77 ff                	ja     c92e <_IO_stdin_used+0x92e>
    c92f:	ff d1                	call   rcx
    c931:	77 ff                	ja     c932 <_IO_stdin_used+0x932>
    c933:	ff e2                	jmp    rdx
    c935:	77 ff                	ja     c936 <_IO_stdin_used+0x936>
    c937:	ff f3                	push   rbx
    c939:	77 ff                	ja     c93a <_IO_stdin_used+0x93a>
    c93b:	ff 04 78             	inc    DWORD PTR [rax+rdi*2]
    c93e:	ff                   	(bad)  
    c93f:	ff 15 78 ff ff 23    	call   QWORD PTR [rip+0x23ffff78]        # 2400c8bd <_end+0x23ed18b5>
    c945:	78 ff                	js     c946 <_IO_stdin_used+0x946>
    c947:	ff 31                	push   QWORD PTR [rcx]
    c949:	78 ff                	js     c94a <_IO_stdin_used+0x94a>
    c94b:	ff                   	(bad)  
    c94c:	3f                   	(bad)  
    c94d:	78 ff                	js     c94e <_IO_stdin_used+0x94e>
    c94f:	ff 4d 78             	dec    DWORD PTR [rbp+0x78]
    c952:	ff                   	(bad)  
    c953:	ff 5b 78             	call   FWORD PTR [rbx+0x78]
    c956:	ff                   	(bad)  
    c957:	ff 69 78             	jmp    FWORD PTR [rcx+0x78]
    c95a:	ff                   	(bad)  
    c95b:	ff 00                	inc    DWORD PTR [rax]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x503619d6>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x641253de>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x731239af>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ed23db>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x49333a09>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533d3a17>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x52423a41>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x73123a45>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d4671>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x50361a96>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x6412549e>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x73123a6f>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x44423a9b>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e1a3ac2>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x483ac8>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a514d00>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e1a3b58>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ed255e>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e1a3b5c>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64125571>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755c1cb8>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f5a1cf9>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x4736730a>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ed2820>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	55                   	push   rbp
    ce22:	4e                   	rex.WRX
    ce23:	4e                   	rex.WRX
    ce24:	49                   	rex.WB
    ce25:	4e                   	rex.WRX
    ce26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce2e:	4f                   	rex.WRXB
    ce2f:	4e 53                	rex.WRX push rbx
    ce31:	54                   	push   rsp
    ce32:	52                   	push   rdx
    ce33:	41 54                	push   r12
    ce35:	49                   	rex.WB
    ce36:	4f                   	rex.WRXB
    ce37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce3b:	44                   	rex.R
    ce3c:	45                   	rex.RB
    ce3d:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce41:	55                   	push   rbp
    ce42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce45:	56                   	push   rsi
    ce46:	45 20 31             	and    BYTE PTR [r9],r14b
    ce49:	30 20                	xor    BYTE PTR [rax],ah
    ce4b:	53                   	push   rbx
    ce4c:	45                   	rex.RB
    ce4d:	43                   	rex.XB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e                   	rex.WRX
    ce50:	44 53                	rex.R push rbx
    ce52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce56:	41                   	rex.B
    ce57:	42                   	rex.X
    ce58:	4f 52                	rex.WRXB push r10
    ce5a:	54                   	push   rsp
    ce5b:	2e 00 00             	cs add BYTE PTR [rax],al
    ce5e:	00 00                	add    BYTE PTR [rax],al
    ce60:	52                   	push   rdx
    ce61:	55                   	push   rbp
    ce62:	4e                   	rex.WRX
    ce63:	4e                   	rex.WRX
    ce64:	49                   	rex.WB
    ce65:	4e                   	rex.WRX
    ce66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce6e:	54                   	push   rsp
    ce6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce72:	44                   	rex.R
    ce73:	45                   	rex.RB
    ce74:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce78:	55                   	push   rbp
    ce79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce7c:	56                   	push   rsi
    ce7d:	45 20 31             	and    BYTE PTR [r9],r14b
    ce80:	30 20                	xor    BYTE PTR [rax],ah
    ce82:	53                   	push   rbx
    ce83:	45                   	rex.RB
    ce84:	43                   	rex.XB
    ce85:	4f                   	rex.WRXB
    ce86:	4e                   	rex.WRX
    ce87:	44 53                	rex.R push rbx
    ce89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce8d:	41                   	rex.B
    ce8e:	42                   	rex.X
    ce8f:	4f 52                	rex.WRXB push r10
    ce91:	54                   	push   rsp
    ce92:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    ce96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ce9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ce9e:	67 75 6d             	addr32 jne cf0e <_IO_stdin_used+0xf0e>
    cea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cea3:	74 20                	je     cec5 <_IO_stdin_used+0xec5>
    cea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    ceaa:	70 64                	jo     cf10 <_IO_stdin_used+0xf10>
    ceac:	71 68                	jno    cf16 <_IO_stdin_used+0xf16>
    ceae:	74 65                	je     cf15 <_IO_stdin_used+0xf15>
    ceb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    ceb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ceb8:	76 69                	jbe    cf23 <_IO_stdin_used+0xf23>
    ceba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cec1:	79 2e 
    cec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ceca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cecb:	73 69                	jae    cf36 <_IO_stdin_used+0xf36>
    cecd:	73 68                	jae    cf37 <_IO_stdin_used+0xf37>
    cecf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ced5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cedc:	70 
    cedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    cede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee6:	79 20                	jns    cf08 <_IO_stdin_used+0xf08>
    cee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    ceef:	74 63                	je     cf54 <_IO_stdin_used+0xf54>
    cef1:	2f                   	(bad)  
    cef2:	76 69                	jbe    cf5d <_IO_stdin_used+0xf5d>
    cef4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cefb:	79 2e 
    cefd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf00:	66 29 00             	sub    WORD PTR [rax],ax
    cf03:	00 00                	add    BYTE PTR [rax],al
    cf05:	00 00                	add    BYTE PTR [rax],al
    cf07:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cf0a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf0b:	69 73 68 65 64 20 6c 	imul   esi,DWORD PTR [rbx+0x68],0x6c206465
    cf12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf13:	61                   	(bad)  
    cf14:	64 69 6e 67 20 43 53 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x56534320
    cf1b:	56 
    cf1c:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    cf1f:	70 20                	jo     cf41 <_IO_stdin_used+0xf41>
    cf21:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    cf24:	68 65 00 00 46       	push   0x46000065
    cf29:	61                   	(bad)  
    cf2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    cf31:	20 
    cf32:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf34:	61                   	(bad)  
    cf35:	64 20 43 53          	and    BYTE PTR fs:[rbx+0x53],al
    cf39:	56                   	push   rsi
    cf3a:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    cf3d:	70 20                	jo     cf5f <_IO_stdin_used+0xf5f>
    cf3f:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    cf42:	68 65 28 6e 6f       	push   0x6f6e2865
    cf47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf48:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    cf4b:	69 74 69 63 61 6c 20 	imul   esi,DWORD PTR [rcx+rbp*2+0x63],0x65206c61
    cf52:	65 
    cf53:	72 72                	jb     cfc7 <_IO_stdin_used+0xfc7>
    cf55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf56:	72 29                	jb     cf81 <_IO_stdin_used+0xf81>
    cf58:	00 2f                	add    BYTE PTR [rdi],ch
    cf5a:	65 74 63             	gs je  cfc0 <_IO_stdin_used+0xfc0>
    cf5d:	2f                   	(bad)  
    cf5e:	76 69                	jbe    cfc9 <_IO_stdin_used+0xfc9>
    cf60:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf67:	69 6c 
    cf69:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    cf6d:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf71:	72 73                	jb     cfe6 <_IO_stdin_used+0xfe6>
    cf73:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf78:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf79:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf7e:	65 73 00             	gs jae cf81 <_IO_stdin_used+0xf81>
    cf81:	00 00                	add    BYTE PTR [rax],al
    cf83:	00 00                	add    BYTE PTR [rax],al
    cf85:	00 00                	add    BYTE PTR [rax],al
    cf87:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf8a:	47                   	rex.RXB
    cf8b:	49                   	rex.WB
    cf8c:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf91:	74 65                	je     cff8 <_IO_stdin_used+0xff8>
    cf93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf94:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf9b:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cfa2:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cfa5:	25 73 0a 00 70       	and    eax,0x70000a73
    cfaa:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cfad:	5f                   	pop    rdi
    cfae:	6d                   	ins    DWORD PTR es:[rdi],dx
    cfaf:	67 72 20             	addr32 jb cfd2 <_IO_stdin_used+0xfd2>
    cfb2:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cfb9:	5f                   	pop    rdi
    cfba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cfbb:	70 65                	jo     d022 <_IO_stdin_used+0x1022>
    cfbd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cfbe:	5f                   	pop    rdi
    cfbf:	6c                   	ins    BYTE PTR es:[rdi],dx
    cfc0:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cfc7:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cfca:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cfce:	70 74                	jo     d044 <_IO_stdin_used+0x1044>
    cfd0:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cfd5:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cfd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cfda:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cfe0:	72 76                	jb     d058 <_IO_stdin_used+0x1058>
    cfe2:	65 72 20             	gs jb  d005 <_IO_stdin_used+0x1005>
    cfe5:	73 74                	jae    d05b <_IO_stdin_used+0x105b>
    cfe7:	61                   	(bad)  
    cfe8:	72 74                	jb     d05e <_IO_stdin_used+0x105e>
    cfea:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cfee:	31 32                	xor    DWORD PTR [rdx],esi
    cff0:	37                   	(bad)  
    cff1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    cff4:	30 2e                	xor    BYTE PTR [rsi],ch
    cff6:	31 3a                	xor    DWORD PTR [rdx],edi
    cff8:	36 34 31             	ss xor al,0x31
    cffb:	00 b1 99 ff ff ee    	add    BYTE PTR [rcx-0x11000067],dh
    d001:	99                   	cdq    
    d002:	ff                   	(bad)  
    d003:	ff 2c 9a             	jmp    FWORD PTR [rdx+rbx*4]
    d006:	ff                   	(bad)  
    d007:	ff 2c 9a             	jmp    FWORD PTR [rdx+rbx*4]
    d00a:	ff                   	(bad)  
    d00b:	ff                   	(bad)  
    d00c:	bd 99 ff ff cc       	mov    ebp,0xccffff99
    d011:	99                   	cdq    
    d012:	ff                   	(bad)  
    d013:	ff 2c 9a             	jmp    FWORD PTR [rdx+rbx*4]
    d016:	ff                   	(bad)  
    d017:	ff 2c 9a             	jmp    FWORD PTR [rdx+rbx*4]
    d01a:	ff                   	(bad)  
    d01b:	ff 2c 9a             	jmp    FWORD PTR [rdx+rbx*4]
    d01e:	ff                   	(bad)  
    d01f:	ff 2c 9a             	jmp    FWORD PTR [rdx+rbx*4]
    d022:	ff                   	(bad)  
    d023:	ff 2c 9a             	jmp    FWORD PTR [rdx+rbx*4]
    d026:	ff                   	(bad)  
    d027:	ff 2c 9a             	jmp    FWORD PTR [rdx+rbx*4]
    d02a:	ff                   	(bad)  
    d02b:	ff                   	(bad)  
    d02c:	dc 99 ff ff e5 99    	fcomp  QWORD PTR [rcx-0x661a0001]
    d032:	ff                   	(bad)  
    d033:	ff 2c 9a             	jmp    FWORD PTR [rdx+rbx*4]
    d036:	ff                   	(bad)  
    d037:	ff 2c 9a             	jmp    FWORD PTR [rdx+rbx*4]
    d03a:	ff                   	(bad)  
    d03b:	ff 0d 9a ff ff 0a    	dec    DWORD PTR [rip+0xaffff9a]        # b00cfdb <_end+0xaed1fd3>
    d041:	43 61                	rex.XB (bad) 
    d043:	75 67                	jne    d0ac <_IO_stdin_used+0x10ac>
    d045:	68 74 20 73 69       	push   0x69732074
    d04a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    d04c:	61                   	(bad)  
    d04d:	6c                   	ins    BYTE PTR es:[rdi],dx
    d04e:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f0b8 <_end+0x744e40b0>
    d054:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fccd <_end+0x650d4cc5>
    d05a:	78 69                	js     d0c5 <_IO_stdin_used+0x10c5>
    d05c:	74 69                	je     d0c7 <_IO_stdin_used+0x10c7>
    d05e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d05f:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    d065:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d069:	61                   	(bad)  
    d06a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d06b:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d06e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d071:	74 73                	je     d0e6 <_IO_stdin_used+0x10e6>
    d073:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d076:	75 67                	jne    d0df <_IO_stdin_used+0x10df>
    d078:	68 74 3a 20 25       	push   0x25203a74
    d07d:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d080:	53                   	push   rbx
    d081:	74 61                	je     d0e4 <_IO_stdin_used+0x10e4>
    d083:	74 69                	je     d0ee <_IO_stdin_used+0x10ee>
    d085:	73 74                	jae    d0fb <_IO_stdin_used+0x10fb>
    d087:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d08e:	61                   	(bad)  
    d08f:	64 64 72 65          	fs fs jb d0f8 <_IO_stdin_used+0x10f8>
    d093:	73 73                	jae    d108 <_IO_stdin_used+0x1108>
    d095:	20 20                	and    BYTE PTR [rax],ah
    d097:	20 20                	and    BYTE PTR [rax],ah
    d099:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d09b:	75 6e                	jne    d10b <_IO_stdin_used+0x110b>
    d09d:	74 0a                	je     d0a9 <_IO_stdin_used+0x10a9>
    d09f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0a4:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0a9:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d0ae:	2d 2d 00 00 00       	sub    eax,0x2d
    d0b3:	00 00                	add    BYTE PTR [rax],al
    d0b5:	00 00                	add    BYTE PTR [rax],al
    d0b7:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909db30 <_end+0x8f62b28>
    d0bd:	74 6f                	je     d12e <_IO_stdin_used+0x112e>
    d0bf:	74 61                	je     d122 <_IO_stdin_used+0x1122>
    d0c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0c2:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d0c5:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d0c8:	74 73                	je     d13d <_IO_stdin_used+0x113d>
    d0ca:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f5f0 <_end+0xa5145e8>
    d0d0:	09 09                	or     DWORD PTR [rcx],ecx
    d0d2:	74 6f                	je     d143 <_IO_stdin_used+0x1143>
    d0d4:	74 61                	je     d137 <_IO_stdin_used+0x1137>
    d0d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0d7:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0db:	74 20                	je     d0fd <_IO_stdin_used+0x10fd>
    d0dd:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0e2:	09 09                	or     DWORD PTR [rcx],ecx
    d0e4:	74 6f                	je     d155 <_IO_stdin_used+0x1155>
    d0e6:	74 61                	je     d149 <_IO_stdin_used+0x1149>
    d0e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    d0e9:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0ec:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0ef:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0f4:	09 09                	or     DWORD PTR [rcx],ecx
    d0f6:	54                   	push   rsp
    d0f7:	43 50                	rex.XB push r8
    d0f9:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0fd:	74 20                	je     d11f <_IO_stdin_used+0x111f>
    d0ff:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d104:	09 09                	or     DWORD PTR [rcx],ecx
    d106:	54                   	push   rsp
    d107:	43 50                	rex.XB push r8
    d109:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d10c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d10f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d114:	09 09                	or     DWORD PTR [rcx],ecx
    d116:	55                   	push   rbp
    d117:	44 50                	rex.R push rax
    d119:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d11c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d11d:	74 20                	je     d13f <_IO_stdin_used+0x113f>
    d11f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d124:	09 09                	or     DWORD PTR [rcx],ecx
    d126:	55                   	push   rbp
    d127:	44 50                	rex.R push rax
    d129:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d12c:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d12f:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d134:	09 09                	or     DWORD PTR [rcx],ecx
    d136:	49                   	rex.WB
    d137:	43                   	rex.XB
    d138:	4d 50                	rex.WRB push r8
    d13a:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d13d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d13e:	74 20                	je     d160 <_IO_stdin_used+0x1160>
    d140:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d145:	09 09                	or     DWORD PTR [rcx],ecx
    d147:	49                   	rex.WB
    d148:	43                   	rex.XB
    d149:	4d 50                	rex.WRB push r8
    d14b:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d14e:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d151:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d156:	0a 00                	or     al,BYTE PTR [rax]
    d158:	77 00                	ja     d15a <_IO_stdin_used+0x115a>
    d15a:	2f                   	(bad)  
    d15b:	75 73                	jne    d1d0 <_IO_stdin_used+0x11d0>
    d15d:	72 2f                	jb     d18e <_IO_stdin_used+0x118e>
    d15f:	73 68                	jae    d1c9 <_IO_stdin_used+0x11c9>
    d161:	61                   	(bad)  
    d162:	72 65                	jb     d1c9 <_IO_stdin_used+0x11c9>
    d164:	2f                   	(bad)  
    d165:	76 69                	jbe    d1d0 <_IO_stdin_used+0x11d0>
    d167:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d16e:	63 61 
    d170:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d173:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d177:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d17a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d17b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d17c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d17d:	74 20                	je     d19f <_IO_stdin_used+0x119f>
    d17f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d180:	70 65                	jo     d1e7 <_IO_stdin_used+0x11e7>
    d182:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d183:	20 2f                	and    BYTE PTR [rdi],ch
    d185:	75 73                	jne    d1fa <_IO_stdin_used+0x11fa>
    d187:	72 2f                	jb     d1b8 <_IO_stdin_used+0x11b8>
    d189:	73 68                	jae    d1f3 <_IO_stdin_used+0x11f3>
    d18b:	61                   	(bad)  
    d18c:	72 65                	jb     d1f3 <_IO_stdin_used+0x11f3>
    d18e:	2f                   	(bad)  
    d18f:	76 69                	jbe    d1fa <_IO_stdin_used+0x11fa>
    d191:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d198:	63 61 
    d19a:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d19d:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d1a1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1a3:	70 72                	jo     d217 <_IO_stdin_used+0x1217>
    d1a5:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d1ac:	61                   	(bad)  
    d1ad:	72 70                	jb     d21f <_IO_stdin_used+0x121f>
    d1af:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d1b2:	68 65 20 74 6f       	push   0x6f742065
    d1b7:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d1ba:	72 65                	jb     d221 <_IO_stdin_used+0x1221>
    d1bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d1be:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df237 <_end+0x3e1a422f>
    d1c4:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dc3d <_end+0x24ed2c35>
    d1ca:	73 2c                	jae    d1f8 <_IO_stdin_used+0x11f8>
    d1cc:	25 73 0a 00 31       	and    eax,0x31000a73
    d1d1:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d1d4:	30 00                	xor    BYTE PTR [rax],al
    d1d6:	00 00                	add    BYTE PTR [rax],al
    d1d8:	56                   	push   rsi
    d1d9:	49                   	rex.WB
    d1da:	47                   	rex.RXB
    d1db:	49                   	rex.WB
    d1dc:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d1e0:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc5a <_end+0x2cf62c52>
    d1e7:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d1ea:	64 65 62             	fs gs (bad) 
    d1ed:	75 67                	jne    d256 <_IO_stdin_used+0x1256>
    d1ef:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d1f2:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d1f6:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1fb:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d202:	74 68                	je     d26c <_IO_stdin_used+0x126c>
    d204:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d20b:	61                   	(bad)  
    d20c:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d210:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d215:	66 61                	data16 (bad) 
    d217:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d21a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d21c:	73 65                	jae    d283 <_IO_stdin_used+0x1283>
    d21e:	74 20                	je     d240 <_IO_stdin_used+0x1240>
    d220:	74 68                	je     d28a <_IO_stdin_used+0x128a>
    d222:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d226:	74 65                	je     d28d <_IO_stdin_used+0x128d>
    d228:	72 66                	jb     d290 <_IO_stdin_used+0x1290>
    d22a:	61                   	(bad)  
    d22b:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d22e:	74 6f                	je     d29f <_IO_stdin_used+0x129f>
    d230:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d234:	74 65                	je     d29b <_IO_stdin_used+0x129b>
    d236:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d237:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d23a:	0a 09                	or     cl,BYTE PTR [rcx]
    d23c:	2d 70 20 70 72       	sub    eax,0x72702070
    d241:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d248:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d24c:	0a 09                	or     cl,BYTE PTR [rcx]
    d24e:	2d 71 20 65 78       	sub    eax,0x78652071
    d253:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d25a:	74 
    d25b:	6c                   	ins    BYTE PTR es:[rdi],dx
    d25c:	79 0a                	jns    d268 <_IO_stdin_used+0x1268>
    d25e:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d261:	00 2f                	add    BYTE PTR [rdi],ch
    d263:	70 72                	jo     d2d7 <_IO_stdin_used+0x12d7>
    d265:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d266:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d268:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d26b:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d272:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d275:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d278:	6d                   	ins    DWORD PTR es:[rdi],dx
    d279:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d27d:	75 6e                	jne    d2ed <_IO_stdin_used+0x12ed>
    d27f:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f2ea <_end+0x705042e2>
    d286:	75 73                	jne    d2fb <_IO_stdin_used+0x12fb>
    d288:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d28a:	25 73 00 00 00       	and    eax,0x73
    d28f:	00 e2                	add    dl,ah
    d291:	96                   	xchg   esi,eax
    d292:	88 e2                	mov    dl,ah
    d294:	96                   	xchg   esi,eax
    d295:	88 e2                	mov    dl,ah
    d297:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d29e:	88 e2                	mov    dl,ah
    d2a0:	96                   	xchg   esi,eax
    d2a1:	88 e2                	mov    dl,ah
    d2a3:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2aa:	88 e2                	mov    dl,ah
    d2ac:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d2b3:	96                   	xchg   esi,eax
    d2b4:	88 e2                	mov    dl,ah
    d2b6:	96                   	xchg   esi,eax
    d2b7:	88 e2                	mov    dl,ah
    d2b9:	96                   	xchg   esi,eax
    d2ba:	88 e2                	mov    dl,ah
    d2bc:	96                   	xchg   esi,eax
    d2bd:	88 e2                	mov    dl,ah
    d2bf:	96                   	xchg   esi,eax
    d2c0:	88 e2                	mov    dl,ah
    d2c2:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d2c9:	96                   	xchg   esi,eax
    d2ca:	88 e2                	mov    dl,ah
    d2cc:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2d3:	88 0a                	mov    BYTE PTR [rdx],cl
    d2d5:	e2 96                	loop   d26d <_IO_stdin_used+0x126d>
    d2d7:	88 e2                	mov    dl,ah
    d2d9:	96                   	xchg   esi,eax
    d2da:	88 e2                	mov    dl,ah
    d2dc:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2e3:	88 e2                	mov    dl,ah
    d2e5:	96                   	xchg   esi,eax
    d2e6:	88 e2                	mov    dl,ah
    d2e8:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2ef:	88 e2                	mov    dl,ah
    d2f1:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2f8:	88 e2                	mov    dl,ah
    d2fa:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d301:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d307:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d30d:	96                   	xchg   esi,eax
    d30e:	88 e2                	mov    dl,ah
    d310:	96                   	xchg   esi,eax
    d311:	88 e2                	mov    dl,ah
    d313:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d31a:	88 0a                	mov    BYTE PTR [rdx],cl
    d31c:	e2 96                	loop   d2b4 <_IO_stdin_used+0x12b4>
    d31e:	88 e2                	mov    dl,ah
    d320:	96                   	xchg   esi,eax
    d321:	88 e2                	mov    dl,ah
    d323:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d32a:	88 e2                	mov    dl,ah
    d32c:	96                   	xchg   esi,eax
    d32d:	88 e2                	mov    dl,ah
    d32f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d336:	88 e2                	mov    dl,ah
    d338:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d33f:	88 e2                	mov    dl,ah
    d341:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d348:	e2 96                	loop   d2e0 <_IO_stdin_used+0x12e0>
    d34a:	88 e2                	mov    dl,ah
    d34c:	96                   	xchg   esi,eax
    d34d:	88 e2                	mov    dl,ah
    d34f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d356:	88 e2                	mov    dl,ah
    d358:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d35f:	88 0a                	mov    BYTE PTR [rdx],cl
    d361:	e2 80                	loop   d2e3 <_IO_stdin_used+0x12e3>
    d363:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d369:	88 e2                	mov    dl,ah
    d36b:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d372:	96                   	xchg   esi,eax
    d373:	88 e2                	mov    dl,ah
    d375:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d37c:	88 e2                	mov    dl,ah
    d37e:	96                   	xchg   esi,eax
    d37f:	88 e2                	mov    dl,ah
    d381:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d388:	88 e2                	mov    dl,ah
    d38a:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d391:	88 e2                	mov    dl,ah
    d393:	96                   	xchg   esi,eax
    d394:	88 e2                	mov    dl,ah
    d396:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d39d:	88 e2                	mov    dl,ah
    d39f:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3a6:	88 0a                	mov    BYTE PTR [rdx],cl
    d3a8:	20 e2                	and    dl,ah
    d3aa:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3b1:	88 e2                	mov    dl,ah
    d3b3:	96                   	xchg   esi,eax
    d3b4:	88 e2                	mov    dl,ah
    d3b6:	96                   	xchg   esi,eax
    d3b7:	88 e2                	mov    dl,ah
    d3b9:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d3c0:	96                   	xchg   esi,eax
    d3c1:	88 e2                	mov    dl,ah
    d3c3:	96                   	xchg   esi,eax
    d3c4:	88 e2                	mov    dl,ah
    d3c6:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3cd:	88 e2                	mov    dl,ah
    d3cf:	96                   	xchg   esi,eax
    d3d0:	88 e2                	mov    dl,ah
    d3d2:	96                   	xchg   esi,eax
    d3d3:	88 e2                	mov    dl,ah
    d3d5:	96                   	xchg   esi,eax
    d3d6:	88 e2                	mov    dl,ah
    d3d8:	96                   	xchg   esi,eax
    d3d9:	88 e2                	mov    dl,ah
    d3db:	96                   	xchg   esi,eax
    d3dc:	88 e2                	mov    dl,ah
    d3de:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d3e5:	88 e2                	mov    dl,ah
    d3e7:	96                   	xchg   esi,eax
    d3e8:	88 e2                	mov    dl,ah
    d3ea:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d3f1:	88 e2                	mov    dl,ah
    d3f3:	96                   	xchg   esi,eax
    d3f4:	88 e2                	mov    dl,ah
    d3f6:	96                   	xchg   esi,eax
    d3f7:	88 e2                	mov    dl,ah
    d3f9:	96                   	xchg   esi,eax
    d3fa:	88 e2                	mov    dl,ah
    d3fc:	96                   	xchg   esi,eax
    d3fd:	88 e2                	mov    dl,ah
    d3ff:	96                   	xchg   esi,eax
    d400:	88 00                	mov    BYTE PTR [rax],al
    d402:	00 00                	add    BYTE PTR [rax],al
    d404:	00 00                	add    BYTE PTR [rax],al
    d406:	00 00                	add    BYTE PTR [rax],al
    d408:	0a 00                	or     al,BYTE PTR [rax]
    d40a:	0d 00 00 00 00       	or     eax,0x0
    d40f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d412:	68 5f 73 65 72       	push   0x7265735f
    d417:	76 65                	jbe    d47e <_IO_stdin_used+0x147e>
    d419:	72 2e                	jb     d449 <_IO_stdin_used+0x1449>
    d41b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d41d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d420:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d427:	20 
    d428:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d42b:	61                   	(bad)  
    d42c:	74 65                	je     d493 <_IO_stdin_used+0x1493>
    d42e:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d431:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d434:	74 00                	je     d436 <_IO_stdin_used+0x1436>
    d436:	00 00                	add    BYTE PTR [rax],al
    d438:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d439:	73 68                	jae    d4a3 <_IO_stdin_used+0x14a3>
    d43b:	5f                   	pop    rdi
    d43c:	73 65                	jae    d4a3 <_IO_stdin_used+0x14a3>
    d43e:	72 76                	jb     d4b6 <_IO_stdin_used+0x14b6>
    d440:	65 72 2e             	gs jb  d471 <_IO_stdin_used+0x1471>
    d443:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d445:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d448:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d44f:	6e 
    d450:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d453:	74 73                	je     d4c8 <_IO_stdin_used+0x14c8>
    d455:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d456:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d459:	70 74                	jo     d4cf <_IO_stdin_used+0x14cf>
    d45b:	00 00                	add    BYTE PTR [rax],al
    d45d:	00 00                	add    BYTE PTR [rax],al
    d45f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d462:	68 5f 73 65 72       	push   0x7265735f
    d467:	76 65                	jbe    d4ce <_IO_stdin_used+0x14ce>
    d469:	72 2e                	jb     d499 <_IO_stdin_used+0x1499>
    d46b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d46d:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d470:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d471:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d478:	20 
    d479:	73 6f                	jae    d4ea <_IO_stdin_used+0x14ea>
    d47b:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d47e:	74 20                	je     d4a0 <_IO_stdin_used+0x14a0>
    d480:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d482:	72 20                	jb     d4a4 <_IO_stdin_used+0x14a4>
    d484:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d485:	73 68                	jae    d4ef <_IO_stdin_used+0x14ef>
    d487:	5f                   	pop    rdi
    d488:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d48d:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d494:	00 
    d495:	00 00                	add    BYTE PTR [rax],al
    d497:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d49a:	68 5f 73 65 72       	push   0x7265735f
    d49f:	76 65                	jbe    d506 <_IO_stdin_used+0x1506>
    d4a1:	72 2e                	jb     d4d1 <_IO_stdin_used+0x14d1>
    d4a3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d4a5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d4a8:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d4af:	6e 
    d4b0:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d4b4:	74 65                	je     d51b <_IO_stdin_used+0x151b>
    d4b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4b7:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d4be:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d4c1:	68 5f 66 64 00       	push   0x64665f
    d4c6:	00 00                	add    BYTE PTR [rax],al
    d4c8:	46 61                	rex.RX (bad) 
    d4ca:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d4d1:	6f 
    d4d2:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d4d5:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d4d8:	74 20                	je     d4fa <_IO_stdin_used+0x14fa>
    d4da:	61                   	(bad)  
    d4db:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d4de:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d4e5:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df5e <_end+0x2fed2f56>
    d4eb:	78 25                	js     d512 <_IO_stdin_used+0x1512>
    d4ed:	30 32                	xor    BYTE PTR [rdx],dh
    d4ef:	78 0a                	js     d4fb <_IO_stdin_used+0x14fb>
    d4f1:	00 00                	add    BYTE PTR [rax],al
    d4f3:	00 00                	add    BYTE PTR [rax],al
    d4f5:	00 00                	add    BYTE PTR [rax],al
    d4f7:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4fa:	00 00                	add    BYTE PTR [rax],al
    d4fc:	00 00                	add    BYTE PTR [rax],al
    d4fe:	00 00                	add    BYTE PTR [rax],al
    d500:	42 61                	rex.X (bad) 
    d502:	73 69                	jae    d56d <_IO_stdin_used+0x156d>
    d504:	63 20                	movsxd esp,DWORD PTR [rax]
    d506:	70 6f                	jo     d577 <_IO_stdin_used+0x1577>
    d508:	72 74                	jb     d57e <_IO_stdin_used+0x157e>
    d50a:	73 63                	jae    d56f <_IO_stdin_used+0x156f>
    d50c:	61                   	(bad)  
    d50d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d50e:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d512:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d517:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d51a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d51b:	6d                   	ins    DWORD PTR es:[rdi],dx
    d51c:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d51f:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d522:	64 72 65             	fs jb  d58a <_IO_stdin_used+0x158a>
    d525:	73 73                	jae    d59a <_IO_stdin_used+0x159a>
    d527:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfa0 <_IO_stdin_used+0x1fa0>
    d52d:	00 00                	add    BYTE PTR [rax],al
    d52f:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d532:	72 74                	jb     d5a8 <_IO_stdin_used+0x15a8>
    d534:	73 63                	jae    d599 <_IO_stdin_used+0x1599>
    d536:	61                   	(bad)  
    d537:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d538:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d53c:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d541:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d544:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d545:	6d                   	ins    DWORD PTR es:[rdi],dx
    d546:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5bf <_end+0x744e45b7>
    d54c:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dfc5 <_IO_stdin_used+0x1fc5>
    d552:	00 00                	add    BYTE PTR [rax],al
    d554:	00 00                	add    BYTE PTR [rax],al
    d556:	00 00                	add    BYTE PTR [rax],al
    d558:	46                   	rex.RX
    d559:	49                   	rex.WB
    d55a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d55e:	72 74                	jb     d5d4 <_IO_stdin_used+0x15d4>
    d560:	73 63                	jae    d5c5 <_IO_stdin_used+0x15c5>
    d562:	61                   	(bad)  
    d563:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d564:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d568:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d56d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d570:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d571:	6d                   	ins    DWORD PTR es:[rdi],dx
    d572:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d575:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d578:	64 72 65             	fs jb  d5e0 <_IO_stdin_used+0x15e0>
    d57b:	73 73                	jae    d5f0 <_IO_stdin_used+0x15f0>
    d57d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # dff6 <_IO_stdin_used+0x1ff6>
    d583:	00 00                	add    BYTE PTR [rax],al
    d585:	00 00                	add    BYTE PTR [rax],al
    d587:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d58a:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d58e:	72 74                	jb     d604 <_IO_stdin_used+0x1604>
    d590:	73 63                	jae    d5f5 <_IO_stdin_used+0x15f5>
    d592:	61                   	(bad)  
    d593:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d594:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d598:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d59d:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d5a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5a1:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5a2:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f61b <_end+0x744e4613>
    d5a8:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000e021 <_end+0x2fed3019>
    d5ae:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d5b1:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b3:	31 00                	xor    DWORD PTR [rax],eax
    d5b5:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b7:	30 2e                	xor    BYTE PTR [rsi],ch
    d5b9:	30 2e                	xor    BYTE PTR [rsi],ch
    d5bb:	31 00                	xor    DWORD PTR [rax],eax
    d5bd:	00 00                	add    BYTE PTR [rax],al
    d5bf:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d5c2:	70 20                	jo     d5e4 <_IO_stdin_used+0x15e4>
    d5c4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d5c6:	74 72                	je     d63a <_IO_stdin_used+0x163a>
    d5c8:	79 20                	jns    d5ea <_IO_stdin_used+0x15ea>
    d5ca:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d5cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5ce:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d5d4:	72 20                	jb     d5f6 <_IO_stdin_used+0x15f6>
    d5d6:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d5dd:	65 73 73             	gs jae d653 <_IO_stdin_used+0x1653>
    d5e0:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211059 <_end+0x770d6051>
    d5e6:	61                   	(bad)  
    d5e7:	73 20                	jae    d609 <_IO_stdin_used+0x1609>
    d5e9:	25 73 20 69 73       	and    eax,0x73692073
    d5ee:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d5f1:	77 20                	ja     d613 <_IO_stdin_used+0x1613>
    d5f3:	25 73 00 72 00       	and    eax,0x720073
    d5f8:	2f                   	(bad)  
    d5f9:	75 73                	jne    d66e <_IO_stdin_used+0x166e>
    d5fb:	72 2f                	jb     d62c <_IO_stdin_used+0x162c>
    d5fd:	73 68                	jae    d667 <_IO_stdin_used+0x1667>
    d5ff:	61                   	(bad)  
    d600:	72 65                	jb     d667 <_IO_stdin_used+0x1667>
    d602:	2f                   	(bad)  
    d603:	76 69                	jbe    d66e <_IO_stdin_used+0x166e>
    d605:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d60c:	63 61 
    d60e:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d611:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d615:	00 00                	add    BYTE PTR [rax],al
    d617:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d61a:	75 6c                	jne    d688 <_IO_stdin_used+0x1688>
    d61c:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d620:	74 20                	je     d642 <_IO_stdin_used+0x1642>
    d622:	6c                   	ins    BYTE PTR es:[rdi],dx
    d623:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d624:	61                   	(bad)  
    d625:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d629:	70 20                	jo     d64b <_IO_stdin_used+0x164b>
    d62b:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d62e:	68 65 20 66 72       	push   0x72662065
    d633:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d634:	6d                   	ins    DWORD PTR es:[rdi],dx
    d635:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d639:	61                   	(bad)  
    d63a:	62 61                	(bad)  
    d63c:	73 65                	jae    d6a3 <_IO_stdin_used+0x16a3>
    d63e:	2c 20                	sub    al,0x20
    d640:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d647:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d648:	65 78 69             	gs js  d6b4 <_IO_stdin_used+0x16b4>
    d64b:	73 74                	jae    d6c1 <_IO_stdin_used+0x16c1>
    d64d:	61                   	(bad)  
    d64e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d64f:	74 00                	je     d651 <_IO_stdin_used+0x1651>
    d651:	0a 00                	or     al,BYTE PTR [rax]
    d653:	2c 00                	sub    al,0x0
    d655:	00 00                	add    BYTE PTR [rax],al
    d657:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d65b:	20 31                	and    BYTE PTR [rcx],dh
    d65d:	2e 30 20             	cs xor BYTE PTR [rax],ah
    d660:	44                   	rex.R
    d661:	41 54                	push   r12
    d663:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d666:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d66a:	20 31                	and    BYTE PTR [rcx],dh
    d66c:	2e 32 20             	cs xor ah,BYTE PTR [rax]
    d66f:	44                   	rex.R
    d670:	41 54                	push   r12
    d672:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d675:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d679:	20 31                	and    BYTE PTR [rcx],dh
    d67b:	2e 33 20             	cs xor esp,DWORD PTR [rax]
    d67e:	44                   	rex.R
    d67f:	41 54                	push   r12
    d681:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d684:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d687:	69 65 6e 74 20 48 65 	imul   esp,DWORD PTR [rbp+0x6e],0x65482074
    d68e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d68f:	6c                   	ins    BYTE PTR es:[rdi],dx
    d690:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d691:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    d694:	72 76                	jb     d70c <_IO_stdin_used+0x170c>
    d696:	65 72 20             	gs jb  d6b9 <_IO_stdin_used+0x16b9>
    d699:	48                   	rex.W
    d69a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d69c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d69d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d69e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d6a1:	77 20                	ja     d6c3 <_IO_stdin_used+0x16c3>
    d6a3:	53                   	push   rbx
    d6a4:	65 73 73             	gs jae d71a <_IO_stdin_used+0x171a>
    d6a7:	69 6f 6e 20 54 69 63 	imul   ebp,DWORD PTR [rdi+0x6e],0x63695420
    d6ae:	6b 65 74 00          	imul   esp,DWORD PTR [rbp+0x74],0x0
    d6b2:	43                   	rex.XB
    d6b3:	65 72 74             	gs jb  d72a <_IO_stdin_used+0x172a>
    d6b6:	69 66 69 63 61 74 65 	imul   esp,DWORD PTR [rsi+0x69],0x65746163
    d6bd:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d6c0:	69 65 6e 74 20 4b 65 	imul   esp,DWORD PTR [rbp+0x6e],0x654b2074
    d6c7:	78 00                	js     d6c9 <_IO_stdin_used+0x16c9>
    d6c9:	00 00                	add    BYTE PTR [rax],al
    d6cb:	00 78 aa             	add    BYTE PTR [rax-0x56],bh
    d6ce:	ff                   	(bad)  
    d6cf:	ff                   	(bad)  
    d6d0:	dc a9 ff ff f5 a9    	fsubr  QWORD PTR [rcx-0x560a0001]
    d6d6:	ff                   	(bad)  
    d6d7:	ff                   	(bad)  
    d6d8:	78 aa                	js     d684 <_IO_stdin_used+0x1684>
    d6da:	ff                   	(bad)  
    d6db:	ff 16                	call   QWORD PTR [rsi]
    d6dd:	aa                   	stos   BYTE PTR es:[rdi],al
    d6de:	ff                   	(bad)  
    d6df:	ff                   	(bad)  
    d6e0:	78 aa                	js     d68c <_IO_stdin_used+0x168c>
    d6e2:	ff                   	(bad)  
    d6e3:	ff                   	(bad)  
    d6e4:	78 aa                	js     d690 <_IO_stdin_used+0x1690>
    d6e6:	ff                   	(bad)  
    d6e7:	ff                   	(bad)  
    d6e8:	78 aa                	js     d694 <_IO_stdin_used+0x1694>
    d6ea:	ff                   	(bad)  
    d6eb:	ff                   	(bad)  
    d6ec:	78 aa                	js     d698 <_IO_stdin_used+0x1698>
    d6ee:	ff                   	(bad)  
    d6ef:	ff                   	(bad)  
    d6f0:	78 aa                	js     d69c <_IO_stdin_used+0x169c>
    d6f2:	ff                   	(bad)  
    d6f3:	ff 58 aa             	call   FWORD PTR [rax-0x56]
    d6f6:	ff                   	(bad)  
    d6f7:	ff 37                	push   QWORD PTR [rdi]
    d6f9:	aa                   	stos   BYTE PTR es:[rdi],al
    d6fa:	ff                   	(bad)  
    d6fb:	ff 00                	inc    DWORD PTR [rax]
    d6fd:	00 00                	add    BYTE PTR [rax],al
    d6ff:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d702:	64 61                	fs (bad) 
    d704:	74 69                	je     d76f <_IO_stdin_used+0x176f>
    d706:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d707:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d70c:	53                   	push   rbx
    d70d:	51                   	push   rcx
    d70e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d70f:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d716:	6f 
    d717:	72 3a                	jb     d753 <_IO_stdin_used+0x1753>
    d719:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e192 <__GNU_EH_FRAME_HDR+0xd6>
    d71f:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d722:	53                   	push   rbx
    d723:	45 52                	rex.RB push r10
    d725:	54                   	push   rsp
    d726:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d729:	54                   	push   rsp
    d72a:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d72e:	70 5f                	jo     d78f <_IO_stdin_used+0x178f>
    d730:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d733:	68 65 20 28 69       	push   0x69282065
    d738:	70 5f                	jo     d799 <_IO_stdin_used+0x1799>
    d73a:	61                   	(bad)  
    d73b:	64 64 72 65          	fs fs jb d7a4 <_IO_stdin_used+0x17a4>
    d73f:	73 73                	jae    d7b4 <_IO_stdin_used+0x17b4>
    d741:	2c 20                	sub    al,0x20
    d743:	6d                   	ins    DWORD PTR es:[rdi],dx
    d744:	61                   	(bad)  
    d745:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d748:	64 64 72 65          	fs fs jb d7b1 <_IO_stdin_used+0x17b1>
    d74c:	73 73                	jae    d7c1 <_IO_stdin_used+0x17c1>
    d74e:	29 20                	sub    DWORD PTR [rax],esp
    d750:	56                   	push   rsi
    d751:	41                   	rex.B
    d752:	4c 55                	rex.WR push rbp
    d754:	45 53                	rex.RB push r11
    d756:	20 28                	and    BYTE PTR [rax],ch
    d758:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf9d1 <_end+0x201949c9>
    d75e:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f9d7 <_end+0x3b1649cf>
    d764:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d767:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d76e:	63 6f 
    d770:	75 6e                	jne    d7e0 <_IO_stdin_used+0x17e0>
    d772:	74 65                	je     d7d9 <_IO_stdin_used+0x17d9>
    d774:	72 65                	jb     d7db <_IO_stdin_used+0x17db>
    d776:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d77a:	72 6f                	jb     d7eb <_IO_stdin_used+0x17eb>
    d77c:	72 3a                	jb     d7b8 <_IO_stdin_used+0x17b8>
    d77e:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e1f7 <_end+0x2eed31ef>
    d784:	75 73                	jne    d7f9 <_IO_stdin_used+0x17f9>
    d786:	72 2f                	jb     d7b7 <_IO_stdin_used+0x17b7>
    d788:	73 68                	jae    d7f2 <_IO_stdin_used+0x17f2>
    d78a:	61                   	(bad)  
    d78b:	72 65                	jb     d7f2 <_IO_stdin_used+0x17f2>
    d78d:	2f                   	(bad)  
    d78e:	76 69                	jbe    d7f9 <_IO_stdin_used+0x17f9>
    d790:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d797:	2e 64 
    d799:	62                   	(bad)  
    d79a:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d79d:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d7a4:	72 6f 
    d7a6:	72 20                	jb     d7c8 <_IO_stdin_used+0x17c8>
    d7a8:	25 73 0a 00 00       	and    eax,0xa73
    d7ad:	00 00                	add    BYTE PTR [rax],al
    d7af:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d7b2:	53                   	push   rbx
    d7b3:	45 52                	rex.RB push r10
    d7b5:	54                   	push   rsp
    d7b6:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d7b9:	54                   	push   rsp
    d7ba:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d7be:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d7c5:	20 28                	and    BYTE PTR [rax],ch
    d7c7:	73 65                	jae    d82e <_IO_stdin_used+0x182e>
    d7c9:	72 76                	jb     d841 <_IO_stdin_used+0x1841>
    d7cb:	5f                   	pop    rdi
    d7cc:	61                   	(bad)  
    d7cd:	64 64 72 2c          	fs fs jb d7fd <_IO_stdin_used+0x17fd>
    d7d1:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d7d4:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d7db:	73 65                	jae    d842 <_IO_stdin_used+0x1842>
    d7dd:	72 76                	jb     d855 <_IO_stdin_used+0x1855>
    d7df:	5f                   	pop    rdi
    d7e0:	70 6f                	jo     d851 <_IO_stdin_used+0x1851>
    d7e2:	72 74                	jb     d858 <_IO_stdin_used+0x1858>
    d7e4:	2c 63                	sub    al,0x63
    d7e6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d7e7:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d7ee:	73 65                	jae    d855 <_IO_stdin_used+0x1855>
    d7f0:	72 76                	jb     d868 <_IO_stdin_used+0x1868>
    d7f2:	5f                   	pop    rdi
    d7f3:	70 6b                	jo     d860 <_IO_stdin_used+0x1860>
    d7f5:	74 5f                	je     d856 <_IO_stdin_used+0x1856>
    d7f7:	73 65                	jae    d85e <_IO_stdin_used+0x185e>
    d7f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7fa:	74 2c                	je     d828 <_IO_stdin_used+0x1828>
    d7fc:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d800:	70 6b                	jo     d86d <_IO_stdin_used+0x186d>
    d802:	74 5f                	je     d863 <_IO_stdin_used+0x1863>
    d804:	73 65                	jae    d86b <_IO_stdin_used+0x186b>
    d806:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d807:	74 2c                	je     d835 <_IO_stdin_used+0x1835>
    d809:	73 65                	jae    d870 <_IO_stdin_used+0x1870>
    d80b:	72 76                	jb     d883 <_IO_stdin_used+0x1883>
    d80d:	5f                   	pop    rdi
    d80e:	70 6b                	jo     d87b <_IO_stdin_used+0x187b>
    d810:	74 5f                	je     d871 <_IO_stdin_used+0x1871>
    d812:	72 65                	jb     d879 <_IO_stdin_used+0x1879>
    d814:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d817:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d81b:	70 6b                	jo     d888 <_IO_stdin_used+0x1888>
    d81d:	74 5f                	je     d87e <_IO_stdin_used+0x187e>
    d81f:	72 65                	jb     d886 <_IO_stdin_used+0x1886>
    d821:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d824:	70 72                	jo     d898 <_IO_stdin_used+0x1898>
    d826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d827:	74 6f                	je     d898 <_IO_stdin_used+0x1898>
    d829:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d82c:	2c 61                	sub    al,0x61
    d82e:	76 67                	jbe    d897 <_IO_stdin_used+0x1897>
    d830:	5f                   	pop    rdi
    d831:	70 70                	jo     d8a3 <_IO_stdin_used+0x18a3>
    d833:	73 2c                	jae    d861 <_IO_stdin_used+0x1861>
    d835:	73 74                	jae    d8ab <_IO_stdin_used+0x18ab>
    d837:	61                   	(bad)  
    d838:	72 74                	jb     d8ae <_IO_stdin_used+0x18ae>
    d83a:	5f                   	pop    rdi
    d83b:	74 69                	je     d8a6 <_IO_stdin_used+0x18a6>
    d83d:	6d                   	ins    DWORD PTR es:[rdi],dx
    d83e:	65 2c 65             	gs sub al,0x65
    d841:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d842:	64 5f                	fs pop rdi
    d844:	74 69                	je     d8af <_IO_stdin_used+0x18af>
    d846:	6d                   	ins    DWORD PTR es:[rdi],dx
    d847:	65 2c 64             	gs sub al,0x64
    d84a:	61                   	(bad)  
    d84b:	74 61                	je     d8ae <_IO_stdin_used+0x18ae>
    d84d:	5f                   	pop    rdi
    d84e:	70 6b                	jo     d8bb <_IO_stdin_used+0x18bb>
    d850:	74 73                	je     d8c5 <_IO_stdin_used+0x18c5>
    d852:	2c 63                	sub    al,0x63
    d854:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d855:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d856:	74 72                	je     d8ca <_IO_stdin_used+0x18ca>
    d858:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d859:	6c                   	ins    BYTE PTR es:[rdi],dx
    d85a:	5f                   	pop    rdi
    d85b:	70 6b                	jo     d8c8 <_IO_stdin_used+0x18c8>
    d85d:	74 73                	je     d8d2 <_IO_stdin_used+0x18d2>
    d85f:	29 20                	sub    DWORD PTR [rax],esp
    d861:	56                   	push   rsi
    d862:	41                   	rex.B
    d863:	4c 55                	rex.WR push rbp
    d865:	45 53                	rex.RB push r11
    d867:	20 28                	and    BYTE PTR [rax],ch
    d869:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfae2 <_end+0x22194ada>
    d86f:	25 73 22 2c 25       	and    eax,0x252c2273
    d874:	6c                   	ins    BYTE PTR es:[rdi],dx
    d875:	64 2c 25             	fs sub al,0x25
    d878:	6c                   	ins    BYTE PTR es:[rdi],dx
    d879:	64 2c 25             	fs sub al,0x25
    d87c:	64 2c 25             	fs sub al,0x25
    d87f:	64 2c 25             	fs sub al,0x25
    d882:	64 2c 25             	fs sub al,0x25
    d885:	64 2c 25             	fs sub al,0x25
    d888:	64 2c 25             	fs sub al,0x25
    d88b:	64 2c 25             	fs sub al,0x25
    d88e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d88f:	64 2c 25             	fs sub al,0x25
    d892:	6c                   	ins    BYTE PTR es:[rdi],dx
    d893:	64 2c 25             	fs sub al,0x25
    d896:	64 2c 25             	fs sub al,0x25
    d899:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d89c:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d89f:	4c                   	rex.WR
    d8a0:	49 54                	rex.WB push r12
    d8a2:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d8a6:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d8a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d8aa:	74 65                	je     d911 <_IO_stdin_used+0x1911>
    d8ac:	72 65                	jb     d913 <_IO_stdin_used+0x1913>
    d8ae:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d8b2:	72 6f                	jb     d923 <_IO_stdin_used+0x1923>
    d8b4:	72 3a                	jb     d8f0 <_IO_stdin_used+0x18f0>
    d8b6:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e32f <_end+0x52ed3327>
    d8bc:	74 72                	je     d930 <_IO_stdin_used+0x1930>
    d8be:	6c                   	ins    BYTE PTR es:[rdi],dx
    d8bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8c0:	63 20                	movsxd esp,DWORD PTR [rax]
    d8c2:	73 75                	jae    d939 <_IO_stdin_used+0x1939>
    d8c4:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d8c7:	73 73                	jae    d93c <_IO_stdin_used+0x193c>
    d8c9:	66 75 6c             	data16 jne d938 <_IO_stdin_used+0x1938>
    d8cc:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d8cf:	65 72 79             	gs jb  d94b <_IO_stdin_used+0x194b>
    d8d2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8d4:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d8d9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8da:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d8e1:	6f 
    d8e2:	72 72                	jb     d956 <_IO_stdin_used+0x1956>
    d8e4:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d8e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8ea:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d8f1:	6f 
    d8f2:	72 72                	jb     d966 <_IO_stdin_used+0x1966>
    d8f4:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d8f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8fa:	73 73                	jae    d96f <_IO_stdin_used+0x196f>
    d8fc:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d903:	50                   	push   rax
    d904:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d907:	75 74                	jne    d97d <_IO_stdin_used+0x197d>
    d909:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d90d:	72 63                	jb     d972 <_IO_stdin_used+0x1972>
    d90f:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d913:	74 65                	je     d97a <_IO_stdin_used+0x197a>
    d915:	6d                   	ins    DWORD PTR es:[rdi],dx
    d916:	70 74                	jo     d98c <_IO_stdin_used+0x198c>
    d918:	3a 20                	cmp    ah,BYTE PTR [rax]
    d91a:	25 73 28 73 75       	and    eax,0x75732873
    d91f:	73 70                	jae    d991 <_IO_stdin_used+0x1991>
    d921:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d926:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d92b:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 6166f996 <_end+0x6153498e>
    d932:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d939:	67 
    d93a:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d941:	50                   	push   rax
    d942:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d947:	4c                   	rex.WR
    d948:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d94c:	54                   	push   rsp
    d94d:	52                   	push   rdx
    d94e:	41                   	rex.B
    d94f:	4e 53                	rex.WRX push rbx
    d951:	3a 20                	cmp    ah,BYTE PTR [rax]
    d953:	25 64 3a 20 25       	and    eax,0x25203a64
    d958:	73 3a                	jae    d994 <_IO_stdin_used+0x1994>
    d95a:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d95f:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613d8 <_end+0x641263d0>
    d965:	0a 00                	or     al,BYTE PTR [rax]
    d967:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d96a:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d96e:	57                   	push   rdi
    d96f:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d972:	4e 56                	rex.WRX push rsi
    d974:	3a 20                	cmp    ah,BYTE PTR [rax]
    d976:	25 64 3a 20 25       	and    eax,0x25203a64
    d97b:	73 3a                	jae    d9b7 <_IO_stdin_used+0x19b7>
    d97d:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d982:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613fb <_end+0x641263f3>
    d988:	0a 00                	or     al,BYTE PTR [rax]
    d98a:	00 00                	add    BYTE PTR [rax],al
    d98c:	00 00                	add    BYTE PTR [rax],al
    d98e:	00 00                	add    BYTE PTR [rax],al
    d990:	53                   	push   rbx
    d991:	50                   	push   rax
    d992:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d997:	20 32                	and    BYTE PTR [rdx],dh
    d999:	2f                   	(bad)  
    d99a:	33 3a                	xor    edi,DWORD PTR [rdx]
    d99c:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 25211406 <_end+0x250d63fe>
    d9a2:	73 3a                	jae    d9de <_IO_stdin_used+0x19de>
    d9a4:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d9a9:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261422 <_end+0x6412641a>
    d9af:	0a 00                	or     al,BYTE PTR [rax]
    d9b1:	00 00                	add    BYTE PTR [rax],al
    d9b3:	00 00                	add    BYTE PTR [rax],al
    d9b5:	00 00                	add    BYTE PTR [rax],al
    d9b7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9ba:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9be:	54                   	push   rsp
    d9bf:	52                   	push   rdx
    d9c0:	59                   	pop    rcx
    d9c1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9c3:	25 64 3a 20 53       	and    eax,0x53203a64
    d9c8:	45 53                	rex.RB push r11
    d9ca:	53                   	push   rbx
    d9cb:	49                   	rex.WB
    d9cc:	4f                   	rex.WRXB
    d9cd:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d9d1:	54                   	push   rsp
    d9d2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9d4:	25 73 3a 25 64       	and    eax,0x64253a73
    d9d9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa1d <_end+0x73124a15>
    d9df:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e449 <__GNU_EH_FRAME_HDR+0x38d>
    d9e5:	00 00                	add    BYTE PTR [rax],al
    d9e7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9ea:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9ee:	54                   	push   rsp
    d9ef:	52                   	push   rdx
    d9f0:	59                   	pop    rcx
    d9f1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9f3:	25 64 3a 20 50       	and    eax,0x50203a64
    d9f8:	4f                   	rex.WRXB
    d9f9:	4c                   	rex.WR
    d9fa:	49 54                	rex.WB push r12
    d9fc:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da00:	4e 56                	rex.WRX push rsi
    da02:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da05:	44 20 33             	and    BYTE PTR [rbx],r14b
    da08:	2f                   	(bad)  
    da09:	33 3a                	xor    edi,DWORD PTR [rdx]
    da0b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261484 <_end+0x6412647c>
    da11:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa55 <_end+0x73124a4d>
    da17:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e481 <__GNU_EH_FRAME_HDR+0x3c5>
    da1d:	00 00                	add    BYTE PTR [rax],al
    da1f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    da22:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    da26:	54                   	push   rsp
    da27:	52                   	push   rdx
    da28:	59                   	pop    rcx
    da29:	3a 20                	cmp    ah,BYTE PTR [rax]
    da2b:	25 64 3a 20 50       	and    eax,0x50203a64
    da30:	4f                   	rex.WRXB
    da31:	4c                   	rex.WR
    da32:	49 54                	rex.WB push r12
    da34:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da38:	4e 56                	rex.WRX push rsi
    da3a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da3d:	44 20 32             	and    BYTE PTR [rdx],r14b
    da40:	2f                   	(bad)  
    da41:	33 3a                	xor    edi,DWORD PTR [rdx]
    da43:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614bc <_end+0x641264b4>
    da49:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa8d <_end+0x73124a85>
    da4f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4b9 <__GNU_EH_FRAME_HDR+0x3fd>
    da55:	00 00                	add    BYTE PTR [rax],al
    da57:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    da5a:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    da5e:	54                   	push   rsp
    da5f:	52                   	push   rdx
    da60:	59                   	pop    rcx
    da61:	3a 20                	cmp    ah,BYTE PTR [rax]
    da63:	25 64 3a 20 50       	and    eax,0x50203a64
    da68:	4f                   	rex.WRXB
    da69:	4c                   	rex.WR
    da6a:	49 54                	rex.WB push r12
    da6c:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da70:	4e 56                	rex.WRX push rsi
    da72:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da75:	44 20 31             	and    BYTE PTR [rcx],r14b
    da78:	2f                   	(bad)  
    da79:	33 3a                	xor    edi,DWORD PTR [rdx]
    da7b:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614f4 <_end+0x641264ec>
    da81:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fac5 <_end+0x73124abd>
    da87:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4f1 <__GNU_EH_FRAME_HDR+0x435>
    da8d:	00 00                	add    BYTE PTR [rax],al
    da8f:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    da92:	00 00                	add    BYTE PTR [rax],al
    da94:	00 00                	add    BYTE PTR [rax],al
    da96:	00 00                	add    BYTE PTR [rax],al
    da98:	43 52                	rex.XB push r10
    da9a:	49 54                	rex.WB push r12
    da9c:	49                   	rex.WB
    da9d:	43                   	rex.XB
    da9e:	41                   	rex.B
    da9f:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    daa3:	49                   	rex.WB
    daa4:	4c                   	rex.WR
    daa5:	45                   	rex.RB
    daa6:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    daab:	4f 50                	rex.WRXB push r8
    daad:	45                   	rex.RB
    daae:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    dab2:	4c                   	rex.WR
    dab3:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    dab7:	52                   	push   rdx
    dab8:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    dabc:	47                   	rex.RXB
    dabd:	49                   	rex.WB
    dabe:	4e                   	rex.WRX
    dabf:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    dac2:	25 73 0a 00 25       	and    eax,0x25000a73
    dac7:	73 20                	jae    dae9 <_IO_stdin_used+0x1ae9>
    dac9:	25 73 20 25 73       	and    eax,0x73252073
    dace:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fb12 <_end+0x73124b0a>
    dad4:	0a 00                	or     al,BYTE PTR [rax]
    dad6:	25 73 20 25 73       	and    eax,0x73252073
    dadb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261554 <_end+0x6412654c>
    dae1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fb25 <_end+0x73124b1d>
    dae7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e551 <__GNU_EH_FRAME_HDR+0x495>
    daed:	00 00                	add    BYTE PTR [rax],al
    daef:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    daf2:	79 00                	jns    daf4 <_IO_stdin_used+0x1af4>
    daf4:	41                   	rex.B
    daf5:	4e 59                	rex.WRX pop rcx
    daf7:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    dafa:	4d 50                	rex.WRB push r8
    dafc:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    db00:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    db03:	50                   	push   rax
    db04:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    db07:	72 5f                	jb     db68 <_IO_stdin_used+0x1b68>
    db09:	6d                   	ins    DWORD PTR es:[rdi],dx
    db0a:	61                   	(bad)  
    db0b:	74 63                	je     db70 <_IO_stdin_used+0x1b70>
    db0d:	68 00 6e 6f 6e       	push   0x6e6f6e00
    db12:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    db16:	72 65                	jb     db7d <_IO_stdin_used+0x1b7d>
    db18:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    db1b:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    db1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db20:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    db23:	6c                   	ins    BYTE PTR es:[rdi],dx
    db24:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    db29:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    db2c:	25 73 0a 00 3b       	and    eax,0x3b000a73
    db31:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    db34:	75 6e                	jne    dba4 <_IO_stdin_used+0x1ba4>
    db36:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    db3a:	65 72 61             	gs jb  db9e <_IO_stdin_used+0x1b9e>
    db3d:	74 6f                	je     dbae <_IO_stdin_used+0x1bae>
    db3f:	72 00                	jb     db41 <_IO_stdin_used+0x1b41>
    db41:	61                   	(bad)  
    db42:	6c                   	ins    BYTE PTR es:[rdi],dx
    db43:	65 72 74             	gs jb  dbba <_IO_stdin_used+0x1bba>
    db46:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    db49:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db4a:	6d                   	ins    DWORD PTR es:[rdi],dx
    db4b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    db4d:	65 74 00             	gs je  db50 <_IO_stdin_used+0x1b50>
    db50:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    db55:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    db5c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db5d:	61                   	(bad)  
    db5e:	6c                   	ins    BYTE PTR es:[rdi],dx
    db5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db60:	65 74 00             	gs je  db63 <_IO_stdin_used+0x1b63>
    db63:	22 3b                	and    bh,BYTE PTR [rbx]
    db65:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    db68:	6d                   	ins    DWORD PTR es:[rdi],dx
    db69:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    db6c:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    db6f:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    db72:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    db76:	74 68                	je     dbe0 <_IO_stdin_used+0x1be0>
    db78:	3a 00                	cmp    al,BYTE PTR [rax]
    db7a:	74 79                	je     dbf5 <_IO_stdin_used+0x1bf5>
    db7c:	70 65                	jo     dbe3 <_IO_stdin_used+0x1be3>
    db7e:	3a 00                	cmp    al,BYTE PTR [rax]
    db80:	74 61                	je     dbe3 <_IO_stdin_used+0x1be3>
    db82:	72 67                	jb     dbeb <_IO_stdin_used+0x1beb>
    db84:	65 74 3a             	gs je  dbc1 <_IO_stdin_used+0x1bc1>
    db87:	22 00                	and    al,BYTE PTR [rax]
    db89:	73 65                	jae    dbf0 <_IO_stdin_used+0x1bf0>
    db8b:	76 3a                	jbe    dbc7 <_IO_stdin_used+0x1bc7>
    db8d:	00 00                	add    BYTE PTR [rax],al
    db8f:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    db92:	6c                   	ins    BYTE PTR es:[rdi],dx
    db93:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db97:	76 65                	jbe    dbfe <_IO_stdin_used+0x1bfe>
    db99:	72 69                	jb     dc04 <_IO_stdin_used+0x1c04>
    db9b:	74 79                	je     dc16 <_IO_stdin_used+0x1c16>
    db9d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    dba0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dba1:	75 6c                	jne    dc0f <_IO_stdin_used+0x1c0f>
    dba3:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    dba7:	20 3e                	and    BYTE PTR [rsi],bh
    dba9:	20 30                	and    BYTE PTR [rax],dh
    dbab:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    dbae:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    dbb5:	00 
    dbb6:	00 00                	add    BYTE PTR [rax],al
    dbb8:	52                   	push   rdx
    dbb9:	75 6c                	jne    dc27 <_IO_stdin_used+0x1c27>
    dbbb:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    dbbf:	76 65                	jbe    dc26 <_IO_stdin_used+0x1c26>
    dbc1:	72 69                	jb     dc2c <_IO_stdin_used+0x1c2c>
    dbc3:	74 79                	je     dc3e <_IO_stdin_used+0x1c3e>
    dbc5:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    dbc8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbc9:	75 6c                	jne    dc37 <_IO_stdin_used+0x1c37>
    dbcb:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    dbcf:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    dbd2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dbd3:	75 6d                	jne    dc42 <_IO_stdin_used+0x1c42>
    dbd5:	65 72 69             	gs jb  dc41 <_IO_stdin_used+0x1c41>
    dbd8:	63 20                	movsxd esp,DWORD PTR [rax]
    dbda:	76 61                	jbe    dc3d <_IO_stdin_used+0x1c3d>
    dbdc:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbdd:	75 65                	jne    dc44 <_IO_stdin_used+0x1c44>
    dbdf:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    dbe2:	79 70                	jns    dc54 <_IO_stdin_used+0x1c54>
    dbe4:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    dbe7:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dbe9:	76 61                	jbe    dc4c <_IO_stdin_used+0x1c4c>
    dbeb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbec:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dbf3:	20 
    dbf4:	74 79                	je     dc6f <_IO_stdin_used+0x1c6f>
    dbf6:	70 65                	jo     dc5d <_IO_stdin_used+0x1c5d>
    dbf8:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dbfb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbfc:	75 65                	jne    dc63 <_IO_stdin_used+0x1c63>
    dbfe:	00 00                	add    BYTE PTR [rax],al
    dc00:	25 73 3a 20 69       	and    eax,0x69203a73
    dc05:	74 79                	je     dc80 <_IO_stdin_used+0x1c80>
    dc07:	70 65                	jo     dc6e <_IO_stdin_used+0x1c6e>
    dc09:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc0c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc0d:	79 20                	jns    dc2f <_IO_stdin_used+0x1c2f>
    dc0f:	61                   	(bad)  
    dc10:	70 70                	jo     dc82 <_IO_stdin_used+0x1c82>
    dc12:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc13:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc1a:	72 75                	jb     dc91 <_IO_stdin_used+0x1c91>
    dc1c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc1d:	65 73 20             	gs jae dc40 <_IO_stdin_used+0x1c40>
    dc20:	77 69                	ja     dc8b <_IO_stdin_used+0x1c8b>
    dc22:	74 68                	je     dc8c <_IO_stdin_used+0x1c8c>
    dc24:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc27:	4d 50                	rex.WRB push r8
    dc29:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc2c:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc2f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc30:	74 6f                	je     dca1 <_IO_stdin_used+0x1ca1>
    dc32:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc35:	0a 00                	or     al,BYTE PTR [rax]
    dc37:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    dc3e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dc40:	76 61                	jbe    dca3 <_IO_stdin_used+0x1ca3>
    dc42:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc43:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dc4a:	70 
    dc4b:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dc4e:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dc53:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc54:	75 65                	jne    dcbb <_IO_stdin_used+0x1cbb>
    dc56:	00 00                	add    BYTE PTR [rax],al
    dc58:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dc5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc60:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc61:	79 20                	jns    dc83 <_IO_stdin_used+0x1c83>
    dc63:	61                   	(bad)  
    dc64:	70 70                	jo     dcd6 <_IO_stdin_used+0x1cd6>
    dc66:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc67:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc6e:	72 75                	jb     dce5 <_IO_stdin_used+0x1ce5>
    dc70:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc71:	65 73 20             	gs jae dc94 <_IO_stdin_used+0x1c94>
    dc74:	77 69                	ja     dcdf <_IO_stdin_used+0x1cdf>
    dc76:	74 68                	je     dce0 <_IO_stdin_used+0x1ce0>
    dc78:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc7b:	4d 50                	rex.WRB push r8
    dc7d:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc80:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc83:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc84:	74 6f                	je     dcf5 <_IO_stdin_used+0x1cf5>
    dc86:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc89:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc8c:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc8d:	70 5f                	jo     dcee <_IO_stdin_used+0x1cee>
    dc8f:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dc96:	61 
    dc97:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc98:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc9f:	20 
    dca0:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dca7:	65 
	...
    dcb0:	49                   	rex.WB
    dcb1:	43                   	rex.XB
    dcb2:	4d 50                	rex.WRB push r8
    dcb4:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dcb7:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dcba:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcbb:	79 20                	jns    dcdd <_IO_stdin_used+0x1cdd>
    dcbd:	61                   	(bad)  
    dcbe:	70 70                	jo     dd30 <_IO_stdin_used+0x1d30>
    dcc0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc1:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dcc8:	72 75                	jb     dd3f <_IO_stdin_used+0x1d3f>
    dcca:	6c                   	ins    BYTE PTR es:[rdi],dx
    dccb:	65 73 20             	gs jae dcee <_IO_stdin_used+0x1cee>
    dcce:	77 69                	ja     dd39 <_IO_stdin_used+0x1d39>
    dcd0:	74 68                	je     dd3a <_IO_stdin_used+0x1d3a>
    dcd2:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dcd5:	4d 50                	rex.WRB push r8
    dcd7:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dcda:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dcdd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcde:	74 6f                	je     dd4f <_IO_stdin_used+0x1d4f>
    dce0:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dce3:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dce6:	6d                   	ins    DWORD PTR es:[rdi],dx
    dce7:	70 5f                	jo     dd48 <_IO_stdin_used+0x1d48>
    dce9:	73 65                	jae    dd50 <_IO_stdin_used+0x1d50>
    dceb:	71 3a                	jno    dd27 <_IO_stdin_used+0x1d27>
    dced:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dcf0:	76 61                	jbe    dd53 <_IO_stdin_used+0x1d53>
    dcf2:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcf3:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dcfa:	20 
    dcfb:	73 65                	jae    dd62 <_IO_stdin_used+0x1d62>
    dcfd:	71 75                	jno    dd74 <_IO_stdin_used+0x1d74>
    dcff:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dd01:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dd04:	76 61                	jbe    dd67 <_IO_stdin_used+0x1d67>
    dd06:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd07:	75 65                	jne    dd6e <_IO_stdin_used+0x1d6e>
    dd09:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dd0d:	3a 00                	cmp    al,BYTE PTR [rax]
    dd0f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dd11:	76 61                	jbe    dd74 <_IO_stdin_used+0x1d74>
    dd13:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd14:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dd1b:	76 
    dd1c:	61                   	(bad)  
    dd1d:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd1e:	75 65                	jne    dd85 <_IO_stdin_used+0x1d85>
    dd20:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dd23:	61                   	(bad)  
    dd24:	67 73 3a             	addr32 jae dd61 <_IO_stdin_used+0x1d61>
    dd27:	22 00                	and    al,BYTE PTR [rax]
    dd29:	00 00                	add    BYTE PTR [rax],al
    dd2b:	00 00                	add    BYTE PTR [rax],al
    dd2d:	00 00                	add    BYTE PTR [rax],al
    dd2f:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dd32:	61                   	(bad)  
    dd33:	67 73 20             	addr32 jae dd56 <_IO_stdin_used+0x1d56>
    dd36:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd37:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dd38:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd39:	79 20                	jns    dd5b <_IO_stdin_used+0x1d5b>
    dd3b:	61                   	(bad)  
    dd3c:	70 70                	jo     ddae <_IO_stdin_used+0x1dae>
    dd3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd3f:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dd46:	72 75                	jb     ddbd <_IO_stdin_used+0x1dbd>
    dd48:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd49:	65 73 20             	gs jae dd6c <_IO_stdin_used+0x1d6c>
    dd4c:	77 69                	ja     ddb7 <_IO_stdin_used+0x1db7>
    dd4e:	74 68                	je     ddb8 <_IO_stdin_used+0x1db8>
    dd50:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dd54:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dd57:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd5b:	74 6f                	je     ddcc <_IO_stdin_used+0x1dcc>
    dd5d:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dd60:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dd63:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dd66:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dd68:	76 61                	jbe    ddcb <_IO_stdin_used+0x1dcb>
    dd6a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd6b:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dd72:	76 
    dd73:	61                   	(bad)  
    dd74:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd75:	75 65                	jne    dddc <_IO_stdin_used+0x1ddc>
    dd77:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dd7a:	72 65                	jb     dde1 <_IO_stdin_used+0x1de1>
    dd7c:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dd7e:	00 00                	add    BYTE PTR [rax],al
    dd80:	46 61                	rex.RX (bad) 
    dd82:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dd89:	20 
    dd8a:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dd8d:	70 69                	jo     ddf8 <_IO_stdin_used+0x1df8>
    dd8f:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd90:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dd94:	67 75 6c             	addr32 jne de03 <_IO_stdin_used+0x1e03>
    dd97:	61                   	(bad)  
    dd98:	72 20                	jb     ddba <_IO_stdin_used+0x1dba>
    dd9a:	65 78 70             	gs js  de0d <_IO_stdin_used+0x1e0d>
    dd9d:	72 65                	jb     de04 <_IO_stdin_used+0x1e04>
    dd9f:	73 73                	jae    de14 <_IO_stdin_used+0x1e14>
    dda1:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dda8:	7a 65                	jp     de0f <_IO_stdin_used+0x1e0f>
    ddaa:	3a 00                	cmp    al,BYTE PTR [rax]
    ddac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ddad:	66 66 73 65          	data16 data16 jae de16 <_IO_stdin_used+0x1e16>
    ddb1:	74 3a                	je     dded <_IO_stdin_used+0x1ded>
    ddb3:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    ddb6:	74 61                	je     de19 <_IO_stdin_used+0x1e19>
    ddb8:	62                   	(bad)  
    ddb9:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddba:	69 73 68 65 64 00 6e 	imul   esi,DWORD PTR [rbx+0x68],0x6e006465
    ddc1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ddc2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    ddc4:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
    ddc7:	70 74                	jo     de3d <_IO_stdin_used+0x1e3d>
    ddc9:	00 25 63 00 25 30    	add    BYTE PTR [rip+0x30250063],ah        # 3025de32 <_end+0x30122e2a>
    ddcf:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    ddd2:	00 00                	add    BYTE PTR [rax],al
    ddd4:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    ddd8:	21 00                	and    DWORD PTR [rax],eax
    ddda:	3c 3d                	cmp    al,0x3d
    dddc:	00 3e                	add    BYTE PTR [rsi],bh
    ddde:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dde3:	75 70                	jne    de55 <_IO_stdin_used+0x1e55>
    dde5:	70 6f                	jo     de56 <_IO_stdin_used+0x1e56>
    dde7:	72 74                	jb     de5d <_IO_stdin_used+0x1e5d>
    dde9:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    ddee:	65 72 61             	gs jb  de52 <_IO_stdin_used+0x1e52>
    ddf1:	74 6f                	je     de62 <_IO_stdin_used+0x1e62>
    ddf3:	72 00                	jb     ddf5 <_IO_stdin_used+0x1df5>
    ddf5:	00 00                	add    BYTE PTR [rax],al
    ddf7:	00 a6 ce ff ff f8    	add    BYTE PTR [rsi-0x7000032],ah
    ddfd:	ce                   	(bad)  
    ddfe:	ff                   	(bad)  
    ddff:	ff 11                	call   QWORD PTR [rcx]
    de01:	cf                   	iret   
    de02:	ff                   	(bad)  
    de03:	ff c6                	inc    esi
    de05:	ce                   	(bad)  
    de06:	ff                   	(bad)  
    de07:	ff                   	(bad)  
    de08:	df ce                	(bad)  
    de0a:	ff                   	(bad)  
    de0b:	ff 2a                	jmp    FWORD PTR [rdx]
    de0d:	cf                   	iret   
    de0e:	ff                   	(bad)  
    de0f:	ff 2e                	jmp    FWORD PTR [rsi]
    de11:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 791047 <_end+0x65603f>
    de17:	25 30 32 78 20       	and    eax,0x20783230
    de1c:	2d 2d 20 25 30       	sub    eax,0x3025202d
    de21:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
    de24:	00 00                	add    BYTE PTR [rax],al
    de26:	00 00                	add    BYTE PTR [rax],al
    de28:	73 72                	jae    de9c <_IO_stdin_used+0x1e9c>
    de2a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    de2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    de2d:	75 61                	jne    de90 <_IO_stdin_used+0x1e90>
    de2f:	2f                   	(bad)  
    de30:	73 63                	jae    de95 <_IO_stdin_used+0x1e95>
    de32:	72 69                	jb     de9d <_IO_stdin_used+0x1e9d>
    de34:	70 74                	jo     deaa <_IO_stdin_used+0x1eaa>
    de36:	73 2f                	jae    de67 <_IO_stdin_used+0x1e67>
    de38:	68 65 6c 6c 6f       	push   0x6f6c6c65
    de3d:	74 65                	je     dea4 <_IO_stdin_used+0x1ea4>
    de3f:	73 74                	jae    deb5 <_IO_stdin_used+0x1eb5>
    de41:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    de43:	75 61                	jne    dea6 <_IO_stdin_used+0x1ea6>
    de45:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    de48:	2f                   	(bad)  
    de49:	65 74 63             	gs je  deaf <_IO_stdin_used+0x1eaf>
    de4c:	2f                   	(bad)  
    de4d:	76 69                	jbe    deb8 <_IO_stdin_used+0x1eb8>
    de4f:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de56:	72 69 
    de58:	70 74                	jo     dece <_IO_stdin_used+0x1ece>
    de5a:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    de5e:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    de62:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de69:	20 
    de6a:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de6d:	6c                   	ins    BYTE PTR es:[rdi],dx
    de6e:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    de73:	75 61                	jne    ded6 <_IO_stdin_used+0x1ed6>
    de75:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    de78:	72 69                	jb     dee3 <_IO_stdin_used+0x1ee3>
    de7a:	70 74                	jo     def0 <_IO_stdin_used+0x1ef0>
    de7c:	73 3a                	jae    deb8 <_IO_stdin_used+0x1eb8>
    de7e:	20 2f                	and    BYTE PTR [rdi],ch
    de80:	65 74 63             	gs je  dee6 <_IO_stdin_used+0x1ee6>
    de83:	2f                   	(bad)  
    de84:	76 69                	jbe    deef <_IO_stdin_used+0x1eef>
    de86:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de8d:	72 69 
    de8f:	70 74                	jo     df05 <_IO_stdin_used+0x1f05>
    de91:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    de95:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    de99:	74 20                	je     debb <_IO_stdin_used+0x1ebb>
    de9b:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    de9d:	75 6e                	jne    df0d <_IO_stdin_used+0x1f0d>
    de9f:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    dea3:	2a 2e                	sub    ch,BYTE PTR [rsi]
    dea5:	6c                   	ins    BYTE PTR es:[rdi],dx
    dea6:	75 61                	jne    df09 <_IO_stdin_used+0x1f09>
    dea8:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    deaa:	2a 00                	sub    al,BYTE PTR [rax]
    deac:	6c                   	ins    BYTE PTR es:[rdi],dx
    dead:	5f                   	pop    rdi
    deae:	73 63                	jae    df13 <_IO_stdin_used+0x1f13>
    deb0:	72 69                	jb     df1b <_IO_stdin_used+0x1f1b>
    deb2:	70 74                	jo     df28 <_IO_stdin_used+0x1f28>
    deb4:	5f                   	pop    rdi
    deb5:	72 6f                	jb     df26 <_IO_stdin_used+0x1f26>
    deb7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    deb8:	74 3d                	je     def7 <_IO_stdin_used+0x1ef7>
    deba:	00 0a                	add    BYTE PTR [rdx],cl
    debc:	00 00                	add    BYTE PTR [rax],al
    debe:	00 00                	add    BYTE PTR [rax],al
    dec0:	49 50                	rex.WB push r8
    dec2:	76 36                	jbe    defa <_IO_stdin_used+0x1efa>
    dec4:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dff3d <_end+0x3e1a4f35>
    deca:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250ff43 <_end+0x723d4f3b>
    ded0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ded1:	74 6f                	je     df42 <_IO_stdin_used+0x1f42>
    ded3:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    ded6:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    ded9:	6d                   	ins    DWORD PTR es:[rdi],dx
    deda:	62                   	(bad)  
    dedb:	65 72 20             	gs jb  defe <_IO_stdin_used+0x1efe>
    dede:	3d 20 25 64 0a       	cmp    eax,0xa642520
    dee3:	00 00                	add    BYTE PTR [rax],al
    dee5:	00 00                	add    BYTE PTR [rax],al
    dee7:	00 5b 4e             	add    BYTE PTR [rbx+0x4e],bl
    deea:	20 25 73 20 53 20    	and    BYTE PTR [rip+0x20532073],ah        # 2053ff63 <_end+0x20404f5b>
    def0:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    def3:	30 32                	xor    BYTE PTR [rdx],dh
    def5:	78 20                	js     df17 <_IO_stdin_used+0x1f17>
    def7:	45 20 30             	and    BYTE PTR [r8],r14b
    defa:	78 25                	js     df21 <_IO_stdin_used+0x1f21>
    defc:	30 32                	xor    BYTE PTR [rdx],dh
    defe:	78 5d                	js     df5d <_IO_stdin_used+0x1f5d>
    df00:	0a 00                	or     al,BYTE PTR [rax]
    df02:	00 00                	add    BYTE PTR [rax],al
    df04:	00 00                	add    BYTE PTR [rax],al
    df06:	00 00                	add    BYTE PTR [rax],al
    df08:	53                   	push   rbx
    df09:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
    df0c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    df0e:	74 61                	je     df71 <_IO_stdin_used+0x1f71>
    df10:	74 69                	je     df7b <_IO_stdin_used+0x1f7b>
    df12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df14:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    df17:	75 6c                	jne    df85 <_IO_stdin_used+0x1f85>
    df19:	74 20                	je     df3b <_IO_stdin_used+0x1f3b>
    df1b:	61                   	(bad)  
    df1c:	74 20                	je     df3e <_IO_stdin_used+0x1f3e>
    df1e:	25 73 3a 20 61       	and    eax,0x61203a73
    df23:	70 70                	jo     df95 <_IO_stdin_used+0x1f95>
    df25:	6c                   	ins    BYTE PTR es:[rdi],dx
    df26:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    df2d:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    df30:	61                   	(bad)  
    df31:	73 68                	jae    df9b <_IO_stdin_used+0x1f9b>
    df33:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    df37:	46 75 6e             	rex.RX jne dfa8 <_IO_stdin_used+0x1fa8>
    df3a:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    df3e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3f:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    df42:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    df45:	72 61                	jb     dfa8 <_IO_stdin_used+0x1fa8>
    df47:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    df4a:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    df4e:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # e9c7 <__GNU_EH_FRAME_HDR+0x90b>
    df54:	00 00                	add    BYTE PTR [rax],al
    df56:	00 00                	add    BYTE PTR [rax],al
    df58:	5b                   	pop    rbx
    df59:	4e 20 25 73 20 53 20 	rex.WRX and BYTE PTR [rip+0x20532073],r12b        # 2053ffd3 <_end+0x20404fcb>
    df60:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df63:	30 32                	xor    BYTE PTR [rdx],dh
    df65:	78 20                	js     df87 <_IO_stdin_used+0x1f87>
    df67:	45 20 30             	and    BYTE PTR [r8],r14b
    df6a:	78 25                	js     df91 <_IO_stdin_used+0x1f91>
    df6c:	30 32                	xor    BYTE PTR [rdx],dh
    df6e:	78 20                	js     df90 <_IO_stdin_used+0x1f90>
    df70:	28 2e                	sub    BYTE PTR [rsi],ch
    df72:	2f                   	(bad)  
    df73:	76 69                	jbe    dfde <_IO_stdin_used+0x1fde>
    df75:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    df7c:	28 2b 
    df7e:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df81:	30 32                	xor    BYTE PTR [rdx],dh
    df83:	78 29                	js     dfae <_IO_stdin_used+0x1fae>
    df85:	29 5d 0a             	sub    DWORD PTR [rbp+0xa],ebx
	...
    df90:	55                   	push   rbp
    df91:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df92:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    df96:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df97:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    df9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df9b:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    df9f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dfa0:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    dfa3:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    dfa6:	6d                   	ins    DWORD PTR es:[rdi],dx
    dfa7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dfa8:	72 79                	jb     e023 <_IO_stdin_used+0x2023>
    dfaa:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    dfad:	66 73 65             	data16 jae e015 <_IO_stdin_used+0x2015>
    dfb0:	74 20                	je     dfd2 <_IO_stdin_used+0x1fd2>
    dfb2:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    dfb5:	30 32                	xor    BYTE PTR [rdx],dh
    dfb7:	78 0a                	js     dfc3 <_IO_stdin_used+0x1fc3>
    dfb9:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    dfbc:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    dfc3:	44 
    dfc4:	75 6d                	jne    e033 <_IO_stdin_used+0x2033>
    dfc6:	70 3a                	jo     e002 <_IO_stdin_used+0x2002>
    dfc8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfcb:	41 58                	pop    r8
    dfcd:	5d                   	pop    rbp
    dfce:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790ff4 <_end+0x25655fec>
    dfd4:	30 32                	xor    BYTE PTR [rdx],dh
    dfd6:	78 0a                	js     dfe2 <_IO_stdin_used+0x1fe2>
    dfd8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfdb:	42 58                	rex.X pop rax
    dfdd:	5d                   	pop    rbp
    dfde:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25791004 <_end+0x25655ffc>
    dfe4:	30 32                	xor    BYTE PTR [rdx],dh
    dfe6:	78 0a                	js     dff2 <_IO_stdin_used+0x1ff2>
    dfe8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfeb:	43 58                	rex.XB pop r8
    dfed:	5d                   	pop    rbp
    dfee:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25791014 <_end+0x2565600c>
    dff4:	30 32                	xor    BYTE PTR [rdx],dh
    dff6:	78 0a                	js     e002 <_IO_stdin_used+0x2002>
    dff8:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dffb:	44 58                	rex.R pop rax
    dffd:	5d                   	pop    rbp
    dffe:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25791024 <_end+0x2565601c>
    e004:	30 32                	xor    BYTE PTR [rdx],dh
    e006:	78 0a                	js     e012 <_IO_stdin_used+0x2012>
    e008:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    e00b:	53                   	push   rbx
    e00c:	50                   	push   rax
    e00d:	5d                   	pop    rbp
    e00e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25791034 <_end+0x2565602c>
    e014:	30 32                	xor    BYTE PTR [rdx],dh
    e016:	78 0a                	js     e022 <_IO_stdin_used+0x2022>
    e018:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    e01b:	42 50                	rex.X push rax
    e01d:	5d                   	pop    rbp
    e01e:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25791044 <_end+0x2565603c>
    e024:	30 32                	xor    BYTE PTR [rdx],dh
    e026:	78 0a                	js     e032 <_IO_stdin_used+0x2032>
	...
    e030:	72 00                	jb     e032 <_IO_stdin_used+0x2032>
    e032:	2f                   	(bad)  
    e033:	75 73                	jne    e0a8 <_IO_stdin_used+0x20a8>
    e035:	72 2f                	jb     e066 <_IO_stdin_used+0x2066>
    e037:	73 68                	jae    e0a1 <_IO_stdin_used+0x20a1>
    e039:	61                   	(bad)  
    e03a:	72 65                	jb     e0a1 <_IO_stdin_used+0x20a1>
    e03c:	2f                   	(bad)  
    e03d:	76 69                	jbe    e0a8 <_IO_stdin_used+0x20a8>
    e03f:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    e046:	6d 61 
    e048:	70 2e                	jo     e078 <_IO_stdin_used+0x2078>
    e04a:	74 78                	je     e0c4 <__GNU_EH_FRAME_HDR+0x8>
    e04c:	74 00                	je     e04e <_IO_stdin_used+0x204e>
    e04e:	00 00                	add    BYTE PTR [rax],al
    e050:	46                   	rex.RX
    e051:	41 54                	push   r12
    e053:	41                   	rex.B
    e054:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    e058:	52                   	push   rdx
    e059:	4f 52                	rex.WRXB push r10
    e05b:	3a 20                	cmp    ah,BYTE PTR [rax]
    e05d:	6d                   	ins    DWORD PTR es:[rdi],dx
    e05e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e060:	6d                   	ins    DWORD PTR es:[rdi],dx
    e061:	61                   	(bad)  
    e062:	70 2e                	jo     e092 <_IO_stdin_used+0x2092>
    e064:	74 78                	je     e0de <__GNU_EH_FRAME_HDR+0x22>
    e066:	74 20                	je     e088 <_IO_stdin_used+0x2088>
    e068:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e069:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e06a:	74 20                	je     e08c <_IO_stdin_used+0x208c>
    e06c:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e06e:	75 6e                	jne    e0de <__GNU_EH_FRAME_HDR+0x22>
    e070:	64 2e 50             	fs cs push rax
    e073:	6c                   	ins    BYTE PTR es:[rdi],dx
    e074:	65 61                	gs (bad) 
    e076:	73 65                	jae    e0dd <__GNU_EH_FRAME_HDR+0x21>
    e078:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e07b:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e07e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e07f:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    e082:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e083:	5f                   	pop    rdi
    e084:	6d                   	ins    DWORD PTR es:[rdi],dx
    e085:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e087:	5f                   	pop    rdi
    e088:	6d                   	ins    DWORD PTR es:[rdi],dx
    e089:	61                   	(bad)  
    e08a:	70 2e                	jo     e0ba <_IO_stdin_used+0x20ba>
    e08c:	70 79                	jo     e107 <__GNU_EH_FRAME_HDR+0x4b>
    e08e:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    e091:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    e095:	70 79                	jo     e110 <__GNU_EH_FRAME_HDR+0x54>
    e097:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e09a:	6d                   	ins    DWORD PTR es:[rdi],dx
    e09b:	6d                   	ins    DWORD PTR es:[rdi],dx
    e09c:	61                   	(bad)  
    e09d:	70 2e                	jo     e0cd <__GNU_EH_FRAME_HDR+0x11>
    e09f:	74 78                	je     e119 <__GNU_EH_FRAME_HDR+0x5d>
    e0a1:	74 20                	je     e0c3 <__GNU_EH_FRAME_HDR+0x7>
    e0a3:	74 6f                	je     e114 <__GNU_EH_FRAME_HDR+0x58>
    e0a5:	20 2f                	and    BYTE PTR [rdi],ch
    e0a7:	75 73                	jne    e11c <__GNU_EH_FRAME_HDR+0x60>
    e0a9:	72 2f                	jb     e0da <__GNU_EH_FRAME_HDR+0x1e>
    e0ab:	73 68                	jae    e115 <__GNU_EH_FRAME_HDR+0x59>
    e0ad:	61                   	(bad)  
    e0ae:	72 65                	jb     e115 <__GNU_EH_FRAME_HDR+0x59>
    e0b0:	2f                   	(bad)  
    e0b1:	76 69                	jbe    e11c <__GNU_EH_FRAME_HDR+0x60>
    e0b3:	67                   	addr32
    e0b4:	69                   	.byte 0x69
    e0b5:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0b6:	00 0a                	add    BYTE PTR [rdx],cl
    e0b8:	00 20                	add    BYTE PTR [rax],ah
	...

Disassembly of section .eh_frame_hdr:

000000000000e0bc <__GNU_EH_FRAME_HDR>:
    e0bc:	01 1b                	add    DWORD PTR [rbx],ebx
    e0be:	03 3b                	add    edi,DWORD PTR [rbx]
    e0c0:	a8 03                	test   al,0x3
    e0c2:	00 00                	add    BYTE PTR [rax],al
    e0c4:	74 00                	je     e0c6 <__GNU_EH_FRAME_HDR+0xa>
    e0c6:	00 00                	add    BYTE PTR [rax],al
    e0c8:	64 3f                	fs (bad) 
    e0ca:	ff                   	(bad)  
    e0cb:	ff                   	(bad)  
    e0cc:	dc 03                	fadd   QWORD PTR [rbx]
    e0ce:	00 00                	add    BYTE PTR [rax],al
    e0d0:	94                   	xchg   esp,eax
    e0d1:	43 ff                	rex.XB (bad) 
    e0d3:	ff 04 04             	inc    DWORD PTR [rsp+rax*1]
    e0d6:	00 00                	add    BYTE PTR [rax],al
    e0d8:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    e0d9:	43 ff                	rex.XB (bad) 
    e0db:	ff 1c 04             	call   FWORD PTR [rsp+rax*1]
    e0de:	00 00                	add    BYTE PTR [rax],al
    e0e0:	c4                   	(bad)  
    e0e1:	47 ff                	rex.RXB (bad) 
    e0e3:	ff c4                	inc    esp
    e0e5:	03 00                	add    eax,DWORD PTR [rax]
    e0e7:	00 ad 48 ff ff 34    	add    BYTE PTR [rbp+0x34ffff48],ch
    e0ed:	04 00                	add    al,0x0
    e0ef:	00 e7                	add    bh,ah
    e0f1:	48 ff                	rex.W (bad) 
    e0f3:	ff 54 04 00          	call   QWORD PTR [rsp+rax*1+0x0]
    e0f7:	00 33                	add    BYTE PTR [rbx],dh
    e0f9:	4a ff                	rex.WX (bad) 
    e0fb:	ff                   	(bad)  
    e0fc:	7c 04                	jl     e102 <__GNU_EH_FRAME_HDR+0x46>
    e0fe:	00 00                	add    BYTE PTR [rax],al
    e100:	27                   	(bad)  
    e101:	4d ff                	rex.WRB (bad) 
    e103:	ff 9c 04 00 00 3a 4e 	call   FWORD PTR [rsp+rax*1+0x4e3a0000]
    e10a:	ff                   	(bad)  
    e10b:	ff                   	(bad)  
    e10c:	bc 04 00 00 e8       	mov    esp,0xe8000004
    e111:	4e ff                	rex.WRX (bad) 
    e113:	ff                   	(bad)  
    e114:	dc 04 00             	fadd   QWORD PTR [rax+rax*1]
    e117:	00 8e 4f ff ff fc    	add    BYTE PTR [rsi-0x30000b1],cl
    e11d:	04 00                	add    al,0x0
    e11f:	00 23                	add    BYTE PTR [rbx],ah
    e121:	50                   	push   rax
    e122:	ff                   	(bad)  
    e123:	ff 1c 05 00 00 b7 50 	call   FWORD PTR [rax*1+0x50b70000]
    e12a:	ff                   	(bad)  
    e12b:	ff                   	(bad)  
    e12c:	3c 05                	cmp    al,0x5
    e12e:	00 00                	add    BYTE PTR [rax],al
    e130:	83 52 ff ff          	adc    DWORD PTR [rdx-0x1],0xffffffff
    e134:	68 05 00 00 57       	push   0x57000005
    e139:	53                   	push   rbx
    e13a:	ff                   	(bad)  
    e13b:	ff 8c 05 00 00 1e 54 	dec    DWORD PTR [rbp+rax*1+0x541e0000]
    e142:	ff                   	(bad)  
    e143:	ff b0 05 00 00 71    	push   QWORD PTR [rax+0x71000005]
    e149:	54                   	push   rsp
    e14a:	ff                   	(bad)  
    e14b:	ff d0                	call   rax
    e14d:	05 00 00 a4 54       	add    eax,0x54a40000
    e152:	ff                   	(bad)  
    e153:	ff f0                	push   rax
    e155:	05 00 00 c5 54       	add    eax,0x54c50000
    e15a:	ff                   	(bad)  
    e15b:	ff 10                	call   QWORD PTR [rax]
    e15d:	06                   	(bad)  
    e15e:	00 00                	add    BYTE PTR [rax],al
    e160:	2d 55 ff ff 34       	sub    eax,0x34ffff55
    e165:	06                   	(bad)  
    e166:	00 00                	add    BYTE PTR [rax],al
    e168:	52                   	push   rdx
    e169:	59                   	pop    rcx
    e16a:	ff                   	(bad)  
    e16b:	ff 54 06 00          	call   QWORD PTR [rsi+rax*1+0x0]
    e16f:	00 af 5a ff ff 74    	add    BYTE PTR [rdi+0x74ffff5a],ch
    e175:	06                   	(bad)  
    e176:	00 00                	add    BYTE PTR [rax],al
    e178:	f3 62                	repz (bad) 
    e17a:	ff                   	(bad)  
    e17b:	ff 94 06 00 00 af 6b 	call   QWORD PTR [rsi+rax*1+0x6baf0000]
    e182:	ff                   	(bad)  
    e183:	ff                   	(bad)  
    e184:	bc 06 00 00 04       	mov    esp,0x4000006
    e189:	6d                   	ins    DWORD PTR es:[rdi],dx
    e18a:	ff                   	(bad)  
    e18b:	ff                   	(bad)  
    e18c:	dc 06                	fadd   QWORD PTR [rsi]
    e18e:	00 00                	add    BYTE PTR [rax],al
    e190:	03 6e ff             	add    ebp,DWORD PTR [rsi-0x1]
    e193:	ff                   	(bad)  
    e194:	fc                   	cld    
    e195:	06                   	(bad)  
    e196:	00 00                	add    BYTE PTR [rax],al
    e198:	ef                   	out    dx,eax
    e199:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e19a:	ff                   	(bad)  
    e19b:	ff 1c 07             	call   FWORD PTR [rdi+rax*1]
    e19e:	00 00                	add    BYTE PTR [rax],al
    e1a0:	a1 72 ff ff 3c 07 00 	movabs eax,ds:0x240000073cffff72
    e1a7:	00 24 
    e1a9:	73 ff                	jae    e1aa <__GNU_EH_FRAME_HDR+0xee>
    e1ab:	ff 5c 07 00          	call   FWORD PTR [rdi+rax*1+0x0]
    e1af:	00 4e 75             	add    BYTE PTR [rsi+0x75],cl
    e1b2:	ff                   	(bad)  
    e1b3:	ff 84 07 00 00 8b 77 	inc    DWORD PTR [rdi+rax*1+0x778b0000]
    e1ba:	ff                   	(bad)  
    e1bb:	ff a8 07 00 00 f1    	jmp    FWORD PTR [rax-0xefffff9]
    e1c1:	77 ff                	ja     e1c2 <__GNU_EH_FRAME_HDR+0x106>
    e1c3:	ff c8                	dec    eax
    e1c5:	07                   	(bad)  
    e1c6:	00 00                	add    BYTE PTR [rax],al
    e1c8:	08 78 ff             	or     BYTE PTR [rax-0x1],bh
    e1cb:	ff                   	(bad)  
    e1cc:	e8 07 00 00 59       	call   5900e1d8 <_end+0x58ed31d0>
    e1d1:	78 ff                	js     e1d2 <__GNU_EH_FRAME_HDR+0x116>
    e1d3:	ff 0c 08             	dec    DWORD PTR [rax+rcx*1]
    e1d6:	00 00                	add    BYTE PTR [rax],al
    e1d8:	96                   	xchg   esi,eax
    e1d9:	7e ff                	jle    e1da <__GNU_EH_FRAME_HDR+0x11e>
    e1db:	ff 30                	push   QWORD PTR [rax]
    e1dd:	08 00                	or     BYTE PTR [rax],al
    e1df:	00 b0 7e ff ff 50    	add    BYTE PTR [rax+0x50ffff7e],dh
    e1e5:	08 00                	or     BYTE PTR [rax],al
    e1e7:	00 d9                	add    cl,bl
    e1e9:	7e ff                	jle    e1ea <__GNU_EH_FRAME_HDR+0x12e>
    e1eb:	ff 70 08             	push   QWORD PTR [rax+0x8]
    e1ee:	00 00                	add    BYTE PTR [rax],al
    e1f0:	09 7f ff             	or     DWORD PTR [rdi-0x1],edi
    e1f3:	ff 90 08 00 00 40    	call   QWORD PTR [rax+0x40000008]
    e1f9:	7f ff                	jg     e1fa <__GNU_EH_FRAME_HDR+0x13e>
    e1fb:	ff ac 08 00 00 85 80 	jmp    FWORD PTR [rax+rcx*1-0x7f7b0000]
    e202:	ff                   	(bad)  
    e203:	ff cc                	dec    esp
    e205:	08 00                	or     BYTE PTR [rax],al
    e207:	00 e5                	add    ch,ah
    e209:	81 ff ff ec 08 00    	cmp    edi,0x8ecff
    e20f:	00 46 82             	add    BYTE PTR [rsi-0x7e],al
    e212:	ff                   	(bad)  
    e213:	ff 0c 09             	dec    DWORD PTR [rcx+rcx*1]
    e216:	00 00                	add    BYTE PTR [rax],al
    e218:	7f 82                	jg     e19c <__GNU_EH_FRAME_HDR+0xe0>
    e21a:	ff                   	(bad)  
    e21b:	ff 2c 09             	jmp    FWORD PTR [rcx+rcx*1]
    e21e:	00 00                	add    BYTE PTR [rax],al
    e220:	3d 83 ff ff 4c       	cmp    eax,0x4cffff83
    e225:	09 00                	or     DWORD PTR [rax],eax
    e227:	00 c5                	add    ch,al
    e229:	85 ff                	test   edi,edi
    e22b:	ff 6c 09 00          	jmp    FWORD PTR [rcx+rcx*1+0x0]
    e22f:	00 bd 87 ff ff 8c    	add    BYTE PTR [rbp-0x73000079],bh
    e235:	09 00                	or     DWORD PTR [rax],eax
    e237:	00 17                	add    BYTE PTR [rdi],dl
    e239:	88 ff                	mov    bh,bh
    e23b:	ff ac 09 00 00 26 8b 	jmp    FWORD PTR [rcx+rcx*1-0x74da0000]
    e242:	ff                   	(bad)  
    e243:	ff cc                	dec    esp
    e245:	09 00                	or     DWORD PTR [rax],eax
    e247:	00 77 8f             	add    BYTE PTR [rdi-0x71],dh
    e24a:	ff                   	(bad)  
    e24b:	ff                   	(bad)  
    e24c:	ec                   	in     al,dx
    e24d:	09 00                	or     DWORD PTR [rax],eax
    e24f:	00 a1 8f ff ff 08    	add    BYTE PTR [rcx+0x8ffff8f],ah
    e255:	0a 00                	or     al,BYTE PTR [rax]
    e257:	00 53 91             	add    BYTE PTR [rbx-0x6f],dl
    e25a:	ff                   	(bad)  
    e25b:	ff 2c 0a             	jmp    FWORD PTR [rdx+rcx*1]
    e25e:	00 00                	add    BYTE PTR [rax],al
    e260:	6a 91                	push   0xffffffffffffff91
    e262:	ff                   	(bad)  
    e263:	ff 4c 0a 00          	dec    DWORD PTR [rdx+rcx*1+0x0]
    e267:	00 b9 91 ff ff 6c    	add    BYTE PTR [rcx+0x6cffff91],bh
    e26d:	0a 00                	or     al,BYTE PTR [rax]
    e26f:	00 06                	add    BYTE PTR [rsi],al
    e271:	92                   	xchg   edx,eax
    e272:	ff                   	(bad)  
    e273:	ff 8c 0a 00 00 7d 93 	dec    DWORD PTR [rdx+rcx*1-0x6c830000]
    e27a:	ff                   	(bad)  
    e27b:	ff a8 0a 00 00 06    	jmp    FWORD PTR [rax+0x600000a]
    e281:	94                   	xchg   esp,eax
    e282:	ff                   	(bad)  
    e283:	ff cc                	dec    esp
    e285:	0a 00                	or     al,BYTE PTR [rax]
    e287:	00 f4                	add    ah,dh
    e289:	95                   	xchg   ebp,eax
    e28a:	ff                   	(bad)  
    e28b:	ff                   	(bad)  
    e28c:	ec                   	in     al,dx
    e28d:	0a 00                	or     al,BYTE PTR [rax]
    e28f:	00 dc                	add    ah,bl
    e291:	97                   	xchg   edi,eax
    e292:	ff                   	(bad)  
    e293:	ff 0c 0b             	dec    DWORD PTR [rbx+rcx*1]
    e296:	00 00                	add    BYTE PTR [rax],al
    e298:	48 98                	cdqe   
    e29a:	ff                   	(bad)  
    e29b:	ff 2c 0b             	jmp    FWORD PTR [rbx+rcx*1]
    e29e:	00 00                	add    BYTE PTR [rax],al
    e2a0:	ba 98 ff ff 4c       	mov    edx,0x4cffff98
    e2a5:	0b 00                	or     eax,DWORD PTR [rax]
    e2a7:	00 cb                	add    bl,cl
    e2a9:	99                   	cdq    
    e2aa:	ff                   	(bad)  
    e2ab:	ff 6c 0b 00          	jmp    FWORD PTR [rbx+rcx*1+0x0]
    e2af:	00 27                	add    BYTE PTR [rdi],ah
    e2b1:	9a                   	(bad)  
    e2b2:	ff                   	(bad)  
    e2b3:	ff 8c 0b 00 00 65 9a 	dec    DWORD PTR [rbx+rcx*1-0x659b0000]
    e2ba:	ff                   	(bad)  
    e2bb:	ff ac 0b 00 00 eb 9a 	jmp    FWORD PTR [rbx+rcx*1-0x65150000]
    e2c2:	ff                   	(bad)  
    e2c3:	ff cc                	dec    esp
    e2c5:	0b 00                	or     eax,DWORD PTR [rax]
    e2c7:	00 ca                	add    dl,cl
    e2c9:	9b                   	fwait
    e2ca:	ff                   	(bad)  
    e2cb:	ff                   	(bad)  
    e2cc:	ec                   	in     al,dx
    e2cd:	0b 00                	or     eax,DWORD PTR [rax]
    e2cf:	00 3e                	add    BYTE PTR [rsi],bh
    e2d1:	9c                   	pushf  
    e2d2:	ff                   	(bad)  
    e2d3:	ff 0c 0c             	dec    DWORD PTR [rsp+rcx*1]
    e2d6:	00 00                	add    BYTE PTR [rax],al
    e2d8:	da 9c ff ff 2c 0c 00 	ficomp DWORD PTR [rdi+rdi*8+0xc2cff]
    e2df:	00 03                	add    BYTE PTR [rbx],al
    e2e1:	9d                   	popf   
    e2e2:	ff                   	(bad)  
    e2e3:	ff 4c 0c 00          	dec    DWORD PTR [rsp+rcx*1+0x0]
    e2e7:	00 2c 9d ff ff 6c 0c 	add    BYTE PTR [rbx*4+0xc6cffff],ch
    e2ee:	00 00                	add    BYTE PTR [rax],al
    e2f0:	7f 9e                	jg     e290 <__GNU_EH_FRAME_HDR+0x1d4>
    e2f2:	ff                   	(bad)  
    e2f3:	ff 94 0c 00 00 92 9f 	call   QWORD PTR [rsp+rcx*1-0x606e0000]
    e2fa:	ff                   	(bad)  
    e2fb:	ff b4 0c 00 00 8b a0 	push   QWORD PTR [rsp+rcx*1-0x5f750000]
    e302:	ff                   	(bad)  
    e303:	ff d4                	call   rsp
    e305:	0c 00                	or     al,0x0
    e307:	00 a9 a0 ff ff f4    	add    BYTE PTR [rcx-0xb000060],ch
    e30d:	0c 00                	or     al,0x0
    e30f:	00 0c a2             	add    BYTE PTR [rdx+riz*4],cl
    e312:	ff                   	(bad)  
    e313:	ff 14 0d 00 00 1d a4 	call   QWORD PTR [rcx*1-0x5be30000]
    e31a:	ff                   	(bad)  
    e31b:	ff 44 0d 00          	inc    DWORD PTR [rbp+rcx*1+0x0]
    e31f:	00 cf                	add    bh,cl
    e321:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    e322:	ff                   	(bad)  
    e323:	ff 64 0d 00          	jmp    QWORD PTR [rbp+rcx*1+0x0]
    e327:	00 74 a5 ff          	add    BYTE PTR [rbp+riz*4-0x1],dh
    e32b:	ff 84 0d 00 00 08 a6 	inc    DWORD PTR [rbp+rcx*1-0x59f80000]
    e332:	ff                   	(bad)  
    e333:	ff ac 0d 00 00 dd a6 	jmp    FWORD PTR [rbp+rcx*1-0x59230000]
    e33a:	ff                   	(bad)  
    e33b:	ff cc                	dec    esp
    e33d:	0d 00 00 bc a7       	or     eax,0xa7bc0000
    e342:	ff                   	(bad)  
    e343:	ff                   	(bad)  
    e344:	ec                   	in     al,dx
    e345:	0d 00 00 39 a8       	or     eax,0xa8390000
    e34a:	ff                   	(bad)  
    e34b:	ff 0c 0e             	dec    DWORD PTR [rsi+rcx*1]
    e34e:	00 00                	add    BYTE PTR [rax],al
    e350:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e351:	a9 ff ff 2c 0e       	test   eax,0xe2cffff
    e356:	00 00                	add    BYTE PTR [rax],al
    e358:	ed                   	in     eax,dx
    e359:	a9 ff ff 4c 0e       	test   eax,0xe4cffff
    e35e:	00 00                	add    BYTE PTR [rax],al
    e360:	26 ac                	lods   al,BYTE PTR ds:[rsi]
    e362:	ff                   	(bad)  
    e363:	ff 6c 0e 00          	jmp    FWORD PTR [rsi+rcx*1+0x0]
    e367:	00 ef                	add    bh,ch
    e369:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e36a:	ff                   	(bad)  
    e36b:	ff 8c 0e 00 00 90 ae 	dec    DWORD PTR [rsi+rcx*1-0x51700000]
    e372:	ff                   	(bad)  
    e373:	ff ac 0e 00 00 a3 af 	jmp    FWORD PTR [rsi+rcx*1-0x505d0000]
    e37a:	ff                   	(bad)  
    e37b:	ff cc                	dec    esp
    e37d:	0e                   	(bad)  
    e37e:	00 00                	add    BYTE PTR [rax],al
    e380:	09 b0 ff ff ec 0e    	or     DWORD PTR [rax+0xeecffff],esi
    e386:	00 00                	add    BYTE PTR [rax],al
    e388:	7e b0                	jle    e33a <__GNU_EH_FRAME_HDR+0x27e>
    e38a:	ff                   	(bad)  
    e38b:	ff 0c 0f             	dec    DWORD PTR [rdi+rcx*1]
    e38e:	00 00                	add    BYTE PTR [rax],al
    e390:	59                   	pop    rcx
    e391:	b1 ff                	mov    cl,0xff
    e393:	ff 2c 0f             	jmp    FWORD PTR [rdi+rcx*1]
    e396:	00 00                	add    BYTE PTR [rax],al
    e398:	cb                   	retf   
    e399:	b2 ff                	mov    dl,0xff
    e39b:	ff 4c 0f 00          	dec    DWORD PTR [rdi+rcx*1+0x0]
    e39f:	00 37                	add    BYTE PTR [rdi],dh
    e3a1:	b3 ff                	mov    bl,0xff
    e3a3:	ff 6c 0f 00          	jmp    FWORD PTR [rdi+rcx*1+0x0]
    e3a7:	00 b7 b3 ff ff 8c    	add    BYTE PTR [rdi-0x7300004d],dh
    e3ad:	0f 00 00             	sldt   WORD PTR [rax]
    e3b0:	cd b3                	int    0xb3
    e3b2:	ff                   	(bad)  
    e3b3:	ff ac 0f 00 00 07 b5 	jmp    FWORD PTR [rdi+rcx*1-0x4af90000]
    e3ba:	ff                   	(bad)  
    e3bb:	ff d0                	call   rax
    e3bd:	0f 00 00             	sldt   WORD PTR [rax]
    e3c0:	6b b5 ff ff f0 0f 00 	imul   esi,DWORD PTR [rbp+0xff0ffff],0x0
    e3c7:	00 be b5 ff ff 10    	add    BYTE PTR [rsi+0x10ffffb5],bh
    e3cd:	10 00                	adc    BYTE PTR [rax],al
    e3cf:	00 6f b6             	add    BYTE PTR [rdi-0x4a],ch
    e3d2:	ff                   	(bad)  
    e3d3:	ff 30                	push   QWORD PTR [rax]
    e3d5:	10 00                	adc    BYTE PTR [rax],al
    e3d7:	00 3a                	add    BYTE PTR [rdx],bh
    e3d9:	b7 ff                	mov    bh,0xff
    e3db:	ff 50 10             	call   QWORD PTR [rax+0x10]
    e3de:	00 00                	add    BYTE PTR [rax],al
    e3e0:	8f                   	(bad)  
    e3e1:	b7 ff                	mov    bh,0xff
    e3e3:	ff 70 10             	push   QWORD PTR [rax+0x10]
    e3e6:	00 00                	add    BYTE PTR [rax],al
    e3e8:	bf b7 ff ff 90       	mov    edi,0x90ffffb7
    e3ed:	10 00                	adc    BYTE PTR [rax],al
    e3ef:	00 26                	add    BYTE PTR [rsi],ah
    e3f1:	b8 ff ff b0 10       	mov    eax,0x10b0ffff
    e3f6:	00 00                	add    BYTE PTR [rax],al
    e3f8:	5e                   	pop    rsi
    e3f9:	c7                   	(bad)  
    e3fa:	ff                   	(bad)  
    e3fb:	ff d4                	call   rsp
    e3fd:	10 00                	adc    BYTE PTR [rax],al
    e3ff:	00 a4 c7 ff ff f4 10 	add    BYTE PTR [rdi+rax*8+0x10f4ffff],ah
    e406:	00 00                	add    BYTE PTR [rax],al
    e408:	df c9                	(bad)  
    e40a:	ff                   	(bad)  
    e40b:	ff 1c 11             	call   FWORD PTR [rcx+rdx*1]
    e40e:	00 00                	add    BYTE PTR [rax],al
    e410:	84 cb                	test   bl,cl
    e412:	ff                   	(bad)  
    e413:	ff                   	(bad)  
    e414:	3c 11                	cmp    al,0x11
    e416:	00 00                	add    BYTE PTR [rax],al
    e418:	96                   	xchg   esi,eax
    e419:	cc                   	int3   
    e41a:	ff                   	(bad)  
    e41b:	ff 5c 11 00          	call   FWORD PTR [rcx+rdx*1+0x0]
    e41f:	00 52 cd             	add    BYTE PTR [rdx-0x33],dl
    e422:	ff                   	(bad)  
    e423:	ff 84 11 00 00 ed ce 	inc    DWORD PTR [rcx+rdx*1-0x31130000]
    e42a:	ff                   	(bad)  
    e42b:	ff ac 11 00 00 92 cf 	jmp    FWORD PTR [rcx+rdx*1-0x306e0000]
    e432:	ff                   	(bad)  
    e433:	ff cc                	dec    esp
    e435:	11 00                	adc    DWORD PTR [rax],eax
    e437:	00 d5                	add    ch,dl
    e439:	d0 ff                	sar    bh,1
    e43b:	ff                   	(bad)  
    e43c:	ec                   	in     al,dx
    e43d:	11 00                	adc    DWORD PTR [rax],eax
    e43f:	00 c8                	add    al,cl
    e441:	d1 ff                	sar    edi,1
    e443:	ff 0c 12             	dec    DWORD PTR [rdx+rdx*1]
    e446:	00 00                	add    BYTE PTR [rax],al
    e448:	38 d2                	cmp    dl,dl
    e44a:	ff                   	(bad)  
    e44b:	ff 2c 12             	jmp    FWORD PTR [rdx+rdx*1]
    e44e:	00 00                	add    BYTE PTR [rax],al
    e450:	dd d4                	fst    st(4)
    e452:	ff                   	(bad)  
    e453:	ff 4c 12 00          	dec    DWORD PTR [rdx+rdx*1+0x0]
    e457:	00 47 d5             	add    BYTE PTR [rdi-0x2b],al
    e45a:	ff                   	(bad)  
    e45b:	ff 6c 12 00          	jmp    FWORD PTR [rdx+rdx*1+0x0]
    e45f:	00 b5 d5 ff ff 8c    	add    BYTE PTR [rbp-0x7300002b],dh
    e465:	12 00                	adc    al,BYTE PTR [rax]
	...

Disassembly of section .eh_frame:

000000000000e468 <__FRAME_END__-0xf04>:
    e468:	14 00                	adc    al,0x0
    e46a:	00 00                	add    BYTE PTR [rax],al
    e46c:	00 00                	add    BYTE PTR [rax],al
    e46e:	00 00                	add    BYTE PTR [rax],al
    e470:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e473:	00 01                	add    BYTE PTR [rcx],al
    e475:	78 10                	js     e487 <__GNU_EH_FRAME_HDR+0x3cb>
    e477:	01 1b                	add    DWORD PTR [rbx],ebx
    e479:	0c 07                	or     al,0x7
    e47b:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e481:	00 00                	add    BYTE PTR [rax],al
    e483:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e486:	00 00                	add    BYTE PTR [rax],al
    e488:	f8                   	clc    
    e489:	43 ff                	rex.XB (bad) 
    e48b:	ff 26                	jmp    QWORD PTR [rsi]
    e48d:	00 00                	add    BYTE PTR [rax],al
    e48f:	00 00                	add    BYTE PTR [rax],al
    e491:	44 07                	rex.R (bad) 
    e493:	10 00                	adc    BYTE PTR [rax],al
    e495:	00 00                	add    BYTE PTR [rax],al
    e497:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e49a:	00 00                	add    BYTE PTR [rax],al
    e49c:	34 00                	xor    al,0x0
    e49e:	00 00                	add    BYTE PTR [rax],al
    e4a0:	80 3b ff             	cmp    BYTE PTR [rbx],0xff
    e4a3:	ff 30                	push   QWORD PTR [rax]
    e4a5:	04 00                	add    al,0x0
    e4a7:	00 00                	add    BYTE PTR [rax],al
    e4a9:	0e                   	(bad)  
    e4aa:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e4ad:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e4b0:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e4b3:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e4b6:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e4b8:	2a 33                	sub    dh,BYTE PTR [rbx]
    e4ba:	24 22                	and    al,0x22
    e4bc:	00 00                	add    BYTE PTR [rax],al
    e4be:	00 00                	add    BYTE PTR [rax],al
    e4c0:	14 00                	adc    al,0x0
    e4c2:	00 00                	add    BYTE PTR [rax],al
    e4c4:	5c                   	pop    rsp
    e4c5:	00 00                	add    BYTE PTR [rax],al
    e4c7:	00 88 3f ff ff 10    	add    BYTE PTR [rax+0x10ffff3f],cl
	...
    e4d5:	00 00                	add    BYTE PTR [rax],al
    e4d7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e4da:	00 00                	add    BYTE PTR [rax],al
    e4dc:	74 00                	je     e4de <__GNU_EH_FRAME_HDR+0x422>
    e4de:	00 00                	add    BYTE PTR [rax],al
    e4e0:	80 3f ff             	cmp    BYTE PTR [rdi],0xff
    e4e3:	ff 20                	jmp    QWORD PTR [rax]
    e4e5:	04 00                	add    al,0x0
	...
    e4ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4f2:	00 00                	add    BYTE PTR [rax],al
    e4f4:	8c 00                	mov    WORD PTR [rax],es
    e4f6:	00 00                	add    BYTE PTR [rax],al
    e4f8:	71 44                	jno    e53e <__GNU_EH_FRAME_HDR+0x482>
    e4fa:	ff                   	(bad)  
    e4fb:	ff                   	(bad)  
    e4fc:	3a 00                	cmp    al,BYTE PTR [rax]
    e4fe:	00 00                	add    BYTE PTR [rax],al
    e500:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e503:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e509:	71 0c                	jno    e517 <__GNU_EH_FRAME_HDR+0x45b>
    e50b:	07                   	(bad)  
    e50c:	08 00                	or     BYTE PTR [rax],al
    e50e:	00 00                	add    BYTE PTR [rax],al
    e510:	24 00                	and    al,0x0
    e512:	00 00                	add    BYTE PTR [rax],al
    e514:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e515:	00 00                	add    BYTE PTR [rax],al
    e517:	00 8b 44 ff ff 4c    	add    BYTE PTR [rbx+0x4cffff44],cl
    e51d:	01 00                	add    DWORD PTR [rax],eax
    e51f:	00 00                	add    BYTE PTR [rax],al
    e521:	45 0e                	rex.RB (bad) 
    e523:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e529:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e52d:	3e 01 0c 07          	ds add DWORD PTR [rdi+rax*1],ecx
    e531:	08 00                	or     BYTE PTR [rax],al
    e533:	00 00                	add    BYTE PTR [rax],al
    e535:	00 00                	add    BYTE PTR [rax],al
    e537:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e53a:	00 00                	add    BYTE PTR [rax],al
    e53c:	d4                   	(bad)  
    e53d:	00 00                	add    BYTE PTR [rax],al
    e53f:	00 af 45 ff ff f4    	add    BYTE PTR [rdi-0xb0000bb],ch
    e545:	02 00                	add    al,BYTE PTR [rax]
    e547:	00 00                	add    BYTE PTR [rax],al
    e549:	45 0e                	rex.RB (bad) 
    e54b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e551:	03 eb                	add    ebp,ebx
    e553:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e556:	08 00                	or     BYTE PTR [rax],al
    e558:	1c 00                	sbb    al,0x0
    e55a:	00 00                	add    BYTE PTR [rax],al
    e55c:	f4                   	hlt    
    e55d:	00 00                	add    BYTE PTR [rax],al
    e55f:	00 83 48 ff ff 13    	add    BYTE PTR [rbx+0x13ffff48],al
    e565:	01 00                	add    DWORD PTR [rax],eax
    e567:	00 00                	add    BYTE PTR [rax],al
    e569:	45 0e                	rex.RB (bad) 
    e56b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e571:	03 0a                	add    ecx,DWORD PTR [rdx]
    e573:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e576:	08 00                	or     BYTE PTR [rax],al
    e578:	1c 00                	sbb    al,0x0
    e57a:	00 00                	add    BYTE PTR [rax],al
    e57c:	14 01                	adc    al,0x1
    e57e:	00 00                	add    BYTE PTR [rax],al
    e580:	76 49                	jbe    e5cb <__GNU_EH_FRAME_HDR+0x50f>
    e582:	ff                   	(bad)  
    e583:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    e589:	45 0e                	rex.RB (bad) 
    e58b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e591:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e597:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e59a:	00 00                	add    BYTE PTR [rax],al
    e59c:	34 01                	xor    al,0x1
    e59e:	00 00                	add    BYTE PTR [rax],al
    e5a0:	04 4a                	add    al,0x4a
    e5a2:	ff                   	(bad)  
    e5a3:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    e5a9:	45 0e                	rex.RB (bad) 
    e5ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5b1:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e5b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e5ba:	00 00                	add    BYTE PTR [rax],al
    e5bc:	54                   	push   rsp
    e5bd:	01 00                	add    DWORD PTR [rax],eax
    e5bf:	00 8a 4a ff ff 95    	add    BYTE PTR [rdx-0x6a0000b6],cl
    e5c5:	00 00                	add    BYTE PTR [rax],al
    e5c7:	00 00                	add    BYTE PTR [rax],al
    e5c9:	45 0e                	rex.RB (bad) 
    e5cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5d1:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e5d8:	1c 00                	sbb    al,0x0
    e5da:	00 00                	add    BYTE PTR [rax],al
    e5dc:	74 01                	je     e5df <__GNU_EH_FRAME_HDR+0x523>
    e5de:	00 00                	add    BYTE PTR [rax],al
    e5e0:	ff 4a ff             	dec    DWORD PTR [rdx-0x1]
    e5e3:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e5ea:	0e                   	(bad)  
    e5eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5f1:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e5f7:	00 28                	add    BYTE PTR [rax],ch
    e5f9:	00 00                	add    BYTE PTR [rax],al
    e5fb:	00 94 01 00 00 73 4b 	add    BYTE PTR [rcx+rax*1+0x4b730000],dl
    e602:	ff                   	(bad)  
    e603:	ff cc                	dec    esp
    e605:	01 00                	add    DWORD PTR [rax],eax
    e607:	00 00                	add    BYTE PTR [rax],al
    e609:	45 0e                	rex.RB (bad) 
    e60b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e611:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e614:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e61b:	07                   	(bad)  
    e61c:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e622:	00 00                	add    BYTE PTR [rax],al
    e624:	20 00                	and    BYTE PTR [rax],al
    e626:	00 00                	add    BYTE PTR [rax],al
    e628:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e62b:	00 13                	add    BYTE PTR [rbx],dl
    e62d:	4d ff                	rex.WRB (bad) 
    e62f:	ff d4                	call   rsp
    e631:	00 00                	add    BYTE PTR [rax],al
    e633:	00 00                	add    BYTE PTR [rax],al
    e635:	45 0e                	rex.RB (bad) 
    e637:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e63d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e641:	c6                   	(bad)  
    e642:	0c 07                	or     al,0x7
    e644:	08 00                	or     BYTE PTR [rax],al
    e646:	00 00                	add    BYTE PTR [rax],al
    e648:	20 00                	and    BYTE PTR [rax],al
    e64a:	00 00                	add    BYTE PTR [rax],al
    e64c:	e4 01                	in     al,0x1
    e64e:	00 00                	add    BYTE PTR [rax],al
    e650:	c3                   	ret    
    e651:	4d ff                	rex.WRB (bad) 
    e653:	ff c7                	inc    edi
    e655:	00 00                	add    BYTE PTR [rax],al
    e657:	00 00                	add    BYTE PTR [rax],al
    e659:	45 0e                	rex.RB (bad) 
    e65b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e661:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e665:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e66a:	00 00                	add    BYTE PTR [rax],al
    e66c:	1c 00                	sbb    al,0x0
    e66e:	00 00                	add    BYTE PTR [rax],al
    e670:	08 02                	or     BYTE PTR [rdx],al
    e672:	00 00                	add    BYTE PTR [rax],al
    e674:	66 4e ff             	data16 rex.WRX (bad) 
    e677:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    e67a:	00 00                	add    BYTE PTR [rax],al
    e67c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e67f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e685:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e688:	07                   	(bad)  
    e689:	08 00                	or     BYTE PTR [rax],al
    e68b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e68e:	00 00                	add    BYTE PTR [rax],al
    e690:	28 02                	sub    BYTE PTR [rdx],al
    e692:	00 00                	add    BYTE PTR [rax],al
    e694:	99                   	cdq    
    e695:	4e ff                	rex.WRX (bad) 
    e697:	ff 33                	push   QWORD PTR [rbx]
    e699:	00 00                	add    BYTE PTR [rax],al
    e69b:	00 00                	add    BYTE PTR [rax],al
    e69d:	45 0e                	rex.RB (bad) 
    e69f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6a5:	6a 0c                	push   0xc
    e6a7:	07                   	(bad)  
    e6a8:	08 00                	or     BYTE PTR [rax],al
    e6aa:	00 00                	add    BYTE PTR [rax],al
    e6ac:	1c 00                	sbb    al,0x0
    e6ae:	00 00                	add    BYTE PTR [rax],al
    e6b0:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e6b3:	00 ac 4e ff ff 21 00 	add    BYTE PTR [rsi+rcx*2+0x21ffff],ch
    e6ba:	00 00                	add    BYTE PTR [rax],al
    e6bc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6bf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6c5:	58                   	pop    rax
    e6c6:	0c 07                	or     al,0x7
    e6c8:	08 00                	or     BYTE PTR [rax],al
    e6ca:	00 00                	add    BYTE PTR [rax],al
    e6cc:	20 00                	and    BYTE PTR [rax],al
    e6ce:	00 00                	add    BYTE PTR [rax],al
    e6d0:	68 02 00 00 ad       	push   0xffffffffad000002
    e6d5:	4e ff                	rex.WRX (bad) 
    e6d7:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    e6da:	00 00                	add    BYTE PTR [rax],al
    e6dc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6df:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6e5:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6e9:	5a                   	pop    rdx
    e6ea:	0c 07                	or     al,0x7
    e6ec:	08 00                	or     BYTE PTR [rax],al
    e6ee:	00 00                	add    BYTE PTR [rax],al
    e6f0:	1c 00                	sbb    al,0x0
    e6f2:	00 00                	add    BYTE PTR [rax],al
    e6f4:	8c 02                	mov    WORD PTR [rdx],es
    e6f6:	00 00                	add    BYTE PTR [rax],al
    e6f8:	f1                   	icebp  
    e6f9:	4e ff                	rex.WRX (bad) 
    e6fb:	ff 25 04 00 00 00    	jmp    QWORD PTR [rip+0x4]        # e705 <__GNU_EH_FRAME_HDR+0x649>
    e701:	45 0e                	rex.RB (bad) 
    e703:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e709:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e70c:	0c 07                	or     al,0x7
    e70e:	08 00                	or     BYTE PTR [rax],al
    e710:	1c 00                	sbb    al,0x0
    e712:	00 00                	add    BYTE PTR [rax],al
    e714:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e715:	02 00                	add    al,BYTE PTR [rax]
    e717:	00 f6                	add    dh,dh
    e719:	52                   	push   rdx
    e71a:	ff                   	(bad)  
    e71b:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    e71e:	00 00                	add    BYTE PTR [rax],al
    e720:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e723:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e729:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e72d:	07                   	(bad)  
    e72e:	08 00                	or     BYTE PTR [rax],al
    e730:	1c 00                	sbb    al,0x0
    e732:	00 00                	add    BYTE PTR [rax],al
    e734:	cc                   	int3   
    e735:	02 00                	add    al,BYTE PTR [rax]
    e737:	00 33                	add    BYTE PTR [rbx],dh
    e739:	54                   	push   rsp
    e73a:	ff                   	(bad)  
    e73b:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    e73f:	00 00                	add    BYTE PTR [rax],al
    e741:	45 0e                	rex.RB (bad) 
    e743:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e749:	03 3b                	add    edi,DWORD PTR [rbx]
    e74b:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e74e:	08 00                	or     BYTE PTR [rax],al
    e750:	24 00                	and    al,0x0
    e752:	00 00                	add    BYTE PTR [rax],al
    e754:	ec                   	in     al,dx
    e755:	02 00                	add    al,BYTE PTR [rax]
    e757:	00 57 5c             	add    BYTE PTR [rdi+0x5c],dl
    e75a:	ff                   	(bad)  
    e75b:	ff                   	(bad)  
    e75c:	bc 08 00 00 00       	mov    esp,0x8
    e761:	45 0e                	rex.RB (bad) 
    e763:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e769:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e76d:	ab                   	stos   DWORD PTR es:[rdi],eax
    e76e:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e771:	08 00                	or     BYTE PTR [rax],al
    e773:	00 00                	add    BYTE PTR [rax],al
    e775:	00 00                	add    BYTE PTR [rax],al
    e777:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e77a:	00 00                	add    BYTE PTR [rax],al
    e77c:	14 03                	adc    al,0x3
    e77e:	00 00                	add    BYTE PTR [rax],al
    e780:	eb 64                	jmp    e7e6 <__GNU_EH_FRAME_HDR+0x72a>
    e782:	ff                   	(bad)  
    e783:	ff 55 01             	call   QWORD PTR [rbp+0x1]
    e786:	00 00                	add    BYTE PTR [rax],al
    e788:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e78b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e791:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e795:	07                   	(bad)  
    e796:	08 00                	or     BYTE PTR [rax],al
    e798:	1c 00                	sbb    al,0x0
    e79a:	00 00                	add    BYTE PTR [rax],al
    e79c:	34 03                	xor    al,0x3
    e79e:	00 00                	add    BYTE PTR [rax],al
    e7a0:	20 66 ff             	and    BYTE PTR [rsi-0x1],ah
    e7a3:	ff                   	(bad)  
    e7a4:	ff 00                	inc    DWORD PTR [rax]
    e7a6:	00 00                	add    BYTE PTR [rax],al
    e7a8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e7ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7b1:	02 f6                	add    dh,dh
    e7b3:	0c 07                	or     al,0x7
    e7b5:	08 00                	or     BYTE PTR [rax],al
    e7b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7ba:	00 00                	add    BYTE PTR [rax],al
    e7bc:	54                   	push   rsp
    e7bd:	03 00                	add    eax,DWORD PTR [rax]
    e7bf:	00 ff                	add    bh,bh
    e7c1:	66 ff                	data16 (bad) 
    e7c3:	ff                   	(bad)  
    e7c4:	ec                   	in     al,dx
    e7c5:	00 00                	add    BYTE PTR [rax],al
    e7c7:	00 00                	add    BYTE PTR [rax],al
    e7c9:	45 0e                	rex.RB (bad) 
    e7cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7d1:	02 e3                	add    ah,bl
    e7d3:	0c 07                	or     al,0x7
    e7d5:	08 00                	or     BYTE PTR [rax],al
    e7d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7da:	00 00                	add    BYTE PTR [rax],al
    e7dc:	74 03                	je     e7e1 <__GNU_EH_FRAME_HDR+0x725>
    e7de:	00 00                	add    BYTE PTR [rax],al
    e7e0:	cb                   	retf   
    e7e1:	67 ff                	addr32 (bad) 
    e7e3:	ff b2 03 00 00 00    	push   QWORD PTR [rdx+0x3]
    e7e9:	45 0e                	rex.RB (bad) 
    e7eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7f1:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e7f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7fa:	00 00                	add    BYTE PTR [rax],al
    e7fc:	94                   	xchg   esp,eax
    e7fd:	03 00                	add    eax,DWORD PTR [rax]
    e7ff:	00 5d 6b             	add    BYTE PTR [rbp+0x6b],bl
    e802:	ff                   	(bad)  
    e803:	ff 83 00 00 00 00    	inc    DWORD PTR [rbx+0x0]
    e809:	45 0e                	rex.RB (bad) 
    e80b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e811:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e814:	07                   	(bad)  
    e815:	08 00                	or     BYTE PTR [rax],al
    e817:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e81a:	00 00                	add    BYTE PTR [rax],al
    e81c:	b4 03                	mov    ah,0x3
    e81e:	00 00                	add    BYTE PTR [rax],al
    e820:	c0 6b ff ff          	shr    BYTE PTR [rbx-0x1],0xff
    e824:	2a 02                	sub    al,BYTE PTR [rdx]
    e826:	00 00                	add    BYTE PTR [rax],al
    e828:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e82b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e831:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e835:	19 02                	sbb    DWORD PTR [rdx],eax
    e837:	0c 07                	or     al,0x7
    e839:	08 00                	or     BYTE PTR [rax],al
    e83b:	00 00                	add    BYTE PTR [rax],al
    e83d:	00 00                	add    BYTE PTR [rax],al
    e83f:	00 20                	add    BYTE PTR [rax],ah
    e841:	00 00                	add    BYTE PTR [rax],al
    e843:	00 dc                	add    ah,bl
    e845:	03 00                	add    eax,DWORD PTR [rax]
    e847:	00 c2                	add    dl,al
    e849:	6d                   	ins    DWORD PTR es:[rdi],dx
    e84a:	ff                   	(bad)  
    e84b:	ff                   	(bad)  
    e84c:	3d 02 00 00 00       	cmp    eax,0x2
    e851:	45 0e                	rex.RB (bad) 
    e853:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e859:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e85d:	2f                   	(bad)  
    e85e:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e861:	08 00                	or     BYTE PTR [rax],al
    e863:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e866:	00 00                	add    BYTE PTR [rax],al
    e868:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    e86b:	00 db                	add    bl,bl
    e86d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e86e:	ff                   	(bad)  
    e86f:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    e872:	00 00                	add    BYTE PTR [rax],al
    e874:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e877:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e87d:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e880:	07                   	(bad)  
    e881:	08 00                	or     BYTE PTR [rax],al
    e883:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e886:	00 00                	add    BYTE PTR [rax],al
    e888:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    e88b:	00 21                	add    BYTE PTR [rcx],ah
    e88d:	70 ff                	jo     e88e <__GNU_EH_FRAME_HDR+0x7d2>
    e88f:	ff 17                	call   QWORD PTR [rdi]
    e891:	00 00                	add    BYTE PTR [rax],al
    e893:	00 00                	add    BYTE PTR [rax],al
    e895:	45 0e                	rex.RB (bad) 
    e897:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e89d:	4e 0c 07             	rex.WRX or al,0x7
    e8a0:	08 00                	or     BYTE PTR [rax],al
    e8a2:	00 00                	add    BYTE PTR [rax],al
    e8a4:	20 00                	and    BYTE PTR [rax],al
    e8a6:	00 00                	add    BYTE PTR [rax],al
    e8a8:	40 04 00             	rex add al,0x0
    e8ab:	00 18                	add    BYTE PTR [rax],bl
    e8ad:	70 ff                	jo     e8ae <__GNU_EH_FRAME_HDR+0x7f2>
    e8af:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    e8b2:	00 00                	add    BYTE PTR [rax],al
    e8b4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8b7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8bd:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e8c0:	07                   	(bad)  
    e8c1:	08 00                	or     BYTE PTR [rax],al
    e8c3:	00 00                	add    BYTE PTR [rax],al
    e8c5:	00 00                	add    BYTE PTR [rax],al
    e8c7:	00 20                	add    BYTE PTR [rax],ah
    e8c9:	00 00                	add    BYTE PTR [rax],al
    e8cb:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    e8cf:	00 45 70             	add    BYTE PTR [rbp+0x70],al
    e8d2:	ff                   	(bad)  
    e8d3:	ff                   	(bad)  
    e8d4:	3d 06 00 00 00       	cmp    eax,0x6
    e8d9:	45 0e                	rex.RB (bad) 
    e8db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8e1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e8e5:	2f                   	(bad)  
    e8e6:	06                   	(bad)  
    e8e7:	0c 07                	or     al,0x7
    e8e9:	08 00                	or     BYTE PTR [rax],al
    e8eb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8ee:	00 00                	add    BYTE PTR [rax],al
    e8f0:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    e8f3:	00 5e 76             	add    BYTE PTR [rsi+0x76],bl
    e8f6:	ff                   	(bad)  
    e8f7:	ff 1a                	call   FWORD PTR [rdx]
    e8f9:	00 00                	add    BYTE PTR [rax],al
    e8fb:	00 00                	add    BYTE PTR [rax],al
    e8fd:	45 0e                	rex.RB (bad) 
    e8ff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e905:	51                   	push   rcx
    e906:	0c 07                	or     al,0x7
    e908:	08 00                	or     BYTE PTR [rax],al
    e90a:	00 00                	add    BYTE PTR [rax],al
    e90c:	1c 00                	sbb    al,0x0
    e90e:	00 00                	add    BYTE PTR [rax],al
    e910:	a8 04                	test   al,0x4
    e912:	00 00                	add    BYTE PTR [rax],al
    e914:	58                   	pop    rax
    e915:	76 ff                	jbe    e916 <__GNU_EH_FRAME_HDR+0x85a>
    e917:	ff 29                	jmp    FWORD PTR [rcx]
    e919:	00 00                	add    BYTE PTR [rax],al
    e91b:	00 00                	add    BYTE PTR [rax],al
    e91d:	45 0e                	rex.RB (bad) 
    e91f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e925:	60                   	(bad)  
    e926:	0c 07                	or     al,0x7
    e928:	08 00                	or     BYTE PTR [rax],al
    e92a:	00 00                	add    BYTE PTR [rax],al
    e92c:	1c 00                	sbb    al,0x0
    e92e:	00 00                	add    BYTE PTR [rax],al
    e930:	c8 04 00 00          	enter  0x4,0x0
    e934:	61                   	(bad)  
    e935:	76 ff                	jbe    e936 <__GNU_EH_FRAME_HDR+0x87a>
    e937:	ff 30                	push   QWORD PTR [rax]
    e939:	00 00                	add    BYTE PTR [rax],al
    e93b:	00 00                	add    BYTE PTR [rax],al
    e93d:	45 0e                	rex.RB (bad) 
    e93f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e945:	67 0c 07             	addr32 or al,0x7
    e948:	08 00                	or     BYTE PTR [rax],al
    e94a:	00 00                	add    BYTE PTR [rax],al
    e94c:	18 00                	sbb    BYTE PTR [rax],al
    e94e:	00 00                	add    BYTE PTR [rax],al
    e950:	e8 04 00 00 71       	call   7100e959 <_end+0x70ed3951>
    e955:	76 ff                	jbe    e956 <__GNU_EH_FRAME_HDR+0x89a>
    e957:	ff 37                	push   QWORD PTR [rdi]
    e959:	00 00                	add    BYTE PTR [rax],al
    e95b:	00 00                	add    BYTE PTR [rax],al
    e95d:	45 0e                	rex.RB (bad) 
    e95f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e965:	00 00                	add    BYTE PTR [rax],al
    e967:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e96a:	00 00                	add    BYTE PTR [rax],al
    e96c:	04 05                	add    al,0x5
    e96e:	00 00                	add    BYTE PTR [rax],al
    e970:	8c 76 ff             	mov    WORD PTR [rsi-0x1],?
    e973:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    e976:	00 00                	add    BYTE PTR [rax],al
    e978:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e97b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e981:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    e984:	0c 07                	or     al,0x7
    e986:	08 00                	or     BYTE PTR [rax],al
    e988:	1c 00                	sbb    al,0x0
    e98a:	00 00                	add    BYTE PTR [rax],al
    e98c:	24 05                	and    al,0x5
    e98e:	00 00                	add    BYTE PTR [rax],al
    e990:	b1 77                	mov    cl,0x77
    e992:	ff                   	(bad)  
    e993:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    e996:	00 00                	add    BYTE PTR [rax],al
    e998:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e99b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9a1:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    e9a4:	0c 07                	or     al,0x7
    e9a6:	08 00                	or     BYTE PTR [rax],al
    e9a8:	1c 00                	sbb    al,0x0
    e9aa:	00 00                	add    BYTE PTR [rax],al
    e9ac:	44 05 00 00 f1 78    	rex.R add eax,0x78f10000
    e9b2:	ff                   	(bad)  
    e9b3:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    e9b6:	00 00                	add    BYTE PTR [rax],al
    e9b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9c1:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    e9c4:	07                   	(bad)  
    e9c5:	08 00                	or     BYTE PTR [rax],al
    e9c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e9ca:	00 00                	add    BYTE PTR [rax],al
    e9cc:	64 05 00 00 32 79    	fs add eax,0x79320000
    e9d2:	ff                   	(bad)  
    e9d3:	ff                   	(bad)  
    e9d4:	39 00                	cmp    DWORD PTR [rax],eax
    e9d6:	00 00                	add    BYTE PTR [rax],al
    e9d8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9e1:	70 0c                	jo     e9ef <__GNU_EH_FRAME_HDR+0x933>
    e9e3:	07                   	(bad)  
    e9e4:	08 00                	or     BYTE PTR [rax],al
    e9e6:	00 00                	add    BYTE PTR [rax],al
    e9e8:	1c 00                	sbb    al,0x0
    e9ea:	00 00                	add    BYTE PTR [rax],al
    e9ec:	84 05 00 00 4b 79    	test   BYTE PTR [rip+0x794b0000],al        # 794be9f2 <_end+0x793839ea>
    e9f2:	ff                   	(bad)  
    e9f3:	ff                   	(bad)  
    e9f4:	be 00 00 00 00       	mov    esi,0x0
    e9f9:	45 0e                	rex.RB (bad) 
    e9fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea01:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    ea07:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea0a:	00 00                	add    BYTE PTR [rax],al
    ea0c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ea0d:	05 00 00 e9 79       	add    eax,0x79e90000
    ea12:	ff                   	(bad)  
    ea13:	ff 88 02 00 00 00    	dec    DWORD PTR [rax+0x2]
    ea19:	45 0e                	rex.RB (bad) 
    ea1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea21:	03 7f 02             	add    edi,DWORD PTR [rdi+0x2]
    ea24:	0c 07                	or     al,0x7
    ea26:	08 00                	or     BYTE PTR [rax],al
    ea28:	1c 00                	sbb    al,0x0
    ea2a:	00 00                	add    BYTE PTR [rax],al
    ea2c:	c4                   	(bad)  
    ea2d:	05 00 00 51 7c       	add    eax,0x7c510000
    ea32:	ff                   	(bad)  
    ea33:	ff                   	(bad)  
    ea34:	f8                   	clc    
    ea35:	01 00                	add    DWORD PTR [rax],eax
    ea37:	00 00                	add    BYTE PTR [rax],al
    ea39:	45 0e                	rex.RB (bad) 
    ea3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea41:	03 ef                	add    ebp,edi
    ea43:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ea46:	08 00                	or     BYTE PTR [rax],al
    ea48:	1c 00                	sbb    al,0x0
    ea4a:	00 00                	add    BYTE PTR [rax],al
    ea4c:	e4 05                	in     al,0x5
    ea4e:	00 00                	add    BYTE PTR [rax],al
    ea50:	29 7e ff             	sub    DWORD PTR [rsi-0x1],edi
    ea53:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
    ea56:	00 00                	add    BYTE PTR [rax],al
    ea58:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea61:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    ea64:	07                   	(bad)  
    ea65:	08 00                	or     BYTE PTR [rax],al
    ea67:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea6a:	00 00                	add    BYTE PTR [rax],al
    ea6c:	04 06                	add    al,0x6
    ea6e:	00 00                	add    BYTE PTR [rax],al
    ea70:	63 7e ff             	movsxd edi,DWORD PTR [rsi-0x1]
    ea73:	ff 0f                	dec    DWORD PTR [rdi]
    ea75:	03 00                	add    eax,DWORD PTR [rax]
    ea77:	00 00                	add    BYTE PTR [rax],al
    ea79:	45 0e                	rex.RB (bad) 
    ea7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea81:	03 06                	add    eax,DWORD PTR [rsi]
    ea83:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    ea86:	08 00                	or     BYTE PTR [rax],al
    ea88:	1c 00                	sbb    al,0x0
    ea8a:	00 00                	add    BYTE PTR [rax],al
    ea8c:	24 06                	and    al,0x6
    ea8e:	00 00                	add    BYTE PTR [rax],al
    ea90:	52                   	push   rdx
    ea91:	81 ff ff 51 04 00    	cmp    edi,0x451ff
    ea97:	00 00                	add    BYTE PTR [rax],al
    ea99:	45 0e                	rex.RB (bad) 
    ea9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaa1:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    eaa4:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    eaa8:	18 00                	sbb    BYTE PTR [rax],al
    eaaa:	00 00                	add    BYTE PTR [rax],al
    eaac:	44 06                	rex.R (bad) 
    eaae:	00 00                	add    BYTE PTR [rax],al
    eab0:	83 85 ff ff 2a 00 00 	add    DWORD PTR [rbp+0x2affff],0x0
    eab7:	00 00                	add    BYTE PTR [rax],al
    eab9:	45 0e                	rex.RB (bad) 
    eabb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eac1:	00 00                	add    BYTE PTR [rax],al
    eac3:	00 20                	add    BYTE PTR [rax],ah
    eac5:	00 00                	add    BYTE PTR [rax],al
    eac7:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    eaca:	00 00                	add    BYTE PTR [rax],al
    eacc:	91                   	xchg   ecx,eax
    eacd:	85 ff                	test   edi,edi
    eacf:	ff b2 01 00 00 00    	push   QWORD PTR [rdx+0x1]
    ead5:	45 0e                	rex.RB (bad) 
    ead7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eadd:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    eae1:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    eae8:	1c 00 
    eaea:	00 00                	add    BYTE PTR [rax],al
    eaec:	84 06                	test   BYTE PTR [rsi],al
    eaee:	00 00                	add    BYTE PTR [rax],al
    eaf0:	1f                   	(bad)  
    eaf1:	87 ff                	xchg   edi,edi
    eaf3:	ff 17                	call   QWORD PTR [rdi]
    eaf5:	00 00                	add    BYTE PTR [rax],al
    eaf7:	00 00                	add    BYTE PTR [rax],al
    eaf9:	45 0e                	rex.RB (bad) 
    eafb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb01:	4e 0c 07             	rex.WRX or al,0x7
    eb04:	08 00                	or     BYTE PTR [rax],al
    eb06:	00 00                	add    BYTE PTR [rax],al
    eb08:	1c 00                	sbb    al,0x0
    eb0a:	00 00                	add    BYTE PTR [rax],al
    eb0c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    eb0d:	06                   	(bad)  
    eb0e:	00 00                	add    BYTE PTR [rax],al
    eb10:	16                   	(bad)  
    eb11:	87 ff                	xchg   edi,edi
    eb13:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    eb16:	00 00                	add    BYTE PTR [rax],al
    eb18:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb21:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    eb24:	07                   	(bad)  
    eb25:	08 00                	or     BYTE PTR [rax],al
    eb27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb2a:	00 00                	add    BYTE PTR [rax],al
    eb2c:	c4                   	(bad)  
    eb2d:	06                   	(bad)  
    eb2e:	00 00                	add    BYTE PTR [rax],al
    eb30:	45 87 ff             	xchg   r15d,r15d
    eb33:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    eb36:	00 00                	add    BYTE PTR [rax],al
    eb38:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb41:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    eb45:	08 00                	or     BYTE PTR [rax],al
    eb47:	00 18                	add    BYTE PTR [rax],bl
    eb49:	00 00                	add    BYTE PTR [rax],al
    eb4b:	00 e4                	add    ah,ah
    eb4d:	06                   	(bad)  
    eb4e:	00 00                	add    BYTE PTR [rax],al
    eb50:	72 87                	jb     ead9 <__GNU_EH_FRAME_HDR+0xa1d>
    eb52:	ff                   	(bad)  
    eb53:	ff 77 01             	push   QWORD PTR [rdi+0x1]
    eb56:	00 00                	add    BYTE PTR [rax],al
    eb58:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb61:	00 00                	add    BYTE PTR [rax],al
    eb63:	00 20                	add    BYTE PTR [rax],ah
    eb65:	00 00                	add    BYTE PTR [rax],al
    eb67:	00 00                	add    BYTE PTR [rax],al
    eb69:	07                   	(bad)  
    eb6a:	00 00                	add    BYTE PTR [rax],al
    eb6c:	cd 88                	int    0x88
    eb6e:	ff                   	(bad)  
    eb6f:	ff 89 00 00 00 00    	dec    DWORD PTR [rcx+0x0]
    eb75:	45 0e                	rex.RB (bad) 
    eb77:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb7d:	02 80 0c 07 08 00    	add    al,BYTE PTR [rax+0x8070c]
    eb83:	00 00                	add    BYTE PTR [rax],al
    eb85:	00 00                	add    BYTE PTR [rax],al
    eb87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb8a:	00 00                	add    BYTE PTR [rax],al
    eb8c:	24 07                	and    al,0x7
    eb8e:	00 00                	add    BYTE PTR [rax],al
    eb90:	32 89 ff ff ee 01    	xor    cl,BYTE PTR [rcx+0x1eeffff]
    eb96:	00 00                	add    BYTE PTR [rax],al
    eb98:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eba1:	03 e5                	add    esp,ebp
    eba3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eba6:	08 00                	or     BYTE PTR [rax],al
    eba8:	1c 00                	sbb    al,0x0
    ebaa:	00 00                	add    BYTE PTR [rax],al
    ebac:	44 07                	rex.R (bad) 
    ebae:	00 00                	add    BYTE PTR [rax],al
    ebb0:	00 8b ff ff e8 01    	add    BYTE PTR [rbx+0x1e8ffff],cl
    ebb6:	00 00                	add    BYTE PTR [rax],al
    ebb8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebc1:	03 df                	add    ebx,edi
    ebc3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ebc6:	08 00                	or     BYTE PTR [rax],al
    ebc8:	1c 00                	sbb    al,0x0
    ebca:	00 00                	add    BYTE PTR [rax],al
    ebcc:	64 07                	fs (bad) 
    ebce:	00 00                	add    BYTE PTR [rax],al
    ebd0:	c8 8c ff ff          	enter  0xff8c,0xff
    ebd4:	6c                   	ins    BYTE PTR es:[rdi],dx
    ebd5:	00 00                	add    BYTE PTR [rax],al
    ebd7:	00 00                	add    BYTE PTR [rax],al
    ebd9:	45 0e                	rex.RB (bad) 
    ebdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebe1:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    ebe4:	07                   	(bad)  
    ebe5:	08 00                	or     BYTE PTR [rax],al
    ebe7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebea:	00 00                	add    BYTE PTR [rax],al
    ebec:	84 07                	test   BYTE PTR [rdi],al
    ebee:	00 00                	add    BYTE PTR [rax],al
    ebf0:	14 8d                	adc    al,0x8d
    ebf2:	ff                   	(bad)  
    ebf3:	ff 72 00             	push   QWORD PTR [rdx+0x0]
    ebf6:	00 00                	add    BYTE PTR [rax],al
    ebf8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec01:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    ec04:	07                   	(bad)  
    ec05:	08 00                	or     BYTE PTR [rax],al
    ec07:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec0a:	00 00                	add    BYTE PTR [rax],al
    ec0c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ec0d:	07                   	(bad)  
    ec0e:	00 00                	add    BYTE PTR [rax],al
    ec10:	66 8d                	data16 (bad) 
    ec12:	ff                   	(bad)  
    ec13:	ff 11                	call   QWORD PTR [rcx]
    ec15:	01 00                	add    DWORD PTR [rax],eax
    ec17:	00 00                	add    BYTE PTR [rax],al
    ec19:	45 0e                	rex.RB (bad) 
    ec1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec21:	03 08                	add    ecx,DWORD PTR [rax]
    ec23:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec26:	08 00                	or     BYTE PTR [rax],al
    ec28:	1c 00                	sbb    al,0x0
    ec2a:	00 00                	add    BYTE PTR [rax],al
    ec2c:	c4                   	(bad)  
    ec2d:	07                   	(bad)  
    ec2e:	00 00                	add    BYTE PTR [rax],al
    ec30:	57                   	push   rdi
    ec31:	8e ff                	mov    ?,edi
    ec33:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
    ec37:	00 00                	add    BYTE PTR [rax],al
    ec39:	45 0e                	rex.RB (bad) 
    ec3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec41:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    ec44:	07                   	(bad)  
    ec45:	08 00                	or     BYTE PTR [rax],al
    ec47:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec4a:	00 00                	add    BYTE PTR [rax],al
    ec4c:	e4 07                	in     al,0x7
    ec4e:	00 00                	add    BYTE PTR [rax],al
    ec50:	93                   	xchg   ebx,eax
    ec51:	8e ff                	mov    ?,edi
    ec53:	ff                   	(bad)  
    ec54:	3e 00 00             	ds add BYTE PTR [rax],al
    ec57:	00 00                	add    BYTE PTR [rax],al
    ec59:	45 0e                	rex.RB (bad) 
    ec5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec61:	75 0c                	jne    ec6f <__GNU_EH_FRAME_HDR+0xbb3>
    ec63:	07                   	(bad)  
    ec64:	08 00                	or     BYTE PTR [rax],al
    ec66:	00 00                	add    BYTE PTR [rax],al
    ec68:	1c 00                	sbb    al,0x0
    ec6a:	00 00                	add    BYTE PTR [rax],al
    ec6c:	04 08                	add    al,0x8
    ec6e:	00 00                	add    BYTE PTR [rax],al
    ec70:	b1 8e                	mov    cl,0x8e
    ec72:	ff                   	(bad)  
    ec73:	ff 86 00 00 00 00    	inc    DWORD PTR [rsi+0x0]
    ec79:	45 0e                	rex.RB (bad) 
    ec7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec81:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    ec84:	07                   	(bad)  
    ec85:	08 00                	or     BYTE PTR [rax],al
    ec87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec8a:	00 00                	add    BYTE PTR [rax],al
    ec8c:	24 08                	and    al,0x8
    ec8e:	00 00                	add    BYTE PTR [rax],al
    ec90:	17                   	(bad)  
    ec91:	8f                   	(bad)  
    ec92:	ff                   	(bad)  
    ec93:	ff                   	(bad)  
    ec94:	df 00                	fild   WORD PTR [rax]
    ec96:	00 00                	add    BYTE PTR [rax],al
    ec98:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eca1:	02 d6                	add    dl,dh
    eca3:	0c 07                	or     al,0x7
    eca5:	08 00                	or     BYTE PTR [rax],al
    eca7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecaa:	00 00                	add    BYTE PTR [rax],al
    ecac:	44 08 00             	or     BYTE PTR [rax],r8b
    ecaf:	00 d6                	add    dh,dl
    ecb1:	8f                   	(bad)  
    ecb2:	ff                   	(bad)  
    ecb3:	ff 74 00 00          	push   QWORD PTR [rax+rax*1+0x0]
    ecb7:	00 00                	add    BYTE PTR [rax],al
    ecb9:	45 0e                	rex.RB (bad) 
    ecbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecc1:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ecc4:	07                   	(bad)  
    ecc5:	08 00                	or     BYTE PTR [rax],al
    ecc7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecca:	00 00                	add    BYTE PTR [rax],al
    eccc:	64 08 00             	or     BYTE PTR fs:[rax],al
    eccf:	00 2a                	add    BYTE PTR [rdx],ch
    ecd1:	90                   	nop
    ecd2:	ff                   	(bad)  
    ecd3:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ecda:	0e                   	(bad)  
    ecdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ece1:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ece7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecea:	00 00                	add    BYTE PTR [rax],al
    ecec:	84 08                	test   BYTE PTR [rax],cl
    ecee:	00 00                	add    BYTE PTR [rax],al
    ecf0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    ecf1:	90                   	nop
    ecf2:	ff                   	(bad)  
    ecf3:	ff 29                	jmp    FWORD PTR [rcx]
    ecf5:	00 00                	add    BYTE PTR [rax],al
    ecf7:	00 00                	add    BYTE PTR [rax],al
    ecf9:	45 0e                	rex.RB (bad) 
    ecfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed01:	60                   	(bad)  
    ed02:	0c 07                	or     al,0x7
    ed04:	08 00                	or     BYTE PTR [rax],al
    ed06:	00 00                	add    BYTE PTR [rax],al
    ed08:	1c 00                	sbb    al,0x0
    ed0a:	00 00                	add    BYTE PTR [rax],al
    ed0c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ed0d:	08 00                	or     BYTE PTR [rax],al
    ed0f:	00 af 90 ff ff 29    	add    BYTE PTR [rdi+0x29ffff90],ch
    ed15:	00 00                	add    BYTE PTR [rax],al
    ed17:	00 00                	add    BYTE PTR [rax],al
    ed19:	45 0e                	rex.RB (bad) 
    ed1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed21:	60                   	(bad)  
    ed22:	0c 07                	or     al,0x7
    ed24:	08 00                	or     BYTE PTR [rax],al
    ed26:	00 00                	add    BYTE PTR [rax],al
    ed28:	24 00                	and    al,0x0
    ed2a:	00 00                	add    BYTE PTR [rax],al
    ed2c:	c4                   	(bad)  
    ed2d:	08 00                	or     BYTE PTR [rax],al
    ed2f:	00 b8 90 ff ff 53    	add    BYTE PTR [rax+0x53ffff90],bh
    ed35:	01 00                	add    DWORD PTR [rax],eax
    ed37:	00 00                	add    BYTE PTR [rax],al
    ed39:	45 0e                	rex.RB (bad) 
    ed3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed41:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ed45:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
    ed49:	08 00                	or     BYTE PTR [rax],al
    ed4b:	00 00                	add    BYTE PTR [rax],al
    ed4d:	00 00                	add    BYTE PTR [rax],al
    ed4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed52:	00 00                	add    BYTE PTR [rax],al
    ed54:	ec                   	in     al,dx
    ed55:	08 00                	or     BYTE PTR [rax],al
    ed57:	00 e3                	add    bl,ah
    ed59:	91                   	xchg   ecx,eax
    ed5a:	ff                   	(bad)  
    ed5b:	ff 13                	call   QWORD PTR [rbx]
    ed5d:	01 00                	add    DWORD PTR [rax],eax
    ed5f:	00 00                	add    BYTE PTR [rax],al
    ed61:	45 0e                	rex.RB (bad) 
    ed63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed69:	03 0a                	add    ecx,DWORD PTR [rdx]
    ed6b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ed6e:	08 00                	or     BYTE PTR [rax],al
    ed70:	1c 00                	sbb    al,0x0
    ed72:	00 00                	add    BYTE PTR [rax],al
    ed74:	0c 09                	or     al,0x9
    ed76:	00 00                	add    BYTE PTR [rax],al
    ed78:	d6                   	(bad)  
    ed79:	92                   	xchg   edx,eax
    ed7a:	ff                   	(bad)  
    ed7b:	ff                   	(bad)  
    ed7c:	f9                   	stc    
    ed7d:	00 00                	add    BYTE PTR [rax],al
    ed7f:	00 00                	add    BYTE PTR [rax],al
    ed81:	45 0e                	rex.RB (bad) 
    ed83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed89:	02 f0                	add    dh,al
    ed8b:	0c 07                	or     al,0x7
    ed8d:	08 00                	or     BYTE PTR [rax],al
    ed8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed92:	00 00                	add    BYTE PTR [rax],al
    ed94:	2c 09                	sub    al,0x9
    ed96:	00 00                	add    BYTE PTR [rax],al
    ed98:	af                   	scas   eax,DWORD PTR es:[rdi]
    ed99:	93                   	xchg   ebx,eax
    ed9a:	ff                   	(bad)  
    ed9b:	ff 1e                	call   FWORD PTR [rsi]
    ed9d:	00 00                	add    BYTE PTR [rax],al
    ed9f:	00 00                	add    BYTE PTR [rax],al
    eda1:	45 0e                	rex.RB (bad) 
    eda3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eda9:	55                   	push   rbp
    edaa:	0c 07                	or     al,0x7
    edac:	08 00                	or     BYTE PTR [rax],al
    edae:	00 00                	add    BYTE PTR [rax],al
    edb0:	1c 00                	sbb    al,0x0
    edb2:	00 00                	add    BYTE PTR [rax],al
    edb4:	4c 09 00             	or     QWORD PTR [rax],r8
    edb7:	00 ad 93 ff ff 63    	add    BYTE PTR [rbp+0x63ffff93],ch
    edbd:	01 00                	add    DWORD PTR [rax],eax
    edbf:	00 00                	add    BYTE PTR [rax],al
    edc1:	45 0e                	rex.RB (bad) 
    edc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edc9:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    edcc:	0c 07                	or     al,0x7
    edce:	08 00                	or     BYTE PTR [rax],al
    edd0:	2c 00                	sub    al,0x0
    edd2:	00 00                	add    BYTE PTR [rax],al
    edd4:	6c                   	ins    BYTE PTR es:[rdi],dx
    edd5:	09 00                	or     DWORD PTR [rax],eax
    edd7:	00 f0                	add    al,dh
    edd9:	94                   	xchg   esp,eax
    edda:	ff                   	(bad)  
    eddb:	ff 11                	call   QWORD PTR [rcx]
    eddd:	02 00                	add    al,BYTE PTR [rax]
    eddf:	00 00                	add    BYTE PTR [rax],al
    ede1:	45 0e                	rex.RB (bad) 
    ede3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ede9:	50                   	push   rax
    edea:	8f 03                	pop    QWORD PTR [rbx]
    edec:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    edf3:	07                   	(bad)  
    edf4:	03 f8                	add    edi,eax
    edf6:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    edf9:	08 00                	or     BYTE PTR [rax],al
    edfb:	00 00                	add    BYTE PTR [rax],al
    edfd:	00 00                	add    BYTE PTR [rax],al
    edff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee02:	00 00                	add    BYTE PTR [rax],al
    ee04:	9c                   	pushf  
    ee05:	09 00                	or     DWORD PTR [rax],eax
    ee07:	00 d1                	add    cl,dl
    ee09:	96                   	xchg   esi,eax
    ee0a:	ff                   	(bad)  
    ee0b:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
    ee11:	45 0e                	rex.RB (bad) 
    ee13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee19:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    ee1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee22:	00 00                	add    BYTE PTR [rax],al
    ee24:	bc 09 00 00 63       	mov    esp,0x63000009
    ee29:	97                   	xchg   edi,eax
    ee2a:	ff                   	(bad)  
    ee2b:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    ee31:	45 0e                	rex.RB (bad) 
    ee33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee39:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    ee40:	24 00                	and    al,0x0
    ee42:	00 00                	add    BYTE PTR [rax],al
    ee44:	dc 09                	fmul   QWORD PTR [rcx]
    ee46:	00 00                	add    BYTE PTR [rax],al
    ee48:	e8 97 ff ff 94       	call   ffffffff9500ede4 <_end+0xffffffff94ed3ddc>
    ee4d:	00 00                	add    BYTE PTR [rax],al
    ee4f:	00 00                	add    BYTE PTR [rax],al
    ee51:	45 0e                	rex.RB (bad) 
    ee53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee59:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    ee5d:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
    ee60:	08 00                	or     BYTE PTR [rax],al
    ee62:	00 00                	add    BYTE PTR [rax],al
    ee64:	00 00                	add    BYTE PTR [rax],al
    ee66:	00 00                	add    BYTE PTR [rax],al
    ee68:	1c 00                	sbb    al,0x0
    ee6a:	00 00                	add    BYTE PTR [rax],al
    ee6c:	04 0a                	add    al,0xa
    ee6e:	00 00                	add    BYTE PTR [rax],al
    ee70:	54                   	push   rsp
    ee71:	98                   	cwde   
    ee72:	ff                   	(bad)  
    ee73:	ff d5                	call   rbp
    ee75:	00 00                	add    BYTE PTR [rax],al
    ee77:	00 00                	add    BYTE PTR [rax],al
    ee79:	45 0e                	rex.RB (bad) 
    ee7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee81:	02 cc                	add    cl,ah
    ee83:	0c 07                	or     al,0x7
    ee85:	08 00                	or     BYTE PTR [rax],al
    ee87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee8a:	00 00                	add    BYTE PTR [rax],al
    ee8c:	24 0a                	and    al,0xa
    ee8e:	00 00                	add    BYTE PTR [rax],al
    ee90:	09 99 ff ff df 00    	or     DWORD PTR [rcx+0xdfffff],ebx
    ee96:	00 00                	add    BYTE PTR [rax],al
    ee98:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eea1:	02 d6                	add    dl,dh
    eea3:	0c 07                	or     al,0x7
    eea5:	08 00                	or     BYTE PTR [rax],al
    eea7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeaa:	00 00                	add    BYTE PTR [rax],al
    eeac:	44 0a 00             	or     r8b,BYTE PTR [rax]
    eeaf:	00 c8                	add    al,cl
    eeb1:	99                   	cdq    
    eeb2:	ff                   	(bad)  
    eeb3:	ff                   	(bad)  
    eeb4:	7d 00                	jge    eeb6 <__GNU_EH_FRAME_HDR+0xdfa>
    eeb6:	00 00                	add    BYTE PTR [rax],al
    eeb8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eebb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eec1:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    eec5:	08 00                	or     BYTE PTR [rax],al
    eec7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeca:	00 00                	add    BYTE PTR [rax],al
    eecc:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    eecf:	00 25 9a ff ff 36    	add    BYTE PTR [rip+0x36ffff9a],ah        # 3700ee6f <_end+0x36ed3e67>
    eed5:	01 00                	add    DWORD PTR [rax],eax
    eed7:	00 00                	add    BYTE PTR [rax],al
    eed9:	45 0e                	rex.RB (bad) 
    eedb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eee1:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807fae8 <_end+0x7f44ae0>
    eee7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeea:	00 00                	add    BYTE PTR [rax],al
    eeec:	84 0a                	test   BYTE PTR [rdx],cl
    eeee:	00 00                	add    BYTE PTR [rax],al
    eef0:	3b 9b ff ff 7e 00    	cmp    ebx,DWORD PTR [rbx+0x7effff]
    eef6:	00 00                	add    BYTE PTR [rax],al
    eef8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eefb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef01:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    ef04:	07                   	(bad)  
    ef05:	08 00                	or     BYTE PTR [rax],al
    ef07:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef0a:	00 00                	add    BYTE PTR [rax],al
    ef0c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ef0d:	0a 00                	or     al,BYTE PTR [rax]
    ef0f:	00 99 9b ff ff 39    	add    BYTE PTR [rcx+0x39ffff9b],bl
    ef15:	02 00                	add    al,BYTE PTR [rax]
    ef17:	00 00                	add    BYTE PTR [rax],al
    ef19:	45 0e                	rex.RB (bad) 
    ef1b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef21:	03 30                	add    esi,DWORD PTR [rax]
    ef23:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    ef26:	08 00                	or     BYTE PTR [rax],al
    ef28:	1c 00                	sbb    al,0x0
    ef2a:	00 00                	add    BYTE PTR [rax],al
    ef2c:	c4                   	(bad)  
    ef2d:	0a 00                	or     al,BYTE PTR [rax]
    ef2f:	00 b2 9d ff ff c9    	add    BYTE PTR [rdx-0x36000063],dh
    ef35:	00 00                	add    BYTE PTR [rax],al
    ef37:	00 00                	add    BYTE PTR [rax],al
    ef39:	45 0e                	rex.RB (bad) 
    ef3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef41:	02 c0                	add    al,al
    ef43:	0c 07                	or     al,0x7
    ef45:	08 00                	or     BYTE PTR [rax],al
    ef47:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef4a:	00 00                	add    BYTE PTR [rax],al
    ef4c:	e4 0a                	in     al,0xa
    ef4e:	00 00                	add    BYTE PTR [rax],al
    ef50:	5b                   	pop    rbx
    ef51:	9e                   	sahf   
    ef52:	ff                   	(bad)  
    ef53:	ff a1 01 00 00 00    	jmp    QWORD PTR [rcx+0x1]
    ef59:	45 0e                	rex.RB (bad) 
    ef5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef61:	03 98 01 0c 07 08    	add    ebx,DWORD PTR [rax+0x8070c01]
    ef67:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef6a:	00 00                	add    BYTE PTR [rax],al
    ef6c:	04 0b                	add    al,0xb
    ef6e:	00 00                	add    BYTE PTR [rax],al
    ef70:	dc 9f ff ff 13 01    	fcomp  QWORD PTR [rdi+0x113ffff]
    ef76:	00 00                	add    BYTE PTR [rax],al
    ef78:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef81:	03 0a                	add    ecx,DWORD PTR [rdx]
    ef83:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ef86:	08 00                	or     BYTE PTR [rax],al
    ef88:	1c 00                	sbb    al,0x0
    ef8a:	00 00                	add    BYTE PTR [rax],al
    ef8c:	24 0b                	and    al,0xb
    ef8e:	00 00                	add    BYTE PTR [rax],al
    ef90:	cf                   	iret   
    ef91:	a0 ff ff 66 00 00 00 	movabs al,ds:0x450000000066ffff
    ef98:	00 45 
    ef9a:	0e                   	(bad)  
    ef9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efa1:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    efa4:	07                   	(bad)  
    efa5:	08 00                	or     BYTE PTR [rax],al
    efa7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efaa:	00 00                	add    BYTE PTR [rax],al
    efac:	44 0b 00             	or     r8d,DWORD PTR [rax]
    efaf:	00 15 a1 ff ff 75    	add    BYTE PTR [rip+0x75ffffa1],dl        # 7600ef56 <_end+0x75ed3f4e>
    efb5:	00 00                	add    BYTE PTR [rax],al
    efb7:	00 00                	add    BYTE PTR [rax],al
    efb9:	45 0e                	rex.RB (bad) 
    efbb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efc1:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    efc5:	08 00                	or     BYTE PTR [rax],al
    efc7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efca:	00 00                	add    BYTE PTR [rax],al
    efcc:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    efcf:	00 6a a1             	add    BYTE PTR [rdx-0x5f],ch
    efd2:	ff                   	(bad)  
    efd3:	ff                   	(bad)  
    efd4:	db 00                	fild   DWORD PTR [rax]
    efd6:	00 00                	add    BYTE PTR [rax],al
    efd8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    efdb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efe1:	02 d2                	add    dl,dl
    efe3:	0c 07                	or     al,0x7
    efe5:	08 00                	or     BYTE PTR [rax],al
    efe7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efea:	00 00                	add    BYTE PTR [rax],al
    efec:	84 0b                	test   BYTE PTR [rbx],cl
    efee:	00 00                	add    BYTE PTR [rax],al
    eff0:	25 a2 ff ff 72       	and    eax,0x72ffffa2
    eff5:	01 00                	add    DWORD PTR [rax],eax
    eff7:	00 00                	add    BYTE PTR [rax],al
    eff9:	45 0e                	rex.RB (bad) 
    effb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f001:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    f004:	0c 07                	or     al,0x7
    f006:	08 00                	or     BYTE PTR [rax],al
    f008:	1c 00                	sbb    al,0x0
    f00a:	00 00                	add    BYTE PTR [rax],al
    f00c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f00d:	0b 00                	or     eax,DWORD PTR [rax]
    f00f:	00 77 a3             	add    BYTE PTR [rdi-0x5d],dh
    f012:	ff                   	(bad)  
    f013:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    f017:	00 00                	add    BYTE PTR [rax],al
    f019:	45 0e                	rex.RB (bad) 
    f01b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f021:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    f024:	07                   	(bad)  
    f025:	08 00                	or     BYTE PTR [rax],al
    f027:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f02a:	00 00                	add    BYTE PTR [rax],al
    f02c:	c4                   	(bad)  
    f02d:	0b 00                	or     eax,DWORD PTR [rax]
    f02f:	00 c3                	add    bl,al
    f031:	a3 ff ff 80 00 00 00 	movabs ds:0x450000000080ffff,eax
    f038:	00 45 
    f03a:	0e                   	(bad)  
    f03b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f041:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    f044:	07                   	(bad)  
    f045:	08 00                	or     BYTE PTR [rax],al
    f047:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f04a:	00 00                	add    BYTE PTR [rax],al
    f04c:	e4 0b                	in     al,0xb
    f04e:	00 00                	add    BYTE PTR [rax],al
    f050:	23 a4 ff ff 16 00 00 	and    esp,DWORD PTR [rdi+rdi*8+0x16ff]
    f057:	00 00                	add    BYTE PTR [rax],al
    f059:	45 0e                	rex.RB (bad) 
    f05b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f061:	4d 0c 07             	rex.WRB or al,0x7
    f064:	08 00                	or     BYTE PTR [rax],al
    f066:	00 00                	add    BYTE PTR [rax],al
    f068:	20 00                	and    BYTE PTR [rax],al
    f06a:	00 00                	add    BYTE PTR [rax],al
    f06c:	04 0c                	add    al,0xc
    f06e:	00 00                	add    BYTE PTR [rax],al
    f070:	19 a4 ff ff 3a 01 00 	sbb    DWORD PTR [rdi+rdi*8+0x13aff],esp
    f077:	00 00                	add    BYTE PTR [rax],al
    f079:	45 0e                	rex.RB (bad) 
    f07b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f081:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f085:	2c 01                	sub    al,0x1
    f087:	0c 07                	or     al,0x7
    f089:	08 00                	or     BYTE PTR [rax],al
    f08b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f08e:	00 00                	add    BYTE PTR [rax],al
    f090:	28 0c 00             	sub    BYTE PTR [rax+rax*1],cl
    f093:	00 2f                	add    BYTE PTR [rdi],ch
    f095:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f096:	ff                   	(bad)  
    f097:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
    f09b:	00 00                	add    BYTE PTR [rax],al
    f09d:	45 0e                	rex.RB (bad) 
    f09f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0a5:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    f0a8:	07                   	(bad)  
    f0a9:	08 00                	or     BYTE PTR [rax],al
    f0ab:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0ae:	00 00                	add    BYTE PTR [rax],al
    f0b0:	48 0c 00             	rex.W or al,0x0
    f0b3:	00 73 a5             	add    BYTE PTR [rbx-0x5b],dh
    f0b6:	ff                   	(bad)  
    f0b7:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f0ba:	00 00                	add    BYTE PTR [rax],al
    f0bc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0bf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0c5:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f0c8:	07                   	(bad)  
    f0c9:	08 00                	or     BYTE PTR [rax],al
    f0cb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0ce:	00 00                	add    BYTE PTR [rax],al
    f0d0:	68 0c 00 00 a6       	push   0xffffffffa600000c
    f0d5:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f0d6:	ff                   	(bad)  
    f0d7:	ff b1 00 00 00 00    	push   QWORD PTR [rcx+0x0]
    f0dd:	45 0e                	rex.RB (bad) 
    f0df:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0e5:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    f0eb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0ee:	00 00                	add    BYTE PTR [rax],al
    f0f0:	88 0c 00             	mov    BYTE PTR [rax+rax*1],cl
    f0f3:	00 37                	add    BYTE PTR [rdi],dh
    f0f5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f0f6:	ff                   	(bad)  
    f0f7:	ff cb                	dec    ebx
    f0f9:	00 00                	add    BYTE PTR [rax],al
    f0fb:	00 00                	add    BYTE PTR [rax],al
    f0fd:	45 0e                	rex.RB (bad) 
    f0ff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f105:	02 c2                	add    al,dl
    f107:	0c 07                	or     al,0x7
    f109:	08 00                	or     BYTE PTR [rax],al
    f10b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f10e:	00 00                	add    BYTE PTR [rax],al
    f110:	a8 0c                	test   al,0xc
    f112:	00 00                	add    BYTE PTR [rax],al
    f114:	e2 a6                	loop   f0bc <__GNU_EH_FRAME_HDR+0x1000>
    f116:	ff                   	(bad)  
    f117:	ff 55 00             	call   QWORD PTR [rbp+0x0]
    f11a:	00 00                	add    BYTE PTR [rax],al
    f11c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f11f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f125:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    f129:	08 00                	or     BYTE PTR [rax],al
    f12b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f12e:	00 00                	add    BYTE PTR [rax],al
    f130:	c8 0c 00 00          	enter  0xc,0x0
    f134:	17                   	(bad)  
    f135:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f136:	ff                   	(bad)  
    f137:	ff 30                	push   QWORD PTR [rax]
    f139:	00 00                	add    BYTE PTR [rax],al
    f13b:	00 00                	add    BYTE PTR [rax],al
    f13d:	45 0e                	rex.RB (bad) 
    f13f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f145:	67 0c 07             	addr32 or al,0x7
    f148:	08 00                	or     BYTE PTR [rax],al
    f14a:	00 00                	add    BYTE PTR [rax],al
    f14c:	1c 00                	sbb    al,0x0
    f14e:	00 00                	add    BYTE PTR [rax],al
    f150:	e8 0c 00 00 27       	call   2700f161 <_end+0x26ed4159>
    f155:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f156:	ff                   	(bad)  
    f157:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
    f15a:	00 00                	add    BYTE PTR [rax],al
    f15c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f15f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f165:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f168:	07                   	(bad)  
    f169:	08 00                	or     BYTE PTR [rax],al
    f16b:	00 20                	add    BYTE PTR [rax],ah
    f16d:	00 00                	add    BYTE PTR [rax],al
    f16f:	00 08                	add    BYTE PTR [rax],cl
    f171:	0d 00 00 6e a7       	or     eax,0xa76e0000
    f176:	ff                   	(bad)  
    f177:	ff                   	(bad)  
    f178:	38 0f                	cmp    BYTE PTR [rdi],cl
    f17a:	00 00                	add    BYTE PTR [rax],al
    f17c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f17f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f185:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    f189:	27                   	(bad)  
    f18a:	0f 0c                	(bad)  
    f18c:	07                   	(bad)  
    f18d:	08 00                	or     BYTE PTR [rax],al
    f18f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f192:	00 00                	add    BYTE PTR [rax],al
    f194:	2c 0d                	sub    al,0xd
    f196:	00 00                	add    BYTE PTR [rax],al
    f198:	82                   	(bad)  
    f199:	b6 ff                	mov    dh,0xff
    f19b:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
    f19e:	00 00                	add    BYTE PTR [rax],al
    f1a0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1a9:	7d 0c                	jge    f1b7 <__GNU_EH_FRAME_HDR+0x10fb>
    f1ab:	07                   	(bad)  
    f1ac:	08 00                	or     BYTE PTR [rax],al
    f1ae:	00 00                	add    BYTE PTR [rax],al
    f1b0:	24 00                	and    al,0x0
    f1b2:	00 00                	add    BYTE PTR [rax],al
    f1b4:	4c 0d 00 00 a8 b6    	rex.WR or rax,0xffffffffb6a80000
    f1ba:	ff                   	(bad)  
    f1bb:	ff                   	(bad)  
    f1bc:	3b 02                	cmp    eax,DWORD PTR [rdx]
    f1be:	00 00                	add    BYTE PTR [rax],al
    f1c0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1c9:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f1cc:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f1cf:	05 83 06 03 27       	add    eax,0x27030683
    f1d4:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f1d7:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f1da:	00 00                	add    BYTE PTR [rax],al
    f1dc:	74 0d                	je     f1eb <__GNU_EH_FRAME_HDR+0x112f>
    f1de:	00 00                	add    BYTE PTR [rax],al
    f1e0:	bb b8 ff ff a5       	mov    ebx,0xa5ffffb8
    f1e5:	01 00                	add    DWORD PTR [rax],eax
    f1e7:	00 00                	add    BYTE PTR [rax],al
    f1e9:	45 0e                	rex.RB (bad) 
    f1eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1f1:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
    f1f8:	1c 00                	sbb    al,0x0
    f1fa:	00 00                	add    BYTE PTR [rax],al
    f1fc:	94                   	xchg   esp,eax
    f1fd:	0d 00 00 40 ba       	or     eax,0xba400000
    f202:	ff                   	(bad)  
    f203:	ff 12                	call   QWORD PTR [rdx]
    f205:	01 00                	add    DWORD PTR [rax],eax
    f207:	00 00                	add    BYTE PTR [rax],al
    f209:	45 0e                	rex.RB (bad) 
    f20b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f211:	03 09                	add    ecx,DWORD PTR [rcx]
    f213:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f216:	08 00                	or     BYTE PTR [rax],al
    f218:	24 00                	and    al,0x0
    f21a:	00 00                	add    BYTE PTR [rax],al
    f21c:	b4 0d                	mov    ah,0xd
    f21e:	00 00                	add    BYTE PTR [rax],al
    f220:	32 bb ff ff bc 00    	xor    bh,BYTE PTR [rbx+0xbcffff]
    f226:	00 00                	add    BYTE PTR [rax],al
    f228:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f22b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f231:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f235:	ae                   	scas   al,BYTE PTR es:[rdi]
    f236:	0c 07                	or     al,0x7
    f238:	08 00                	or     BYTE PTR [rax],al
    f23a:	00 00                	add    BYTE PTR [rax],al
    f23c:	00 00                	add    BYTE PTR [rax],al
    f23e:	00 00                	add    BYTE PTR [rax],al
    f240:	24 00                	and    al,0x0
    f242:	00 00                	add    BYTE PTR [rax],al
    f244:	dc 0d 00 00 c6 bb    	fmul   QWORD PTR [rip+0xffffffffbbc60000]        # ffffffffbbc6f24a <_end+0xffffffffbbb34242>
    f24a:	ff                   	(bad)  
    f24b:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    f251:	45 0e                	rex.RB (bad) 
    f253:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f259:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f25c:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f260:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f263:	08 00                	or     BYTE PTR [rax],al
    f265:	00 00                	add    BYTE PTR [rax],al
    f267:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f26a:	00 00                	add    BYTE PTR [rax],al
    f26c:	04 0e                	add    al,0xe
    f26e:	00 00                	add    BYTE PTR [rax],al
    f270:	39 bd ff ff a5 00    	cmp    DWORD PTR [rbp+0xa5ffff],edi
    f276:	00 00                	add    BYTE PTR [rax],al
    f278:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f27b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f281:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f288:	1c 00                	sbb    al,0x0
    f28a:	00 00                	add    BYTE PTR [rax],al
    f28c:	24 0e                	and    al,0xe
    f28e:	00 00                	add    BYTE PTR [rax],al
    f290:	be bd ff ff 43       	mov    esi,0x43ffffbd
    f295:	01 00                	add    DWORD PTR [rax],eax
    f297:	00 00                	add    BYTE PTR [rax],al
    f299:	45 0e                	rex.RB (bad) 
    f29b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2a1:	03 3a                	add    edi,DWORD PTR [rdx]
    f2a3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f2a6:	08 00                	or     BYTE PTR [rax],al
    f2a8:	1c 00                	sbb    al,0x0
    f2aa:	00 00                	add    BYTE PTR [rax],al
    f2ac:	44 0e                	rex.R (bad) 
    f2ae:	00 00                	add    BYTE PTR [rax],al
    f2b0:	e1 be                	loope  f270 <__GNU_EH_FRAME_HDR+0x11b4>
    f2b2:	ff                   	(bad)  
    f2b3:	ff f3                	push   rbx
    f2b5:	00 00                	add    BYTE PTR [rax],al
    f2b7:	00 00                	add    BYTE PTR [rax],al
    f2b9:	45 0e                	rex.RB (bad) 
    f2bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2c1:	02 ea                	add    ch,dl
    f2c3:	0c 07                	or     al,0x7
    f2c5:	08 00                	or     BYTE PTR [rax],al
    f2c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f2ca:	00 00                	add    BYTE PTR [rax],al
    f2cc:	64 0e                	fs (bad) 
    f2ce:	00 00                	add    BYTE PTR [rax],al
    f2d0:	b4 bf                	mov    ah,0xbf
    f2d2:	ff                   	(bad)  
    f2d3:	ff 70 00             	push   QWORD PTR [rax+0x0]
    f2d6:	00 00                	add    BYTE PTR [rax],al
    f2d8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f2db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2e1:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f2e4:	07                   	(bad)  
    f2e5:	08 00                	or     BYTE PTR [rax],al
    f2e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f2ea:	00 00                	add    BYTE PTR [rax],al
    f2ec:	84 0e                	test   BYTE PTR [rsi],cl
    f2ee:	00 00                	add    BYTE PTR [rax],al
    f2f0:	04 c0                	add    al,0xc0
    f2f2:	ff                   	(bad)  
    f2f3:	ff a5 02 00 00 00    	jmp    QWORD PTR [rbp+0x2]
    f2f9:	45 0e                	rex.RB (bad) 
    f2fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f301:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f304:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f308:	1c 00                	sbb    al,0x0
    f30a:	00 00                	add    BYTE PTR [rax],al
    f30c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f30d:	0e                   	(bad)  
    f30e:	00 00                	add    BYTE PTR [rax],al
    f310:	89 c2                	mov    edx,eax
    f312:	ff                   	(bad)  
    f313:	ff 6a 00             	jmp    FWORD PTR [rdx+0x0]
    f316:	00 00                	add    BYTE PTR [rax],al
    f318:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f31b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f321:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f324:	07                   	(bad)  
    f325:	08 00                	or     BYTE PTR [rax],al
    f327:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f32a:	00 00                	add    BYTE PTR [rax],al
    f32c:	c4                   	(bad)  
    f32d:	0e                   	(bad)  
    f32e:	00 00                	add    BYTE PTR [rax],al
    f330:	d3 c2                	rol    edx,cl
    f332:	ff                   	(bad)  
    f333:	ff 6e 00             	jmp    FWORD PTR [rsi+0x0]
    f336:	00 00                	add    BYTE PTR [rax],al
    f338:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f33b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f341:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f344:	07                   	(bad)  
    f345:	08 00                	or     BYTE PTR [rax],al
    f347:	00 20                	add    BYTE PTR [rax],ah
    f349:	00 00                	add    BYTE PTR [rax],al
    f34b:	00 e4                	add    ah,ah
    f34d:	0e                   	(bad)  
    f34e:	00 00                	add    BYTE PTR [rax],al
    f350:	21 c3                	and    ebx,eax
    f352:	ff                   	(bad)  
    f353:	ff 8d 01 00 00 00    	dec    DWORD PTR [rbp+0x1]
    f359:	45 0e                	rex.RB (bad) 
    f35b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f361:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f365:	7f 01                	jg     f368 <__GNU_EH_FRAME_HDR+0x12ac>
    f367:	0c 07                	or     al,0x7
    f369:	08 00                	or     BYTE PTR [rax],al
	...

000000000000f36c <__FRAME_END__>:
    f36c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b80 <buffer.0+0x10b00>:
	...

Disassembly of section .init_array:

0000000000010b80 <__frame_dummy_init_array_entry>:
   10b80:	60                   	(bad)  
   10b81:	29 00                	sub    DWORD PTR [rax],eax
   10b83:	00 00                	add    BYTE PTR [rax],al
   10b85:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b88 <__do_global_dtors_aux_fini_array_entry>:
   10b88:	20 29                	and    BYTE PTR [rcx],ch
   10b8a:	00 00                	add    BYTE PTR [rax],al
   10b8c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b90 <_DYNAMIC>:
   10b90:	01 00                	add    DWORD PTR [rax],eax
   10b92:	00 00                	add    BYTE PTR [rax],al
   10b94:	00 00                	add    BYTE PTR [rax],al
   10b96:	00 00                	add    BYTE PTR [rax],al
   10b98:	9e                   	sahf   
   10b99:	02 00                	add    al,BYTE PTR [rax]
   10b9b:	00 00                	add    BYTE PTR [rax],al
   10b9d:	00 00                	add    BYTE PTR [rax],al
   10b9f:	00 01                	add    BYTE PTR [rcx],al
   10ba1:	00 00                	add    BYTE PTR [rax],al
   10ba3:	00 00                	add    BYTE PTR [rax],al
   10ba5:	00 00                	add    BYTE PTR [rax],al
   10ba7:	00 ad 02 00 00 00    	add    BYTE PTR [rbp+0x2],ch
   10bad:	00 00                	add    BYTE PTR [rax],al
   10baf:	00 01                	add    BYTE PTR [rcx],al
   10bb1:	00 00                	add    BYTE PTR [rax],al
   10bb3:	00 00                	add    BYTE PTR [rax],al
   10bb5:	00 00                	add    BYTE PTR [rax],al
   10bb7:	00 bd 02 00 00 00    	add    BYTE PTR [rbp+0x2],bh
   10bbd:	00 00                	add    BYTE PTR [rax],al
   10bbf:	00 01                	add    BYTE PTR [rcx],al
   10bc1:	00 00                	add    BYTE PTR [rax],al
   10bc3:	00 00                	add    BYTE PTR [rax],al
   10bc5:	00 00                	add    BYTE PTR [rax],al
   10bc7:	00 cc                	add    ah,cl
   10bc9:	02 00                	add    al,BYTE PTR [rax]
   10bcb:	00 00                	add    BYTE PTR [rax],al
   10bcd:	00 00                	add    BYTE PTR [rax],al
   10bcf:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10bd2:	00 00                	add    BYTE PTR [rax],al
   10bd4:	00 00                	add    BYTE PTR [rax],al
   10bd6:	00 00                	add    BYTE PTR [rax],al
   10bd8:	00 20                	add    BYTE PTR [rax],ah
   10bda:	00 00                	add    BYTE PTR [rax],al
   10bdc:	00 00                	add    BYTE PTR [rax],al
   10bde:	00 00                	add    BYTE PTR [rax],al
   10be0:	0d 00 00 00 00       	or     eax,0x0
   10be5:	00 00                	add    BYTE PTR [rax],al
   10be7:	00 00                	add    BYTE PTR [rax],al
   10be9:	b8 00 00 00 00       	mov    eax,0x0
   10bee:	00 00                	add    BYTE PTR [rax],al
   10bf0:	19 00                	sbb    DWORD PTR [rax],eax
   10bf2:	00 00                	add    BYTE PTR [rax],al
   10bf4:	00 00                	add    BYTE PTR [rax],al
   10bf6:	00 00                	add    BYTE PTR [rax],al
   10bf8:	80 0b 01             	or     BYTE PTR [rbx],0x1
   10bfb:	00 00                	add    BYTE PTR [rax],al
   10bfd:	00 00                	add    BYTE PTR [rax],al
   10bff:	00 1b                	add    BYTE PTR [rbx],bl
   10c01:	00 00                	add    BYTE PTR [rax],al
   10c03:	00 00                	add    BYTE PTR [rax],al
   10c05:	00 00                	add    BYTE PTR [rax],al
   10c07:	00 08                	add    BYTE PTR [rax],cl
   10c09:	00 00                	add    BYTE PTR [rax],al
   10c0b:	00 00                	add    BYTE PTR [rax],al
   10c0d:	00 00                	add    BYTE PTR [rax],al
   10c0f:	00 1a                	add    BYTE PTR [rdx],bl
   10c11:	00 00                	add    BYTE PTR [rax],al
   10c13:	00 00                	add    BYTE PTR [rax],al
   10c15:	00 00                	add    BYTE PTR [rax],al
   10c17:	00 88 0b 01 00 00    	add    BYTE PTR [rax+0x10b],cl
   10c1d:	00 00                	add    BYTE PTR [rax],al
   10c1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
   10c22:	00 00                	add    BYTE PTR [rax],al
   10c24:	00 00                	add    BYTE PTR [rax],al
   10c26:	00 00                	add    BYTE PTR [rax],al
   10c28:	08 00                	or     BYTE PTR [rax],al
   10c2a:	00 00                	add    BYTE PTR [rax],al
   10c2c:	00 00                	add    BYTE PTR [rax],al
   10c2e:	00 00                	add    BYTE PTR [rax],al
   10c30:	f5                   	cmc    
   10c31:	fe                   	(bad)  
   10c32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c35:	00 00                	add    BYTE PTR [rax],al
   10c37:	00 e8                	add    al,ch
   10c39:	03 00                	add    eax,DWORD PTR [rax]
   10c3b:	00 00                	add    BYTE PTR [rax],al
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c45 <_DYNAMIC+0xb5>
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 08                	add    BYTE PTR [rax],cl
   10c49:	0b 00                	or     eax,DWORD PTR [rax]
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 06                	add    BYTE PTR [rsi],al
   10c51:	00 00                	add    BYTE PTR [rax],al
   10c53:	00 00                	add    BYTE PTR [rax],al
   10c55:	00 00                	add    BYTE PTR [rax],al
   10c57:	00 18                	add    BYTE PTR [rax],bl
   10c59:	04 00                	add    al,0x0
   10c5b:	00 00                	add    BYTE PTR [rax],al
   10c5d:	00 00                	add    BYTE PTR [rax],al
   10c5f:	00 0a                	add    BYTE PTR [rdx],cl
   10c61:	00 00                	add    BYTE PTR [rax],al
   10c63:	00 00                	add    BYTE PTR [rax],al
   10c65:	00 00                	add    BYTE PTR [rax],al
   10c67:	00 0b                	add    BYTE PTR [rbx],cl
   10c69:	03 00                	add    eax,DWORD PTR [rax]
   10c6b:	00 00                	add    BYTE PTR [rax],al
   10c6d:	00 00                	add    BYTE PTR [rax],al
   10c6f:	00 0b                	add    BYTE PTR [rbx],cl
   10c71:	00 00                	add    BYTE PTR [rax],al
   10c73:	00 00                	add    BYTE PTR [rax],al
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 18                	add    BYTE PTR [rax],bl
   10c79:	00 00                	add    BYTE PTR [rax],al
   10c7b:	00 00                	add    BYTE PTR [rax],al
   10c7d:	00 00                	add    BYTE PTR [rax],al
   10c7f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c85 <_DYNAMIC+0xf5>
	...
   10c8d:	00 00                	add    BYTE PTR [rax],al
   10c8f:	00 03                	add    BYTE PTR [rbx],al
   10c91:	00 00                	add    BYTE PTR [rax],al
   10c93:	00 00                	add    BYTE PTR [rax],al
   10c95:	00 00                	add    BYTE PTR [rax],al
   10c97:	00 b0 0d 01 00 00    	add    BYTE PTR [rax+0x10d],dh
   10c9d:	00 00                	add    BYTE PTR [rax],al
   10c9f:	00 02                	add    BYTE PTR [rdx],al
   10ca1:	00 00                	add    BYTE PTR [rax],al
   10ca3:	00 00                	add    BYTE PTR [rax],al
   10ca5:	00 00                	add    BYTE PTR [rax],al
   10ca7:	00 30                	add    BYTE PTR [rax],dh
   10ca9:	06                   	(bad)  
   10caa:	00 00                	add    BYTE PTR [rax],al
   10cac:	00 00                	add    BYTE PTR [rax],al
   10cae:	00 00                	add    BYTE PTR [rax],al
   10cb0:	14 00                	adc    al,0x0
   10cb2:	00 00                	add    BYTE PTR [rax],al
   10cb4:	00 00                	add    BYTE PTR [rax],al
   10cb6:	00 00                	add    BYTE PTR [rax],al
   10cb8:	07                   	(bad)  
   10cb9:	00 00                	add    BYTE PTR [rax],al
   10cbb:	00 00                	add    BYTE PTR [rax],al
   10cbd:	00 00                	add    BYTE PTR [rax],al
   10cbf:	00 17                	add    BYTE PTR [rdi],dl
   10cc1:	00 00                	add    BYTE PTR [rax],al
   10cc3:	00 00                	add    BYTE PTR [rax],al
   10cc5:	00 00                	add    BYTE PTR [rax],al
   10cc7:	00 38                	add    BYTE PTR [rax],bh
   10cc9:	10 00                	adc    BYTE PTR [rax],al
   10ccb:	00 00                	add    BYTE PTR [rax],al
   10ccd:	00 00                	add    BYTE PTR [rax],al
   10ccf:	00 07                	add    BYTE PTR [rdi],al
   10cd1:	00 00                	add    BYTE PTR [rax],al
   10cd3:	00 00                	add    BYTE PTR [rax],al
   10cd5:	00 00                	add    BYTE PTR [rax],al
   10cd7:	00 18                	add    BYTE PTR [rax],bl
   10cd9:	0f 00 00             	sldt   WORD PTR [rax]
   10cdc:	00 00                	add    BYTE PTR [rax],al
   10cde:	00 00                	add    BYTE PTR [rax],al
   10ce0:	08 00                	or     BYTE PTR [rax],al
   10ce2:	00 00                	add    BYTE PTR [rax],al
   10ce4:	00 00                	add    BYTE PTR [rax],al
   10ce6:	00 00                	add    BYTE PTR [rax],al
   10ce8:	20 01                	and    BYTE PTR [rcx],al
   10cea:	00 00                	add    BYTE PTR [rax],al
   10cec:	00 00                	add    BYTE PTR [rax],al
   10cee:	00 00                	add    BYTE PTR [rax],al
   10cf0:	09 00                	or     DWORD PTR [rax],eax
   10cf2:	00 00                	add    BYTE PTR [rax],al
   10cf4:	00 00                	add    BYTE PTR [rax],al
   10cf6:	00 00                	add    BYTE PTR [rax],al
   10cf8:	18 00                	sbb    BYTE PTR [rax],al
   10cfa:	00 00                	add    BYTE PTR [rax],al
   10cfc:	00 00                	add    BYTE PTR [rax],al
   10cfe:	00 00                	add    BYTE PTR [rax],al
   10d00:	1e                   	(bad)  
   10d01:	00 00                	add    BYTE PTR [rax],al
   10d03:	00 00                	add    BYTE PTR [rax],al
   10d05:	00 00                	add    BYTE PTR [rax],al
   10d07:	00 08                	add    BYTE PTR [rax],cl
   10d09:	00 00                	add    BYTE PTR [rax],al
   10d0b:	00 00                	add    BYTE PTR [rax],al
   10d0d:	00 00                	add    BYTE PTR [rax],al
   10d0f:	00 fb                	add    bl,bh
   10d11:	ff                   	(bad)  
   10d12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d15:	00 00                	add    BYTE PTR [rax],al
   10d17:	00 01                	add    BYTE PTR [rcx],al
   10d19:	00 00                	add    BYTE PTR [rax],al
   10d1b:	08 00                	or     BYTE PTR [rax],al
   10d1d:	00 00                	add    BYTE PTR [rax],al
   10d1f:	00 fe                	add    dh,bh
   10d21:	ff                   	(bad)  
   10d22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d25:	00 00                	add    BYTE PTR [rax],al
   10d27:	00 a8 0e 00 00 00    	add    BYTE PTR [rax+0xe],ch
   10d2d:	00 00                	add    BYTE PTR [rax],al
   10d2f:	00 ff                	add    bh,bh
   10d31:	ff                   	(bad)  
   10d32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d35:	00 00                	add    BYTE PTR [rax],al
   10d37:	00 02                	add    BYTE PTR [rdx],al
   10d39:	00 00                	add    BYTE PTR [rax],al
   10d3b:	00 00                	add    BYTE PTR [rax],al
   10d3d:	00 00                	add    BYTE PTR [rax],al
   10d3f:	00 f0                	add    al,dh
   10d41:	ff                   	(bad)  
   10d42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d45:	00 00                	add    BYTE PTR [rax],al
   10d47:	00 14 0e             	add    BYTE PTR [rsi+rcx*1],dl
   10d4a:	00 00                	add    BYTE PTR [rax],al
   10d4c:	00 00                	add    BYTE PTR [rax],al
   10d4e:	00 00                	add    BYTE PTR [rax],al
   10d50:	f9                   	stc    
   10d51:	ff                   	(bad)  
   10d52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d55:	00 00                	add    BYTE PTR [rax],al
   10d57:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010db0 <_GLOBAL_OFFSET_TABLE_>:
   10db0:	90                   	nop
   10db1:	0b 01                	or     eax,DWORD PTR [rcx]
	...
   10dc7:	00 30                	add    BYTE PTR [rax],dh
   10dc9:	20 00                	and    BYTE PTR [rax],al
   10dcb:	00 00                	add    BYTE PTR [rax],al
   10dcd:	00 00                	add    BYTE PTR [rax],al
   10dcf:	00 40 20             	add    BYTE PTR [rax+0x20],al
   10dd2:	00 00                	add    BYTE PTR [rax],al
   10dd4:	00 00                	add    BYTE PTR [rax],al
   10dd6:	00 00                	add    BYTE PTR [rax],al
   10dd8:	50                   	push   rax
   10dd9:	20 00                	and    BYTE PTR [rax],al
   10ddb:	00 00                	add    BYTE PTR [rax],al
   10ddd:	00 00                	add    BYTE PTR [rax],al
   10ddf:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   10de2:	00 00                	add    BYTE PTR [rax],al
   10de4:	00 00                	add    BYTE PTR [rax],al
   10de6:	00 00                	add    BYTE PTR [rax],al
   10de8:	70 20                	jo     10e0a <_GLOBAL_OFFSET_TABLE_+0x5a>
   10dea:	00 00                	add    BYTE PTR [rax],al
   10dec:	00 00                	add    BYTE PTR [rax],al
   10dee:	00 00                	add    BYTE PTR [rax],al
   10df0:	80 20 00             	and    BYTE PTR [rax],0x0
   10df3:	00 00                	add    BYTE PTR [rax],al
   10df5:	00 00                	add    BYTE PTR [rax],al
   10df7:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 c0                	add    al,al
   10e11:	20 00                	and    BYTE PTR [rax],al
   10e13:	00 00                	add    BYTE PTR [rax],al
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 d0                	add    al,dl
   10e19:	20 00                	and    BYTE PTR [rax],al
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 e0                	add    al,ah
   10e21:	20 00                	and    BYTE PTR [rax],al
   10e23:	00 00                	add    BYTE PTR [rax],al
   10e25:	00 00                	add    BYTE PTR [rax],al
   10e27:	00 f0                	add    al,dh
   10e29:	20 00                	and    BYTE PTR [rax],al
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 00                	add    BYTE PTR [rax],al
   10e31:	21 00                	and    DWORD PTR [rax],eax
   10e33:	00 00                	add    BYTE PTR [rax],al
   10e35:	00 00                	add    BYTE PTR [rax],al
   10e37:	00 10                	add    BYTE PTR [rax],dl
   10e39:	21 00                	and    DWORD PTR [rax],eax
   10e3b:	00 00                	add    BYTE PTR [rax],al
   10e3d:	00 00                	add    BYTE PTR [rax],al
   10e3f:	00 20                	add    BYTE PTR [rax],ah
   10e41:	21 00                	and    DWORD PTR [rax],eax
   10e43:	00 00                	add    BYTE PTR [rax],al
   10e45:	00 00                	add    BYTE PTR [rax],al
   10e47:	00 30                	add    BYTE PTR [rax],dh
   10e49:	21 00                	and    DWORD PTR [rax],eax
   10e4b:	00 00                	add    BYTE PTR [rax],al
   10e4d:	00 00                	add    BYTE PTR [rax],al
   10e4f:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e52:	00 00                	add    BYTE PTR [rax],al
   10e54:	00 00                	add    BYTE PTR [rax],al
   10e56:	00 00                	add    BYTE PTR [rax],al
   10e58:	50                   	push   rax
   10e59:	21 00                	and    DWORD PTR [rax],eax
   10e5b:	00 00                	add    BYTE PTR [rax],al
   10e5d:	00 00                	add    BYTE PTR [rax],al
   10e5f:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e62:	00 00                	add    BYTE PTR [rax],al
   10e64:	00 00                	add    BYTE PTR [rax],al
   10e66:	00 00                	add    BYTE PTR [rax],al
   10e68:	70 21                	jo     10e8b <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e6a:	00 00                	add    BYTE PTR [rax],al
   10e6c:	00 00                	add    BYTE PTR [rax],al
   10e6e:	00 00                	add    BYTE PTR [rax],al
   10e70:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e73:	00 00                	add    BYTE PTR [rax],al
   10e75:	00 00                	add    BYTE PTR [rax],al
   10e77:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 c0                	add    al,al
   10e91:	21 00                	and    DWORD PTR [rax],eax
   10e93:	00 00                	add    BYTE PTR [rax],al
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 d0                	add    al,dl
   10e99:	21 00                	and    DWORD PTR [rax],eax
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 e0                	add    al,ah
   10ea1:	21 00                	and    DWORD PTR [rax],eax
   10ea3:	00 00                	add    BYTE PTR [rax],al
   10ea5:	00 00                	add    BYTE PTR [rax],al
   10ea7:	00 f0                	add    al,dh
   10ea9:	21 00                	and    DWORD PTR [rax],eax
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 00                	add    BYTE PTR [rax],al
   10eb1:	22 00                	and    al,BYTE PTR [rax]
   10eb3:	00 00                	add    BYTE PTR [rax],al
   10eb5:	00 00                	add    BYTE PTR [rax],al
   10eb7:	00 10                	add    BYTE PTR [rax],dl
   10eb9:	22 00                	and    al,BYTE PTR [rax]
   10ebb:	00 00                	add    BYTE PTR [rax],al
   10ebd:	00 00                	add    BYTE PTR [rax],al
   10ebf:	00 20                	add    BYTE PTR [rax],ah
   10ec1:	22 00                	and    al,BYTE PTR [rax]
   10ec3:	00 00                	add    BYTE PTR [rax],al
   10ec5:	00 00                	add    BYTE PTR [rax],al
   10ec7:	00 30                	add    BYTE PTR [rax],dh
   10ec9:	22 00                	and    al,BYTE PTR [rax]
   10ecb:	00 00                	add    BYTE PTR [rax],al
   10ecd:	00 00                	add    BYTE PTR [rax],al
   10ecf:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10ed2:	00 00                	add    BYTE PTR [rax],al
   10ed4:	00 00                	add    BYTE PTR [rax],al
   10ed6:	00 00                	add    BYTE PTR [rax],al
   10ed8:	50                   	push   rax
   10ed9:	22 00                	and    al,BYTE PTR [rax]
   10edb:	00 00                	add    BYTE PTR [rax],al
   10edd:	00 00                	add    BYTE PTR [rax],al
   10edf:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10ee2:	00 00                	add    BYTE PTR [rax],al
   10ee4:	00 00                	add    BYTE PTR [rax],al
   10ee6:	00 00                	add    BYTE PTR [rax],al
   10ee8:	70 22                	jo     10f0c <_GLOBAL_OFFSET_TABLE_+0x15c>
   10eea:	00 00                	add    BYTE PTR [rax],al
   10eec:	00 00                	add    BYTE PTR [rax],al
   10eee:	00 00                	add    BYTE PTR [rax],al
   10ef0:	80 22 00             	and    BYTE PTR [rdx],0x0
   10ef3:	00 00                	add    BYTE PTR [rax],al
   10ef5:	00 00                	add    BYTE PTR [rax],al
   10ef7:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 c0                	add    al,al
   10f11:	22 00                	and    al,BYTE PTR [rax]
   10f13:	00 00                	add    BYTE PTR [rax],al
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 d0                	add    al,dl
   10f19:	22 00                	and    al,BYTE PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 e0                	add    al,ah
   10f21:	22 00                	and    al,BYTE PTR [rax]
   10f23:	00 00                	add    BYTE PTR [rax],al
   10f25:	00 00                	add    BYTE PTR [rax],al
   10f27:	00 f0                	add    al,dh
   10f29:	22 00                	and    al,BYTE PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 00                	add    BYTE PTR [rax],al
   10f31:	23 00                	and    eax,DWORD PTR [rax]
   10f33:	00 00                	add    BYTE PTR [rax],al
   10f35:	00 00                	add    BYTE PTR [rax],al
   10f37:	00 10                	add    BYTE PTR [rax],dl
   10f39:	23 00                	and    eax,DWORD PTR [rax]
   10f3b:	00 00                	add    BYTE PTR [rax],al
   10f3d:	00 00                	add    BYTE PTR [rax],al
   10f3f:	00 20                	add    BYTE PTR [rax],ah
   10f41:	23 00                	and    eax,DWORD PTR [rax]
   10f43:	00 00                	add    BYTE PTR [rax],al
   10f45:	00 00                	add    BYTE PTR [rax],al
   10f47:	00 30                	add    BYTE PTR [rax],dh
   10f49:	23 00                	and    eax,DWORD PTR [rax]
   10f4b:	00 00                	add    BYTE PTR [rax],al
   10f4d:	00 00                	add    BYTE PTR [rax],al
   10f4f:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f52:	00 00                	add    BYTE PTR [rax],al
   10f54:	00 00                	add    BYTE PTR [rax],al
   10f56:	00 00                	add    BYTE PTR [rax],al
   10f58:	50                   	push   rax
   10f59:	23 00                	and    eax,DWORD PTR [rax]
   10f5b:	00 00                	add    BYTE PTR [rax],al
   10f5d:	00 00                	add    BYTE PTR [rax],al
   10f5f:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f62:	00 00                	add    BYTE PTR [rax],al
   10f64:	00 00                	add    BYTE PTR [rax],al
   10f66:	00 00                	add    BYTE PTR [rax],al
   10f68:	70 23                	jo     10f8d <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f6a:	00 00                	add    BYTE PTR [rax],al
   10f6c:	00 00                	add    BYTE PTR [rax],al
   10f6e:	00 00                	add    BYTE PTR [rax],al
   10f70:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f73:	00 00                	add    BYTE PTR [rax],al
   10f75:	00 00                	add    BYTE PTR [rax],al
   10f77:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 c0                	add    al,al
   10f91:	23 00                	and    eax,DWORD PTR [rax]
   10f93:	00 00                	add    BYTE PTR [rax],al
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 d0                	add    al,dl
   10f99:	23 00                	and    eax,DWORD PTR [rax]
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 e0                	add    al,ah
   10fa1:	23 00                	and    eax,DWORD PTR [rax]
   10fa3:	00 00                	add    BYTE PTR [rax],al
   10fa5:	00 00                	add    BYTE PTR [rax],al
   10fa7:	00 f0                	add    al,dh
   10fa9:	23 00                	and    eax,DWORD PTR [rax]
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 00                	add    BYTE PTR [rax],al
   10fb1:	24 00                	and    al,0x0
   10fb3:	00 00                	add    BYTE PTR [rax],al
   10fb5:	00 00                	add    BYTE PTR [rax],al
   10fb7:	00 10                	add    BYTE PTR [rax],dl
   10fb9:	24 00                	and    al,0x0
   10fbb:	00 00                	add    BYTE PTR [rax],al
   10fbd:	00 00                	add    BYTE PTR [rax],al
   10fbf:	00 20                	add    BYTE PTR [rax],ah
   10fc1:	24 00                	and    al,0x0
   10fc3:	00 00                	add    BYTE PTR [rax],al
   10fc5:	00 00                	add    BYTE PTR [rax],al
   10fc7:	00 30                	add    BYTE PTR [rax],dh
   10fc9:	24 00                	and    al,0x0
   10fcb:	00 00                	add    BYTE PTR [rax],al
   10fcd:	00 00                	add    BYTE PTR [rax],al
   10fcf:	00 40 24             	add    BYTE PTR [rax+0x24],al
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .bss:

0000000000011060 <optarg@GLIBC_2.2.5>:
	...

0000000000011068 <completed.0>:
	...

0000000000011080 <demo_mode>:
   11080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011084 <strict_icmp_timestamp_req>:
   11084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011088 <strict_nmap_host_alive_check>:
	...

00000000000110a0 <threads>:
	...

00000000000112a0 <thread_count>:
   112a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a4 <total_pkt_captured>:
   112a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a8 <is_running>:
	...

00000000000112b0 <last_clean_time>:
	...

00000000000112b8 <clean_delay>:
	...

00000000000112c0 <pkt_counter>:
	...

00000000000112e0 <rules>:
	...

00000000000f32e0 <blocked_ipv4_addrs>:
	...

00000000000f3520 <watchlist>:
	...

0000000000107d20 <arpcache>:
	...

0000000000109f00 <ip_addr>:
	...

0000000000109f20 <debug_mode>:
	...

0000000000109f21 <use_sqlite>:
	...

0000000000109f40 <sqlite_db_path>:
	...

0000000000109f60 <clean_delay_pkts>:
  109f60:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f64 <packet_print>:
	...

0000000000109f65 <quiet_exit>:
  109f65:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f68 <vigil_location>:
	...

0000000000109f70 <input_adapter>:
	...

0000000000109f80 <output_adapter>:
	...

0000000000109f90 <local_ip>:
	...

0000000000109fb0 <def_gw>:
	...

0000000000109fc2 <use_spi>:
	...

0000000000109fc4 <homenet>:
  109fc4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fc8 <homenetmask>:
  109fc8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fcc <in_test_mode>:
	...

0000000000109fe0 <spi_table>:
	...

0000000000137fe0 <lua_scripts>:
	...

0000000000138800 <fn_mem_map>:
	...

000000000013b000 <fn_num>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.0+0x1>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754ec541>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer.0+0x10>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
