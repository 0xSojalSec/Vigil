
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.0+0x30d>
 360:	78 38                	js     39a <buffer.0+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 8e 7c 20 d8 b8    	add    BYTE PTR [rsi-0x4727df84],cl
 3b5:	93                   	xchg   ebx,eax
 3b6:	19 6e de             	sbb    DWORD PTR [rsi-0x22],ebp
 3b9:	7d 9d                	jge    358 <buffer.0+0x2d8>
 3bb:	c0 ce 4c             	ror    dh,0x4c
 3be:	84 d3                	test   bl,dl
 3c0:	4c 14 b0             	rex.WR adc al,0xb0
 3c3:	81                   	.byte 0x81

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	49 00 00             	rex.WB add BYTE PTR [r8],al
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	49 00 00             	rex.WB add BYTE PTR [r8],al
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
 40a:	00 00                	add    BYTE PTR [rax],al
 40c:	d1 65 ce             	shl    DWORD PTR [rbp-0x32],1
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	32 b3 f0 a9 b3 a2    	xor    dh,BYTE PTR [rbx-0x5d4c5610]
 416:	f7 12                	not    DWORD PTR [rdx]

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	88 00                	mov    BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	12 00                	adc    al,BYTE PTR [rax]
	...
 446:	00 00                	add    BYTE PTR [rax],al
 448:	47 01 00             	rex.RXB add DWORD PTR [r8],r8d
 44b:	00 12                	add    BYTE PTR [rdx],dl
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 90 01 00 00 12    	add    BYTE PTR [rax+0x12000001],dl
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 e3                	add    bl,ah
 479:	01 00                	add    DWORD PTR [rax],eax
 47b:	00 12                	add    BYTE PTR [rdx],dl
	...
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
 492:	00 00                	add    BYTE PTR [rax],al
 494:	12 00                	adc    al,BYTE PTR [rax]
	...
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	cb                   	retf   
 4a9:	01 00                	add    DWORD PTR [rax],eax
 4ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 90 00 00 00 12    	add    BYTE PTR [rax+0x12000000],dl
	...
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 07                	add    BYTE PTR [rdi],al
 4d9:	01 00                	add    DWORD PTR [rax],eax
 4db:	00 12                	add    BYTE PTR [rdx],dl
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 1d 00 00 00 20    	add    BYTE PTR [rip+0x20000000],bl        # 200004f5 <_end+0x1fec14ad>
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 98 01 00 00 12    	add    BYTE PTR [rax+0x12000001],bl
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 4d 02             	add    BYTE PTR [rbp+0x2],cl
 522:	00 00                	add    BYTE PTR [rax],al
 524:	12 00                	adc    al,BYTE PTR [rax]
	...
 536:	00 00                	add    BYTE PTR [rax],al
 538:	88 02                	mov    BYTE PTR [rdx],al
 53a:	00 00                	add    BYTE PTR [rax],al
 53c:	12 00                	adc    al,BYTE PTR [rax]
	...
 54e:	00 00                	add    BYTE PTR [rax],al
 550:	80 02 00             	add    BYTE PTR [rdx],0x0
 553:	00 12                	add    BYTE PTR [rdx],dl
	...
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 7b 00             	add    BYTE PTR [rbx+0x0],bh
 56a:	00 00                	add    BYTE PTR [rax],al
 56c:	12 00                	adc    al,BYTE PTR [rax]
	...
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	b6 01                	mov    dh,0x1
 582:	00 00                	add    BYTE PTR [rax],al
 584:	12 00                	adc    al,BYTE PTR [rax]
	...
 596:	00 00                	add    BYTE PTR [rax],al
 598:	2a 01                	sub    al,BYTE PTR [rcx]
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	f1                   	icebp  
 5b1:	01 00                	add    DWORD PTR [rax],eax
 5b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 40 01             	add    BYTE PTR [rax+0x1],al
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	b0 01                	mov    al,0x1
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	5c                   	pop    rsp
 5f9:	02 00                	add    al,BYTE PTR [rax]
 5fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	00 50 00             	add    BYTE PTR [rax+0x0],dl
 612:	00 00                	add    BYTE PTR [rax],al
 614:	12 00                	adc    al,BYTE PTR [rax]
	...
 626:	00 00                	add    BYTE PTR [rax],al
 628:	9e                   	sahf   
 629:	02 00                	add    al,BYTE PTR [rax]
 62b:	00 12                	add    BYTE PTR [rdx],dl
	...
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 642:	00 00                	add    BYTE PTR [rax],al
 644:	12 00                	adc    al,BYTE PTR [rax]
	...
 656:	00 00                	add    BYTE PTR [rax],al
 658:	a3 00 00 00 12 00 00 	movabs ds:0x12000000,eax
 65f:	00 00 
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 01                	add    BYTE PTR [rcx],al
 671:	00 00                	add    BYTE PTR [rax],al
 673:	00 20                	add    BYTE PTR [rax],ah
	...
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 08                	add    BYTE PTR [rax],cl
 689:	02 00                	add    al,BYTE PTR [rax]
 68b:	00 12                	add    BYTE PTR [rdx],dl
	...
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 5c 01 00          	add    BYTE PTR [rcx+rax*1+0x0],bl
 6a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6b5:	00 00                	add    BYTE PTR [rax],al
 6b7:	00 76 00             	add    BYTE PTR [rsi+0x0],dh
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	1f                   	(bad)  
 6d1:	02 00                	add    al,BYTE PTR [rax]
 6d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6e5:	00 00                	add    BYTE PTR [rax],al
 6e7:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 6ea:	00 00                	add    BYTE PTR [rax],al
 6ec:	20 00                	and    BYTE PTR [rax],al
	...
 6fe:	00 00                	add    BYTE PTR [rax],al
 700:	64 02 00             	add    al,BYTE PTR fs:[rax]
 703:	00 12                	add    BYTE PTR [rdx],dl
	...
 715:	00 00                	add    BYTE PTR [rax],al
 717:	00 3a                	add    BYTE PTR [rdx],bh
 719:	02 00                	add    al,BYTE PTR [rax]
 71b:	00 12                	add    BYTE PTR [rdx],dl
	...
 72d:	00 00                	add    BYTE PTR [rax],al
 72f:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
 732:	00 00                	add    BYTE PTR [rax],al
 734:	12 00                	adc    al,BYTE PTR [rax]
	...
 746:	00 00                	add    BYTE PTR [rax],al
 748:	01 01                	add    DWORD PTR [rcx],eax
 74a:	00 00                	add    BYTE PTR [rax],al
 74c:	12 00                	adc    al,BYTE PTR [rax]
	...
 75e:	00 00                	add    BYTE PTR [rax],al
 760:	1e                   	(bad)  
 761:	01 00                	add    DWORD PTR [rax],eax
 763:	00 12                	add    BYTE PTR [rdx],dl
	...
 775:	00 00                	add    BYTE PTR [rax],al
 777:	00 26                	add    BYTE PTR [rsi],ah
 779:	02 00                	add    al,BYTE PTR [rax]
 77b:	00 12                	add    BYTE PTR [rdx],dl
	...
 78d:	00 00                	add    BYTE PTR [rax],al
 78f:	00 d5                	add    ch,dl
 791:	00 00                	add    BYTE PTR [rax],al
 793:	00 12                	add    BYTE PTR [rdx],dl
	...
 7a5:	00 00                	add    BYTE PTR [rax],al
 7a7:	00 01                	add    BYTE PTR [rcx],al
 7a9:	02 00                	add    al,BYTE PTR [rax]
 7ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 7bd:	00 00                	add    BYTE PTR [rax],al
 7bf:	00 72 02             	add    BYTE PTR [rdx+0x2],dh
 7c2:	00 00                	add    BYTE PTR [rax],al
 7c4:	12 00                	adc    al,BYTE PTR [rax]
	...
 7d6:	00 00                	add    BYTE PTR [rax],al
 7d8:	97                   	xchg   edi,eax
 7d9:	01 00                	add    DWORD PTR [rax],eax
 7db:	00 12                	add    BYTE PTR [rdx],dl
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 dc                	add    ah,bl
 7f1:	01 00                	add    DWORD PTR [rax],eax
 7f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 ae 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],ch
	...
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 ab 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],ch
	...
 835:	00 00                	add    BYTE PTR [rax],al
 837:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
 83a:	00 00                	add    BYTE PTR [rax],al
 83c:	12 00                	adc    al,BYTE PTR [rax]
	...
 84e:	00 00                	add    BYTE PTR [rax],al
 850:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 851:	01 00                	add    DWORD PTR [rax],eax
 853:	00 12                	add    BYTE PTR [rdx],dl
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 2f                	add    BYTE PTR [rdi],ch
 869:	01 00                	add    DWORD PTR [rax],eax
 86b:	00 12                	add    BYTE PTR [rdx],dl
	...
 87d:	00 00                	add    BYTE PTR [rax],al
 87f:	00 e0                	add    al,ah
 881:	00 00                	add    BYTE PTR [rax],al
 883:	00 12                	add    BYTE PTR [rdx],dl
	...
 895:	00 00                	add    BYTE PTR [rax],al
 897:	00 bd 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bh
	...
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 9d 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],bl
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 eb                	add    bl,ch
 8c9:	00 00                	add    BYTE PTR [rax],al
 8cb:	00 12                	add    BYTE PTR [rdx],dl
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 8d 02 00 00 12    	add    BYTE PTR [rbp+0x12000002],cl
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 88 01 00 00 12    	add    BYTE PTR [rax+0x12000001],cl
	...
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 35 02 00 00 12    	add    BYTE PTR [rip+0x12000002],dh        # 12000917 <_end+0x11ec18cf>
	...
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 f9                	add    cl,bh
 929:	00 00                	add    BYTE PTR [rax],al
 92b:	00 12                	add    BYTE PTR [rdx],dl
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 c4                	add    ah,al
 941:	01 00                	add    DWORD PTR [rax],eax
 943:	00 12                	add    BYTE PTR [rdx],dl
	...
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 d5                	add    ch,dl
 959:	01 00                	add    DWORD PTR [rax],eax
 95b:	00 12                	add    BYTE PTR [rdx],dl
	...
 96d:	00 00                	add    BYTE PTR [rax],al
 96f:	00 cb                	add    bl,cl
 971:	00 00                	add    BYTE PTR [rax],al
 973:	00 12                	add    BYTE PTR [rdx],dl
	...
 985:	00 00                	add    BYTE PTR [rax],al
 987:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	12 00                	adc    al,BYTE PTR [rax]
	...
 99e:	00 00                	add    BYTE PTR [rax],al
 9a0:	bd 01 00 00 12       	mov    ebp,0x12000001
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 17                	add    BYTE PTR [rdi],dl
 9b9:	02 00                	add    al,BYTE PTR [rax]
 9bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 9cd:	00 00                	add    BYTE PTR [rax],al
 9cf:	00 54 01 00          	add    BYTE PTR [rcx+rax*1+0x0],dl
 9d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9e5:	00 00                	add    BYTE PTR [rax],al
 9e7:	00 42 02             	add    BYTE PTR [rdx+0x2],al
 9ea:	00 00                	add    BYTE PTR [rax],al
 9ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 9fe:	00 00                	add    BYTE PTR [rax],al
 a00:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
 a03:	00 12                	add    BYTE PTR [rdx],dl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 47 02             	add    BYTE PTR [rdi+0x2],al
 a1a:	00 00                	add    BYTE PTR [rax],al
 a1c:	12 00                	adc    al,BYTE PTR [rax]
	...
 a2e:	00 00                	add    BYTE PTR [rax],al
 a30:	6b 02 00             	imul   eax,DWORD PTR [rdx],0x0
 a33:	00 12                	add    BYTE PTR [rdx],dl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 8f 01 00 00 12    	add    BYTE PTR [rdi+0x12000001],cl
	...
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 36                	add    BYTE PTR [rsi],dh
 a61:	01 00                	add    DWORD PTR [rax],eax
 a63:	00 12                	add    BYTE PTR [rdx],dl
	...
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 2c 02             	add    BYTE PTR [rdx+rax*1],ch
 a7a:	00 00                	add    BYTE PTR [rax],al
 a7c:	12 00                	adc    al,BYTE PTR [rax]
	...
 a8e:	00 00                	add    BYTE PTR [rax],al
 a90:	76 01                	jbe    a93 <__abi_tag+0x6cf>
 a92:	00 00                	add    BYTE PTR [rax],al
 a94:	12 00                	adc    al,BYTE PTR [rax]
	...
 aa6:	00 00                	add    BYTE PTR [rax],al
 aa8:	79 02                	jns    aac <__abi_tag+0x6e8>
 aaa:	00 00                	add    BYTE PTR [rax],al
 aac:	12 00                	adc    al,BYTE PTR [rax]
	...
 abe:	00 00                	add    BYTE PTR [rax],al
 ac0:	96                   	xchg   esi,eax
 ac1:	00 00                	add    BYTE PTR [rax],al
 ac3:	00 12                	add    BYTE PTR [rdx],dl
	...
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 3b                	add    BYTE PTR [rbx],bh
 ad9:	01 00                	add    DWORD PTR [rax],eax
 adb:	00 12                	add    BYTE PTR [rdx],dl
	...
 aed:	00 00                	add    BYTE PTR [rax],al
 aef:	00 0f                	add    BYTE PTR [rdi],cl
 af1:	01 00                	add    DWORD PTR [rax],eax
 af3:	00 22                	add    BYTE PTR [rdx],ah
	...
 b05:	00 00                	add    BYTE PTR [rax],al
 b07:	00 f9                	add    cl,bh
 b09:	01 00                	add    DWORD PTR [rax],eax
 b0b:	00 12                	add    BYTE PTR [rdx],dl
 b0d:	00 10                	add    BYTE PTR [rax],dl
 b0f:	00 95 95 00 00 00    	add    BYTE PTR [rbp+0x95],dl
 b15:	00 00                	add    BYTE PTR [rax],al
 b17:	00 3a                	add    BYTE PTR [rdx],bh
 b19:	01 00                	add    DWORD PTR [rax],eax
 b1b:	00 00                	add    BYTE PTR [rax],al
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 ea                	add    dl,ch
 b21:	01 00                	add    DWORD PTR [rax],eax
 b23:	00 11                	add    BYTE PTR [rcx],dl
 b25:	00 1b                	add    BYTE PTR [rbx],bl
 b27:	00 60 10             	add    BYTE PTR [rax+0x10],ah
 b2a:	01 00                	add    DWORD PTR [rax],eax
 b2c:	00 00                	add    BYTE PTR [rax],al
 b2e:	00 00                	add    BYTE PTR [rax],al
 b30:	08 00                	or     BYTE PTR [rax],al
 b32:	00 00                	add    BYTE PTR [rax],al
 b34:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b38 <.dynstr>:
 b38:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b3b:	54                   	push   rsp
 b3c:	4d 5f                	rex.WRB pop r15
 b3e:	64 65 72 65          	fs gs jb ba7 <__abi_tag+0x7e3>
 b42:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b49:	4d 
 b4a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b4c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b4d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b4e:	65 54                	gs push rsp
 b50:	61                   	(bad)  
 b51:	62                   	(bad)  
 b52:	6c                   	ins    BYTE PTR es:[rdi],dx
 b53:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b57:	67 6d                	ins    DWORD PTR es:[edi],dx
 b59:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b5a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b5b:	5f                   	pop    rdi
 b5c:	73 74                	jae    bd2 <__abi_tag+0x80e>
 b5e:	61                   	(bad)  
 b5f:	72 74                	jb     bd5 <__abi_tag+0x811>
 b61:	5f                   	pop    rdi
 b62:	5f                   	pop    rdi
 b63:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b66:	54                   	push   rsp
 b67:	4d 5f                	rex.WRB pop r15
 b69:	72 65                	jb     bd0 <__abi_tag+0x80c>
 b6b:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b72:	4d 
 b73:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b75:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b76:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b77:	65 54                	gs push rsp
 b79:	61                   	(bad)  
 b7a:	62                   	(bad)  
 b7b:	6c                   	ins    BYTE PTR es:[rdi],dx
 b7c:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 b80:	61                   	(bad)  
 b81:	70 5f                	jo     be2 <__abi_tag+0x81e>
 b83:	6c                   	ins    BYTE PTR es:[rdi],dx
 b84:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b86:	70 00                	jo     b88 <__abi_tag+0x7c4>
 b88:	70 63                	jo     bed <__abi_tag+0x829>
 b8a:	61                   	(bad)  
 b8b:	70 5f                	jo     bec <__abi_tag+0x828>
 b8d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b8e:	70 65                	jo     bf5 <__abi_tag+0x831>
 b90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b91:	5f                   	pop    rdi
 b92:	6c                   	ins    BYTE PTR es:[rdi],dx
 b93:	69 76 65 00 73 71 6c 	imul   esi,DWORD PTR [rsi+0x65],0x6c717300
 b9a:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 ba1:	72 
 ba2:	6d                   	ins    DWORD PTR es:[rdi],dx
 ba3:	73 67                	jae    c0c <__abi_tag+0x848>
 ba5:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 ba8:	6c                   	ins    BYTE PTR es:[rdi],dx
 ba9:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 bb0:	65 
 bb1:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 bb5:	6c                   	ins    BYTE PTR es:[rdi],dx
 bb6:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 bbd:	65 
 bbe:	63 00                	movsxd eax,DWORD PTR [rax]
 bc0:	73 71                	jae    c33 <__abi_tag+0x86f>
 bc2:	6c                   	ins    BYTE PTR es:[rdi],dx
 bc3:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 bca:	6f 
 bcb:	73 65                	jae    c32 <__abi_tag+0x86e>
 bcd:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 bd0:	6c                   	ins    BYTE PTR es:[rdi],dx
 bd1:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 bd8:	65 
 bd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bda:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 bde:	5f                   	pop    rdi
 bdf:	73 65                	jae    c46 <__abi_tag+0x882>
 be1:	74 74                	je     c57 <__abi_tag+0x893>
 be3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 be4:	70 00                	jo     be6 <__abi_tag+0x822>
 be6:	6c                   	ins    BYTE PTR es:[rdi],dx
 be7:	75 61                	jne    c4a <__abi_tag+0x886>
 be9:	4c 5f                	rex.WR pop rdi
 beb:	6c                   	ins    BYTE PTR es:[rdi],dx
 bec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bed:	61                   	(bad)  
 bee:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 bf5:	6c 
 bf6:	75 61                	jne    c59 <__abi_tag+0x895>
 bf8:	4c 5f                	rex.WR pop rdi
 bfa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bfb:	65 77 73             	gs ja  c71 <__abi_tag+0x8ad>
 bfe:	74 61                	je     c61 <__abi_tag+0x89d>
 c00:	74 65                	je     c67 <__abi_tag+0x8a3>
 c02:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c06:	5f                   	pop    rdi
 c07:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 c0b:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 c10:	5f                   	pop    rdi
 c11:	70 63                	jo     c76 <__abi_tag+0x8b2>
 c13:	61                   	(bad)  
 c14:	6c                   	ins    BYTE PTR es:[rdi],dx
 c15:	6c                   	ins    BYTE PTR es:[rdi],dx
 c16:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 c19:	75 61                	jne    c7c <__abi_tag+0x8b8>
 c1b:	5f                   	pop    rdi
 c1c:	67 65 74 74          	addr32 gs je c94 <__abi_tag+0x8d0>
 c20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c21:	70 00                	jo     c23 <__abi_tag+0x85f>
 c23:	6c                   	ins    BYTE PTR es:[rdi],dx
 c24:	75 61                	jne    c87 <__abi_tag+0x8c3>
 c26:	4c 5f                	rex.WR pop rdi
 c28:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c29:	70 65                	jo     c90 <__abi_tag+0x8cc>
 c2b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c2c:	6c                   	ins    BYTE PTR es:[rdi],dx
 c2d:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 c34:	6c                   	ins    BYTE PTR es:[rdi],dx
 c35:	69 6e 65 00 66 67 65 	imul   ebp,DWORD PTR [rsi+0x65],0x65676600
 c3c:	74 63                	je     ca1 <__abi_tag+0x8dd>
 c3e:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 c41:	72 6e                	jb     cb1 <__abi_tag+0x8ed>
 c43:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 c46:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 c49:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 c4c:	5f                   	pop    rdi
 c4d:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 c53:	7a 65                	jp     cba <__abi_tag+0x8f6>
 c55:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 c58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c59:	68 6c 00 6e 74       	push   0x746e006c
 c5e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c5f:	68 73 00 72 65       	push   0x65720073
 c64:	61                   	(bad)  
 c65:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 c69:	72 63                	jb     cce <__abi_tag+0x90a>
 c6b:	68 72 00 6c 6f       	push   0x6f6c0072
 c70:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 c73:	74 69                	je     cde <__abi_tag+0x91a>
 c75:	6d                   	ins    DWORD PTR es:[rdi],dx
 c76:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 c7a:	6c                   	ins    BYTE PTR es:[rdi],dx
 c7b:	6c                   	ins    BYTE PTR es:[rdi],dx
 c7c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c7d:	63 00                	movsxd eax,DWORD PTR [rax]
 c7f:	70 74                	jo     cf5 <__abi_tag+0x931>
 c81:	68 72 65 61 64       	push   0x64616572
 c86:	5f                   	pop    rdi
 c87:	6a 6f                	push   0x6f
 c89:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 c90:	73 70                	jae    d02 <__abi_tag+0x93e>
 c92:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c93:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 c96:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 c99:	72 61                	jb     cfc <__abi_tag+0x938>
 c9b:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 c9e:	73 79                	jae    d19 <__abi_tag+0x955>
 ca0:	6d                   	ins    DWORD PTR es:[rdi],dx
 ca1:	62                   	(bad)  
 ca2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ca3:	6c                   	ins    BYTE PTR es:[rdi],dx
 ca4:	73 00                	jae    ca6 <__abi_tag+0x8e2>
 ca6:	72 65                	jb     d0d <__abi_tag+0x949>
 ca8:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 cac:	70 00                	jo     cae <__abi_tag+0x8ea>
 cae:	5f                   	pop    rdi
 caf:	5f                   	pop    rdi
 cb0:	6c                   	ins    BYTE PTR es:[rdi],dx
 cb1:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 cb8:	72 74                	jb     d2e <__abi_tag+0x96a>
 cba:	5f                   	pop    rdi
 cbb:	6d                   	ins    DWORD PTR es:[rdi],dx
 cbc:	61                   	(bad)  
 cbd:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 cc4:	6d                   	ins    DWORD PTR es:[rdi],dx
 cc5:	70 00                	jo     cc7 <__abi_tag+0x903>
 cc7:	66 70 72             	data16 jo d3c <__abi_tag+0x978>
 cca:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 cd1:	75 74                	jne    d47 <__abi_tag+0x983>
 cd3:	73 00                	jae    cd5 <__abi_tag+0x911>
 cd5:	73 6f                	jae    d46 <__abi_tag+0x982>
 cd7:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 cda:	74 00                	je     cdc <__abi_tag+0x918>
 cdc:	73 69                	jae    d47 <__abi_tag+0x983>
 cde:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 ce0:	61                   	(bad)  
 ce1:	6c                   	ins    BYTE PTR es:[rdi],dx
 ce2:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 ce5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ce6:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 cec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 ced:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 cf0:	74 6f                	je     d61 <__abi_tag+0x99d>
 cf2:	70 74                	jo     d68 <__abi_tag+0x9a4>
 cf4:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 cf7:	6c                   	ins    BYTE PTR es:[rdi],dx
 cf8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cf9:	73 65                	jae    d60 <__abi_tag+0x99c>
 cfb:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 cfe:	72 63                	jb     d63 <__abi_tag+0x99f>
 d00:	70 79                	jo     d7b <__abi_tag+0x9b7>
 d02:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 d05:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d08:	72 61                	jb     d6b <__abi_tag+0x9a7>
 d0a:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 d0d:	73 74                	jae    d83 <__abi_tag+0x9bf>
 d0f:	72 74                	jb     d85 <__abi_tag+0x9c1>
 d11:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d12:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 d15:	74 72                	je     d89 <__abi_tag+0x9c5>
 d17:	74 6f                	je     d88 <__abi_tag+0x9c4>
 d19:	6c                   	ins    BYTE PTR es:[rdi],dx
 d1a:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 d1d:	6d                   	ins    DWORD PTR es:[rdi],dx
 d1e:	73 65                	jae    d85 <__abi_tag+0x9c1>
 d20:	74 00                	je     d22 <__abi_tag+0x95e>
 d22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d23:	70 74                	jo     d99 <__abi_tag+0x9d5>
 d25:	61                   	(bad)  
 d26:	72 67                	jb     d8f <__abi_tag+0x9cb>
 d28:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d2b:	72 6e                	jb     d9b <__abi_tag+0x9d7>
 d2d:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 d30:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 d33:	64 69 67 69 74 00 73 	imul   esp,DWORD PTR fs:[rdi+0x69],0x74730074
 d3a:	74 
 d3b:	72 73                	jb     db0 <__abi_tag+0x9ec>
 d3d:	74 72                	je     db1 <__abi_tag+0x9ed>
 d3f:	00 70 74             	add    BYTE PTR [rax+0x74],dh
 d42:	68 72 65 61 64       	push   0x64616572
 d47:	5f                   	pop    rdi
 d48:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 d4b:	61                   	(bad)  
 d4c:	74 65                	je     db3 <__abi_tag+0x9ef>
 d4e:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d51:	72 6e                	jb     dc1 <__abi_tag+0x9fd>
 d53:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 d56:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d59:	72 6c                	jb     dc7 <__abi_tag+0xa03>
 d5b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 d5d:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 d60:	65 65 70 00          	gs gs jo d64 <__abi_tag+0x9a0>
 d64:	67 65 74 64          	addr32 gs je dcc <__abi_tag+0xa08>
 d68:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 d6a:	69 6d 00 73 65 6e 64 	imul   ebp,DWORD PTR [rbp+0x0],0x646e6573
 d71:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
 d74:	72 69                	jb     ddf <__abi_tag+0xa1b>
 d76:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d77:	74 66                	je     ddf <__abi_tag+0xa1b>
 d79:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 d7c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d7d:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 d81:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d82:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d83:	6c                   	ins    BYTE PTR es:[rdi],dx
 d84:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 d87:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d88:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d89:	73 00                	jae    d8b <__abi_tag+0x9c7>
 d8b:	73 6e                	jae    dfb <__abi_tag+0xa37>
 d8d:	70 72                	jo     e01 <__abi_tag+0xa3d>
 d8f:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 d96:	67 65 78 65          	addr32 gs js dff <__abi_tag+0xa3b>
 d9a:	63 00                	movsxd eax,DWORD PTR [rax]
 d9c:	6c                   	ins    BYTE PTR es:[rdi],dx
 d9d:	69 73 74 65 6e 00 70 	imul   esi,DWORD PTR [rbx+0x74],0x70006e65
 da4:	65 72 72             	gs jb  e19 <__abi_tag+0xa55>
 da7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 da8:	72 00                	jb     daa <__abi_tag+0x9e6>
 daa:	73 74                	jae    e20 <__abi_tag+0xa5c>
 dac:	72 63                	jb     e11 <__abi_tag+0xa4d>
 dae:	61                   	(bad)  
 daf:	74 00                	je     db1 <__abi_tag+0x9ed>
 db1:	61                   	(bad)  
 db2:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 db5:	70 74                	jo     e2b <__abi_tag+0xa67>
 db7:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 dba:	74 63                	je     e1f <__abi_tag+0xa5b>
 dbc:	68 61 72 00 65       	push   0x65007261
 dc1:	78 69                	js     e2c <__abi_tag+0xa68>
 dc3:	74 00                	je     dc5 <__abi_tag+0xa01>
 dc5:	5f                   	pop    rdi
 dc6:	5f                   	pop    rdi
 dc7:	73 74                	jae    e3d <__abi_tag+0xa79>
 dc9:	61                   	(bad)  
 dca:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 dcd:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 dd0:	5f                   	pop    rdi
 dd1:	66 61                	data16 (bad) 
 dd3:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 dda:	6f 
 ddb:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 dde:	70 74                	jo     e54 <__abi_tag+0xa90>
 de0:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 de4:	70 63                	jo     e49 <__abi_tag+0xa85>
 de6:	61                   	(bad)  
 de7:	70 2e                	jo     e17 <__abi_tag+0xa53>
 de9:	73 6f                	jae    e5a <__abi_tag+0xa96>
 deb:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 dee:	38 00                	cmp    BYTE PTR [rax],al
 df0:	6c                   	ins    BYTE PTR es:[rdi],dx
 df1:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 df8:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 dfb:	73 6f                	jae    e6c <__abi_tag+0xaa8>
 dfd:	2e 30 00             	cs xor BYTE PTR [rax],al
 e00:	6c                   	ins    BYTE PTR es:[rdi],dx
 e01:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 e08:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e0a:	73 6f                	jae    e7b <__abi_tag+0xab7>
 e0c:	2e 30 00             	cs xor BYTE PTR [rax],al
 e0f:	6c                   	ins    BYTE PTR es:[rdi],dx
 e10:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 e17:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 e1c:	5f                   	pop    rdi
 e1d:	35 2e 33 00 47       	xor    eax,0x4700332e
 e22:	4c                   	rex.WR
 e23:	49                   	rex.WB
 e24:	42                   	rex.X
 e25:	43 5f                	rex.XB pop r15
 e27:	32 2e                	xor    ch,BYTE PTR [rsi]
 e29:	34 00                	xor    al,0x0
 e2b:	47                   	rex.RXB
 e2c:	4c                   	rex.WR
 e2d:	49                   	rex.WB
 e2e:	42                   	rex.X
 e2f:	43 5f                	rex.XB pop r15
 e31:	32 2e                	xor    ch,BYTE PTR [rsi]
 e33:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e35:	34 00                	xor    al,0x0
 e37:	47                   	rex.RXB
 e38:	4c                   	rex.WR
 e39:	49                   	rex.WB
 e3a:	42                   	rex.X
 e3b:	43 5f                	rex.XB pop r15
 e3d:	32 2e                	xor    ch,BYTE PTR [rsi]
 e3f:	32 2e                	xor    ch,BYTE PTR [rsi]
 e41:	35 00 47 4c 49       	xor    eax,0x494c4700
 e46:	42                   	rex.X
 e47:	43 5f                	rex.XB pop r15
 e49:	32 2e                	xor    ch,BYTE PTR [rsi]
 e4b:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]

Disassembly of section .gnu.version:

0000000000000e4e <.gnu.version>:
 e4e:	00 00                	add    BYTE PTR [rax],al
 e50:	00 00                	add    BYTE PTR [rax],al
 e52:	02 00                	add    al,BYTE PTR [rax]
 e54:	03 00                	add    eax,DWORD PTR [rax]
 e56:	03 00                	add    eax,DWORD PTR [rax]
 e58:	03 00                	add    eax,DWORD PTR [rax]
 e5a:	03 00                	add    eax,DWORD PTR [rax]
 e5c:	03 00                	add    eax,DWORD PTR [rax]
 e5e:	03 00                	add    eax,DWORD PTR [rax]
 e60:	00 00                	add    BYTE PTR [rax],al
 e62:	03 00                	add    eax,DWORD PTR [rax]
 e64:	03 00                	add    eax,DWORD PTR [rax]
 e66:	03 00                	add    eax,DWORD PTR [rax]
 e68:	03 00                	add    eax,DWORD PTR [rax]
 e6a:	00 00                	add    BYTE PTR [rax],al
 e6c:	03 00                	add    eax,DWORD PTR [rax]
 e6e:	03 00                	add    eax,DWORD PTR [rax]
 e70:	03 00                	add    eax,DWORD PTR [rax]
 e72:	03 00                	add    eax,DWORD PTR [rax]
 e74:	03 00                	add    eax,DWORD PTR [rax]
 e76:	04 00                	add    al,0x0
 e78:	00 00                	add    BYTE PTR [rax],al
 e7a:	03 00                	add    eax,DWORD PTR [rax]
 e7c:	00 00                	add    BYTE PTR [rax],al
 e7e:	05 00 00 00 02       	add    eax,0x2000000
 e83:	00 03                	add    BYTE PTR [rbx],al
 e85:	00 03                	add    BYTE PTR [rbx],al
 e87:	00 03                	add    BYTE PTR [rbx],al
 e89:	00 00                	add    BYTE PTR [rax],al
 e8b:	00 03                	add    BYTE PTR [rbx],al
 e8d:	00 03                	add    BYTE PTR [rbx],al
 e8f:	00 03                	add    BYTE PTR [rbx],al
 e91:	00 03                	add    BYTE PTR [rbx],al
 e93:	00 03                	add    BYTE PTR [rbx],al
 e95:	00 03                	add    BYTE PTR [rbx],al
 e97:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 300119d <_end+0x2ec2155>
 e9d:	00 03                	add    BYTE PTR [rbx],al
 e9f:	00 03                	add    BYTE PTR [rbx],al
 ea1:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 30011a7 <_end+0x2ec215f>
 ea7:	00 03                	add    BYTE PTR [rbx],al
 ea9:	00 03                	add    BYTE PTR [rbx],al
 eab:	00 05 00 05 00 03    	add    BYTE PTR [rip+0x3000500],al        # 30013b1 <_end+0x2ec2369>
 eb1:	00 05 00 06 00 03    	add    BYTE PTR [rip+0x3000600],al        # 30014b7 <_end+0x2ec246f>
 eb7:	00 03                	add    BYTE PTR [rbx],al
 eb9:	00 03                	add    BYTE PTR [rbx],al
 ebb:	00 03                	add    BYTE PTR [rbx],al
 ebd:	00 03                	add    BYTE PTR [rbx],al
 ebf:	00 05 00 00 00 03    	add    BYTE PTR [rip+0x3000000],al        # 3000ec5 <_end+0x2ec1e7d>
 ec5:	00 03                	add    BYTE PTR [rbx],al
 ec7:	00 03                	add    BYTE PTR [rbx],al
 ec9:	00 03                	add    BYTE PTR [rbx],al
 ecb:	00 00                	add    BYTE PTR [rax],al
 ecd:	00 03                	add    BYTE PTR [rbx],al
 ecf:	00 03                	add    BYTE PTR [rbx],al
 ed1:	00 03                	add    BYTE PTR [rbx],al
 ed3:	00 03                	add    BYTE PTR [rbx],al
 ed5:	00 03                	add    BYTE PTR [rbx],al
 ed7:	00 02                	add    BYTE PTR [rdx],al
 ed9:	00 03                	add    BYTE PTR [rbx],al
 edb:	00 00                	add    BYTE PTR [rax],al
 edd:	00 03                	add    BYTE PTR [rbx],al
 edf:	00 03                	add    BYTE PTR [rbx],al
 ee1:	00 01                	add    BYTE PTR [rcx],al
 ee3:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

0000000000000ee8 <.gnu.version_r>:
 ee8:	01 00                	add    DWORD PTR [rax],eax
 eea:	01 00                	add    DWORD PTR [rax],eax
 eec:	c8 02 00 00          	enter  0x2,0x0
 ef0:	10 00                	adc    BYTE PTR [rax],al
 ef2:	00 00                	add    BYTE PTR [rax],al
 ef4:	20 00                	and    BYTE PTR [rax],al
 ef6:	00 00                	add    BYTE PTR [rax],al
 ef8:	43 28 97 01 00 00 05 	rex.XB sub BYTE PTR [r15+0x5000001],dl
 eff:	00 e1                	add    cl,ah
 f01:	02 00                	add    al,BYTE PTR [rax]
 f03:	00 00                	add    BYTE PTR [rax],al
 f05:	00 00                	add    BYTE PTR [rax],al
 f07:	00 01                	add    BYTE PTR [rcx],al
 f09:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 f0c:	d7                   	xlat   BYTE PTR ds:[rbx]
 f0d:	02 00                	add    al,BYTE PTR [rax]
 f0f:	00 10                	add    BYTE PTR [rax],dl
 f11:	00 00                	add    BYTE PTR [rax],al
 f13:	00 00                	add    BYTE PTR [rax],al
 f15:	00 00                	add    BYTE PTR [rax],al
 f17:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 f1a:	69 0d 00 00 06 00 e9 	imul   ecx,DWORD PTR [rip+0x60000],0x2e9        # 60f24 <rules+0x4fc44>
 f21:	02 00 00 
 f24:	10 00                	adc    BYTE PTR [rax],al
 f26:	00 00                	add    BYTE PTR [rax],al
 f28:	74 19                	je     f43 <__abi_tag+0xb7f>
 f2a:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [rcx],0x40000
 f30:	f3 02 00             	repz add al,BYTE PTR [rax]
 f33:	00 10                	add    BYTE PTR [rax],dl
 f35:	00 00                	add    BYTE PTR [rax],al
 f37:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 f3a:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 f40:	ff 02                	inc    DWORD PTR [rdx]
 f42:	00 00                	add    BYTE PTR [rax],al
 f44:	10 00                	adc    BYTE PTR [rax],al
 f46:	00 00                	add    BYTE PTR [rax],al
 f48:	b4 91                	mov    ah,0x91
 f4a:	96                   	xchg   esi,eax
 f4b:	06                   	(bad)  
 f4c:	00 00                	add    BYTE PTR [rax],al
 f4e:	02 00                	add    al,BYTE PTR [rax]
 f50:	0b 03                	or     eax,DWORD PTR [rbx]
 f52:	00 00                	add    BYTE PTR [rax],al
 f54:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000f58 <.rela.dyn>:
     f58:	70 0b                	jo     f65 <__abi_tag+0xba1>
     f5a:	01 00                	add    DWORD PTR [rax],eax
     f5c:	00 00                	add    BYTE PTR [rax],al
     f5e:	00 00                	add    BYTE PTR [rax],al
     f60:	08 00                	or     BYTE PTR [rax],al
     f62:	00 00                	add    BYTE PTR [rax],al
     f64:	00 00                	add    BYTE PTR [rax],al
     f66:	00 00                	add    BYTE PTR [rax],al
     f68:	a0 29 00 00 00 00 00 	movabs al,ds:0x7800000000000029
     f6f:	00 78 
     f71:	0b 01                	or     eax,DWORD PTR [rcx]
     f73:	00 00                	add    BYTE PTR [rax],al
     f75:	00 00                	add    BYTE PTR [rax],al
     f77:	00 08                	add    BYTE PTR [rax],cl
     f79:	00 00                	add    BYTE PTR [rax],al
     f7b:	00 00                	add    BYTE PTR [rax],al
     f7d:	00 00                	add    BYTE PTR [rax],al
     f7f:	00 60 29             	add    BYTE PTR [rax+0x29],ah
     f82:	00 00                	add    BYTE PTR [rax],al
     f84:	00 00                	add    BYTE PTR [rax],al
     f86:	00 00                	add    BYTE PTR [rax],al
     f88:	08 10                	or     BYTE PTR [rax],dl
     f8a:	01 00                	add    DWORD PTR [rax],eax
     f8c:	00 00                	add    BYTE PTR [rax],al
     f8e:	00 00                	add    BYTE PTR [rax],al
     f90:	08 00                	or     BYTE PTR [rax],al
     f92:	00 00                	add    BYTE PTR [rax],al
     f94:	00 00                	add    BYTE PTR [rax],al
     f96:	00 00                	add    BYTE PTR [rax],al
     f98:	08 10                	or     BYTE PTR [rax],dl
     f9a:	01 00                	add    DWORD PTR [rax],eax
     f9c:	00 00                	add    BYTE PTR [rax],al
     f9e:	00 00                	add    BYTE PTR [rax],al
     fa0:	28 10                	sub    BYTE PTR [rax],dl
     fa2:	01 00                	add    DWORD PTR [rax],eax
     fa4:	00 00                	add    BYTE PTR [rax],al
     fa6:	00 00                	add    BYTE PTR [rax],al
     fa8:	08 00                	or     BYTE PTR [rax],al
     faa:	00 00                	add    BYTE PTR [rax],al
     fac:	00 00                	add    BYTE PTR [rax],al
     fae:	00 00                	add    BYTE PTR [rax],al
     fb0:	04 c0                	add    al,0xc0
     fb2:	00 00                	add    BYTE PTR [rax],al
     fb4:	00 00                	add    BYTE PTR [rax],al
     fb6:	00 00                	add    BYTE PTR [rax],al
     fb8:	30 10                	xor    BYTE PTR [rax],dl
     fba:	01 00                	add    DWORD PTR [rax],eax
     fbc:	00 00                	add    BYTE PTR [rax],al
     fbe:	00 00                	add    BYTE PTR [rax],al
     fc0:	08 00                	or     BYTE PTR [rax],al
     fc2:	00 00                	add    BYTE PTR [rax],al
     fc4:	00 00                	add    BYTE PTR [rax],al
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	1a c0                	sbb    al,al
     fca:	00 00                	add    BYTE PTR [rax],al
     fcc:	00 00                	add    BYTE PTR [rax],al
     fce:	00 00                	add    BYTE PTR [rax],al
     fd0:	38 10                	cmp    BYTE PTR [rax],dl
     fd2:	01 00                	add    DWORD PTR [rax],eax
     fd4:	00 00                	add    BYTE PTR [rax],al
     fd6:	00 00                	add    BYTE PTR [rax],al
     fd8:	08 00                	or     BYTE PTR [rax],al
     fda:	00 00                	add    BYTE PTR [rax],al
     fdc:	00 00                	add    BYTE PTR [rax],al
     fde:	00 00                	add    BYTE PTR [rax],al
     fe0:	34 c0                	xor    al,0xc0
     fe2:	00 00                	add    BYTE PTR [rax],al
     fe4:	00 00                	add    BYTE PTR [rax],al
     fe6:	00 00                	add    BYTE PTR [rax],al
     fe8:	d8 0f                	fmul   DWORD PTR [rdi]
     fea:	01 00                	add    DWORD PTR [rax],eax
     fec:	00 00                	add    BYTE PTR [rax],al
     fee:	00 00                	add    BYTE PTR [rax],al
     ff0:	06                   	(bad)  
     ff1:	00 00                	add    BYTE PTR [rax],al
     ff3:	00 09                	add    BYTE PTR [rcx],cl
	...
     ffd:	00 00                	add    BYTE PTR [rax],al
     fff:	00 e0                	add    al,ah
    1001:	0f 01 00             	sgdt   [rax]
    1004:	00 00                	add    BYTE PTR [rax],al
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	06                   	(bad)  
    1009:	00 00                	add    BYTE PTR [rax],al
    100b:	00 19                	add    BYTE PTR [rcx],bl
	...
    1015:	00 00                	add    BYTE PTR [rax],al
    1017:	00 e8                	add    al,ch
    1019:	0f 01 00             	sgdt   [rax]
    101c:	00 00                	add    BYTE PTR [rax],al
    101e:	00 00                	add    BYTE PTR [rax],al
    1020:	06                   	(bad)  
    1021:	00 00                	add    BYTE PTR [rax],al
    1023:	00 1e                	add    BYTE PTR [rsi],bl
	...
    102d:	00 00                	add    BYTE PTR [rax],al
    102f:	00 f0                	add    al,dh
    1031:	0f 01 00             	sgdt   [rax]
    1034:	00 00                	add    BYTE PTR [rax],al
    1036:	00 00                	add    BYTE PTR [rax],al
    1038:	06                   	(bad)  
    1039:	00 00                	add    BYTE PTR [rax],al
    103b:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
	...
    1046:	00 00                	add    BYTE PTR [rax],al
    1048:	f8                   	clc    
    1049:	0f 01 00             	sgdt   [rax]
    104c:	00 00                	add    BYTE PTR [rax],al
    104e:	00 00                	add    BYTE PTR [rax],al
    1050:	06                   	(bad)  
    1051:	00 00                	add    BYTE PTR [rax],al
    1053:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    105e:	00 00                	add    BYTE PTR [rax],al
    1060:	60                   	(bad)  
    1061:	10 01                	adc    BYTE PTR [rcx],al
    1063:	00 00                	add    BYTE PTR [rax],al
    1065:	00 00                	add    BYTE PTR [rax],al
    1067:	00 05 00 00 00 4b    	add    BYTE PTR [rip+0x4b000000],al        # 4b00106d <_end+0x4aec2025>
	...

Disassembly of section .rela.plt:

0000000000001078 <.rela.plt>:
    1078:	b8 0d 01 00 00       	mov    eax,0x10d
    107d:	00 00                	add    BYTE PTR [rax],al
    107f:	00 07                	add    BYTE PTR [rdi],al
    1081:	00 00                	add    BYTE PTR [rax],al
    1083:	00 01                	add    BYTE PTR [rcx],al
	...
    108d:	00 00                	add    BYTE PTR [rax],al
    108f:	00 c0                	add    al,al
    1091:	0d 01 00 00 00       	or     eax,0x1
    1096:	00 00                	add    BYTE PTR [rax],al
    1098:	07                   	(bad)  
    1099:	00 00                	add    BYTE PTR [rax],al
    109b:	00 02                	add    BYTE PTR [rdx],al
	...
    10a5:	00 00                	add    BYTE PTR [rax],al
    10a7:	00 c8                	add    al,cl
    10a9:	0d 01 00 00 00       	or     eax,0x1
    10ae:	00 00                	add    BYTE PTR [rax],al
    10b0:	07                   	(bad)  
    10b1:	00 00                	add    BYTE PTR [rax],al
    10b3:	00 03                	add    BYTE PTR [rbx],al
	...
    10bd:	00 00                	add    BYTE PTR [rax],al
    10bf:	00 d0                	add    al,dl
    10c1:	0d 01 00 00 00       	or     eax,0x1
    10c6:	00 00                	add    BYTE PTR [rax],al
    10c8:	07                   	(bad)  
    10c9:	00 00                	add    BYTE PTR [rax],al
    10cb:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    10d6:	00 00                	add    BYTE PTR [rax],al
    10d8:	d8 0d 01 00 00 00    	fmul   DWORD PTR [rip+0x1]        # 10df <__abi_tag+0xd1b>
    10de:	00 00                	add    BYTE PTR [rax],al
    10e0:	07                   	(bad)  
    10e1:	00 00                	add    BYTE PTR [rax],al
    10e3:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10e9 <__abi_tag+0xd25>
    10e9:	00 00                	add    BYTE PTR [rax],al
    10eb:	00 00                	add    BYTE PTR [rax],al
    10ed:	00 00                	add    BYTE PTR [rax],al
    10ef:	00 e0                	add    al,ah
    10f1:	0d 01 00 00 00       	or     eax,0x1
    10f6:	00 00                	add    BYTE PTR [rax],al
    10f8:	07                   	(bad)  
    10f9:	00 00                	add    BYTE PTR [rax],al
    10fb:	00 06                	add    BYTE PTR [rsi],al
	...
    1105:	00 00                	add    BYTE PTR [rax],al
    1107:	00 e8                	add    al,ch
    1109:	0d 01 00 00 00       	or     eax,0x1
    110e:	00 00                	add    BYTE PTR [rax],al
    1110:	07                   	(bad)  
    1111:	00 00                	add    BYTE PTR [rax],al
    1113:	00 07                	add    BYTE PTR [rdi],al
	...
    111d:	00 00                	add    BYTE PTR [rax],al
    111f:	00 f0                	add    al,dh
    1121:	0d 01 00 00 00       	or     eax,0x1
    1126:	00 00                	add    BYTE PTR [rax],al
    1128:	07                   	(bad)  
    1129:	00 00                	add    BYTE PTR [rax],al
    112b:	00 08                	add    BYTE PTR [rax],cl
	...
    1135:	00 00                	add    BYTE PTR [rax],al
    1137:	00 f8                	add    al,bh
    1139:	0d 01 00 00 00       	or     eax,0x1
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	07                   	(bad)  
    1141:	00 00                	add    BYTE PTR [rax],al
    1143:	00 0a                	add    BYTE PTR [rdx],cl
	...
    1151:	0e                   	(bad)  
    1152:	01 00                	add    DWORD PTR [rax],eax
    1154:	00 00                	add    BYTE PTR [rax],al
    1156:	00 00                	add    BYTE PTR [rax],al
    1158:	07                   	(bad)  
    1159:	00 00                	add    BYTE PTR [rax],al
    115b:	00 0b                	add    BYTE PTR [rbx],cl
	...
    1165:	00 00                	add    BYTE PTR [rax],al
    1167:	00 08                	add    BYTE PTR [rax],cl
    1169:	0e                   	(bad)  
    116a:	01 00                	add    DWORD PTR [rax],eax
    116c:	00 00                	add    BYTE PTR [rax],al
    116e:	00 00                	add    BYTE PTR [rax],al
    1170:	07                   	(bad)  
    1171:	00 00                	add    BYTE PTR [rax],al
    1173:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    117e:	00 00                	add    BYTE PTR [rax],al
    1180:	10 0e                	adc    BYTE PTR [rsi],cl
    1182:	01 00                	add    DWORD PTR [rax],eax
    1184:	00 00                	add    BYTE PTR [rax],al
    1186:	00 00                	add    BYTE PTR [rax],al
    1188:	07                   	(bad)  
    1189:	00 00                	add    BYTE PTR [rax],al
    118b:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1191 <__abi_tag+0xdcd>
    1191:	00 00                	add    BYTE PTR [rax],al
    1193:	00 00                	add    BYTE PTR [rax],al
    1195:	00 00                	add    BYTE PTR [rax],al
    1197:	00 18                	add    BYTE PTR [rax],bl
    1199:	0e                   	(bad)  
    119a:	01 00                	add    DWORD PTR [rax],eax
    119c:	00 00                	add    BYTE PTR [rax],al
    119e:	00 00                	add    BYTE PTR [rax],al
    11a0:	07                   	(bad)  
    11a1:	00 00                	add    BYTE PTR [rax],al
    11a3:	00 0e                	add    BYTE PTR [rsi],cl
	...
    11ad:	00 00                	add    BYTE PTR [rax],al
    11af:	00 20                	add    BYTE PTR [rax],ah
    11b1:	0e                   	(bad)  
    11b2:	01 00                	add    DWORD PTR [rax],eax
    11b4:	00 00                	add    BYTE PTR [rax],al
    11b6:	00 00                	add    BYTE PTR [rax],al
    11b8:	07                   	(bad)  
    11b9:	00 00                	add    BYTE PTR [rax],al
    11bb:	00 0f                	add    BYTE PTR [rdi],cl
	...
    11c5:	00 00                	add    BYTE PTR [rax],al
    11c7:	00 28                	add    BYTE PTR [rax],ch
    11c9:	0e                   	(bad)  
    11ca:	01 00                	add    DWORD PTR [rax],eax
    11cc:	00 00                	add    BYTE PTR [rax],al
    11ce:	00 00                	add    BYTE PTR [rax],al
    11d0:	07                   	(bad)  
    11d1:	00 00                	add    BYTE PTR [rax],al
    11d3:	00 10                	add    BYTE PTR [rax],dl
	...
    11dd:	00 00                	add    BYTE PTR [rax],al
    11df:	00 30                	add    BYTE PTR [rax],dh
    11e1:	0e                   	(bad)  
    11e2:	01 00                	add    DWORD PTR [rax],eax
    11e4:	00 00                	add    BYTE PTR [rax],al
    11e6:	00 00                	add    BYTE PTR [rax],al
    11e8:	07                   	(bad)  
    11e9:	00 00                	add    BYTE PTR [rax],al
    11eb:	00 11                	add    BYTE PTR [rcx],dl
	...
    11f5:	00 00                	add    BYTE PTR [rax],al
    11f7:	00 38                	add    BYTE PTR [rax],bh
    11f9:	0e                   	(bad)  
    11fa:	01 00                	add    DWORD PTR [rax],eax
    11fc:	00 00                	add    BYTE PTR [rax],al
    11fe:	00 00                	add    BYTE PTR [rax],al
    1200:	07                   	(bad)  
    1201:	00 00                	add    BYTE PTR [rax],al
    1203:	00 12                	add    BYTE PTR [rdx],dl
	...
    120d:	00 00                	add    BYTE PTR [rax],al
    120f:	00 40 0e             	add    BYTE PTR [rax+0xe],al
    1212:	01 00                	add    DWORD PTR [rax],eax
    1214:	00 00                	add    BYTE PTR [rax],al
    1216:	00 00                	add    BYTE PTR [rax],al
    1218:	07                   	(bad)  
    1219:	00 00                	add    BYTE PTR [rax],al
    121b:	00 13                	add    BYTE PTR [rbx],dl
	...
    1225:	00 00                	add    BYTE PTR [rax],al
    1227:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    122a:	01 00                	add    DWORD PTR [rax],eax
    122c:	00 00                	add    BYTE PTR [rax],al
    122e:	00 00                	add    BYTE PTR [rax],al
    1230:	07                   	(bad)  
    1231:	00 00                	add    BYTE PTR [rax],al
    1233:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    123e:	00 00                	add    BYTE PTR [rax],al
    1240:	50                   	push   rax
    1241:	0e                   	(bad)  
    1242:	01 00                	add    DWORD PTR [rax],eax
    1244:	00 00                	add    BYTE PTR [rax],al
    1246:	00 00                	add    BYTE PTR [rax],al
    1248:	07                   	(bad)  
    1249:	00 00                	add    BYTE PTR [rax],al
    124b:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 1251 <__abi_tag+0xe8d>
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	00 00                	add    BYTE PTR [rax],al
    1255:	00 00                	add    BYTE PTR [rax],al
    1257:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
    125a:	01 00                	add    DWORD PTR [rax],eax
    125c:	00 00                	add    BYTE PTR [rax],al
    125e:	00 00                	add    BYTE PTR [rax],al
    1260:	07                   	(bad)  
    1261:	00 00                	add    BYTE PTR [rax],al
    1263:	00 16                	add    BYTE PTR [rsi],dl
	...
    126d:	00 00                	add    BYTE PTR [rax],al
    126f:	00 60 0e             	add    BYTE PTR [rax+0xe],ah
    1272:	01 00                	add    DWORD PTR [rax],eax
    1274:	00 00                	add    BYTE PTR [rax],al
    1276:	00 00                	add    BYTE PTR [rax],al
    1278:	07                   	(bad)  
    1279:	00 00                	add    BYTE PTR [rax],al
    127b:	00 17                	add    BYTE PTR [rdi],dl
	...
    1285:	00 00                	add    BYTE PTR [rax],al
    1287:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    128a:	01 00                	add    DWORD PTR [rax],eax
    128c:	00 00                	add    BYTE PTR [rax],al
    128e:	00 00                	add    BYTE PTR [rax],al
    1290:	07                   	(bad)  
    1291:	00 00                	add    BYTE PTR [rax],al
    1293:	00 18                	add    BYTE PTR [rax],bl
	...
    129d:	00 00                	add    BYTE PTR [rax],al
    129f:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
    12a2:	01 00                	add    DWORD PTR [rax],eax
    12a4:	00 00                	add    BYTE PTR [rax],al
    12a6:	00 00                	add    BYTE PTR [rax],al
    12a8:	07                   	(bad)  
    12a9:	00 00                	add    BYTE PTR [rax],al
    12ab:	00 1a                	add    BYTE PTR [rdx],bl
	...
    12b5:	00 00                	add    BYTE PTR [rax],al
    12b7:	00 78 0e             	add    BYTE PTR [rax+0xe],bh
    12ba:	01 00                	add    DWORD PTR [rax],eax
    12bc:	00 00                	add    BYTE PTR [rax],al
    12be:	00 00                	add    BYTE PTR [rax],al
    12c0:	07                   	(bad)  
    12c1:	00 00                	add    BYTE PTR [rax],al
    12c3:	00 1b                	add    BYTE PTR [rbx],bl
	...
    12cd:	00 00                	add    BYTE PTR [rax],al
    12cf:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    12d5:	00 00                	add    BYTE PTR [rax],al
    12d7:	00 07                	add    BYTE PTR [rdi],al
    12d9:	00 00                	add    BYTE PTR [rax],al
    12db:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    12e6:	00 00                	add    BYTE PTR [rax],al
    12e8:	88 0e                	mov    BYTE PTR [rsi],cl
    12ea:	01 00                	add    DWORD PTR [rax],eax
    12ec:	00 00                	add    BYTE PTR [rax],al
    12ee:	00 00                	add    BYTE PTR [rax],al
    12f0:	07                   	(bad)  
    12f1:	00 00                	add    BYTE PTR [rax],al
    12f3:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 12f9 <__abi_tag+0xf35>
    12f9:	00 00                	add    BYTE PTR [rax],al
    12fb:	00 00                	add    BYTE PTR [rax],al
    12fd:	00 00                	add    BYTE PTR [rax],al
    12ff:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    1305:	00 00                	add    BYTE PTR [rax],al
    1307:	00 07                	add    BYTE PTR [rdi],al
    1309:	00 00                	add    BYTE PTR [rax],al
    130b:	00 1f                	add    BYTE PTR [rdi],bl
	...
    1315:	00 00                	add    BYTE PTR [rax],al
    1317:	00 98 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bl
    131d:	00 00                	add    BYTE PTR [rax],al
    131f:	00 07                	add    BYTE PTR [rdi],al
    1321:	00 00                	add    BYTE PTR [rax],al
    1323:	00 20                	add    BYTE PTR [rax],ah
	...
    132d:	00 00                	add    BYTE PTR [rax],al
    132f:	00 a0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ah
    1335:	00 00                	add    BYTE PTR [rax],al
    1337:	00 07                	add    BYTE PTR [rdi],al
    1339:	00 00                	add    BYTE PTR [rax],al
    133b:	00 21                	add    BYTE PTR [rcx],ah
	...
    1345:	00 00                	add    BYTE PTR [rax],al
    1347:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    134d:	00 00                	add    BYTE PTR [rax],al
    134f:	00 07                	add    BYTE PTR [rdi],al
    1351:	00 00                	add    BYTE PTR [rax],al
    1353:	00 22                	add    BYTE PTR [rdx],ah
	...
    135d:	00 00                	add    BYTE PTR [rax],al
    135f:	00 b0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dh
    1365:	00 00                	add    BYTE PTR [rax],al
    1367:	00 07                	add    BYTE PTR [rdi],al
    1369:	00 00                	add    BYTE PTR [rax],al
    136b:	00 23                	add    BYTE PTR [rbx],ah
	...
    1375:	00 00                	add    BYTE PTR [rax],al
    1377:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    137d:	00 00                	add    BYTE PTR [rax],al
    137f:	00 07                	add    BYTE PTR [rdi],al
    1381:	00 00                	add    BYTE PTR [rax],al
    1383:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    138e:	00 00                	add    BYTE PTR [rax],al
    1390:	c0 0e 01             	ror    BYTE PTR [rsi],0x1
    1393:	00 00                	add    BYTE PTR [rax],al
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	00 07                	add    BYTE PTR [rdi],al
    1399:	00 00                	add    BYTE PTR [rax],al
    139b:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 13a1 <__abi_tag+0xfdd>
    13a1:	00 00                	add    BYTE PTR [rax],al
    13a3:	00 00                	add    BYTE PTR [rax],al
    13a5:	00 00                	add    BYTE PTR [rax],al
    13a7:	00 c8                	add    al,cl
    13a9:	0e                   	(bad)  
    13aa:	01 00                	add    DWORD PTR [rax],eax
    13ac:	00 00                	add    BYTE PTR [rax],al
    13ae:	00 00                	add    BYTE PTR [rax],al
    13b0:	07                   	(bad)  
    13b1:	00 00                	add    BYTE PTR [rax],al
    13b3:	00 26                	add    BYTE PTR [rsi],ah
	...
    13bd:	00 00                	add    BYTE PTR [rax],al
    13bf:	00 d0                	add    al,dl
    13c1:	0e                   	(bad)  
    13c2:	01 00                	add    DWORD PTR [rax],eax
    13c4:	00 00                	add    BYTE PTR [rax],al
    13c6:	00 00                	add    BYTE PTR [rax],al
    13c8:	07                   	(bad)  
    13c9:	00 00                	add    BYTE PTR [rax],al
    13cb:	00 27                	add    BYTE PTR [rdi],ah
	...
    13d5:	00 00                	add    BYTE PTR [rax],al
    13d7:	00 d8                	add    al,bl
    13d9:	0e                   	(bad)  
    13da:	01 00                	add    DWORD PTR [rax],eax
    13dc:	00 00                	add    BYTE PTR [rax],al
    13de:	00 00                	add    BYTE PTR [rax],al
    13e0:	07                   	(bad)  
    13e1:	00 00                	add    BYTE PTR [rax],al
    13e3:	00 28                	add    BYTE PTR [rax],ch
	...
    13ed:	00 00                	add    BYTE PTR [rax],al
    13ef:	00 e0                	add    al,ah
    13f1:	0e                   	(bad)  
    13f2:	01 00                	add    DWORD PTR [rax],eax
    13f4:	00 00                	add    BYTE PTR [rax],al
    13f6:	00 00                	add    BYTE PTR [rax],al
    13f8:	07                   	(bad)  
    13f9:	00 00                	add    BYTE PTR [rax],al
    13fb:	00 29                	add    BYTE PTR [rcx],ch
	...
    1405:	00 00                	add    BYTE PTR [rax],al
    1407:	00 e8                	add    al,ch
    1409:	0e                   	(bad)  
    140a:	01 00                	add    DWORD PTR [rax],eax
    140c:	00 00                	add    BYTE PTR [rax],al
    140e:	00 00                	add    BYTE PTR [rax],al
    1410:	07                   	(bad)  
    1411:	00 00                	add    BYTE PTR [rax],al
    1413:	00 2a                	add    BYTE PTR [rdx],ch
	...
    141d:	00 00                	add    BYTE PTR [rax],al
    141f:	00 f0                	add    al,dh
    1421:	0e                   	(bad)  
    1422:	01 00                	add    DWORD PTR [rax],eax
    1424:	00 00                	add    BYTE PTR [rax],al
    1426:	00 00                	add    BYTE PTR [rax],al
    1428:	07                   	(bad)  
    1429:	00 00                	add    BYTE PTR [rax],al
    142b:	00 2b                	add    BYTE PTR [rbx],ch
	...
    1435:	00 00                	add    BYTE PTR [rax],al
    1437:	00 f8                	add    al,bh
    1439:	0e                   	(bad)  
    143a:	01 00                	add    DWORD PTR [rax],eax
    143c:	00 00                	add    BYTE PTR [rax],al
    143e:	00 00                	add    BYTE PTR [rax],al
    1440:	07                   	(bad)  
    1441:	00 00                	add    BYTE PTR [rax],al
    1443:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    144e:	00 00                	add    BYTE PTR [rax],al
    1450:	00 0f                	add    BYTE PTR [rdi],cl
    1452:	01 00                	add    DWORD PTR [rax],eax
    1454:	00 00                	add    BYTE PTR [rax],al
    1456:	00 00                	add    BYTE PTR [rax],al
    1458:	07                   	(bad)  
    1459:	00 00                	add    BYTE PTR [rax],al
    145b:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 1461 <__abi_tag+0x109d>
    1461:	00 00                	add    BYTE PTR [rax],al
    1463:	00 00                	add    BYTE PTR [rax],al
    1465:	00 00                	add    BYTE PTR [rax],al
    1467:	00 08                	add    BYTE PTR [rax],cl
    1469:	0f 01 00             	sgdt   [rax]
    146c:	00 00                	add    BYTE PTR [rax],al
    146e:	00 00                	add    BYTE PTR [rax],al
    1470:	07                   	(bad)  
    1471:	00 00                	add    BYTE PTR [rax],al
    1473:	00 2e                	add    BYTE PTR [rsi],ch
	...
    147d:	00 00                	add    BYTE PTR [rax],al
    147f:	00 10                	add    BYTE PTR [rax],dl
    1481:	0f 01 00             	sgdt   [rax]
    1484:	00 00                	add    BYTE PTR [rax],al
    1486:	00 00                	add    BYTE PTR [rax],al
    1488:	07                   	(bad)  
    1489:	00 00                	add    BYTE PTR [rax],al
    148b:	00 2f                	add    BYTE PTR [rdi],ch
	...
    1495:	00 00                	add    BYTE PTR [rax],al
    1497:	00 18                	add    BYTE PTR [rax],bl
    1499:	0f 01 00             	sgdt   [rax]
    149c:	00 00                	add    BYTE PTR [rax],al
    149e:	00 00                	add    BYTE PTR [rax],al
    14a0:	07                   	(bad)  
    14a1:	00 00                	add    BYTE PTR [rax],al
    14a3:	00 30                	add    BYTE PTR [rax],dh
	...
    14ad:	00 00                	add    BYTE PTR [rax],al
    14af:	00 20                	add    BYTE PTR [rax],ah
    14b1:	0f 01 00             	sgdt   [rax]
    14b4:	00 00                	add    BYTE PTR [rax],al
    14b6:	00 00                	add    BYTE PTR [rax],al
    14b8:	07                   	(bad)  
    14b9:	00 00                	add    BYTE PTR [rax],al
    14bb:	00 31                	add    BYTE PTR [rcx],dh
	...
    14c5:	00 00                	add    BYTE PTR [rax],al
    14c7:	00 28                	add    BYTE PTR [rax],ch
    14c9:	0f 01 00             	sgdt   [rax]
    14cc:	00 00                	add    BYTE PTR [rax],al
    14ce:	00 00                	add    BYTE PTR [rax],al
    14d0:	07                   	(bad)  
    14d1:	00 00                	add    BYTE PTR [rax],al
    14d3:	00 32                	add    BYTE PTR [rdx],dh
	...
    14dd:	00 00                	add    BYTE PTR [rax],al
    14df:	00 30                	add    BYTE PTR [rax],dh
    14e1:	0f 01 00             	sgdt   [rax]
    14e4:	00 00                	add    BYTE PTR [rax],al
    14e6:	00 00                	add    BYTE PTR [rax],al
    14e8:	07                   	(bad)  
    14e9:	00 00                	add    BYTE PTR [rax],al
    14eb:	00 33                	add    BYTE PTR [rbx],dh
	...
    14f5:	00 00                	add    BYTE PTR [rax],al
    14f7:	00 38                	add    BYTE PTR [rax],bh
    14f9:	0f 01 00             	sgdt   [rax]
    14fc:	00 00                	add    BYTE PTR [rax],al
    14fe:	00 00                	add    BYTE PTR [rax],al
    1500:	07                   	(bad)  
    1501:	00 00                	add    BYTE PTR [rax],al
    1503:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    150e:	00 00                	add    BYTE PTR [rax],al
    1510:	40 0f 01 00          	rex sgdt [rax]
    1514:	00 00                	add    BYTE PTR [rax],al
    1516:	00 00                	add    BYTE PTR [rax],al
    1518:	07                   	(bad)  
    1519:	00 00                	add    BYTE PTR [rax],al
    151b:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 1521 <__abi_tag+0x115d>
    1521:	00 00                	add    BYTE PTR [rax],al
    1523:	00 00                	add    BYTE PTR [rax],al
    1525:	00 00                	add    BYTE PTR [rax],al
    1527:	00 48 0f             	add    BYTE PTR [rax+0xf],cl
    152a:	01 00                	add    DWORD PTR [rax],eax
    152c:	00 00                	add    BYTE PTR [rax],al
    152e:	00 00                	add    BYTE PTR [rax],al
    1530:	07                   	(bad)  
    1531:	00 00                	add    BYTE PTR [rax],al
    1533:	00 36                	add    BYTE PTR [rsi],dh
	...
    153d:	00 00                	add    BYTE PTR [rax],al
    153f:	00 50 0f             	add    BYTE PTR [rax+0xf],dl
    1542:	01 00                	add    DWORD PTR [rax],eax
    1544:	00 00                	add    BYTE PTR [rax],al
    1546:	00 00                	add    BYTE PTR [rax],al
    1548:	07                   	(bad)  
    1549:	00 00                	add    BYTE PTR [rax],al
    154b:	00 37                	add    BYTE PTR [rdi],dh
	...
    1555:	00 00                	add    BYTE PTR [rax],al
    1557:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    155a:	01 00                	add    DWORD PTR [rax],eax
    155c:	00 00                	add    BYTE PTR [rax],al
    155e:	00 00                	add    BYTE PTR [rax],al
    1560:	07                   	(bad)  
    1561:	00 00                	add    BYTE PTR [rax],al
    1563:	00 38                	add    BYTE PTR [rax],bh
	...
    156d:	00 00                	add    BYTE PTR [rax],al
    156f:	00 60 0f             	add    BYTE PTR [rax+0xf],ah
    1572:	01 00                	add    DWORD PTR [rax],eax
    1574:	00 00                	add    BYTE PTR [rax],al
    1576:	00 00                	add    BYTE PTR [rax],al
    1578:	07                   	(bad)  
    1579:	00 00                	add    BYTE PTR [rax],al
    157b:	00 39                	add    BYTE PTR [rcx],bh
	...
    1585:	00 00                	add    BYTE PTR [rax],al
    1587:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    158a:	01 00                	add    DWORD PTR [rax],eax
    158c:	00 00                	add    BYTE PTR [rax],al
    158e:	00 00                	add    BYTE PTR [rax],al
    1590:	07                   	(bad)  
    1591:	00 00                	add    BYTE PTR [rax],al
    1593:	00 3a                	add    BYTE PTR [rdx],bh
	...
    159d:	00 00                	add    BYTE PTR [rax],al
    159f:	00 70 0f             	add    BYTE PTR [rax+0xf],dh
    15a2:	01 00                	add    DWORD PTR [rax],eax
    15a4:	00 00                	add    BYTE PTR [rax],al
    15a6:	00 00                	add    BYTE PTR [rax],al
    15a8:	07                   	(bad)  
    15a9:	00 00                	add    BYTE PTR [rax],al
    15ab:	00 3b                	add    BYTE PTR [rbx],bh
	...
    15b5:	00 00                	add    BYTE PTR [rax],al
    15b7:	00 78 0f             	add    BYTE PTR [rax+0xf],bh
    15ba:	01 00                	add    DWORD PTR [rax],eax
    15bc:	00 00                	add    BYTE PTR [rax],al
    15be:	00 00                	add    BYTE PTR [rax],al
    15c0:	07                   	(bad)  
    15c1:	00 00                	add    BYTE PTR [rax],al
    15c3:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    15ce:	00 00                	add    BYTE PTR [rax],al
    15d0:	80 0f 01             	or     BYTE PTR [rdi],0x1
    15d3:	00 00                	add    BYTE PTR [rax],al
    15d5:	00 00                	add    BYTE PTR [rax],al
    15d7:	00 07                	add    BYTE PTR [rdi],al
    15d9:	00 00                	add    BYTE PTR [rax],al
    15db:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 15e1 <__abi_tag+0x121d>
    15e1:	00 00                	add    BYTE PTR [rax],al
    15e3:	00 00                	add    BYTE PTR [rax],al
    15e5:	00 00                	add    BYTE PTR [rax],al
    15e7:	00 88 0f 01 00 00    	add    BYTE PTR [rax+0x10f],cl
    15ed:	00 00                	add    BYTE PTR [rax],al
    15ef:	00 07                	add    BYTE PTR [rdi],al
    15f1:	00 00                	add    BYTE PTR [rax],al
    15f3:	00 3e                	add    BYTE PTR [rsi],bh
	...
    15fd:	00 00                	add    BYTE PTR [rax],al
    15ff:	00 90 0f 01 00 00    	add    BYTE PTR [rax+0x10f],dl
    1605:	00 00                	add    BYTE PTR [rax],al
    1607:	00 07                	add    BYTE PTR [rdi],al
    1609:	00 00                	add    BYTE PTR [rax],al
    160b:	00 3f                	add    BYTE PTR [rdi],bh
	...
    1615:	00 00                	add    BYTE PTR [rax],al
    1617:	00 98 0f 01 00 00    	add    BYTE PTR [rax+0x10f],bl
    161d:	00 00                	add    BYTE PTR [rax],al
    161f:	00 07                	add    BYTE PTR [rdi],al
    1621:	00 00                	add    BYTE PTR [rax],al
    1623:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    162e:	00 00                	add    BYTE PTR [rax],al
    1630:	a0 0f 01 00 00 00 00 	movabs al,ds:0x70000000000010f
    1637:	00 07 
    1639:	00 00                	add    BYTE PTR [rax],al
    163b:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    1646:	00 00                	add    BYTE PTR [rax],al
    1648:	a8 0f                	test   al,0xf
    164a:	01 00                	add    DWORD PTR [rax],eax
    164c:	00 00                	add    BYTE PTR [rax],al
    164e:	00 00                	add    BYTE PTR [rax],al
    1650:	07                   	(bad)  
    1651:	00 00                	add    BYTE PTR [rax],al
    1653:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    165e:	00 00                	add    BYTE PTR [rax],al
    1660:	b0 0f                	mov    al,0xf
    1662:	01 00                	add    DWORD PTR [rax],eax
    1664:	00 00                	add    BYTE PTR [rax],al
    1666:	00 00                	add    BYTE PTR [rax],al
    1668:	07                   	(bad)  
    1669:	00 00                	add    BYTE PTR [rax],al
    166b:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    1676:	00 00                	add    BYTE PTR [rax],al
    1678:	b8 0f 01 00 00       	mov    eax,0x10f
    167d:	00 00                	add    BYTE PTR [rax],al
    167f:	00 07                	add    BYTE PTR [rdi],al
    1681:	00 00                	add    BYTE PTR [rax],al
    1683:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    168f:	00 c0                	add    al,al
    1691:	0f 01 00             	sgdt   [rax]
    1694:	00 00                	add    BYTE PTR [rax],al
    1696:	00 00                	add    BYTE PTR [rax],al
    1698:	07                   	(bad)  
    1699:	00 00                	add    BYTE PTR [rax],al
    169b:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
    16a6:	00 00                	add    BYTE PTR [rax],al
    16a8:	c8 0f 01 00          	enter  0x10f,0x0
    16ac:	00 00                	add    BYTE PTR [rax],al
    16ae:	00 00                	add    BYTE PTR [rax],al
    16b0:	07                   	(bad)  
    16b1:	00 00                	add    BYTE PTR [rax],al
    16b3:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    16be:	00 00                	add    BYTE PTR [rax],al
    16c0:	d0 0f                	ror    BYTE PTR [rdi],1
    16c2:	01 00                	add    DWORD PTR [rax],eax
    16c4:	00 00                	add    BYTE PTR [rax],al
    16c6:	00 00                	add    BYTE PTR [rax],al
    16c8:	07                   	(bad)  
    16c9:	00 00                	add    BYTE PTR [rax],al
    16cb:	00 48 00             	add    BYTE PTR [rax+0x0],cl
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 c9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefc9]        # 10fd8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 82 ed 00 00    	push   QWORD PTR [rip+0xed82]        # 10da8 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 83 ed 00 00 	bnd jmp QWORD PTR [rip+0xed83]        # 10db0 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    245f:	90                   	nop
    2460:	f3 0f 1e fa          	endbr64 
    2464:	68 43 00 00 00       	push   0x43
    2469:	f2 e9 b1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    246f:	90                   	nop

Disassembly of section .plt.got:

0000000000002470 <__cxa_finalize@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 75 eb 00 00 	bnd jmp QWORD PTR [rip+0xeb75]        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    247b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002480 <sqlite3_close@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 2d e9 00 00 	bnd jmp QWORD PTR [rip+0xe92d]        # 10db8 <sqlite3_close>
    248b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002490 <pthread_join@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 25 e9 00 00 	bnd jmp QWORD PTR [rip+0xe925]        # 10dc0 <pthread_join@GLIBC_2.34>
    249b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <printf@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 1d e9 00 00 	bnd jmp QWORD PTR [rip+0xe91d]        # 10dc8 <printf@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <memset@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 15 e9 00 00 	bnd jmp QWORD PTR [rip+0xe915]        # 10dd0 <memset@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <snprintf@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 0d e9 00 00 	bnd jmp QWORD PTR [rip+0xe90d]        # 10dd8 <snprintf@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <backtrace@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 05 e9 00 00 	bnd jmp QWORD PTR [rip+0xe905]        # 10de0 <backtrace@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <close@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 fd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8fd]        # 10de8 <close@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <strncat@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 f5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8f5]        # 10df0 <strncat@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <puts@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 ed e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ed]        # 10df8 <puts@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <htons@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10e00 <htons@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <exit@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10e08 <exit@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <putchar@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10e10 <putchar@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <sqlite3_exec@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10e18 <sqlite3_exec>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <getopt@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10e20 <getopt@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <read@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10e28 <read@GLIBC_2.2.5>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <strncmp@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10e30 <strncmp@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <malloc@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10e38 <malloc@GLIBC_2.2.5>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <fopen@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10e40 <fopen@GLIBC_2.2.5>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <regexec@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10e48 <regexec@GLIBC_2.3.4>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <pcap_open_live@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10e50 <pcap_open_live>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <setsockopt@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10e58 <setsockopt@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <sqlite3_free@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10e60 <sqlite3_free>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <lua_settop@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10e68 <lua_settop@LUA_5.3>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <pthread_create@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10e70 <pthread_create@GLIBC_2.34>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <backtrace_symbols@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10e78 <backtrace_symbols@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <free@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10e80 <free@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <strlen@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10e88 <strlen@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <listen@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10e90 <listen@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <sprintf@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10e98 <sprintf@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <ntohs@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10ea0 <ntohs@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <fgetc@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10ea8 <fgetc@GLIBC_2.2.5>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <ntohl@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10eb0 <ntohl@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <sleep@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10eb8 <sleep@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <lua_pcallk@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10ec0 <lua_pcallk@LUA_5.3>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <strstr@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10ec8 <strstr@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <strcat@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10ed0 <strcat@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <fputs@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10ed8 <fputs@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <strtol@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10ee0 <strtol@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <luaL_loadfilex@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10ee8 <luaL_loadfilex@LUA_5.3>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <atoi@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10ef0 <atoi@GLIBC_2.2.5>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <regcomp@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10ef8 <regcomp@GLIBC_2.2.5>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <signal@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10f00 <signal@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <strchr@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10f08 <strchr@GLIBC_2.2.5>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <lua_gettop@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10f10 <lua_gettop@LUA_5.3>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <luaL_newstate@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10f18 <luaL_newstate@LUA_5.3>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <socket@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10f20 <socket@GLIBC_2.2.5>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <luaL_openlibs@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10f28 <luaL_openlibs@LUA_5.3>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <__stack_chk_fail@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10f30 <__stack_chk_fail@GLIBC_2.4>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <strcmp@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10f38 <strcmp@GLIBC_2.2.5>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <send@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10f40 <send@GLIBC_2.2.5>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <getline@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10f48 <getline@GLIBC_2.2.5>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <strcpy@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10f50 <strcpy@GLIBC_2.2.5>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <strtok@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10f58 <strtok@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <lua_close@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10f60 <lua_close@LUA_5.3>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <sqlite3_errmsg@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10f68 <sqlite3_errmsg>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <fclose@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10f70 <fclose@GLIBC_2.2.5>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <strncpy@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10f78 <strncpy@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <strcspn@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10f80 <strcspn@GLIBC_2.2.5>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <bind@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10f88 <bind@GLIBC_2.2.5>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <pcap_loop@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10f90 <pcap_loop>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <htonl@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 4d e7 00 00 	bnd jmp QWORD PTR [rip+0xe74d]        # 10f98 <htonl@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <perror@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 45 e7 00 00 	bnd jmp QWORD PTR [rip+0xe745]        # 10fa0 <perror@GLIBC_2.2.5>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <fprintf@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 3d e7 00 00 	bnd jmp QWORD PTR [rip+0xe73d]        # 10fa8 <fprintf@GLIBC_2.2.5>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <localtime@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 35 e7 00 00 	bnd jmp QWORD PTR [rip+0xe735]        # 10fb0 <localtime@GLIBC_2.2.5>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <getdelim@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 2d e7 00 00 	bnd jmp QWORD PTR [rip+0xe72d]        # 10fb8 <getdelim@GLIBC_2.2.5>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <accept@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 25 e7 00 00 	bnd jmp QWORD PTR [rip+0xe725]        # 10fc0 <accept@GLIBC_2.2.5>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028a0 <sqlite3_open@plt>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	f2 ff 25 1d e7 00 00 	bnd jmp QWORD PTR [rip+0xe71d]        # 10fc8 <sqlite3_open>
    28ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028b0 <time@plt>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	f2 ff 25 15 e7 00 00 	bnd jmp QWORD PTR [rip+0xe715]        # 10fd0 <time@GLIBC_2.2.5>
    28bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000028c0 <_start>:
    28c0:	f3 0f 1e fa          	endbr64 
    28c4:	31 ed                	xor    ebp,ebp
    28c6:	49 89 d1             	mov    r9,rdx
    28c9:	5e                   	pop    rsi
    28ca:	48 89 e2             	mov    rdx,rsp
    28cd:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    28d1:	50                   	push   rax
    28d2:	54                   	push   rsp
    28d3:	45 31 c0             	xor    r8d,r8d
    28d6:	31 c9                	xor    ecx,ecx
    28d8:	48 8d 3d 74 40 00 00 	lea    rdi,[rip+0x4074]        # 6953 <main>
    28df:	ff 15 13 e7 00 00    	call   QWORD PTR [rip+0xe713]        # 10ff8 <__libc_start_main@GLIBC_2.34>
    28e5:	f4                   	hlt    
    28e6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    28ed:	00 00 00 

00000000000028f0 <deregister_tm_clones>:
    28f0:	48 8d 3d 51 e7 00 00 	lea    rdi,[rip+0xe751]        # 11048 <__TMC_END__>
    28f7:	48 8d 05 4a e7 00 00 	lea    rax,[rip+0xe74a]        # 11048 <__TMC_END__>
    28fe:	48 39 f8             	cmp    rax,rdi
    2901:	74 15                	je     2918 <deregister_tm_clones+0x28>
    2903:	48 8b 05 d6 e6 00 00 	mov    rax,QWORD PTR [rip+0xe6d6]        # 10fe0 <_ITM_deregisterTMCloneTable>
    290a:	48 85 c0             	test   rax,rax
    290d:	74 09                	je     2918 <deregister_tm_clones+0x28>
    290f:	ff e0                	jmp    rax
    2911:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2918:	c3                   	ret    
    2919:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002920 <register_tm_clones>:
    2920:	48 8d 3d 21 e7 00 00 	lea    rdi,[rip+0xe721]        # 11048 <__TMC_END__>
    2927:	48 8d 35 1a e7 00 00 	lea    rsi,[rip+0xe71a]        # 11048 <__TMC_END__>
    292e:	48 29 fe             	sub    rsi,rdi
    2931:	48 89 f0             	mov    rax,rsi
    2934:	48 c1 ee 3f          	shr    rsi,0x3f
    2938:	48 c1 f8 03          	sar    rax,0x3
    293c:	48 01 c6             	add    rsi,rax
    293f:	48 d1 fe             	sar    rsi,1
    2942:	74 14                	je     2958 <register_tm_clones+0x38>
    2944:	48 8b 05 9d e6 00 00 	mov    rax,QWORD PTR [rip+0xe69d]        # 10fe8 <_ITM_registerTMCloneTable>
    294b:	48 85 c0             	test   rax,rax
    294e:	74 08                	je     2958 <register_tm_clones+0x38>
    2950:	ff e0                	jmp    rax
    2952:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2958:	c3                   	ret    
    2959:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002960 <__do_global_dtors_aux>:
    2960:	f3 0f 1e fa          	endbr64 
    2964:	80 3d fd e6 00 00 00 	cmp    BYTE PTR [rip+0xe6fd],0x0        # 11068 <completed.0>
    296b:	75 2b                	jne    2998 <__do_global_dtors_aux+0x38>
    296d:	55                   	push   rbp
    296e:	48 83 3d 7a e6 00 00 	cmp    QWORD PTR [rip+0xe67a],0x0        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    2975:	00 
    2976:	48 89 e5             	mov    rbp,rsp
    2979:	74 0c                	je     2987 <__do_global_dtors_aux+0x27>
    297b:	48 8b 3d 86 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe686]        # 11008 <__dso_handle>
    2982:	e8 e9 fa ff ff       	call   2470 <__cxa_finalize@plt>
    2987:	e8 64 ff ff ff       	call   28f0 <deregister_tm_clones>
    298c:	c6 05 d5 e6 00 00 01 	mov    BYTE PTR [rip+0xe6d5],0x1        # 11068 <completed.0>
    2993:	5d                   	pop    rbp
    2994:	c3                   	ret    
    2995:	0f 1f 00             	nop    DWORD PTR [rax]
    2998:	c3                   	ret    
    2999:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029a0 <frame_dummy>:
    29a0:	f3 0f 1e fa          	endbr64 
    29a4:	e9 77 ff ff ff       	jmp    2920 <register_tm_clones>

00000000000029a9 <add_thread>:
    29a9:	f3 0f 1e fa          	endbr64 
    29ad:	55                   	push   rbp
    29ae:	48 89 e5             	mov    rbp,rsp
    29b1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    29b5:	8b 05 e5 e8 00 00    	mov    eax,DWORD PTR [rip+0xe8e5]        # 112a0 <thread_count>
    29bb:	8d 50 01             	lea    edx,[rax+0x1]
    29be:	89 15 dc e8 00 00    	mov    DWORD PTR [rip+0xe8dc],edx        # 112a0 <thread_count>
    29c4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    29c8:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    29cb:	48 98                	cdqe   
    29cd:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    29d4:	00 
    29d5:	48 8d 05 c4 e6 00 00 	lea    rax,[rip+0xe6c4]        # 110a0 <threads>
    29dc:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    29e0:	90                   	nop
    29e1:	5d                   	pop    rbp
    29e2:	c3                   	ret    

00000000000029e3 <pktmgr>:
    29e3:	f3 0f 1e fa          	endbr64 
    29e7:	55                   	push   rbp
    29e8:	48 89 e5             	mov    rbp,rsp
    29eb:	53                   	push   rbx
    29ec:	48 83 ec 38          	sub    rsp,0x38
    29f0:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    29f4:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    29f8:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    29fc:	b8 00 00 00 00       	mov    eax,0x0
    2a01:	e8 04 8f 00 00       	call   b90a <pps_monitor>
    2a06:	0f b6 05 57 75 10 00 	movzx  eax,BYTE PTR [rip+0x107557]        # 109f64 <packet_print>
    2a0d:	84 c0                	test   al,al
    2a0f:	74 0c                	je     2a1d <pktmgr+0x3a>
    2a11:	48 8d 3d 38 96 00 00 	lea    rdi,[rip+0x9638]        # c050 <_IO_stdin_used+0x50>
    2a18:	e8 e3 fa ff ff       	call   2500 <puts@plt>
    2a1d:	8b 05 81 e8 00 00    	mov    eax,DWORD PTR [rip+0xe881]        # 112a4 <total_pkt_captured>
    2a23:	83 c0 01             	add    eax,0x1
    2a26:	89 05 78 e8 00 00    	mov    DWORD PTR [rip+0xe878],eax        # 112a4 <total_pkt_captured>
    2a2c:	8b 05 8e e8 00 00    	mov    eax,DWORD PTR [rip+0xe88e]        # 112c0 <pkt_counter>
    2a32:	83 c0 01             	add    eax,0x1
    2a35:	89 05 85 e8 00 00    	mov    DWORD PTR [rip+0xe885],eax        # 112c0 <pkt_counter>
    2a3b:	8b 15 7f e8 00 00    	mov    edx,DWORD PTR [rip+0xe87f]        # 112c0 <pkt_counter>
    2a41:	8b 05 19 75 10 00    	mov    eax,DWORD PTR [rip+0x107519]        # 109f60 <clean_delay_pkts>
    2a47:	39 c2                	cmp    edx,eax
    2a49:	72 0a                	jb     2a55 <pktmgr+0x72>
    2a4b:	c7 05 6b e8 00 00 00 	mov    DWORD PTR [rip+0xe86b],0x0        # 112c0 <pkt_counter>
    2a52:	00 00 00 
    2a55:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a59:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2a5d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2a61:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2a65:	0f b7 c0             	movzx  eax,ax
    2a68:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a6d:	74 46                	je     2ab5 <pktmgr+0xd2>
    2a6f:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2a74:	7f 77                	jg     2aed <pktmgr+0x10a>
    2a76:	3d 80 35 00 00       	cmp    eax,0x3580
    2a7b:	74 23                	je     2aa0 <pktmgr+0xbd>
    2a7d:	3d 80 35 00 00       	cmp    eax,0x3580
    2a82:	7f 69                	jg     2aed <pktmgr+0x10a>
    2a84:	3d 08 06 00 00       	cmp    eax,0x608
    2a89:	74 15                	je     2aa0 <pktmgr+0xbd>
    2a8b:	3d 08 06 00 00       	cmp    eax,0x608
    2a90:	7f 5b                	jg     2aed <pktmgr+0x10a>
    2a92:	83 f8 08             	cmp    eax,0x8
    2a95:	74 33                	je     2aca <pktmgr+0xe7>
    2a97:	3d 90 00 00 00       	cmp    eax,0x90
    2a9c:	74 41                	je     2adf <pktmgr+0xfc>
    2a9e:	eb 4d                	jmp    2aed <pktmgr+0x10a>
    2aa0:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2aa4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2aa8:	48 89 d6             	mov    rsi,rdx
    2aab:	48 89 c7             	mov    rdi,rax
    2aae:	e8 86 00 00 00       	call   2b39 <arpdecode>
    2ab3:	eb 7d                	jmp    2b32 <pktmgr+0x14f>
    2ab5:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2ab9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2abd:	48 89 d6             	mov    rsi,rdx
    2ac0:	48 89 c7             	mov    rdi,rax
    2ac3:	e8 d5 87 00 00       	call   b29d <ip6decode>
    2ac8:	eb 68                	jmp    2b32 <pktmgr+0x14f>
    2aca:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2ace:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2ad2:	48 89 d6             	mov    rsi,rdx
    2ad5:	48 89 c7             	mov    rdi,rax
    2ad8:	e8 56 0b 00 00       	call   3633 <ipv4pktmgr>
    2add:	eb 53                	jmp    2b32 <pktmgr+0x14f>
    2adf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2ae3:	48 89 c7             	mov    rdi,rax
    2ae6:	e8 42 03 00 00       	call   2e2d <loopback_ctp_decode>
    2aeb:	eb 45                	jmp    2b32 <pktmgr+0x14f>
    2aed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2af1:	48 89 c7             	mov    rdi,rax
    2af4:	e8 f5 04 00 00       	call   2fee <uc_mac_ntoa>
    2af9:	48 89 c3             	mov    rbx,rax
    2afc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b00:	48 83 c0 06          	add    rax,0x6
    2b04:	48 89 c7             	mov    rdi,rax
    2b07:	e8 e2 04 00 00       	call   2fee <uc_mac_ntoa>
    2b0c:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2b12:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2b18:	48 89 d9             	mov    rcx,rbx
    2b1b:	48 89 c2             	mov    rdx,rax
    2b1e:	48 8d 35 73 95 00 00 	lea    rsi,[rip+0x9573]        # c098 <_IO_stdin_used+0x98>
    2b25:	48 8d 3d 9e 95 00 00 	lea    rdi,[rip+0x959e]        # c0ca <_IO_stdin_used+0xca>
    2b2c:	e8 f0 67 00 00       	call   9321 <lfprintf>
    2b31:	90                   	nop
    2b32:	90                   	nop
    2b33:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2b37:	c9                   	leave  
    2b38:	c3                   	ret    

0000000000002b39 <arpdecode>:
    2b39:	f3 0f 1e fa          	endbr64 
    2b3d:	55                   	push   rbp
    2b3e:	48 89 e5             	mov    rbp,rsp
    2b41:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2b48:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2b4f:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2b56:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2b5d:	00 00 
    2b5f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2b63:	31 c0                	xor    eax,eax
    2b65:	0f b6 05 f8 73 10 00 	movzx  eax,BYTE PTR [rip+0x1073f8]        # 109f64 <packet_print>
    2b6c:	84 c0                	test   al,al
    2b6e:	74 18                	je     2b88 <arpdecode+0x4f>
    2b70:	48 8d 35 71 95 00 00 	lea    rsi,[rip+0x9571]        # c0e8 <_IO_stdin_used+0xe8>
    2b77:	48 8d 3d 72 95 00 00 	lea    rdi,[rip+0x9572]        # c0f0 <_IO_stdin_used+0xf0>
    2b7e:	b8 00 00 00 00       	mov    eax,0x0
    2b83:	e8 18 f9 ff ff       	call   24a0 <printf@plt>
    2b88:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2b8f:	48 83 c0 0e          	add    rax,0xe
    2b93:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2b9a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2ba1:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2ba5:	0f b7 c0             	movzx  eax,ax
    2ba8:	3d 00 18 00 00       	cmp    eax,0x1800
    2bad:	74 35                	je     2be4 <arpdecode+0xab>
    2baf:	3d 00 18 00 00       	cmp    eax,0x1800
    2bb4:	0f 8f 1d 02 00 00    	jg     2dd7 <arpdecode+0x29e>
    2bba:	3d 00 02 00 00       	cmp    eax,0x200
    2bbf:	0f 84 eb 00 00 00    	je     2cb0 <arpdecode+0x177>
    2bc5:	3d 00 02 00 00       	cmp    eax,0x200
    2bca:	0f 8f 07 02 00 00    	jg     2dd7 <arpdecode+0x29e>
    2bd0:	83 f8 02             	cmp    eax,0x2
    2bd3:	0f 84 d7 00 00 00    	je     2cb0 <arpdecode+0x177>
    2bd9:	3d 00 01 00 00       	cmp    eax,0x100
    2bde:	0f 85 f3 01 00 00    	jne    2dd7 <arpdecode+0x29e>
    2be4:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2beb:	48 83 c0 18          	add    rax,0x18
    2bef:	48 89 c7             	mov    rdi,rax
    2bf2:	e8 9d 04 00 00       	call   3094 <u8_ipv4_ntoa>
    2bf7:	48 89 c1             	mov    rcx,rax
    2bfa:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2bfe:	ba 20 00 00 00       	mov    edx,0x20
    2c03:	48 89 ce             	mov    rsi,rcx
    2c06:	48 89 c7             	mov    rdi,rax
    2c09:	e8 f2 fb ff ff       	call   2800 <strncpy@plt>
    2c0e:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c15:	48 83 c0 0e          	add    rax,0xe
    2c19:	48 89 c7             	mov    rdi,rax
    2c1c:	e8 73 04 00 00       	call   3094 <u8_ipv4_ntoa>
    2c21:	48 89 c1             	mov    rcx,rax
    2c24:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c28:	ba 20 00 00 00       	mov    edx,0x20
    2c2d:	48 89 ce             	mov    rsi,rcx
    2c30:	48 89 c7             	mov    rdi,rax
    2c33:	e8 c8 fb ff ff       	call   2800 <strncpy@plt>
    2c38:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c3c:	ba 05 00 00 00       	mov    edx,0x5
    2c41:	48 8d 35 ab 94 00 00 	lea    rsi,[rip+0x94ab]        # c0f3 <_IO_stdin_used+0xf3>
    2c48:	48 89 c7             	mov    rdi,rax
    2c4b:	e8 20 f9 ff ff       	call   2570 <strncmp@plt>
    2c50:	85 c0                	test   eax,eax
    2c52:	75 2c                	jne    2c80 <arpdecode+0x147>
    2c54:	0f b6 05 09 73 10 00 	movzx  eax,BYTE PTR [rip+0x107309]        # 109f64 <packet_print>
    2c5b:	84 c0                	test   al,al
    2c5d:	0f 84 97 01 00 00    	je     2dfa <arpdecode+0x2c1>
    2c63:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c67:	48 89 c6             	mov    rsi,rax
    2c6a:	48 8d 3d 8f 94 00 00 	lea    rdi,[rip+0x948f]        # c100 <_IO_stdin_used+0x100>
    2c71:	b8 00 00 00 00       	mov    eax,0x0
    2c76:	e8 25 f8 ff ff       	call   24a0 <printf@plt>
    2c7b:	e9 7a 01 00 00       	jmp    2dfa <arpdecode+0x2c1>
    2c80:	0f b6 05 dd 72 10 00 	movzx  eax,BYTE PTR [rip+0x1072dd]        # 109f64 <packet_print>
    2c87:	84 c0                	test   al,al
    2c89:	0f 84 6b 01 00 00    	je     2dfa <arpdecode+0x2c1>
    2c8f:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2c93:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c97:	48 89 c6             	mov    rsi,rax
    2c9a:	48 8d 3d 7f 94 00 00 	lea    rdi,[rip+0x947f]        # c120 <_IO_stdin_used+0x120>
    2ca1:	b8 00 00 00 00       	mov    eax,0x0
    2ca6:	e8 f5 f7 ff ff       	call   24a0 <printf@plt>
    2cab:	e9 4a 01 00 00       	jmp    2dfa <arpdecode+0x2c1>
    2cb0:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2cb7:	48 83 c0 08          	add    rax,0x8
    2cbb:	48 89 c7             	mov    rdi,rax
    2cbe:	e8 7d 02 00 00       	call   2f40 <mac_ntoa>
    2cc3:	48 89 c1             	mov    rcx,rax
    2cc6:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2cca:	ba 40 00 00 00       	mov    edx,0x40
    2ccf:	48 89 ce             	mov    rsi,rcx
    2cd2:	48 89 c7             	mov    rdi,rax
    2cd5:	e8 26 fb ff ff       	call   2800 <strncpy@plt>
    2cda:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2ce1:	48 83 c0 0e          	add    rax,0xe
    2ce5:	48 89 c7             	mov    rdi,rax
    2ce8:	e8 a7 03 00 00       	call   3094 <u8_ipv4_ntoa>
    2ced:	48 89 c1             	mov    rcx,rax
    2cf0:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cf4:	ba 20 00 00 00       	mov    edx,0x20
    2cf9:	48 89 ce             	mov    rsi,rcx
    2cfc:	48 89 c7             	mov    rdi,rax
    2cff:	e8 fc fa ff ff       	call   2800 <strncpy@plt>
    2d04:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d08:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d0c:	48 89 d6             	mov    rsi,rdx
    2d0f:	48 89 c7             	mov    rdi,rax
    2d12:	e8 4d 50 00 00       	call   7d64 <entry_exists>
    2d17:	83 f8 ff             	cmp    eax,0xffffffff
    2d1a:	74 15                	je     2d31 <arpdecode+0x1f8>
    2d1c:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d20:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d24:	48 89 d6             	mov    rsi,rdx
    2d27:	48 89 c7             	mov    rdi,rax
    2d2a:	e8 e2 4e 00 00       	call   7c11 <compare_entries>
    2d2f:	eb 7d                	jmp    2dae <arpdecode+0x275>
    2d31:	0f b6 05 e9 71 10 00 	movzx  eax,BYTE PTR [rip+0x1071e9]        # 109f21 <use_sqlite>
    2d38:	84 c0                	test   al,al
    2d3a:	74 5f                	je     2d9b <arpdecode+0x262>
    2d3c:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2d43:	00 00 00 
    2d46:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2d4a:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2d51:	48 89 d6             	mov    rsi,rdx
    2d54:	48 89 c7             	mov    rdi,rax
    2d57:	e8 54 fa ff ff       	call   27b0 <strcpy@plt>
    2d5c:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d60:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d67:	48 83 c2 10          	add    rdx,0x10
    2d6b:	48 89 c6             	mov    rsi,rax
    2d6e:	48 89 d7             	mov    rdi,rdx
    2d71:	e8 3a fa ff ff       	call   27b0 <strcpy@plt>
    2d76:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2d7d:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2d84:	48 89 d1             	mov    rcx,rdx
    2d87:	48 8d 15 e3 54 00 00 	lea    rdx,[rip+0x54e3]        # 8271 <update_db>
    2d8e:	be 00 00 00 00       	mov    esi,0x0
    2d93:	48 89 c7             	mov    rdi,rax
    2d96:	e8 55 f8 ff ff       	call   25f0 <pthread_create@plt>
    2d9b:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d9f:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2da3:	48 89 d6             	mov    rsi,rdx
    2da6:	48 89 c7             	mov    rdi,rax
    2da9:	e8 42 4f 00 00       	call   7cf0 <add_entry>
    2dae:	0f b6 05 af 71 10 00 	movzx  eax,BYTE PTR [rip+0x1071af]        # 109f64 <packet_print>
    2db5:	84 c0                	test   al,al
    2db7:	74 44                	je     2dfd <arpdecode+0x2c4>
    2db9:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2dbd:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2dc1:	48 89 c6             	mov    rsi,rax
    2dc4:	48 8d 3d 7d 93 00 00 	lea    rdi,[rip+0x937d]        # c148 <_IO_stdin_used+0x148>
    2dcb:	b8 00 00 00 00       	mov    eax,0x0
    2dd0:	e8 cb f6 ff ff       	call   24a0 <printf@plt>
    2dd5:	eb 26                	jmp    2dfd <arpdecode+0x2c4>
    2dd7:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2dde:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2de2:	0f b7 c0             	movzx  eax,ax
    2de5:	89 c6                	mov    esi,eax
    2de7:	48 8d 3d 79 93 00 00 	lea    rdi,[rip+0x9379]        # c167 <_IO_stdin_used+0x167>
    2dee:	b8 00 00 00 00       	mov    eax,0x0
    2df3:	e8 a8 f6 ff ff       	call   24a0 <printf@plt>
    2df8:	eb 04                	jmp    2dfe <arpdecode+0x2c5>
    2dfa:	90                   	nop
    2dfb:	eb 01                	jmp    2dfe <arpdecode+0x2c5>
    2dfd:	90                   	nop
    2dfe:	48 8d 35 7a 93 00 00 	lea    rsi,[rip+0x937a]        # c17f <_IO_stdin_used+0x17f>
    2e05:	48 8d 3d e4 92 00 00 	lea    rdi,[rip+0x92e4]        # c0f0 <_IO_stdin_used+0xf0>
    2e0c:	b8 00 00 00 00       	mov    eax,0x0
    2e11:	e8 8a f6 ff ff       	call   24a0 <printf@plt>
    2e16:	90                   	nop
    2e17:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e1b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2e22:	00 00 
    2e24:	74 05                	je     2e2b <arpdecode+0x2f2>
    2e26:	e8 45 f9 ff ff       	call   2770 <__stack_chk_fail@plt>
    2e2b:	c9                   	leave  
    2e2c:	c3                   	ret    

0000000000002e2d <loopback_ctp_decode>:
    2e2d:	f3 0f 1e fa          	endbr64 
    2e31:	55                   	push   rbp
    2e32:	48 89 e5             	mov    rbp,rsp
    2e35:	48 83 ec 60          	sub    rsp,0x60
    2e39:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2e3d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2e44:	00 00 
    2e46:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2e4a:	31 c0                	xor    eax,eax
    2e4c:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e50:	48 83 c0 0e          	add    rax,0xe
    2e54:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2e58:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e5c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2e60:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e64:	48 83 c0 06          	add    rax,0x6
    2e68:	48 89 c7             	mov    rdi,rax
    2e6b:	e8 7e 01 00 00       	call   2fee <uc_mac_ntoa>
    2e70:	48 89 c1             	mov    rcx,rax
    2e73:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2e77:	ba 18 00 00 00       	mov    edx,0x18
    2e7c:	48 89 ce             	mov    rsi,rcx
    2e7f:	48 89 c7             	mov    rdi,rax
    2e82:	e8 79 f9 ff ff       	call   2800 <strncpy@plt>
    2e87:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2e8b:	48 89 c7             	mov    rdi,rax
    2e8e:	e8 5b 01 00 00       	call   2fee <uc_mac_ntoa>
    2e93:	48 89 c1             	mov    rcx,rax
    2e96:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2e9a:	ba 18 00 00 00       	mov    edx,0x18
    2e9f:	48 89 ce             	mov    rsi,rcx
    2ea2:	48 89 c7             	mov    rdi,rax
    2ea5:	e8 56 f9 ff ff       	call   2800 <strncpy@plt>
    2eaa:	0f b6 05 b3 70 10 00 	movzx  eax,BYTE PTR [rip+0x1070b3]        # 109f64 <packet_print>
    2eb1:	84 c0                	test   al,al
    2eb3:	74 1c                	je     2ed1 <loopback_ctp_decode+0xa4>
    2eb5:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2eb9:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2ebd:	48 89 c6             	mov    rsi,rax
    2ec0:	48 8d 3d bd 92 00 00 	lea    rdi,[rip+0x92bd]        # c184 <_IO_stdin_used+0x184>
    2ec7:	b8 00 00 00 00       	mov    eax,0x0
    2ecc:	e8 cf f5 ff ff       	call   24a0 <printf@plt>
    2ed1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2ed5:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2ed9:	0f b7 c0             	movzx  eax,ax
    2edc:	83 f8 01             	cmp    eax,0x1
    2edf:	75 19                	jne    2efa <loopback_ctp_decode+0xcd>
    2ee1:	0f b6 05 7c 70 10 00 	movzx  eax,BYTE PTR [rip+0x10707c]        # 109f64 <packet_print>
    2ee8:	84 c0                	test   al,al
    2eea:	74 39                	je     2f25 <loopback_ctp_decode+0xf8>
    2eec:	48 8d 3d 9f 92 00 00 	lea    rdi,[rip+0x929f]        # c192 <_IO_stdin_used+0x192>
    2ef3:	e8 08 f6 ff ff       	call   2500 <puts@plt>
    2ef8:	eb 2b                	jmp    2f25 <loopback_ctp_decode+0xf8>
    2efa:	0f b6 05 63 70 10 00 	movzx  eax,BYTE PTR [rip+0x107063]        # 109f64 <packet_print>
    2f01:	84 c0                	test   al,al
    2f03:	74 23                	je     2f28 <loopback_ctp_decode+0xfb>
    2f05:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f09:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f0d:	0f b7 c0             	movzx  eax,ax
    2f10:	89 c6                	mov    esi,eax
    2f12:	48 8d 3d 81 92 00 00 	lea    rdi,[rip+0x9281]        # c19a <_IO_stdin_used+0x19a>
    2f19:	b8 00 00 00 00       	mov    eax,0x0
    2f1e:	e8 7d f5 ff ff       	call   24a0 <printf@plt>
    2f23:	eb 03                	jmp    2f28 <loopback_ctp_decode+0xfb>
    2f25:	90                   	nop
    2f26:	eb 01                	jmp    2f29 <loopback_ctp_decode+0xfc>
    2f28:	90                   	nop
    2f29:	90                   	nop
    2f2a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f2e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2f35:	00 00 
    2f37:	74 05                	je     2f3e <loopback_ctp_decode+0x111>
    2f39:	e8 32 f8 ff ff       	call   2770 <__stack_chk_fail@plt>
    2f3e:	c9                   	leave  
    2f3f:	c3                   	ret    

0000000000002f40 <mac_ntoa>:
    2f40:	f3 0f 1e fa          	endbr64 
    2f44:	55                   	push   rbp
    2f45:	48 89 e5             	mov    rbp,rsp
    2f48:	48 83 ec 20          	sub    rsp,0x20
    2f4c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2f50:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2f54:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2f58:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f5c:	48 83 c0 05          	add    rax,0x5
    2f60:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f63:	0f b6 f0             	movzx  esi,al
    2f66:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f6a:	48 83 c0 04          	add    rax,0x4
    2f6e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f71:	0f b6 c8             	movzx  ecx,al
    2f74:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f78:	48 83 c0 03          	add    rax,0x3
    2f7c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f7f:	0f b6 d0             	movzx  edx,al
    2f82:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f86:	48 83 c0 02          	add    rax,0x2
    2f8a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f8d:	44 0f b6 c8          	movzx  r9d,al
    2f91:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f95:	48 83 c0 01          	add    rax,0x1
    2f99:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2f9c:	44 0f b6 c0          	movzx  r8d,al
    2fa0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fa4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fa7:	0f b6 c0             	movzx  eax,al
    2faa:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2fb1:	00 00 
    2fb3:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    2fba:	48 83 ec 08          	sub    rsp,0x8
    2fbe:	56                   	push   rsi
    2fbf:	51                   	push   rcx
    2fc0:	52                   	push   rdx
    2fc1:	89 c1                	mov    ecx,eax
    2fc3:	48 8d 15 ee 91 00 00 	lea    rdx,[rip+0x91ee]        # c1b8 <_IO_stdin_used+0x1b8>
    2fca:	be 80 00 00 00       	mov    esi,0x80
    2fcf:	b8 00 00 00 00       	mov    eax,0x0
    2fd4:	e8 e7 f4 ff ff       	call   24c0 <snprintf@plt>
    2fd9:	48 83 c4 20          	add    rsp,0x20
    2fdd:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    2fe4:	00 00 
    2fe6:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    2fec:	c9                   	leave  
    2fed:	c3                   	ret    

0000000000002fee <uc_mac_ntoa>:
    2fee:	f3 0f 1e fa          	endbr64 
    2ff2:	55                   	push   rbp
    2ff3:	48 89 e5             	mov    rbp,rsp
    2ff6:	48 83 ec 10          	sub    rsp,0x10
    2ffa:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2ffe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3002:	48 83 c0 05          	add    rax,0x5
    3006:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3009:	0f b6 f0             	movzx  esi,al
    300c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3010:	48 83 c0 04          	add    rax,0x4
    3014:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3017:	0f b6 c8             	movzx  ecx,al
    301a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    301e:	48 83 c0 03          	add    rax,0x3
    3022:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3025:	0f b6 d0             	movzx  edx,al
    3028:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    302c:	48 83 c0 02          	add    rax,0x2
    3030:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3033:	44 0f b6 c8          	movzx  r9d,al
    3037:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    303b:	48 83 c0 01          	add    rax,0x1
    303f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3042:	44 0f b6 c0          	movzx  r8d,al
    3046:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    304a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    304d:	0f b6 c0             	movzx  eax,al
    3050:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    3057:	00 00 
    3059:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    3060:	48 83 ec 08          	sub    rsp,0x8
    3064:	56                   	push   rsi
    3065:	51                   	push   rcx
    3066:	52                   	push   rdx
    3067:	89 c1                	mov    ecx,eax
    3069:	48 8d 15 48 91 00 00 	lea    rdx,[rip+0x9148]        # c1b8 <_IO_stdin_used+0x1b8>
    3070:	be 80 00 00 00       	mov    esi,0x80
    3075:	b8 00 00 00 00       	mov    eax,0x0
    307a:	e8 41 f4 ff ff       	call   24c0 <snprintf@plt>
    307f:	48 83 c4 20          	add    rsp,0x20
    3083:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    308a:	00 00 
    308c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3092:	c9                   	leave  
    3093:	c3                   	ret    

0000000000003094 <u8_ipv4_ntoa>:
    3094:	f3 0f 1e fa          	endbr64 
    3098:	55                   	push   rbp
    3099:	48 89 e5             	mov    rbp,rsp
    309c:	48 83 ec 20          	sub    rsp,0x20
    30a0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    30a4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    30a8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    30ac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30b0:	48 83 c0 03          	add    rax,0x3
    30b4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30b7:	0f b6 d0             	movzx  edx,al
    30ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30be:	48 83 c0 02          	add    rax,0x2
    30c2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30c5:	44 0f b6 c0          	movzx  r8d,al
    30c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30cd:	48 83 c0 01          	add    rax,0x1
    30d1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30d4:	0f b6 f0             	movzx  esi,al
    30d7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30db:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30de:	0f b6 c0             	movzx  eax,al
    30e1:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    30e8:	00 00 
    30ea:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    30f1:	48 83 ec 08          	sub    rsp,0x8
    30f5:	52                   	push   rdx
    30f6:	45 89 c1             	mov    r9d,r8d
    30f9:	41 89 f0             	mov    r8d,esi
    30fc:	89 c1                	mov    ecx,eax
    30fe:	48 8d 15 d1 90 00 00 	lea    rdx,[rip+0x90d1]        # c1d6 <_IO_stdin_used+0x1d6>
    3105:	be 80 00 00 00       	mov    esi,0x80
    310a:	b8 00 00 00 00       	mov    eax,0x0
    310f:	e8 ac f3 ff ff       	call   24c0 <snprintf@plt>
    3114:	48 83 c4 10          	add    rsp,0x10
    3118:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    311f:	00 00 
    3121:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3127:	c9                   	leave  
    3128:	c3                   	ret    

0000000000003129 <ipv4_ntoa>:
    3129:	f3 0f 1e fa          	endbr64 
    312d:	55                   	push   rbp
    312e:	48 89 e5             	mov    rbp,rsp
    3131:	48 83 ec 20          	sub    rsp,0x20
    3135:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    3138:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    313c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3140:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3144:	48 83 c0 03          	add    rax,0x3
    3148:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    314b:	0f b6 d0             	movzx  edx,al
    314e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3152:	48 83 c0 02          	add    rax,0x2
    3156:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3159:	44 0f b6 c0          	movzx  r8d,al
    315d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3161:	48 83 c0 01          	add    rax,0x1
    3165:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3168:	0f b6 f0             	movzx  esi,al
    316b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    316f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3172:	0f b6 c0             	movzx  eax,al
    3175:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    317c:	00 00 
    317e:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    3185:	48 83 ec 08          	sub    rsp,0x8
    3189:	52                   	push   rdx
    318a:	45 89 c1             	mov    r9d,r8d
    318d:	41 89 f0             	mov    r8d,esi
    3190:	89 c1                	mov    ecx,eax
    3192:	48 8d 15 3d 90 00 00 	lea    rdx,[rip+0x903d]        # c1d6 <_IO_stdin_used+0x1d6>
    3199:	be 80 00 00 00       	mov    esi,0x80
    319e:	b8 00 00 00 00       	mov    eax,0x0
    31a3:	e8 18 f3 ff ff       	call   24c0 <snprintf@plt>
    31a8:	48 83 c4 10          	add    rsp,0x10
    31ac:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    31b3:	00 00 
    31b5:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    31bb:	c9                   	leave  
    31bc:	c3                   	ret    

00000000000031bd <inet6_ntoa>:
    31bd:	f3 0f 1e fa          	endbr64 
    31c1:	55                   	push   rbp
    31c2:	48 89 e5             	mov    rbp,rsp
    31c5:	41 57                	push   r15
    31c7:	41 56                	push   r14
    31c9:	41 55                	push   r13
    31cb:	41 54                	push   r12
    31cd:	53                   	push   rbx
    31ce:	48 83 ec 38          	sub    rsp,0x38
    31d2:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    31d6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    31dd:	00 00 
    31df:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    31e3:	31 c0                	xor    eax,eax
    31e5:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    31ec:	00 00 
    31ee:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    31f4:	ba 80 00 00 00       	mov    edx,0x80
    31f9:	be 00 00 00 00       	mov    esi,0x0
    31fe:	48 89 c7             	mov    rdi,rax
    3201:	e8 aa f2 ff ff       	call   24b0 <memset@plt>
    3206:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    320d:	00 
    320e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3212:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    3216:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    321a:	48 83 c0 0f          	add    rax,0xf
    321e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3221:	0f b6 c8             	movzx  ecx,al
    3224:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3228:	48 83 c0 0e          	add    rax,0xe
    322c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    322f:	0f b6 f8             	movzx  edi,al
    3232:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3236:	48 83 c0 0d          	add    rax,0xd
    323a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    323d:	0f b6 c0             	movzx  eax,al
    3240:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    3243:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3247:	48 83 c0 0c          	add    rax,0xc
    324b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    324e:	0f b6 d8             	movzx  ebx,al
    3251:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    3254:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3258:	48 83 c0 0b          	add    rax,0xb
    325c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    325f:	44 0f b6 f8          	movzx  r15d,al
    3263:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3267:	48 83 c0 0a          	add    rax,0xa
    326b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    326e:	44 0f b6 f0          	movzx  r14d,al
    3272:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3276:	48 83 c0 09          	add    rax,0x9
    327a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    327d:	44 0f b6 e8          	movzx  r13d,al
    3281:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3285:	48 83 c0 08          	add    rax,0x8
    3289:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    328c:	44 0f b6 e0          	movzx  r12d,al
    3290:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3294:	48 83 c0 07          	add    rax,0x7
    3298:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    329b:	0f b6 d8             	movzx  ebx,al
    329e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32a2:	48 83 c0 06          	add    rax,0x6
    32a6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32a9:	44 0f b6 d8          	movzx  r11d,al
    32ad:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32b1:	48 83 c0 05          	add    rax,0x5
    32b5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32b8:	44 0f b6 d0          	movzx  r10d,al
    32bc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32c0:	48 83 c0 04          	add    rax,0x4
    32c4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32c7:	44 0f b6 c8          	movzx  r9d,al
    32cb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32cf:	48 83 c0 03          	add    rax,0x3
    32d3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32d6:	44 0f b6 c0          	movzx  r8d,al
    32da:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32de:	48 83 c0 02          	add    rax,0x2
    32e2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32e5:	0f b6 d0             	movzx  edx,al
    32e8:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    32eb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32ef:	48 83 c0 01          	add    rax,0x1
    32f3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32f6:	0f b6 f0             	movzx  esi,al
    32f9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32fd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3300:	0f b6 d0             	movzx  edx,al
    3303:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    330a:	00 00 
    330c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3312:	48 83 ec 08          	sub    rsp,0x8
    3316:	51                   	push   rcx
    3317:	57                   	push   rdi
    3318:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    331b:	51                   	push   rcx
    331c:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    331f:	51                   	push   rcx
    3320:	41 57                	push   r15
    3322:	41 56                	push   r14
    3324:	41 55                	push   r13
    3326:	41 54                	push   r12
    3328:	53                   	push   rbx
    3329:	41 53                	push   r11
    332b:	41 52                	push   r10
    332d:	41 51                	push   r9
    332f:	41 50                	push   r8
    3331:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    3335:	41 89 f0             	mov    r8d,esi
    3338:	89 d1                	mov    ecx,edx
    333a:	48 8d 15 a7 8e 00 00 	lea    rdx,[rip+0x8ea7]        # c1e8 <_IO_stdin_used+0x1e8>
    3341:	be 80 00 00 00       	mov    esi,0x80
    3346:	48 89 c7             	mov    rdi,rax
    3349:	b8 00 00 00 00       	mov    eax,0x0
    334e:	e8 6d f1 ff ff       	call   24c0 <snprintf@plt>
    3353:	48 83 c4 70          	add    rsp,0x70
    3357:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    335e:	00 00 
    3360:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3366:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    336a:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    3371:	00 00 
    3373:	74 05                	je     337a <inet6_ntoa+0x1bd>
    3375:	e8 f6 f3 ff ff       	call   2770 <__stack_chk_fail@plt>
    337a:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    337e:	5b                   	pop    rbx
    337f:	41 5c                	pop    r12
    3381:	41 5d                	pop    r13
    3383:	41 5e                	pop    r14
    3385:	41 5f                	pop    r15
    3387:	5d                   	pop    rbp
    3388:	c3                   	ret    

0000000000003389 <get_formated_time>:
    3389:	f3 0f 1e fa          	endbr64 
    338d:	55                   	push   rbp
    338e:	48 89 e5             	mov    rbp,rsp
    3391:	53                   	push   rbx
    3392:	48 83 ec 58          	sub    rsp,0x58
    3396:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    339d:	00 00 
    339f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    33a3:	31 c0                	xor    eax,eax
    33a5:	bf ff 00 00 00       	mov    edi,0xff
    33aa:	e8 d1 f1 ff ff       	call   2580 <malloc@plt>
    33af:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    33b3:	bf 00 00 00 00       	mov    edi,0x0
    33b8:	e8 f3 f4 ff ff       	call   28b0 <time@plt>
    33bd:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    33c1:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    33c5:	48 89 c7             	mov    rdi,rax
    33c8:	e8 a3 f4 ff ff       	call   2870 <localtime@plt>
    33cd:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    33d0:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    33d4:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    33d8:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    33dc:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    33e0:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    33e4:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    33e8:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    33ec:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    33f0:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    33f4:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    33f8:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    33fc:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3400:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3404:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3407:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    340a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    340e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3412:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3415:	8d 48 01             	lea    ecx,[rax+0x1]
    3418:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    341b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3421:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3425:	57                   	push   rdi
    3426:	56                   	push   rsi
    3427:	48 8d 35 02 8e 00 00 	lea    rsi,[rip+0x8e02]        # c230 <_IO_stdin_used+0x230>
    342e:	48 89 c7             	mov    rdi,rax
    3431:	b8 00 00 00 00       	mov    eax,0x0
    3436:	e8 05 f2 ff ff       	call   2640 <sprintf@plt>
    343b:	48 83 c4 10          	add    rsp,0x10
    343f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3443:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    3447:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    344e:	00 00 
    3450:	74 05                	je     3457 <get_formated_time+0xce>
    3452:	e8 19 f3 ff ff       	call   2770 <__stack_chk_fail@plt>
    3457:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    345b:	c9                   	leave  
    345c:	c3                   	ret    

000000000000345d <cb_get_formatted_time>:
    345d:	f3 0f 1e fa          	endbr64 
    3461:	55                   	push   rbp
    3462:	48 89 e5             	mov    rbp,rsp
    3465:	53                   	push   rbx
    3466:	48 83 ec 68          	sub    rsp,0x68
    346a:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    346e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3475:	00 00 
    3477:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    347b:	31 c0                	xor    eax,eax
    347d:	bf 00 00 00 00       	mov    edi,0x0
    3482:	e8 29 f4 ff ff       	call   28b0 <time@plt>
    3487:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    348b:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    348f:	48 89 c7             	mov    rdi,rax
    3492:	e8 d9 f3 ff ff       	call   2870 <localtime@plt>
    3497:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    349a:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    349e:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    34a2:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    34a6:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    34aa:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    34ae:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    34b2:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    34b6:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    34ba:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    34be:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    34c2:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    34c6:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    34ca:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    34ce:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    34d1:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    34d4:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    34d8:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    34dc:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    34df:	8d 48 01             	lea    ecx,[rax+0x1]
    34e2:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    34e5:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    34eb:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    34ef:	57                   	push   rdi
    34f0:	56                   	push   rsi
    34f1:	48 8d 35 38 8d 00 00 	lea    rsi,[rip+0x8d38]        # c230 <_IO_stdin_used+0x230>
    34f8:	48 89 c7             	mov    rdi,rax
    34fb:	b8 00 00 00 00       	mov    eax,0x0
    3500:	e8 3b f1 ff ff       	call   2640 <sprintf@plt>
    3505:	48 83 c4 10          	add    rsp,0x10
    3509:	90                   	nop
    350a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    350e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3515:	00 00 
    3517:	74 05                	je     351e <cb_get_formatted_time+0xc1>
    3519:	e8 52 f2 ff ff       	call   2770 <__stack_chk_fail@plt>
    351e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3522:	c9                   	leave  
    3523:	c3                   	ret    

0000000000003524 <strloc>:
    3524:	f3 0f 1e fa          	endbr64 
    3528:	55                   	push   rbp
    3529:	48 89 e5             	mov    rbp,rsp
    352c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    3530:	89 f0                	mov    eax,esi
    3532:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    3535:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    353c:	eb 1e                	jmp    355c <strloc+0x38>
    353e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3541:	48 63 d0             	movsxd rdx,eax
    3544:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3548:	48 01 d0             	add    rax,rdx
    354b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    354e:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    3551:	75 05                	jne    3558 <strloc+0x34>
    3553:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3556:	eb 1d                	jmp    3575 <strloc+0x51>
    3558:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    355c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    355f:	48 63 d0             	movsxd rdx,eax
    3562:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3566:	48 01 d0             	add    rax,rdx
    3569:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    356c:	84 c0                	test   al,al
    356e:	75 ce                	jne    353e <strloc+0x1a>
    3570:	b8 ff ff ff ff       	mov    eax,0xffffffff
    3575:	5d                   	pop    rbp
    3576:	c3                   	ret    

0000000000003577 <fail>:
    3577:	f3 0f 1e fa          	endbr64 
    357b:	55                   	push   rbp
    357c:	48 89 e5             	mov    rbp,rsp
    357f:	48 83 ec 10          	sub    rsp,0x10
    3583:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    3587:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    358b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    358f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3593:	48 89 c6             	mov    rsi,rax
    3596:	48 8d 3d af 8c 00 00 	lea    rdi,[rip+0x8caf]        # c24c <_IO_stdin_used+0x24c>
    359d:	b8 00 00 00 00       	mov    eax,0x0
    35a2:	e8 f9 ee ff ff       	call   24a0 <printf@plt>
    35a7:	90                   	nop
    35a8:	c9                   	leave  
    35a9:	c3                   	ret    

00000000000035aa <char_is_printable>:
    35aa:	f3 0f 1e fa          	endbr64 
    35ae:	55                   	push   rbp
    35af:	48 89 e5             	mov    rbp,rsp
    35b2:	89 f8                	mov    eax,edi
    35b4:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    35b7:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    35bb:	7f 07                	jg     35c4 <char_is_printable+0x1a>
    35bd:	b8 00 00 00 00       	mov    eax,0x0
    35c2:	eb 05                	jmp    35c9 <char_is_printable+0x1f>
    35c4:	b8 01 00 00 00       	mov    eax,0x1
    35c9:	5d                   	pop    rbp
    35ca:	c3                   	ret    

00000000000035cb <test_string_arr_print>:
    35cb:	f3 0f 1e fa          	endbr64 
    35cf:	55                   	push   rbp
    35d0:	48 89 e5             	mov    rbp,rsp
    35d3:	53                   	push   rbx
    35d4:	48 83 ec 28          	sub    rsp,0x28
    35d8:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    35dc:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    35e3:	eb 2c                	jmp    3611 <test_string_arr_print+0x46>
    35e5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    35e8:	48 63 d0             	movsxd rdx,eax
    35eb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    35ef:	48 01 d0             	add    rax,rdx
    35f2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35f5:	0f be c0             	movsx  eax,al
    35f8:	89 c7                	mov    edi,eax
    35fa:	e8 ab ff ff ff       	call   35aa <char_is_printable>
    35ff:	83 f0 01             	xor    eax,0x1
    3602:	84 c0                	test   al,al
    3604:	74 07                	je     360d <test_string_arr_print+0x42>
    3606:	b8 00 00 00 00       	mov    eax,0x0
    360b:	eb 20                	jmp    362d <test_string_arr_print+0x62>
    360d:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    3611:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    3614:	48 63 d8             	movsxd rbx,eax
    3617:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    361b:	48 89 c7             	mov    rdi,rax
    361e:	e8 fd ef ff ff       	call   2620 <strlen@plt>
    3623:	48 39 c3             	cmp    rbx,rax
    3626:	72 bd                	jb     35e5 <test_string_arr_print+0x1a>
    3628:	b8 01 00 00 00       	mov    eax,0x1
    362d:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3631:	c9                   	leave  
    3632:	c3                   	ret    

0000000000003633 <ipv4pktmgr>:
    3633:	f3 0f 1e fa          	endbr64 
    3637:	55                   	push   rbp
    3638:	48 89 e5             	mov    rbp,rsp
    363b:	48 81 ec e0 04 00 00 	sub    rsp,0x4e0
    3642:	48 89 bd 28 fb ff ff 	mov    QWORD PTR [rbp-0x4d8],rdi
    3649:	48 89 b5 20 fb ff ff 	mov    QWORD PTR [rbp-0x4e0],rsi
    3650:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3657:	00 00 
    3659:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    365d:	31 c0                	xor    eax,eax
    365f:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3666:	48 83 c0 0e          	add    rax,0xe
    366a:	48 89 85 48 fb ff ff 	mov    QWORD PTR [rbp-0x4b8],rax
    3671:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3678:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    367b:	89 c7                	mov    edi,eax
    367d:	e8 ee ef ff ff       	call   2670 <ntohl@plt>
    3682:	89 85 6c fb ff ff    	mov    DWORD PTR [rbp-0x494],eax
    3688:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    368f:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    3692:	89 c7                	mov    edi,eax
    3694:	e8 d7 ef ff ff       	call   2670 <ntohl@plt>
    3699:	89 85 68 fb ff ff    	mov    DWORD PTR [rbp-0x498],eax
    369f:	8b 95 68 fb ff ff    	mov    edx,DWORD PTR [rbp-0x498]
    36a5:	8b 05 1d 69 10 00    	mov    eax,DWORD PTR [rip+0x10691d]        # 109fc8 <homenetmask>
    36ab:	21 d0                	and    eax,edx
    36ad:	89 85 3c fb ff ff    	mov    DWORD PTR [rbp-0x4c4],eax
    36b3:	8b 95 6c fb ff ff    	mov    edx,DWORD PTR [rbp-0x494]
    36b9:	8b 05 09 69 10 00    	mov    eax,DWORD PTR [rip+0x106909]        # 109fc8 <homenetmask>
    36bf:	21 d0                	and    eax,edx
    36c1:	89 85 40 fb ff ff    	mov    DWORD PTR [rbp-0x4c0],eax
    36c7:	8b 05 f7 68 10 00    	mov    eax,DWORD PTR [rip+0x1068f7]        # 109fc4 <homenet>
    36cd:	39 85 3c fb ff ff    	cmp    DWORD PTR [rbp-0x4c4],eax
    36d3:	75 0c                	jne    36e1 <ipv4pktmgr+0xae>
    36d5:	c7 85 70 fb ff ff 45 	mov    DWORD PTR [rbp-0x490],0x45
    36dc:	00 00 00 
    36df:	eb 24                	jmp    3705 <ipv4pktmgr+0xd2>
    36e1:	8b 05 dd 68 10 00    	mov    eax,DWORD PTR [rip+0x1068dd]        # 109fc4 <homenet>
    36e7:	39 85 40 fb ff ff    	cmp    DWORD PTR [rbp-0x4c0],eax
    36ed:	75 0c                	jne    36fb <ipv4pktmgr+0xc8>
    36ef:	c7 85 70 fb ff ff 46 	mov    DWORD PTR [rbp-0x490],0x46
    36f6:	00 00 00 
    36f9:	eb 0a                	jmp    3705 <ipv4pktmgr+0xd2>
    36fb:	c7 85 70 fb ff ff 47 	mov    DWORD PTR [rbp-0x490],0x47
    3702:	00 00 00 
    3705:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    370c:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    370f:	89 85 80 fb ff ff    	mov    DWORD PTR [rbp-0x480],eax
    3715:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    371c:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    3723:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    372a:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    372d:	48 8b 95 28 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d8]
    3734:	48 83 c2 0e          	add    rdx,0xe
    3738:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    373b:	83 e2 0f             	and    edx,0xf
    373e:	0f b6 d2             	movzx  edx,dl
    3741:	c1 e2 02             	shl    edx,0x2
    3744:	29 d0                	sub    eax,edx
    3746:	83 e8 0e             	sub    eax,0xe
    3749:	89 85 44 fb ff ff    	mov    DWORD PTR [rbp-0x4bc],eax
    374f:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3756:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    3759:	89 c7                	mov    edi,eax
    375b:	e8 c9 f9 ff ff       	call   3129 <ipv4_ntoa>
    3760:	48 89 c1             	mov    rcx,rax
    3763:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    376a:	ba 10 00 00 00       	mov    edx,0x10
    376f:	48 89 ce             	mov    rsi,rcx
    3772:	48 89 c7             	mov    rdi,rax
    3775:	e8 86 f0 ff ff       	call   2800 <strncpy@plt>
    377a:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3781:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    3784:	89 c7                	mov    edi,eax
    3786:	e8 9e f9 ff ff       	call   3129 <ipv4_ntoa>
    378b:	48 89 c1             	mov    rcx,rax
    378e:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3795:	ba 10 00 00 00       	mov    edx,0x10
    379a:	48 89 ce             	mov    rsi,rcx
    379d:	48 89 c7             	mov    rdi,rax
    37a0:	e8 5b f0 ff ff       	call   2800 <strncpy@plt>
    37a5:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37ac:	48 89 c7             	mov    rdi,rax
    37af:	e8 2c 42 00 00       	call   79e0 <init_member>
    37b4:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37bb:	48 89 c7             	mov    rdi,rax
    37be:	e8 1d 42 00 00       	call   79e0 <init_member>
    37c3:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37ca:	48 89 c7             	mov    rdi,rax
    37cd:	e8 bf 20 00 00       	call   5891 <is_blocked_ipv4>
    37d2:	84 c0                	test   al,al
    37d4:	74 44                	je     381a <ipv4pktmgr+0x1e7>
    37d6:	b8 00 00 00 00       	mov    eax,0x0
    37db:	e8 a9 fb ff ff       	call   3389 <get_formated_time>
    37e0:	48 89 c6             	mov    rsi,rax
    37e3:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    37ea:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    37f1:	48 89 d1             	mov    rcx,rdx
    37f4:	48 89 f2             	mov    rdx,rsi
    37f7:	48 8d 35 5a 8a 00 00 	lea    rsi,[rip+0x8a5a]        # c258 <_IO_stdin_used+0x258>
    37fe:	48 89 c7             	mov    rdi,rax
    3801:	b8 00 00 00 00       	mov    eax,0x0
    3806:	e8 35 ee ff ff       	call   2640 <sprintf@plt>
    380b:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3812:	48 89 c7             	mov    rdi,rax
    3815:	e8 79 5c 00 00       	call   9493 <saprintf>
    381a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3821:	48 89 c7             	mov    rdi,rax
    3824:	e8 68 20 00 00       	call   5891 <is_blocked_ipv4>
    3829:	84 c0                	test   al,al
    382b:	74 44                	je     3871 <ipv4pktmgr+0x23e>
    382d:	b8 00 00 00 00       	mov    eax,0x0
    3832:	e8 52 fb ff ff       	call   3389 <get_formated_time>
    3837:	48 89 c6             	mov    rsi,rax
    383a:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    3841:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3848:	48 89 d1             	mov    rcx,rdx
    384b:	48 89 f2             	mov    rdx,rsi
    384e:	48 8d 35 33 8a 00 00 	lea    rsi,[rip+0x8a33]        # c288 <_IO_stdin_used+0x288>
    3855:	48 89 c7             	mov    rdi,rax
    3858:	b8 00 00 00 00       	mov    eax,0x0
    385d:	e8 de ed ff ff       	call   2640 <sprintf@plt>
    3862:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3869:	48 89 c7             	mov    rdi,rax
    386c:	e8 22 5c 00 00       	call   9493 <saprintf>
    3871:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3878:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    387f:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    3886:	48 89 85 60 fb ff ff 	mov    QWORD PTR [rbp-0x4a0],rax
    388d:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3894:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    3898:	66 83 f8 20          	cmp    ax,0x20
    389c:	74 11                	je     38af <ipv4pktmgr+0x27c>
    389e:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    38a5:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    38a9:	66 3d 02 01          	cmp    ax,0x102
    38ad:	75 66                	jne    3915 <ipv4pktmgr+0x2e2>
    38af:	48 8d 35 fa 89 00 00 	lea    rsi,[rip+0x89fa]        # c2b0 <_IO_stdin_used+0x2b0>
    38b6:	48 8d 3d f8 89 00 00 	lea    rdi,[rip+0x89f8]        # c2b5 <_IO_stdin_used+0x2b5>
    38bd:	b8 00 00 00 00       	mov    eax,0x0
    38c2:	e8 d9 eb ff ff       	call   24a0 <printf@plt>
    38c7:	0f b6 05 96 66 10 00 	movzx  eax,BYTE PTR [rip+0x106696]        # 109f64 <packet_print>
    38ce:	84 c0                	test   al,al
    38d0:	74 1a                	je     38ec <ipv4pktmgr+0x2b9>
    38d2:	48 8d 35 ea 89 00 00 	lea    rsi,[rip+0x89ea]        # c2c3 <_IO_stdin_used+0x2c3>
    38d9:	48 8d 3d e8 89 00 00 	lea    rdi,[rip+0x89e8]        # c2c8 <_IO_stdin_used+0x2c8>
    38e0:	b8 00 00 00 00       	mov    eax,0x0
    38e5:	e8 b6 eb ff ff       	call   24a0 <printf@plt>
    38ea:	eb 29                	jmp    3915 <ipv4pktmgr+0x2e2>
    38ec:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    38f3:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38fa:	48 8d 0d c2 89 00 00 	lea    rcx,[rip+0x89c2]        # c2c3 <_IO_stdin_used+0x2c3>
    3901:	48 89 c6             	mov    rsi,rax
    3904:	48 8d 3d c0 89 00 00 	lea    rdi,[rip+0x89c0]        # c2cb <_IO_stdin_used+0x2cb>
    390b:	b8 00 00 00 00       	mov    eax,0x0
    3910:	e8 8b eb ff ff       	call   24a0 <printf@plt>
    3915:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    391c:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3920:	0f b6 c0             	movzx  eax,al
    3923:	83 f8 11             	cmp    eax,0x11
    3926:	0f 84 b8 00 00 00    	je     39e4 <ipv4pktmgr+0x3b1>
    392c:	83 f8 11             	cmp    eax,0x11
    392f:	0f 8f db 00 00 00    	jg     3a10 <ipv4pktmgr+0x3dd>
    3935:	83 f8 06             	cmp    eax,0x6
    3938:	74 7e                	je     39b8 <ipv4pktmgr+0x385>
    393a:	83 f8 06             	cmp    eax,0x6
    393d:	0f 8f cd 00 00 00    	jg     3a10 <ipv4pktmgr+0x3dd>
    3943:	83 f8 01             	cmp    eax,0x1
    3946:	74 0a                	je     3952 <ipv4pktmgr+0x31f>
    3948:	83 f8 02             	cmp    eax,0x2
    394b:	74 2d                	je     397a <ipv4pktmgr+0x347>
    394d:	e9 be 00 00 00       	jmp    3a10 <ipv4pktmgr+0x3dd>
    3952:	c7 85 7c fb ff ff 80 	mov    DWORD PTR [rbp-0x484],0x80
    3959:	00 00 00 
    395c:	48 8d 95 50 fb ff ff 	lea    rdx,[rbp-0x4b0]
    3963:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    396a:	48 89 d6             	mov    rsi,rdx
    396d:	48 89 c7             	mov    rdi,rax
    3970:	e8 40 02 00 00       	call   3bb5 <ip4_icmp_decode>
    3975:	e9 c7 00 00 00       	jmp    3a41 <ipv4pktmgr+0x40e>
    397a:	c7 85 7c fb ff ff ff 	mov    DWORD PTR [rbp-0x484],0xffffffff
    3981:	ff ff ff 
    3984:	8b 05 b6 d6 00 00    	mov    eax,DWORD PTR [rip+0xd6b6]        # 11040 <total_conversations>
    398a:	83 e8 01             	sub    eax,0x1
    398d:	89 05 ad d6 00 00    	mov    DWORD PTR [rip+0xd6ad],eax        # 11040 <total_conversations>
    3993:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    399a:	48 8b 8d 58 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x4a8]
    39a1:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39a8:	48 89 ce             	mov    rsi,rcx
    39ab:	48 89 c7             	mov    rdi,rax
    39ae:	e8 57 14 00 00       	call   4e0a <ip4_igmp_decode>
    39b3:	e9 89 00 00 00       	jmp    3a41 <ipv4pktmgr+0x40e>
    39b8:	c7 85 7c fb ff ff 7e 	mov    DWORD PTR [rbp-0x484],0x7e
    39bf:	00 00 00 
    39c2:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    39c9:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    39d0:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39d7:	48 89 ce             	mov    rsi,rcx
    39da:	48 89 c7             	mov    rdi,rax
    39dd:	e8 17 0a 00 00       	call   43f9 <ip4_tcp_decode>
    39e2:	eb 5d                	jmp    3a41 <ipv4pktmgr+0x40e>
    39e4:	c7 85 7c fb ff ff 7f 	mov    DWORD PTR [rbp-0x484],0x7f
    39eb:	00 00 00 
    39ee:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    39f5:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    39fc:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a03:	48 89 ce             	mov    rsi,rcx
    3a06:	48 89 c7             	mov    rdi,rax
    3a09:	e8 a7 12 00 00       	call   4cb5 <ip4_udp_decode>
    3a0e:	eb 31                	jmp    3a41 <ipv4pktmgr+0x40e>
    3a10:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3a17:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3a1b:	0f b6 c8             	movzx  ecx,al
    3a1e:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    3a25:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3a2c:	48 89 c6             	mov    rsi,rax
    3a2f:	48 8d 3d a2 88 00 00 	lea    rdi,[rip+0x88a2]        # c2d8 <_IO_stdin_used+0x2d8>
    3a36:	b8 00 00 00 00       	mov    eax,0x0
    3a3b:	e8 60 ea ff ff       	call   24a0 <printf@plt>
    3a40:	90                   	nop
    3a41:	90                   	nop
    3a42:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3a46:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3a4d:	00 00 
    3a4f:	74 05                	je     3a56 <ipv4pktmgr+0x423>
    3a51:	e8 1a ed ff ff       	call   2770 <__stack_chk_fail@plt>
    3a56:	c9                   	leave  
    3a57:	c3                   	ret    

0000000000003a58 <ip6_icmp_decode>:
    3a58:	f3 0f 1e fa          	endbr64 
    3a5c:	55                   	push   rbp
    3a5d:	48 89 e5             	mov    rbp,rsp
    3a60:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3a64:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3a68:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3a6c:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3a70:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3a77:	00 00 
    3a79:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3a7d:	31 c0                	xor    eax,eax
    3a7f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3a83:	48 83 c0 36          	add    rax,0x36
    3a87:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3a8b:	0f b6 05 d2 64 10 00 	movzx  eax,BYTE PTR [rip+0x1064d2]        # 109f64 <packet_print>
    3a92:	84 c0                	test   al,al
    3a94:	0f 84 04 01 00 00    	je     3b9e <ip6_icmp_decode+0x146>
    3a9a:	48 8d 35 5f 88 00 00 	lea    rsi,[rip+0x885f]        # c300 <_IO_stdin_used+0x300>
    3aa1:	48 8d 3d 5e 88 00 00 	lea    rdi,[rip+0x885e]        # c306 <_IO_stdin_used+0x306>
    3aa8:	b8 00 00 00 00       	mov    eax,0x0
    3aad:	e8 ee e9 ff ff       	call   24a0 <printf@plt>
    3ab2:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3ab6:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3aba:	48 89 c6             	mov    rsi,rax
    3abd:	48 8d 3d 45 88 00 00 	lea    rdi,[rip+0x8845]        # c309 <_IO_stdin_used+0x309>
    3ac4:	b8 00 00 00 00       	mov    eax,0x0
    3ac9:	e8 d2 e9 ff ff       	call   24a0 <printf@plt>
    3ace:	48 8d 3d 43 88 00 00 	lea    rdi,[rip+0x8843]        # c318 <_IO_stdin_used+0x318>
    3ad5:	b8 00 00 00 00       	mov    eax,0x0
    3ada:	e8 c1 e9 ff ff       	call   24a0 <printf@plt>
    3adf:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3ae3:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3ae6:	0f b6 c0             	movzx  eax,al
    3ae9:	3d 8f 00 00 00       	cmp    eax,0x8f
    3aee:	74 68                	je     3b58 <ip6_icmp_decode+0x100>
    3af0:	3d 8f 00 00 00       	cmp    eax,0x8f
    3af5:	0f 8f 8b 00 00 00    	jg     3b86 <ip6_icmp_decode+0x12e>
    3afb:	3d 87 00 00 00       	cmp    eax,0x87
    3b00:	74 77                	je     3b79 <ip6_icmp_decode+0x121>
    3b02:	3d 87 00 00 00       	cmp    eax,0x87
    3b07:	7f 7d                	jg     3b86 <ip6_icmp_decode+0x12e>
    3b09:	3d 82 00 00 00       	cmp    eax,0x82
    3b0e:	74 56                	je     3b66 <ip6_icmp_decode+0x10e>
    3b10:	3d 85 00 00 00       	cmp    eax,0x85
    3b15:	75 6f                	jne    3b86 <ip6_icmp_decode+0x12e>
    3b17:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b1b:	48 83 c0 0a          	add    rax,0xa
    3b1f:	48 89 c7             	mov    rdi,rax
    3b22:	e8 19 f4 ff ff       	call   2f40 <mac_ntoa>
    3b27:	48 89 c1             	mov    rcx,rax
    3b2a:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b2e:	ba 40 00 00 00       	mov    edx,0x40
    3b33:	48 89 ce             	mov    rsi,rcx
    3b36:	48 89 c7             	mov    rdi,rax
    3b39:	e8 c2 ec ff ff       	call   2800 <strncpy@plt>
    3b3e:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b42:	48 89 c6             	mov    rsi,rax
    3b45:	48 8d 3d d5 87 00 00 	lea    rdi,[rip+0x87d5]        # c321 <_IO_stdin_used+0x321>
    3b4c:	b8 00 00 00 00       	mov    eax,0x0
    3b51:	e8 4a e9 ff ff       	call   24a0 <printf@plt>
    3b56:	eb 2e                	jmp    3b86 <ip6_icmp_decode+0x12e>
    3b58:	48 8d 3d e1 87 00 00 	lea    rdi,[rip+0x87e1]        # c340 <_IO_stdin_used+0x340>
    3b5f:	e8 9c e9 ff ff       	call   2500 <puts@plt>
    3b64:	eb 20                	jmp    3b86 <ip6_icmp_decode+0x12e>
    3b66:	48 8d 3d f8 87 00 00 	lea    rdi,[rip+0x87f8]        # c365 <_IO_stdin_used+0x365>
    3b6d:	b8 00 00 00 00       	mov    eax,0x0
    3b72:	e8 29 e9 ff ff       	call   24a0 <printf@plt>
    3b77:	eb 0d                	jmp    3b86 <ip6_icmp_decode+0x12e>
    3b79:	48 8d 3d ff 87 00 00 	lea    rdi,[rip+0x87ff]        # c37f <_IO_stdin_used+0x37f>
    3b80:	e8 7b e9 ff ff       	call   2500 <puts@plt>
    3b85:	90                   	nop
    3b86:	48 8d 35 08 88 00 00 	lea    rsi,[rip+0x8808]        # c395 <_IO_stdin_used+0x395>
    3b8d:	48 8d 3d 72 87 00 00 	lea    rdi,[rip+0x8772]        # c306 <_IO_stdin_used+0x306>
    3b94:	b8 00 00 00 00       	mov    eax,0x0
    3b99:	e8 02 e9 ff ff       	call   24a0 <printf@plt>
    3b9e:	90                   	nop
    3b9f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3ba3:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3baa:	00 00 
    3bac:	74 05                	je     3bb3 <ip6_icmp_decode+0x15b>
    3bae:	e8 bd eb ff ff       	call   2770 <__stack_chk_fail@plt>
    3bb3:	c9                   	leave  
    3bb4:	c3                   	ret    

0000000000003bb5 <ip4_icmp_decode>:
    3bb5:	f3 0f 1e fa          	endbr64 
    3bb9:	55                   	push   rbp
    3bba:	48 89 e5             	mov    rbp,rsp
    3bbd:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3bc4:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3bcb:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3bd2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3bd9:	00 00 
    3bdb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3bdf:	31 c0                	xor    eax,eax
    3be1:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3be8:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3bec:	ba 5e 00 00 00       	mov    edx,0x5e
    3bf1:	be 01 00 00 00       	mov    esi,0x1
    3bf6:	48 89 c7             	mov    rdi,rax
    3bf9:	e8 0b 13 00 00       	call   4f09 <add_ip_addr_or_inc_counter>
    3bfe:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c05:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c09:	ba 5e 00 00 00       	mov    edx,0x5e
    3c0e:	be 00 00 00 00       	mov    esi,0x0
    3c13:	48 89 c7             	mov    rdi,rax
    3c16:	e8 ee 12 00 00       	call   4f09 <add_ip_addr_or_inc_counter>
    3c1b:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c22:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c26:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3c2d:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c34:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c38:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3c3f:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c46:	48 83 c0 22          	add    rax,0x22
    3c4a:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3c51:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c58:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3c5c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c63:	48 89 10             	mov    QWORD PTR [rax],rdx
    3c66:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c6d:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3c74:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    3c78:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c7f:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c82:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3c88:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c8f:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3c92:	8d 50 d6             	lea    edx,[rax-0x2a]
    3c95:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c9c:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3c9f:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3ca6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3ca9:	3c 08                	cmp    al,0x8
    3cab:	0f 85 55 01 00 00    	jne    3e06 <ip4_icmp_decode+0x251>
    3cb1:	8b 05 d1 d3 00 00    	mov    eax,DWORD PTR [rip+0xd3d1]        # 11088 <strict_nmap_host_alive_check>
    3cb7:	83 f8 01             	cmp    eax,0x1
    3cba:	0f 85 46 01 00 00    	jne    3e06 <ip4_icmp_decode+0x251>
    3cc0:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cc7:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3ccb:	48 89 c7             	mov    rdi,rax
    3cce:	e8 9b 3c 00 00       	call   796e <member_exists>
    3cd3:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3cd9:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3ce0:	0f 84 83 00 00 00    	je     3d69 <ip4_icmp_decode+0x1b4>
    3ce6:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3cec:	48 63 d0             	movsxd rdx,eax
    3cef:	48 89 d0             	mov    rax,rdx
    3cf2:	48 c1 e0 02          	shl    rax,0x2
    3cf6:	48 01 d0             	add    rax,rdx
    3cf9:	48 c1 e0 03          	shl    rax,0x3
    3cfd:	48 01 d0             	add    rax,rdx
    3d00:	48 c1 e0 04          	shl    rax,0x4
    3d04:	48 8d 15 15 f8 0e 00 	lea    rdx,[rip+0xef815]        # f3520 <watchlist>
    3d0b:	48 01 d0             	add    rax,rdx
    3d0e:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3d15:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d1c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d1f:	85 c0                	test   eax,eax
    3d21:	0f 85 a8 02 00 00    	jne    3fcf <ip4_icmp_decode+0x41a>
    3d27:	bf 00 00 00 00       	mov    edi,0x0
    3d2c:	e8 7f eb ff ff       	call   28b0 <time@plt>
    3d31:	48 89 c2             	mov    rdx,rax
    3d34:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d3b:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d3f:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d46:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3d4d:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d54:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d57:	8d 50 01             	lea    edx,[rax+0x1]
    3d5a:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d61:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3d64:	e9 66 02 00 00       	jmp    3fcf <ip4_icmp_decode+0x41a>
    3d69:	8b 05 a9 d2 00 00    	mov    eax,DWORD PTR [rip+0xd2a9]        # 11018 <watchlist_num>
    3d6f:	83 c0 01             	add    eax,0x1
    3d72:	89 05 a0 d2 00 00    	mov    DWORD PTR [rip+0xd2a0],eax        # 11018 <watchlist_num>
    3d78:	8b 05 9a d2 00 00    	mov    eax,DWORD PTR [rip+0xd29a]        # 11018 <watchlist_num>
    3d7e:	48 63 d0             	movsxd rdx,eax
    3d81:	48 89 d0             	mov    rax,rdx
    3d84:	48 c1 e0 02          	shl    rax,0x2
    3d88:	48 01 d0             	add    rax,rdx
    3d8b:	48 c1 e0 03          	shl    rax,0x3
    3d8f:	48 01 d0             	add    rax,rdx
    3d92:	48 c1 e0 04          	shl    rax,0x4
    3d96:	48 8d 15 83 f7 0e 00 	lea    rdx,[rip+0xef783]        # f3520 <watchlist>
    3d9d:	48 01 d0             	add    rax,rdx
    3da0:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3da7:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dae:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3db2:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3db9:	48 89 c6             	mov    rsi,rax
    3dbc:	48 89 d7             	mov    rdi,rdx
    3dbf:	e8 ec e9 ff ff       	call   27b0 <strcpy@plt>
    3dc4:	bf 00 00 00 00       	mov    edi,0x0
    3dc9:	e8 e2 ea ff ff       	call   28b0 <time@plt>
    3dce:	48 89 c2             	mov    rdx,rax
    3dd1:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dd8:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3ddc:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3de3:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3dea:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3df1:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3df4:	8d 50 01             	lea    edx,[rax+0x1]
    3df7:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dfe:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3e01:	e9 c9 01 00 00       	jmp    3fcf <ip4_icmp_decode+0x41a>
    3e06:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3e0d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3e10:	3c 0d                	cmp    al,0xd
    3e12:	0f 85 ba 01 00 00    	jne    3fd2 <ip4_icmp_decode+0x41d>
    3e18:	8b 05 66 d2 00 00    	mov    eax,DWORD PTR [rip+0xd266]        # 11084 <strict_icmp_timestamp_req>
    3e1e:	83 f8 01             	cmp    eax,0x1
    3e21:	74 0f                	je     3e32 <ip4_icmp_decode+0x27d>
    3e23:	8b 05 5f d2 00 00    	mov    eax,DWORD PTR [rip+0xd25f]        # 11088 <strict_nmap_host_alive_check>
    3e29:	83 f8 01             	cmp    eax,0x1
    3e2c:	0f 85 a0 01 00 00    	jne    3fd2 <ip4_icmp_decode+0x41d>
    3e32:	8b 05 4c d2 00 00    	mov    eax,DWORD PTR [rip+0xd24c]        # 11084 <strict_icmp_timestamp_req>
    3e38:	85 c0                	test   eax,eax
    3e3a:	74 22                	je     3e5e <ip4_icmp_decode+0x2a9>
    3e3c:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3e43:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e4a:	48 89 c6             	mov    rsi,rax
    3e4d:	48 8d 3d 4c 85 00 00 	lea    rdi,[rip+0x854c]        # c3a0 <_IO_stdin_used+0x3a0>
    3e54:	b8 00 00 00 00       	mov    eax,0x0
    3e59:	e8 42 e6 ff ff       	call   24a0 <printf@plt>
    3e5e:	8b 05 24 d2 00 00    	mov    eax,DWORD PTR [rip+0xd224]        # 11088 <strict_nmap_host_alive_check>
    3e64:	85 c0                	test   eax,eax
    3e66:	0f 84 66 01 00 00    	je     3fd2 <ip4_icmp_decode+0x41d>
    3e6c:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e73:	48 89 c7             	mov    rdi,rax
    3e76:	e8 f3 3a 00 00       	call   796e <member_exists>
    3e7b:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3e81:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3e88:	0f 84 44 01 00 00    	je     3fd2 <ip4_icmp_decode+0x41d>
    3e8e:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3e94:	48 63 d0             	movsxd rdx,eax
    3e97:	48 89 d0             	mov    rax,rdx
    3e9a:	48 c1 e0 02          	shl    rax,0x2
    3e9e:	48 01 d0             	add    rax,rdx
    3ea1:	48 c1 e0 03          	shl    rax,0x3
    3ea5:	48 01 d0             	add    rax,rdx
    3ea8:	48 c1 e0 04          	shl    rax,0x4
    3eac:	48 8d 15 6d f6 0e 00 	lea    rdx,[rip+0xef66d]        # f3520 <watchlist>
    3eb3:	48 01 d0             	add    rax,rdx
    3eb6:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3ebd:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ec4:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3ec7:	83 f8 03             	cmp    eax,0x3
    3eca:	0f 85 05 01 00 00    	jne    3fd5 <ip4_icmp_decode+0x420>
    3ed0:	bf 00 00 00 00       	mov    edi,0x0
    3ed5:	e8 d6 e9 ff ff       	call   28b0 <time@plt>
    3eda:	48 89 c2             	mov    rdx,rax
    3edd:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ee4:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3ee8:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3eef:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3ef3:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3efa:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3efe:	48 89 d0             	mov    rax,rdx
    3f01:	48 29 c8             	sub    rax,rcx
    3f04:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3f0a:	0f 87 c2 00 00 00    	ja     3fd2 <ip4_icmp_decode+0x41d>
    3f10:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3f17:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3f1e:	48 89 c6             	mov    rsi,rax
    3f21:	48 8d 3d c0 84 00 00 	lea    rdi,[rip+0x84c0]        # c3e8 <_IO_stdin_used+0x3e8>
    3f28:	b8 00 00 00 00       	mov    eax,0x0
    3f2d:	e8 6e e5 ff ff       	call   24a0 <printf@plt>
    3f32:	48 8b 05 f7 d0 00 00 	mov    rax,QWORD PTR [rip+0xd0f7]        # 11030 <def_log_file>
    3f39:	48 8d 35 12 85 00 00 	lea    rsi,[rip+0x8512]        # c452 <_IO_stdin_used+0x452>
    3f40:	48 89 c7             	mov    rdi,rax
    3f43:	e8 48 e6 ff ff       	call   2590 <fopen@plt>
    3f48:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3f4f:	b8 00 00 00 00       	mov    eax,0x0
    3f54:	e8 30 f4 ff ff       	call   3389 <get_formated_time>
    3f59:	48 89 c6             	mov    rsi,rax
    3f5c:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3f63:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3f6a:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f71:	49 89 f0             	mov    r8,rsi
    3f74:	48 8d 35 dd 84 00 00 	lea    rsi,[rip+0x84dd]        # c458 <_IO_stdin_used+0x458>
    3f7b:	48 89 c7             	mov    rdi,rax
    3f7e:	b8 00 00 00 00       	mov    eax,0x0
    3f83:	e8 b8 e6 ff ff       	call   2640 <sprintf@plt>
    3f88:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3f8f:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3f96:	48 89 d6             	mov    rsi,rdx
    3f99:	48 89 c7             	mov    rdi,rax
    3f9c:	e8 1f e7 ff ff       	call   26c0 <fputs@plt>
    3fa1:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3fa8:	48 89 c7             	mov    rdi,rax
    3fab:	e8 40 e8 ff ff       	call   27f0 <fclose@plt>
    3fb0:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3fb7:	48 83 c0 28          	add    rax,0x28
    3fbb:	ba 28 00 00 00       	mov    edx,0x28
    3fc0:	be 00 00 00 00       	mov    esi,0x0
    3fc5:	48 89 c7             	mov    rdi,rax
    3fc8:	e8 e3 e4 ff ff       	call   24b0 <memset@plt>
    3fcd:	eb 07                	jmp    3fd6 <ip4_icmp_decode+0x421>
    3fcf:	90                   	nop
    3fd0:	eb 04                	jmp    3fd6 <ip4_icmp_decode+0x421>
    3fd2:	90                   	nop
    3fd3:	eb 01                	jmp    3fd6 <ip4_icmp_decode+0x421>
    3fd5:	90                   	nop
    3fd6:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3fdd:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    3fe4:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3feb:	48 89 c7             	mov    rdi,rax
    3fee:	e8 50 24 00 00       	call   6443 <rulemgr>
    3ff3:	0f b6 05 6a 5f 10 00 	movzx  eax,BYTE PTR [rip+0x105f6a]        # 109f64 <packet_print>
    3ffa:	84 c0                	test   al,al
    3ffc:	0f 84 e0 03 00 00    	je     43e2 <ip4_icmp_decode+0x82d>
    4002:	48 8d 35 f7 82 00 00 	lea    rsi,[rip+0x82f7]        # c300 <_IO_stdin_used+0x300>
    4009:	48 8d 3d f6 82 00 00 	lea    rdi,[rip+0x82f6]        # c306 <_IO_stdin_used+0x306>
    4010:	b8 00 00 00 00       	mov    eax,0x0
    4015:	e8 86 e4 ff ff       	call   24a0 <printf@plt>
    401a:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    4021:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    4028:	48 89 c6             	mov    rsi,rax
    402b:	48 8d 3d 96 84 00 00 	lea    rdi,[rip+0x8496]        # c4c8 <_IO_stdin_used+0x4c8>
    4032:	b8 00 00 00 00       	mov    eax,0x0
    4037:	e8 64 e4 ff ff       	call   24a0 <printf@plt>
    403c:	48 8d 3d 94 84 00 00 	lea    rdi,[rip+0x8494]        # c4d7 <_IO_stdin_used+0x4d7>
    4043:	b8 00 00 00 00       	mov    eax,0x0
    4048:	e8 53 e4 ff ff       	call   24a0 <printf@plt>
    404d:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4054:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4057:	0f b6 c0             	movzx  eax,al
    405a:	83 f8 0e             	cmp    eax,0xe
    405d:	0f 87 46 03 00 00    	ja     43a9 <ip4_icmp_decode+0x7f4>
    4063:	89 c0                	mov    eax,eax
    4065:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    406c:	00 
    406d:	48 8d 05 6c 88 00 00 	lea    rax,[rip+0x886c]        # c8e0 <_IO_stdin_used+0x8e0>
    4074:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4077:	48 98                	cdqe   
    4079:	48 8d 15 60 88 00 00 	lea    rdx,[rip+0x8860]        # c8e0 <_IO_stdin_used+0x8e0>
    4080:	48 01 d0             	add    rax,rdx
    4083:	3e ff e0             	notrack jmp rax
    4086:	48 8d 3d 51 84 00 00 	lea    rdi,[rip+0x8451]        # c4de <_IO_stdin_used+0x4de>
    408d:	e8 6e e4 ff ff       	call   2500 <puts@plt>
    4092:	e9 33 03 00 00       	jmp    43ca <ip4_icmp_decode+0x815>
    4097:	48 8d 3d 4c 84 00 00 	lea    rdi,[rip+0x844c]        # c4ea <_IO_stdin_used+0x4ea>
    409e:	b8 00 00 00 00       	mov    eax,0x0
    40a3:	e8 f8 e3 ff ff       	call   24a0 <printf@plt>
    40a8:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    40af:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    40b3:	0f b6 c0             	movzx  eax,al
    40b6:	83 f8 0f             	cmp    eax,0xf
    40b9:	0f 87 1e 01 00 00    	ja     41dd <ip4_icmp_decode+0x628>
    40bf:	89 c0                	mov    eax,eax
    40c1:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    40c8:	00 
    40c9:	48 8d 05 4c 88 00 00 	lea    rax,[rip+0x884c]        # c91c <_IO_stdin_used+0x91c>
    40d0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    40d3:	48 98                	cdqe   
    40d5:	48 8d 15 40 88 00 00 	lea    rdx,[rip+0x8840]        # c91c <_IO_stdin_used+0x91c>
    40dc:	48 01 d0             	add    rax,rdx
    40df:	3e ff e0             	notrack jmp rax
    40e2:	48 8d 3d 1b 84 00 00 	lea    rdi,[rip+0x841b]        # c504 <_IO_stdin_used+0x504>
    40e9:	e8 12 e4 ff ff       	call   2500 <puts@plt>
    40ee:	e9 0c 01 00 00       	jmp    41ff <ip4_icmp_decode+0x64a>
    40f3:	48 8d 3d 21 84 00 00 	lea    rdi,[rip+0x8421]        # c51b <_IO_stdin_used+0x51b>
    40fa:	e8 01 e4 ff ff       	call   2500 <puts@plt>
    40ff:	e9 fb 00 00 00       	jmp    41ff <ip4_icmp_decode+0x64a>
    4104:	48 8d 3d 24 84 00 00 	lea    rdi,[rip+0x8424]        # c52f <_IO_stdin_used+0x52f>
    410b:	e8 f0 e3 ff ff       	call   2500 <puts@plt>
    4110:	e9 ea 00 00 00       	jmp    41ff <ip4_icmp_decode+0x64a>
    4115:	48 8d 3d 2b 84 00 00 	lea    rdi,[rip+0x842b]        # c547 <_IO_stdin_used+0x547>
    411c:	e8 df e3 ff ff       	call   2500 <puts@plt>
    4121:	e9 d9 00 00 00       	jmp    41ff <ip4_icmp_decode+0x64a>
    4126:	48 8d 3d 2e 84 00 00 	lea    rdi,[rip+0x842e]        # c55b <_IO_stdin_used+0x55b>
    412d:	e8 ce e3 ff ff       	call   2500 <puts@plt>
    4132:	e9 c8 00 00 00       	jmp    41ff <ip4_icmp_decode+0x64a>
    4137:	48 8d 3d 35 84 00 00 	lea    rdi,[rip+0x8435]        # c573 <_IO_stdin_used+0x573>
    413e:	e8 bd e3 ff ff       	call   2500 <puts@plt>
    4143:	e9 b7 00 00 00       	jmp    41ff <ip4_icmp_decode+0x64a>
    4148:	48 8d 3d 41 84 00 00 	lea    rdi,[rip+0x8441]        # c590 <_IO_stdin_used+0x590>
    414f:	e8 ac e3 ff ff       	call   2500 <puts@plt>
    4154:	e9 a6 00 00 00       	jmp    41ff <ip4_icmp_decode+0x64a>
    4159:	48 8d 3d 58 84 00 00 	lea    rdi,[rip+0x8458]        # c5b8 <_IO_stdin_used+0x5b8>
    4160:	e8 9b e3 ff ff       	call   2500 <puts@plt>
    4165:	e9 95 00 00 00       	jmp    41ff <ip4_icmp_decode+0x64a>
    416a:	48 8d 3d 67 84 00 00 	lea    rdi,[rip+0x8467]        # c5d8 <_IO_stdin_used+0x5d8>
    4171:	e8 8a e3 ff ff       	call   2500 <puts@plt>
    4176:	e9 84 00 00 00       	jmp    41ff <ip4_icmp_decode+0x64a>
    417b:	48 8d 3d 6e 84 00 00 	lea    rdi,[rip+0x846e]        # c5f0 <_IO_stdin_used+0x5f0>
    4182:	e8 79 e3 ff ff       	call   2500 <puts@plt>
    4187:	eb 76                	jmp    41ff <ip4_icmp_decode+0x64a>
    4189:	48 8d 3d 88 84 00 00 	lea    rdi,[rip+0x8488]        # c618 <_IO_stdin_used+0x618>
    4190:	e8 6b e3 ff ff       	call   2500 <puts@plt>
    4195:	eb 68                	jmp    41ff <ip4_icmp_decode+0x64a>
    4197:	48 8d 3d a2 84 00 00 	lea    rdi,[rip+0x84a2]        # c640 <_IO_stdin_used+0x640>
    419e:	e8 5d e3 ff ff       	call   2500 <puts@plt>
    41a3:	eb 5a                	jmp    41ff <ip4_icmp_decode+0x64a>
    41a5:	48 8d 3d b3 84 00 00 	lea    rdi,[rip+0x84b3]        # c65f <_IO_stdin_used+0x65f>
    41ac:	e8 4f e3 ff ff       	call   2500 <puts@plt>
    41b1:	eb 4c                	jmp    41ff <ip4_icmp_decode+0x64a>
    41b3:	48 8d 3d c6 84 00 00 	lea    rdi,[rip+0x84c6]        # c680 <_IO_stdin_used+0x680>
    41ba:	e8 41 e3 ff ff       	call   2500 <puts@plt>
    41bf:	eb 3e                	jmp    41ff <ip4_icmp_decode+0x64a>
    41c1:	48 8d 3d e5 84 00 00 	lea    rdi,[rip+0x84e5]        # c6ad <_IO_stdin_used+0x6ad>
    41c8:	e8 33 e3 ff ff       	call   2500 <puts@plt>
    41cd:	eb 30                	jmp    41ff <ip4_icmp_decode+0x64a>
    41cf:	48 8d 3d fa 84 00 00 	lea    rdi,[rip+0x84fa]        # c6d0 <_IO_stdin_used+0x6d0>
    41d6:	e8 25 e3 ff ff       	call   2500 <puts@plt>
    41db:	eb 22                	jmp    41ff <ip4_icmp_decode+0x64a>
    41dd:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    41e4:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    41e8:	0f b6 c0             	movzx  eax,al
    41eb:	89 c6                	mov    esi,eax
    41ed:	48 8d 3d fb 84 00 00 	lea    rdi,[rip+0x84fb]        # c6ef <_IO_stdin_used+0x6ef>
    41f4:	b8 00 00 00 00       	mov    eax,0x0
    41f9:	e8 a2 e2 ff ff       	call   24a0 <printf@plt>
    41fe:	90                   	nop
    41ff:	e9 c6 01 00 00       	jmp    43ca <ip4_icmp_decode+0x815>
    4204:	48 8d 3d fd 84 00 00 	lea    rdi,[rip+0x84fd]        # c708 <_IO_stdin_used+0x708>
    420b:	e8 f0 e2 ff ff       	call   2500 <puts@plt>
    4210:	e9 b5 01 00 00       	jmp    43ca <ip4_icmp_decode+0x815>
    4215:	48 8d 3d 0b 85 00 00 	lea    rdi,[rip+0x850b]        # c727 <_IO_stdin_used+0x727>
    421c:	b8 00 00 00 00       	mov    eax,0x0
    4221:	e8 7a e2 ff ff       	call   24a0 <printf@plt>
    4226:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    422d:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4231:	0f b6 c0             	movzx  eax,al
    4234:	83 f8 03             	cmp    eax,0x3
    4237:	74 44                	je     427d <ip4_icmp_decode+0x6c8>
    4239:	83 f8 03             	cmp    eax,0x3
    423c:	7f 4d                	jg     428b <ip4_icmp_decode+0x6d6>
    423e:	83 f8 02             	cmp    eax,0x2
    4241:	74 2c                	je     426f <ip4_icmp_decode+0x6ba>
    4243:	83 f8 02             	cmp    eax,0x2
    4246:	7f 43                	jg     428b <ip4_icmp_decode+0x6d6>
    4248:	85 c0                	test   eax,eax
    424a:	74 07                	je     4253 <ip4_icmp_decode+0x69e>
    424c:	83 f8 01             	cmp    eax,0x1
    424f:	74 10                	je     4261 <ip4_icmp_decode+0x6ac>
    4251:	eb 38                	jmp    428b <ip4_icmp_decode+0x6d6>
    4253:	48 8d 3d d9 84 00 00 	lea    rdi,[rip+0x84d9]        # c733 <_IO_stdin_used+0x733>
    425a:	e8 a1 e2 ff ff       	call   2500 <puts@plt>
    425f:	eb 4c                	jmp    42ad <ip4_icmp_decode+0x6f8>
    4261:	48 8d 3d e3 84 00 00 	lea    rdi,[rip+0x84e3]        # c74b <_IO_stdin_used+0x74b>
    4268:	e8 93 e2 ff ff       	call   2500 <puts@plt>
    426d:	eb 3e                	jmp    42ad <ip4_icmp_decode+0x6f8>
    426f:	48 8d 3d ea 84 00 00 	lea    rdi,[rip+0x84ea]        # c760 <_IO_stdin_used+0x760>
    4276:	e8 85 e2 ff ff       	call   2500 <puts@plt>
    427b:	eb 30                	jmp    42ad <ip4_icmp_decode+0x6f8>
    427d:	48 8d 3d fc 84 00 00 	lea    rdi,[rip+0x84fc]        # c780 <_IO_stdin_used+0x780>
    4284:	e8 77 e2 ff ff       	call   2500 <puts@plt>
    4289:	eb 22                	jmp    42ad <ip4_icmp_decode+0x6f8>
    428b:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4292:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4296:	0f b6 c0             	movzx  eax,al
    4299:	89 c6                	mov    esi,eax
    429b:	48 8d 3d 4d 84 00 00 	lea    rdi,[rip+0x844d]        # c6ef <_IO_stdin_used+0x6ef>
    42a2:	b8 00 00 00 00       	mov    eax,0x0
    42a7:	e8 f4 e1 ff ff       	call   24a0 <printf@plt>
    42ac:	90                   	nop
    42ad:	e9 18 01 00 00       	jmp    43ca <ip4_icmp_decode+0x815>
    42b2:	48 8d 3d e4 84 00 00 	lea    rdi,[rip+0x84e4]        # c79d <_IO_stdin_used+0x79d>
    42b9:	e8 42 e2 ff ff       	call   2500 <puts@plt>
    42be:	e9 07 01 00 00       	jmp    43ca <ip4_icmp_decode+0x815>
    42c3:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42ca:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42ce:	84 c0                	test   al,al
    42d0:	75 16                	jne    42e8 <ip4_icmp_decode+0x733>
    42d2:	48 8d 3d d7 84 00 00 	lea    rdi,[rip+0x84d7]        # c7b0 <_IO_stdin_used+0x7b0>
    42d9:	b8 00 00 00 00       	mov    eax,0x0
    42de:	e8 bd e1 ff ff       	call   24a0 <printf@plt>
    42e3:	e9 e2 00 00 00       	jmp    43ca <ip4_icmp_decode+0x815>
    42e8:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42ef:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42f3:	0f b6 c0             	movzx  eax,al
    42f6:	89 c6                	mov    esi,eax
    42f8:	48 8d 3d f1 84 00 00 	lea    rdi,[rip+0x84f1]        # c7f0 <_IO_stdin_used+0x7f0>
    42ff:	b8 00 00 00 00       	mov    eax,0x0
    4304:	e8 97 e1 ff ff       	call   24a0 <printf@plt>
    4309:	e9 bc 00 00 00       	jmp    43ca <ip4_icmp_decode+0x815>
    430e:	48 8d 3d 08 85 00 00 	lea    rdi,[rip+0x8508]        # c81d <_IO_stdin_used+0x81d>
    4315:	e8 e6 e1 ff ff       	call   2500 <puts@plt>
    431a:	e9 ab 00 00 00       	jmp    43ca <ip4_icmp_decode+0x815>
    431f:	48 8d 3d 0e 85 00 00 	lea    rdi,[rip+0x850e]        # c834 <_IO_stdin_used+0x834>
    4326:	b8 00 00 00 00       	mov    eax,0x0
    432b:	e8 70 e1 ff ff       	call   24a0 <printf@plt>
    4330:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4337:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    433b:	84 c0                	test   al,al
    433d:	75 0e                	jne    434d <ip4_icmp_decode+0x798>
    433f:	48 8d 3d 05 85 00 00 	lea    rdi,[rip+0x8505]        # c84b <_IO_stdin_used+0x84b>
    4346:	e8 b5 e1 ff ff       	call   2500 <puts@plt>
    434b:	eb 7d                	jmp    43ca <ip4_icmp_decode+0x815>
    434d:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4354:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4358:	3c 01                	cmp    al,0x1
    435a:	75 0e                	jne    436a <ip4_icmp_decode+0x7b5>
    435c:	48 8d 3d 05 85 00 00 	lea    rdi,[rip+0x8505]        # c868 <_IO_stdin_used+0x868>
    4363:	e8 98 e1 ff ff       	call   2500 <puts@plt>
    4368:	eb 60                	jmp    43ca <ip4_icmp_decode+0x815>
    436a:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4371:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4375:	0f b6 c0             	movzx  eax,al
    4378:	89 c6                	mov    esi,eax
    437a:	48 8d 3d 0e 85 00 00 	lea    rdi,[rip+0x850e]        # c88f <_IO_stdin_used+0x88f>
    4381:	b8 00 00 00 00       	mov    eax,0x0
    4386:	e8 15 e1 ff ff       	call   24a0 <printf@plt>
    438b:	eb 3d                	jmp    43ca <ip4_icmp_decode+0x815>
    438d:	48 8d 3d 11 85 00 00 	lea    rdi,[rip+0x8511]        # c8a5 <_IO_stdin_used+0x8a5>
    4394:	e8 67 e1 ff ff       	call   2500 <puts@plt>
    4399:	eb 2f                	jmp    43ca <ip4_icmp_decode+0x815>
    439b:	48 8d 3d 16 85 00 00 	lea    rdi,[rip+0x8516]        # c8b8 <_IO_stdin_used+0x8b8>
    43a2:	e8 59 e1 ff ff       	call   2500 <puts@plt>
    43a7:	eb 21                	jmp    43ca <ip4_icmp_decode+0x815>
    43a9:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43b0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    43b3:	0f b6 c0             	movzx  eax,al
    43b6:	89 c6                	mov    esi,eax
    43b8:	48 8d 3d 0a 85 00 00 	lea    rdi,[rip+0x850a]        # c8c9 <_IO_stdin_used+0x8c9>
    43bf:	b8 00 00 00 00       	mov    eax,0x0
    43c4:	e8 d7 e0 ff ff       	call   24a0 <printf@plt>
    43c9:	90                   	nop
    43ca:	48 8d 35 c4 7f 00 00 	lea    rsi,[rip+0x7fc4]        # c395 <_IO_stdin_used+0x395>
    43d1:	48 8d 3d 2e 7f 00 00 	lea    rdi,[rip+0x7f2e]        # c306 <_IO_stdin_used+0x306>
    43d8:	b8 00 00 00 00       	mov    eax,0x0
    43dd:	e8 be e0 ff ff       	call   24a0 <printf@plt>
    43e2:	90                   	nop
    43e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    43e7:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    43ee:	00 00 
    43f0:	74 05                	je     43f7 <ip4_icmp_decode+0x842>
    43f2:	e8 79 e3 ff ff       	call   2770 <__stack_chk_fail@plt>
    43f7:	c9                   	leave  
    43f8:	c3                   	ret    

00000000000043f9 <ip4_tcp_decode>:
    43f9:	f3 0f 1e fa          	endbr64 
    43fd:	55                   	push   rbp
    43fe:	48 89 e5             	mov    rbp,rsp
    4401:	53                   	push   rbx
    4402:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    4409:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    440d:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    4411:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    4418:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    441c:	48 83 c0 22          	add    rax,0x22
    4420:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4424:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4428:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    442c:	c0 e8 04             	shr    al,0x4
    442f:	0f b6 c0             	movzx  eax,al
    4432:	c1 e0 02             	shl    eax,0x2
    4435:	48 98                	cdqe   
    4437:	48 8d 50 22          	lea    rdx,[rax+0x22]
    443b:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    443f:	48 01 c2             	add    rdx,rax
    4442:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4446:	48 89 10             	mov    QWORD PTR [rax],rdx
    4449:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    444d:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    4450:	89 c2                	mov    edx,eax
    4452:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4456:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    445a:	c0 e8 04             	shr    al,0x4
    445d:	0f b6 c0             	movzx  eax,al
    4460:	c1 e0 02             	shl    eax,0x2
    4463:	89 c1                	mov    ecx,eax
    4465:	89 d0                	mov    eax,edx
    4467:	29 c8                	sub    eax,ecx
    4469:	83 e8 22             	sub    eax,0x22
    446c:	89 c2                	mov    edx,eax
    446e:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4472:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    4475:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4479:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    447d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4481:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4485:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4489:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    448d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4491:	ba 5c 00 00 00       	mov    edx,0x5c
    4496:	be 01 00 00 00       	mov    esi,0x1
    449b:	48 89 c7             	mov    rdi,rax
    449e:	e8 66 0a 00 00       	call   4f09 <add_ip_addr_or_inc_counter>
    44a3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    44a7:	ba 5c 00 00 00       	mov    edx,0x5c
    44ac:	be 00 00 00 00       	mov    esi,0x0
    44b1:	48 89 c7             	mov    rdi,rax
    44b4:	e8 50 0a 00 00       	call   4f09 <add_ip_addr_or_inc_counter>
    44b9:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
    44c0:	c6 45 9f 00          	mov    BYTE PTR [rbp-0x61],0x0
    44c4:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
    44c8:	c6 45 a1 00          	mov    BYTE PTR [rbp-0x5f],0x0
    44cc:	c6 45 a2 00          	mov    BYTE PTR [rbp-0x5e],0x0
    44d0:	c6 45 a3 00          	mov    BYTE PTR [rbp-0x5d],0x0
    44d4:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44d8:	48 83 c0 68          	add    rax,0x68
    44dc:	ba 08 00 00 00       	mov    edx,0x8
    44e1:	be 00 00 00 00       	mov    esi,0x0
    44e6:	48 89 c7             	mov    rdi,rax
    44e9:	e8 c2 df ff ff       	call   24b0 <memset@plt>
    44ee:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    44f2:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    44f6:	0f b7 c0             	movzx  eax,ax
    44f9:	89 c7                	mov    edi,eax
    44fb:	e8 50 e1 ff ff       	call   2650 <ntohs@plt>
    4500:	0f b7 c0             	movzx  eax,ax
    4503:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    4506:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    450a:	0f b7 00             	movzx  eax,WORD PTR [rax]
    450d:	0f b7 c0             	movzx  eax,ax
    4510:	89 c7                	mov    edi,eax
    4512:	e8 39 e1 ff ff       	call   2650 <ntohs@plt>
    4517:	0f b7 c0             	movzx  eax,ax
    451a:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    451d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4521:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4525:	0f b7 c0             	movzx  eax,ax
    4528:	89 c7                	mov    edi,eax
    452a:	e8 21 e1 ff ff       	call   2650 <ntohs@plt>
    452f:	0f b7 d0             	movzx  edx,ax
    4532:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4536:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4539:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    453d:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    4540:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4543:	0f b6 05 1a 5a 10 00 	movzx  eax,BYTE PTR [rip+0x105a1a]        # 109f64 <packet_print>
    454a:	84 c0                	test   al,al
    454c:	74 4e                	je     459c <ip4_tcp_decode+0x1a3>
    454e:	48 8d 35 0b 84 00 00 	lea    rsi,[rip+0x840b]        # c960 <_IO_stdin_used+0x960>
    4555:	48 8d 3d 0a 84 00 00 	lea    rdi,[rip+0x840a]        # c966 <_IO_stdin_used+0x966>
    455c:	b8 00 00 00 00       	mov    eax,0x0
    4561:	e8 3a df ff ff       	call   24a0 <printf@plt>
    4566:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
    4569:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    456d:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    4570:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4574:	41 89 f0             	mov    r8d,esi
    4577:	48 89 c6             	mov    rsi,rax
    457a:	48 8d 3d e8 83 00 00 	lea    rdi,[rip+0x83e8]        # c969 <_IO_stdin_used+0x969>
    4581:	b8 00 00 00 00       	mov    eax,0x0
    4586:	e8 15 df ff ff       	call   24a0 <printf@plt>
    458b:	48 8d 3d ec 83 00 00 	lea    rdi,[rip+0x83ec]        # c97e <_IO_stdin_used+0x97e>
    4592:	b8 00 00 00 00       	mov    eax,0x0
    4597:	e8 04 df ff ff       	call   24a0 <printf@plt>
    459c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    45a0:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    45a4:	c0 e8 04             	shr    al,0x4
    45a7:	83 e0 01             	and    eax,0x1
    45aa:	0f b6 c0             	movzx  eax,al
    45ad:	89 c7                	mov    edi,eax
    45af:	e8 9c e0 ff ff       	call   2650 <ntohs@plt>
    45b4:	66 85 c0             	test   ax,ax
    45b7:	74 43                	je     45fc <ip4_tcp_decode+0x203>
    45b9:	0f b6 05 a4 59 10 00 	movzx  eax,BYTE PTR [rip+0x1059a4]        # 109f64 <packet_print>
    45c0:	84 c0                	test   al,al
    45c2:	74 18                	je     45dc <ip4_tcp_decode+0x1e3>
    45c4:	48 8d 35 ba 83 00 00 	lea    rsi,[rip+0x83ba]        # c985 <_IO_stdin_used+0x985>
    45cb:	48 8d 3d b9 83 00 00 	lea    rdi,[rip+0x83b9]        # c98b <_IO_stdin_used+0x98b>
    45d2:	b8 00 00 00 00       	mov    eax,0x0
    45d7:	e8 c4 de ff ff       	call   24a0 <printf@plt>
    45dc:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
    45e0:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    45e4:	48 8d 58 68          	lea    rbx,[rax+0x68]
    45e8:	48 89 df             	mov    rdi,rbx
    45eb:	e8 30 e0 ff ff       	call   2620 <strlen@plt>
    45f0:	48 01 d8             	add    rax,rbx
    45f3:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    45f8:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    45fc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4600:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4604:	83 e0 01             	and    eax,0x1
    4607:	0f b6 c0             	movzx  eax,al
    460a:	89 c7                	mov    edi,eax
    460c:	e8 3f e0 ff ff       	call   2650 <ntohs@plt>
    4611:	66 85 c0             	test   ax,ax
    4614:	74 43                	je     4659 <ip4_tcp_decode+0x260>
    4616:	0f b6 05 47 59 10 00 	movzx  eax,BYTE PTR [rip+0x105947]        # 109f64 <packet_print>
    461d:	84 c0                	test   al,al
    461f:	74 18                	je     4639 <ip4_tcp_decode+0x240>
    4621:	48 8d 35 6b 83 00 00 	lea    rsi,[rip+0x836b]        # c993 <_IO_stdin_used+0x993>
    4628:	48 8d 3d 6a 83 00 00 	lea    rdi,[rip+0x836a]        # c999 <_IO_stdin_used+0x999>
    462f:	b8 00 00 00 00       	mov    eax,0x0
    4634:	e8 67 de ff ff       	call   24a0 <printf@plt>
    4639:	c6 45 a2 01          	mov    BYTE PTR [rbp-0x5e],0x1
    463d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4641:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4645:	48 89 df             	mov    rdi,rbx
    4648:	e8 d3 df ff ff       	call   2620 <strlen@plt>
    464d:	48 01 d8             	add    rax,rbx
    4650:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    4655:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4659:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    465d:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4661:	c0 e8 03             	shr    al,0x3
    4664:	83 e0 01             	and    eax,0x1
    4667:	0f b6 c0             	movzx  eax,al
    466a:	89 c7                	mov    edi,eax
    466c:	e8 df df ff ff       	call   2650 <ntohs@plt>
    4671:	66 85 c0             	test   ax,ax
    4674:	74 43                	je     46b9 <ip4_tcp_decode+0x2c0>
    4676:	0f b6 05 e7 58 10 00 	movzx  eax,BYTE PTR [rip+0x1058e7]        # 109f64 <packet_print>
    467d:	84 c0                	test   al,al
    467f:	74 18                	je     4699 <ip4_tcp_decode+0x2a0>
    4681:	48 8d 35 19 83 00 00 	lea    rsi,[rip+0x8319]        # c9a1 <_IO_stdin_used+0x9a1>
    4688:	48 8d 3d 18 83 00 00 	lea    rdi,[rip+0x8318]        # c9a7 <_IO_stdin_used+0x9a7>
    468f:	b8 00 00 00 00       	mov    eax,0x0
    4694:	e8 07 de ff ff       	call   24a0 <printf@plt>
    4699:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    469d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46a1:	48 8d 58 68          	lea    rbx,[rax+0x68]
    46a5:	48 89 df             	mov    rdi,rbx
    46a8:	e8 73 df ff ff       	call   2620 <strlen@plt>
    46ad:	48 01 d8             	add    rax,rbx
    46b0:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    46b5:	c6 45 a3 01          	mov    BYTE PTR [rbp-0x5d],0x1
    46b9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46bd:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46c1:	c0 e8 02             	shr    al,0x2
    46c4:	83 e0 01             	and    eax,0x1
    46c7:	0f b6 c0             	movzx  eax,al
    46ca:	89 c7                	mov    edi,eax
    46cc:	e8 7f df ff ff       	call   2650 <ntohs@plt>
    46d1:	66 85 c0             	test   ax,ax
    46d4:	74 43                	je     4719 <ip4_tcp_decode+0x320>
    46d6:	0f b6 05 87 58 10 00 	movzx  eax,BYTE PTR [rip+0x105887]        # 109f64 <packet_print>
    46dd:	84 c0                	test   al,al
    46df:	74 18                	je     46f9 <ip4_tcp_decode+0x300>
    46e1:	48 8d 35 c7 82 00 00 	lea    rsi,[rip+0x82c7]        # c9af <_IO_stdin_used+0x9af>
    46e8:	48 8d 3d c6 82 00 00 	lea    rdi,[rip+0x82c6]        # c9b5 <_IO_stdin_used+0x9b5>
    46ef:	b8 00 00 00 00       	mov    eax,0x0
    46f4:	e8 a7 dd ff ff       	call   24a0 <printf@plt>
    46f9:	c6 45 9f 01          	mov    BYTE PTR [rbp-0x61],0x1
    46fd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4701:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4705:	48 89 df             	mov    rdi,rbx
    4708:	e8 13 df ff ff       	call   2620 <strlen@plt>
    470d:	48 01 d8             	add    rax,rbx
    4710:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    4715:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4719:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    471d:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4721:	d0 e8                	shr    al,1
    4723:	83 e0 01             	and    eax,0x1
    4726:	0f b6 c0             	movzx  eax,al
    4729:	89 c7                	mov    edi,eax
    472b:	e8 20 df ff ff       	call   2650 <ntohs@plt>
    4730:	66 85 c0             	test   ax,ax
    4733:	74 43                	je     4778 <ip4_tcp_decode+0x37f>
    4735:	0f b6 05 28 58 10 00 	movzx  eax,BYTE PTR [rip+0x105828]        # 109f64 <packet_print>
    473c:	84 c0                	test   al,al
    473e:	74 18                	je     4758 <ip4_tcp_decode+0x35f>
    4740:	48 8d 35 76 82 00 00 	lea    rsi,[rip+0x8276]        # c9bd <_IO_stdin_used+0x9bd>
    4747:	48 8d 3d 75 82 00 00 	lea    rdi,[rip+0x8275]        # c9c3 <_IO_stdin_used+0x9c3>
    474e:	b8 00 00 00 00       	mov    eax,0x0
    4753:	e8 48 dd ff ff       	call   24a0 <printf@plt>
    4758:	c6 45 a1 01          	mov    BYTE PTR [rbp-0x5f],0x1
    475c:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4760:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4764:	48 89 df             	mov    rdi,rbx
    4767:	e8 b4 de ff ff       	call   2620 <strlen@plt>
    476c:	48 01 d8             	add    rax,rbx
    476f:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    4774:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4778:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    477c:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4780:	c0 e8 05             	shr    al,0x5
    4783:	83 e0 01             	and    eax,0x1
    4786:	0f b6 c0             	movzx  eax,al
    4789:	89 c7                	mov    edi,eax
    478b:	e8 c0 de ff ff       	call   2650 <ntohs@plt>
    4790:	66 85 c0             	test   ax,ax
    4793:	74 3f                	je     47d4 <ip4_tcp_decode+0x3db>
    4795:	0f b6 05 c8 57 10 00 	movzx  eax,BYTE PTR [rip+0x1057c8]        # 109f64 <packet_print>
    479c:	84 c0                	test   al,al
    479e:	74 18                	je     47b8 <ip4_tcp_decode+0x3bf>
    47a0:	48 8d 35 24 82 00 00 	lea    rsi,[rip+0x8224]        # c9cb <_IO_stdin_used+0x9cb>
    47a7:	48 8d 3d 23 82 00 00 	lea    rdi,[rip+0x8223]        # c9d1 <_IO_stdin_used+0x9d1>
    47ae:	b8 00 00 00 00       	mov    eax,0x0
    47b3:	e8 e8 dc ff ff       	call   24a0 <printf@plt>
    47b8:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    47bc:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    47c0:	48 8d 58 68          	lea    rbx,[rax+0x68]
    47c4:	48 89 df             	mov    rdi,rbx
    47c7:	e8 54 de ff ff       	call   2620 <strlen@plt>
    47cc:	48 01 d8             	add    rax,rbx
    47cf:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    47d4:	0f b6 05 89 57 10 00 	movzx  eax,BYTE PTR [rip+0x105789]        # 109f64 <packet_print>
    47db:	84 c0                	test   al,al
    47dd:	74 3c                	je     481b <ip4_tcp_decode+0x422>
    47df:	48 8d 35 7a 81 00 00 	lea    rsi,[rip+0x817a]        # c960 <_IO_stdin_used+0x960>
    47e6:	48 8d 3d 79 81 00 00 	lea    rdi,[rip+0x8179]        # c966 <_IO_stdin_used+0x966>
    47ed:	b8 00 00 00 00       	mov    eax,0x0
    47f2:	e8 a9 dc ff ff       	call   24a0 <printf@plt>
    47f7:	48 8d 3d db 81 00 00 	lea    rdi,[rip+0x81db]        # c9d9 <_IO_stdin_used+0x9d9>
    47fe:	e8 fd dc ff ff       	call   2500 <puts@plt>
    4803:	48 8d 35 d1 81 00 00 	lea    rsi,[rip+0x81d1]        # c9db <_IO_stdin_used+0x9db>
    480a:	48 8d 3d 55 81 00 00 	lea    rdi,[rip+0x8155]        # c966 <_IO_stdin_used+0x966>
    4811:	b8 00 00 00 00       	mov    eax,0x0
    4816:	e8 85 dc ff ff       	call   24a0 <printf@plt>
    481b:	83 7d a4 03          	cmp    DWORD PTR [rbp-0x5c],0x3
    481f:	7f 06                	jg     4827 <ip4_tcp_decode+0x42e>
    4821:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
    4825:	75 41                	jne    4868 <ip4_tcp_decode+0x46f>
    4827:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
    482a:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    482e:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    4831:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4835:	48 8d 0d 9f 81 00 00 	lea    rcx,[rip+0x819f]        # c9db <_IO_stdin_used+0x9db>
    483c:	51                   	push   rcx
    483d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
    4840:	51                   	push   rcx
    4841:	41 89 f9             	mov    r9d,edi
    4844:	49 89 f0             	mov    r8,rsi
    4847:	89 d1                	mov    ecx,edx
    4849:	48 89 c2             	mov    rdx,rax
    484c:	48 8d 35 5c 81 00 00 	lea    rsi,[rip+0x815c]        # c9af <_IO_stdin_used+0x9af>
    4853:	48 8d 3d 86 81 00 00 	lea    rdi,[rip+0x8186]        # c9e0 <_IO_stdin_used+0x9e0>
    485a:	b8 00 00 00 00       	mov    eax,0x0
    485f:	e8 3c dc ff ff       	call   24a0 <printf@plt>
    4864:	48 83 c4 10          	add    rsp,0x10
    4868:	0f b6 05 53 57 10 00 	movzx  eax,BYTE PTR [rip+0x105753]        # 109fc2 <use_spi>
    486f:	84 c0                	test   al,al
    4871:	0f 84 8c 00 00 00    	je     4903 <ip4_tcp_decode+0x50a>
    4877:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    487b:	74 1a                	je     4897 <ip4_tcp_decode+0x49e>
    487d:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4881:	74 14                	je     4897 <ip4_tcp_decode+0x49e>
    4883:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4887:	75 0e                	jne    4897 <ip4_tcp_decode+0x49e>
    4889:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    488d:	48 89 c7             	mov    rdi,rax
    4890:	e8 d6 48 00 00       	call   916b <handle_data_pkt>
    4895:	eb 6c                	jmp    4903 <ip4_tcp_decode+0x50a>
    4897:	80 7d a2 00          	cmp    BYTE PTR [rbp-0x5e],0x0
    489b:	74 14                	je     48b1 <ip4_tcp_decode+0x4b8>
    489d:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48a1:	74 0e                	je     48b1 <ip4_tcp_decode+0x4b8>
    48a3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48a7:	48 89 c7             	mov    rdi,rax
    48aa:	e8 a9 47 00 00       	call   9058 <polite_end>
    48af:	eb 52                	jmp    4903 <ip4_tcp_decode+0x50a>
    48b1:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    48b5:	74 14                	je     48cb <ip4_tcp_decode+0x4d2>
    48b7:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    48bb:	75 0e                	jne    48cb <ip4_tcp_decode+0x4d2>
    48bd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48c1:	48 89 c7             	mov    rdi,rax
    48c4:	e8 ec 42 00 00       	call   8bb5 <add_new_conversation>
    48c9:	eb 38                	jmp    4903 <ip4_tcp_decode+0x50a>
    48cb:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    48cf:	74 1a                	je     48eb <ip4_tcp_decode+0x4f2>
    48d1:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48d5:	74 14                	je     48eb <ip4_tcp_decode+0x4f2>
    48d7:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    48db:	75 0e                	jne    48eb <ip4_tcp_decode+0x4f2>
    48dd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48e1:	48 89 c7             	mov    rdi,rax
    48e4:	e8 05 45 00 00       	call   8dee <spi_ud_thw>
    48e9:	eb 18                	jmp    4903 <ip4_tcp_decode+0x50a>
    48eb:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48ef:	74 12                	je     4903 <ip4_tcp_decode+0x50a>
    48f1:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    48f5:	75 0c                	jne    4903 <ip4_tcp_decode+0x50a>
    48f7:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48fb:	48 89 c7             	mov    rdi,rax
    48fe:	e8 b4 45 00 00       	call   8eb7 <update_table>
    4903:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4907:	74 17                	je     4920 <ip4_tcp_decode+0x527>
    4909:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    490d:	74 11                	je     4920 <ip4_tcp_decode+0x527>
    490f:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4913:	75 0b                	jne    4920 <ip4_tcp_decode+0x527>
    4915:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4919:	c7 40 70 01 00 00 00 	mov    DWORD PTR [rax+0x70],0x1
    4920:	80 7d 9f 00          	cmp    BYTE PTR [rbp-0x61],0x0
    4924:	0f 84 8f 01 00 00    	je     4ab9 <ip4_tcp_decode+0x6c0>
    492a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    492e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4932:	48 89 c7             	mov    rdi,rax
    4935:	e8 34 30 00 00       	call   796e <member_exists>
    493a:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    493d:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    4941:	0f 84 db 00 00 00    	je     4a22 <ip4_tcp_decode+0x629>
    4947:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    494a:	48 63 d0             	movsxd rdx,eax
    494d:	48 89 d0             	mov    rax,rdx
    4950:	48 c1 e0 02          	shl    rax,0x2
    4954:	48 01 d0             	add    rax,rdx
    4957:	48 c1 e0 03          	shl    rax,0x3
    495b:	48 01 d0             	add    rax,rdx
    495e:	48 c1 e0 04          	shl    rax,0x4
    4962:	48 8d 15 b7 eb 0e 00 	lea    rdx,[rip+0xeebb7]        # f3520 <watchlist>
    4969:	48 01 d0             	add    rax,rdx
    496c:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    4970:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4974:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4978:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    497c:	48 83 c2 08          	add    rdx,0x8
    4980:	48 89 c6             	mov    rsi,rax
    4983:	48 89 d7             	mov    rdi,rdx
    4986:	e8 25 de ff ff       	call   27b0 <strcpy@plt>
    498b:	bf 00 00 00 00       	mov    edi,0x0
    4990:	e8 1b df ff ff       	call   28b0 <time@plt>
    4995:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    4999:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    499f:	8d 72 01             	lea    esi,[rdx+0x1]
    49a2:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    49a6:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    49ac:	48 89 c1             	mov    rcx,rax
    49af:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49b3:	89 d2                	mov    edx,edx
    49b5:	48 83 c2 28          	add    rdx,0x28
    49b9:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    49be:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49c2:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    49c8:	83 f8 1d             	cmp    eax,0x1d
    49cb:	0f 86 e8 00 00 00    	jbe    4ab9 <ip4_tcp_decode+0x6c0>
    49d1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49d5:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    49dc:	00 00 00 
    49df:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49e3:	48 89 c7             	mov    rdi,rax
    49e6:	e8 41 2b 00 00       	call   752c <tcp_rst_portscan_detect>
    49eb:	84 c0                	test   al,al
    49ed:	0f 84 c6 00 00 00    	je     4ab9 <ip4_tcp_decode+0x6c0>
    49f3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49f7:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    49fe:	00 00 00 
    4a01:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a05:	48 05 50 01 00 00    	add    rax,0x150
    4a0b:	ba f0 00 00 00       	mov    edx,0xf0
    4a10:	be 00 00 00 00       	mov    esi,0x0
    4a15:	48 89 c7             	mov    rdi,rax
    4a18:	e8 93 da ff ff       	call   24b0 <memset@plt>
    4a1d:	e9 97 00 00 00       	jmp    4ab9 <ip4_tcp_decode+0x6c0>
    4a22:	8b 05 f0 c5 00 00    	mov    eax,DWORD PTR [rip+0xc5f0]        # 11018 <watchlist_num>
    4a28:	83 c0 01             	add    eax,0x1
    4a2b:	89 05 e7 c5 00 00    	mov    DWORD PTR [rip+0xc5e7],eax        # 11018 <watchlist_num>
    4a31:	8b 05 e1 c5 00 00    	mov    eax,DWORD PTR [rip+0xc5e1]        # 11018 <watchlist_num>
    4a37:	48 63 d0             	movsxd rdx,eax
    4a3a:	48 89 d0             	mov    rax,rdx
    4a3d:	48 c1 e0 02          	shl    rax,0x2
    4a41:	48 01 d0             	add    rax,rdx
    4a44:	48 c1 e0 03          	shl    rax,0x3
    4a48:	48 01 d0             	add    rax,rdx
    4a4b:	48 c1 e0 04          	shl    rax,0x4
    4a4f:	48 8d 15 ca ea 0e 00 	lea    rdx,[rip+0xeeaca]        # f3520 <watchlist>
    4a56:	48 01 d0             	add    rax,rdx
    4a59:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4a5d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4a61:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4a65:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4a69:	48 83 c2 08          	add    rdx,0x8
    4a6d:	48 89 c6             	mov    rsi,rax
    4a70:	48 89 d7             	mov    rdi,rdx
    4a73:	e8 38 dd ff ff       	call   27b0 <strcpy@plt>
    4a78:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4a7c:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a83:	00 00 00 
    4a86:	bf 00 00 00 00       	mov    edi,0x0
    4a8b:	e8 20 de ff ff       	call   28b0 <time@plt>
    4a90:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4a94:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4a9a:	8d 72 01             	lea    esi,[rdx+0x1]
    4a9d:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4aa1:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4aa7:	48 89 c1             	mov    rcx,rax
    4aaa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4aae:	89 d2                	mov    edx,edx
    4ab0:	48 83 c2 28          	add    rdx,0x28
    4ab4:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4ab9:	8b 05 c9 c5 00 00    	mov    eax,DWORD PTR [rip+0xc5c9]        # 11088 <strict_nmap_host_alive_check>
    4abf:	83 f8 01             	cmp    eax,0x1
    4ac2:	0f 85 f6 00 00 00    	jne    4bbe <ip4_tcp_decode+0x7c5>
    4ac8:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4acc:	74 0c                	je     4ada <ip4_tcp_decode+0x6e1>
    4ace:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4ad2:	74 26                	je     4afa <ip4_tcp_decode+0x701>
    4ad4:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4ad8:	74 20                	je     4afa <ip4_tcp_decode+0x701>
    4ada:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4ade:	0f 84 da 00 00 00    	je     4bbe <ip4_tcp_decode+0x7c5>
    4ae4:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4aeb:	74 0d                	je     4afa <ip4_tcp_decode+0x701>
    4aed:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4af4:	0f 85 c4 00 00 00    	jne    4bbe <ip4_tcp_decode+0x7c5>
    4afa:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    4afd:	3b 45 ac             	cmp    eax,DWORD PTR [rbp-0x54]
    4b00:	76 0a                	jbe    4b0c <ip4_tcp_decode+0x713>
    4b02:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4b06:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b0a:	eb 08                	jmp    4b14 <ip4_tcp_decode+0x71b>
    4b0c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4b10:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b14:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4b18:	48 89 c7             	mov    rdi,rax
    4b1b:	e8 4e 2e 00 00       	call   796e <member_exists>
    4b20:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4b23:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    4b27:	0f 84 91 00 00 00    	je     4bbe <ip4_tcp_decode+0x7c5>
    4b2d:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4b30:	48 63 d0             	movsxd rdx,eax
    4b33:	48 89 d0             	mov    rax,rdx
    4b36:	48 c1 e0 02          	shl    rax,0x2
    4b3a:	48 01 d0             	add    rax,rdx
    4b3d:	48 c1 e0 03          	shl    rax,0x3
    4b41:	48 01 d0             	add    rax,rdx
    4b44:	48 c1 e0 04          	shl    rax,0x4
    4b48:	48 8d 15 d1 e9 0e 00 	lea    rdx,[rip+0xee9d1]        # f3520 <watchlist>
    4b4f:	48 01 d0             	add    rax,rdx
    4b52:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4b56:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b5a:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4b5d:	85 c0                	test   eax,eax
    4b5f:	75 2a                	jne    4b8b <ip4_tcp_decode+0x792>
    4b61:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b65:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b68:	83 f8 01             	cmp    eax,0x1
    4b6b:	75 1e                	jne    4b8b <ip4_tcp_decode+0x792>
    4b6d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b71:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4b78:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b7c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b7f:	8d 50 01             	lea    edx,[rax+0x1]
    4b82:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b86:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4b89:	eb 33                	jmp    4bbe <ip4_tcp_decode+0x7c5>
    4b8b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b8f:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4b92:	85 c0                	test   eax,eax
    4b94:	75 28                	jne    4bbe <ip4_tcp_decode+0x7c5>
    4b96:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b9a:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4b9d:	83 f8 02             	cmp    eax,0x2
    4ba0:	75 1c                	jne    4bbe <ip4_tcp_decode+0x7c5>
    4ba2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4ba6:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4bad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bb1:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bb4:	8d 50 01             	lea    edx,[rax+0x1]
    4bb7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bbb:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4bbe:	0f b6 05 9f 53 10 00 	movzx  eax,BYTE PTR [rip+0x10539f]        # 109f64 <packet_print>
    4bc5:	84 c0                	test   al,al
    4bc7:	74 3a                	je     4c03 <ip4_tcp_decode+0x80a>
    4bc9:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4bcd:	74 34                	je     4c03 <ip4_tcp_decode+0x80a>
    4bcf:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4bd3:	74 2e                	je     4c03 <ip4_tcp_decode+0x80a>
    4bd5:	0f b6 45 a2          	movzx  eax,BYTE PTR [rbp-0x5e]
    4bd9:	83 f0 01             	xor    eax,0x1
    4bdc:	84 c0                	test   al,al
    4bde:	74 23                	je     4c03 <ip4_tcp_decode+0x80a>
    4be0:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4be4:	74 06                	je     4bec <ip4_tcp_decode+0x7f3>
    4be6:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4bea:	75 17                	jne    4c03 <ip4_tcp_decode+0x80a>
    4bec:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4bf0:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4bf4:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4bf8:	48 89 c6             	mov    rsi,rax
    4bfb:	48 89 d7             	mov    rdi,rdx
    4bfe:	e8 e2 39 00 00       	call   85e5 <http_disect>
    4c03:	83 7d a8 15          	cmp    DWORD PTR [rbp-0x58],0x15
    4c07:	74 06                	je     4c0f <ip4_tcp_decode+0x816>
    4c09:	83 7d ac 15          	cmp    DWORD PTR [rbp-0x54],0x15
    4c0d:	75 2d                	jne    4c3c <ip4_tcp_decode+0x843>
    4c0f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4c13:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c17:	c0 e8 04             	shr    al,0x4
    4c1a:	0f b6 c0             	movzx  eax,al
    4c1d:	c1 e0 02             	shl    eax,0x2
    4c20:	48 98                	cdqe   
    4c22:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4c26:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4c2a:	48 01 c2             	add    rdx,rax
    4c2d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c31:	48 89 c6             	mov    rsi,rax
    4c34:	48 89 d7             	mov    rdi,rdx
    4c37:	e8 94 3b 00 00       	call   87d0 <ftp_disect>
    4c3c:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4c43:	74 09                	je     4c4e <ip4_tcp_decode+0x855>
    4c45:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4c4c:	75 29                	jne    4c77 <ip4_tcp_decode+0x87e>
    4c4e:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4c52:	74 23                	je     4c77 <ip4_tcp_decode+0x87e>
    4c54:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4c58:	74 1d                	je     4c77 <ip4_tcp_decode+0x87e>
    4c5a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c5e:	48 8b 00             	mov    rax,QWORD PTR [rax]
    4c61:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
    4c68:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    4c6c:	48 89 ce             	mov    rsi,rcx
    4c6f:	48 89 c7             	mov    rdi,rax
    4c72:	e8 2e 33 00 00       	call   7fa5 <tls_decode>
    4c77:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4c7e:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4c81:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4c85:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c89:	c0 e8 04             	shr    al,0x4
    4c8c:	0f b6 c0             	movzx  eax,al
    4c8f:	c1 e0 02             	shl    eax,0x2
    4c92:	89 c1                	mov    ecx,eax
    4c94:	89 d0                	mov    eax,edx
    4c96:	29 c8                	sub    eax,ecx
    4c98:	8d 50 de             	lea    edx,[rax-0x22]
    4c9b:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c9f:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4ca2:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4ca6:	48 89 c7             	mov    rdi,rax
    4ca9:	e8 95 17 00 00       	call   6443 <rulemgr>
    4cae:	90                   	nop
    4caf:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4cb3:	c9                   	leave  
    4cb4:	c3                   	ret    

0000000000004cb5 <ip4_udp_decode>:
    4cb5:	f3 0f 1e fa          	endbr64 
    4cb9:	55                   	push   rbp
    4cba:	48 89 e5             	mov    rbp,rsp
    4cbd:	48 83 ec 30          	sub    rsp,0x30
    4cc1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4cc5:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4cc9:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4ccd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4cd1:	48 83 c0 22          	add    rax,0x22
    4cd5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4cd9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4cdd:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4ce1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4ce5:	48 89 10             	mov    QWORD PTR [rax],rdx
    4ce8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4cec:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4cf0:	ba 5d 00 00 00       	mov    edx,0x5d
    4cf5:	be 01 00 00 00       	mov    esi,0x1
    4cfa:	48 89 c7             	mov    rdi,rax
    4cfd:	e8 07 02 00 00       	call   4f09 <add_ip_addr_or_inc_counter>
    4d02:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d06:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4d0a:	ba 5d 00 00 00       	mov    edx,0x5d
    4d0f:	be 00 00 00 00       	mov    esi,0x0
    4d14:	48 89 c7             	mov    rdi,rax
    4d17:	e8 ed 01 00 00       	call   4f09 <add_ip_addr_or_inc_counter>
    4d1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d20:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4d23:	0f b7 c0             	movzx  eax,ax
    4d26:	89 c7                	mov    edi,eax
    4d28:	e8 23 d9 ff ff       	call   2650 <ntohs@plt>
    4d2d:	0f b7 c0             	movzx  eax,ax
    4d30:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4d33:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d37:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4d3b:	0f b7 c0             	movzx  eax,ax
    4d3e:	89 c7                	mov    edi,eax
    4d40:	e8 0b d9 ff ff       	call   2650 <ntohs@plt>
    4d45:	0f b7 c0             	movzx  eax,ax
    4d48:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4d4b:	0f b6 05 12 52 10 00 	movzx  eax,BYTE PTR [rip+0x105212]        # 109f64 <packet_print>
    4d52:	84 c0                	test   al,al
    4d54:	74 5d                	je     4db3 <ip4_udp_decode+0xfe>
    4d56:	48 8d 35 c3 7c 00 00 	lea    rsi,[rip+0x7cc3]        # ca20 <_IO_stdin_used+0xa20>
    4d5d:	48 8d 3d c2 7c 00 00 	lea    rdi,[rip+0x7cc2]        # ca26 <_IO_stdin_used+0xa26>
    4d64:	b8 00 00 00 00       	mov    eax,0x0
    4d69:	e8 32 d7 ff ff       	call   24a0 <printf@plt>
    4d6e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d72:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4d76:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d7a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d7e:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4d81:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4d84:	41 89 f0             	mov    r8d,esi
    4d87:	48 89 c6             	mov    rsi,rax
    4d8a:	48 8d 3d 98 7c 00 00 	lea    rdi,[rip+0x7c98]        # ca29 <_IO_stdin_used+0xa29>
    4d91:	b8 00 00 00 00       	mov    eax,0x0
    4d96:	e8 05 d7 ff ff       	call   24a0 <printf@plt>
    4d9b:	48 8d 35 a0 7c 00 00 	lea    rsi,[rip+0x7ca0]        # ca42 <_IO_stdin_used+0xa42>
    4da2:	48 8d 3d 7d 7c 00 00 	lea    rdi,[rip+0x7c7d]        # ca26 <_IO_stdin_used+0xa26>
    4da9:	b8 00 00 00 00       	mov    eax,0x0
    4dae:	e8 ed d6 ff ff       	call   24a0 <printf@plt>
    4db3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4db7:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4dba:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4dbd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dc1:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4dc4:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4dc7:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4dcb:	74 06                	je     4dd3 <ip4_udp_decode+0x11e>
    4dcd:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4dd1:	75 17                	jne    4dea <ip4_udp_decode+0x135>
    4dd3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4dd7:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4ddb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4ddf:	48 89 c6             	mov    rsi,rax
    4de2:	48 89 d7             	mov    rdi,rdx
    4de5:	e8 ad 38 00 00       	call   8697 <dns_disect>
    4dea:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4dee:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4df1:	8d 50 d6             	lea    edx,[rax-0x2a]
    4df4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4df8:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4dfb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dff:	48 89 c7             	mov    rdi,rax
    4e02:	e8 3c 16 00 00       	call   6443 <rulemgr>
    4e07:	90                   	nop
    4e08:	c9                   	leave  
    4e09:	c3                   	ret    

0000000000004e0a <ip4_igmp_decode>:
    4e0a:	f3 0f 1e fa          	endbr64 
    4e0e:	55                   	push   rbp
    4e0f:	48 89 e5             	mov    rbp,rsp
    4e12:	48 83 ec 60          	sub    rsp,0x60
    4e16:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4e1a:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4e1e:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4e22:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4e29:	00 00 
    4e2b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4e2f:	31 c0                	xor    eax,eax
    4e31:	0f b6 05 2c 51 10 00 	movzx  eax,BYTE PTR [rip+0x10512c]        # 109f64 <packet_print>
    4e38:	84 c0                	test   al,al
    4e3a:	0f 84 b1 00 00 00    	je     4ef1 <ip4_igmp_decode+0xe7>
    4e40:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4e44:	48 83 c0 26          	add    rax,0x26
    4e48:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4e4c:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4e50:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4e54:	48 89 c6             	mov    rsi,rax
    4e57:	48 8d 3d ea 7b 00 00 	lea    rdi,[rip+0x7bea]        # ca48 <_IO_stdin_used+0xa48>
    4e5e:	b8 00 00 00 00       	mov    eax,0x0
    4e63:	e8 38 d6 ff ff       	call   24a0 <printf@plt>
    4e68:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4e6c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4e6f:	0f b6 c0             	movzx  eax,al
    4e72:	83 f8 11             	cmp    eax,0x11
    4e75:	74 07                	je     4e7e <ip4_igmp_decode+0x74>
    4e77:	83 f8 22             	cmp    eax,0x22
    4e7a:	74 10                	je     4e8c <ip4_igmp_decode+0x82>
    4e7c:	eb 54                	jmp    4ed2 <ip4_igmp_decode+0xc8>
    4e7e:	48 8d 3d d8 7b 00 00 	lea    rdi,[rip+0x7bd8]        # ca5d <_IO_stdin_used+0xa5d>
    4e85:	e8 76 d6 ff ff       	call   2500 <puts@plt>
    4e8a:	eb 66                	jmp    4ef2 <ip4_igmp_decode+0xe8>
    4e8c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4e90:	48 83 c0 26          	add    rax,0x26
    4e94:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4e98:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4e9c:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4e9f:	89 c7                	mov    edi,eax
    4ea1:	e8 83 e2 ff ff       	call   3129 <ipv4_ntoa>
    4ea6:	48 89 c2             	mov    rdx,rax
    4ea9:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4ead:	48 89 d6             	mov    rsi,rdx
    4eb0:	48 89 c7             	mov    rdi,rax
    4eb3:	e8 f8 d8 ff ff       	call   27b0 <strcpy@plt>
    4eb8:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4ebc:	48 89 c6             	mov    rsi,rax
    4ebf:	48 8d 3d b2 7b 00 00 	lea    rdi,[rip+0x7bb2]        # ca78 <_IO_stdin_used+0xa78>
    4ec6:	b8 00 00 00 00       	mov    eax,0x0
    4ecb:	e8 d0 d5 ff ff       	call   24a0 <printf@plt>
    4ed0:	eb 20                	jmp    4ef2 <ip4_igmp_decode+0xe8>
    4ed2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4ed6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4ed9:	0f b6 c0             	movzx  eax,al
    4edc:	89 c6                	mov    esi,eax
    4ede:	48 8d 3d c9 7b 00 00 	lea    rdi,[rip+0x7bc9]        # caae <_IO_stdin_used+0xaae>
    4ee5:	b8 00 00 00 00       	mov    eax,0x0
    4eea:	e8 b1 d5 ff ff       	call   24a0 <printf@plt>
    4eef:	eb 01                	jmp    4ef2 <ip4_igmp_decode+0xe8>
    4ef1:	90                   	nop
    4ef2:	90                   	nop
    4ef3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4ef7:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4efe:	00 00 
    4f00:	74 05                	je     4f07 <ip4_igmp_decode+0xfd>
    4f02:	e8 69 d8 ff ff       	call   2770 <__stack_chk_fail@plt>
    4f07:	c9                   	leave  
    4f08:	c3                   	ret    

0000000000004f09 <add_ip_addr_or_inc_counter>:
    4f09:	f3 0f 1e fa          	endbr64 
    4f0d:	55                   	push   rbp
    4f0e:	48 89 e5             	mov    rbp,rsp
    4f11:	48 83 ec 60          	sub    rsp,0x60
    4f15:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4f19:	89 f0                	mov    eax,esi
    4f1b:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4f1e:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4f21:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4f28:	00 00 
    4f2a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4f2e:	31 c0                	xor    eax,eax
    4f30:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f34:	ba 08 00 00 00       	mov    edx,0x8
    4f39:	be 00 00 00 00       	mov    esi,0x0
    4f3e:	48 89 c7             	mov    rdi,rax
    4f41:	e8 6a d5 ff ff       	call   24b0 <memset@plt>
    4f46:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4f4a:	ba 1c 00 00 00       	mov    edx,0x1c
    4f4f:	be 00 00 00 00       	mov    esi,0x0
    4f54:	48 89 c7             	mov    rdi,rax
    4f57:	e8 54 d5 ff ff       	call   24b0 <memset@plt>
    4f5c:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4f60:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f64:	ba 18 00 00 00       	mov    edx,0x18
    4f69:	48 89 ce             	mov    rsi,rcx
    4f6c:	48 89 c7             	mov    rdi,rax
    4f6f:	e8 8c d8 ff ff       	call   2800 <strncpy@plt>
    4f74:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4f78:	ba 1c 00 00 00       	mov    edx,0x1c
    4f7d:	be 00 00 00 00       	mov    esi,0x0
    4f82:	48 89 c7             	mov    rdi,rax
    4f85:	e8 26 d5 ff ff       	call   24b0 <memset@plt>
    4f8a:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f8e:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4f92:	48 83 c2 08          	add    rdx,0x8
    4f96:	48 89 c6             	mov    rsi,rax
    4f99:	48 89 d7             	mov    rdi,rdx
    4f9c:	e8 0f d8 ff ff       	call   27b0 <strcpy@plt>
    4fa1:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    4fa5:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    4fa8:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    4fab:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4fae:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4fb2:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    4fb6:	48 89 d1             	mov    rcx,rdx
    4fb9:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 4ff5 <verify_ip_addr>
    4fc0:	be 00 00 00 00       	mov    esi,0x0
    4fc5:	48 89 c7             	mov    rdi,rax
    4fc8:	e8 23 d6 ff ff       	call   25f0 <pthread_create@plt>
    4fcd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4fd1:	be 00 00 00 00       	mov    esi,0x0
    4fd6:	48 89 c7             	mov    rdi,rax
    4fd9:	e8 b2 d4 ff ff       	call   2490 <pthread_join@plt>
    4fde:	90                   	nop
    4fdf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4fe3:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4fea:	00 00 
    4fec:	74 05                	je     4ff3 <add_ip_addr_or_inc_counter+0xea>
    4fee:	e8 7d d7 ff ff       	call   2770 <__stack_chk_fail@plt>
    4ff3:	c9                   	leave  
    4ff4:	c3                   	ret    

0000000000004ff5 <verify_ip_addr>:
    4ff5:	f3 0f 1e fa          	endbr64 
    4ff9:	55                   	push   rbp
    4ffa:	48 89 e5             	mov    rbp,rsp
    4ffd:	48 83 ec 30          	sub    rsp,0x30
    5001:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    5005:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    5009:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    500d:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    5014:	e9 c9 00 00 00       	jmp    50e2 <verify_ip_addr+0xed>
    5019:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    501c:	48 63 d0             	movsxd rdx,eax
    501f:	48 89 d0             	mov    rax,rdx
    5022:	48 c1 e0 02          	shl    rax,0x2
    5026:	48 01 d0             	add    rax,rdx
    5029:	48 c1 e0 03          	shl    rax,0x3
    502d:	48 01 d0             	add    rax,rdx
    5030:	48 c1 e0 04          	shl    rax,0x4
    5034:	48 8d 15 e5 e4 0e 00 	lea    rdx,[rip+0xee4e5]        # f3520 <watchlist>
    503b:	48 01 d0             	add    rax,rdx
    503e:	48 8d 50 08          	lea    rdx,[rax+0x8]
    5042:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5046:	48 83 c0 08          	add    rax,0x8
    504a:	48 89 d6             	mov    rsi,rdx
    504d:	48 89 c7             	mov    rdi,rax
    5050:	e8 2b d7 ff ff       	call   2780 <strcmp@plt>
    5055:	85 c0                	test   eax,eax
    5057:	0f 85 81 00 00 00    	jne    50de <verify_ip_addr+0xe9>
    505d:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    5060:	48 63 d0             	movsxd rdx,eax
    5063:	48 89 d0             	mov    rax,rdx
    5066:	48 c1 e0 02          	shl    rax,0x2
    506a:	48 01 d0             	add    rax,rdx
    506d:	48 c1 e0 03          	shl    rax,0x3
    5071:	48 01 d0             	add    rax,rdx
    5074:	48 c1 e0 04          	shl    rax,0x4
    5078:	48 89 c2             	mov    rdx,rax
    507b:	48 8d 05 f6 e6 0e 00 	lea    rax,[rip+0xee6f6]        # f3778 <watchlist+0x258>
    5082:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    5085:	8d 48 01             	lea    ecx,[rax+0x1]
    5088:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    508b:	48 63 d0             	movsxd rdx,eax
    508e:	48 89 d0             	mov    rax,rdx
    5091:	48 c1 e0 02          	shl    rax,0x2
    5095:	48 01 d0             	add    rax,rdx
    5098:	48 c1 e0 03          	shl    rax,0x3
    509c:	48 01 d0             	add    rax,rdx
    509f:	48 c1 e0 04          	shl    rax,0x4
    50a3:	48 89 c2             	mov    rdx,rax
    50a6:	48 8d 05 cb e6 0e 00 	lea    rax,[rip+0xee6cb]        # f3778 <watchlist+0x258>
    50ad:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    50b0:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50b3:	48 63 d0             	movsxd rdx,eax
    50b6:	48 89 d0             	mov    rax,rdx
    50b9:	48 c1 e0 02          	shl    rax,0x2
    50bd:	48 01 d0             	add    rax,rdx
    50c0:	48 c1 e0 03          	shl    rax,0x3
    50c4:	48 01 d0             	add    rax,rdx
    50c7:	48 c1 e0 04          	shl    rax,0x4
    50cb:	48 8d 15 4e e4 0e 00 	lea    rdx,[rip+0xee44e]        # f3520 <watchlist>
    50d2:	48 01 d0             	add    rax,rdx
    50d5:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    50d9:	e9 f5 00 00 00       	jmp    51d3 <verify_ip_addr+0x1de>
    50de:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    50e2:	8b 05 30 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf30]        # 11018 <watchlist_num>
    50e8:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    50eb:	0f 8e 28 ff ff ff    	jle    5019 <verify_ip_addr+0x24>
    50f1:	bf 90 02 00 00       	mov    edi,0x290
    50f6:	e8 85 d4 ff ff       	call   2580 <malloc@plt>
    50fb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    50ff:	8b 05 13 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf13]        # 11018 <watchlist_num>
    5105:	83 c0 01             	add    eax,0x1
    5108:	89 05 0a bf 00 00    	mov    DWORD PTR [rip+0xbf0a],eax        # 11018 <watchlist_num>
    510e:	8b 05 04 bf 00 00    	mov    eax,DWORD PTR [rip+0xbf04]        # 11018 <watchlist_num>
    5114:	48 63 d0             	movsxd rdx,eax
    5117:	48 89 d0             	mov    rax,rdx
    511a:	48 c1 e0 02          	shl    rax,0x2
    511e:	48 01 d0             	add    rax,rdx
    5121:	48 c1 e0 03          	shl    rax,0x3
    5125:	48 01 d0             	add    rax,rdx
    5128:	48 c1 e0 04          	shl    rax,0x4
    512c:	48 89 c1             	mov    rcx,rax
    512f:	48 8d 05 ea e3 0e 00 	lea    rax,[rip+0xee3ea]        # f3520 <watchlist>
    5136:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    513a:	48 01 c8             	add    rax,rcx
    513d:	48 89 d6             	mov    rsi,rdx
    5140:	ba 52 00 00 00       	mov    edx,0x52
    5145:	48 89 c7             	mov    rdi,rax
    5148:	48 89 d1             	mov    rcx,rdx
    514b:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    514e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5152:	48 83 c0 08          	add    rax,0x8
    5156:	ba 0f 00 00 00       	mov    edx,0xf
    515b:	be 00 00 00 00       	mov    esi,0x0
    5160:	48 89 c7             	mov    rdi,rax
    5163:	e8 48 d3 ff ff       	call   24b0 <memset@plt>
    5168:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    516c:	48 8d 48 08          	lea    rcx,[rax+0x8]
    5170:	8b 05 a2 be 00 00    	mov    eax,DWORD PTR [rip+0xbea2]        # 11018 <watchlist_num>
    5176:	48 63 d0             	movsxd rdx,eax
    5179:	48 89 d0             	mov    rax,rdx
    517c:	48 c1 e0 02          	shl    rax,0x2
    5180:	48 01 d0             	add    rax,rdx
    5183:	48 c1 e0 03          	shl    rax,0x3
    5187:	48 01 d0             	add    rax,rdx
    518a:	48 c1 e0 04          	shl    rax,0x4
    518e:	48 8d 15 8b e3 0e 00 	lea    rdx,[rip+0xee38b]        # f3520 <watchlist>
    5195:	48 01 d0             	add    rax,rdx
    5198:	48 83 c0 08          	add    rax,0x8
    519c:	48 89 ce             	mov    rsi,rcx
    519f:	48 89 c7             	mov    rdi,rax
    51a2:	e8 09 d6 ff ff       	call   27b0 <strcpy@plt>
    51a7:	8b 05 6b be 00 00    	mov    eax,DWORD PTR [rip+0xbe6b]        # 11018 <watchlist_num>
    51ad:	48 63 d0             	movsxd rdx,eax
    51b0:	48 89 d0             	mov    rax,rdx
    51b3:	48 c1 e0 02          	shl    rax,0x2
    51b7:	48 01 d0             	add    rax,rdx
    51ba:	48 c1 e0 03          	shl    rax,0x3
    51be:	48 01 d0             	add    rax,rdx
    51c1:	48 c1 e0 04          	shl    rax,0x4
    51c5:	48 8d 15 54 e3 0e 00 	lea    rdx,[rip+0xee354]        # f3520 <watchlist>
    51cc:	48 01 d0             	add    rax,rdx
    51cf:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    51d3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51d7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    51da:	84 c0                	test   al,al
    51dc:	74 36                	je     5214 <verify_ip_addr+0x21f>
    51de:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51e2:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    51e8:	8d 50 01             	lea    edx,[rax+0x1]
    51eb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51ef:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    51f5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    51f9:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    51ff:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5203:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5206:	01 c2                	add    edx,eax
    5208:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    520c:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    5212:	eb 34                	jmp    5248 <verify_ip_addr+0x253>
    5214:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5218:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    521e:	8d 50 01             	lea    edx,[rax+0x1]
    5221:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5225:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    522b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    522f:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    5235:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5239:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    523c:	01 c2                	add    edx,eax
    523e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5242:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    5248:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    524c:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    5252:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5256:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5259:	01 c2                	add    edx,eax
    525b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    525f:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    5265:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5269:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    526f:	8d 14 00             	lea    edx,[rax+rax*1]
    5272:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5276:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    527c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5280:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    5283:	83 f8 5e             	cmp    eax,0x5e
    5286:	0f 84 9b 00 00 00    	je     5327 <verify_ip_addr+0x332>
    528c:	83 f8 5e             	cmp    eax,0x5e
    528f:	0f 8f cf 00 00 00    	jg     5364 <verify_ip_addr+0x36f>
    5295:	83 f8 5c             	cmp    eax,0x5c
    5298:	74 0a                	je     52a4 <verify_ip_addr+0x2af>
    529a:	83 f8 5d             	cmp    eax,0x5d
    529d:	74 48                	je     52e7 <verify_ip_addr+0x2f2>
    529f:	e9 c0 00 00 00       	jmp    5364 <verify_ip_addr+0x36f>
    52a4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52a8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52ab:	84 c0                	test   al,al
    52ad:	74 1c                	je     52cb <verify_ip_addr+0x2d6>
    52af:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52b3:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    52b9:	8d 50 01             	lea    edx,[rax+0x1]
    52bc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52c0:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    52c6:	e9 d5 00 00 00       	jmp    53a0 <verify_ip_addr+0x3ab>
    52cb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52cf:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    52d5:	8d 50 01             	lea    edx,[rax+0x1]
    52d8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52dc:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    52e2:	e9 b9 00 00 00       	jmp    53a0 <verify_ip_addr+0x3ab>
    52e7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52eb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52ee:	84 c0                	test   al,al
    52f0:	74 1c                	je     530e <verify_ip_addr+0x319>
    52f2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52f6:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    52fc:	8d 50 01             	lea    edx,[rax+0x1]
    52ff:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5303:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5309:	e9 92 00 00 00       	jmp    53a0 <verify_ip_addr+0x3ab>
    530e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5312:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5318:	8d 50 01             	lea    edx,[rax+0x1]
    531b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    531f:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    5325:	eb 79                	jmp    53a0 <verify_ip_addr+0x3ab>
    5327:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    532b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    532e:	84 c0                	test   al,al
    5330:	74 19                	je     534b <verify_ip_addr+0x356>
    5332:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5336:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    533c:	8d 50 01             	lea    edx,[rax+0x1]
    533f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5343:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    5349:	eb 55                	jmp    53a0 <verify_ip_addr+0x3ab>
    534b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    534f:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    5355:	8d 50 01             	lea    edx,[rax+0x1]
    5358:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    535c:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    5362:	eb 3c                	jmp    53a0 <verify_ip_addr+0x3ab>
    5364:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5368:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    536b:	84 c0                	test   al,al
    536d:	74 19                	je     5388 <verify_ip_addr+0x393>
    536f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5373:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    5379:	8d 50 01             	lea    edx,[rax+0x1]
    537c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5380:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    5386:	eb 17                	jmp    539f <verify_ip_addr+0x3aa>
    5388:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    538c:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    5392:	8d 50 01             	lea    edx,[rax+0x1]
    5395:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5399:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    539f:	90                   	nop
    53a0:	b8 01 00 00 00       	mov    eax,0x1
    53a5:	c9                   	leave  
    53a6:	c3                   	ret    

00000000000053a7 <ascii_hexdump>:
    53a7:	f3 0f 1e fa          	endbr64 
    53ab:	55                   	push   rbp
    53ac:	48 89 e5             	mov    rbp,rsp
    53af:	48 83 ec 20          	sub    rsp,0x20
    53b3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    53b7:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    53ba:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    53c1:	eb 52                	jmp    5415 <ascii_hexdump+0x6e>
    53c3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    53c6:	48 63 d0             	movsxd rdx,eax
    53c9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53cd:	48 01 d0             	add    rax,rdx
    53d0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53d3:	3c 20                	cmp    al,0x20
    53d5:	76 30                	jbe    5407 <ascii_hexdump+0x60>
    53d7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    53da:	48 63 d0             	movsxd rdx,eax
    53dd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53e1:	48 01 d0             	add    rax,rdx
    53e4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53e7:	3c 7e                	cmp    al,0x7e
    53e9:	77 1c                	ja     5407 <ascii_hexdump+0x60>
    53eb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    53ee:	48 63 d0             	movsxd rdx,eax
    53f1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53f5:	48 01 d0             	add    rax,rdx
    53f8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53fb:	0f b6 c0             	movzx  eax,al
    53fe:	89 c7                	mov    edi,eax
    5400:	e8 2b d1 ff ff       	call   2530 <putchar@plt>
    5405:	eb 0a                	jmp    5411 <ascii_hexdump+0x6a>
    5407:	bf 2e 00 00 00       	mov    edi,0x2e
    540c:	e8 1f d1 ff ff       	call   2530 <putchar@plt>
    5411:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5415:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5418:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    541b:	7c a6                	jl     53c3 <ascii_hexdump+0x1c>
    541d:	bf 0a 00 00 00       	mov    edi,0xa
    5422:	e8 09 d1 ff ff       	call   2530 <putchar@plt>
    5427:	90                   	nop
    5428:	c9                   	leave  
    5429:	c3                   	ret    

000000000000542a <stdout_alert>:
    542a:	f3 0f 1e fa          	endbr64 
    542e:	55                   	push   rbp
    542f:	48 89 e5             	mov    rbp,rsp
    5432:	53                   	push   rbx
    5433:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    543a:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    5441:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    5448:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    544e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5455:	00 00 
    5457:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    545b:	31 c0                	xor    eax,eax
    545d:	bf 00 00 00 00       	mov    edi,0x0
    5462:	e8 49 d4 ff ff       	call   28b0 <time@plt>
    5467:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    546e:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    5475:	48 89 c7             	mov    rdi,rax
    5478:	e8 f3 d3 ff ff       	call   2870 <localtime@plt>
    547d:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    5480:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    5484:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    548b:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    5492:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    5496:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    549a:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    54a1:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    54a8:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    54ac:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    54b0:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    54b7:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    54be:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    54c2:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    54c9:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    54cf:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    54d5:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    54dc:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    54e3:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    54e9:	8d 48 01             	lea    ecx,[rax+0x1]
    54ec:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    54f2:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    54f8:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    54ff:	57                   	push   rdi
    5500:	56                   	push   rsi
    5501:	48 8d 35 be 75 00 00 	lea    rsi,[rip+0x75be]        # cac6 <_IO_stdin_used+0xac6>
    5508:	48 89 c7             	mov    rdi,rax
    550b:	b8 00 00 00 00       	mov    eax,0x0
    5510:	e8 2b d1 ff ff       	call   2640 <sprintf@plt>
    5515:	48 83 c4 10          	add    rsp,0x10
    5519:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5520:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    5523:	3d 80 00 00 00       	cmp    eax,0x80
    5528:	75 4e                	jne    5578 <stdout_alert+0x14e>
    552a:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5531:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    5535:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    553c:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    5540:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5547:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    554e:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5555:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    555c:	49 89 f9             	mov    r9,rdi
    555f:	49 89 f0             	mov    r8,rsi
    5562:	48 8d 35 79 75 00 00 	lea    rsi,[rip+0x7579]        # cae2 <_IO_stdin_used+0xae2>
    5569:	48 89 c7             	mov    rdi,rax
    556c:	b8 00 00 00 00       	mov    eax,0x0
    5571:	e8 ca d0 ff ff       	call   2640 <sprintf@plt>
    5576:	eb 61                	jmp    55d9 <stdout_alert+0x1af>
    5578:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    557f:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    5582:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5589:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    558d:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5594:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    5598:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    559f:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    55a3:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    55aa:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    55b1:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    55b8:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55bf:	57                   	push   rdi
    55c0:	56                   	push   rsi
    55c1:	48 8d 35 2a 75 00 00 	lea    rsi,[rip+0x752a]        # caf2 <_IO_stdin_used+0xaf2>
    55c8:	48 89 c7             	mov    rdi,rax
    55cb:	b8 00 00 00 00       	mov    eax,0x0
    55d0:	e8 6b d0 ff ff       	call   2640 <sprintf@plt>
    55d5:	48 83 c4 10          	add    rsp,0x10
    55d9:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55e0:	48 89 c6             	mov    rsi,rax
    55e3:	48 8d 3d 1e 75 00 00 	lea    rdi,[rip+0x751e]        # cb08 <_IO_stdin_used+0xb08>
    55ea:	b8 00 00 00 00       	mov    eax,0x0
    55ef:	e8 ac ce ff ff       	call   24a0 <printf@plt>
    55f4:	48 8b 05 35 ba 00 00 	mov    rax,QWORD PTR [rip+0xba35]        # 11030 <def_log_file>
    55fb:	48 8d 35 09 75 00 00 	lea    rsi,[rip+0x7509]        # cb0b <_IO_stdin_used+0xb0b>
    5602:	48 89 c7             	mov    rdi,rax
    5605:	e8 86 cf ff ff       	call   2590 <fopen@plt>
    560a:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    5611:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5618:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    561f:	48 89 d6             	mov    rsi,rdx
    5622:	48 89 c7             	mov    rdi,rax
    5625:	e8 96 d0 ff ff       	call   26c0 <fputs@plt>
    562a:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    5631:	48 89 c7             	mov    rdi,rax
    5634:	e8 b7 d1 ff ff       	call   27f0 <fclose@plt>
    5639:	90                   	nop
    563a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    563e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5645:	00 00 
    5647:	74 05                	je     564e <stdout_alert+0x224>
    5649:	e8 22 d1 ff ff       	call   2770 <__stack_chk_fail@plt>
    564e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5652:	c9                   	leave  
    5653:	c3                   	ret    

0000000000005654 <str_match_parser>:
    5654:	f3 0f 1e fa          	endbr64 
    5658:	55                   	push   rbp
    5659:	48 89 e5             	mov    rbp,rsp
    565c:	53                   	push   rbx
    565d:	48 83 ec 48          	sub    rsp,0x48
    5661:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    5665:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    5669:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5670:	00 00 
    5672:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5676:	31 c0                	xor    eax,eax
    5678:	48 89 e0             	mov    rax,rsp
    567b:	48 89 c3             	mov    rbx,rax
    567e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5682:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5685:	85 c0                	test   eax,eax
    5687:	75 0a                	jne    5693 <str_match_parser+0x3f>
    5689:	b8 00 00 00 00       	mov    eax,0x0
    568e:	e9 e1 01 00 00       	jmp    5874 <str_match_parser+0x220>
    5693:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5697:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    569a:	83 c0 01             	add    eax,0x1
    569d:	01 c0                	add    eax,eax
    569f:	48 98                	cdqe   
    56a1:	48 83 e8 01          	sub    rax,0x1
    56a5:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    56a9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56ad:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56b0:	83 c0 01             	add    eax,0x1
    56b3:	01 c0                	add    eax,eax
    56b5:	48 98                	cdqe   
    56b7:	49 89 c2             	mov    r10,rax
    56ba:	41 bb 00 00 00 00    	mov    r11d,0x0
    56c0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56c4:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56c7:	83 c0 01             	add    eax,0x1
    56ca:	01 c0                	add    eax,eax
    56cc:	48 98                	cdqe   
    56ce:	49 89 c0             	mov    r8,rax
    56d1:	41 b9 00 00 00 00    	mov    r9d,0x0
    56d7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56db:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56de:	83 c0 01             	add    eax,0x1
    56e1:	01 c0                	add    eax,eax
    56e3:	48 98                	cdqe   
    56e5:	ba 10 00 00 00       	mov    edx,0x10
    56ea:	48 83 ea 01          	sub    rdx,0x1
    56ee:	48 01 d0             	add    rax,rdx
    56f1:	be 10 00 00 00       	mov    esi,0x10
    56f6:	ba 00 00 00 00       	mov    edx,0x0
    56fb:	48 f7 f6             	div    rsi
    56fe:	48 6b c0 10          	imul   rax,rax,0x10
    5702:	48 89 c1             	mov    rcx,rax
    5705:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    570c:	48 89 e2             	mov    rdx,rsp
    570f:	48 29 ca             	sub    rdx,rcx
    5712:	48 39 d4             	cmp    rsp,rdx
    5715:	74 12                	je     5729 <str_match_parser+0xd5>
    5717:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    571e:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    5725:	00 00 
    5727:	eb e9                	jmp    5712 <str_match_parser+0xbe>
    5729:	48 89 c2             	mov    rdx,rax
    572c:	81 e2 ff 0f 00 00    	and    edx,0xfff
    5732:	48 29 d4             	sub    rsp,rdx
    5735:	48 89 c2             	mov    rdx,rax
    5738:	81 e2 ff 0f 00 00    	and    edx,0xfff
    573e:	48 85 d2             	test   rdx,rdx
    5741:	74 10                	je     5753 <str_match_parser+0xff>
    5743:	25 ff 0f 00 00       	and    eax,0xfff
    5748:	48 83 e8 08          	sub    rax,0x8
    574c:	48 01 e0             	add    rax,rsp
    574f:	48 83 08 00          	or     QWORD PTR [rax],0x0
    5753:	48 89 e0             	mov    rax,rsp
    5756:	48 83 c0 00          	add    rax,0x0
    575a:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    575e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5762:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5765:	83 c0 01             	add    eax,0x1
    5768:	01 c0                	add    eax,eax
    576a:	48 63 d0             	movsxd rdx,eax
    576d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5771:	be 00 00 00 00       	mov    esi,0x0
    5776:	48 89 c7             	mov    rdi,rax
    5779:	e8 32 cd ff ff       	call   24b0 <memset@plt>
    577e:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    5785:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5789:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    578f:	85 c0                	test   eax,eax
    5791:	74 5f                	je     57f2 <str_match_parser+0x19e>
    5793:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5797:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    579a:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    579d:	eb 42                	jmp    57e1 <str_match_parser+0x18d>
    579f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57a3:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    57a6:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    57a9:	48 98                	cdqe   
    57ab:	48 01 d0             	add    rax,rdx
    57ae:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    57b1:	0f b6 d0             	movzx  edx,al
    57b4:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    57b7:	8d 48 01             	lea    ecx,[rax+0x1]
    57ba:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    57bd:	01 c0                	add    eax,eax
    57bf:	48 63 c8             	movsxd rcx,eax
    57c2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57c6:	48 01 c8             	add    rax,rcx
    57c9:	48 8d 35 3d 73 00 00 	lea    rsi,[rip+0x733d]        # cb0d <_IO_stdin_used+0xb0d>
    57d0:	48 89 c7             	mov    rdi,rax
    57d3:	b8 00 00 00 00       	mov    eax,0x0
    57d8:	e8 63 ce ff ff       	call   2640 <sprintf@plt>
    57dd:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    57e1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57e5:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    57eb:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    57ee:	7c af                	jl     579f <str_match_parser+0x14b>
    57f0:	eb 5a                	jmp    584c <str_match_parser+0x1f8>
    57f2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57f6:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    57f9:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    57fc:	eb 42                	jmp    5840 <str_match_parser+0x1ec>
    57fe:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5802:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5805:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    5808:	48 98                	cdqe   
    580a:	48 01 d0             	add    rax,rdx
    580d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5810:	0f b6 d0             	movzx  edx,al
    5813:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5816:	8d 48 01             	lea    ecx,[rax+0x1]
    5819:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    581c:	01 c0                	add    eax,eax
    581e:	48 63 c8             	movsxd rcx,eax
    5821:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5825:	48 01 c8             	add    rax,rcx
    5828:	48 8d 35 de 72 00 00 	lea    rsi,[rip+0x72de]        # cb0d <_IO_stdin_used+0xb0d>
    582f:	48 89 c7             	mov    rdi,rax
    5832:	b8 00 00 00 00       	mov    eax,0x0
    5837:	e8 04 ce ff ff       	call   2640 <sprintf@plt>
    583c:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    5840:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5844:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5847:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    584a:	7c b2                	jl     57fe <str_match_parser+0x1aa>
    584c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5850:	48 8d 50 40          	lea    rdx,[rax+0x40]
    5854:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5858:	48 89 d6             	mov    rsi,rdx
    585b:	48 89 c7             	mov    rdi,rax
    585e:	e8 3d ce ff ff       	call   26a0 <strstr@plt>
    5863:	48 85 c0             	test   rax,rax
    5866:	74 07                	je     586f <str_match_parser+0x21b>
    5868:	b8 01 00 00 00       	mov    eax,0x1
    586d:	eb 05                	jmp    5874 <str_match_parser+0x220>
    586f:	b8 00 00 00 00       	mov    eax,0x0
    5874:	48 89 dc             	mov    rsp,rbx
    5877:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    587b:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    5882:	00 00 
    5884:	74 05                	je     588b <str_match_parser+0x237>
    5886:	e8 e5 ce ff ff       	call   2770 <__stack_chk_fail@plt>
    588b:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    588f:	c9                   	leave  
    5890:	c3                   	ret    

0000000000005891 <is_blocked_ipv4>:
    5891:	f3 0f 1e fa          	endbr64 
    5895:	55                   	push   rbp
    5896:	48 89 e5             	mov    rbp,rsp
    5899:	48 83 ec 20          	sub    rsp,0x20
    589d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    58a1:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    58a8:	eb 3b                	jmp    58e5 <is_blocked_ipv4+0x54>
    58aa:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    58ad:	48 63 d0             	movsxd rdx,eax
    58b0:	48 89 d0             	mov    rax,rdx
    58b3:	48 c1 e0 03          	shl    rax,0x3
    58b7:	48 01 d0             	add    rax,rdx
    58ba:	48 01 c0             	add    rax,rax
    58bd:	48 8d 15 1c da 0e 00 	lea    rdx,[rip+0xeda1c]        # f32e0 <blocked_ipv4_addrs>
    58c4:	48 01 c2             	add    rdx,rax
    58c7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    58cb:	48 89 d6             	mov    rsi,rdx
    58ce:	48 89 c7             	mov    rdi,rax
    58d1:	e8 aa ce ff ff       	call   2780 <strcmp@plt>
    58d6:	85 c0                	test   eax,eax
    58d8:	75 07                	jne    58e1 <is_blocked_ipv4+0x50>
    58da:	b8 01 00 00 00       	mov    eax,0x1
    58df:	eb 14                	jmp    58f5 <is_blocked_ipv4+0x64>
    58e1:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    58e5:	8b 05 25 b7 00 00    	mov    eax,DWORD PTR [rip+0xb725]        # 11010 <blk_ipv4_len>
    58eb:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    58ee:	7e ba                	jle    58aa <is_blocked_ipv4+0x19>
    58f0:	b8 00 00 00 00       	mov    eax,0x0
    58f5:	c9                   	leave  
    58f6:	c3                   	ret    

00000000000058f7 <none>:
    58f7:	f3 0f 1e fa          	endbr64 
    58fb:	55                   	push   rbp
    58fc:	48 89 e5             	mov    rbp,rsp
    58ff:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5903:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5907:	b8 01 00 00 00       	mov    eax,0x1
    590c:	5d                   	pop    rbp
    590d:	c3                   	ret    

000000000000590e <pcre_match>:
    590e:	f3 0f 1e fa          	endbr64 
    5912:	55                   	push   rbp
    5913:	48 89 e5             	mov    rbp,rsp
    5916:	48 83 ec 10          	sub    rsp,0x10
    591a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    591e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5922:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5926:	48 8b 00             	mov    rax,QWORD PTR [rax]
    5929:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    592d:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    5934:	41 b8 00 00 00 00    	mov    r8d,0x0
    593a:	b9 00 00 00 00       	mov    ecx,0x0
    593f:	ba 00 00 00 00       	mov    edx,0x0
    5944:	48 89 c6             	mov    rsi,rax
    5947:	e8 54 cc ff ff       	call   25a0 <regexec@plt>
    594c:	83 f8 01             	cmp    eax,0x1
    594f:	75 07                	jne    5958 <pcre_match+0x4a>
    5951:	b8 00 00 00 00       	mov    eax,0x0
    5956:	eb 05                	jmp    595d <pcre_match+0x4f>
    5958:	b8 01 00 00 00       	mov    eax,0x1
    595d:	c9                   	leave  
    595e:	c3                   	ret    

000000000000595f <rule_library_parser>:
    595f:	f3 0f 1e fa          	endbr64 
    5963:	55                   	push   rbp
    5964:	48 89 e5             	mov    rbp,rsp
    5967:	53                   	push   rbx
    5968:	48 83 ec 48          	sub    rsp,0x48
    596c:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    5970:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5977:	00 00 
    5979:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    597d:	31 c0                	xor    eax,eax
    597f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5983:	48 8d 35 8e 71 00 00 	lea    rsi,[rip+0x718e]        # cb18 <_IO_stdin_used+0xb18>
    598a:	48 89 c7             	mov    rdi,rax
    598d:	e8 fe cb ff ff       	call   2590 <fopen@plt>
    5992:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    5996:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    599b:	75 22                	jne    59bf <rule_library_parser+0x60>
    599d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    59a1:	48 89 c6             	mov    rsi,rax
    59a4:	48 8d 3d 75 71 00 00 	lea    rdi,[rip+0x7175]        # cb20 <_IO_stdin_used+0xb20>
    59ab:	b8 00 00 00 00       	mov    eax,0x0
    59b0:	e8 eb ca ff ff       	call   24a0 <printf@plt>
    59b5:	bf 01 00 00 00       	mov    edi,0x1
    59ba:	e8 61 cb ff ff       	call   2520 <exit@plt>
    59bf:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    59c6:	00 
    59c7:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    59ce:	00 
    59cf:	e9 70 05 00 00       	jmp    5f44 <rule_library_parser+0x5e5>
    59d4:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    59d8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59dc:	48 8d 35 63 71 00 00 	lea    rsi,[rip+0x7163]        # cb46 <_IO_stdin_used+0xb46>
    59e3:	48 89 c7             	mov    rdi,rax
    59e6:	e8 25 ce ff ff       	call   2810 <strcspn@plt>
    59eb:	48 01 d8             	add    rax,rbx
    59ee:	c6 00 00             	mov    BYTE PTR [rax],0x0
    59f1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    59f5:	48 89 c7             	mov    rdi,rax
    59f8:	e8 b9 05 00 00       	call   5fb6 <is_comment>
    59fd:	84 c0                	test   al,al
    59ff:	74 05                	je     5a06 <rule_library_parser+0xa7>
    5a01:	e9 3e 05 00 00       	jmp    5f44 <rule_library_parser+0x5e5>
    5a06:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a0a:	ba 1a 00 00 00       	mov    edx,0x1a
    5a0f:	48 8d 35 32 71 00 00 	lea    rsi,[rip+0x7132]        # cb48 <_IO_stdin_used+0xb48>
    5a16:	48 89 c7             	mov    rdi,rax
    5a19:	e8 52 cb ff ff       	call   2570 <strncmp@plt>
    5a1e:	85 c0                	test   eax,eax
    5a20:	75 39                	jne    5a5b <rule_library_parser+0xfc>
    5a22:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a26:	48 83 c0 1a          	add    rax,0x1a
    5a2a:	48 8d 35 32 71 00 00 	lea    rsi,[rip+0x7132]        # cb63 <_IO_stdin_used+0xb63>
    5a31:	48 89 c7             	mov    rdi,rax
    5a34:	e8 47 cd ff ff       	call   2780 <strcmp@plt>
    5a39:	85 c0                	test   eax,eax
    5a3b:	75 0f                	jne    5a4c <rule_library_parser+0xed>
    5a3d:	c7 05 3d b6 00 00 01 	mov    DWORD PTR [rip+0xb63d],0x1        # 11084 <strict_icmp_timestamp_req>
    5a44:	00 00 00 
    5a47:	e9 e2 04 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5a4c:	c7 05 2e b6 00 00 00 	mov    DWORD PTR [rip+0xb62e],0x0        # 11084 <strict_icmp_timestamp_req>
    5a53:	00 00 00 
    5a56:	e9 d3 04 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5a5b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a5f:	ba 1d 00 00 00       	mov    edx,0x1d
    5a64:	48 8d 35 fc 70 00 00 	lea    rsi,[rip+0x70fc]        # cb67 <_IO_stdin_used+0xb67>
    5a6b:	48 89 c7             	mov    rdi,rax
    5a6e:	e8 fd ca ff ff       	call   2570 <strncmp@plt>
    5a73:	85 c0                	test   eax,eax
    5a75:	75 39                	jne    5ab0 <rule_library_parser+0x151>
    5a77:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a7b:	48 83 c0 1d          	add    rax,0x1d
    5a7f:	48 8d 35 dd 70 00 00 	lea    rsi,[rip+0x70dd]        # cb63 <_IO_stdin_used+0xb63>
    5a86:	48 89 c7             	mov    rdi,rax
    5a89:	e8 f2 cc ff ff       	call   2780 <strcmp@plt>
    5a8e:	85 c0                	test   eax,eax
    5a90:	75 0f                	jne    5aa1 <rule_library_parser+0x142>
    5a92:	c7 05 ec b5 00 00 01 	mov    DWORD PTR [rip+0xb5ec],0x1        # 11088 <strict_nmap_host_alive_check>
    5a99:	00 00 00 
    5a9c:	e9 8d 04 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5aa1:	c7 05 dd b5 00 00 00 	mov    DWORD PTR [rip+0xb5dd],0x0        # 11088 <strict_nmap_host_alive_check>
    5aa8:	00 00 00 
    5aab:	e9 7e 04 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5ab0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ab4:	ba 17 00 00 00       	mov    edx,0x17
    5ab9:	48 8d 35 c5 70 00 00 	lea    rsi,[rip+0x70c5]        # cb85 <_IO_stdin_used+0xb85>
    5ac0:	48 89 c7             	mov    rdi,rax
    5ac3:	e8 a8 ca ff ff       	call   2570 <strncmp@plt>
    5ac8:	85 c0                	test   eax,eax
    5aca:	75 43                	jne    5b0f <rule_library_parser+0x1b0>
    5acc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ad0:	48 89 c7             	mov    rdi,rax
    5ad3:	e8 48 cb ff ff       	call   2620 <strlen@plt>
    5ad8:	48 83 f8 17          	cmp    rax,0x17
    5adc:	77 16                	ja     5af4 <rule_library_parser+0x195>
    5ade:	48 8d 3d b8 70 00 00 	lea    rdi,[rip+0x70b8]        # cb9d <_IO_stdin_used+0xb9d>
    5ae5:	e8 16 ca ff ff       	call   2500 <puts@plt>
    5aea:	bf 01 00 00 00       	mov    edi,0x1
    5aef:	e8 2c ca ff ff       	call   2520 <exit@plt>
    5af4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5af8:	48 83 c0 17          	add    rax,0x17
    5afc:	48 89 c7             	mov    rdi,rax
    5aff:	e8 ec cb ff ff       	call   26f0 <atoi@plt>
    5b04:	89 05 56 44 10 00    	mov    DWORD PTR [rip+0x104456],eax        # 109f60 <clean_delay_pkts>
    5b0a:	e9 1f 04 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5b0f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b13:	ba 18 00 00 00       	mov    edx,0x18
    5b18:	48 8d 35 98 70 00 00 	lea    rsi,[rip+0x7098]        # cbb7 <_IO_stdin_used+0xbb7>
    5b1f:	48 89 c7             	mov    rdi,rax
    5b22:	e8 49 ca ff ff       	call   2570 <strncmp@plt>
    5b27:	85 c0                	test   eax,eax
    5b29:	75 46                	jne    5b71 <rule_library_parser+0x212>
    5b2b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b2f:	48 89 c7             	mov    rdi,rax
    5b32:	e8 e9 ca ff ff       	call   2620 <strlen@plt>
    5b37:	48 83 f8 18          	cmp    rax,0x18
    5b3b:	75 16                	jne    5b53 <rule_library_parser+0x1f4>
    5b3d:	48 8d 3d 59 70 00 00 	lea    rdi,[rip+0x7059]        # cb9d <_IO_stdin_used+0xb9d>
    5b44:	e8 b7 c9 ff ff       	call   2500 <puts@plt>
    5b49:	bf 01 00 00 00       	mov    edi,0x1
    5b4e:	e8 cd c9 ff ff       	call   2520 <exit@plt>
    5b53:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b57:	48 83 c0 18          	add    rax,0x18
    5b5b:	48 89 c7             	mov    rdi,rax
    5b5e:	e8 8d cb ff ff       	call   26f0 <atoi@plt>
    5b63:	48 98                	cdqe   
    5b65:	48 89 05 4c b7 00 00 	mov    QWORD PTR [rip+0xb74c],rax        # 112b8 <clean_delay>
    5b6c:	e9 bd 03 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5b71:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b75:	ba 0b 00 00 00       	mov    edx,0xb
    5b7a:	48 8d 35 4f 70 00 00 	lea    rsi,[rip+0x704f]        # cbd0 <_IO_stdin_used+0xbd0>
    5b81:	48 89 c7             	mov    rdi,rax
    5b84:	e8 e7 c9 ff ff       	call   2570 <strncmp@plt>
    5b89:	85 c0                	test   eax,eax
    5b8b:	75 33                	jne    5bc0 <rule_library_parser+0x261>
    5b8d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b91:	48 83 c0 0b          	add    rax,0xb
    5b95:	48 8d 35 c7 6f 00 00 	lea    rsi,[rip+0x6fc7]        # cb63 <_IO_stdin_used+0xb63>
    5b9c:	48 89 c7             	mov    rdi,rax
    5b9f:	e8 dc cb ff ff       	call   2780 <strcmp@plt>
    5ba4:	85 c0                	test   eax,eax
    5ba6:	75 0c                	jne    5bb4 <rule_library_parser+0x255>
    5ba8:	c6 05 72 43 10 00 01 	mov    BYTE PTR [rip+0x104372],0x1        # 109f21 <use_sqlite>
    5baf:	e9 7a 03 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5bb4:	c6 05 66 43 10 00 00 	mov    BYTE PTR [rip+0x104366],0x0        # 109f21 <use_sqlite>
    5bbb:	e9 6e 03 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5bc0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bc4:	ba 15 00 00 00       	mov    edx,0x15
    5bc9:	48 8d 35 0c 70 00 00 	lea    rsi,[rip+0x700c]        # cbdc <_IO_stdin_used+0xbdc>
    5bd0:	48 89 c7             	mov    rdi,rax
    5bd3:	e8 98 c9 ff ff       	call   2570 <strncmp@plt>
    5bd8:	85 c0                	test   eax,eax
    5bda:	75 34                	jne    5c10 <rule_library_parser+0x2b1>
    5bdc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5be0:	48 83 c0 15          	add    rax,0x15
    5be4:	48 89 c6             	mov    rsi,rax
    5be7:	48 8d 3d 52 43 10 00 	lea    rdi,[rip+0x104352]        # 109f40 <sqlite_db_path>
    5bee:	e8 bd cb ff ff       	call   27b0 <strcpy@plt>
    5bf3:	48 8d 35 46 43 10 00 	lea    rsi,[rip+0x104346]        # 109f40 <sqlite_db_path>
    5bfa:	48 8d 3d f1 6f 00 00 	lea    rdi,[rip+0x6ff1]        # cbf2 <_IO_stdin_used+0xbf2>
    5c01:	b8 00 00 00 00       	mov    eax,0x0
    5c06:	e8 9a 2c 00 00       	call   88a5 <livedebug>
    5c0b:	e9 1e 03 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5c10:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c14:	ba 0b 00 00 00       	mov    edx,0xb
    5c19:	48 8d 35 eb 6f 00 00 	lea    rsi,[rip+0x6feb]        # cc0b <_IO_stdin_used+0xc0b>
    5c20:	48 89 c7             	mov    rdi,rax
    5c23:	e8 48 c9 ff ff       	call   2570 <strncmp@plt>
    5c28:	85 c0                	test   eax,eax
    5c2a:	75 34                	jne    5c60 <rule_library_parser+0x301>
    5c2c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c30:	48 83 c0 0b          	add    rax,0xb
    5c34:	48 89 c6             	mov    rsi,rax
    5c37:	48 8d 3d 32 43 10 00 	lea    rdi,[rip+0x104332]        # 109f70 <input_adapter>
    5c3e:	e8 6d cb ff ff       	call   27b0 <strcpy@plt>
    5c43:	48 8d 35 26 43 10 00 	lea    rsi,[rip+0x104326]        # 109f70 <input_adapter>
    5c4a:	48 8d 3d c7 6f 00 00 	lea    rdi,[rip+0x6fc7]        # cc18 <_IO_stdin_used+0xc18>
    5c51:	b8 00 00 00 00       	mov    eax,0x0
    5c56:	e8 4a 2c 00 00       	call   88a5 <livedebug>
    5c5b:	e9 ce 02 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5c60:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c64:	ba 0c 00 00 00       	mov    edx,0xc
    5c69:	48 8d 35 db 6f 00 00 	lea    rsi,[rip+0x6fdb]        # cc4b <_IO_stdin_used+0xc4b>
    5c70:	48 89 c7             	mov    rdi,rax
    5c73:	e8 f8 c8 ff ff       	call   2570 <strncmp@plt>
    5c78:	85 c0                	test   eax,eax
    5c7a:	75 34                	jne    5cb0 <rule_library_parser+0x351>
    5c7c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c80:	48 83 c0 0c          	add    rax,0xc
    5c84:	48 89 c6             	mov    rsi,rax
    5c87:	48 8d 3d f2 42 10 00 	lea    rdi,[rip+0x1042f2]        # 109f80 <output_adapter>
    5c8e:	e8 1d cb ff ff       	call   27b0 <strcpy@plt>
    5c93:	48 8d 35 e6 42 10 00 	lea    rsi,[rip+0x1042e6]        # 109f80 <output_adapter>
    5c9a:	48 8d 3d b7 6f 00 00 	lea    rdi,[rip+0x6fb7]        # cc58 <_IO_stdin_used+0xc58>
    5ca1:	b8 00 00 00 00       	mov    eax,0x0
    5ca6:	e8 fa 2b 00 00       	call   88a5 <livedebug>
    5cab:	e9 7e 02 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5cb0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cb4:	ba 05 00 00 00       	mov    edx,0x5
    5cb9:	48 8d 35 cc 6f 00 00 	lea    rsi,[rip+0x6fcc]        # cc8c <_IO_stdin_used+0xc8c>
    5cc0:	48 89 c7             	mov    rdi,rax
    5cc3:	e8 a8 c8 ff ff       	call   2570 <strncmp@plt>
    5cc8:	85 c0                	test   eax,eax
    5cca:	0f 85 81 00 00 00    	jne    5d51 <rule_library_parser+0x3f2>
    5cd0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cd4:	48 83 c0 05          	add    rax,0x5
    5cd8:	48 89 c6             	mov    rsi,rax
    5cdb:	48 8d 3d b0 6f 00 00 	lea    rdi,[rip+0x6fb0]        # cc92 <_IO_stdin_used+0xc92>
    5ce2:	b8 00 00 00 00       	mov    eax,0x0
    5ce7:	e8 b9 2b 00 00       	call   88a5 <livedebug>
    5cec:	48 8d 3d a8 6f 00 00 	lea    rdi,[rip+0x6fa8]        # cc9b <_IO_stdin_used+0xc9b>
    5cf3:	b8 00 00 00 00       	mov    eax,0x0
    5cf8:	e8 a3 c7 ff ff       	call   24a0 <printf@plt>
    5cfd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d01:	48 83 c0 05          	add    rax,0x5
    5d05:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5d08:	0f b6 15 98 6f 00 00 	movzx  edx,BYTE PTR [rip+0x6f98]        # cca7 <_IO_stdin_used+0xca7>
    5d0f:	0f b6 c0             	movzx  eax,al
    5d12:	0f b6 d2             	movzx  edx,dl
    5d15:	29 d0                	sub    eax,edx
    5d17:	85 c0                	test   eax,eax
    5d19:	75 1b                	jne    5d36 <rule_library_parser+0x3d7>
    5d1b:	c7 05 ff b2 00 00 02 	mov    DWORD PTR [rip+0xb2ff],0x2        # 11024 <VIGIL_MODE>
    5d22:	00 00 00 
    5d25:	48 8d 3d 7d 6f 00 00 	lea    rdi,[rip+0x6f7d]        # cca9 <_IO_stdin_used+0xca9>
    5d2c:	e8 cf c7 ff ff       	call   2500 <puts@plt>
    5d31:	e9 f8 01 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5d36:	c7 05 e4 b2 00 00 01 	mov    DWORD PTR [rip+0xb2e4],0x1        # 11024 <VIGIL_MODE>
    5d3d:	00 00 00 
    5d40:	48 8d 3d 79 6f 00 00 	lea    rdi,[rip+0x6f79]        # ccc0 <_IO_stdin_used+0xcc0>
    5d47:	e8 b4 c7 ff ff       	call   2500 <puts@plt>
    5d4c:	e9 dd 01 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5d51:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d55:	ba 08 00 00 00       	mov    edx,0x8
    5d5a:	48 8d 35 76 6f 00 00 	lea    rsi,[rip+0x6f76]        # ccd7 <_IO_stdin_used+0xcd7>
    5d61:	48 89 c7             	mov    rdi,rax
    5d64:	e8 07 c8 ff ff       	call   2570 <strncmp@plt>
    5d69:	85 c0                	test   eax,eax
    5d6b:	75 34                	jne    5da1 <rule_library_parser+0x442>
    5d6d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d71:	48 83 c0 08          	add    rax,0x8
    5d75:	48 89 c6             	mov    rsi,rax
    5d78:	48 8d 3d 11 42 10 00 	lea    rdi,[rip+0x104211]        # 109f90 <local_ip>
    5d7f:	e8 2c ca ff ff       	call   27b0 <strcpy@plt>
    5d84:	48 8d 35 05 42 10 00 	lea    rsi,[rip+0x104205]        # 109f90 <local_ip>
    5d8b:	48 8d 3d 4e 6f 00 00 	lea    rdi,[rip+0x6f4e]        # cce0 <_IO_stdin_used+0xce0>
    5d92:	b8 00 00 00 00       	mov    eax,0x0
    5d97:	e8 09 2b 00 00       	call   88a5 <livedebug>
    5d9c:	e9 8d 01 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5da1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5da5:	ba 06 00 00 00       	mov    edx,0x6
    5daa:	48 8d 35 4a 6f 00 00 	lea    rsi,[rip+0x6f4a]        # ccfb <_IO_stdin_used+0xcfb>
    5db1:	48 89 c7             	mov    rdi,rax
    5db4:	e8 b7 c7 ff ff       	call   2570 <strncmp@plt>
    5db9:	85 c0                	test   eax,eax
    5dbb:	75 1c                	jne    5dd9 <rule_library_parser+0x47a>
    5dbd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5dc1:	48 83 c0 06          	add    rax,0x6
    5dc5:	48 89 c6             	mov    rsi,rax
    5dc8:	48 8d 3d e1 41 10 00 	lea    rdi,[rip+0x1041e1]        # 109fb0 <def_gw>
    5dcf:	e8 dc c9 ff ff       	call   27b0 <strcpy@plt>
    5dd4:	e9 55 01 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5dd9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ddd:	ba 08 00 00 00       	mov    edx,0x8
    5de2:	48 8d 35 19 6f 00 00 	lea    rsi,[rip+0x6f19]        # cd02 <_IO_stdin_used+0xd02>
    5de9:	48 89 c7             	mov    rdi,rax
    5dec:	e8 7f c7 ff ff       	call   2570 <strncmp@plt>
    5df1:	85 c0                	test   eax,eax
    5df3:	75 3f                	jne    5e34 <rule_library_parser+0x4d5>
    5df5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5df9:	48 83 c0 08          	add    rax,0x8
    5dfd:	48 8d 35 5f 6d 00 00 	lea    rsi,[rip+0x6d5f]        # cb63 <_IO_stdin_used+0xb63>
    5e04:	48 89 c7             	mov    rdi,rax
    5e07:	e8 74 c9 ff ff       	call   2780 <strcmp@plt>
    5e0c:	85 c0                	test   eax,eax
    5e0e:	75 18                	jne    5e28 <rule_library_parser+0x4c9>
    5e10:	c6 05 ab 41 10 00 01 	mov    BYTE PTR [rip+0x1041ab],0x1        # 109fc2 <use_spi>
    5e17:	48 8d 3d ed 6e 00 00 	lea    rdi,[rip+0x6eed]        # cd0b <_IO_stdin_used+0xd0b>
    5e1e:	e8 dd c6 ff ff       	call   2500 <puts@plt>
    5e23:	e9 06 01 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5e28:	c6 05 93 41 10 00 00 	mov    BYTE PTR [rip+0x104193],0x0        # 109fc2 <use_spi>
    5e2f:	e9 fa 00 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5e34:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e38:	ba 09 00 00 00       	mov    edx,0x9
    5e3d:	48 8d 35 e0 6e 00 00 	lea    rsi,[rip+0x6ee0]        # cd24 <_IO_stdin_used+0xd24>
    5e44:	48 89 c7             	mov    rdi,rax
    5e47:	e8 24 c7 ff ff       	call   2570 <strncmp@plt>
    5e4c:	85 c0                	test   eax,eax
    5e4e:	75 27                	jne    5e77 <rule_library_parser+0x518>
    5e50:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e54:	48 89 c7             	mov    rdi,rax
    5e57:	e8 83 01 00 00       	call   5fdf <rstrip>
    5e5c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e60:	48 83 c0 09          	add    rax,0x9
    5e64:	48 89 c7             	mov    rdi,rax
    5e67:	e8 f2 4f 00 00       	call   ae5e <homenet_toi>
    5e6c:	89 05 52 41 10 00    	mov    DWORD PTR [rip+0x104152],eax        # 109fc4 <homenet>
    5e72:	e9 b7 00 00 00       	jmp    5f2e <rule_library_parser+0x5cf>
    5e77:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e7b:	ba 0e 00 00 00       	mov    edx,0xe
    5e80:	48 8d 35 a7 6e 00 00 	lea    rsi,[rip+0x6ea7]        # cd2e <_IO_stdin_used+0xd2e>
    5e87:	48 89 c7             	mov    rdi,rax
    5e8a:	e8 e1 c6 ff ff       	call   2570 <strncmp@plt>
    5e8f:	85 c0                	test   eax,eax
    5e91:	75 24                	jne    5eb7 <rule_library_parser+0x558>
    5e93:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e97:	48 89 c7             	mov    rdi,rax
    5e9a:	e8 40 01 00 00       	call   5fdf <rstrip>
    5e9f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ea3:	48 83 c0 0e          	add    rax,0xe
    5ea7:	48 89 c7             	mov    rdi,rax
    5eaa:	e8 af 4f 00 00       	call   ae5e <homenet_toi>
    5eaf:	89 05 13 41 10 00    	mov    DWORD PTR [rip+0x104113],eax        # 109fc8 <homenetmask>
    5eb5:	eb 77                	jmp    5f2e <rule_library_parser+0x5cf>
    5eb7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ebb:	ba 09 00 00 00       	mov    edx,0x9
    5ec0:	48 8d 35 76 6e 00 00 	lea    rsi,[rip+0x6e76]        # cd3d <_IO_stdin_used+0xd3d>
    5ec7:	48 89 c7             	mov    rdi,rax
    5eca:	e8 a1 c6 ff ff       	call   2570 <strncmp@plt>
    5ecf:	85 c0                	test   eax,eax
    5ed1:	75 3f                	jne    5f12 <rule_library_parser+0x5b3>
    5ed3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ed7:	48 89 c7             	mov    rdi,rax
    5eda:	e8 00 01 00 00       	call   5fdf <rstrip>
    5edf:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ee3:	48 83 c0 09          	add    rax,0x9
    5ee7:	48 8d 35 59 6e 00 00 	lea    rsi,[rip+0x6e59]        # cd47 <_IO_stdin_used+0xd47>
    5eee:	48 89 c7             	mov    rdi,rax
    5ef1:	e8 8a c8 ff ff       	call   2780 <strcmp@plt>
    5ef6:	85 c0                	test   eax,eax
    5ef8:	75 0c                	jne    5f06 <rule_library_parser+0x5a7>
    5efa:	c7 05 64 40 10 00 04 	mov    DWORD PTR [rip+0x104064],0x4        # 109f68 <vigil_location>
    5f01:	00 00 00 
    5f04:	eb 28                	jmp    5f2e <rule_library_parser+0x5cf>
    5f06:	c7 05 58 40 10 00 03 	mov    DWORD PTR [rip+0x104058],0x3        # 109f68 <vigil_location>
    5f0d:	00 00 00 
    5f10:	eb 1c                	jmp    5f2e <rule_library_parser+0x5cf>
    5f12:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f16:	48 89 c7             	mov    rdi,rax
    5f19:	e8 7e 00 00 00       	call   5f9c <is_rule>
    5f1e:	84 c0                	test   al,al
    5f20:	74 0c                	je     5f2e <rule_library_parser+0x5cf>
    5f22:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f26:	48 89 c7             	mov    rdi,rax
    5f29:	e8 18 01 00 00       	call   6046 <rule_parser>
    5f2e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f32:	ba 08 00 00 00       	mov    edx,0x8
    5f37:	be 00 00 00 00       	mov    esi,0x0
    5f3c:	48 89 c7             	mov    rdi,rax
    5f3f:	e8 6c c5 ff ff       	call   24b0 <memset@plt>
    5f44:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5f48:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5f4c:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5f50:	48 89 ce             	mov    rsi,rcx
    5f53:	48 89 c7             	mov    rdi,rax
    5f56:	e8 45 c8 ff ff       	call   27a0 <getline@plt>
    5f5b:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5f5f:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5f64:	0f 85 6a fa ff ff    	jne    59d4 <rule_library_parser+0x75>
    5f6a:	8b 05 b4 b0 00 00    	mov    eax,DWORD PTR [rip+0xb0b4]        # 11024 <VIGIL_MODE>
    5f70:	3d ff ff 00 00       	cmp    eax,0xffff
    5f75:	75 0a                	jne    5f81 <rule_library_parser+0x622>
    5f77:	c7 05 a3 b0 00 00 01 	mov    DWORD PTR [rip+0xb0a3],0x1        # 11024 <VIGIL_MODE>
    5f7e:	00 00 00 
    5f81:	90                   	nop
    5f82:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5f86:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5f8d:	00 00 
    5f8f:	74 05                	je     5f96 <rule_library_parser+0x637>
    5f91:	e8 da c7 ff ff       	call   2770 <__stack_chk_fail@plt>
    5f96:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5f9a:	c9                   	leave  
    5f9b:	c3                   	ret    

0000000000005f9c <is_rule>:
    5f9c:	f3 0f 1e fa          	endbr64 
    5fa0:	55                   	push   rbp
    5fa1:	48 89 e5             	mov    rbp,rsp
    5fa4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5fa8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5fac:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5faf:	3c 24                	cmp    al,0x24
    5fb1:	0f 94 c0             	sete   al
    5fb4:	5d                   	pop    rbp
    5fb5:	c3                   	ret    

0000000000005fb6 <is_comment>:
    5fb6:	f3 0f 1e fa          	endbr64 
    5fba:	55                   	push   rbp
    5fbb:	48 89 e5             	mov    rbp,rsp
    5fbe:	48 83 ec 10          	sub    rsp,0x10
    5fc2:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5fc6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5fca:	be 23 00 00 00       	mov    esi,0x23
    5fcf:	48 89 c7             	mov    rdi,rax
    5fd2:	e8 49 c7 ff ff       	call   2720 <strchr@plt>
    5fd7:	48 85 c0             	test   rax,rax
    5fda:	0f 95 c0             	setne  al
    5fdd:	c9                   	leave  
    5fde:	c3                   	ret    

0000000000005fdf <rstrip>:
    5fdf:	f3 0f 1e fa          	endbr64 
    5fe3:	55                   	push   rbp
    5fe4:	48 89 e5             	mov    rbp,rsp
    5fe7:	48 83 ec 10          	sub    rsp,0x10
    5feb:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5fef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5ff3:	48 8d 35 4c 6b 00 00 	lea    rsi,[rip+0x6b4c]        # cb46 <_IO_stdin_used+0xb46>
    5ffa:	48 89 c7             	mov    rdi,rax
    5ffd:	e8 0e c8 ff ff       	call   2810 <strcspn@plt>
    6002:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6006:	48 01 d0             	add    rax,rdx
    6009:	c6 00 00             	mov    BYTE PTR [rax],0x0
    600c:	90                   	nop
    600d:	c9                   	leave  
    600e:	c3                   	ret    

000000000000600f <syntax_error>:
    600f:	f3 0f 1e fa          	endbr64 
    6013:	55                   	push   rbp
    6014:	48 89 e5             	mov    rbp,rsp
    6017:	48 83 ec 10          	sub    rsp,0x10
    601b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    601f:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    6022:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6026:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6029:	89 c6                	mov    esi,eax
    602b:	48 8d 3d 1e 6d 00 00 	lea    rdi,[rip+0x6d1e]        # cd50 <_IO_stdin_used+0xd50>
    6032:	b8 00 00 00 00       	mov    eax,0x0
    6037:	e8 64 c4 ff ff       	call   24a0 <printf@plt>
    603c:	bf 01 00 00 00       	mov    edi,0x1
    6041:	e8 da c4 ff ff       	call   2520 <exit@plt>

0000000000006046 <rule_parser>:
    6046:	f3 0f 1e fa          	endbr64 
    604a:	55                   	push   rbp
    604b:	48 89 e5             	mov    rbp,rsp
    604e:	48 83 ec 40          	sub    rsp,0x40
    6052:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    6056:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    605d:	00 00 
    605f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6063:	31 c0                	xor    eax,eax
    6065:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6069:	48 83 c0 01          	add    rax,0x1
    606d:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    6071:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6075:	48 8d 35 9c 6a 00 00 	lea    rsi,[rip+0x6a9c]        # cb18 <_IO_stdin_used+0xb18>
    607c:	48 89 c7             	mov    rdi,rax
    607f:	e8 0c c5 ff ff       	call   2590 <fopen@plt>
    6084:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6088:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    608d:	75 22                	jne    60b1 <rule_parser+0x6b>
    608f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6093:	48 89 c6             	mov    rsi,rax
    6096:	48 8d 3d d3 6c 00 00 	lea    rdi,[rip+0x6cd3]        # cd70 <_IO_stdin_used+0xd70>
    609d:	b8 00 00 00 00       	mov    eax,0x0
    60a2:	e8 f9 c3 ff ff       	call   24a0 <printf@plt>
    60a7:	bf 01 00 00 00       	mov    edi,0x1
    60ac:	e8 6f c4 ff ff       	call   2520 <exit@plt>
    60b1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60b5:	48 89 c6             	mov    rsi,rax
    60b8:	48 8d 3d e4 6c 00 00 	lea    rdi,[rip+0x6ce4]        # cda3 <_IO_stdin_used+0xda3>
    60bf:	b8 00 00 00 00       	mov    eax,0x0
    60c4:	e8 d7 c3 ff ff       	call   24a0 <printf@plt>
    60c9:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    60d0:	00 
    60d1:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    60d8:	00 
    60d9:	eb 54                	jmp    612f <rule_parser+0xe9>
    60db:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    60df:	48 89 c7             	mov    rdi,rax
    60e2:	e8 cf fe ff ff       	call   5fb6 <is_comment>
    60e7:	84 c0                	test   al,al
    60e9:	74 02                	je     60ed <rule_parser+0xa7>
    60eb:	eb 42                	jmp    612f <rule_parser+0xe9>
    60ed:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    60f1:	48 89 c7             	mov    rdi,rax
    60f4:	e8 e6 fe ff ff       	call   5fdf <rstrip>
    60f9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    60fd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6100:	0f b6 c0             	movzx  eax,al
    6103:	f7 d8                	neg    eax
    6105:	85 c0                	test   eax,eax
    6107:	75 02                	jne    610b <rule_parser+0xc5>
    6109:	eb 24                	jmp    612f <rule_parser+0xe9>
    610b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    610f:	48 8d 35 9e 6c 00 00 	lea    rsi,[rip+0x6c9e]        # cdb4 <_IO_stdin_used+0xdb4>
    6116:	48 89 c7             	mov    rdi,rax
    6119:	e8 82 c5 ff ff       	call   26a0 <strstr@plt>
    611e:	48 85 c0             	test   rax,rax
    6121:	74 0c                	je     612f <rule_parser+0xe9>
    6123:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6127:	48 89 c7             	mov    rdi,rax
    612a:	e8 bf 38 00 00       	call   99ee <line_parser>
    612f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6133:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6137:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    613b:	48 89 ce             	mov    rsi,rcx
    613e:	48 89 c7             	mov    rdi,rax
    6141:	e8 5a c6 ff ff       	call   27a0 <getline@plt>
    6146:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    614a:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    614f:	75 8a                	jne    60db <rule_parser+0x95>
    6151:	0f b6 05 c8 3d 10 00 	movzx  eax,BYTE PTR [rip+0x103dc8]        # 109f20 <debug_mode>
    6158:	84 c0                	test   al,al
    615a:	74 18                	je     6174 <rule_parser+0x12e>
    615c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6160:	48 89 c6             	mov    rsi,rax
    6163:	48 8d 3d 50 6c 00 00 	lea    rdi,[rip+0x6c50]        # cdba <_IO_stdin_used+0xdba>
    616a:	b8 00 00 00 00       	mov    eax,0x0
    616f:	e8 2c c3 ff ff       	call   24a0 <printf@plt>
    6174:	90                   	nop
    6175:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6179:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    6180:	00 00 
    6182:	74 05                	je     6189 <rule_parser+0x143>
    6184:	e8 e7 c5 ff ff       	call   2770 <__stack_chk_fail@plt>
    6189:	c9                   	leave  
    618a:	c3                   	ret    

000000000000618b <deny_conf_parser>:
    618b:	f3 0f 1e fa          	endbr64 
    618f:	55                   	push   rbp
    6190:	48 89 e5             	mov    rbp,rsp
    6193:	48 83 ec 50          	sub    rsp,0x50
    6197:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    619b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    61a2:	00 00 
    61a4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    61a8:	31 c0                	xor    eax,eax
    61aa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    61ae:	48 8d 35 63 69 00 00 	lea    rsi,[rip+0x6963]        # cb18 <_IO_stdin_used+0xb18>
    61b5:	48 89 c7             	mov    rdi,rax
    61b8:	e8 d3 c3 ff ff       	call   2590 <fopen@plt>
    61bd:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    61c1:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    61c6:	75 22                	jne    61ea <deny_conf_parser+0x5f>
    61c8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    61cc:	48 89 c6             	mov    rsi,rax
    61cf:	48 8d 3d fa 6b 00 00 	lea    rdi,[rip+0x6bfa]        # cdd0 <_IO_stdin_used+0xdd0>
    61d6:	b8 00 00 00 00       	mov    eax,0x0
    61db:	e8 c0 c2 ff ff       	call   24a0 <printf@plt>
    61e0:	bf 01 00 00 00       	mov    edi,0x1
    61e5:	e8 36 c3 ff ff       	call   2520 <exit@plt>
    61ea:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    61f1:	00 
    61f2:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    61f9:	00 
    61fa:	e9 9a 00 00 00       	jmp    6299 <deny_conf_parser+0x10e>
    61ff:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6203:	48 89 c7             	mov    rdi,rax
    6206:	e8 d4 fd ff ff       	call   5fdf <rstrip>
    620b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    620f:	48 89 c7             	mov    rdi,rax
    6212:	e8 9f fd ff ff       	call   5fb6 <is_comment>
    6217:	84 c0                	test   al,al
    6219:	74 02                	je     621d <deny_conf_parser+0x92>
    621b:	eb 7c                	jmp    6299 <deny_conf_parser+0x10e>
    621d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6221:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6224:	0f b6 c0             	movzx  eax,al
    6227:	f7 d8                	neg    eax
    6229:	85 c0                	test   eax,eax
    622b:	75 02                	jne    622f <deny_conf_parser+0xa4>
    622d:	eb 6a                	jmp    6299 <deny_conf_parser+0x10e>
    622f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6233:	48 8d 35 c7 6b 00 00 	lea    rsi,[rip+0x6bc7]        # ce01 <_IO_stdin_used+0xe01>
    623a:	48 89 c7             	mov    rdi,rax
    623d:	e8 5e c4 ff ff       	call   26a0 <strstr@plt>
    6242:	48 85 c0             	test   rax,rax
    6245:	74 52                	je     6299 <deny_conf_parser+0x10e>
    6247:	8b 05 c3 ad 00 00    	mov    eax,DWORD PTR [rip+0xadc3]        # 11010 <blk_ipv4_len>
    624d:	83 c0 01             	add    eax,0x1
    6250:	89 05 ba ad 00 00    	mov    DWORD PTR [rip+0xadba],eax        # 11010 <blk_ipv4_len>
    6256:	8b 05 b4 ad 00 00    	mov    eax,DWORD PTR [rip+0xadb4]        # 11010 <blk_ipv4_len>
    625c:	48 63 d0             	movsxd rdx,eax
    625f:	48 89 d0             	mov    rax,rdx
    6262:	48 c1 e0 03          	shl    rax,0x3
    6266:	48 01 d0             	add    rax,rdx
    6269:	48 01 c0             	add    rax,rax
    626c:	48 8d 15 6d d0 0e 00 	lea    rdx,[rip+0xed06d]        # f32e0 <blocked_ipv4_addrs>
    6273:	48 01 d0             	add    rax,rdx
    6276:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    627a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    627e:	48 83 c0 05          	add    rax,0x5
    6282:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    6286:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    628a:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    628e:	48 89 d6             	mov    rsi,rdx
    6291:	48 89 c7             	mov    rdi,rax
    6294:	e8 17 c5 ff ff       	call   27b0 <strcpy@plt>
    6299:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    629d:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    62a1:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    62a5:	48 89 ce             	mov    rsi,rcx
    62a8:	48 89 c7             	mov    rdi,rax
    62ab:	e8 f0 c4 ff ff       	call   27a0 <getline@plt>
    62b0:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    62b4:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    62b9:	0f 85 40 ff ff ff    	jne    61ff <deny_conf_parser+0x74>
    62bf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62c3:	48 85 c0             	test   rax,rax
    62c6:	74 0c                	je     62d4 <deny_conf_parser+0x149>
    62c8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62cc:	48 89 c7             	mov    rdi,rax
    62cf:	e8 3c c3 ff ff       	call   2610 <free@plt>
    62d4:	90                   	nop
    62d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    62d9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    62e0:	00 00 
    62e2:	74 05                	je     62e9 <deny_conf_parser+0x15e>
    62e4:	e8 87 c4 ff ff       	call   2770 <__stack_chk_fail@plt>
    62e9:	c9                   	leave  
    62ea:	c3                   	ret    

00000000000062eb <host_mon_parser>:
    62eb:	f3 0f 1e fa          	endbr64 
    62ef:	55                   	push   rbp
    62f0:	48 89 e5             	mov    rbp,rsp
    62f3:	48 83 ec 10          	sub    rsp,0x10
    62f7:	48 8b 05 3a ad 00 00 	mov    rax,QWORD PTR [rip+0xad3a]        # 11038 <default_host_conf>
    62fe:	48 8d 35 13 68 00 00 	lea    rsi,[rip+0x6813]        # cb18 <_IO_stdin_used+0xb18>
    6305:	48 89 c7             	mov    rdi,rax
    6308:	e8 83 c2 ff ff       	call   2590 <fopen@plt>
    630d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6311:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    6316:	75 25                	jne    633d <host_mon_parser+0x52>
    6318:	48 8b 05 19 ad 00 00 	mov    rax,QWORD PTR [rip+0xad19]        # 11038 <default_host_conf>
    631f:	48 89 c6             	mov    rsi,rax
    6322:	48 8d 3d dd 6a 00 00 	lea    rdi,[rip+0x6add]        # ce06 <_IO_stdin_used+0xe06>
    6329:	b8 00 00 00 00       	mov    eax,0x0
    632e:	e8 6d c1 ff ff       	call   24a0 <printf@plt>
    6333:	bf 01 00 00 00       	mov    edi,0x1
    6338:	e8 e3 c1 ff ff       	call   2520 <exit@plt>
    633d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6341:	48 89 c7             	mov    rdi,rax
    6344:	e8 a7 c4 ff ff       	call   27f0 <fclose@plt>
    6349:	90                   	nop
    634a:	c9                   	leave  
    634b:	c3                   	ret    

000000000000634c <test_encrypt>:
    634c:	f3 0f 1e fa          	endbr64 
    6350:	55                   	push   rbp
    6351:	48 89 e5             	mov    rbp,rsp
    6354:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6358:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    635c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6360:	0f b6 80 48 01 00 00 	movzx  eax,BYTE PTR [rax+0x148]
    6367:	84 c0                	test   al,al
    6369:	74 13                	je     637e <test_encrypt+0x32>
    636b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    636f:	0f b6 40 38          	movzx  eax,BYTE PTR [rax+0x38]
    6373:	84 c0                	test   al,al
    6375:	74 07                	je     637e <test_encrypt+0x32>
    6377:	b8 00 00 00 00       	mov    eax,0x0
    637c:	eb 05                	jmp    6383 <test_encrypt+0x37>
    637e:	b8 01 00 00 00       	mov    eax,0x1
    6383:	5d                   	pop    rbp
    6384:	c3                   	ret    

0000000000006385 <rule_app>:
    6385:	f3 0f 1e fa          	endbr64 
    6389:	55                   	push   rbp
    638a:	48 89 e5             	mov    rbp,rsp
    638d:	48 83 ec 20          	sub    rsp,0x20
    6391:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6395:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    6399:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    639d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63a1:	48 89 d6             	mov    rsi,rdx
    63a4:	48 89 c7             	mov    rdi,rax
    63a7:	e8 55 03 00 00       	call   6701 <r_engine>
    63ac:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    63af:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    63b3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63b7:	48 89 d6             	mov    rsi,rdx
    63ba:	48 89 c7             	mov    rdi,rax
    63bd:	e8 8a 49 00 00       	call   ad4c <d_engine>
    63c2:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    63c5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63c9:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    63d0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    63d4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    63d8:	48 89 d6             	mov    rsi,rdx
    63db:	48 89 c7             	mov    rdi,rax
    63de:	ff d1                	call   rcx
    63e0:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    63e3:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    63e7:	74 40                	je     6429 <rule_app+0xa4>
    63e9:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    63ed:	74 3a                	je     6429 <rule_app+0xa4>
    63ef:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    63f3:	74 34                	je     6429 <rule_app+0xa4>
    63f5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63f9:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    6400:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6404:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6408:	ba 00 00 00 00       	mov    edx,0x0
    640d:	48 89 ce             	mov    rsi,rcx
    6410:	48 89 c7             	mov    rdi,rax
    6413:	41 ff d0             	call   r8
    6416:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    641a:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    641d:	8d 50 01             	lea    edx,[rax+0x1]
    6420:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6424:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    6427:	eb 17                	jmp    6440 <rule_app+0xbb>
    6429:	8b 05 f5 ab 00 00    	mov    eax,DWORD PTR [rip+0xabf5]        # 11024 <VIGIL_MODE>
    642f:	83 f8 02             	cmp    eax,0x2
    6432:	75 0c                	jne    6440 <rule_app+0xbb>
    6434:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6438:	48 89 c7             	mov    rdi,rax
    643b:	e8 44 25 00 00       	call   8984 <forward_packet>
    6440:	90                   	nop
    6441:	c9                   	leave  
    6442:	c3                   	ret    

0000000000006443 <rulemgr>:
    6443:	f3 0f 1e fa          	endbr64 
    6447:	55                   	push   rbp
    6448:	48 89 e5             	mov    rbp,rsp
    644b:	48 83 ec 20          	sub    rsp,0x20
    644f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6453:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    645a:	e9 8f 02 00 00       	jmp    66ee <rulemgr+0x2ab>
    645f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6462:	8d 50 01             	lea    edx,[rax+0x1]
    6465:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    6468:	48 98                	cdqe   
    646a:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    6471:	48 8d 15 68 ae 00 00 	lea    rdx,[rip+0xae68]        # 112e0 <rules>
    6478:	48 01 d0             	add    rax,rdx
    647b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    647f:	0f b6 05 46 3b 10 00 	movzx  eax,BYTE PTR [rip+0x103b46]        # 109fcc <in_test_mode>
    6486:	84 c0                	test   al,al
    6488:	74 30                	je     64ba <rulemgr+0x77>
    648a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    648e:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    6491:	83 f8 46             	cmp    eax,0x46
    6494:	75 0d                	jne    64a3 <rulemgr+0x60>
    6496:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    649a:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    64a1:	eb 17                	jmp    64ba <rulemgr+0x77>
    64a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64a7:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64aa:	83 f8 45             	cmp    eax,0x45
    64ad:	75 0b                	jne    64ba <rulemgr+0x77>
    64af:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64b3:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    64ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64be:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    64c4:	83 f8 ff             	cmp    eax,0xffffffff
    64c7:	74 19                	je     64e2 <rulemgr+0x9f>
    64c9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    64cd:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    64d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64d4:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    64da:	39 c2                	cmp    edx,eax
    64dc:	0f 85 0c 02 00 00    	jne    66ee <rulemgr+0x2ab>
    64e2:	0f b6 05 97 ab 00 00 	movzx  eax,BYTE PTR [rip+0xab97]        # 11080 <demo_mode>
    64e9:	84 c0                	test   al,al
    64eb:	75 0f                	jne    64fc <rulemgr+0xb9>
    64ed:	8b 05 75 3a 10 00    	mov    eax,DWORD PTR [rip+0x103a75]        # 109f68 <vigil_location>
    64f3:	83 f8 03             	cmp    eax,0x3
    64f6:	0f 85 a1 00 00 00    	jne    659d <rulemgr+0x15a>
    64fc:	8b 05 66 3a 10 00    	mov    eax,DWORD PTR [rip+0x103a66]        # 109f68 <vigil_location>
    6502:	83 f8 03             	cmp    eax,0x3
    6505:	0f 85 e3 01 00 00    	jne    66ee <rulemgr+0x2ab>
    650b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    650f:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6512:	83 f8 ff             	cmp    eax,0xffffffff
    6515:	74 16                	je     652d <rulemgr+0xea>
    6517:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    651b:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    651e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6522:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6525:	39 c2                	cmp    edx,eax
    6527:	0f 85 c1 01 00 00    	jne    66ee <rulemgr+0x2ab>
    652d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6531:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6534:	83 f8 ff             	cmp    eax,0xffffffff
    6537:	74 16                	je     654f <rulemgr+0x10c>
    6539:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    653d:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6540:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6544:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6547:	39 c2                	cmp    edx,eax
    6549:	0f 85 9f 01 00 00    	jne    66ee <rulemgr+0x2ab>
    654f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6553:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6557:	48 89 d6             	mov    rsi,rdx
    655a:	48 89 c7             	mov    rdi,rax
    655d:	e8 97 03 00 00       	call   68f9 <test_tcp_session_status>
    6562:	84 c0                	test   al,al
    6564:	0f 84 84 01 00 00    	je     66ee <rulemgr+0x2ab>
    656a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    656e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6572:	48 89 d6             	mov    rsi,rdx
    6575:	48 89 c7             	mov    rdi,rax
    6578:	e8 cf fd ff ff       	call   634c <test_encrypt>
    657d:	84 c0                	test   al,al
    657f:	0f 84 69 01 00 00    	je     66ee <rulemgr+0x2ab>
    6585:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6589:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    658d:	48 89 d6             	mov    rsi,rdx
    6590:	48 89 c7             	mov    rdi,rax
    6593:	e8 ed fd ff ff       	call   6385 <rule_app>
    6598:	e9 51 01 00 00       	jmp    66ee <rulemgr+0x2ab>
    659d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65a1:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    65a4:	83 f8 47             	cmp    eax,0x47
    65a7:	74 16                	je     65bf <rulemgr+0x17c>
    65a9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65ad:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    65b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65b4:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    65b7:	39 c2                	cmp    edx,eax
    65b9:	0f 85 2f 01 00 00    	jne    66ee <rulemgr+0x2ab>
    65bf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65c3:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    65c9:	3d 80 00 00 00       	cmp    eax,0x80
    65ce:	75 18                	jne    65e8 <rulemgr+0x1a5>
    65d0:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65d4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65d8:	48 89 d6             	mov    rsi,rdx
    65db:	48 89 c7             	mov    rdi,rax
    65de:	e8 a2 fd ff ff       	call   6385 <rule_app>
    65e3:	e9 06 01 00 00       	jmp    66ee <rulemgr+0x2ab>
    65e8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65ec:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    65ef:	83 f8 47             	cmp    eax,0x47
    65f2:	75 7d                	jne    6671 <rulemgr+0x22e>
    65f4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65f8:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    65fb:	83 f8 ff             	cmp    eax,0xffffffff
    65fe:	74 28                	je     6628 <rulemgr+0x1e5>
    6600:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6604:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    6607:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    660b:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    660e:	39 c2                	cmp    edx,eax
    6610:	74 16                	je     6628 <rulemgr+0x1e5>
    6612:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6616:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    6619:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    661d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6620:	39 c2                	cmp    edx,eax
    6622:	0f 85 c6 00 00 00    	jne    66ee <rulemgr+0x2ab>
    6628:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    662c:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    662f:	83 f8 ff             	cmp    eax,0xffffffff
    6632:	74 28                	je     665c <rulemgr+0x219>
    6634:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6638:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    663b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    663f:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6642:	39 c2                	cmp    edx,eax
    6644:	74 16                	je     665c <rulemgr+0x219>
    6646:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    664a:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    664d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6651:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6654:	39 c2                	cmp    edx,eax
    6656:	0f 85 92 00 00 00    	jne    66ee <rulemgr+0x2ab>
    665c:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6660:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6664:	48 89 d6             	mov    rsi,rdx
    6667:	48 89 c7             	mov    rdi,rax
    666a:	e8 16 fd ff ff       	call   6385 <rule_app>
    666f:	eb 7d                	jmp    66ee <rulemgr+0x2ab>
    6671:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6675:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6678:	83 f8 ff             	cmp    eax,0xffffffff
    667b:	74 12                	je     668f <rulemgr+0x24c>
    667d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6681:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    6684:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6688:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    668b:	39 c2                	cmp    edx,eax
    668d:	75 5f                	jne    66ee <rulemgr+0x2ab>
    668f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6693:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6696:	83 f8 ff             	cmp    eax,0xffffffff
    6699:	74 12                	je     66ad <rulemgr+0x26a>
    669b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    669f:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    66a2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66a6:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    66a9:	39 c2                	cmp    edx,eax
    66ab:	75 41                	jne    66ee <rulemgr+0x2ab>
    66ad:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    66b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66b5:	48 89 d6             	mov    rsi,rdx
    66b8:	48 89 c7             	mov    rdi,rax
    66bb:	e8 39 02 00 00       	call   68f9 <test_tcp_session_status>
    66c0:	84 c0                	test   al,al
    66c2:	74 2a                	je     66ee <rulemgr+0x2ab>
    66c4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    66c8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66cc:	48 89 d6             	mov    rsi,rdx
    66cf:	48 89 c7             	mov    rdi,rax
    66d2:	e8 75 fc ff ff       	call   634c <test_encrypt>
    66d7:	84 c0                	test   al,al
    66d9:	74 13                	je     66ee <rulemgr+0x2ab>
    66db:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    66df:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66e3:	48 89 d6             	mov    rsi,rdx
    66e6:	48 89 c7             	mov    rdi,rax
    66e9:	e8 97 fc ff ff       	call   6385 <rule_app>
    66ee:	8b 05 20 a9 00 00    	mov    eax,DWORD PTR [rip+0xa920]        # 11014 <num_rules>
    66f4:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    66f7:	0f 8e 62 fd ff ff    	jle    645f <rulemgr+0x1c>
    66fd:	90                   	nop
    66fe:	90                   	nop
    66ff:	c9                   	leave  
    6700:	c3                   	ret    

0000000000006701 <r_engine>:
    6701:	f3 0f 1e fa          	endbr64 
    6705:	55                   	push   rbp
    6706:	48 89 e5             	mov    rbp,rsp
    6709:	48 83 ec 10          	sub    rsp,0x10
    670d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6711:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6715:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6719:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    671c:	3d 80 00 00 00       	cmp    eax,0x80
    6721:	0f 85 d9 00 00 00    	jne    6800 <r_engine+0xff>
    6727:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    672b:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    6732:	84 c0                	test   al,al
    6734:	74 25                	je     675b <r_engine+0x5a>
    6736:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    673a:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    673e:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    6742:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6746:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    674d:	38 c2                	cmp    dl,al
    674f:	74 0a                	je     675b <r_engine+0x5a>
    6751:	b8 00 00 00 00       	mov    eax,0x0
    6756:	e9 9c 01 00 00       	jmp    68f7 <r_engine+0x1f6>
    675b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    675f:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    6766:	84 c0                	test   al,al
    6768:	74 26                	je     6790 <r_engine+0x8f>
    676a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    676e:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6772:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    6776:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    677a:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    6781:	66 39 c2             	cmp    dx,ax
    6784:	74 0a                	je     6790 <r_engine+0x8f>
    6786:	b8 00 00 00 00       	mov    eax,0x0
    678b:	e9 67 01 00 00       	jmp    68f7 <r_engine+0x1f6>
    6790:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6794:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    679b:	84 c0                	test   al,al
    679d:	74 26                	je     67c5 <r_engine+0xc4>
    679f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67a3:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67a7:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    67ab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67af:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    67b6:	66 39 c2             	cmp    dx,ax
    67b9:	74 0a                	je     67c5 <r_engine+0xc4>
    67bb:	b8 00 00 00 00       	mov    eax,0x0
    67c0:	e9 32 01 00 00       	jmp    68f7 <r_engine+0x1f6>
    67c5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67c9:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    67d0:	84 c0                	test   al,al
    67d2:	0f 84 dc 00 00 00    	je     68b4 <r_engine+0x1b3>
    67d8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67dc:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67e0:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    67e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67e7:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    67ee:	38 c2                	cmp    dl,al
    67f0:	0f 84 be 00 00 00    	je     68b4 <r_engine+0x1b3>
    67f6:	b8 00 00 00 00       	mov    eax,0x0
    67fb:	e9 f7 00 00 00       	jmp    68f7 <r_engine+0x1f6>
    6800:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6804:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6807:	83 f8 7e             	cmp    eax,0x7e
    680a:	0f 85 a4 00 00 00    	jne    68b4 <r_engine+0x1b3>
    6810:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6814:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    681b:	84 c0                	test   al,al
    681d:	74 2e                	je     684d <r_engine+0x14c>
    681f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6823:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6827:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    682a:	89 c7                	mov    edi,eax
    682c:	e8 3f be ff ff       	call   2670 <ntohl@plt>
    6831:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6835:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    683c:	0f b7 d2             	movzx  edx,dx
    683f:	39 d0                	cmp    eax,edx
    6841:	74 0a                	je     684d <r_engine+0x14c>
    6843:	b8 00 00 00 00       	mov    eax,0x0
    6848:	e9 aa 00 00 00       	jmp    68f7 <r_engine+0x1f6>
    684d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6851:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    6858:	84 c0                	test   al,al
    685a:	74 29                	je     6885 <r_engine+0x184>
    685c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6860:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    6867:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    686b:	48 83 c0 68          	add    rax,0x68
    686f:	48 89 d6             	mov    rsi,rdx
    6872:	48 89 c7             	mov    rdi,rax
    6875:	e8 06 bf ff ff       	call   2780 <strcmp@plt>
    687a:	85 c0                	test   eax,eax
    687c:	74 07                	je     6885 <r_engine+0x184>
    687e:	b8 00 00 00 00       	mov    eax,0x0
    6883:	eb 72                	jmp    68f7 <r_engine+0x1f6>
    6885:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6889:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    6890:	84 c0                	test   al,al
    6892:	74 20                	je     68b4 <r_engine+0x1b3>
    6894:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6898:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    689c:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    689f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68a3:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    68a9:	39 c2                	cmp    edx,eax
    68ab:	74 07                	je     68b4 <r_engine+0x1b3>
    68ad:	b8 00 00 00 00       	mov    eax,0x0
    68b2:	eb 43                	jmp    68f7 <r_engine+0x1f6>
    68b4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68b8:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    68bc:	48 85 c0             	test   rax,rax
    68bf:	74 31                	je     68f2 <r_engine+0x1f1>
    68c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68c5:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    68cc:	84 c0                	test   al,al
    68ce:	74 22                	je     68f2 <r_engine+0x1f1>
    68d0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68d4:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    68d8:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    68dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68e0:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    68e7:	38 c2                	cmp    dl,al
    68e9:	74 07                	je     68f2 <r_engine+0x1f1>
    68eb:	b8 00 00 00 00       	mov    eax,0x0
    68f0:	eb 05                	jmp    68f7 <r_engine+0x1f6>
    68f2:	b8 01 00 00 00       	mov    eax,0x1
    68f7:	c9                   	leave  
    68f8:	c3                   	ret    

00000000000068f9 <test_tcp_session_status>:
    68f9:	f3 0f 1e fa          	endbr64 
    68fd:	55                   	push   rbp
    68fe:	48 89 e5             	mov    rbp,rsp
    6901:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6905:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6909:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    690d:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6913:	83 f8 7e             	cmp    eax,0x7e
    6916:	75 34                	jne    694c <test_tcp_session_status+0x53>
    6918:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    691c:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    691f:	83 f8 7e             	cmp    eax,0x7e
    6922:	75 28                	jne    694c <test_tcp_session_status+0x53>
    6924:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6928:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    692e:	83 f8 01             	cmp    eax,0x1
    6931:	75 12                	jne    6945 <test_tcp_session_status+0x4c>
    6933:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6937:	8b 40 70             	mov    eax,DWORD PTR [rax+0x70]
    693a:	85 c0                	test   eax,eax
    693c:	75 07                	jne    6945 <test_tcp_session_status+0x4c>
    693e:	b8 00 00 00 00       	mov    eax,0x0
    6943:	eb 0c                	jmp    6951 <test_tcp_session_status+0x58>
    6945:	b8 01 00 00 00       	mov    eax,0x1
    694a:	eb 05                	jmp    6951 <test_tcp_session_status+0x58>
    694c:	b8 01 00 00 00       	mov    eax,0x1
    6951:	5d                   	pop    rbp
    6952:	c3                   	ret    

0000000000006953 <main>:
    6953:	f3 0f 1e fa          	endbr64 
    6957:	55                   	push   rbp
    6958:	48 89 e5             	mov    rbp,rsp
    695b:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    6962:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    6968:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    696f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6976:	00 00 
    6978:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    697c:	31 c0                	xor    eax,eax
    697e:	b8 00 00 00 00       	mov    eax,0x0
    6983:	e8 f5 4d 00 00       	call   b77d <load_fn_mem_map>
    6988:	48 8d 35 aa 02 00 00 	lea    rsi,[rip+0x2aa]        # 6c39 <sigint_processor>
    698f:	bf 02 00 00 00       	mov    edi,0x2
    6994:	e8 77 bd ff ff       	call   2710 <signal@plt>
    6999:	48 8d 05 60 4a 00 00 	lea    rax,[rip+0x4a60]        # b400 <crash_handler>
    69a0:	48 89 c6             	mov    rsi,rax
    69a3:	bf 0b 00 00 00       	mov    edi,0xb
    69a8:	e8 63 bd ff ff       	call   2710 <signal@plt>
    69ad:	b8 00 00 00 00       	mov    eax,0x0
    69b2:	e8 af 08 00 00       	call   7266 <print_logo>
    69b7:	b8 00 00 00 00       	mov    eax,0x0
    69bc:	e8 f3 06 00 00       	call   70b4 <print_cpu_info>
    69c1:	c7 05 dd a8 00 00 01 	mov    DWORD PTR [rip+0xa8dd],0x1        # 112a8 <is_running>
    69c8:	00 00 00 
    69cb:	bf 00 00 00 00       	mov    edi,0x0
    69d0:	e8 db be ff ff       	call   28b0 <time@plt>
    69d5:	48 89 05 d4 a8 00 00 	mov    QWORD PTR [rip+0xa8d4],rax        # 112b0 <last_clean_time>
    69dc:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    69e3:	0f 85 e3 00 00 00    	jne    6acc <main+0x179>
    69e9:	b8 00 00 00 00       	mov    eax,0x0
    69ee:	e8 97 06 00 00       	call   708a <print_help_and_exit>
    69f3:	e9 d4 00 00 00       	jmp    6acc <main+0x179>
    69f8:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    69fe:	83 e8 64             	sub    eax,0x64
    6a01:	83 f8 10             	cmp    eax,0x10
    6a04:	0f 87 9e 00 00 00    	ja     6aa8 <main+0x155>
    6a0a:	89 c0                	mov    eax,eax
    6a0c:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    6a13:	00 
    6a14:	48 8d 05 89 65 00 00 	lea    rax,[rip+0x6589]        # cfa4 <_IO_stdin_used+0xfa4>
    6a1b:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    6a1e:	48 98                	cdqe   
    6a20:	48 8d 15 7d 65 00 00 	lea    rdx,[rip+0x657d]        # cfa4 <_IO_stdin_used+0xfa4>
    6a27:	48 01 d0             	add    rax,rdx
    6a2a:	3e ff e0             	notrack jmp rax
    6a2d:	c6 05 ec 34 10 00 01 	mov    BYTE PTR [rip+0x1034ec],0x1        # 109f20 <debug_mode>
    6a34:	e9 93 00 00 00       	jmp    6acc <main+0x179>
    6a39:	b8 00 00 00 00       	mov    eax,0x0
    6a3e:	e8 47 06 00 00       	call   708a <print_help_and_exit>
    6a43:	e9 84 00 00 00       	jmp    6acc <main+0x179>
    6a48:	48 8b 05 11 a6 00 00 	mov    rax,QWORD PTR [rip+0xa611]        # 11060 <optarg@@GLIBC_2.2.5>
    6a4f:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    6a56:	eb 74                	jmp    6acc <main+0x179>
    6a58:	c6 05 05 35 10 00 01 	mov    BYTE PTR [rip+0x103505],0x1        # 109f64 <packet_print>
    6a5f:	eb 6b                	jmp    6acc <main+0x179>
    6a61:	c6 05 fd 34 10 00 01 	mov    BYTE PTR [rip+0x1034fd],0x1        # 109f65 <quiet_exit>
    6a68:	eb 62                	jmp    6acc <main+0x179>
    6a6a:	48 8d 3d af 63 00 00 	lea    rdi,[rip+0x63af]        # ce20 <_IO_stdin_used+0xe20>
    6a71:	e8 8a ba ff ff       	call   2500 <puts@plt>
    6a76:	bf 0a 00 00 00       	mov    edi,0xa
    6a7b:	e8 00 bc ff ff       	call   2680 <sleep@plt>
    6a80:	c6 05 f9 a5 00 00 01 	mov    BYTE PTR [rip+0xa5f9],0x1        # 11080 <demo_mode>
    6a87:	eb 43                	jmp    6acc <main+0x179>
    6a89:	48 8d 3d d0 63 00 00 	lea    rdi,[rip+0x63d0]        # ce60 <_IO_stdin_used+0xe60>
    6a90:	e8 6b ba ff ff       	call   2500 <puts@plt>
    6a95:	bf 0a 00 00 00       	mov    edi,0xa
    6a9a:	e8 e1 bb ff ff       	call   2680 <sleep@plt>
    6a9f:	c6 05 26 35 10 00 01 	mov    BYTE PTR [rip+0x103526],0x1        # 109fcc <in_test_mode>
    6aa6:	eb 24                	jmp    6acc <main+0x179>
    6aa8:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6aae:	89 c6                	mov    esi,eax
    6ab0:	48 8d 3d dd 63 00 00 	lea    rdi,[rip+0x63dd]        # ce94 <_IO_stdin_used+0xe94>
    6ab7:	b8 00 00 00 00       	mov    eax,0x0
    6abc:	e8 df b9 ff ff       	call   24a0 <printf@plt>
    6ac1:	b8 00 00 00 00       	mov    eax,0x0
    6ac6:	e8 bf 05 00 00       	call   708a <print_help_and_exit>
    6acb:	90                   	nop
    6acc:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6ad3:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    6ad9:	48 8d 15 ca 63 00 00 	lea    rdx,[rip+0x63ca]        # ceaa <_IO_stdin_used+0xeaa>
    6ae0:	48 89 ce             	mov    rsi,rcx
    6ae3:	89 c7                	mov    edi,eax
    6ae5:	e8 66 ba ff ff       	call   2550 <getopt@plt>
    6aea:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6af0:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    6af7:	0f 85 fb fe ff ff    	jne    69f8 <main+0xa5>
    6afd:	48 8d 3d af 63 00 00 	lea    rdi,[rip+0x63af]        # ceb3 <_IO_stdin_used+0xeb3>
    6b04:	e8 82 f6 ff ff       	call   618b <deny_conf_parser>
    6b09:	48 8d 3d b8 63 00 00 	lea    rdi,[rip+0x63b8]        # cec8 <_IO_stdin_used+0xec8>
    6b10:	e8 eb b9 ff ff       	call   2500 <puts@plt>
    6b15:	48 8d 3d e7 63 00 00 	lea    rdi,[rip+0x63e7]        # cf03 <_IO_stdin_used+0xf03>
    6b1c:	e8 3e ee ff ff       	call   595f <rule_library_parser>
    6b21:	48 8d 3d f1 63 00 00 	lea    rdi,[rip+0x63f1]        # cf19 <_IO_stdin_used+0xf19>
    6b28:	e8 d3 b9 ff ff       	call   2500 <puts@plt>
    6b2d:	b8 00 00 00 00       	mov    eax,0x0
    6b32:	e8 ef 3d 00 00       	call   a926 <rule_processor>
    6b37:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6b3e:	48 89 c6             	mov    rsi,rax
    6b41:	48 8d 3d e8 63 00 00 	lea    rdi,[rip+0x63e8]        # cf30 <_IO_stdin_used+0xf30>
    6b48:	b8 00 00 00 00       	mov    eax,0x0
    6b4d:	e8 4e b9 ff ff       	call   24a0 <printf@plt>
    6b52:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6b59:	00 00 00 00 
    6b5d:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6b64:	00 00 00 00 
    6b68:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6b6f:	b8 00 00 00 00       	mov    eax,0x0
    6b74:	b9 fd 00 00 00       	mov    ecx,0xfd
    6b79:	48 89 d7             	mov    rdi,rdx
    6b7c:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6b7f:	48 89 fa             	mov    rdx,rdi
    6b82:	89 02                	mov    DWORD PTR [rdx],eax
    6b84:	48 83 c2 04          	add    rdx,0x4
    6b88:	66 89 02             	mov    WORD PTR [rdx],ax
    6b8b:	48 83 c2 02          	add    rdx,0x2
    6b8f:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6b96:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6b9d:	49 89 d0             	mov    r8,rdx
    6ba0:	b9 64 00 00 00       	mov    ecx,0x64
    6ba5:	ba 01 00 00 00       	mov    edx,0x1
    6baa:	be 00 04 00 00       	mov    esi,0x400
    6baf:	48 89 c7             	mov    rdi,rax
    6bb2:	e8 f9 b9 ff ff       	call   25b0 <pcap_open_live@plt>
    6bb7:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6bbe:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6bc5:	00 
    6bc6:	75 16                	jne    6bde <main+0x28b>
    6bc8:	48 8d 3d 82 63 00 00 	lea    rdi,[rip+0x6382]        # cf51 <_IO_stdin_used+0xf51>
    6bcf:	e8 7c bc ff ff       	call   2850 <perror@plt>
    6bd4:	bf 01 00 00 00       	mov    edi,0x1
    6bd9:	e8 42 b9 ff ff       	call   2520 <exit@plt>
    6bde:	b8 00 00 00 00       	mov    eax,0x0
    6be3:	e8 72 45 00 00       	call   b15a <collect_scripts>
    6be8:	b8 00 00 00 00       	mov    eax,0x0
    6bed:	e8 8b 06 00 00       	call   727d <start_nsh_server>
    6bf2:	48 8d 3d 77 63 00 00 	lea    rdi,[rip+0x6377]        # cf70 <_IO_stdin_used+0xf70>
    6bf9:	e8 02 b9 ff ff       	call   2500 <puts@plt>
    6bfe:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6c05:	b9 00 00 00 00       	mov    ecx,0x0
    6c0a:	48 8d 15 d2 bd ff ff 	lea    rdx,[rip+0xffffffffffffbdd2]        # 29e3 <pktmgr>
    6c11:	be ff ff ff ff       	mov    esi,0xffffffff
    6c16:	48 89 c7             	mov    rdi,rax
    6c19:	e8 12 bc ff ff       	call   2830 <pcap_loop@plt>
    6c1e:	b8 00 00 00 00       	mov    eax,0x0
    6c23:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6c27:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6c2e:	00 00 
    6c30:	74 05                	je     6c37 <main+0x2e4>
    6c32:	e8 39 bb ff ff       	call   2770 <__stack_chk_fail@plt>
    6c37:	c9                   	leave  
    6c38:	c3                   	ret    

0000000000006c39 <sigint_processor>:
    6c39:	f3 0f 1e fa          	endbr64 
    6c3d:	55                   	push   rbp
    6c3e:	48 89 e5             	mov    rbp,rsp
    6c41:	41 54                	push   r12
    6c43:	53                   	push   rbx
    6c44:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6c4b:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6c51:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6c58:	00 00 
    6c5a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6c5e:	31 c0                	xor    eax,eax
    6c60:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6c67:	00 00 00 
    6c6a:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6c71:	48 89 c7             	mov    rdi,rax
    6c74:	e8 e4 c7 ff ff       	call   345d <cb_get_formatted_time>
    6c79:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6c80:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6c86:	89 c6                	mov    esi,eax
    6c88:	48 8d 3d 59 63 00 00 	lea    rdi,[rip+0x6359]        # cfe8 <_IO_stdin_used+0xfe8>
    6c8f:	b8 00 00 00 00       	mov    eax,0x0
    6c94:	e8 07 b8 ff ff       	call   24a0 <printf@plt>
    6c99:	48 8d 3d 6d 63 00 00 	lea    rdi,[rip+0x636d]        # d00d <_IO_stdin_used+0x100d>
    6ca0:	e8 ab bb ff ff       	call   2850 <perror@plt>
    6ca5:	0f b6 05 b9 32 10 00 	movzx  eax,BYTE PTR [rip+0x1032b9]        # 109f65 <quiet_exit>
    6cac:	83 f0 01             	xor    eax,0x1
    6caf:	84 c0                	test   al,al
    6cb1:	0f 84 2e 02 00 00    	je     6ee5 <sigint_processor+0x2ac>
    6cb7:	8b 05 e7 a5 00 00    	mov    eax,DWORD PTR [rip+0xa5e7]        # 112a4 <total_pkt_captured>
    6cbd:	89 c6                	mov    esi,eax
    6cbf:	48 8d 3d 48 63 00 00 	lea    rdi,[rip+0x6348]        # d00e <_IO_stdin_used+0x100e>
    6cc6:	b8 00 00 00 00       	mov    eax,0x0
    6ccb:	e8 d0 b7 ff ff       	call   24a0 <printf@plt>
    6cd0:	48 8d 3d 51 63 00 00 	lea    rdi,[rip+0x6351]        # d028 <_IO_stdin_used+0x1028>
    6cd7:	e8 24 b8 ff ff       	call   2500 <puts@plt>
    6cdc:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6ce3:	00 00 00 
    6ce6:	e9 e8 01 00 00       	jmp    6ed3 <sigint_processor+0x29a>
    6ceb:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6cf1:	48 63 d0             	movsxd rdx,eax
    6cf4:	48 89 d0             	mov    rax,rdx
    6cf7:	48 c1 e0 02          	shl    rax,0x2
    6cfb:	48 01 d0             	add    rax,rdx
    6cfe:	48 c1 e0 03          	shl    rax,0x3
    6d02:	48 01 d0             	add    rax,rdx
    6d05:	48 c1 e0 04          	shl    rax,0x4
    6d09:	48 89 c2             	mov    rdx,rax
    6d0c:	48 8d 05 7d ca 0e 00 	lea    rax,[rip+0xeca7d]        # f3790 <watchlist+0x270>
    6d13:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6d17:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d1d:	48 63 d0             	movsxd rdx,eax
    6d20:	48 89 d0             	mov    rax,rdx
    6d23:	48 c1 e0 02          	shl    rax,0x2
    6d27:	48 01 d0             	add    rax,rdx
    6d2a:	48 c1 e0 03          	shl    rax,0x3
    6d2e:	48 01 d0             	add    rax,rdx
    6d31:	48 c1 e0 04          	shl    rax,0x4
    6d35:	48 89 c2             	mov    rdx,rax
    6d38:	48 8d 05 45 ca 0e 00 	lea    rax,[rip+0xeca45]        # f3784 <watchlist+0x264>
    6d3f:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6d43:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d49:	48 63 d0             	movsxd rdx,eax
    6d4c:	48 89 d0             	mov    rax,rdx
    6d4f:	48 c1 e0 02          	shl    rax,0x2
    6d53:	48 01 d0             	add    rax,rdx
    6d56:	48 c1 e0 03          	shl    rax,0x3
    6d5a:	48 01 d0             	add    rax,rdx
    6d5d:	48 c1 e0 04          	shl    rax,0x4
    6d61:	48 89 c2             	mov    rdx,rax
    6d64:	48 8d 05 21 ca 0e 00 	lea    rax,[rip+0xeca21]        # f378c <watchlist+0x26c>
    6d6b:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6d6f:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d75:	48 63 d0             	movsxd rdx,eax
    6d78:	48 89 d0             	mov    rax,rdx
    6d7b:	48 c1 e0 02          	shl    rax,0x2
    6d7f:	48 01 d0             	add    rax,rdx
    6d82:	48 c1 e0 03          	shl    rax,0x3
    6d86:	48 01 d0             	add    rax,rdx
    6d89:	48 c1 e0 04          	shl    rax,0x4
    6d8d:	48 89 c2             	mov    rdx,rax
    6d90:	48 8d 05 e9 c9 0e 00 	lea    rax,[rip+0xec9e9]        # f3780 <watchlist+0x260>
    6d97:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6d9b:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6da1:	48 63 d0             	movsxd rdx,eax
    6da4:	48 89 d0             	mov    rax,rdx
    6da7:	48 c1 e0 02          	shl    rax,0x2
    6dab:	48 01 d0             	add    rax,rdx
    6dae:	48 c1 e0 03          	shl    rax,0x3
    6db2:	48 01 d0             	add    rax,rdx
    6db5:	48 c1 e0 04          	shl    rax,0x4
    6db9:	48 89 c2             	mov    rdx,rax
    6dbc:	48 8d 05 c5 c9 0e 00 	lea    rax,[rip+0xec9c5]        # f3788 <watchlist+0x268>
    6dc3:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6dc6:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dcc:	48 63 d0             	movsxd rdx,eax
    6dcf:	48 89 d0             	mov    rax,rdx
    6dd2:	48 c1 e0 02          	shl    rax,0x2
    6dd6:	48 01 d0             	add    rax,rdx
    6dd9:	48 c1 e0 03          	shl    rax,0x3
    6ddd:	48 01 d0             	add    rax,rdx
    6de0:	48 c1 e0 04          	shl    rax,0x4
    6de4:	48 89 c2             	mov    rdx,rax
    6de7:	48 8d 05 8e c9 0e 00 	lea    rax,[rip+0xec98e]        # f377c <watchlist+0x25c>
    6dee:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6df2:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6df8:	48 63 d0             	movsxd rdx,eax
    6dfb:	48 89 d0             	mov    rax,rdx
    6dfe:	48 c1 e0 02          	shl    rax,0x2
    6e02:	48 01 d0             	add    rax,rdx
    6e05:	48 c1 e0 03          	shl    rax,0x3
    6e09:	48 01 d0             	add    rax,rdx
    6e0c:	48 c1 e0 04          	shl    rax,0x4
    6e10:	48 89 c2             	mov    rdx,rax
    6e13:	48 8d 05 82 c9 0e 00 	lea    rax,[rip+0xec982]        # f379c <watchlist+0x27c>
    6e1a:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6e1d:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e23:	48 63 d0             	movsxd rdx,eax
    6e26:	48 89 d0             	mov    rax,rdx
    6e29:	48 c1 e0 02          	shl    rax,0x2
    6e2d:	48 01 d0             	add    rax,rdx
    6e30:	48 c1 e0 03          	shl    rax,0x3
    6e34:	48 01 d0             	add    rax,rdx
    6e37:	48 c1 e0 04          	shl    rax,0x4
    6e3b:	48 89 c2             	mov    rdx,rax
    6e3e:	48 8d 05 5b c9 0e 00 	lea    rax,[rip+0xec95b]        # f37a0 <watchlist+0x280>
    6e45:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6e48:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e4e:	48 63 d0             	movsxd rdx,eax
    6e51:	48 89 d0             	mov    rax,rdx
    6e54:	48 c1 e0 02          	shl    rax,0x2
    6e58:	48 01 d0             	add    rax,rdx
    6e5b:	48 c1 e0 03          	shl    rax,0x3
    6e5f:	48 01 d0             	add    rax,rdx
    6e62:	48 c1 e0 04          	shl    rax,0x4
    6e66:	48 89 c2             	mov    rdx,rax
    6e69:	48 8d 05 08 c9 0e 00 	lea    rax,[rip+0xec908]        # f3778 <watchlist+0x258>
    6e70:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6e73:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e79:	48 63 d0             	movsxd rdx,eax
    6e7c:	48 89 d0             	mov    rax,rdx
    6e7f:	48 c1 e0 02          	shl    rax,0x2
    6e83:	48 01 d0             	add    rax,rdx
    6e86:	48 c1 e0 03          	shl    rax,0x3
    6e8a:	48 01 d0             	add    rax,rdx
    6e8d:	48 c1 e0 04          	shl    rax,0x4
    6e91:	48 8d 15 88 c6 0e 00 	lea    rdx,[rip+0xec688]        # f3520 <watchlist>
    6e98:	48 01 d0             	add    rax,rdx
    6e9b:	48 83 c0 08          	add    rax,0x8
    6e9f:	48 83 ec 08          	sub    rsp,0x8
    6ea3:	41 53                	push   r11
    6ea5:	41 52                	push   r10
    6ea7:	41 51                	push   r9
    6ea9:	41 50                	push   r8
    6eab:	57                   	push   rdi
    6eac:	45 89 e1             	mov    r9d,r12d
    6eaf:	41 89 d8             	mov    r8d,ebx
    6eb2:	89 f2                	mov    edx,esi
    6eb4:	48 89 c6             	mov    rsi,rax
    6eb7:	48 8d 3d a2 61 00 00 	lea    rdi,[rip+0x61a2]        # d060 <_IO_stdin_used+0x1060>
    6ebe:	b8 00 00 00 00       	mov    eax,0x0
    6ec3:	e8 d8 b5 ff ff       	call   24a0 <printf@plt>
    6ec8:	48 83 c4 30          	add    rsp,0x30
    6ecc:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6ed3:	8b 05 3f a1 00 00    	mov    eax,DWORD PTR [rip+0xa13f]        # 11018 <watchlist_num>
    6ed9:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6edf:	0f 8e 06 fe ff ff    	jle    6ceb <sigint_processor+0xb2>
    6ee5:	48 8d 35 14 62 00 00 	lea    rsi,[rip+0x6214]        # d100 <_IO_stdin_used+0x1100>
    6eec:	48 8d 3d 0f 62 00 00 	lea    rdi,[rip+0x620f]        # d102 <_IO_stdin_used+0x1102>
    6ef3:	e8 98 b6 ff ff       	call   2590 <fopen@plt>
    6ef8:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6eff:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6f06:	00 
    6f07:	0f 85 99 00 00 00    	jne    6fa6 <sigint_processor+0x36d>
    6f0d:	48 8d 3d 0c 62 00 00 	lea    rdi,[rip+0x620c]        # d120 <_IO_stdin_used+0x1120>
    6f14:	e8 e7 b5 ff ff       	call   2500 <puts@plt>
    6f19:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6f20:	48 89 c7             	mov    rdi,rax
    6f23:	e8 c8 b8 ff ff       	call   27f0 <fclose@plt>
    6f28:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6f2f:	00 00 00 
    6f32:	eb 5f                	jmp    6f93 <sigint_processor+0x35a>
    6f34:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6f3a:	48 63 d0             	movsxd rdx,eax
    6f3d:	48 89 d0             	mov    rax,rdx
    6f40:	48 c1 e0 04          	shl    rax,0x4
    6f44:	48 01 d0             	add    rax,rdx
    6f47:	48 01 c0             	add    rax,rax
    6f4a:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6f4e:	48 8d 05 cb 0d 10 00 	lea    rax,[rip+0x100dcb]        # 107d20 <arpcache>
    6f55:	48 01 c2             	add    rdx,rax
    6f58:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6f5e:	48 63 c8             	movsxd rcx,eax
    6f61:	48 89 c8             	mov    rax,rcx
    6f64:	48 c1 e0 04          	shl    rax,0x4
    6f68:	48 01 c8             	add    rax,rcx
    6f6b:	48 01 c0             	add    rax,rax
    6f6e:	48 8d 0d ab 0d 10 00 	lea    rcx,[rip+0x100dab]        # 107d20 <arpcache>
    6f75:	48 01 c8             	add    rax,rcx
    6f78:	48 89 c6             	mov    rsi,rax
    6f7b:	48 8d 3d e5 61 00 00 	lea    rdi,[rip+0x61e5]        # d167 <_IO_stdin_used+0x1167>
    6f82:	b8 00 00 00 00       	mov    eax,0x0
    6f87:	e8 14 b5 ff ff       	call   24a0 <printf@plt>
    6f8c:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    6f93:	8b 05 83 a0 00 00    	mov    eax,DWORD PTR [rip+0xa083]        # 1101c <arp_entries>
    6f99:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    6f9f:	7e 93                	jle    6f34 <sigint_processor+0x2fb>
    6fa1:	e9 da 00 00 00       	jmp    7080 <sigint_processor+0x447>
    6fa6:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    6fad:	00 00 00 
    6fb0:	eb 67                	jmp    7019 <sigint_processor+0x3e0>
    6fb2:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6fb8:	48 63 d0             	movsxd rdx,eax
    6fbb:	48 89 d0             	mov    rax,rdx
    6fbe:	48 c1 e0 04          	shl    rax,0x4
    6fc2:	48 01 d0             	add    rax,rdx
    6fc5:	48 01 c0             	add    rax,rax
    6fc8:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6fcc:	48 8d 05 4d 0d 10 00 	lea    rax,[rip+0x100d4d]        # 107d20 <arpcache>
    6fd3:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    6fd7:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    6fdd:	48 63 d0             	movsxd rdx,eax
    6fe0:	48 89 d0             	mov    rax,rdx
    6fe3:	48 c1 e0 04          	shl    rax,0x4
    6fe7:	48 01 d0             	add    rax,rdx
    6fea:	48 01 c0             	add    rax,rax
    6fed:	48 8d 15 2c 0d 10 00 	lea    rdx,[rip+0x100d2c]        # 107d20 <arpcache>
    6ff4:	48 01 c2             	add    rdx,rax
    6ff7:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6ffe:	48 8d 35 6c 61 00 00 	lea    rsi,[rip+0x616c]        # d171 <_IO_stdin_used+0x1171>
    7005:	48 89 c7             	mov    rdi,rax
    7008:	b8 00 00 00 00       	mov    eax,0x0
    700d:	e8 4e b8 ff ff       	call   2860 <fprintf@plt>
    7012:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    7019:	8b 05 fd 9f 00 00    	mov    eax,DWORD PTR [rip+0x9ffd]        # 1101c <arp_entries>
    701f:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    7025:	7e 8b                	jle    6fb2 <sigint_processor+0x379>
    7027:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    702e:	48 89 c7             	mov    rdi,rax
    7031:	e8 ba b7 ff ff       	call   27f0 <fclose@plt>
    7036:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    703d:	00 00 00 
    7040:	eb 2f                	jmp    7071 <sigint_processor+0x438>
    7042:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    7048:	48 98                	cdqe   
    704a:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    7051:	00 
    7052:	48 8d 05 47 a0 00 00 	lea    rax,[rip+0xa047]        # 110a0 <threads>
    7059:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    705d:	be 00 00 00 00       	mov    esi,0x0
    7062:	48 89 c7             	mov    rdi,rax
    7065:	e8 26 b4 ff ff       	call   2490 <pthread_join@plt>
    706a:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    7071:	8b 05 29 a2 00 00    	mov    eax,DWORD PTR [rip+0xa229]        # 112a0 <thread_count>
    7077:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    707d:	7c c3                	jl     7042 <sigint_processor+0x409>
    707f:	90                   	nop
    7080:	bf 00 00 00 00       	mov    edi,0x0
    7085:	e8 96 b4 ff ff       	call   2520 <exit@plt>

000000000000708a <print_help_and_exit>:
    708a:	f3 0f 1e fa          	endbr64 
    708e:	55                   	push   rbp
    708f:	48 89 e5             	mov    rbp,rsp
    7092:	48 8d 35 df 60 00 00 	lea    rsi,[rip+0x60df]        # d178 <_IO_stdin_used+0x1178>
    7099:	48 8d 3d e0 60 00 00 	lea    rdi,[rip+0x60e0]        # d180 <_IO_stdin_used+0x1180>
    70a0:	b8 00 00 00 00       	mov    eax,0x0
    70a5:	e8 f6 b3 ff ff       	call   24a0 <printf@plt>
    70aa:	bf 00 00 00 00       	mov    edi,0x0
    70af:	e8 6c b4 ff ff       	call   2520 <exit@plt>

00000000000070b4 <print_cpu_info>:
    70b4:	f3 0f 1e fa          	endbr64 
    70b8:	55                   	push   rbp
    70b9:	48 89 e5             	mov    rbp,rsp
    70bc:	53                   	push   rbx
    70bd:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    70c4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    70cb:	00 00 
    70cd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    70d1:	31 c0                	xor    eax,eax
    70d3:	48 8d 35 2d 61 00 00 	lea    rsi,[rip+0x612d]        # d207 <_IO_stdin_used+0x1207>
    70da:	48 8d 3d 29 61 00 00 	lea    rdi,[rip+0x6129]        # d20a <_IO_stdin_used+0x120a>
    70e1:	e8 aa b4 ff ff       	call   2590 <fopen@plt>
    70e6:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    70ed:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    70f4:	00 00 00 00 
    70f8:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    70ff:	00 00 00 00 
    7103:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    710a:	00 00 00 
    710d:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    7114:	ba 00 02 00 00       	mov    edx,0x200
    7119:	be 00 00 00 00       	mov    esi,0x0
    711e:	48 89 c7             	mov    rdi,rax
    7121:	e8 8a b3 ff ff       	call   24b0 <memset@plt>
    7126:	e9 b3 00 00 00       	jmp    71de <print_cpu_info+0x12a>
    712b:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7132:	ba 0a 00 00 00       	mov    edx,0xa
    7137:	48 89 c6             	mov    rsi,rax
    713a:	48 8d 3d d7 60 00 00 	lea    rdi,[rip+0x60d7]        # d218 <_IO_stdin_used+0x1218>
    7141:	e8 2a b4 ff ff       	call   2570 <strncmp@plt>
    7146:	85 c0                	test   eax,eax
    7148:	0f 85 90 00 00 00    	jne    71de <print_cpu_info+0x12a>
    714e:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    7155:	00 00 00 
    7158:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    715f:	00 00 00 
    7162:	eb 2e                	jmp    7192 <print_cpu_info+0xde>
    7164:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    716b:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7171:	48 98                	cdqe   
    7173:	48 01 d0             	add    rax,rdx
    7176:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    7179:	3c 3a                	cmp    al,0x3a
    717b:	75 0e                	jne    718b <print_cpu_info+0xd7>
    717d:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7183:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    7189:	eb 24                	jmp    71af <print_cpu_info+0xfb>
    718b:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    7192:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    7198:	48 63 d8             	movsxd rbx,eax
    719b:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    71a2:	48 89 c7             	mov    rdi,rax
    71a5:	e8 76 b4 ff ff       	call   2620 <strlen@plt>
    71aa:	48 39 c3             	cmp    rbx,rax
    71ad:	72 b5                	jb     7164 <print_cpu_info+0xb0>
    71af:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    71b6:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    71bd:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    71c3:	48 98                	cdqe   
    71c5:	48 83 c0 02          	add    rax,0x2
    71c9:	48 01 c2             	add    rdx,rax
    71cc:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    71d3:	48 89 d6             	mov    rsi,rdx
    71d6:	48 89 c7             	mov    rdi,rax
    71d9:	e8 d2 b4 ff ff       	call   26b0 <strcat@plt>
    71de:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    71e5:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    71ec:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    71f3:	48 89 d1             	mov    rcx,rdx
    71f6:	ba 0a 00 00 00       	mov    edx,0xa
    71fb:	48 89 c7             	mov    rdi,rax
    71fe:	e8 7d b6 ff ff       	call   2880 <getdelim@plt>
    7203:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    7207:	0f 85 1e ff ff ff    	jne    712b <print_cpu_info+0x77>
    720d:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    7214:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    721a:	89 c6                	mov    esi,eax
    721c:	48 8d 3d 00 60 00 00 	lea    rdi,[rip+0x6000]        # d223 <_IO_stdin_used+0x1223>
    7223:	b8 00 00 00 00       	mov    eax,0x0
    7228:	e8 73 b2 ff ff       	call   24a0 <printf@plt>
    722d:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    7234:	48 89 c7             	mov    rdi,rax
    7237:	e8 d4 b3 ff ff       	call   2610 <free@plt>
    723c:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    7243:	48 89 c7             	mov    rdi,rax
    7246:	e8 a5 b5 ff ff       	call   27f0 <fclose@plt>
    724b:	90                   	nop
    724c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7250:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    7257:	00 00 
    7259:	74 05                	je     7260 <print_cpu_info+0x1ac>
    725b:	e8 10 b5 ff ff       	call   2770 <__stack_chk_fail@plt>
    7260:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7264:	c9                   	leave  
    7265:	c3                   	ret    

0000000000007266 <print_logo>:
    7266:	f3 0f 1e fa          	endbr64 
    726a:	55                   	push   rbp
    726b:	48 89 e5             	mov    rbp,rsp
    726e:	48 8d 3d c3 5f 00 00 	lea    rdi,[rip+0x5fc3]        # d238 <_IO_stdin_used+0x1238>
    7275:	e8 86 b2 ff ff       	call   2500 <puts@plt>
    727a:	90                   	nop
    727b:	5d                   	pop    rbp
    727c:	c3                   	ret    

000000000000727d <start_nsh_server>:
    727d:	f3 0f 1e fa          	endbr64 
    7281:	55                   	push   rbp
    7282:	48 89 e5             	mov    rbp,rsp
    7285:	48 83 ec 10          	sub    rsp,0x10
    7289:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7290:	00 00 
    7292:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7296:	31 c0                	xor    eax,eax
    7298:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    729c:	b9 00 00 00 00       	mov    ecx,0x0
    72a1:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 7319 <actually_start_nsh_server>
    72a8:	be 00 00 00 00       	mov    esi,0x0
    72ad:	48 89 c7             	mov    rdi,rax
    72b0:	e8 3b b3 ff ff       	call   25f0 <pthread_create@plt>
    72b5:	90                   	nop
    72b6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    72ba:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    72c1:	00 00 
    72c3:	74 05                	je     72ca <start_nsh_server+0x4d>
    72c5:	e8 a6 b4 ff ff       	call   2770 <__stack_chk_fail@plt>
    72ca:	c9                   	leave  
    72cb:	c3                   	ret    

00000000000072cc <rnstrip>:
    72cc:	f3 0f 1e fa          	endbr64 
    72d0:	55                   	push   rbp
    72d1:	48 89 e5             	mov    rbp,rsp
    72d4:	48 83 ec 10          	sub    rsp,0x10
    72d8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    72dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    72e0:	48 8d 35 c9 60 00 00 	lea    rsi,[rip+0x60c9]        # d3b0 <_IO_stdin_used+0x13b0>
    72e7:	48 89 c7             	mov    rdi,rax
    72ea:	e8 21 b5 ff ff       	call   2810 <strcspn@plt>
    72ef:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    72f3:	48 01 d0             	add    rax,rdx
    72f6:	c6 00 00             	mov    BYTE PTR [rax],0x0
    72f9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    72fd:	48 8d 35 ae 60 00 00 	lea    rsi,[rip+0x60ae]        # d3b2 <_IO_stdin_used+0x13b2>
    7304:	48 89 c7             	mov    rdi,rax
    7307:	e8 04 b5 ff ff       	call   2810 <strcspn@plt>
    730c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    7310:	48 01 d0             	add    rax,rdx
    7313:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7316:	90                   	nop
    7317:	c9                   	leave  
    7318:	c3                   	ret    

0000000000007319 <actually_start_nsh_server>:
    7319:	f3 0f 1e fa          	endbr64 
    731d:	55                   	push   rbp
    731e:	48 89 e5             	mov    rbp,rsp
    7321:	48 83 ec 50          	sub    rsp,0x50
    7325:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    732c:	00 00 
    732e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7332:	31 c0                	xor    eax,eax
    7334:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    733b:	ba 00 00 00 00       	mov    edx,0x0
    7340:	be 01 00 00 00       	mov    esi,0x1
    7345:	bf 02 00 00 00       	mov    edi,0x2
    734a:	e8 01 b4 ff ff       	call   2750 <socket@plt>
    734f:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    7352:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    7356:	75 16                	jne    736e <actually_start_nsh_server+0x55>
    7358:	48 8d 3d 59 60 00 00 	lea    rdi,[rip+0x6059]        # d3b8 <_IO_stdin_used+0x13b8>
    735f:	e8 9c b1 ff ff       	call   2500 <puts@plt>
    7364:	bf 01 00 00 00       	mov    edi,0x1
    7369:	e8 b2 b1 ff ff       	call   2520 <exit@plt>
    736e:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7372:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7375:	41 b8 04 00 00 00    	mov    r8d,0x4
    737b:	48 89 d1             	mov    rcx,rdx
    737e:	ba 02 00 00 00       	mov    edx,0x2
    7383:	be 01 00 00 00       	mov    esi,0x1
    7388:	89 c7                	mov    edi,eax
    738a:	e8 31 b2 ff ff       	call   25c0 <setsockopt@plt>
    738f:	85 c0                	test   eax,eax
    7391:	74 16                	je     73a9 <actually_start_nsh_server+0x90>
    7393:	48 8d 3d 46 60 00 00 	lea    rdi,[rip+0x6046]        # d3e0 <_IO_stdin_used+0x13e0>
    739a:	e8 61 b1 ff ff       	call   2500 <puts@plt>
    739f:	bf 01 00 00 00       	mov    edi,0x1
    73a4:	e8 77 b1 ff ff       	call   2520 <exit@plt>
    73a9:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    73af:	bf 00 00 00 00       	mov    edi,0x0
    73b4:	e8 87 b4 ff ff       	call   2840 <htonl@plt>
    73b9:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    73bc:	bf 81 02 00 00       	mov    edi,0x281
    73c1:	e8 4a b1 ff ff       	call   2510 <htons@plt>
    73c6:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    73ca:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    73ce:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    73d1:	ba 10 00 00 00       	mov    edx,0x10
    73d6:	48 89 ce             	mov    rsi,rcx
    73d9:	89 c7                	mov    edi,eax
    73db:	e8 40 b4 ff ff       	call   2820 <bind@plt>
    73e0:	85 c0                	test   eax,eax
    73e2:	79 16                	jns    73fa <actually_start_nsh_server+0xe1>
    73e4:	48 8d 3d 1d 60 00 00 	lea    rdi,[rip+0x601d]        # d408 <_IO_stdin_used+0x1408>
    73eb:	e8 10 b1 ff ff       	call   2500 <puts@plt>
    73f0:	bf 01 00 00 00       	mov    edi,0x1
    73f5:	e8 26 b1 ff ff       	call   2520 <exit@plt>
    73fa:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    73fd:	be 05 00 00 00       	mov    esi,0x5
    7402:	89 c7                	mov    edi,eax
    7404:	e8 27 b2 ff ff       	call   2630 <listen@plt>
    7409:	85 c0                	test   eax,eax
    740b:	79 16                	jns    7423 <actually_start_nsh_server+0x10a>
    740d:	48 8d 3d 2c 60 00 00 	lea    rdi,[rip+0x602c]        # d440 <_IO_stdin_used+0x1440>
    7414:	e8 e7 b0 ff ff       	call   2500 <puts@plt>
    7419:	bf 01 00 00 00       	mov    edi,0x1
    741e:	e8 fd b0 ff ff       	call   2520 <exit@plt>
    7423:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7427:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    742b:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    742e:	48 89 ce             	mov    rsi,rcx
    7431:	89 c7                	mov    edi,eax
    7433:	e8 58 b4 ff ff       	call   2890 <accept@plt>
    7438:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    743b:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    743f:	79 20                	jns    7461 <actually_start_nsh_server+0x148>
    7441:	b8 00 00 00 00       	mov    eax,0x0
    7446:	e8 3e bf ff ff       	call   3389 <get_formated_time>
    744b:	48 89 c6             	mov    rsi,rax
    744e:	48 8d 3d 1b 60 00 00 	lea    rdi,[rip+0x601b]        # d470 <_IO_stdin_used+0x1470>
    7455:	b8 00 00 00 00       	mov    eax,0x0
    745a:	e8 41 b0 ff ff       	call   24a0 <printf@plt>
    745f:	eb c2                	jmp    7423 <actually_start_nsh_server+0x10a>
    7461:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    7464:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    7467:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    746b:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    746f:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    7473:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    7477:	48 89 d1             	mov    rcx,rdx
    747a:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 7490 <accept_cmd>
    7481:	be 00 00 00 00       	mov    esi,0x0
    7486:	48 89 c7             	mov    rdi,rax
    7489:	e8 62 b1 ff ff       	call   25f0 <pthread_create@plt>
    748e:	eb 93                	jmp    7423 <actually_start_nsh_server+0x10a>

0000000000007490 <accept_cmd>:
    7490:	f3 0f 1e fa          	endbr64 
    7494:	55                   	push   rbp
    7495:	48 89 e5             	mov    rbp,rsp
    7498:	48 83 ec 30          	sub    rsp,0x30
    749c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    74a0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    74a4:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    74a8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    74ac:	8b 00                	mov    eax,DWORD PTR [rax]
    74ae:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    74b5:	00 00 
    74b7:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    74be:	ba 00 04 00 00       	mov    edx,0x400
    74c3:	48 89 ce             	mov    rsi,rcx
    74c6:	89 c7                	mov    edi,eax
    74c8:	e8 93 b0 ff ff       	call   2560 <read@plt>
    74cd:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    74d0:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    74d4:	7e 45                	jle    751b <accept_cmd+0x8b>
    74d6:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    74dd:	00 00 
    74df:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    74e5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    74e9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    74ed:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    74f0:	0f b6 c0             	movzx  eax,al
    74f3:	89 c6                	mov    esi,eax
    74f5:	48 8d 3d 96 5f 00 00 	lea    rdi,[rip+0x5f96]        # d492 <_IO_stdin_used+0x1492>
    74fc:	b8 00 00 00 00       	mov    eax,0x0
    7501:	e8 9a af ff ff       	call   24a0 <printf@plt>
    7506:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    750a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    750e:	48 89 d6             	mov    rsi,rdx
    7511:	48 89 c7             	mov    rdi,rax
    7514:	e8 98 0c 00 00       	call   81b1 <process_opcode>
    7519:	eb 8d                	jmp    74a8 <accept_cmd+0x18>
    751b:	90                   	nop
    751c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    7520:	8b 00                	mov    eax,DWORD PTR [rax]
    7522:	89 c7                	mov    edi,eax
    7524:	e8 b7 af ff ff       	call   24e0 <close@plt>
    7529:	90                   	nop
    752a:	c9                   	leave  
    752b:	c3                   	ret    

000000000000752c <tcp_rst_portscan_detect>:
    752c:	f3 0f 1e fa          	endbr64 
    7530:	55                   	push   rbp
    7531:	48 89 e5             	mov    rbp,rsp
    7534:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    753b:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    7542:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7549:	00 00 
    754b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    754f:	31 c0                	xor    eax,eax
    7551:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7558:	00 00 00 
    755b:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7562:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7568:	83 f8 1e             	cmp    eax,0x1e
    756b:	74 0a                	je     7577 <tcp_rst_portscan_detect+0x4b>
    756d:	b8 00 00 00 00       	mov    eax,0x0
    7572:	e9 8d 01 00 00       	jmp    7704 <tcp_rst_portscan_detect+0x1d8>
    7577:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    757e:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7584:	83 e8 01             	sub    eax,0x1
    7587:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    758d:	eb 6c                	jmp    75fb <tcp_rst_portscan_detect+0xcf>
    758f:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    7595:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    759b:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75a2:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    75a8:	48 63 d2             	movsxd rdx,edx
    75ab:	48 83 c2 28          	add    rdx,0x28
    75af:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    75b4:	89 c1                	mov    ecx,eax
    75b6:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    75bd:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75c4:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    75ca:	48 63 d2             	movsxd rdx,edx
    75cd:	48 83 c2 28          	add    rdx,0x28
    75d1:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    75d6:	29 c1                	sub    ecx,eax
    75d8:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    75de:	8d 50 01             	lea    edx,[rax+0x1]
    75e1:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    75e7:	89 ca                	mov    edx,ecx
    75e9:	48 98                	cdqe   
    75eb:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    75f2:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    75f9:	74 0b                	je     7606 <tcp_rst_portscan_detect+0xda>
    75fb:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    7602:	75 8b                	jne    758f <tcp_rst_portscan_detect+0x63>
    7604:	eb 01                	jmp    7607 <tcp_rst_portscan_detect+0xdb>
    7606:	90                   	nop
    7607:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    760e:	00 00 00 
    7611:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    7618:	00 00 00 
    761b:	eb 24                	jmp    7641 <tcp_rst_portscan_detect+0x115>
    761d:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7623:	48 98                	cdqe   
    7625:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    762c:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    7631:	7f 07                	jg     763a <tcp_rst_portscan_detect+0x10e>
    7633:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    763a:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    7641:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7647:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    764d:	7c ce                	jl     761d <tcp_rst_portscan_detect+0xf1>
    764f:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    7655:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    765b:	0f 85 9e 00 00 00    	jne    76ff <tcp_rst_portscan_detect+0x1d3>
    7661:	48 8b 05 c8 99 00 00 	mov    rax,QWORD PTR [rip+0x99c8]        # 11030 <def_log_file>
    7668:	48 8d 35 31 5e 00 00 	lea    rsi,[rip+0x5e31]        # d4a0 <_IO_stdin_used+0x14a0>
    766f:	48 89 c7             	mov    rdi,rax
    7672:	e8 19 af ff ff       	call   2590 <fopen@plt>
    7677:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    767e:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7685:	48 83 c0 08          	add    rax,0x8
    7689:	48 89 c6             	mov    rsi,rax
    768c:	48 8d 3d 15 5e 00 00 	lea    rdi,[rip+0x5e15]        # d4a8 <_IO_stdin_used+0x14a8>
    7693:	b8 00 00 00 00       	mov    eax,0x0
    7698:	e8 03 ae ff ff       	call   24a0 <printf@plt>
    769d:	b8 00 00 00 00       	mov    eax,0x0
    76a2:	e8 e2 bc ff ff       	call   3389 <get_formated_time>
    76a7:	48 89 c1             	mov    rcx,rax
    76aa:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    76b1:	48 8d 50 08          	lea    rdx,[rax+0x8]
    76b5:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    76bc:	48 8d 35 15 5e 00 00 	lea    rsi,[rip+0x5e15]        # d4d8 <_IO_stdin_used+0x14d8>
    76c3:	48 89 c7             	mov    rdi,rax
    76c6:	b8 00 00 00 00       	mov    eax,0x0
    76cb:	e8 70 af ff ff       	call   2640 <sprintf@plt>
    76d0:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    76d7:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    76de:	48 89 d6             	mov    rsi,rdx
    76e1:	48 89 c7             	mov    rdi,rax
    76e4:	e8 d7 af ff ff       	call   26c0 <fputs@plt>
    76e9:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    76f0:	48 89 c7             	mov    rdi,rax
    76f3:	e8 f8 b0 ff ff       	call   27f0 <fclose@plt>
    76f8:	b8 01 00 00 00       	mov    eax,0x1
    76fd:	eb 05                	jmp    7704 <tcp_rst_portscan_detect+0x1d8>
    76ff:	b8 00 00 00 00       	mov    eax,0x0
    7704:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    7708:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    770f:	00 00 
    7711:	74 05                	je     7718 <tcp_rst_portscan_detect+0x1ec>
    7713:	e8 58 b0 ff ff       	call   2770 <__stack_chk_fail@plt>
    7718:	c9                   	leave  
    7719:	c3                   	ret    

000000000000771a <fin_rst_portscan_detect>:
    771a:	f3 0f 1e fa          	endbr64 
    771e:	55                   	push   rbp
    771f:	48 89 e5             	mov    rbp,rsp
    7722:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    7729:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    7730:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7737:	00 00 
    7739:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    773d:	31 c0                	xor    eax,eax
    773f:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7746:	00 00 00 
    7749:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7750:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    7753:	83 f8 1e             	cmp    eax,0x1e
    7756:	74 0a                	je     7762 <fin_rst_portscan_detect+0x48>
    7758:	b8 00 00 00 00       	mov    eax,0x0
    775d:	e9 8a 01 00 00       	jmp    78ec <fin_rst_portscan_detect+0x1d2>
    7762:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7769:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    776c:	83 e8 01             	sub    eax,0x1
    776f:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    7775:	eb 6c                	jmp    77e3 <fin_rst_portscan_detect+0xc9>
    7777:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    777d:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    7783:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    778a:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7790:	48 63 d2             	movsxd rdx,edx
    7793:	48 83 c2 0a          	add    rdx,0xa
    7797:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    779c:	89 c1                	mov    ecx,eax
    779e:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    77a5:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    77ac:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    77b2:	48 63 d2             	movsxd rdx,edx
    77b5:	48 83 c2 0a          	add    rdx,0xa
    77b9:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    77be:	29 c1                	sub    ecx,eax
    77c0:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    77c6:	8d 50 01             	lea    edx,[rax+0x1]
    77c9:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    77cf:	89 ca                	mov    edx,ecx
    77d1:	48 98                	cdqe   
    77d3:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    77da:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    77e1:	74 0b                	je     77ee <fin_rst_portscan_detect+0xd4>
    77e3:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    77ea:	75 8b                	jne    7777 <fin_rst_portscan_detect+0x5d>
    77ec:	eb 01                	jmp    77ef <fin_rst_portscan_detect+0xd5>
    77ee:	90                   	nop
    77ef:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    77f6:	00 00 00 
    77f9:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    7800:	00 00 00 
    7803:	eb 24                	jmp    7829 <fin_rst_portscan_detect+0x10f>
    7805:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    780b:	48 98                	cdqe   
    780d:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    7814:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    7819:	7f 07                	jg     7822 <fin_rst_portscan_detect+0x108>
    781b:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    7822:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    7829:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    782f:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7835:	7c ce                	jl     7805 <fin_rst_portscan_detect+0xeb>
    7837:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    783d:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7843:	0f 85 9e 00 00 00    	jne    78e7 <fin_rst_portscan_detect+0x1cd>
    7849:	48 8b 05 e0 97 00 00 	mov    rax,QWORD PTR [rip+0x97e0]        # 11030 <def_log_file>
    7850:	48 8d 35 49 5c 00 00 	lea    rsi,[rip+0x5c49]        # d4a0 <_IO_stdin_used+0x14a0>
    7857:	48 89 c7             	mov    rdi,rax
    785a:	e8 31 ad ff ff       	call   2590 <fopen@plt>
    785f:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    7866:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    786d:	48 83 c0 08          	add    rax,0x8
    7871:	48 89 c6             	mov    rsi,rax
    7874:	48 8d 3d 85 5c 00 00 	lea    rdi,[rip+0x5c85]        # d500 <_IO_stdin_used+0x1500>
    787b:	b8 00 00 00 00       	mov    eax,0x0
    7880:	e8 1b ac ff ff       	call   24a0 <printf@plt>
    7885:	b8 00 00 00 00       	mov    eax,0x0
    788a:	e8 fa ba ff ff       	call   3389 <get_formated_time>
    788f:	48 89 c1             	mov    rcx,rax
    7892:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    7899:	48 8d 50 08          	lea    rdx,[rax+0x8]
    789d:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    78a4:	48 8d 35 85 5c 00 00 	lea    rsi,[rip+0x5c85]        # d530 <_IO_stdin_used+0x1530>
    78ab:	48 89 c7             	mov    rdi,rax
    78ae:	b8 00 00 00 00       	mov    eax,0x0
    78b3:	e8 88 ad ff ff       	call   2640 <sprintf@plt>
    78b8:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    78bf:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    78c6:	48 89 d6             	mov    rsi,rdx
    78c9:	48 89 c7             	mov    rdi,rax
    78cc:	e8 ef ad ff ff       	call   26c0 <fputs@plt>
    78d1:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    78d8:	48 89 c7             	mov    rdi,rax
    78db:	e8 10 af ff ff       	call   27f0 <fclose@plt>
    78e0:	b8 01 00 00 00       	mov    eax,0x1
    78e5:	eb 05                	jmp    78ec <fin_rst_portscan_detect+0x1d2>
    78e7:	b8 00 00 00 00       	mov    eax,0x0
    78ec:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    78f0:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    78f7:	00 00 
    78f9:	74 05                	je     7900 <fin_rst_portscan_detect+0x1e6>
    78fb:	e8 70 ae ff ff       	call   2770 <__stack_chk_fail@plt>
    7900:	c9                   	leave  
    7901:	c3                   	ret    

0000000000007902 <member_ready_for_scan>:
    7902:	f3 0f 1e fa          	endbr64 
    7906:	55                   	push   rbp
    7907:	48 89 e5             	mov    rbp,rsp
    790a:	48 83 ec 10          	sub    rsp,0x10
    790e:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    7915:	eb 48                	jmp    795f <member_ready_for_scan+0x5d>
    7917:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    791a:	48 63 d0             	movsxd rdx,eax
    791d:	48 89 d0             	mov    rax,rdx
    7920:	48 c1 e0 02          	shl    rax,0x2
    7924:	48 01 d0             	add    rax,rdx
    7927:	48 c1 e0 03          	shl    rax,0x3
    792b:	48 01 d0             	add    rax,rdx
    792e:	48 c1 e0 04          	shl    rax,0x4
    7932:	48 8d 15 e7 bb 0e 00 	lea    rdx,[rip+0xebbe7]        # f3520 <watchlist>
    7939:	48 01 d0             	add    rax,rdx
    793c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7940:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7944:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    794a:	83 f8 1d             	cmp    eax,0x1d
    794d:	76 0c                	jbe    795b <member_ready_for_scan+0x59>
    794f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7953:	48 89 c7             	mov    rdi,rax
    7956:	e8 d1 fb ff ff       	call   752c <tcp_rst_portscan_detect>
    795b:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    795f:	8b 05 b3 96 00 00    	mov    eax,DWORD PTR [rip+0x96b3]        # 11018 <watchlist_num>
    7965:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    7968:	7e ad                	jle    7917 <member_ready_for_scan+0x15>
    796a:	90                   	nop
    796b:	90                   	nop
    796c:	c9                   	leave  
    796d:	c3                   	ret    

000000000000796e <member_exists>:
    796e:	f3 0f 1e fa          	endbr64 
    7972:	55                   	push   rbp
    7973:	48 89 e5             	mov    rbp,rsp
    7976:	48 83 ec 20          	sub    rsp,0x20
    797a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    797e:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7985:	eb 47                	jmp    79ce <member_exists+0x60>
    7987:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    798a:	8d 50 01             	lea    edx,[rax+0x1]
    798d:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    7990:	48 63 d0             	movsxd rdx,eax
    7993:	48 89 d0             	mov    rax,rdx
    7996:	48 c1 e0 02          	shl    rax,0x2
    799a:	48 01 d0             	add    rax,rdx
    799d:	48 c1 e0 03          	shl    rax,0x3
    79a1:	48 01 d0             	add    rax,rdx
    79a4:	48 c1 e0 04          	shl    rax,0x4
    79a8:	48 8d 15 71 bb 0e 00 	lea    rdx,[rip+0xebb71]        # f3520 <watchlist>
    79af:	48 01 d0             	add    rax,rdx
    79b2:	48 8d 50 08          	lea    rdx,[rax+0x8]
    79b6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    79ba:	48 89 c6             	mov    rsi,rax
    79bd:	48 89 d7             	mov    rdi,rdx
    79c0:	e8 bb ad ff ff       	call   2780 <strcmp@plt>
    79c5:	85 c0                	test   eax,eax
    79c7:	75 05                	jne    79ce <member_exists+0x60>
    79c9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    79cc:	eb 10                	jmp    79de <member_exists+0x70>
    79ce:	8b 05 44 96 00 00    	mov    eax,DWORD PTR [rip+0x9644]        # 11018 <watchlist_num>
    79d4:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    79d7:	7e ae                	jle    7987 <member_exists+0x19>
    79d9:	b8 ff ff ff ff       	mov    eax,0xffffffff
    79de:	c9                   	leave  
    79df:	c3                   	ret    

00000000000079e0 <init_member>:
    79e0:	f3 0f 1e fa          	endbr64 
    79e4:	55                   	push   rbp
    79e5:	48 89 e5             	mov    rbp,rsp
    79e8:	48 83 ec 20          	sub    rsp,0x20
    79ec:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    79f0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    79f4:	48 89 c7             	mov    rdi,rax
    79f7:	e8 72 ff ff ff       	call   796e <member_exists>
    79fc:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    79ff:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    7a03:	74 42                	je     7a47 <init_member+0x67>
    7a05:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7a08:	48 63 d0             	movsxd rdx,eax
    7a0b:	48 89 d0             	mov    rax,rdx
    7a0e:	48 c1 e0 02          	shl    rax,0x2
    7a12:	48 01 d0             	add    rax,rdx
    7a15:	48 c1 e0 03          	shl    rax,0x3
    7a19:	48 01 d0             	add    rax,rdx
    7a1c:	48 c1 e0 04          	shl    rax,0x4
    7a20:	48 8d 15 f9 ba 0e 00 	lea    rdx,[rip+0xebaf9]        # f3520 <watchlist>
    7a27:	48 01 d0             	add    rax,rdx
    7a2a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7a2e:	bf 00 00 00 00       	mov    edi,0x0
    7a33:	e8 78 ae ff ff       	call   28b0 <time@plt>
    7a38:	48 89 c2             	mov    rdx,rax
    7a3b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a3f:	48 89 10             	mov    QWORD PTR [rax],rdx
    7a42:	e9 a8 00 00 00       	jmp    7aef <init_member+0x10f>
    7a47:	48 8d 3d 07 5b 00 00 	lea    rdi,[rip+0x5b07]        # d555 <_IO_stdin_used+0x1555>
    7a4e:	e8 1b ff ff ff       	call   796e <member_exists>
    7a53:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7a56:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    7a5a:	74 2b                	je     7a87 <init_member+0xa7>
    7a5c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7a5f:	48 63 d0             	movsxd rdx,eax
    7a62:	48 89 d0             	mov    rax,rdx
    7a65:	48 c1 e0 02          	shl    rax,0x2
    7a69:	48 01 d0             	add    rax,rdx
    7a6c:	48 c1 e0 03          	shl    rax,0x3
    7a70:	48 01 d0             	add    rax,rdx
    7a73:	48 c1 e0 04          	shl    rax,0x4
    7a77:	48 8d 15 a2 ba 0e 00 	lea    rdx,[rip+0xebaa2]        # f3520 <watchlist>
    7a7e:	48 01 d0             	add    rax,rdx
    7a81:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7a85:	eb 3b                	jmp    7ac2 <init_member+0xe2>
    7a87:	8b 05 8b 95 00 00    	mov    eax,DWORD PTR [rip+0x958b]        # 11018 <watchlist_num>
    7a8d:	83 c0 01             	add    eax,0x1
    7a90:	89 05 82 95 00 00    	mov    DWORD PTR [rip+0x9582],eax        # 11018 <watchlist_num>
    7a96:	8b 05 7c 95 00 00    	mov    eax,DWORD PTR [rip+0x957c]        # 11018 <watchlist_num>
    7a9c:	48 63 d0             	movsxd rdx,eax
    7a9f:	48 89 d0             	mov    rax,rdx
    7aa2:	48 c1 e0 02          	shl    rax,0x2
    7aa6:	48 01 d0             	add    rax,rdx
    7aa9:	48 c1 e0 03          	shl    rax,0x3
    7aad:	48 01 d0             	add    rax,rdx
    7ab0:	48 c1 e0 04          	shl    rax,0x4
    7ab4:	48 8d 15 65 ba 0e 00 	lea    rdx,[rip+0xeba65]        # f3520 <watchlist>
    7abb:	48 01 d0             	add    rax,rdx
    7abe:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7ac2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7ac6:	ba 08 00 00 00       	mov    edx,0x8
    7acb:	be 00 00 00 00       	mov    esi,0x0
    7ad0:	48 89 c7             	mov    rdi,rax
    7ad3:	e8 d8 a9 ff ff       	call   24b0 <memset@plt>
    7ad8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7adc:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7ae0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7ae4:	48 89 c6             	mov    rsi,rax
    7ae7:	48 89 d7             	mov    rdi,rdx
    7aea:	e8 c1 ac ff ff       	call   27b0 <strcpy@plt>
    7aef:	c9                   	leave  
    7af0:	c3                   	ret    

0000000000007af1 <ready_for_clean>:
    7af1:	f3 0f 1e fa          	endbr64 
    7af5:	55                   	push   rbp
    7af6:	48 89 e5             	mov    rbp,rsp
    7af9:	48 83 ec 10          	sub    rsp,0x10
    7afd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7b01:	bf 00 00 00 00       	mov    edi,0x0
    7b06:	e8 a5 ad ff ff       	call   28b0 <time@plt>
    7b0b:	48 89 c2             	mov    rdx,rax
    7b0e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b12:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7b15:	48 29 c2             	sub    rdx,rax
    7b18:	48 8b 05 99 97 00 00 	mov    rax,QWORD PTR [rip+0x9799]        # 112b8 <clean_delay>
    7b1f:	48 39 c2             	cmp    rdx,rax
    7b22:	72 22                	jb     7b46 <ready_for_clean+0x55>
    7b24:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b28:	48 83 c0 08          	add    rax,0x8
    7b2c:	48 8d 35 2a 5a 00 00 	lea    rsi,[rip+0x5a2a]        # d55d <_IO_stdin_used+0x155d>
    7b33:	48 89 c7             	mov    rdi,rax
    7b36:	e8 45 ac ff ff       	call   2780 <strcmp@plt>
    7b3b:	85 c0                	test   eax,eax
    7b3d:	74 07                	je     7b46 <ready_for_clean+0x55>
    7b3f:	b8 01 00 00 00       	mov    eax,0x1
    7b44:	eb 05                	jmp    7b4b <ready_for_clean+0x5a>
    7b46:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7b4b:	c9                   	leave  
    7b4c:	c3                   	ret    

0000000000007b4d <clean>:
    7b4d:	f3 0f 1e fa          	endbr64 
    7b51:	55                   	push   rbp
    7b52:	48 89 e5             	mov    rbp,rsp
    7b55:	48 83 ec 10          	sub    rsp,0x10
    7b59:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7b5d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b61:	ba 08 00 00 00       	mov    edx,0x8
    7b66:	be 00 00 00 00       	mov    esi,0x0
    7b6b:	48 89 c7             	mov    rdi,rax
    7b6e:	e8 3d a9 ff ff       	call   24b0 <memset@plt>
    7b73:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b77:	48 83 c0 08          	add    rax,0x8
    7b7b:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7b82:	2e 31 00 
    7b85:	48 89 08             	mov    QWORD PTR [rax],rcx
    7b88:	90                   	nop
    7b89:	c9                   	leave  
    7b8a:	c3                   	ret    

0000000000007b8b <scan_for_clean>:
    7b8b:	f3 0f 1e fa          	endbr64 
    7b8f:	55                   	push   rbp
    7b90:	48 89 e5             	mov    rbp,rsp
    7b93:	48 83 ec 10          	sub    rsp,0x10
    7b97:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7b9e:	eb 62                	jmp    7c02 <scan_for_clean+0x77>
    7ba0:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7ba3:	48 63 d0             	movsxd rdx,eax
    7ba6:	48 89 d0             	mov    rax,rdx
    7ba9:	48 c1 e0 02          	shl    rax,0x2
    7bad:	48 01 d0             	add    rax,rdx
    7bb0:	48 c1 e0 03          	shl    rax,0x3
    7bb4:	48 01 d0             	add    rax,rdx
    7bb7:	48 c1 e0 04          	shl    rax,0x4
    7bbb:	48 8d 15 5e b9 0e 00 	lea    rdx,[rip+0xeb95e]        # f3520 <watchlist>
    7bc2:	48 01 d0             	add    rax,rdx
    7bc5:	48 89 c7             	mov    rdi,rax
    7bc8:	e8 24 ff ff ff       	call   7af1 <ready_for_clean>
    7bcd:	85 c0                	test   eax,eax
    7bcf:	7e 2d                	jle    7bfe <scan_for_clean+0x73>
    7bd1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7bd4:	48 63 d0             	movsxd rdx,eax
    7bd7:	48 89 d0             	mov    rax,rdx
    7bda:	48 c1 e0 02          	shl    rax,0x2
    7bde:	48 01 d0             	add    rax,rdx
    7be1:	48 c1 e0 03          	shl    rax,0x3
    7be5:	48 01 d0             	add    rax,rdx
    7be8:	48 c1 e0 04          	shl    rax,0x4
    7bec:	48 8d 15 2d b9 0e 00 	lea    rdx,[rip+0xeb92d]        # f3520 <watchlist>
    7bf3:	48 01 d0             	add    rax,rdx
    7bf6:	48 89 c7             	mov    rdi,rax
    7bf9:	e8 4f ff ff ff       	call   7b4d <clean>
    7bfe:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7c02:	8b 05 10 94 00 00    	mov    eax,DWORD PTR [rip+0x9410]        # 11018 <watchlist_num>
    7c08:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7c0b:	7e 93                	jle    7ba0 <scan_for_clean+0x15>
    7c0d:	90                   	nop
    7c0e:	90                   	nop
    7c0f:	c9                   	leave  
    7c10:	c3                   	ret    

0000000000007c11 <compare_entries>:
    7c11:	f3 0f 1e fa          	endbr64 
    7c15:	55                   	push   rbp
    7c16:	48 89 e5             	mov    rbp,rsp
    7c19:	48 83 ec 20          	sub    rsp,0x20
    7c1d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7c21:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7c25:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c2c:	e9 ac 00 00 00       	jmp    7cdd <compare_entries+0xcc>
    7c31:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c34:	48 63 d0             	movsxd rdx,eax
    7c37:	48 89 d0             	mov    rax,rdx
    7c3a:	48 c1 e0 04          	shl    rax,0x4
    7c3e:	48 01 d0             	add    rax,rdx
    7c41:	48 01 c0             	add    rax,rax
    7c44:	48 8d 15 d5 00 10 00 	lea    rdx,[rip+0x1000d5]        # 107d20 <arpcache>
    7c4b:	48 01 c2             	add    rdx,rax
    7c4e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7c52:	48 89 c6             	mov    rsi,rax
    7c55:	48 89 d7             	mov    rdi,rdx
    7c58:	e8 a3 01 00 00       	call   7e00 <compare_ip_entry>
    7c5d:	85 c0                	test   eax,eax
    7c5f:	74 78                	je     7cd9 <compare_entries+0xc8>
    7c61:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c64:	48 63 d0             	movsxd rdx,eax
    7c67:	48 89 d0             	mov    rax,rdx
    7c6a:	48 c1 e0 04          	shl    rax,0x4
    7c6e:	48 01 d0             	add    rax,rdx
    7c71:	48 01 c0             	add    rax,rax
    7c74:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7c78:	48 8d 05 a1 00 10 00 	lea    rax,[rip+0x1000a1]        # 107d20 <arpcache>
    7c7f:	48 01 c2             	add    rdx,rax
    7c82:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7c86:	48 89 c6             	mov    rsi,rax
    7c89:	48 89 d7             	mov    rdi,rdx
    7c8c:	e8 98 01 00 00       	call   7e29 <compare_mac_entry>
    7c91:	85 c0                	test   eax,eax
    7c93:	75 44                	jne    7cd9 <compare_entries+0xc8>
    7c95:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c98:	48 63 d0             	movsxd rdx,eax
    7c9b:	48 89 d0             	mov    rax,rdx
    7c9e:	48 c1 e0 04          	shl    rax,0x4
    7ca2:	48 01 d0             	add    rax,rdx
    7ca5:	48 01 c0             	add    rax,rax
    7ca8:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7cac:	48 8d 05 6d 00 10 00 	lea    rax,[rip+0x10006d]        # 107d20 <arpcache>
    7cb3:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7cb7:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7cbb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7cbf:	48 89 d1             	mov    rcx,rdx
    7cc2:	48 89 f2             	mov    rdx,rsi
    7cc5:	48 89 c6             	mov    rsi,rax
    7cc8:	48 8d 3d 99 58 00 00 	lea    rdi,[rip+0x5899]        # d568 <_IO_stdin_used+0x1568>
    7ccf:	b8 00 00 00 00       	mov    eax,0x0
    7cd4:	e8 c7 a7 ff ff       	call   24a0 <printf@plt>
    7cd9:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7cdd:	8b 05 39 93 00 00    	mov    eax,DWORD PTR [rip+0x9339]        # 1101c <arp_entries>
    7ce3:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7ce6:	0f 8e 45 ff ff ff    	jle    7c31 <compare_entries+0x20>
    7cec:	90                   	nop
    7ced:	90                   	nop
    7cee:	c9                   	leave  
    7cef:	c3                   	ret    

0000000000007cf0 <add_entry>:
    7cf0:	f3 0f 1e fa          	endbr64 
    7cf4:	55                   	push   rbp
    7cf5:	48 89 e5             	mov    rbp,rsp
    7cf8:	48 83 ec 20          	sub    rsp,0x20
    7cfc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7d00:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7d04:	8b 05 12 93 00 00    	mov    eax,DWORD PTR [rip+0x9312]        # 1101c <arp_entries>
    7d0a:	83 c0 01             	add    eax,0x1
    7d0d:	89 05 09 93 00 00    	mov    DWORD PTR [rip+0x9309],eax        # 1101c <arp_entries>
    7d13:	8b 05 03 93 00 00    	mov    eax,DWORD PTR [rip+0x9303]        # 1101c <arp_entries>
    7d19:	48 63 d0             	movsxd rdx,eax
    7d1c:	48 89 d0             	mov    rax,rdx
    7d1f:	48 c1 e0 04          	shl    rax,0x4
    7d23:	48 01 d0             	add    rax,rdx
    7d26:	48 01 c0             	add    rax,rax
    7d29:	48 8d 15 f0 ff 0f 00 	lea    rdx,[rip+0xffff0]        # 107d20 <arpcache>
    7d30:	48 01 d0             	add    rax,rdx
    7d33:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7d37:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d3b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7d3f:	48 89 d6             	mov    rsi,rdx
    7d42:	48 89 c7             	mov    rdi,rax
    7d45:	e8 66 aa ff ff       	call   27b0 <strcpy@plt>
    7d4a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d4e:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d52:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7d56:	48 89 c6             	mov    rsi,rax
    7d59:	48 89 d7             	mov    rdi,rdx
    7d5c:	e8 4f aa ff ff       	call   27b0 <strcpy@plt>
    7d61:	90                   	nop
    7d62:	c9                   	leave  
    7d63:	c3                   	ret    

0000000000007d64 <entry_exists>:
    7d64:	f3 0f 1e fa          	endbr64 
    7d68:	55                   	push   rbp
    7d69:	48 89 e5             	mov    rbp,rsp
    7d6c:	48 83 ec 20          	sub    rsp,0x20
    7d70:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7d74:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7d78:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7d7f:	eb 6d                	jmp    7dee <entry_exists+0x8a>
    7d81:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7d84:	48 63 d0             	movsxd rdx,eax
    7d87:	48 89 d0             	mov    rax,rdx
    7d8a:	48 c1 e0 04          	shl    rax,0x4
    7d8e:	48 01 d0             	add    rax,rdx
    7d91:	48 01 c0             	add    rax,rax
    7d94:	48 8d 15 85 ff 0f 00 	lea    rdx,[rip+0xfff85]        # 107d20 <arpcache>
    7d9b:	48 01 c2             	add    rdx,rax
    7d9e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7da2:	48 89 c6             	mov    rsi,rax
    7da5:	48 89 d7             	mov    rdi,rdx
    7da8:	e8 53 00 00 00       	call   7e00 <compare_ip_entry>
    7dad:	85 c0                	test   eax,eax
    7daf:	75 39                	jne    7dea <entry_exists+0x86>
    7db1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7db4:	48 63 d0             	movsxd rdx,eax
    7db7:	48 89 d0             	mov    rax,rdx
    7dba:	48 c1 e0 04          	shl    rax,0x4
    7dbe:	48 01 d0             	add    rax,rdx
    7dc1:	48 01 c0             	add    rax,rax
    7dc4:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7dc8:	48 8d 05 51 ff 0f 00 	lea    rax,[rip+0xfff51]        # 107d20 <arpcache>
    7dcf:	48 01 c2             	add    rdx,rax
    7dd2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7dd6:	48 89 c6             	mov    rsi,rax
    7dd9:	48 89 d7             	mov    rdi,rdx
    7ddc:	e8 48 00 00 00       	call   7e29 <compare_mac_entry>
    7de1:	85 c0                	test   eax,eax
    7de3:	75 05                	jne    7dea <entry_exists+0x86>
    7de5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7de8:	eb 14                	jmp    7dfe <entry_exists+0x9a>
    7dea:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7dee:	8b 05 28 92 00 00    	mov    eax,DWORD PTR [rip+0x9228]        # 1101c <arp_entries>
    7df4:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7df7:	7e 88                	jle    7d81 <entry_exists+0x1d>
    7df9:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7dfe:	c9                   	leave  
    7dff:	c3                   	ret    

0000000000007e00 <compare_ip_entry>:
    7e00:	f3 0f 1e fa          	endbr64 
    7e04:	55                   	push   rbp
    7e05:	48 89 e5             	mov    rbp,rsp
    7e08:	48 83 ec 10          	sub    rsp,0x10
    7e0c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7e10:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7e14:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7e18:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e1c:	48 89 d6             	mov    rsi,rdx
    7e1f:	48 89 c7             	mov    rdi,rax
    7e22:	e8 59 a9 ff ff       	call   2780 <strcmp@plt>
    7e27:	c9                   	leave  
    7e28:	c3                   	ret    

0000000000007e29 <compare_mac_entry>:
    7e29:	f3 0f 1e fa          	endbr64 
    7e2d:	55                   	push   rbp
    7e2e:	48 89 e5             	mov    rbp,rsp
    7e31:	48 83 ec 10          	sub    rsp,0x10
    7e35:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7e39:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7e3d:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7e41:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e45:	48 89 d6             	mov    rsi,rdx
    7e48:	48 89 c7             	mov    rdi,rax
    7e4b:	e8 30 a9 ff ff       	call   2780 <strcmp@plt>
    7e50:	c9                   	leave  
    7e51:	c3                   	ret    

0000000000007e52 <load_csv_arp_cache>:
    7e52:	f3 0f 1e fa          	endbr64 
    7e56:	55                   	push   rbp
    7e57:	48 89 e5             	mov    rbp,rsp
    7e5a:	53                   	push   rbx
    7e5b:	48 83 ec 68          	sub    rsp,0x68
    7e5f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7e66:	00 00 
    7e68:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7e6c:	31 c0                	xor    eax,eax
    7e6e:	48 8d 35 29 57 00 00 	lea    rsi,[rip+0x5729]        # d59e <_IO_stdin_used+0x159e>
    7e75:	48 8d 3d 24 57 00 00 	lea    rdi,[rip+0x5724]        # d5a0 <_IO_stdin_used+0x15a0>
    7e7c:	e8 0f a7 ff ff       	call   2590 <fopen@plt>
    7e81:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7e85:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7e8a:	75 22                	jne    7eae <load_csv_arp_cache+0x5c>
    7e8c:	48 8d 3d 2d 57 00 00 	lea    rdi,[rip+0x572d]        # d5c0 <_IO_stdin_used+0x15c0>
    7e93:	e8 68 a6 ff ff       	call   2500 <puts@plt>
    7e98:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7e9c:	48 89 c7             	mov    rdi,rax
    7e9f:	e8 4c a9 ff ff       	call   27f0 <fclose@plt>
    7ea4:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7ea9:	e9 dd 00 00 00       	jmp    7f8b <load_csv_arp_cache+0x139>
    7eae:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7eb5:	00 
    7eb6:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7ebd:	00 
    7ebe:	eb 7c                	jmp    7f3c <load_csv_arp_cache+0xea>
    7ec0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7ec4:	48 85 c0             	test   rax,rax
    7ec7:	0f 84 97 00 00 00    	je     7f64 <load_csv_arp_cache+0x112>
    7ecd:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7ed1:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7ed5:	48 8d 35 1d 57 00 00 	lea    rsi,[rip+0x571d]        # d5f9 <_IO_stdin_used+0x15f9>
    7edc:	48 89 c7             	mov    rdi,rax
    7edf:	e8 2c a9 ff ff       	call   2810 <strcspn@plt>
    7ee4:	48 01 d8             	add    rax,rbx
    7ee7:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7eea:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7eee:	48 8d 35 06 57 00 00 	lea    rsi,[rip+0x5706]        # d5fb <_IO_stdin_used+0x15fb>
    7ef5:	48 89 c7             	mov    rdi,rax
    7ef8:	e8 c3 a8 ff ff       	call   27c0 <strtok@plt>
    7efd:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7f01:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7f05:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7f09:	48 89 d6             	mov    rsi,rdx
    7f0c:	48 89 c7             	mov    rdi,rax
    7f0f:	e8 9c a8 ff ff       	call   27b0 <strcpy@plt>
    7f14:	48 8d 35 e0 56 00 00 	lea    rsi,[rip+0x56e0]        # d5fb <_IO_stdin_used+0x15fb>
    7f1b:	bf 00 00 00 00       	mov    edi,0x0
    7f20:	e8 9b a8 ff ff       	call   27c0 <strtok@plt>
    7f25:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7f29:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7f2d:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7f31:	48 89 d6             	mov    rsi,rdx
    7f34:	48 89 c7             	mov    rdi,rax
    7f37:	e8 74 a8 ff ff       	call   27b0 <strcpy@plt>
    7f3c:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    7f40:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    7f44:	48 8d 45 98          	lea    rax,[rbp-0x68]
    7f48:	48 89 ce             	mov    rsi,rcx
    7f4b:	48 89 c7             	mov    rdi,rax
    7f4e:	e8 4d a8 ff ff       	call   27a0 <getline@plt>
    7f53:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7f57:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    7f5c:	0f 85 5e ff ff ff    	jne    7ec0 <load_csv_arp_cache+0x6e>
    7f62:	eb 01                	jmp    7f65 <load_csv_arp_cache+0x113>
    7f64:	90                   	nop
    7f65:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f69:	48 85 c0             	test   rax,rax
    7f6c:	74 0c                	je     7f7a <load_csv_arp_cache+0x128>
    7f6e:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f72:	48 89 c7             	mov    rdi,rax
    7f75:	e8 96 a6 ff ff       	call   2610 <free@plt>
    7f7a:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7f7e:	48 89 c7             	mov    rdi,rax
    7f81:	e8 6a a8 ff ff       	call   27f0 <fclose@plt>
    7f86:	b8 01 00 00 00       	mov    eax,0x1
    7f8b:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7f8f:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    7f96:	00 00 
    7f98:	74 05                	je     7f9f <load_csv_arp_cache+0x14d>
    7f9a:	e8 d1 a7 ff ff       	call   2770 <__stack_chk_fail@plt>
    7f9f:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7fa3:	c9                   	leave  
    7fa4:	c3                   	ret    

0000000000007fa5 <tls_decode>:
    7fa5:	f3 0f 1e fa          	endbr64 
    7fa9:	55                   	push   rbp
    7faa:	48 89 e5             	mov    rbp,rsp
    7fad:	48 83 ec 30          	sub    rsp,0x30
    7fb1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7fb5:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7fb9:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    7fbd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7fc1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7fc5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7fc9:	0f b7 40 01          	movzx  eax,WORD PTR [rax+0x1]
    7fcd:	0f b7 c0             	movzx  eax,ax
    7fd0:	3d 03 03 00 00       	cmp    eax,0x303
    7fd5:	74 6a                	je     8041 <tls_decode+0x9c>
    7fd7:	3d 03 03 00 00       	cmp    eax,0x303
    7fdc:	0f 8f c7 00 00 00    	jg     80a9 <tls_decode+0x104>
    7fe2:	3d 01 03 00 00       	cmp    eax,0x301
    7fe7:	74 0c                	je     7ff5 <tls_decode+0x50>
    7fe9:	3d 02 03 00 00       	cmp    eax,0x302
    7fee:	74 2b                	je     801b <tls_decode+0x76>
    7ff0:	e9 b4 00 00 00       	jmp    80a9 <tls_decode+0x104>
    7ff5:	0f b6 05 68 1f 10 00 	movzx  eax,BYTE PTR [rip+0x101f68]        # 109f64 <packet_print>
    7ffc:	84 c0                	test   al,al
    7ffe:	74 11                	je     8011 <tls_decode+0x6c>
    8000:	48 8d 3d f9 55 00 00 	lea    rdi,[rip+0x55f9]        # d600 <_IO_stdin_used+0x1600>
    8007:	b8 00 00 00 00       	mov    eax,0x0
    800c:	e8 8f a4 ff ff       	call   24a0 <printf@plt>
    8011:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8015:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8019:	eb 4b                	jmp    8066 <tls_decode+0xc1>
    801b:	0f b6 05 42 1f 10 00 	movzx  eax,BYTE PTR [rip+0x101f42]        # 109f64 <packet_print>
    8022:	84 c0                	test   al,al
    8024:	74 11                	je     8037 <tls_decode+0x92>
    8026:	48 8d 3d e2 55 00 00 	lea    rdi,[rip+0x55e2]        # d60f <_IO_stdin_used+0x160f>
    802d:	b8 00 00 00 00       	mov    eax,0x0
    8032:	e8 69 a4 ff ff       	call   24a0 <printf@plt>
    8037:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    803b:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    803f:	eb 25                	jmp    8066 <tls_decode+0xc1>
    8041:	0f b6 05 1c 1f 10 00 	movzx  eax,BYTE PTR [rip+0x101f1c]        # 109f64 <packet_print>
    8048:	84 c0                	test   al,al
    804a:	74 11                	je     805d <tls_decode+0xb8>
    804c:	48 8d 3d cb 55 00 00 	lea    rdi,[rip+0x55cb]        # d61e <_IO_stdin_used+0x161e>
    8053:	b8 00 00 00 00       	mov    eax,0x0
    8058:	e8 43 a4 ff ff       	call   24a0 <printf@plt>
    805d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8061:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8065:	90                   	nop
    8066:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    806a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    806d:	0f b6 c0             	movzx  eax,al
    8070:	83 f8 17             	cmp    eax,0x17
    8073:	74 37                	je     80ac <tls_decode+0x107>
    8075:	83 f8 17             	cmp    eax,0x17
    8078:	7f 35                	jg     80af <tls_decode+0x10a>
    807a:	83 f8 16             	cmp    eax,0x16
    807d:	74 11                	je     8090 <tls_decode+0xeb>
    807f:	83 f8 16             	cmp    eax,0x16
    8082:	7f 2b                	jg     80af <tls_decode+0x10a>
    8084:	83 f8 14             	cmp    eax,0x14
    8087:	74 29                	je     80b2 <tls_decode+0x10d>
    8089:	83 f8 15             	cmp    eax,0x15
    808c:	74 27                	je     80b5 <tls_decode+0x110>
    808e:	eb 1f                	jmp    80af <tls_decode+0x10a>
    8090:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    8094:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    8098:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    809c:	48 89 ce             	mov    rsi,rcx
    809f:	48 89 c7             	mov    rdi,rax
    80a2:	e8 11 00 00 00       	call   80b8 <tlshandshake>
    80a7:	eb 0d                	jmp    80b6 <tls_decode+0x111>
    80a9:	90                   	nop
    80aa:	eb 0a                	jmp    80b6 <tls_decode+0x111>
    80ac:	90                   	nop
    80ad:	eb 07                	jmp    80b6 <tls_decode+0x111>
    80af:	90                   	nop
    80b0:	eb 04                	jmp    80b6 <tls_decode+0x111>
    80b2:	90                   	nop
    80b3:	eb 01                	jmp    80b6 <tls_decode+0x111>
    80b5:	90                   	nop
    80b6:	c9                   	leave  
    80b7:	c3                   	ret    

00000000000080b8 <tlshandshake>:
    80b8:	f3 0f 1e fa          	endbr64 
    80bc:	55                   	push   rbp
    80bd:	48 89 e5             	mov    rbp,rsp
    80c0:	48 83 ec 30          	sub    rsp,0x30
    80c4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    80c8:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    80cc:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    80d0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    80d4:	48 83 c0 08          	add    rax,0x8
    80d8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    80dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    80e0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    80e3:	0f b6 c0             	movzx  eax,al
    80e6:	83 f8 0b             	cmp    eax,0xb
    80e9:	0f 87 bf 00 00 00    	ja     81ae <tlshandshake+0xf6>
    80ef:	89 c0                	mov    eax,eax
    80f1:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    80f8:	00 
    80f9:	48 8d 05 74 55 00 00 	lea    rax,[rip+0x5574]        # d674 <_IO_stdin_used+0x1674>
    8100:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    8103:	48 98                	cdqe   
    8105:	48 8d 15 68 55 00 00 	lea    rdx,[rip+0x5568]        # d674 <_IO_stdin_used+0x1674>
    810c:	48 01 d0             	add    rax,rdx
    810f:	3e ff e0             	notrack jmp rax
    8112:	48 8d 3d 14 55 00 00 	lea    rdi,[rip+0x5514]        # d62d <_IO_stdin_used+0x162d>
    8119:	e8 e2 a3 ff ff       	call   2500 <puts@plt>
    811e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8122:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8126:	e9 83 00 00 00       	jmp    81ae <tlshandshake+0xf6>
    812b:	0f b6 05 32 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101e32]        # 109f64 <packet_print>
    8132:	84 c0                	test   al,al
    8134:	74 0c                	je     8142 <tlshandshake+0x8a>
    8136:	48 8d 3d fd 54 00 00 	lea    rdi,[rip+0x54fd]        # d63a <_IO_stdin_used+0x163a>
    813d:	e8 be a3 ff ff       	call   2500 <puts@plt>
    8142:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8146:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    814a:	eb 62                	jmp    81ae <tlshandshake+0xf6>
    814c:	0f b6 05 11 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101e11]        # 109f64 <packet_print>
    8153:	84 c0                	test   al,al
    8155:	74 0c                	je     8163 <tlshandshake+0xab>
    8157:	48 8d 3d e9 54 00 00 	lea    rdi,[rip+0x54e9]        # d647 <_IO_stdin_used+0x1647>
    815e:	e8 9d a3 ff ff       	call   2500 <puts@plt>
    8163:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8167:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    816b:	eb 41                	jmp    81ae <tlshandshake+0xf6>
    816d:	0f b6 05 f0 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101df0]        # 109f64 <packet_print>
    8174:	84 c0                	test   al,al
    8176:	74 0c                	je     8184 <tlshandshake+0xcc>
    8178:	48 8d 3d db 54 00 00 	lea    rdi,[rip+0x54db]        # d65a <_IO_stdin_used+0x165a>
    817f:	e8 7c a3 ff ff       	call   2500 <puts@plt>
    8184:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8188:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    818c:	eb 20                	jmp    81ae <tlshandshake+0xf6>
    818e:	0f b6 05 cf 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101dcf]        # 109f64 <packet_print>
    8195:	84 c0                	test   al,al
    8197:	74 0c                	je     81a5 <tlshandshake+0xed>
    8199:	48 8d 3d c6 54 00 00 	lea    rdi,[rip+0x54c6]        # d666 <_IO_stdin_used+0x1666>
    81a0:	e8 5b a3 ff ff       	call   2500 <puts@plt>
    81a5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81a9:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81ad:	90                   	nop
    81ae:	90                   	nop
    81af:	c9                   	leave  
    81b0:	c3                   	ret    

00000000000081b1 <process_opcode>:
    81b1:	f3 0f 1e fa          	endbr64 
    81b5:	55                   	push   rbp
    81b6:	48 89 e5             	mov    rbp,rsp
    81b9:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    81c0:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    81c7:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    81ce:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    81d5:	00 00 
    81d7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    81db:	31 c0                	xor    eax,eax
    81dd:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    81e4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    81e7:	0f b6 c0             	movzx  eax,al
    81ea:	3d db 00 00 00       	cmp    eax,0xdb
    81ef:	75 4b                	jne    823c <process_opcode+0x8b>
    81f1:	c6 85 e4 fb ff ff db 	mov    BYTE PTR [rbp-0x41c],0xdb
    81f8:	8b 85 e4 fb ff ff    	mov    eax,DWORD PTR [rbp-0x41c]
    81fe:	0f b6 c0             	movzx  eax,al
    8201:	0d 00 00 00 01       	or     eax,0x1000000
    8206:	89 85 e4 fb ff ff    	mov    DWORD PTR [rbp-0x41c],eax
    820c:	48 8d 85 e4 fb ff ff 	lea    rax,[rbp-0x41c]
    8213:	48 89 85 e8 fb ff ff 	mov    QWORD PTR [rbp-0x418],rax
    821a:	48 8b 85 d0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x430]
    8221:	8b 00                	mov    eax,DWORD PTR [rax]
    8223:	48 8b b5 e8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x418]
    822a:	b9 00 00 00 00       	mov    ecx,0x0
    822f:	ba 04 00 00 00       	mov    edx,0x4
    8234:	89 c7                	mov    edi,eax
    8236:	e8 55 a5 ff ff       	call   2790 <send@plt>
    823b:	90                   	nop
    823c:	90                   	nop
    823d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8241:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8248:	00 00 
    824a:	74 05                	je     8251 <process_opcode+0xa0>
    824c:	e8 1f a5 ff ff       	call   2770 <__stack_chk_fail@plt>
    8251:	c9                   	leave  
    8252:	c3                   	ret    

0000000000008253 <callback>:
    8253:	f3 0f 1e fa          	endbr64 
    8257:	55                   	push   rbp
    8258:	48 89 e5             	mov    rbp,rsp
    825b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    825f:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    8262:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    8266:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    826a:	b8 00 00 00 00       	mov    eax,0x0
    826f:	5d                   	pop    rbp
    8270:	c3                   	ret    

0000000000008271 <update_db>:
    8271:	f3 0f 1e fa          	endbr64 
    8275:	55                   	push   rbp
    8276:	48 89 e5             	mov    rbp,rsp
    8279:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    8280:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    8287:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    828e:	00 00 
    8290:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8294:	31 c0                	xor    eax,eax
    8296:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    829d:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    82a4:	48 8d 3d fd 53 00 00 	lea    rdi,[rip+0x53fd]        # d6a8 <_IO_stdin_used+0x16a8>
    82ab:	e8 50 a2 ff ff       	call   2500 <puts@plt>
    82b0:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    82b7:	00 00 00 00 
    82bb:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    82c2:	48 89 c6             	mov    rsi,rax
    82c5:	48 8d 3d 74 1c 10 00 	lea    rdi,[rip+0x101c74]        # 109f40 <sqlite_db_path>
    82cc:	e8 cf a5 ff ff       	call   28a0 <sqlite3_open@plt>
    82d1:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    82d7:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    82de:	74 28                	je     8308 <update_db+0x97>
    82e0:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    82e7:	48 89 c7             	mov    rdi,rax
    82ea:	e8 f1 a4 ff ff       	call   27e0 <sqlite3_errmsg@plt>
    82ef:	48 89 c6             	mov    rsi,rax
    82f2:	48 8d 3d bb 53 00 00 	lea    rdi,[rip+0x53bb]        # d6b4 <_IO_stdin_used+0x16b4>
    82f9:	b8 00 00 00 00       	mov    eax,0x0
    82fe:	e8 9d a1 ff ff       	call   24a0 <printf@plt>
    8303:	e9 a2 00 00 00       	jmp    83aa <update_db+0x139>
    8308:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    830f:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    8312:	85 c0                	test   eax,eax
    8314:	75 2e                	jne    8344 <update_db+0xd3>
    8316:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    831d:	48 8d 48 10          	lea    rcx,[rax+0x10]
    8321:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    8328:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    832f:	48 8d 35 92 53 00 00 	lea    rsi,[rip+0x5392]        # d6c8 <_IO_stdin_used+0x16c8>
    8336:	48 89 c7             	mov    rdi,rax
    8339:	b8 00 00 00 00       	mov    eax,0x0
    833e:	e8 fd a2 ff ff       	call   2640 <sprintf@plt>
    8343:	90                   	nop
    8344:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    834b:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    8352:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    8359:	49 89 d0             	mov    r8,rdx
    835c:	b9 00 00 00 00       	mov    ecx,0x0
    8361:	ba 00 00 00 00       	mov    edx,0x0
    8366:	48 89 c7             	mov    rdi,rax
    8369:	e8 d2 a1 ff ff       	call   2540 <sqlite3_exec@plt>
    836e:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    8374:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    837b:	74 2c                	je     83a9 <update_db+0x138>
    837d:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    8384:	48 89 c6             	mov    rsi,rax
    8387:	48 8d 3d 7f 53 00 00 	lea    rdi,[rip+0x537f]        # d70d <_IO_stdin_used+0x170d>
    838e:	b8 00 00 00 00       	mov    eax,0x0
    8393:	e8 08 a1 ff ff       	call   24a0 <printf@plt>
    8398:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    839f:	48 89 c7             	mov    rdi,rax
    83a2:	e8 29 a2 ff ff       	call   25d0 <sqlite3_free@plt>
    83a7:	eb 01                	jmp    83aa <update_db+0x139>
    83a9:	90                   	nop
    83aa:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    83b1:	48 89 c7             	mov    rdi,rax
    83b4:	e8 c7 a0 ff ff       	call   2480 <sqlite3_close@plt>
    83b9:	b8 01 00 00 00       	mov    eax,0x1
    83be:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    83c2:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    83c9:	00 00 
    83cb:	74 05                	je     83d2 <update_db+0x161>
    83cd:	e8 9e a3 ff ff       	call   2770 <__stack_chk_fail@plt>
    83d2:	c9                   	leave  
    83d3:	c3                   	ret    

00000000000083d4 <update_spi_db>:
    83d4:	f3 0f 1e fa          	endbr64 
    83d8:	55                   	push   rbp
    83d9:	48 89 e5             	mov    rbp,rsp
    83dc:	41 57                	push   r15
    83de:	41 56                	push   r14
    83e0:	41 55                	push   r13
    83e2:	41 54                	push   r12
    83e4:	53                   	push   rbx
    83e5:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    83ec:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    83f3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    83fa:	00 00 
    83fc:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    8400:	31 c0                	xor    eax,eax
    8402:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    8409:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    8410:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    8417:	48 89 c6             	mov    rsi,rax
    841a:	48 8d 3d 0a 53 00 00 	lea    rdi,[rip+0x530a]        # d72b <_IO_stdin_used+0x172b>
    8421:	e8 7a a4 ff ff       	call   28a0 <sqlite3_open@plt>
    8426:	85 c0                	test   eax,eax
    8428:	74 3c                	je     8466 <update_spi_db+0x92>
    842a:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8431:	48 89 c7             	mov    rdi,rax
    8434:	e8 a7 a3 ff ff       	call   27e0 <sqlite3_errmsg@plt>
    8439:	48 89 c6             	mov    rsi,rax
    843c:	48 8d 3d 00 53 00 00 	lea    rdi,[rip+0x5300]        # d743 <_IO_stdin_used+0x1743>
    8443:	b8 00 00 00 00       	mov    eax,0x0
    8448:	e8 53 a0 ff ff       	call   24a0 <printf@plt>
    844d:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    8454:	48 89 c7             	mov    rdi,rax
    8457:	e8 24 a0 ff ff       	call   2480 <sqlite3_close@plt>
    845c:	b8 00 00 00 00       	mov    eax,0x0
    8461:	e9 5c 01 00 00       	jmp    85c2 <update_spi_db+0x1ee>
    8466:	48 8d 05 eb 52 00 00 	lea    rax,[rip+0x52eb]        # d758 <_IO_stdin_used+0x1758>
    846d:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    8474:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    847b:	8b 90 80 00 00 00    	mov    edx,DWORD PTR [rax+0x80]
    8481:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8488:	44 8b 78 7c          	mov    r15d,DWORD PTR [rax+0x7c]
    848c:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8493:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    849a:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84a1:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    84a8:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84af:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    84b6:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84bd:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    84c3:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84ca:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    84ce:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    84d1:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84d8:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    84dc:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84e3:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    84e7:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    84ea:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84f1:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    84f5:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84fc:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    84ff:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    8505:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    850c:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    850f:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    8515:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    851c:	48 8d 48 29          	lea    rcx,[rax+0x29]
    8520:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    8527:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    852e:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    8535:	52                   	push   rdx
    8536:	41 57                	push   r15
    8538:	41 56                	push   r14
    853a:	41 55                	push   r13
    853c:	41 54                	push   r12
    853e:	53                   	push   rbx
    853f:	41 53                	push   r11
    8541:	41 52                	push   r10
    8543:	41 51                	push   r9
    8545:	41 50                	push   r8
    8547:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    854e:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    8555:	48 89 fa             	mov    rdx,rdi
    8558:	48 89 c7             	mov    rdi,rax
    855b:	b8 00 00 00 00       	mov    eax,0x0
    8560:	e8 db a0 ff ff       	call   2640 <sprintf@plt>
    8565:	48 83 c4 50          	add    rsp,0x50
    8569:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    8570:	00 00 00 00 
    8574:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    857b:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    8582:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    8589:	49 89 d0             	mov    r8,rdx
    858c:	b9 00 00 00 00       	mov    ecx,0x0
    8591:	ba 00 00 00 00       	mov    edx,0x0
    8596:	48 89 c7             	mov    rdi,rax
    8599:	e8 a2 9f ff ff       	call   2540 <sqlite3_exec@plt>
    859e:	85 c0                	test   eax,eax
    85a0:	74 1b                	je     85bd <update_spi_db+0x1e9>
    85a2:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    85a9:	48 89 c6             	mov    rsi,rax
    85ac:	48 8d 3d 92 52 00 00 	lea    rdi,[rip+0x5292]        # d845 <_IO_stdin_used+0x1845>
    85b3:	b8 00 00 00 00       	mov    eax,0x0
    85b8:	e8 e3 9e ff ff       	call   24a0 <printf@plt>
    85bd:	b8 00 00 00 00       	mov    eax,0x0
    85c2:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    85c6:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    85cd:	00 00 
    85cf:	74 05                	je     85d6 <update_spi_db+0x202>
    85d1:	e8 9a a1 ff ff       	call   2770 <__stack_chk_fail@plt>
    85d6:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    85da:	5b                   	pop    rbx
    85db:	41 5c                	pop    r12
    85dd:	41 5d                	pop    r13
    85df:	41 5e                	pop    r14
    85e1:	41 5f                	pop    r15
    85e3:	5d                   	pop    rbp
    85e4:	c3                   	ret    

00000000000085e5 <http_disect>:
    85e5:	f3 0f 1e fa          	endbr64 
    85e9:	55                   	push   rbp
    85ea:	48 89 e5             	mov    rbp,rsp
    85ed:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    85f4:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    85fb:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    8602:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8609:	00 00 
    860b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    860f:	31 c0                	xor    eax,eax
    8611:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8618:	be 0d 00 00 00       	mov    esi,0xd
    861d:	48 89 c7             	mov    rdi,rax
    8620:	e8 ff ae ff ff       	call   3524 <strloc>
    8625:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    862b:	48 8d 3d 31 52 00 00 	lea    rdi,[rip+0x5231]        # d863 <_IO_stdin_used+0x1863>
    8632:	e8 c9 9e ff ff       	call   2500 <puts@plt>
    8637:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    863e:	48 89 c7             	mov    rdi,rax
    8641:	e8 85 af ff ff       	call   35cb <test_string_arr_print>
    8646:	83 f0 01             	xor    eax,0x1
    8649:	84 c0                	test   al,al
    864b:	75 33                	jne    8680 <http_disect+0x9b>
    864d:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    8653:	48 63 d0             	movsxd rdx,eax
    8656:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    865d:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    8664:	48 89 ce             	mov    rsi,rcx
    8667:	48 89 c7             	mov    rdi,rax
    866a:	e8 91 a1 ff ff       	call   2800 <strncpy@plt>
    866f:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    8676:	48 89 c7             	mov    rdi,rax
    8679:	e8 82 9e ff ff       	call   2500 <puts@plt>
    867e:	eb 01                	jmp    8681 <http_disect+0x9c>
    8680:	90                   	nop
    8681:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8685:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    868c:	00 00 
    868e:	74 05                	je     8695 <http_disect+0xb0>
    8690:	e8 db a0 ff ff       	call   2770 <__stack_chk_fail@plt>
    8695:	c9                   	leave  
    8696:	c3                   	ret    

0000000000008697 <dns_disect>:
    8697:	f3 0f 1e fa          	endbr64 
    869b:	55                   	push   rbp
    869c:	48 89 e5             	mov    rbp,rsp
    869f:	48 83 ec 30          	sub    rsp,0x30
    86a3:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    86a7:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    86ab:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    86af:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    86b3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    86b7:	48 83 c0 0c          	add    rax,0xc
    86bb:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    86bf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    86c3:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    86c7:	66 85 c0             	test   ax,ax
    86ca:	75 6d                	jne    8739 <dns_disect+0xa2>
    86cc:	bf 00 04 00 00       	mov    edi,0x400
    86d1:	e8 aa 9e ff ff       	call   2580 <malloc@plt>
    86d6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    86da:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86de:	ba 08 00 00 00       	mov    edx,0x8
    86e3:	be 00 00 00 00       	mov    esi,0x0
    86e8:	48 89 c7             	mov    rdi,rax
    86eb:	e8 c0 9d ff ff       	call   24b0 <memset@plt>
    86f0:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    86f4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    86f8:	48 89 d6             	mov    rsi,rdx
    86fb:	48 89 c7             	mov    rdi,rax
    86fe:	e8 39 00 00 00       	call   873c <get_dns_name>
    8703:	0f b6 05 5a 18 10 00 	movzx  eax,BYTE PTR [rip+0x10185a]        # 109f64 <packet_print>
    870a:	84 c0                	test   al,al
    870c:	74 18                	je     8726 <dns_disect+0x8f>
    870e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8712:	48 89 c6             	mov    rsi,rax
    8715:	48 8d 3d 59 51 00 00 	lea    rdi,[rip+0x5159]        # d875 <_IO_stdin_used+0x1875>
    871c:	b8 00 00 00 00       	mov    eax,0x0
    8721:	e8 7a 9d ff ff       	call   24a0 <printf@plt>
    8726:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    872b:	74 0c                	je     8739 <dns_disect+0xa2>
    872d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8731:	48 89 c7             	mov    rdi,rax
    8734:	e8 d7 9e ff ff       	call   2610 <free@plt>
    8739:	90                   	nop
    873a:	c9                   	leave  
    873b:	c3                   	ret    

000000000000873c <get_dns_name>:
    873c:	f3 0f 1e fa          	endbr64 
    8740:	55                   	push   rbp
    8741:	48 89 e5             	mov    rbp,rsp
    8744:	53                   	push   rbx
    8745:	48 83 ec 28          	sub    rsp,0x28
    8749:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    874d:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    8751:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    8758:	eb 57                	jmp    87b1 <get_dns_name+0x75>
    875a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    875d:	48 63 d0             	movsxd rdx,eax
    8760:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8764:	48 01 d0             	add    rax,rdx
    8767:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    876a:	3c 20                	cmp    al,0x20
    876c:	7e 24                	jle    8792 <get_dns_name+0x56>
    876e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    8771:	48 63 d0             	movsxd rdx,eax
    8774:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8778:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    877c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8780:	ba 01 00 00 00       	mov    edx,0x1
    8785:	48 89 ce             	mov    rsi,rcx
    8788:	48 89 c7             	mov    rdi,rax
    878b:	e8 60 9d ff ff       	call   24f0 <strncat@plt>
    8790:	eb 1b                	jmp    87ad <get_dns_name+0x71>
    8792:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    8796:	48 89 c7             	mov    rdi,rax
    8799:	e8 82 9e ff ff       	call   2620 <strlen@plt>
    879e:	48 89 c2             	mov    rdx,rax
    87a1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    87a5:	48 01 d0             	add    rax,rdx
    87a8:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    87ad:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    87b1:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    87b4:	48 63 d8             	movsxd rbx,eax
    87b7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    87bb:	48 89 c7             	mov    rdi,rax
    87be:	e8 5d 9e ff ff       	call   2620 <strlen@plt>
    87c3:	48 39 c3             	cmp    rbx,rax
    87c6:	72 92                	jb     875a <get_dns_name+0x1e>
    87c8:	90                   	nop
    87c9:	90                   	nop
    87ca:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    87ce:	c9                   	leave  
    87cf:	c3                   	ret    

00000000000087d0 <ftp_disect>:
    87d0:	f3 0f 1e fa          	endbr64 
    87d4:	55                   	push   rbp
    87d5:	48 89 e5             	mov    rbp,rsp
    87d8:	48 83 ec 20          	sub    rsp,0x20
    87dc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    87e0:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    87e4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    87e8:	48 8d 35 91 50 00 00 	lea    rsi,[rip+0x5091]        # d880 <_IO_stdin_used+0x1880>
    87ef:	48 89 c7             	mov    rdi,rax
    87f2:	e8 a9 9e ff ff       	call   26a0 <strstr@plt>
    87f7:	48 85 c0             	test   rax,rax
    87fa:	75 1c                	jne    8818 <ftp_disect+0x48>
    87fc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8800:	48 8d 35 89 50 00 00 	lea    rsi,[rip+0x5089]        # d890 <_IO_stdin_used+0x1890>
    8807:	48 89 c7             	mov    rdi,rax
    880a:	e8 91 9e ff ff       	call   26a0 <strstr@plt>
    880f:	48 85 c0             	test   rax,rax
    8812:	0f 84 8a 00 00 00    	je     88a2 <ftp_disect+0xd2>
    8818:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    881c:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8820:	48 89 c7             	mov    rdi,rax
    8823:	e8 46 f1 ff ff       	call   796e <member_exists>
    8828:	48 63 d0             	movsxd rdx,eax
    882b:	48 89 d0             	mov    rax,rdx
    882e:	48 c1 e0 02          	shl    rax,0x2
    8832:	48 01 d0             	add    rax,rdx
    8835:	48 c1 e0 03          	shl    rax,0x3
    8839:	48 01 d0             	add    rax,rdx
    883c:	48 c1 e0 04          	shl    rax,0x4
    8840:	48 8d 15 d9 ac 0e 00 	lea    rdx,[rip+0xeacd9]        # f3520 <watchlist>
    8847:	48 01 d0             	add    rax,rdx
    884a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    884e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8852:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    8858:	8d 50 01             	lea    edx,[rax+0x1]
    885b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    885f:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    8865:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8869:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    886f:	83 f8 04             	cmp    eax,0x4
    8872:	7e 2e                	jle    88a2 <ftp_disect+0xd2>
    8874:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8878:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    887e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8882:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8886:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    888a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    888e:	48 89 c6             	mov    rsi,rax
    8891:	48 8d 3d 08 50 00 00 	lea    rdi,[rip+0x5008]        # d8a0 <_IO_stdin_used+0x18a0>
    8898:	b8 00 00 00 00       	mov    eax,0x0
    889d:	e8 fe 9b ff ff       	call   24a0 <printf@plt>
    88a2:	90                   	nop
    88a3:	c9                   	leave  
    88a4:	c3                   	ret    

00000000000088a5 <livedebug>:
    88a5:	f3 0f 1e fa          	endbr64 
    88a9:	55                   	push   rbp
    88aa:	48 89 e5             	mov    rbp,rsp
    88ad:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    88b4:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    88bb:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    88c2:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    88c9:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    88d0:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    88d7:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    88de:	84 c0                	test   al,al
    88e0:	74 20                	je     8902 <livedebug+0x5d>
    88e2:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    88e6:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    88ea:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    88ee:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    88f2:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    88f6:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    88fa:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    88fe:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    8902:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8909:	00 00 
    890b:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    8912:	31 c0                	xor    eax,eax
    8914:	0f b6 05 05 16 10 00 	movzx  eax,BYTE PTR [rip+0x101605]        # 109f20 <debug_mode>
    891b:	84 c0                	test   al,al
    891d:	74 4b                	je     896a <livedebug+0xc5>
    891f:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    8926:	00 00 00 
    8929:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    8930:	00 00 00 
    8933:	48 8d 45 10          	lea    rax,[rbp+0x10]
    8937:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    893e:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    8945:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    894c:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    8953:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    895a:	48 89 d6             	mov    rsi,rdx
    895d:	48 89 c7             	mov    rdi,rax
    8960:	b8 00 00 00 00       	mov    eax,0x0
    8965:	e8 36 9b ff ff       	call   24a0 <printf@plt>
    896a:	90                   	nop
    896b:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    8972:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8979:	00 00 
    897b:	74 05                	je     8982 <livedebug+0xdd>
    897d:	e8 ee 9d ff ff       	call   2770 <__stack_chk_fail@plt>
    8982:	c9                   	leave  
    8983:	c3                   	ret    

0000000000008984 <forward_packet>:
    8984:	f3 0f 1e fa          	endbr64 
    8988:	55                   	push   rbp
    8989:	48 89 e5             	mov    rbp,rsp
    898c:	48 83 ec 20          	sub    rsp,0x20
    8990:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8994:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8998:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    899c:	48 8d 35 ed 15 10 00 	lea    rsi,[rip+0x1015ed]        # 109f90 <local_ip>
    89a3:	48 89 c7             	mov    rdi,rax
    89a6:	e8 d5 9d ff ff       	call   2780 <strcmp@plt>
    89ab:	85 c0                	test   eax,eax
    89ad:	74 4f                	je     89fe <forward_packet+0x7a>
    89af:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89b3:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    89b7:	48 8d 35 d2 15 10 00 	lea    rsi,[rip+0x1015d2]        # 109f90 <local_ip>
    89be:	48 89 c7             	mov    rdi,rax
    89c1:	e8 ba 9d ff ff       	call   2780 <strcmp@plt>
    89c6:	85 c0                	test   eax,eax
    89c8:	74 34                	je     89fe <forward_packet+0x7a>
    89ca:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89ce:	48 8b 00             	mov    rax,QWORD PTR [rax]
    89d1:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    89d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89d9:	48 89 d6             	mov    rsi,rdx
    89dc:	48 89 c7             	mov    rdi,rax
    89df:	e8 cc 9d ff ff       	call   27b0 <strcpy@plt>
    89e4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89e8:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    89eb:	83 e8 0e             	sub    eax,0xe
    89ee:	89 c2                	mov    edx,eax
    89f0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    89f4:	89 d6                	mov    esi,edx
    89f6:	48 89 c7             	mov    rdi,rax
    89f9:	e8 a9 c9 ff ff       	call   53a7 <ascii_hexdump>
    89fe:	90                   	nop
    89ff:	c9                   	leave  
    8a00:	c3                   	ret    

0000000000008a01 <conversation_exists>:
    8a01:	f3 0f 1e fa          	endbr64 
    8a05:	55                   	push   rbp
    8a06:	48 89 e5             	mov    rbp,rsp
    8a09:	48 83 ec 20          	sub    rsp,0x20
    8a0d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8a11:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    8a18:	e9 ff 00 00 00       	jmp    8b1c <conversation_exists+0x11b>
    8a1d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8a20:	48 98                	cdqe   
    8a22:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8a29:	48 8d 15 b0 15 10 00 	lea    rdx,[rip+0x1015b0]        # 109fe0 <spi_table>
    8a30:	48 01 d0             	add    rax,rdx
    8a33:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8a37:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a3b:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    8a42:	84 c0                	test   al,al
    8a44:	0f 84 ce 00 00 00    	je     8b18 <conversation_exists+0x117>
    8a4a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a4e:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8a51:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a55:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8a58:	39 c2                	cmp    edx,eax
    8a5a:	75 58                	jne    8ab4 <conversation_exists+0xb3>
    8a5c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a60:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8a63:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a67:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8a6a:	39 c2                	cmp    edx,eax
    8a6c:	75 46                	jne    8ab4 <conversation_exists+0xb3>
    8a6e:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8a72:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a76:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8a7a:	48 89 d6             	mov    rsi,rdx
    8a7d:	48 89 c7             	mov    rdi,rax
    8a80:	e8 fb 9c ff ff       	call   2780 <strcmp@plt>
    8a85:	85 c0                	test   eax,eax
    8a87:	0f 85 8a 00 00 00    	jne    8b17 <conversation_exists+0x116>
    8a8d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a91:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8a95:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a99:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8a9d:	48 89 d6             	mov    rsi,rdx
    8aa0:	48 89 c7             	mov    rdi,rax
    8aa3:	e8 d8 9c ff ff       	call   2780 <strcmp@plt>
    8aa8:	85 c0                	test   eax,eax
    8aaa:	75 6b                	jne    8b17 <conversation_exists+0x116>
    8aac:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8aaf:	e9 81 00 00 00       	jmp    8b35 <conversation_exists+0x134>
    8ab4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ab8:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8abb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8abf:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8ac2:	39 c2                	cmp    edx,eax
    8ac4:	75 52                	jne    8b18 <conversation_exists+0x117>
    8ac6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8aca:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8acd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ad1:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8ad4:	39 c2                	cmp    edx,eax
    8ad6:	75 40                	jne    8b18 <conversation_exists+0x117>
    8ad8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8adc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ae0:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8ae4:	48 89 d6             	mov    rsi,rdx
    8ae7:	48 89 c7             	mov    rdi,rax
    8aea:	e8 91 9c ff ff       	call   2780 <strcmp@plt>
    8aef:	85 c0                	test   eax,eax
    8af1:	75 25                	jne    8b18 <conversation_exists+0x117>
    8af3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8af7:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8afb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8aff:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8b03:	48 89 d6             	mov    rsi,rdx
    8b06:	48 89 c7             	mov    rdi,rax
    8b09:	e8 72 9c ff ff       	call   2780 <strcmp@plt>
    8b0e:	85 c0                	test   eax,eax
    8b10:	75 06                	jne    8b18 <conversation_exists+0x117>
    8b12:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b15:	eb 1e                	jmp    8b35 <conversation_exists+0x134>
    8b17:	90                   	nop
    8b18:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8b1c:	8b 05 1e 85 00 00    	mov    eax,DWORD PTR [rip+0x851e]        # 11040 <total_conversations>
    8b22:	8d 50 01             	lea    edx,[rax+0x1]
    8b25:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b28:	39 c2                	cmp    edx,eax
    8b2a:	0f 87 ed fe ff ff    	ja     8a1d <conversation_exists+0x1c>
    8b30:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8b35:	c9                   	leave  
    8b36:	c3                   	ret    

0000000000008b37 <get_new_spi_location>:
    8b37:	f3 0f 1e fa          	endbr64 
    8b3b:	55                   	push   rbp
    8b3c:	48 89 e5             	mov    rbp,rsp
    8b3f:	8b 05 fb 84 00 00    	mov    eax,DWORD PTR [rip+0x84fb]        # 11040 <total_conversations>
    8b45:	83 f8 ff             	cmp    eax,0xffffffff
    8b48:	75 17                	jne    8b61 <get_new_spi_location+0x2a>
    8b4a:	8b 05 f0 84 00 00    	mov    eax,DWORD PTR [rip+0x84f0]        # 11040 <total_conversations>
    8b50:	83 c0 01             	add    eax,0x1
    8b53:	89 05 e7 84 00 00    	mov    DWORD PTR [rip+0x84e7],eax        # 11040 <total_conversations>
    8b59:	8b 05 e1 84 00 00    	mov    eax,DWORD PTR [rip+0x84e1]        # 11040 <total_conversations>
    8b5f:	eb 52                	jmp    8bb3 <get_new_spi_location+0x7c>
    8b61:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    8b68:	eb 27                	jmp    8b91 <get_new_spi_location+0x5a>
    8b6a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8b6d:	48 98                	cdqe   
    8b6f:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8b76:	48 8d 15 13 15 10 00 	lea    rdx,[rip+0x101513]        # 10a090 <spi_table+0xb0>
    8b7d:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    8b81:	83 f0 01             	xor    eax,0x1
    8b84:	84 c0                	test   al,al
    8b86:	74 05                	je     8b8d <get_new_spi_location+0x56>
    8b88:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8b8b:	eb 26                	jmp    8bb3 <get_new_spi_location+0x7c>
    8b8d:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    8b91:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    8b94:	8b 05 a6 84 00 00    	mov    eax,DWORD PTR [rip+0x84a6]        # 11040 <total_conversations>
    8b9a:	39 c2                	cmp    edx,eax
    8b9c:	72 cc                	jb     8b6a <get_new_spi_location+0x33>
    8b9e:	8b 05 9c 84 00 00    	mov    eax,DWORD PTR [rip+0x849c]        # 11040 <total_conversations>
    8ba4:	83 c0 01             	add    eax,0x1
    8ba7:	89 05 93 84 00 00    	mov    DWORD PTR [rip+0x8493],eax        # 11040 <total_conversations>
    8bad:	8b 05 8d 84 00 00    	mov    eax,DWORD PTR [rip+0x848d]        # 11040 <total_conversations>
    8bb3:	5d                   	pop    rbp
    8bb4:	c3                   	ret    

0000000000008bb5 <add_new_conversation>:
    8bb5:	f3 0f 1e fa          	endbr64 
    8bb9:	55                   	push   rbp
    8bba:	48 89 e5             	mov    rbp,rsp
    8bbd:	48 83 ec 20          	sub    rsp,0x20
    8bc1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8bc5:	0f b6 05 f6 13 10 00 	movzx  eax,BYTE PTR [rip+0x1013f6]        # 109fc2 <use_spi>
    8bcc:	84 c0                	test   al,al
    8bce:	0f 84 17 02 00 00    	je     8deb <add_new_conversation+0x236>
    8bd4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8bd8:	48 89 c7             	mov    rdi,rax
    8bdb:	e8 21 fe ff ff       	call   8a01 <conversation_exists>
    8be0:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8be3:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8be7:	0f 84 88 00 00 00    	je     8c75 <add_new_conversation+0xc0>
    8bed:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8bf0:	48 98                	cdqe   
    8bf2:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8bf9:	48 8d 15 e0 13 10 00 	lea    rdx,[rip+0x1013e0]        # 109fe0 <spi_table>
    8c00:	48 01 d0             	add    rax,rdx
    8c03:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8c07:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c0b:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    8c11:	8d 50 01             	lea    edx,[rax+0x1]
    8c14:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c18:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    8c1e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c22:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8c28:	8d 50 01             	lea    edx,[rax+0x1]
    8c2b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c2f:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8c35:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c39:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8c3c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8c40:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c44:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8c47:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c4b:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8c4f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8c52:	41 89 f9             	mov    r9d,edi
    8c55:	49 89 c8             	mov    r8,rcx
    8c58:	89 d1                	mov    ecx,edx
    8c5a:	48 89 f2             	mov    rdx,rsi
    8c5d:	89 c6                	mov    esi,eax
    8c5f:	48 8d 3d 82 4c 00 00 	lea    rdi,[rip+0x4c82]        # d8e8 <_IO_stdin_used+0x18e8>
    8c66:	b8 00 00 00 00       	mov    eax,0x0
    8c6b:	e8 30 98 ff ff       	call   24a0 <printf@plt>
    8c70:	e9 76 01 00 00       	jmp    8deb <add_new_conversation+0x236>
    8c75:	b8 00 00 00 00       	mov    eax,0x0
    8c7a:	e8 b8 fe ff ff       	call   8b37 <get_new_spi_location>
    8c7f:	48 98                	cdqe   
    8c81:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8c88:	48 8d 15 51 13 10 00 	lea    rdx,[rip+0x101351]        # 109fe0 <spi_table>
    8c8f:	48 01 d0             	add    rax,rdx
    8c92:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8c96:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c9a:	ba 08 00 00 00       	mov    edx,0x8
    8c9f:	be 00 00 00 00       	mov    esi,0x0
    8ca4:	48 89 c7             	mov    rdi,rax
    8ca7:	e8 04 98 ff ff       	call   24b0 <memset@plt>
    8cac:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cb0:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    8cb7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cbb:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8cbf:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8cc3:	48 83 c2 29          	add    rdx,0x29
    8cc7:	48 89 c6             	mov    rsi,rax
    8cca:	48 89 d7             	mov    rdi,rdx
    8ccd:	e8 de 9a ff ff       	call   27b0 <strcpy@plt>
    8cd2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cd6:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8cda:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cde:	48 89 d6             	mov    rsi,rdx
    8ce1:	48 89 c7             	mov    rdi,rax
    8ce4:	e8 c7 9a ff ff       	call   27b0 <strcpy@plt>
    8ce9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ced:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8cf0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cf4:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    8cf7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8cfb:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8cfe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d02:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    8d05:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d09:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    8d10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d14:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    8d18:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d1c:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    8d20:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d24:	48 8d 50 60          	lea    rdx,[rax+0x60]
    8d28:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d2c:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    8d30:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d34:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d38:	48 89 d6             	mov    rsi,rdx
    8d3b:	48 89 c7             	mov    rdi,rax
    8d3e:	e8 8e 04 00 00       	call   91d1 <increment_stats>
    8d43:	bf 00 00 00 00       	mov    edi,0x0
    8d48:	e8 63 9b ff ff       	call   28b0 <time@plt>
    8d4d:	48 89 c2             	mov    rdx,rax
    8d50:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d54:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    8d5b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d5f:	c7 80 80 00 00 00 00 	mov    DWORD PTR [rax+0x80],0x0
    8d66:	00 00 00 
    8d69:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d6d:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8d73:	8d 50 01             	lea    edx,[rax+0x1]
    8d76:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d7a:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8d80:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d84:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8d87:	89 c2                	mov    edx,eax
    8d89:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d8d:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    8d93:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d97:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8d9a:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8d9e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8da2:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8da5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8da9:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8dad:	8b 05 8d 82 00 00    	mov    eax,DWORD PTR [rip+0x828d]        # 11040 <total_conversations>
    8db3:	41 89 f9             	mov    r9d,edi
    8db6:	49 89 c8             	mov    r8,rcx
    8db9:	89 d1                	mov    ecx,edx
    8dbb:	48 89 f2             	mov    rdx,rsi
    8dbe:	89 c6                	mov    esi,eax
    8dc0:	48 8d 3d 49 4b 00 00 	lea    rdi,[rip+0x4b49]        # d910 <_IO_stdin_used+0x1910>
    8dc7:	b8 00 00 00 00       	mov    eax,0x0
    8dcc:	e8 cf 96 ff ff       	call   24a0 <printf@plt>
    8dd1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dd5:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8dd8:	83 f8 7e             	cmp    eax,0x7e
    8ddb:	75 0e                	jne    8deb <add_new_conversation+0x236>
    8ddd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8de1:	c7 80 8c 00 00 00 f3 	mov    DWORD PTR [rax+0x8c],0xf3
    8de8:	00 00 00 
    8deb:	90                   	nop
    8dec:	c9                   	leave  
    8ded:	c3                   	ret    

0000000000008dee <spi_ud_thw>:
    8dee:	f3 0f 1e fa          	endbr64 
    8df2:	55                   	push   rbp
    8df3:	48 89 e5             	mov    rbp,rsp
    8df6:	48 83 ec 20          	sub    rsp,0x20
    8dfa:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8dfe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e02:	48 89 c7             	mov    rdi,rax
    8e05:	e8 f7 fb ff ff       	call   8a01 <conversation_exists>
    8e0a:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8e0d:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8e11:	0f 84 9d 00 00 00    	je     8eb4 <spi_ud_thw+0xc6>
    8e17:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8e1a:	48 98                	cdqe   
    8e1c:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8e23:	48 8d 15 b6 11 10 00 	lea    rdx,[rip+0x1011b6]        # 109fe0 <spi_table>
    8e2a:	48 01 d0             	add    rax,rdx
    8e2d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8e31:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e35:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8e3b:	8d 50 01             	lea    edx,[rax+0x1]
    8e3e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e42:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8e48:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8e4c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e50:	48 89 d6             	mov    rsi,rdx
    8e53:	48 89 c7             	mov    rdi,rax
    8e56:	e8 76 03 00 00       	call   91d1 <increment_stats>
    8e5b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e5f:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8e62:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e66:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8e6a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e6e:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8e71:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e75:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8e79:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8e7c:	41 89 f9             	mov    r9d,edi
    8e7f:	49 89 f0             	mov    r8,rsi
    8e82:	89 c6                	mov    esi,eax
    8e84:	48 8d 3d ad 4a 00 00 	lea    rdi,[rip+0x4aad]        # d938 <_IO_stdin_used+0x1938>
    8e8b:	b8 00 00 00 00       	mov    eax,0x0
    8e90:	e8 0b 96 ff ff       	call   24a0 <printf@plt>
    8e95:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e99:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8e9f:	3d f3 00 00 00       	cmp    eax,0xf3
    8ea4:	75 0e                	jne    8eb4 <spi_ud_thw+0xc6>
    8ea6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8eaa:	c7 80 8c 00 00 00 f4 	mov    DWORD PTR [rax+0x8c],0xf4
    8eb1:	00 00 00 
    8eb4:	90                   	nop
    8eb5:	c9                   	leave  
    8eb6:	c3                   	ret    

0000000000008eb7 <update_table>:
    8eb7:	f3 0f 1e fa          	endbr64 
    8ebb:	55                   	push   rbp
    8ebc:	48 89 e5             	mov    rbp,rsp
    8ebf:	48 83 ec 30          	sub    rsp,0x30
    8ec3:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8ec7:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8ece:	00 00 
    8ed0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8ed4:	31 c0                	xor    eax,eax
    8ed6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8eda:	48 89 c7             	mov    rdi,rax
    8edd:	e8 1f fb ff ff       	call   8a01 <conversation_exists>
    8ee2:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8ee5:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8ee9:	0f 84 52 01 00 00    	je     9041 <update_table+0x18a>
    8eef:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8ef2:	48 98                	cdqe   
    8ef4:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8efb:	48 8d 15 de 10 10 00 	lea    rdx,[rip+0x1010de]        # 109fe0 <spi_table>
    8f02:	48 01 d0             	add    rax,rdx
    8f05:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8f09:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f0d:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8f13:	8d 50 01             	lea    edx,[rax+0x1]
    8f16:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f1a:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8f20:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8f24:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f28:	48 89 d6             	mov    rsi,rdx
    8f2b:	48 89 c7             	mov    rdi,rax
    8f2e:	e8 9e 02 00 00       	call   91d1 <increment_stats>
    8f33:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f37:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8f3d:	3d f4 00 00 00       	cmp    eax,0xf4
    8f42:	75 4d                	jne    8f91 <update_table+0xda>
    8f44:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f48:	c7 80 8c 00 00 00 f1 	mov    DWORD PTR [rax+0x8c],0xf1
    8f4f:	00 00 00 
    8f52:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f56:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8f59:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f5d:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8f61:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f65:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8f68:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f6c:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8f70:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8f73:	41 89 f9             	mov    r9d,edi
    8f76:	49 89 f0             	mov    r8,rsi
    8f79:	89 c6                	mov    esi,eax
    8f7b:	48 8d 3d de 49 00 00 	lea    rdi,[rip+0x49de]        # d960 <_IO_stdin_used+0x1960>
    8f82:	b8 00 00 00 00       	mov    eax,0x0
    8f87:	e8 14 95 ff ff       	call   24a0 <printf@plt>
    8f8c:	e9 b0 00 00 00       	jmp    9041 <update_table+0x18a>
    8f91:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f95:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8f9b:	3d f6 00 00 00       	cmp    eax,0xf6
    8fa0:	0f 85 9b 00 00 00    	jne    9041 <update_table+0x18a>
    8fa6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8faa:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8fad:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fb1:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8fb5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fb9:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8fbc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fc0:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8fc4:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8fc7:	41 89 f9             	mov    r9d,edi
    8fca:	49 89 f0             	mov    r8,rsi
    8fcd:	89 c6                	mov    esi,eax
    8fcf:	48 8d 3d ba 49 00 00 	lea    rdi,[rip+0x49ba]        # d990 <_IO_stdin_used+0x1990>
    8fd6:	b8 00 00 00 00       	mov    eax,0x0
    8fdb:	e8 c0 94 ff ff       	call   24a0 <printf@plt>
    8fe0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fe4:	c7 80 8c 00 00 00 fa 	mov    DWORD PTR [rax+0x8c],0xfa
    8feb:	00 00 00 
    8fee:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8ff2:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    8ff9:	bf 00 00 00 00       	mov    edi,0x0
    8ffe:	e8 ad 98 ff ff       	call   28b0 <time@plt>
    9003:	48 89 c2             	mov    rdx,rax
    9006:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    900a:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    9011:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    9015:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    9019:	48 89 d1             	mov    rcx,rdx
    901c:	48 8d 15 b1 f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3b1]        # 83d4 <update_spi_db>
    9023:	be 00 00 00 00       	mov    esi,0x0
    9028:	48 89 c7             	mov    rdi,rax
    902b:	e8 c0 95 ff ff       	call   25f0 <pthread_create@plt>
    9030:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9034:	be 00 00 00 00       	mov    esi,0x0
    9039:	48 89 c7             	mov    rdi,rax
    903c:	e8 4f 94 ff ff       	call   2490 <pthread_join@plt>
    9041:	90                   	nop
    9042:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9046:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    904d:	00 00 
    904f:	74 05                	je     9056 <update_table+0x19f>
    9051:	e8 1a 97 ff ff       	call   2770 <__stack_chk_fail@plt>
    9056:	c9                   	leave  
    9057:	c3                   	ret    

0000000000009058 <polite_end>:
    9058:	f3 0f 1e fa          	endbr64 
    905c:	55                   	push   rbp
    905d:	48 89 e5             	mov    rbp,rsp
    9060:	48 83 ec 20          	sub    rsp,0x20
    9064:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9068:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    906c:	48 89 c7             	mov    rdi,rax
    906f:	e8 8d f9 ff ff       	call   8a01 <conversation_exists>
    9074:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9077:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    907b:	0f 84 e7 00 00 00    	je     9168 <polite_end+0x110>
    9081:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9084:	48 98                	cdqe   
    9086:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    908d:	48 8d 15 4c 0f 10 00 	lea    rdx,[rip+0x100f4c]        # 109fe0 <spi_table>
    9094:	48 01 d0             	add    rax,rdx
    9097:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    909b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    909f:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    90a5:	8d 50 01             	lea    edx,[rax+0x1]
    90a8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90ac:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    90b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90b6:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    90bc:	3d f5 00 00 00       	cmp    eax,0xf5
    90c1:	75 4a                	jne    910d <polite_end+0xb5>
    90c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90c7:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    90ca:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90ce:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    90d2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90d6:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    90d9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90dd:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    90e1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    90e4:	41 89 f9             	mov    r9d,edi
    90e7:	49 89 f0             	mov    r8,rsi
    90ea:	89 c6                	mov    esi,eax
    90ec:	48 8d 3d d5 48 00 00 	lea    rdi,[rip+0x48d5]        # d9c8 <_IO_stdin_used+0x19c8>
    90f3:	b8 00 00 00 00       	mov    eax,0x0
    90f8:	e8 a3 93 ff ff       	call   24a0 <printf@plt>
    90fd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9101:	c7 80 8c 00 00 00 f6 	mov    DWORD PTR [rax+0x8c],0xf6
    9108:	00 00 00 
    910b:	eb 48                	jmp    9155 <polite_end+0xfd>
    910d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9111:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9114:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9118:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    911c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9120:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9123:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9127:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    912b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    912e:	41 89 f9             	mov    r9d,edi
    9131:	49 89 f0             	mov    r8,rsi
    9134:	89 c6                	mov    esi,eax
    9136:	48 8d 3d c3 48 00 00 	lea    rdi,[rip+0x48c3]        # da00 <_IO_stdin_used+0x1a00>
    913d:	b8 00 00 00 00       	mov    eax,0x0
    9142:	e8 59 93 ff ff       	call   24a0 <printf@plt>
    9147:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    914b:	c7 80 8c 00 00 00 f5 	mov    DWORD PTR [rax+0x8c],0xf5
    9152:	00 00 00 
    9155:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9159:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    915d:	48 89 d6             	mov    rsi,rdx
    9160:	48 89 c7             	mov    rdi,rax
    9163:	e8 69 00 00 00       	call   91d1 <increment_stats>
    9168:	90                   	nop
    9169:	c9                   	leave  
    916a:	c3                   	ret    

000000000000916b <handle_data_pkt>:
    916b:	f3 0f 1e fa          	endbr64 
    916f:	55                   	push   rbp
    9170:	48 89 e5             	mov    rbp,rsp
    9173:	48 83 ec 20          	sub    rsp,0x20
    9177:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    917b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    917f:	48 89 c7             	mov    rdi,rax
    9182:	e8 7a f8 ff ff       	call   8a01 <conversation_exists>
    9187:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    918a:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    918e:	74 3e                	je     91ce <handle_data_pkt+0x63>
    9190:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9193:	48 98                	cdqe   
    9195:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    919c:	48 8d 15 3d 0e 10 00 	lea    rdx,[rip+0x100e3d]        # 109fe0 <spi_table>
    91a3:	48 01 d0             	add    rax,rdx
    91a6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    91aa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    91ae:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    91b1:	8d 50 01             	lea    edx,[rax+0x1]
    91b4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    91b8:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    91bb:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    91bf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91c3:	48 89 d6             	mov    rsi,rdx
    91c6:	48 89 c7             	mov    rdi,rax
    91c9:	e8 03 00 00 00       	call   91d1 <increment_stats>
    91ce:	90                   	nop
    91cf:	c9                   	leave  
    91d0:	c3                   	ret    

00000000000091d1 <increment_stats>:
    91d1:	f3 0f 1e fa          	endbr64 
    91d5:	55                   	push   rbp
    91d6:	48 89 e5             	mov    rbp,rsp
    91d9:	48 83 ec 10          	sub    rsp,0x10
    91dd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    91e1:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    91e5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    91e9:	48 8d 50 29          	lea    rdx,[rax+0x29]
    91ed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    91f1:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    91f5:	48 89 d6             	mov    rsi,rdx
    91f8:	48 89 c7             	mov    rdi,rax
    91fb:	e8 80 95 ff ff       	call   2780 <strcmp@plt>
    9200:	85 c0                	test   eax,eax
    9202:	75 13                	jne    9217 <increment_stats+0x46>
    9204:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9208:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    920b:	8d 50 01             	lea    edx,[rax+0x1]
    920e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9212:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    9215:	eb 2c                	jmp    9243 <increment_stats+0x72>
    9217:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    921b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    921f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    9223:	48 89 d6             	mov    rsi,rdx
    9226:	48 89 c7             	mov    rdi,rax
    9229:	e8 52 95 ff ff       	call   2780 <strcmp@plt>
    922e:	85 c0                	test   eax,eax
    9230:	75 11                	jne    9243 <increment_stats+0x72>
    9232:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9236:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    9239:	8d 50 01             	lea    edx,[rax+0x1]
    923c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9240:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    9243:	90                   	nop
    9244:	c9                   	leave  
    9245:	c3                   	ret    

0000000000009246 <lprintf>:
    9246:	f3 0f 1e fa          	endbr64 
    924a:	55                   	push   rbp
    924b:	48 89 e5             	mov    rbp,rsp
    924e:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    9255:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    925c:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    9263:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    926a:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    9271:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    9278:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    927f:	84 c0                	test   al,al
    9281:	74 20                	je     92a3 <lprintf+0x5d>
    9283:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    9287:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    928b:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    928f:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    9293:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    9297:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    929b:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    929f:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    92a3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    92aa:	00 00 
    92ac:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    92b3:	31 c0                	xor    eax,eax
    92b5:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    92bc:	00 00 00 
    92bf:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    92c6:	00 00 00 
    92c9:	48 8d 45 10          	lea    rax,[rbp+0x10]
    92cd:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    92d4:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    92db:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    92e2:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    92e9:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    92f0:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    92f7:	48 89 ce             	mov    rsi,rcx
    92fa:	48 89 c7             	mov    rdi,rax
    92fd:	b8 00 00 00 00       	mov    eax,0x0
    9302:	e8 59 95 ff ff       	call   2860 <fprintf@plt>
    9307:	90                   	nop
    9308:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    930f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9316:	00 00 
    9318:	74 05                	je     931f <lprintf+0xd9>
    931a:	e8 51 94 ff ff       	call   2770 <__stack_chk_fail@plt>
    931f:	c9                   	leave  
    9320:	c3                   	ret    

0000000000009321 <lfprintf>:
    9321:	f3 0f 1e fa          	endbr64 
    9325:	55                   	push   rbp
    9326:	48 89 e5             	mov    rbp,rsp
    9329:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    9330:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    9337:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    933e:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    9345:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    934c:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    9353:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    935a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9361:	00 00 
    9363:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9367:	31 c0                	xor    eax,eax
    9369:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    9370:	48 8d 35 c1 46 00 00 	lea    rsi,[rip+0x46c1]        # da38 <_IO_stdin_used+0x1a38>
    9377:	48 89 c7             	mov    rdi,rax
    937a:	e8 11 92 ff ff       	call   2590 <fopen@plt>
    937f:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    9386:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    938d:	00 
    938e:	75 20                	jne    93b0 <lfprintf+0x8f>
    9390:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    9397:	48 89 c6             	mov    rsi,rax
    939a:	48 8d 3d 9f 46 00 00 	lea    rdi,[rip+0x469f]        # da40 <_IO_stdin_used+0x1a40>
    93a1:	b8 00 00 00 00       	mov    eax,0x0
    93a6:	e8 f5 90 ff ff       	call   24a0 <printf@plt>
    93ab:	e9 cd 00 00 00       	jmp    947d <lfprintf+0x15c>
    93b0:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    93b7:	48 89 c7             	mov    rdi,rax
    93ba:	e8 9e a0 ff ff       	call   345d <cb_get_formatted_time>
    93bf:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    93c6:	75 3f                	jne    9407 <lfprintf+0xe6>
    93c8:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    93cf:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    93d6:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    93dd:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    93e4:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    93eb:	49 89 f9             	mov    r9,rdi
    93ee:	49 89 f0             	mov    r8,rsi
    93f1:	48 8d 35 76 46 00 00 	lea    rsi,[rip+0x4676]        # da6e <_IO_stdin_used+0x1a6e>
    93f8:	48 89 c7             	mov    rdi,rax
    93fb:	b8 00 00 00 00       	mov    eax,0x0
    9400:	e8 3b 92 ff ff       	call   2640 <sprintf@plt>
    9405:	eb 4e                	jmp    9455 <lfprintf+0x134>
    9407:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    940e:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    9415:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    941c:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    9423:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    942a:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    9430:	56                   	push   rsi
    9431:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    9437:	45 89 c1             	mov    r9d,r8d
    943a:	49 89 f8             	mov    r8,rdi
    943d:	48 8d 35 3a 46 00 00 	lea    rsi,[rip+0x463a]        # da7e <_IO_stdin_used+0x1a7e>
    9444:	48 89 c7             	mov    rdi,rax
    9447:	b8 00 00 00 00       	mov    eax,0x0
    944c:	e8 ef 91 ff ff       	call   2640 <sprintf@plt>
    9451:	48 83 c4 10          	add    rsp,0x10
    9455:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    945c:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9463:	48 89 d6             	mov    rsi,rdx
    9466:	48 89 c7             	mov    rdi,rax
    9469:	e8 52 92 ff ff       	call   26c0 <fputs@plt>
    946e:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    9475:	48 89 c7             	mov    rdi,rax
    9478:	e8 73 93 ff ff       	call   27f0 <fclose@plt>
    947d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9481:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9488:	00 00 
    948a:	74 05                	je     9491 <lfprintf+0x170>
    948c:	e8 df 92 ff ff       	call   2770 <__stack_chk_fail@plt>
    9491:	c9                   	leave  
    9492:	c3                   	ret    

0000000000009493 <saprintf>:
    9493:	f3 0f 1e fa          	endbr64 
    9497:	55                   	push   rbp
    9498:	48 89 e5             	mov    rbp,rsp
    949b:	48 83 ec 20          	sub    rsp,0x20
    949f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    94a3:	48 8b 05 86 7b 00 00 	mov    rax,QWORD PTR [rip+0x7b86]        # 11030 <def_log_file>
    94aa:	48 8d 35 87 45 00 00 	lea    rsi,[rip+0x4587]        # da38 <_IO_stdin_used+0x1a38>
    94b1:	48 89 c7             	mov    rdi,rax
    94b4:	e8 d7 90 ff ff       	call   2590 <fopen@plt>
    94b9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    94bd:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    94c2:	75 1a                	jne    94de <saprintf+0x4b>
    94c4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    94c8:	48 89 c6             	mov    rsi,rax
    94cb:	48 8d 3d 6e 45 00 00 	lea    rdi,[rip+0x456e]        # da40 <_IO_stdin_used+0x1a40>
    94d2:	b8 00 00 00 00       	mov    eax,0x0
    94d7:	e8 c4 8f ff ff       	call   24a0 <printf@plt>
    94dc:	eb 1f                	jmp    94fd <saprintf+0x6a>
    94de:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    94e2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    94e6:	48 89 d6             	mov    rsi,rdx
    94e9:	48 89 c7             	mov    rdi,rax
    94ec:	e8 cf 91 ff ff       	call   26c0 <fputs@plt>
    94f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    94f5:	48 89 c7             	mov    rdi,rax
    94f8:	e8 f3 92 ff ff       	call   27f0 <fclose@plt>
    94fd:	c9                   	leave  
    94fe:	c3                   	ret    

00000000000094ff <substr>:
    94ff:	f3 0f 1e fa          	endbr64 
    9503:	55                   	push   rbp
    9504:	48 89 e5             	mov    rbp,rsp
    9507:	48 83 ec 20          	sub    rsp,0x20
    950b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    950f:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    9512:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    9515:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    9518:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    951b:	83 c0 02             	add    eax,0x2
    951e:	48 98                	cdqe   
    9520:	48 89 c7             	mov    rdi,rax
    9523:	e8 58 90 ff ff       	call   2580 <malloc@plt>
    9528:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    952c:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    952f:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    9532:	eb 27                	jmp    955b <substr+0x5c>
    9534:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9537:	48 63 d0             	movsxd rdx,eax
    953a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    953e:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    9542:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9545:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9548:	48 63 d0             	movsxd rdx,eax
    954b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    954f:	48 01 c2             	add    rdx,rax
    9552:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    9555:	88 02                	mov    BYTE PTR [rdx],al
    9557:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    955b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    955e:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    9561:	7e d1                	jle    9534 <substr+0x35>
    9563:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    9566:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9569:	48 98                	cdqe   
    956b:	48 8d 50 01          	lea    rdx,[rax+0x1]
    956f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9573:	48 01 d0             	add    rax,rdx
    9576:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9579:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    957d:	c9                   	leave  
    957e:	c3                   	ret    

000000000000957f <delimit>:
    957f:	f3 0f 1e fa          	endbr64 
    9583:	55                   	push   rbp
    9584:	48 89 e5             	mov    rbp,rsp
    9587:	89 f8                	mov    eax,edi
    9589:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    958c:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    9590:	0f 94 c0             	sete   al
    9593:	5d                   	pop    rbp
    9594:	c3                   	ret    

0000000000009595 <isdigit>:
    9595:	f3 0f 1e fa          	endbr64 
    9599:	55                   	push   rbp
    959a:	48 89 e5             	mov    rbp,rsp
    959d:	53                   	push   rbx
    959e:	48 83 ec 28          	sub    rsp,0x28
    95a2:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    95a6:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    95ad:	e9 f7 00 00 00       	jmp    96a9 <isdigit+0x114>
    95b2:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    95b5:	48 63 d0             	movsxd rdx,eax
    95b8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    95bc:	48 01 d0             	add    rax,rdx
    95bf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    95c2:	3c 30                	cmp    al,0x30
    95c4:	0f 84 db 00 00 00    	je     96a5 <isdigit+0x110>
    95ca:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    95cd:	48 63 d0             	movsxd rdx,eax
    95d0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    95d4:	48 01 d0             	add    rax,rdx
    95d7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    95da:	3c 31                	cmp    al,0x31
    95dc:	0f 84 c3 00 00 00    	je     96a5 <isdigit+0x110>
    95e2:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    95e5:	48 63 d0             	movsxd rdx,eax
    95e8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    95ec:	48 01 d0             	add    rax,rdx
    95ef:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    95f2:	3c 32                	cmp    al,0x32
    95f4:	0f 84 ab 00 00 00    	je     96a5 <isdigit+0x110>
    95fa:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    95fd:	48 63 d0             	movsxd rdx,eax
    9600:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9604:	48 01 d0             	add    rax,rdx
    9607:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    960a:	3c 33                	cmp    al,0x33
    960c:	0f 84 93 00 00 00    	je     96a5 <isdigit+0x110>
    9612:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9615:	48 63 d0             	movsxd rdx,eax
    9618:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    961c:	48 01 d0             	add    rax,rdx
    961f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9622:	3c 34                	cmp    al,0x34
    9624:	74 7f                	je     96a5 <isdigit+0x110>
    9626:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9629:	48 63 d0             	movsxd rdx,eax
    962c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9630:	48 01 d0             	add    rax,rdx
    9633:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9636:	3c 34                	cmp    al,0x34
    9638:	74 6b                	je     96a5 <isdigit+0x110>
    963a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    963d:	48 63 d0             	movsxd rdx,eax
    9640:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9644:	48 01 d0             	add    rax,rdx
    9647:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    964a:	3c 35                	cmp    al,0x35
    964c:	74 57                	je     96a5 <isdigit+0x110>
    964e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9651:	48 63 d0             	movsxd rdx,eax
    9654:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9658:	48 01 d0             	add    rax,rdx
    965b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    965e:	3c 36                	cmp    al,0x36
    9660:	74 43                	je     96a5 <isdigit+0x110>
    9662:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9665:	48 63 d0             	movsxd rdx,eax
    9668:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    966c:	48 01 d0             	add    rax,rdx
    966f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9672:	3c 37                	cmp    al,0x37
    9674:	74 2f                	je     96a5 <isdigit+0x110>
    9676:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9679:	48 63 d0             	movsxd rdx,eax
    967c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9680:	48 01 d0             	add    rax,rdx
    9683:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9686:	3c 38                	cmp    al,0x38
    9688:	74 1b                	je     96a5 <isdigit+0x110>
    968a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    968d:	48 63 d0             	movsxd rdx,eax
    9690:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9694:	48 01 d0             	add    rax,rdx
    9697:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    969a:	3c 39                	cmp    al,0x39
    969c:	74 07                	je     96a5 <isdigit+0x110>
    969e:	b8 00 00 00 00       	mov    eax,0x0
    96a3:	eb 24                	jmp    96c9 <isdigit+0x134>
    96a5:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    96a9:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96ac:	48 63 d8             	movsxd rbx,eax
    96af:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96b3:	48 89 c7             	mov    rdi,rax
    96b6:	e8 65 8f ff ff       	call   2620 <strlen@plt>
    96bb:	48 39 c3             	cmp    rbx,rax
    96be:	0f 82 ee fe ff ff    	jb     95b2 <isdigit+0x1d>
    96c4:	b8 01 00 00 00       	mov    eax,0x1
    96c9:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    96cd:	c9                   	leave  
    96ce:	c3                   	ret    

00000000000096cf <assign_port_number>:
    96cf:	f3 0f 1e fa          	endbr64 
    96d3:	55                   	push   rbp
    96d4:	48 89 e5             	mov    rbp,rsp
    96d7:	48 83 ec 10          	sub    rsp,0x10
    96db:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    96df:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    96e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    96e7:	48 89 c7             	mov    rdi,rax
    96ea:	e8 a6 fe ff ff       	call   9595 <isdigit>
    96ef:	84 c0                	test   al,al
    96f1:	74 18                	je     970b <assign_port_number+0x3c>
    96f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    96f7:	48 89 c7             	mov    rdi,rax
    96fa:	e8 f1 8f ff ff       	call   26f0 <atoi@plt>
    96ff:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    9703:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    9709:	eb 25                	jmp    9730 <assign_port_number+0x61>
    970b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    970f:	48 8d 35 82 43 00 00 	lea    rsi,[rip+0x4382]        # da98 <_IO_stdin_used+0x1a98>
    9716:	48 89 c7             	mov    rdi,rax
    9719:	e8 62 90 ff ff       	call   2780 <strcmp@plt>
    971e:	85 c0                	test   eax,eax
    9720:	75 0e                	jne    9730 <assign_port_number+0x61>
    9722:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9726:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    972d:	ff ff ff 
    9730:	90                   	nop
    9731:	c9                   	leave  
    9732:	c3                   	ret    

0000000000009733 <check_port_number>:
    9733:	f3 0f 1e fa          	endbr64 
    9737:	55                   	push   rbp
    9738:	48 89 e5             	mov    rbp,rsp
    973b:	48 83 ec 10          	sub    rsp,0x10
    973f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9743:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9747:	48 89 c7             	mov    rdi,rax
    974a:	e8 46 fe ff ff       	call   9595 <isdigit>
    974f:	84 c0                	test   al,al
    9751:	74 0e                	je     9761 <check_port_number+0x2e>
    9753:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9757:	48 89 c7             	mov    rdi,rax
    975a:	e8 91 8f ff ff       	call   26f0 <atoi@plt>
    975f:	eb 23                	jmp    9784 <check_port_number+0x51>
    9761:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9765:	48 8d 35 2c 43 00 00 	lea    rsi,[rip+0x432c]        # da98 <_IO_stdin_used+0x1a98>
    976c:	48 89 c7             	mov    rdi,rax
    976f:	e8 0c 90 ff ff       	call   2780 <strcmp@plt>
    9774:	85 c0                	test   eax,eax
    9776:	75 07                	jne    977f <check_port_number+0x4c>
    9778:	b8 ff ff ff ff       	mov    eax,0xffffffff
    977d:	eb 05                	jmp    9784 <check_port_number+0x51>
    977f:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9784:	c9                   	leave  
    9785:	c3                   	ret    

0000000000009786 <assign_protocol>:
    9786:	f3 0f 1e fa          	endbr64 
    978a:	55                   	push   rbp
    978b:	48 89 e5             	mov    rbp,rsp
    978e:	48 83 ec 10          	sub    rsp,0x10
    9792:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9796:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    979a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    979e:	48 8d 35 f7 42 00 00 	lea    rsi,[rip+0x42f7]        # da9c <_IO_stdin_used+0x1a9c>
    97a5:	48 89 c7             	mov    rdi,rax
    97a8:	e8 d3 8f ff ff       	call   2780 <strcmp@plt>
    97ad:	85 c0                	test   eax,eax
    97af:	75 10                	jne    97c1 <assign_protocol+0x3b>
    97b1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    97b5:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    97bc:	ff ff ff 
    97bf:	eb 73                	jmp    9834 <assign_protocol+0xae>
    97c1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97c5:	48 8d 35 d4 42 00 00 	lea    rsi,[rip+0x42d4]        # daa0 <_IO_stdin_used+0x1aa0>
    97cc:	48 89 c7             	mov    rdi,rax
    97cf:	e8 ac 8f ff ff       	call   2780 <strcmp@plt>
    97d4:	85 c0                	test   eax,eax
    97d6:	75 10                	jne    97e8 <assign_protocol+0x62>
    97d8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    97dc:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    97e3:	00 00 00 
    97e6:	eb 4c                	jmp    9834 <assign_protocol+0xae>
    97e8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97ec:	48 8d 35 b2 42 00 00 	lea    rsi,[rip+0x42b2]        # daa5 <_IO_stdin_used+0x1aa5>
    97f3:	48 89 c7             	mov    rdi,rax
    97f6:	e8 85 8f ff ff       	call   2780 <strcmp@plt>
    97fb:	85 c0                	test   eax,eax
    97fd:	75 10                	jne    980f <assign_protocol+0x89>
    97ff:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9803:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    980a:	00 00 00 
    980d:	eb 25                	jmp    9834 <assign_protocol+0xae>
    980f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9813:	48 8d 35 8f 42 00 00 	lea    rsi,[rip+0x428f]        # daa9 <_IO_stdin_used+0x1aa9>
    981a:	48 89 c7             	mov    rdi,rax
    981d:	e8 5e 8f ff ff       	call   2780 <strcmp@plt>
    9822:	85 c0                	test   eax,eax
    9824:	75 0e                	jne    9834 <assign_protocol+0xae>
    9826:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    982a:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    9831:	00 00 00 
    9834:	90                   	nop
    9835:	c9                   	leave  
    9836:	c3                   	ret    

0000000000009837 <get_ruletype>:
    9837:	f3 0f 1e fa          	endbr64 
    983b:	55                   	push   rbp
    983c:	48 89 e5             	mov    rbp,rsp
    983f:	48 83 ec 10          	sub    rsp,0x10
    9843:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9847:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    984b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    984f:	ba 09 00 00 00       	mov    edx,0x9
    9854:	48 8d 35 52 42 00 00 	lea    rsi,[rip+0x4252]        # daad <_IO_stdin_used+0x1aad>
    985b:	48 89 c7             	mov    rdi,rax
    985e:	e8 0d 8d ff ff       	call   2570 <strncmp@plt>
    9863:	85 c0                	test   eax,eax
    9865:	75 17                	jne    987e <get_ruletype+0x47>
    9867:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    986b:	48 8d 15 e2 bd ff ff 	lea    rdx,[rip+0xffffffffffffbde2]        # 5654 <str_match_parser>
    9872:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9879:	e9 82 00 00 00       	jmp    9900 <get_ruletype+0xc9>
    987e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9882:	ba 04 00 00 00       	mov    edx,0x4
    9887:	48 8d 35 29 42 00 00 	lea    rsi,[rip+0x4229]        # dab7 <_IO_stdin_used+0x1ab7>
    988e:	48 89 c7             	mov    rdi,rax
    9891:	e8 da 8c ff ff       	call   2570 <strncmp@plt>
    9896:	85 c0                	test   eax,eax
    9898:	75 14                	jne    98ae <get_ruletype+0x77>
    989a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    989e:	48 8d 15 52 c0 ff ff 	lea    rdx,[rip+0xffffffffffffc052]        # 58f7 <none>
    98a5:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    98ac:	eb 52                	jmp    9900 <get_ruletype+0xc9>
    98ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98b2:	ba 04 00 00 00       	mov    edx,0x4
    98b7:	48 8d 35 fe 41 00 00 	lea    rsi,[rip+0x41fe]        # dabc <_IO_stdin_used+0x1abc>
    98be:	48 89 c7             	mov    rdi,rax
    98c1:	e8 aa 8c ff ff       	call   2570 <strncmp@plt>
    98c6:	85 c0                	test   eax,eax
    98c8:	75 14                	jne    98de <get_ruletype+0xa7>
    98ca:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98ce:	48 8d 15 39 c0 ff ff 	lea    rdx,[rip+0xffffffffffffc039]        # 590e <pcre_match>
    98d5:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    98dc:	eb 22                	jmp    9900 <get_ruletype+0xc9>
    98de:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98e2:	48 89 c6             	mov    rsi,rax
    98e5:	48 8d 3d d5 41 00 00 	lea    rdi,[rip+0x41d5]        # dac1 <_IO_stdin_used+0x1ac1>
    98ec:	b8 00 00 00 00       	mov    eax,0x0
    98f1:	e8 aa 8b ff ff       	call   24a0 <printf@plt>
    98f6:	bf 01 00 00 00       	mov    edi,0x1
    98fb:	e8 20 8c ff ff       	call   2520 <exit@plt>
    9900:	c9                   	leave  
    9901:	c3                   	ret    

0000000000009902 <numeric_check>:
    9902:	f3 0f 1e fa          	endbr64 
    9906:	55                   	push   rbp
    9907:	48 89 e5             	mov    rbp,rsp
    990a:	48 83 ec 30          	sub    rsp,0x30
    990e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9912:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    9915:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    9919:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    991d:	48 89 c7             	mov    rdi,rax
    9920:	e8 70 fc ff ff       	call   9595 <isdigit>
    9925:	84 c0                	test   al,al
    9927:	74 27                	je     9950 <numeric_check+0x4e>
    9929:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    992d:	48 89 c7             	mov    rdi,rax
    9930:	e8 bb 8d ff ff       	call   26f0 <atoi@plt>
    9935:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    9938:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    993b:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    993e:	77 10                	ja     9950 <numeric_check+0x4e>
    9940:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9943:	48 98                	cdqe   
    9945:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    9949:	72 05                	jb     9950 <numeric_check+0x4e>
    994b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    994e:	eb 05                	jmp    9955 <numeric_check+0x53>
    9950:	b8 ff ff ff ff       	mov    eax,0xffffffff
    9955:	c9                   	leave  
    9956:	c3                   	ret    

0000000000009957 <sc_strip>:
    9957:	f3 0f 1e fa          	endbr64 
    995b:	55                   	push   rbp
    995c:	48 89 e5             	mov    rbp,rsp
    995f:	48 83 ec 10          	sub    rsp,0x10
    9963:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9967:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    996b:	48 8d 35 66 41 00 00 	lea    rsi,[rip+0x4166]        # dad8 <_IO_stdin_used+0x1ad8>
    9972:	48 89 c7             	mov    rdi,rax
    9975:	e8 96 8e ff ff       	call   2810 <strcspn@plt>
    997a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    997e:	48 01 d0             	add    rax,rdx
    9981:	c6 00 00             	mov    BYTE PTR [rax],0x0
    9984:	90                   	nop
    9985:	c9                   	leave  
    9986:	c3                   	ret    

0000000000009987 <void_rule>:
    9987:	f3 0f 1e fa          	endbr64 
    998b:	55                   	push   rbp
    998c:	48 89 e5             	mov    rbp,rsp
    998f:	48 83 ec 10          	sub    rsp,0x10
    9993:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9997:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    999b:	48 05 6e 03 00 00    	add    rax,0x36e
    99a1:	ba 0a 00 00 00       	mov    edx,0xa
    99a6:	be 00 00 00 00       	mov    esi,0x0
    99ab:	48 89 c7             	mov    rdi,rax
    99ae:	e8 fd 8a ff ff       	call   24b0 <memset@plt>
    99b3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    99b7:	48 05 68 03 00 00    	add    rax,0x368
    99bd:	ba 06 00 00 00       	mov    edx,0x6
    99c2:	be 00 00 00 00       	mov    esi,0x0
    99c7:	48 89 c7             	mov    rdi,rax
    99ca:	e8 e1 8a ff ff       	call   24b0 <memset@plt>
    99cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    99d3:	48 05 50 03 00 00    	add    rax,0x350
    99d9:	ba 18 00 00 00       	mov    edx,0x18
    99de:	be 00 00 00 00       	mov    esi,0x0
    99e3:	48 89 c7             	mov    rdi,rax
    99e6:	e8 c5 8a ff ff       	call   24b0 <memset@plt>
    99eb:	90                   	nop
    99ec:	c9                   	leave  
    99ed:	c3                   	ret    

00000000000099ee <line_parser>:
    99ee:	f3 0f 1e fa          	endbr64 
    99f2:	55                   	push   rbp
    99f3:	48 89 e5             	mov    rbp,rsp
    99f6:	53                   	push   rbx
    99f7:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    99fe:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    9a05:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9a0c:	00 00 
    9a0e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    9a12:	31 c0                	xor    eax,eax
    9a14:	8b 05 fa 75 00 00    	mov    eax,DWORD PTR [rip+0x75fa]        # 11014 <num_rules>
    9a1a:	83 c0 01             	add    eax,0x1
    9a1d:	89 05 f1 75 00 00    	mov    DWORD PTR [rip+0x75f1],eax        # 11014 <num_rules>
    9a23:	8b 05 eb 75 00 00    	mov    eax,DWORD PTR [rip+0x75eb]        # 11014 <num_rules>
    9a29:	48 98                	cdqe   
    9a2b:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    9a32:	48 8d 15 a7 78 00 00 	lea    rdx,[rip+0x78a7]        # 112e0 <rules>
    9a39:	48 01 d0             	add    rax,rdx
    9a3c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    9a40:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a44:	ba 08 00 00 00       	mov    edx,0x8
    9a49:	be 00 00 00 00       	mov    esi,0x0
    9a4e:	48 89 c7             	mov    rdi,rax
    9a51:	e8 5a 8a ff ff       	call   24b0 <memset@plt>
    9a56:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a5a:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9a61:	ff ff ff 
    9a64:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a68:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9a6f:	ff ff ff 
    9a72:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a76:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    9a7d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a81:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    9a88:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a8c:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    9a93:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a97:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    9a9e:	00 00 00 
    9aa1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9aa5:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    9aab:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9aaf:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    9ab6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9aba:	48 89 c7             	mov    rdi,rax
    9abd:	e8 c5 fe ff ff       	call   9987 <void_rule>
    9ac2:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    9ac9:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    9ad0:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    9ad7:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    9ade:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9ae5:	48 89 c7             	mov    rdi,rax
    9ae8:	e8 33 8b ff ff       	call   2620 <strlen@plt>
    9aed:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    9af0:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9af7:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    9afe:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    9b05:	e9 c4 0d 00 00       	jmp    a8ce <line_parser+0xee0>
    9b0a:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9b0d:	48 63 d0             	movsxd rdx,eax
    9b10:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9b17:	48 01 d0             	add    rax,rdx
    9b1a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b1d:	0f be c0             	movsx  eax,al
    9b20:	89 c7                	mov    edi,eax
    9b22:	e8 58 fa ff ff       	call   957f <delimit>
    9b27:	83 f0 01             	xor    eax,0x1
    9b2a:	84 c0                	test   al,al
    9b2c:	74 04                	je     9b32 <line_parser+0x144>
    9b2e:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9b32:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9b35:	48 63 d0             	movsxd rdx,eax
    9b38:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9b3f:	48 01 d0             	add    rax,rdx
    9b42:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b45:	0f be c0             	movsx  eax,al
    9b48:	89 c7                	mov    edi,eax
    9b4a:	e8 30 fa ff ff       	call   957f <delimit>
    9b4f:	84 c0                	test   al,al
    9b51:	74 3f                	je     9b92 <line_parser+0x1a4>
    9b53:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9b56:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    9b59:	75 37                	jne    9b92 <line_parser+0x1a4>
    9b5b:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9b5e:	48 63 d0             	movsxd rdx,eax
    9b61:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9b68:	48 01 d0             	add    rax,rdx
    9b6b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b6e:	3c 3a                	cmp    al,0x3a
    9b70:	75 11                	jne    9b83 <line_parser+0x195>
    9b72:	48 8d 3d 61 3f 00 00 	lea    rdi,[rip+0x3f61]        # dada <_IO_stdin_used+0x1ada>
    9b79:	b8 00 00 00 00       	mov    eax,0x0
    9b7e:	e8 1d 89 ff ff       	call   24a0 <printf@plt>
    9b83:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9b87:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9b8a:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    9b8d:	e9 3c 0d 00 00       	jmp    a8ce <line_parser+0xee0>
    9b92:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9b95:	48 63 d0             	movsxd rdx,eax
    9b98:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9b9f:	48 01 d0             	add    rax,rdx
    9ba2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9ba5:	0f be c0             	movsx  eax,al
    9ba8:	89 c7                	mov    edi,eax
    9baa:	e8 d0 f9 ff ff       	call   957f <delimit>
    9baf:	84 c0                	test   al,al
    9bb1:	74 08                	je     9bbb <line_parser+0x1cd>
    9bb3:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9bb6:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9bb9:	75 18                	jne    9bd3 <line_parser+0x1e5>
    9bbb:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9bbe:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    9bc1:	0f 85 07 0d 00 00    	jne    a8ce <line_parser+0xee0>
    9bc7:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9bca:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9bcd:	0f 84 fb 0c 00 00    	je     a8ce <line_parser+0xee0>
    9bd3:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9bd6:	8d 50 ff             	lea    edx,[rax-0x1]
    9bd9:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    9bdc:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9be3:	89 ce                	mov    esi,ecx
    9be5:	48 89 c7             	mov    rdi,rax
    9be8:	e8 12 f9 ff ff       	call   94ff <substr>
    9bed:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9bf1:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    9bf8:	83 f0 01             	xor    eax,0x1
    9bfb:	84 c0                	test   al,al
    9bfd:	0f 84 ea 02 00 00    	je     9eed <line_parser+0x4ff>
    9c03:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9c07:	48 8d 35 db 3e 00 00 	lea    rsi,[rip+0x3edb]        # dae9 <_IO_stdin_used+0x1ae9>
    9c0e:	48 89 c7             	mov    rdi,rax
    9c11:	e8 6a 8b ff ff       	call   2780 <strcmp@plt>
    9c16:	85 c0                	test   eax,eax
    9c18:	75 33                	jne    9c4d <line_parser+0x25f>
    9c1a:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9c21:	83 f0 01             	xor    eax,0x1
    9c24:	84 c0                	test   al,al
    9c26:	74 25                	je     9c4d <line_parser+0x25f>
    9c28:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9c2f:	83 f0 01             	xor    eax,0x1
    9c32:	84 c0                	test   al,al
    9c34:	74 17                	je     9c4d <line_parser+0x25f>
    9c36:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c3a:	48 8d 15 e9 b7 ff ff 	lea    rdx,[rip+0xffffffffffffb7e9]        # 542a <stdout_alert>
    9c41:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    9c48:	e9 5d 0c 00 00       	jmp    a8aa <line_parser+0xebc>
    9c4d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9c51:	48 8d 35 48 3e 00 00 	lea    rsi,[rip+0x3e48]        # daa0 <_IO_stdin_used+0x1aa0>
    9c58:	48 89 c7             	mov    rdi,rax
    9c5b:	e8 20 8b ff ff       	call   2780 <strcmp@plt>
    9c60:	85 c0                	test   eax,eax
    9c62:	74 45                	je     9ca9 <line_parser+0x2bb>
    9c64:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9c68:	48 8d 35 2d 3e 00 00 	lea    rsi,[rip+0x3e2d]        # da9c <_IO_stdin_used+0x1a9c>
    9c6f:	48 89 c7             	mov    rdi,rax
    9c72:	e8 09 8b ff ff       	call   2780 <strcmp@plt>
    9c77:	85 c0                	test   eax,eax
    9c79:	74 2e                	je     9ca9 <line_parser+0x2bb>
    9c7b:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9c7f:	48 8d 35 1f 3e 00 00 	lea    rsi,[rip+0x3e1f]        # daa5 <_IO_stdin_used+0x1aa5>
    9c86:	48 89 c7             	mov    rdi,rax
    9c89:	e8 f2 8a ff ff       	call   2780 <strcmp@plt>
    9c8e:	85 c0                	test   eax,eax
    9c90:	74 17                	je     9ca9 <line_parser+0x2bb>
    9c92:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9c96:	48 8d 35 0c 3e 00 00 	lea    rsi,[rip+0x3e0c]        # daa9 <_IO_stdin_used+0x1aa9>
    9c9d:	48 89 c7             	mov    rdi,rax
    9ca0:	e8 db 8a ff ff       	call   2780 <strcmp@plt>
    9ca5:	85 c0                	test   eax,eax
    9ca7:	75 34                	jne    9cdd <line_parser+0x2ef>
    9ca9:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9cb0:	83 f0 01             	xor    eax,0x1
    9cb3:	84 c0                	test   al,al
    9cb5:	74 26                	je     9cdd <line_parser+0x2ef>
    9cb7:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9cbe:	83 f0 01             	xor    eax,0x1
    9cc1:	84 c0                	test   al,al
    9cc3:	74 18                	je     9cdd <line_parser+0x2ef>
    9cc5:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9cc9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ccd:	48 89 d6             	mov    rsi,rdx
    9cd0:	48 89 c7             	mov    rdi,rax
    9cd3:	e8 ae fa ff ff       	call   9786 <assign_protocol>
    9cd8:	e9 cd 0b 00 00       	jmp    a8aa <line_parser+0xebc>
    9cdd:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ce1:	48 89 c7             	mov    rdi,rax
    9ce4:	e8 ac f8 ff ff       	call   9595 <isdigit>
    9ce9:	84 c0                	test   al,al
    9ceb:	75 17                	jne    9d04 <line_parser+0x316>
    9ced:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9cf1:	48 8d 35 a0 3d 00 00 	lea    rsi,[rip+0x3da0]        # da98 <_IO_stdin_used+0x1a98>
    9cf8:	48 89 c7             	mov    rdi,rax
    9cfb:	e8 80 8a ff ff       	call   2780 <strcmp@plt>
    9d00:	85 c0                	test   eax,eax
    9d02:	75 34                	jne    9d38 <line_parser+0x34a>
    9d04:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9d0b:	83 f0 01             	xor    eax,0x1
    9d0e:	84 c0                	test   al,al
    9d10:	74 26                	je     9d38 <line_parser+0x34a>
    9d12:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9d19:	83 f0 01             	xor    eax,0x1
    9d1c:	84 c0                	test   al,al
    9d1e:	74 18                	je     9d38 <line_parser+0x34a>
    9d20:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9d24:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d28:	48 89 d6             	mov    rsi,rdx
    9d2b:	48 89 c7             	mov    rdi,rax
    9d2e:	e8 9c f9 ff ff       	call   96cf <assign_port_number>
    9d33:	e9 72 0b 00 00       	jmp    a8aa <line_parser+0xebc>
    9d38:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d3c:	ba 08 00 00 00       	mov    edx,0x8
    9d41:	48 8d 35 a7 3d 00 00 	lea    rsi,[rip+0x3da7]        # daef <_IO_stdin_used+0x1aef>
    9d48:	48 89 c7             	mov    rdi,rax
    9d4b:	e8 20 88 ff ff       	call   2570 <strncmp@plt>
    9d50:	85 c0                	test   eax,eax
    9d52:	75 75                	jne    9dc9 <line_parser+0x3db>
    9d54:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d58:	48 8d 50 09          	lea    rdx,[rax+0x9]
    9d5c:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9d60:	48 89 d6             	mov    rsi,rdx
    9d63:	48 89 c7             	mov    rdi,rax
    9d66:	e8 45 8a ff ff       	call   27b0 <strcpy@plt>
    9d6b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d6f:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9d72:	85 c0                	test   eax,eax
    9d74:	75 2e                	jne    9da4 <line_parser+0x3b6>
    9d76:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d7a:	8b 00                	mov    eax,DWORD PTR [rax]
    9d7c:	85 c0                	test   eax,eax
    9d7e:	75 24                	jne    9da4 <line_parser+0x3b6>
    9d80:	8b 15 3e 02 10 00    	mov    edx,DWORD PTR [rip+0x10023e]        # 109fc4 <homenet>
    9d86:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9d8a:	89 10                	mov    DWORD PTR [rax],edx
    9d8c:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9d90:	48 89 c7             	mov    rdi,rax
    9d93:	e8 9b f9 ff ff       	call   9733 <check_port_number>
    9d98:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9d9c:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9d9f:	e9 06 0b 00 00       	jmp    a8aa <line_parser+0xebc>
    9da4:	8b 15 1a 02 10 00    	mov    edx,DWORD PTR [rip+0x10021a]        # 109fc4 <homenet>
    9daa:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9dae:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    9db1:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9db5:	48 89 c7             	mov    rdi,rax
    9db8:	e8 76 f9 ff ff       	call   9733 <check_port_number>
    9dbd:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9dc1:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9dc4:	e9 e1 0a 00 00       	jmp    a8aa <line_parser+0xebc>
    9dc9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9dcd:	48 8d 35 24 3d 00 00 	lea    rsi,[rip+0x3d24]        # daf8 <_IO_stdin_used+0x1af8>
    9dd4:	48 89 c7             	mov    rdi,rax
    9dd7:	e8 a4 89 ff ff       	call   2780 <strcmp@plt>
    9ddc:	85 c0                	test   eax,eax
    9dde:	75 30                	jne    9e10 <line_parser+0x422>
    9de0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9de4:	8b 10                	mov    edx,DWORD PTR [rax]
    9de6:	8b 05 d8 01 10 00    	mov    eax,DWORD PTR [rip+0x1001d8]        # 109fc4 <homenet>
    9dec:	39 c2                	cmp    edx,eax
    9dee:	75 10                	jne    9e00 <line_parser+0x412>
    9df0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9df4:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    9dfb:	e9 aa 0a 00 00       	jmp    a8aa <line_parser+0xebc>
    9e00:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e04:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    9e0b:	e9 9a 0a 00 00       	jmp    a8aa <line_parser+0xebc>
    9e10:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e14:	48 8d 35 e0 3c 00 00 	lea    rsi,[rip+0x3ce0]        # dafb <_IO_stdin_used+0x1afb>
    9e1b:	48 89 c7             	mov    rdi,rax
    9e1e:	e8 5d 89 ff ff       	call   2780 <strcmp@plt>
    9e23:	85 c0                	test   eax,eax
    9e25:	75 10                	jne    9e37 <line_parser+0x449>
    9e27:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e2b:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9e32:	e9 73 0a 00 00       	jmp    a8aa <line_parser+0xebc>
    9e37:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e3b:	ba 0c 00 00 00       	mov    edx,0xc
    9e40:	48 8d 35 b7 3c 00 00 	lea    rsi,[rip+0x3cb7]        # dafe <_IO_stdin_used+0x1afe>
    9e47:	48 89 c7             	mov    rdi,rax
    9e4a:	e8 21 87 ff ff       	call   2570 <strncmp@plt>
    9e4f:	85 c0                	test   eax,eax
    9e51:	75 7f                	jne    9ed2 <line_parser+0x4e4>
    9e53:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e57:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9e5b:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9e5f:	48 89 d6             	mov    rsi,rdx
    9e62:	48 89 c7             	mov    rdi,rax
    9e65:	e8 46 89 ff ff       	call   27b0 <strcpy@plt>
    9e6a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e6e:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9e71:	85 c0                	test   eax,eax
    9e73:	75 37                	jne    9eac <line_parser+0x4be>
    9e75:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e79:	8b 10                	mov    edx,DWORD PTR [rax]
    9e7b:	8b 05 43 01 10 00    	mov    eax,DWORD PTR [rip+0x100143]        # 109fc4 <homenet>
    9e81:	39 c2                	cmp    edx,eax
    9e83:	75 27                	jne    9eac <line_parser+0x4be>
    9e85:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e89:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9e90:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9e94:	48 83 c0 01          	add    rax,0x1
    9e98:	48 89 c7             	mov    rdi,rax
    9e9b:	e8 93 f8 ff ff       	call   9733 <check_port_number>
    9ea0:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9ea4:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9ea7:	e9 fe 09 00 00       	jmp    a8aa <line_parser+0xebc>
    9eac:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9eb0:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9eb6:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9eba:	48 83 c0 01          	add    rax,0x1
    9ebe:	48 89 c7             	mov    rdi,rax
    9ec1:	e8 6d f8 ff ff       	call   9733 <check_port_number>
    9ec6:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9eca:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9ecd:	e9 d8 09 00 00       	jmp    a8aa <line_parser+0xebc>
    9ed2:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ed6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9ed9:	3c 28                	cmp    al,0x28
    9edb:	0f 85 c9 09 00 00    	jne    a8aa <line_parser+0xebc>
    9ee1:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    9ee8:	e9 e1 09 00 00       	jmp    a8ce <line_parser+0xee0>
    9eed:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ef1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9ef4:	3c 28                	cmp    al,0x28
    9ef6:	75 0e                	jne    9f06 <line_parser+0x518>
    9ef8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9efc:	48 83 c0 01          	add    rax,0x1
    9f00:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9f04:	eb 08                	jmp    9f0e <line_parser+0x520>
    9f06:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f0a:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9f0e:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    9f15:	0f 84 8e 00 00 00    	je     9fa9 <line_parser+0x5bb>
    9f1b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f1f:	48 89 c7             	mov    rdi,rax
    9f22:	e8 f9 86 ff ff       	call   2620 <strlen@plt>
    9f27:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9f2b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f2f:	48 01 d0             	add    rax,rdx
    9f32:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f35:	3c 3b                	cmp    al,0x3b
    9f37:	75 36                	jne    9f6f <line_parser+0x581>
    9f39:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f3d:	48 89 c7             	mov    rdi,rax
    9f40:	e8 db 86 ff ff       	call   2620 <strlen@plt>
    9f45:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    9f49:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f4d:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    9f54:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f58:	48 89 c6             	mov    rsi,rax
    9f5b:	48 89 cf             	mov    rdi,rcx
    9f5e:	e8 8d 85 ff ff       	call   24f0 <strncat@plt>
    9f63:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9f6a:	e9 5f 09 00 00       	jmp    a8ce <line_parser+0xee0>
    9f6f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f73:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    9f7a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f7e:	48 89 c6             	mov    rsi,rax
    9f81:	48 89 d7             	mov    rdi,rdx
    9f84:	e8 27 87 ff ff       	call   26b0 <strcat@plt>
    9f89:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f8d:	48 8d 98 50 01 00 00 	lea    rbx,[rax+0x150]
    9f94:	48 89 df             	mov    rdi,rbx
    9f97:	e8 84 86 ff ff       	call   2620 <strlen@plt>
    9f9c:	48 01 d8             	add    rax,rbx
    9f9f:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9fa4:	e9 01 09 00 00       	jmp    a8aa <line_parser+0xebc>
    9fa9:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    9fb0:	74 7f                	je     a031 <line_parser+0x643>
    9fb2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fb6:	48 8d 35 4e 3b 00 00 	lea    rsi,[rip+0x3b4e]        # db0b <_IO_stdin_used+0x1b0b>
    9fbd:	48 89 c7             	mov    rdi,rax
    9fc0:	e8 db 86 ff ff       	call   26a0 <strstr@plt>
    9fc5:	48 85 c0             	test   rax,rax
    9fc8:	74 33                	je     9ffd <line_parser+0x60f>
    9fca:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fce:	48 89 c7             	mov    rdi,rax
    9fd1:	e8 4a 86 ff ff       	call   2620 <strlen@plt>
    9fd6:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    9fda:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9fde:	48 8d 48 40          	lea    rcx,[rax+0x40]
    9fe2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fe6:	48 89 c6             	mov    rsi,rax
    9fe9:	48 89 cf             	mov    rdi,rcx
    9fec:	e8 ff 84 ff ff       	call   24f0 <strncat@plt>
    9ff1:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    9ff8:	e9 d1 08 00 00       	jmp    a8ce <line_parser+0xee0>
    9ffd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a001:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a005:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a009:	48 89 c6             	mov    rsi,rax
    a00c:	48 89 d7             	mov    rdi,rdx
    a00f:	e8 9c 86 ff ff       	call   26b0 <strcat@plt>
    a014:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a018:	48 8d 58 40          	lea    rbx,[rax+0x40]
    a01c:	48 89 df             	mov    rdi,rbx
    a01f:	e8 fc 85 ff ff       	call   2620 <strlen@plt>
    a024:	48 01 d8             	add    rax,rbx
    a027:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a02c:	e9 79 08 00 00       	jmp    a8aa <line_parser+0xebc>
    a031:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a035:	ba 06 00 00 00       	mov    edx,0x6
    a03a:	48 8d 35 cd 3a 00 00 	lea    rsi,[rip+0x3acd]        # db0e <_IO_stdin_used+0x1b0e>
    a041:	48 89 c7             	mov    rdi,rax
    a044:	e8 27 85 ff ff       	call   2570 <strncmp@plt>
    a049:	85 c0                	test   eax,eax
    a04b:	75 37                	jne    a084 <line_parser+0x696>
    a04d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a051:	48 89 c7             	mov    rdi,rax
    a054:	e8 c7 85 ff ff       	call   2620 <strlen@plt>
    a059:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a05d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a061:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a065:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a069:	48 83 c0 20          	add    rax,0x20
    a06d:	48 89 ce             	mov    rsi,rcx
    a070:	48 89 c7             	mov    rdi,rax
    a073:	e8 88 87 ff ff       	call   2800 <strncpy@plt>
    a078:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    a07f:	e9 26 08 00 00       	jmp    a8aa <line_parser+0xebc>
    a084:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a088:	ba 05 00 00 00       	mov    edx,0x5
    a08d:	48 8d 35 81 3a 00 00 	lea    rsi,[rip+0x3a81]        # db15 <_IO_stdin_used+0x1b15>
    a094:	48 89 c7             	mov    rdi,rax
    a097:	e8 d4 84 ff ff       	call   2570 <strncmp@plt>
    a09c:	85 c0                	test   eax,eax
    a09e:	75 4d                	jne    a0ed <line_parser+0x6ff>
    a0a0:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    a0a7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0ab:	48 83 c0 05          	add    rax,0x5
    a0af:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    a0b3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0b7:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a0be:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a0c2:	48 89 c6             	mov    rsi,rax
    a0c5:	48 89 d7             	mov    rdi,rdx
    a0c8:	e8 e3 85 ff ff       	call   26b0 <strcat@plt>
    a0cd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0d1:	48 8d 98 50 01 00 00 	lea    rbx,[rax+0x150]
    a0d8:	48 89 df             	mov    rdi,rbx
    a0db:	e8 40 85 ff ff       	call   2620 <strlen@plt>
    a0e0:	48 01 d8             	add    rax,rbx
    a0e3:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a0e8:	e9 bd 07 00 00       	jmp    a8aa <line_parser+0xebc>
    a0ed:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0f1:	ba 06 00 00 00       	mov    edx,0x6
    a0f6:	48 8d 35 1e 3a 00 00 	lea    rsi,[rip+0x3a1e]        # db1b <_IO_stdin_used+0x1b1b>
    a0fd:	48 89 c7             	mov    rdi,rax
    a100:	e8 6b 84 ff ff       	call   2570 <strncmp@plt>
    a105:	85 c0                	test   eax,eax
    a107:	75 31                	jne    a13a <line_parser+0x74c>
    a109:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a10d:	48 89 c7             	mov    rdi,rax
    a110:	e8 42 f8 ff ff       	call   9957 <sc_strip>
    a115:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a119:	48 83 c0 06          	add    rax,0x6
    a11d:	48 89 c7             	mov    rdi,rax
    a120:	e8 cb 85 ff ff       	call   26f0 <atoi@plt>
    a125:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    a128:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a12c:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    a12f:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    a135:	e9 70 07 00 00       	jmp    a8aa <line_parser+0xebc>
    a13a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a13e:	ba 05 00 00 00       	mov    edx,0x5
    a143:	48 8d 35 d8 39 00 00 	lea    rsi,[rip+0x39d8]        # db22 <_IO_stdin_used+0x1b22>
    a14a:	48 89 c7             	mov    rdi,rax
    a14d:	e8 1e 84 ff ff       	call   2570 <strncmp@plt>
    a152:	85 c0                	test   eax,eax
    a154:	75 3f                	jne    a195 <line_parser+0x7a7>
    a156:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a15a:	48 89 c7             	mov    rdi,rax
    a15d:	e8 be 84 ff ff       	call   2620 <strlen@plt>
    a162:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    a166:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a16a:	48 8d 48 05          	lea    rcx,[rax+0x5]
    a16e:	48 8d 45 de          	lea    rax,[rbp-0x22]
    a172:	48 89 ce             	mov    rsi,rcx
    a175:	48 89 c7             	mov    rdi,rax
    a178:	e8 83 86 ff ff       	call   2800 <strncpy@plt>
    a17d:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a181:	48 8d 45 de          	lea    rax,[rbp-0x22]
    a185:	48 89 d6             	mov    rsi,rdx
    a188:	48 89 c7             	mov    rdi,rax
    a18b:	e8 a7 f6 ff ff       	call   9837 <get_ruletype>
    a190:	e9 15 07 00 00       	jmp    a8aa <line_parser+0xebc>
    a195:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a199:	ba 08 00 00 00       	mov    edx,0x8
    a19e:	48 8d 35 83 39 00 00 	lea    rsi,[rip+0x3983]        # db28 <_IO_stdin_used+0x1b28>
    a1a5:	48 89 c7             	mov    rdi,rax
    a1a8:	e8 c3 83 ff ff       	call   2570 <strncmp@plt>
    a1ad:	85 c0                	test   eax,eax
    a1af:	0f 85 8f 00 00 00    	jne    a244 <line_parser+0x856>
    a1b5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1b9:	48 83 c0 08          	add    rax,0x8
    a1bd:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    a1c1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a1c5:	48 8d 35 3f 39 00 00 	lea    rsi,[rip+0x393f]        # db0b <_IO_stdin_used+0x1b0b>
    a1cc:	48 89 c7             	mov    rdi,rax
    a1cf:	e8 cc 84 ff ff       	call   26a0 <strstr@plt>
    a1d4:	48 85 c0             	test   rax,rax
    a1d7:	74 30                	je     a209 <line_parser+0x81b>
    a1d9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1dd:	48 89 c7             	mov    rdi,rax
    a1e0:	e8 3b 84 ff ff       	call   2620 <strlen@plt>
    a1e5:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    a1e9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1ed:	48 8d 48 08          	lea    rcx,[rax+0x8]
    a1f1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a1f5:	48 83 c0 40          	add    rax,0x40
    a1f9:	48 89 ce             	mov    rsi,rcx
    a1fc:	48 89 c7             	mov    rdi,rax
    a1ff:	e8 fc 85 ff ff       	call   2800 <strncpy@plt>
    a204:	e9 a1 06 00 00       	jmp    a8aa <line_parser+0xebc>
    a209:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    a210:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a214:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a218:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a21c:	48 89 c6             	mov    rsi,rax
    a21f:	48 89 d7             	mov    rdi,rdx
    a222:	e8 89 84 ff ff       	call   26b0 <strcat@plt>
    a227:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a22b:	48 8d 58 40          	lea    rbx,[rax+0x40]
    a22f:	48 89 df             	mov    rdi,rbx
    a232:	e8 e9 83 ff ff       	call   2620 <strlen@plt>
    a237:	48 01 d8             	add    rax,rbx
    a23a:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a23f:	e9 66 06 00 00       	jmp    a8aa <line_parser+0xebc>
    a244:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a248:	ba 04 00 00 00       	mov    edx,0x4
    a24d:	48 8d 35 dd 38 00 00 	lea    rsi,[rip+0x38dd]        # db31 <_IO_stdin_used+0x1b31>
    a254:	48 89 c7             	mov    rdi,rax
    a257:	e8 14 83 ff ff       	call   2570 <strncmp@plt>
    a25c:	85 c0                	test   eax,eax
    a25e:	0f 85 8e 00 00 00    	jne    a2f2 <line_parser+0x904>
    a264:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a268:	48 8d 35 69 38 00 00 	lea    rsi,[rip+0x3869]        # dad8 <_IO_stdin_used+0x1ad8>
    a26f:	48 89 c7             	mov    rdi,rax
    a272:	e8 99 85 ff ff       	call   2810 <strcspn@plt>
    a277:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    a27b:	48 01 d0             	add    rax,rdx
    a27e:	c6 00 00             	mov    BYTE PTR [rax],0x0
    a281:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a285:	48 83 c0 04          	add    rax,0x4
    a289:	48 89 c7             	mov    rdi,rax
    a28c:	e8 04 f3 ff ff       	call   9595 <isdigit>
    a291:	84 c0                	test   al,al
    a293:	74 47                	je     a2dc <line_parser+0x8ee>
    a295:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a299:	48 83 c0 04          	add    rax,0x4
    a29d:	48 89 c7             	mov    rdi,rax
    a2a0:	e8 4b 84 ff ff       	call   26f0 <atoi@plt>
    a2a5:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    a2a8:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    a2ac:	7e 18                	jle    a2c6 <line_parser+0x8d8>
    a2ae:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    a2b2:	7f 12                	jg     a2c6 <line_parser+0x8d8>
    a2b4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a2b8:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    a2bb:	89 90 4c 01 00 00    	mov    DWORD PTR [rax+0x14c],edx
    a2c1:	e9 e4 05 00 00       	jmp    a8aa <line_parser+0xebc>
    a2c6:	48 8d 3d 6b 38 00 00 	lea    rdi,[rip+0x386b]        # db38 <_IO_stdin_used+0x1b38>
    a2cd:	e8 2e 82 ff ff       	call   2500 <puts@plt>
    a2d2:	bf ff ff ff ff       	mov    edi,0xffffffff
    a2d7:	e8 44 82 ff ff       	call   2520 <exit@plt>
    a2dc:	48 8d 3d 7d 38 00 00 	lea    rdi,[rip+0x387d]        # db60 <_IO_stdin_used+0x1b60>
    a2e3:	e8 18 82 ff ff       	call   2500 <puts@plt>
    a2e8:	bf ff ff ff ff       	mov    edi,0xffffffff
    a2ed:	e8 2e 82 ff ff       	call   2520 <exit@plt>
    a2f2:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2f6:	ba 06 00 00 00       	mov    edx,0x6
    a2fb:	48 8d 35 86 38 00 00 	lea    rsi,[rip+0x3886]        # db88 <_IO_stdin_used+0x1b88>
    a302:	48 89 c7             	mov    rdi,rax
    a305:	e8 66 82 ff ff       	call   2570 <strncmp@plt>
    a30a:	85 c0                	test   eax,eax
    a30c:	0f 85 9b 00 00 00    	jne    a3ad <line_parser+0x9bf>
    a312:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a316:	48 89 c7             	mov    rdi,rax
    a319:	e8 39 f6 ff ff       	call   9957 <sc_strip>
    a31e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a322:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a328:	3d 80 00 00 00       	cmp    eax,0x80
    a32d:	75 58                	jne    a387 <line_parser+0x999>
    a32f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a333:	48 83 c0 06          	add    rax,0x6
    a337:	ba ff 00 00 00       	mov    edx,0xff
    a33c:	be 00 00 00 00       	mov    esi,0x0
    a341:	48 89 c7             	mov    rdi,rax
    a344:	e8 b9 f5 ff ff       	call   9902 <numeric_check>
    a349:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    a34c:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    a350:	75 16                	jne    a368 <line_parser+0x97a>
    a352:	48 8d 3d 36 38 00 00 	lea    rdi,[rip+0x3836]        # db8f <_IO_stdin_used+0x1b8f>
    a359:	e8 a2 81 ff ff       	call   2500 <puts@plt>
    a35e:	bf ff ff ff ff       	mov    edi,0xffffffff
    a363:	e8 b8 81 ff ff       	call   2520 <exit@plt>
    a368:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    a36b:	89 c2                	mov    edx,eax
    a36d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a371:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    a377:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a37b:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    a382:	e9 23 05 00 00       	jmp    a8aa <line_parser+0xebc>
    a387:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a38b:	48 83 c0 20          	add    rax,0x20
    a38f:	48 89 c6             	mov    rsi,rax
    a392:	48 8d 3d 0f 38 00 00 	lea    rdi,[rip+0x380f]        # dba8 <_IO_stdin_used+0x1ba8>
    a399:	b8 00 00 00 00       	mov    eax,0x0
    a39e:	e8 fd 80 ff ff       	call   24a0 <printf@plt>
    a3a3:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3a8:	e8 73 81 ff ff       	call   2520 <exit@plt>
    a3ad:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3b1:	ba 06 00 00 00       	mov    edx,0x6
    a3b6:	48 8d 35 22 38 00 00 	lea    rsi,[rip+0x3822]        # dbdf <_IO_stdin_used+0x1bdf>
    a3bd:	48 89 c7             	mov    rdi,rax
    a3c0:	e8 ab 81 ff ff       	call   2570 <strncmp@plt>
    a3c5:	85 c0                	test   eax,eax
    a3c7:	0f 85 86 00 00 00    	jne    a453 <line_parser+0xa65>
    a3cd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3d1:	48 89 c7             	mov    rdi,rax
    a3d4:	e8 7e f5 ff ff       	call   9957 <sc_strip>
    a3d9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3dd:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a3e3:	3d 80 00 00 00       	cmp    eax,0x80
    a3e8:	75 58                	jne    a442 <line_parser+0xa54>
    a3ea:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3ee:	48 83 c0 06          	add    rax,0x6
    a3f2:	ba ff 00 00 00       	mov    edx,0xff
    a3f7:	be 00 00 00 00       	mov    esi,0x0
    a3fc:	48 89 c7             	mov    rdi,rax
    a3ff:	e8 fe f4 ff ff       	call   9902 <numeric_check>
    a404:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    a407:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    a40b:	75 16                	jne    a423 <line_parser+0xa35>
    a40d:	48 8d 3d d2 37 00 00 	lea    rdi,[rip+0x37d2]        # dbe6 <_IO_stdin_used+0x1be6>
    a414:	e8 e7 80 ff ff       	call   2500 <puts@plt>
    a419:	bf ff ff ff ff       	mov    edi,0xffffffff
    a41e:	e8 fd 80 ff ff       	call   2520 <exit@plt>
    a423:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a426:	89 c2                	mov    edx,eax
    a428:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a42c:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a432:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a436:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a43d:	e9 68 04 00 00       	jmp    a8aa <line_parser+0xebc>
    a442:	48 8d 3d b7 37 00 00 	lea    rdi,[rip+0x37b7]        # dc00 <_IO_stdin_used+0x1c00>
    a449:	e8 b2 80 ff ff       	call   2500 <puts@plt>
    a44e:	e9 57 04 00 00       	jmp    a8aa <line_parser+0xebc>
    a453:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a457:	ba 08 00 00 00       	mov    edx,0x8
    a45c:	48 8d 35 cf 37 00 00 	lea    rsi,[rip+0x37cf]        # dc32 <_IO_stdin_used+0x1c32>
    a463:	48 89 c7             	mov    rdi,rax
    a466:	e8 05 81 ff ff       	call   2570 <strncmp@plt>
    a46b:	85 c0                	test   eax,eax
    a46d:	0f 85 8c 00 00 00    	jne    a4ff <line_parser+0xb11>
    a473:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a477:	48 89 c7             	mov    rdi,rax
    a47a:	e8 d8 f4 ff ff       	call   9957 <sc_strip>
    a47f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a483:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a489:	3d 80 00 00 00       	cmp    eax,0x80
    a48e:	75 59                	jne    a4e9 <line_parser+0xafb>
    a490:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a494:	48 83 c0 08          	add    rax,0x8
    a498:	ba ff ff 00 00       	mov    edx,0xffff
    a49d:	be 00 00 00 00       	mov    esi,0x0
    a4a2:	48 89 c7             	mov    rdi,rax
    a4a5:	e8 58 f4 ff ff       	call   9902 <numeric_check>
    a4aa:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    a4ad:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    a4b1:	75 16                	jne    a4c9 <line_parser+0xadb>
    a4b3:	48 8d 3d 81 37 00 00 	lea    rdi,[rip+0x3781]        # dc3b <_IO_stdin_used+0x1c3b>
    a4ba:	e8 41 80 ff ff       	call   2500 <puts@plt>
    a4bf:	bf ff ff ff ff       	mov    edi,0xffffffff
    a4c4:	e8 57 80 ff ff       	call   2520 <exit@plt>
    a4c9:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    a4cc:	89 c2                	mov    edx,eax
    a4ce:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4d2:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a4d9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4dd:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a4e4:	e9 c1 03 00 00       	jmp    a8aa <line_parser+0xebc>
    a4e9:	48 8d 3d 68 37 00 00 	lea    rdi,[rip+0x3768]        # dc58 <_IO_stdin_used+0x1c58>
    a4f0:	e8 0b 80 ff ff       	call   2500 <puts@plt>
    a4f5:	bf ff ff ff ff       	mov    edi,0xffffffff
    a4fa:	e8 21 80 ff ff       	call   2520 <exit@plt>
    a4ff:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a503:	ba 09 00 00 00       	mov    edx,0x9
    a508:	48 8d 35 7d 37 00 00 	lea    rsi,[rip+0x377d]        # dc8c <_IO_stdin_used+0x1c8c>
    a50f:	48 89 c7             	mov    rdi,rax
    a512:	e8 59 80 ff ff       	call   2570 <strncmp@plt>
    a517:	85 c0                	test   eax,eax
    a519:	75 7a                	jne    a595 <line_parser+0xba7>
    a51b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a51f:	48 89 c7             	mov    rdi,rax
    a522:	e8 30 f4 ff ff       	call   9957 <sc_strip>
    a527:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a52b:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a531:	3d 80 00 00 00       	cmp    eax,0x80
    a536:	0f 85 6e 03 00 00    	jne    a8aa <line_parser+0xebc>
    a53c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a540:	48 83 c0 09          	add    rax,0x9
    a544:	ba ff ff 00 00       	mov    edx,0xffff
    a549:	be 00 00 00 00       	mov    esi,0x0
    a54e:	48 89 c7             	mov    rdi,rax
    a551:	e8 ac f3 ff ff       	call   9902 <numeric_check>
    a556:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    a559:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    a55d:	75 16                	jne    a575 <line_parser+0xb87>
    a55f:	48 8d 3d 30 37 00 00 	lea    rdi,[rip+0x3730]        # dc96 <_IO_stdin_used+0x1c96>
    a566:	e8 95 7f ff ff       	call   2500 <puts@plt>
    a56b:	bf ff ff ff ff       	mov    edi,0xffffffff
    a570:	e8 ab 7f ff ff       	call   2520 <exit@plt>
    a575:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    a578:	89 c2                	mov    edx,eax
    a57a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a57e:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a585:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a589:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a590:	e9 15 03 00 00       	jmp    a8aa <line_parser+0xebc>
    a595:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a599:	ba 04 00 00 00       	mov    edx,0x4
    a59e:	48 8d 35 0d 37 00 00 	lea    rsi,[rip+0x370d]        # dcb2 <_IO_stdin_used+0x1cb2>
    a5a5:	48 89 c7             	mov    rdi,rax
    a5a8:	e8 c3 7f ff ff       	call   2570 <strncmp@plt>
    a5ad:	85 c0                	test   eax,eax
    a5af:	75 64                	jne    a615 <line_parser+0xc27>
    a5b1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a5b5:	48 89 c7             	mov    rdi,rax
    a5b8:	e8 9a f3 ff ff       	call   9957 <sc_strip>
    a5bd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a5c1:	48 83 c0 04          	add    rax,0x4
    a5c5:	ba ff 00 00 00       	mov    edx,0xff
    a5ca:	be 00 00 00 00       	mov    esi,0x0
    a5cf:	48 89 c7             	mov    rdi,rax
    a5d2:	e8 2b f3 ff ff       	call   9902 <numeric_check>
    a5d7:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    a5da:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    a5de:	75 16                	jne    a5f6 <line_parser+0xc08>
    a5e0:	48 8d 3d d0 36 00 00 	lea    rdi,[rip+0x36d0]        # dcb7 <_IO_stdin_used+0x1cb7>
    a5e7:	e8 14 7f ff ff       	call   2500 <puts@plt>
    a5ec:	bf ff ff ff ff       	mov    edi,0xffffffff
    a5f1:	e8 2a 7f ff ff       	call   2520 <exit@plt>
    a5f6:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a5f9:	89 c2                	mov    edx,eax
    a5fb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5ff:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a605:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a609:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a610:	e9 95 02 00 00       	jmp    a8aa <line_parser+0xebc>
    a615:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a619:	ba 07 00 00 00       	mov    edx,0x7
    a61e:	48 8d 35 a4 36 00 00 	lea    rsi,[rip+0x36a4]        # dcc9 <_IO_stdin_used+0x1cc9>
    a625:	48 89 c7             	mov    rdi,rax
    a628:	e8 43 7f ff ff       	call   2570 <strncmp@plt>
    a62d:	85 c0                	test   eax,eax
    a62f:	75 6e                	jne    a69f <line_parser+0xcb1>
    a631:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a635:	48 89 c7             	mov    rdi,rax
    a638:	e8 1a f3 ff ff       	call   9957 <sc_strip>
    a63d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a641:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a647:	83 f8 7e             	cmp    eax,0x7e
    a64a:	75 3d                	jne    a689 <line_parser+0xc9b>
    a64c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a650:	48 89 c7             	mov    rdi,rax
    a653:	e8 c8 7f ff ff       	call   2620 <strlen@plt>
    a658:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a65c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a660:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a664:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a668:	48 05 53 03 00 00    	add    rax,0x353
    a66e:	48 89 ce             	mov    rsi,rcx
    a671:	48 89 c7             	mov    rdi,rax
    a674:	e8 87 81 ff ff       	call   2800 <strncpy@plt>
    a679:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a67d:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a684:	e9 21 02 00 00       	jmp    a8aa <line_parser+0xebc>
    a689:	48 8d 3d 48 36 00 00 	lea    rdi,[rip+0x3648]        # dcd8 <_IO_stdin_used+0x1cd8>
    a690:	e8 6b 7e ff ff       	call   2500 <puts@plt>
    a695:	bf ff ff ff ff       	mov    edi,0xffffffff
    a69a:	e8 81 7e ff ff       	call   2520 <exit@plt>
    a69f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6a3:	ba 04 00 00 00       	mov    edx,0x4
    a6a8:	48 8d 35 5a 36 00 00 	lea    rsi,[rip+0x365a]        # dd09 <_IO_stdin_used+0x1d09>
    a6af:	48 89 c7             	mov    rdi,rax
    a6b2:	e8 b9 7e ff ff       	call   2570 <strncmp@plt>
    a6b7:	85 c0                	test   eax,eax
    a6b9:	75 78                	jne    a733 <line_parser+0xd45>
    a6bb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6bf:	48 89 c7             	mov    rdi,rax
    a6c2:	e8 90 f2 ff ff       	call   9957 <sc_strip>
    a6c7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6cb:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a6d1:	83 f8 7e             	cmp    eax,0x7e
    a6d4:	0f 85 d0 01 00 00    	jne    a8aa <line_parser+0xebc>
    a6da:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6de:	48 83 c0 04          	add    rax,0x4
    a6e2:	ba ff ff ff ff       	mov    edx,0xffffffff
    a6e7:	be 00 00 00 00       	mov    esi,0x0
    a6ec:	48 89 c7             	mov    rdi,rax
    a6ef:	e8 0e f2 ff ff       	call   9902 <numeric_check>
    a6f4:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a6f7:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    a6fb:	75 16                	jne    a713 <line_parser+0xd25>
    a6fd:	48 8d 3d 0a 36 00 00 	lea    rdi,[rip+0x360a]        # dd0e <_IO_stdin_used+0x1d0e>
    a704:	e8 f7 7d ff ff       	call   2500 <puts@plt>
    a709:	bf ff ff ff ff       	mov    edi,0xffffffff
    a70e:	e8 0d 7e ff ff       	call   2520 <exit@plt>
    a713:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a716:	89 c2                	mov    edx,eax
    a718:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a71c:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a723:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a727:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a72e:	e9 77 01 00 00       	jmp    a8aa <line_parser+0xebc>
    a733:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a737:	ba 06 00 00 00       	mov    edx,0x6
    a73c:	48 8d 35 dd 35 00 00 	lea    rsi,[rip+0x35dd]        # dd20 <_IO_stdin_used+0x1d20>
    a743:	48 89 c7             	mov    rdi,rax
    a746:	e8 25 7e ff ff       	call   2570 <strncmp@plt>
    a74b:	85 c0                	test   eax,eax
    a74d:	75 7c                	jne    a7cb <line_parser+0xddd>
    a74f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a753:	48 89 c7             	mov    rdi,rax
    a756:	e8 c5 7e ff ff       	call   2620 <strlen@plt>
    a75b:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a75f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a763:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a767:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a76b:	48 05 10 02 00 00    	add    rax,0x210
    a771:	48 89 ce             	mov    rsi,rcx
    a774:	48 89 c7             	mov    rdi,rax
    a777:	e8 84 80 ff ff       	call   2800 <strncpy@plt>
    a77c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a780:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a787:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a78b:	48 05 d0 01 00 00    	add    rax,0x1d0
    a791:	ba 00 00 00 00       	mov    edx,0x0
    a796:	48 89 ce             	mov    rsi,rcx
    a799:	48 89 c7             	mov    rdi,rax
    a79c:	e8 5f 7f ff ff       	call   2700 <regcomp@plt>
    a7a1:	85 c0                	test   eax,eax
    a7a3:	74 16                	je     a7bb <line_parser+0xdcd>
    a7a5:	48 8d 3d 7c 35 00 00 	lea    rdi,[rip+0x357c]        # dd28 <_IO_stdin_used+0x1d28>
    a7ac:	e8 4f 7d ff ff       	call   2500 <puts@plt>
    a7b1:	bf ff ff ff ff       	mov    edi,0xffffffff
    a7b6:	e8 65 7d ff ff       	call   2520 <exit@plt>
    a7bb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7bf:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a7c6:	e9 df 00 00 00       	jmp    a8aa <line_parser+0xebc>
    a7cb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a7cf:	ba 06 00 00 00       	mov    edx,0x6
    a7d4:	48 8d 35 72 35 00 00 	lea    rsi,[rip+0x3572]        # dd4d <_IO_stdin_used+0x1d4d>
    a7db:	48 89 c7             	mov    rdi,rax
    a7de:	e8 8d 7d ff ff       	call   2570 <strncmp@plt>
    a7e3:	85 c0                	test   eax,eax
    a7e5:	75 2d                	jne    a814 <line_parser+0xe26>
    a7e7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a7eb:	48 89 c7             	mov    rdi,rax
    a7ee:	e8 64 f1 ff ff       	call   9957 <sc_strip>
    a7f3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a7f7:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a7fb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7ff:	ba 01 00 00 00       	mov    edx,0x1
    a804:	48 89 ce             	mov    rsi,rcx
    a807:	48 89 c7             	mov    rdi,rax
    a80a:	e8 98 03 00 00       	call   aba7 <d_op_parser>
    a80f:	e9 96 00 00 00       	jmp    a8aa <line_parser+0xebc>
    a814:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a818:	ba 07 00 00 00       	mov    edx,0x7
    a81d:	48 8d 35 30 35 00 00 	lea    rsi,[rip+0x3530]        # dd54 <_IO_stdin_used+0x1d54>
    a824:	48 89 c7             	mov    rdi,rax
    a827:	e8 44 7d ff ff       	call   2570 <strncmp@plt>
    a82c:	85 c0                	test   eax,eax
    a82e:	75 27                	jne    a857 <line_parser+0xe69>
    a830:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a834:	48 89 c7             	mov    rdi,rax
    a837:	e8 1b f1 ff ff       	call   9957 <sc_strip>
    a83c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a840:	48 83 c0 07          	add    rax,0x7
    a844:	48 89 c7             	mov    rdi,rax
    a847:	e8 a4 7e ff ff       	call   26f0 <atoi@plt>
    a84c:	89 c2                	mov    edx,eax
    a84e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a852:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a855:	eb 53                	jmp    a8aa <line_parser+0xebc>
    a857:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a85b:	ba 0b 00 00 00       	mov    edx,0xb
    a860:	48 8d 35 f5 34 00 00 	lea    rsi,[rip+0x34f5]        # dd5c <_IO_stdin_used+0x1d5c>
    a867:	48 89 c7             	mov    rdi,rax
    a86a:	e8 01 7d ff ff       	call   2570 <strncmp@plt>
    a86f:	85 c0                	test   eax,eax
    a871:	75 10                	jne    a883 <line_parser+0xe95>
    a873:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a877:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a87e:	00 00 00 
    a881:	eb 27                	jmp    a8aa <line_parser+0xebc>
    a883:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a887:	ba 09 00 00 00       	mov    edx,0x9
    a88c:	48 8d 35 d5 34 00 00 	lea    rsi,[rip+0x34d5]        # dd68 <_IO_stdin_used+0x1d68>
    a893:	48 89 c7             	mov    rdi,rax
    a896:	e8 d5 7c ff ff       	call   2570 <strncmp@plt>
    a89b:	85 c0                	test   eax,eax
    a89d:	75 0b                	jne    a8aa <line_parser+0xebc>
    a89f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a8a3:	c6 80 48 01 00 00 01 	mov    BYTE PTR [rax+0x148],0x1
    a8aa:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a8ad:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    a8b0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8b4:	48 89 c7             	mov    rdi,rax
    a8b7:	e8 64 7d ff ff       	call   2620 <strlen@plt>
    a8bc:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a8c0:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8c4:	48 01 d0             	add    rax,rdx
    a8c7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a8ca:	3c 29                	cmp    al,0x29
    a8cc:	74 3d                	je     a90b <line_parser+0xf1d>
    a8ce:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a8d1:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    a8d4:	7f 0c                	jg     a8e2 <line_parser+0xef4>
    a8d6:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    a8d9:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    a8dc:	0f 8e 28 f2 ff ff    	jle    9b0a <line_parser+0x11c>
    a8e2:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    a8e9:	83 f0 01             	xor    eax,0x1
    a8ec:	84 c0                	test   al,al
    a8ee:	74 1c                	je     a90c <line_parser+0xf1e>
    a8f0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a8f4:	48 83 c0 20          	add    rax,0x20
    a8f8:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    a8ff:	6c 65 64 
    a902:	48 89 18             	mov    QWORD PTR [rax],rbx
    a905:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    a909:	eb 01                	jmp    a90c <line_parser+0xf1e>
    a90b:	90                   	nop
    a90c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a910:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a917:	00 00 
    a919:	74 05                	je     a920 <line_parser+0xf32>
    a91b:	e8 50 7e ff ff       	call   2770 <__stack_chk_fail@plt>
    a920:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    a924:	c9                   	leave  
    a925:	c3                   	ret    

000000000000a926 <rule_processor>:
    a926:	f3 0f 1e fa          	endbr64 
    a92a:	55                   	push   rbp
    a92b:	48 89 e5             	mov    rbp,rsp
    a92e:	48 83 ec 10          	sub    rsp,0x10
    a932:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    a939:	eb 22                	jmp    a95d <rule_processor+0x37>
    a93b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a93e:	48 98                	cdqe   
    a940:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    a947:	48 8d 15 92 69 00 00 	lea    rdx,[rip+0x6992]        # 112e0 <rules>
    a94e:	48 01 d0             	add    rax,rdx
    a951:	48 89 c7             	mov    rdi,rax
    a954:	e8 13 00 00 00       	call   a96c <process_rule>
    a959:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    a95d:	8b 05 b1 66 00 00    	mov    eax,DWORD PTR [rip+0x66b1]        # 11014 <num_rules>
    a963:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    a966:	7e d3                	jle    a93b <rule_processor+0x15>
    a968:	90                   	nop
    a969:	90                   	nop
    a96a:	c9                   	leave  
    a96b:	c3                   	ret    

000000000000a96c <process_rule>:
    a96c:	f3 0f 1e fa          	endbr64 
    a970:	55                   	push   rbp
    a971:	48 89 e5             	mov    rbp,rsp
    a974:	41 57                	push   r15
    a976:	41 56                	push   r14
    a978:	41 54                	push   r12
    a97a:	53                   	push   rbx
    a97b:	48 83 ec 40          	sub    rsp,0x40
    a97f:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    a983:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a98a:	00 00 
    a98c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    a990:	31 c0                	xor    eax,eax
    a992:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a996:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    a99d:	83 f0 01             	xor    eax,0x1
    a9a0:	84 c0                	test   al,al
    a9a2:	0f 84 dd 01 00 00    	je     ab85 <process_rule+0x219>
    a9a8:	48 89 e0             	mov    rax,rsp
    a9ab:	49 89 c4             	mov    r12,rax
    a9ae:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a9b2:	48 83 c0 40          	add    rax,0x40
    a9b6:	48 89 c7             	mov    rdi,rax
    a9b9:	e8 62 7c ff ff       	call   2620 <strlen@plt>
    a9be:	48 83 c0 01          	add    rax,0x1
    a9c2:	48 01 c0             	add    rax,rax
    a9c5:	48 89 c2             	mov    rdx,rax
    a9c8:	48 83 ea 01          	sub    rdx,0x1
    a9cc:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    a9d0:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    a9d4:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    a9db:	00 
    a9dc:	49 89 c6             	mov    r14,rax
    a9df:	41 bf 00 00 00 00    	mov    r15d,0x0
    a9e5:	ba 10 00 00 00       	mov    edx,0x10
    a9ea:	48 83 ea 01          	sub    rdx,0x1
    a9ee:	48 01 d0             	add    rax,rdx
    a9f1:	bb 10 00 00 00       	mov    ebx,0x10
    a9f6:	ba 00 00 00 00       	mov    edx,0x0
    a9fb:	48 f7 f3             	div    rbx
    a9fe:	48 6b c0 10          	imul   rax,rax,0x10
    aa02:	48 89 c1             	mov    rcx,rax
    aa05:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    aa0c:	48 89 e2             	mov    rdx,rsp
    aa0f:	48 29 ca             	sub    rdx,rcx
    aa12:	48 39 d4             	cmp    rsp,rdx
    aa15:	74 12                	je     aa29 <process_rule+0xbd>
    aa17:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    aa1e:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    aa25:	00 00 
    aa27:	eb e9                	jmp    aa12 <process_rule+0xa6>
    aa29:	48 89 c2             	mov    rdx,rax
    aa2c:	81 e2 ff 0f 00 00    	and    edx,0xfff
    aa32:	48 29 d4             	sub    rsp,rdx
    aa35:	48 89 c2             	mov    rdx,rax
    aa38:	81 e2 ff 0f 00 00    	and    edx,0xfff
    aa3e:	48 85 d2             	test   rdx,rdx
    aa41:	74 10                	je     aa53 <process_rule+0xe7>
    aa43:	25 ff 0f 00 00       	and    eax,0xfff
    aa48:	48 83 e8 08          	sub    rax,0x8
    aa4c:	48 01 e0             	add    rax,rsp
    aa4f:	48 83 08 00          	or     QWORD PTR [rax],0x0
    aa53:	48 89 e0             	mov    rax,rsp
    aa56:	48 83 c0 00          	add    rax,0x0
    aa5a:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aa5e:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    aa65:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa69:	48 8d 50 40          	lea    rdx,[rax+0x40]
    aa6d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aa71:	48 05 c8 02 00 00    	add    rax,0x2c8
    aa77:	48 89 d6             	mov    rsi,rdx
    aa7a:	48 89 c7             	mov    rdi,rax
    aa7d:	e8 2e 7d ff ff       	call   27b0 <strcpy@plt>
    aa82:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    aa89:	e9 a4 00 00 00       	jmp    ab32 <process_rule+0x1c6>
    aa8e:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    aa92:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    aa95:	48 98                	cdqe   
    aa97:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    aa9c:	3c 7c                	cmp    al,0x7c
    aa9e:	75 18                	jne    aab8 <process_rule+0x14c>
    aaa0:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    aaa4:	74 09                	je     aaaf <process_rule+0x143>
    aaa6:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    aaad:	eb 7f                	jmp    ab2e <process_rule+0x1c2>
    aaaf:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    aab6:	eb 76                	jmp    ab2e <process_rule+0x1c2>
    aab8:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    aabc:	75 3a                	jne    aaf8 <process_rule+0x18c>
    aabe:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    aac2:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    aac5:	48 98                	cdqe   
    aac7:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    aacc:	0f be c0             	movsx  eax,al
    aacf:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    aad2:	48 63 d2             	movsxd rdx,edx
    aad5:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    aad9:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    aadd:	48 01 d1             	add    rcx,rdx
    aae0:	89 c2                	mov    edx,eax
    aae2:	48 8d 35 89 32 00 00 	lea    rsi,[rip+0x3289]        # dd72 <_IO_stdin_used+0x1d72>
    aae9:	48 89 cf             	mov    rdi,rcx
    aaec:	b8 00 00 00 00       	mov    eax,0x0
    aaf1:	e8 4a 7b ff ff       	call   2640 <sprintf@plt>
    aaf6:	eb 36                	jmp    ab2e <process_rule+0x1c2>
    aaf8:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    aafc:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    aaff:	48 98                	cdqe   
    ab01:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab06:	0f be c0             	movsx  eax,al
    ab09:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    ab0c:	01 d2                	add    edx,edx
    ab0e:	48 63 ca             	movsxd rcx,edx
    ab11:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    ab15:	48 01 d1             	add    rcx,rdx
    ab18:	89 c2                	mov    edx,eax
    ab1a:	48 8d 35 54 32 00 00 	lea    rsi,[rip+0x3254]        # dd75 <_IO_stdin_used+0x1d75>
    ab21:	48 89 cf             	mov    rdi,rcx
    ab24:	b8 00 00 00 00       	mov    eax,0x0
    ab29:	e8 12 7b ff ff       	call   2640 <sprintf@plt>
    ab2e:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    ab32:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab35:	48 63 d8             	movsxd rbx,eax
    ab38:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab3c:	48 83 c0 40          	add    rax,0x40
    ab40:	48 89 c7             	mov    rdi,rax
    ab43:	e8 d8 7a ff ff       	call   2620 <strlen@plt>
    ab48:	48 39 c3             	cmp    rbx,rax
    ab4b:	0f 82 3d ff ff ff    	jb     aa8e <process_rule+0x122>
    ab51:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab55:	48 83 c0 40          	add    rax,0x40
    ab59:	ba ff 00 00 00       	mov    edx,0xff
    ab5e:	be 00 00 00 00       	mov    esi,0x0
    ab63:	48 89 c7             	mov    rdi,rax
    ab66:	e8 45 79 ff ff       	call   24b0 <memset@plt>
    ab6b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab6f:	48 8d 50 40          	lea    rdx,[rax+0x40]
    ab73:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    ab77:	48 89 c6             	mov    rsi,rax
    ab7a:	48 89 d7             	mov    rdi,rdx
    ab7d:	e8 2e 7c ff ff       	call   27b0 <strcpy@plt>
    ab82:	4c 89 e4             	mov    rsp,r12
    ab85:	90                   	nop
    ab86:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    ab8a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    ab91:	00 00 
    ab93:	74 05                	je     ab9a <process_rule+0x22e>
    ab95:	e8 d6 7b ff ff       	call   2770 <__stack_chk_fail@plt>
    ab9a:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    ab9e:	5b                   	pop    rbx
    ab9f:	41 5c                	pop    r12
    aba1:	41 5e                	pop    r14
    aba3:	41 5f                	pop    r15
    aba5:	5d                   	pop    rbp
    aba6:	c3                   	ret    

000000000000aba7 <d_op_parser>:
    aba7:	f3 0f 1e fa          	endbr64 
    abab:	55                   	push   rbp
    abac:	48 89 e5             	mov    rbp,rsp
    abaf:	48 83 ec 20          	sub    rsp,0x20
    abb3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    abb7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    abbb:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    abbe:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    abc2:	48 89 c7             	mov    rdi,rax
    abc5:	e8 cb e9 ff ff       	call   9595 <isdigit>
    abca:	84 c0                	test   al,al
    abcc:	74 23                	je     abf1 <d_op_parser+0x4a>
    abce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    abd2:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    abd9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    abdd:	48 89 c7             	mov    rdi,rax
    abe0:	e8 0b 7b ff ff       	call   26f0 <atoi@plt>
    abe5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    abe9:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    abec:	e9 59 01 00 00       	jmp    ad4a <d_op_parser+0x1a3>
    abf1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    abf5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    abf8:	0f b6 15 7d 31 00 00 	movzx  edx,BYTE PTR [rip+0x317d]        # dd7c <_IO_stdin_used+0x1d7c>
    abff:	0f b6 c0             	movzx  eax,al
    ac02:	0f b6 d2             	movzx  edx,dl
    ac05:	29 d0                	sub    eax,edx
    ac07:	85 c0                	test   eax,eax
    ac09:	75 27                	jne    ac32 <d_op_parser+0x8b>
    ac0b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac0f:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    ac16:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac1a:	48 83 c0 01          	add    rax,0x1
    ac1e:	48 89 c7             	mov    rdi,rax
    ac21:	e8 ca 7a ff ff       	call   26f0 <atoi@plt>
    ac26:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ac2a:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ac2d:	e9 18 01 00 00       	jmp    ad4a <d_op_parser+0x1a3>
    ac32:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac36:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac39:	0f b6 15 3e 31 00 00 	movzx  edx,BYTE PTR [rip+0x313e]        # dd7e <_IO_stdin_used+0x1d7e>
    ac40:	0f b6 c0             	movzx  eax,al
    ac43:	0f b6 d2             	movzx  edx,dl
    ac46:	29 d0                	sub    eax,edx
    ac48:	85 c0                	test   eax,eax
    ac4a:	75 27                	jne    ac73 <d_op_parser+0xcc>
    ac4c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac50:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    ac57:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac5b:	48 83 c0 01          	add    rax,0x1
    ac5f:	48 89 c7             	mov    rdi,rax
    ac62:	e8 89 7a ff ff       	call   26f0 <atoi@plt>
    ac67:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ac6b:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ac6e:	e9 d7 00 00 00       	jmp    ad4a <d_op_parser+0x1a3>
    ac73:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac77:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac7a:	0f b6 15 ff 30 00 00 	movzx  edx,BYTE PTR [rip+0x30ff]        # dd80 <_IO_stdin_used+0x1d80>
    ac81:	0f b6 c0             	movzx  eax,al
    ac84:	0f b6 d2             	movzx  edx,dl
    ac87:	29 d0                	sub    eax,edx
    ac89:	85 c0                	test   eax,eax
    ac8b:	75 27                	jne    acb4 <d_op_parser+0x10d>
    ac8d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac91:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    ac98:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac9c:	48 83 c0 01          	add    rax,0x1
    aca0:	48 89 c7             	mov    rdi,rax
    aca3:	e8 48 7a ff ff       	call   26f0 <atoi@plt>
    aca8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    acac:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    acaf:	e9 96 00 00 00       	jmp    ad4a <d_op_parser+0x1a3>
    acb4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acb8:	ba 02 00 00 00       	mov    edx,0x2
    acbd:	48 8d 35 be 30 00 00 	lea    rsi,[rip+0x30be]        # dd82 <_IO_stdin_used+0x1d82>
    acc4:	48 89 c7             	mov    rdi,rax
    acc7:	e8 a4 78 ff ff       	call   2570 <strncmp@plt>
    accc:	85 c0                	test   eax,eax
    acce:	75 24                	jne    acf4 <d_op_parser+0x14d>
    acd0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acd4:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    acdb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acdf:	48 83 c0 02          	add    rax,0x2
    ace3:	48 89 c7             	mov    rdi,rax
    ace6:	e8 05 7a ff ff       	call   26f0 <atoi@plt>
    aceb:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    acef:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    acf2:	eb 56                	jmp    ad4a <d_op_parser+0x1a3>
    acf4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acf8:	ba 02 00 00 00       	mov    edx,0x2
    acfd:	48 8d 35 81 30 00 00 	lea    rsi,[rip+0x3081]        # dd85 <_IO_stdin_used+0x1d85>
    ad04:	48 89 c7             	mov    rdi,rax
    ad07:	e8 64 78 ff ff       	call   2570 <strncmp@plt>
    ad0c:	85 c0                	test   eax,eax
    ad0e:	75 24                	jne    ad34 <d_op_parser+0x18d>
    ad10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad14:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    ad1b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad1f:	48 83 c0 02          	add    rax,0x2
    ad23:	48 89 c7             	mov    rdi,rax
    ad26:	e8 c5 79 ff ff       	call   26f0 <atoi@plt>
    ad2b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad2f:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad32:	eb 16                	jmp    ad4a <d_op_parser+0x1a3>
    ad34:	48 8d 3d 4d 30 00 00 	lea    rdi,[rip+0x304d]        # dd88 <_IO_stdin_used+0x1d88>
    ad3b:	e8 c0 77 ff ff       	call   2500 <puts@plt>
    ad40:	bf ff ff ff ff       	mov    edi,0xffffffff
    ad45:	e8 d6 77 ff ff       	call   2520 <exit@plt>
    ad4a:	c9                   	leave  
    ad4b:	c3                   	ret    

000000000000ad4c <d_engine>:
    ad4c:	f3 0f 1e fa          	endbr64 
    ad50:	55                   	push   rbp
    ad51:	48 89 e5             	mov    rbp,rsp
    ad54:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ad58:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ad5c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad60:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ad63:	83 f8 ff             	cmp    eax,0xffffffff
    ad66:	75 0a                	jne    ad72 <d_engine+0x26>
    ad68:	b8 01 00 00 00       	mov    eax,0x1
    ad6d:	e9 ea 00 00 00       	jmp    ae5c <d_engine+0x110>
    ad72:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad76:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    ad79:	2d a1 00 00 00       	sub    eax,0xa1
    ad7e:	83 f8 05             	cmp    eax,0x5
    ad81:	0f 87 d0 00 00 00    	ja     ae57 <d_engine+0x10b>
    ad87:	89 c0                	mov    eax,eax
    ad89:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    ad90:	00 
    ad91:	48 8d 05 08 30 00 00 	lea    rax,[rip+0x3008]        # dda0 <_IO_stdin_used+0x1da0>
    ad98:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    ad9b:	48 98                	cdqe   
    ad9d:	48 8d 15 fc 2f 00 00 	lea    rdx,[rip+0x2ffc]        # dda0 <_IO_stdin_used+0x1da0>
    ada4:	48 01 d0             	add    rax,rdx
    ada7:	3e ff e0             	notrack jmp rax
    adaa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adae:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    adb1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adb5:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    adb8:	39 c2                	cmp    edx,eax
    adba:	0f 85 87 00 00 00    	jne    ae47 <d_engine+0xfb>
    adc0:	b8 01 00 00 00       	mov    eax,0x1
    adc5:	e9 92 00 00 00       	jmp    ae5c <d_engine+0x110>
    adca:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adce:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    add1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    add5:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    add8:	39 c2                	cmp    edx,eax
    adda:	76 6e                	jbe    ae4a <d_engine+0xfe>
    addc:	b8 01 00 00 00       	mov    eax,0x1
    ade1:	eb 79                	jmp    ae5c <d_engine+0x110>
    ade3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ade7:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    adea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adee:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    adf1:	39 c2                	cmp    edx,eax
    adf3:	72 58                	jb     ae4d <d_engine+0x101>
    adf5:	b8 01 00 00 00       	mov    eax,0x1
    adfa:	eb 60                	jmp    ae5c <d_engine+0x110>
    adfc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae00:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae03:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae07:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae0a:	39 c2                	cmp    edx,eax
    ae0c:	73 42                	jae    ae50 <d_engine+0x104>
    ae0e:	b8 01 00 00 00       	mov    eax,0x1
    ae13:	eb 47                	jmp    ae5c <d_engine+0x110>
    ae15:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae19:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae1c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae20:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae23:	39 c2                	cmp    edx,eax
    ae25:	77 2c                	ja     ae53 <d_engine+0x107>
    ae27:	b8 01 00 00 00       	mov    eax,0x1
    ae2c:	eb 2e                	jmp    ae5c <d_engine+0x110>
    ae2e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae32:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae35:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae39:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae3c:	39 c2                	cmp    edx,eax
    ae3e:	74 16                	je     ae56 <d_engine+0x10a>
    ae40:	b8 01 00 00 00       	mov    eax,0x1
    ae45:	eb 15                	jmp    ae5c <d_engine+0x110>
    ae47:	90                   	nop
    ae48:	eb 0d                	jmp    ae57 <d_engine+0x10b>
    ae4a:	90                   	nop
    ae4b:	eb 0a                	jmp    ae57 <d_engine+0x10b>
    ae4d:	90                   	nop
    ae4e:	eb 07                	jmp    ae57 <d_engine+0x10b>
    ae50:	90                   	nop
    ae51:	eb 04                	jmp    ae57 <d_engine+0x10b>
    ae53:	90                   	nop
    ae54:	eb 01                	jmp    ae57 <d_engine+0x10b>
    ae56:	90                   	nop
    ae57:	b8 00 00 00 00       	mov    eax,0x0
    ae5c:	5d                   	pop    rbp
    ae5d:	c3                   	ret    

000000000000ae5e <homenet_toi>:
    ae5e:	f3 0f 1e fa          	endbr64 
    ae62:	55                   	push   rbp
    ae63:	48 89 e5             	mov    rbp,rsp
    ae66:	53                   	push   rbx
    ae67:	48 83 ec 38          	sub    rsp,0x38
    ae6b:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    ae6f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    ae76:	00 00 
    ae78:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    ae7c:	31 c0                	xor    eax,eax
    ae7e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    ae82:	48 8d 35 2f 2f 00 00 	lea    rsi,[rip+0x2f2f]        # ddb8 <_IO_stdin_used+0x1db8>
    ae89:	48 89 c7             	mov    rdi,rax
    ae8c:	e8 2f 79 ff ff       	call   27c0 <strtok@plt>
    ae91:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    ae95:	eb 4c                	jmp    aee3 <homenet_toi+0x85>
    ae97:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    ae9b:	48 89 c7             	mov    rdi,rax
    ae9e:	e8 4d 78 ff ff       	call   26f0 <atoi@plt>
    aea3:	89 c3                	mov    ebx,eax
    aea5:	48 8d 45 df          	lea    rax,[rbp-0x21]
    aea9:	48 89 c7             	mov    rdi,rax
    aeac:	e8 6f 77 ff ff       	call   2620 <strlen@plt>
    aeb1:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    aeb5:	48 01 d0             	add    rax,rdx
    aeb8:	89 da                	mov    edx,ebx
    aeba:	48 8d 35 f9 2e 00 00 	lea    rsi,[rip+0x2ef9]        # ddba <_IO_stdin_used+0x1dba>
    aec1:	48 89 c7             	mov    rdi,rax
    aec4:	b8 00 00 00 00       	mov    eax,0x0
    aec9:	e8 72 77 ff ff       	call   2640 <sprintf@plt>
    aece:	48 8d 35 e3 2e 00 00 	lea    rsi,[rip+0x2ee3]        # ddb8 <_IO_stdin_used+0x1db8>
    aed5:	bf 00 00 00 00       	mov    edi,0x0
    aeda:	e8 e1 78 ff ff       	call   27c0 <strtok@plt>
    aedf:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aee3:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    aee8:	75 ad                	jne    ae97 <homenet_toi+0x39>
    aeea:	48 8d 45 df          	lea    rax,[rbp-0x21]
    aeee:	ba 10 00 00 00       	mov    edx,0x10
    aef3:	be 00 00 00 00       	mov    esi,0x0
    aef8:	48 89 c7             	mov    rdi,rax
    aefb:	e8 d0 77 ff ff       	call   26d0 <strtol@plt>
    af00:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    af04:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    af0b:	00 00 
    af0d:	74 05                	je     af14 <homenet_toi+0xb6>
    af0f:	e8 5c 78 ff ff       	call   2770 <__stack_chk_fail@plt>
    af14:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    af18:	c9                   	leave  
    af19:	c3                   	ret    

000000000000af1a <tcp_check_sum_passed>:
    af1a:	f3 0f 1e fa          	endbr64 
    af1e:	55                   	push   rbp
    af1f:	48 89 e5             	mov    rbp,rsp
    af22:	41 54                	push   r12
    af24:	53                   	push   rbx
    af25:	48 83 ec 30          	sub    rsp,0x30
    af29:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    af2d:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    af31:	bb 00 00 00 00       	mov    ebx,0x0
    af36:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    af3a:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    af3e:	0f b7 c0             	movzx  eax,ax
    af41:	89 c7                	mov    edi,eax
    af43:	e8 08 77 ff ff       	call   2650 <ntohs@plt>
    af48:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    af4c:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    af4f:	83 e2 0f             	and    edx,0xf
    af52:	0f b6 d2             	movzx  edx,dl
    af55:	c1 e2 02             	shl    edx,0x2
    af58:	29 d0                	sub    eax,edx
    af5a:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    af5e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    af62:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    af66:	0f b7 c0             	movzx  eax,ax
    af69:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    af6d:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    af71:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    af75:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    af79:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    af7f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    af83:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    af86:	c1 e8 10             	shr    eax,0x10
    af89:	89 c0                	mov    eax,eax
    af8b:	0f b7 c0             	movzx  eax,ax
    af8e:	48 01 c3             	add    rbx,rax
    af91:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    af95:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    af98:	89 c0                	mov    eax,eax
    af9a:	0f b7 c0             	movzx  eax,ax
    af9d:	48 01 c3             	add    rbx,rax
    afa0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    afa4:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    afa7:	c1 e8 10             	shr    eax,0x10
    afaa:	89 c0                	mov    eax,eax
    afac:	0f b7 c0             	movzx  eax,ax
    afaf:	48 01 c3             	add    rbx,rax
    afb2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    afb6:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    afb9:	89 c0                	mov    eax,eax
    afbb:	0f b7 c0             	movzx  eax,ax
    afbe:	48 01 c3             	add    rbx,rax
    afc1:	bf 06 00 00 00       	mov    edi,0x6
    afc6:	e8 45 75 ff ff       	call   2510 <htons@plt>
    afcb:	0f b7 c0             	movzx  eax,ax
    afce:	48 01 c3             	add    rbx,rax
    afd1:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    afd5:	89 c7                	mov    edi,eax
    afd7:	e8 34 75 ff ff       	call   2510 <htons@plt>
    afdc:	0f b7 c0             	movzx  eax,ax
    afdf:	48 01 c3             	add    rbx,rax
    afe2:	eb 1a                	jmp    affe <tcp_check_sum_passed+0xe4>
    afe4:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    afe8:	48 8d 50 14          	lea    rdx,[rax+0x14]
    afec:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    aff0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    aff3:	0f b6 c0             	movzx  eax,al
    aff6:	48 01 c3             	add    rbx,rax
    aff9:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    affe:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    b003:	77 df                	ja     afe4 <tcp_check_sum_passed+0xca>
    b005:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    b00a:	74 1d                	je     b029 <tcp_check_sum_passed+0x10f>
    b00c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b010:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b013:	0f b6 c0             	movzx  eax,al
    b016:	48 01 c3             	add    rbx,rax
    b019:	eb 0e                	jmp    b029 <tcp_check_sum_passed+0x10f>
    b01b:	0f b7 c3             	movzx  eax,bx
    b01e:	48 c1 eb 10          	shr    rbx,0x10
    b022:	48 89 da             	mov    rdx,rbx
    b025:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    b029:	48 89 d8             	mov    rax,rbx
    b02c:	48 c1 e8 10          	shr    rax,0x10
    b030:	48 85 c0             	test   rax,rax
    b033:	75 e6                	jne    b01b <tcp_check_sum_passed+0x101>
    b035:	48 f7 d3             	not    rbx
    b038:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b03c:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    b040:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    b044:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b048:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b04c:	0f b7 c0             	movzx  eax,ax
    b04f:	89 c7                	mov    edi,eax
    b051:	e8 fa 75 ff ff       	call   2650 <ntohs@plt>
    b056:	44 0f b7 e0          	movzx  r12d,ax
    b05a:	89 d8                	mov    eax,ebx
    b05c:	0f b7 c0             	movzx  eax,ax
    b05f:	89 c7                	mov    edi,eax
    b061:	e8 ea 75 ff ff       	call   2650 <ntohs@plt>
    b066:	0f b7 c0             	movzx  eax,ax
    b069:	44 89 e2             	mov    edx,r12d
    b06c:	89 c6                	mov    esi,eax
    b06e:	48 8d 3d 4a 2d 00 00 	lea    rdi,[rip+0x2d4a]        # ddbf <_IO_stdin_used+0x1dbf>
    b075:	b8 00 00 00 00       	mov    eax,0x0
    b07a:	e8 21 74 ff ff       	call   24a0 <printf@plt>
    b07f:	89 d8                	mov    eax,ebx
    b081:	0f b7 c0             	movzx  eax,ax
    b084:	89 c7                	mov    edi,eax
    b086:	e8 c5 75 ff ff       	call   2650 <ntohs@plt>
    b08b:	89 c3                	mov    ebx,eax
    b08d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    b091:	0f b7 c0             	movzx  eax,ax
    b094:	89 c7                	mov    edi,eax
    b096:	e8 b5 75 ff ff       	call   2650 <ntohs@plt>
    b09b:	66 39 c3             	cmp    bx,ax
    b09e:	75 07                	jne    b0a7 <tcp_check_sum_passed+0x18d>
    b0a0:	b8 01 00 00 00       	mov    eax,0x1
    b0a5:	eb 05                	jmp    b0ac <tcp_check_sum_passed+0x192>
    b0a7:	b8 00 00 00 00       	mov    eax,0x0
    b0ac:	48 83 c4 30          	add    rsp,0x30
    b0b0:	5b                   	pop    rbx
    b0b1:	41 5c                	pop    r12
    b0b3:	5d                   	pop    rbp
    b0b4:	c3                   	ret    

000000000000b0b5 <run_hello_script>:
    b0b5:	f3 0f 1e fa          	endbr64 
    b0b9:	55                   	push   rbp
    b0ba:	48 89 e5             	mov    rbp,rsp
    b0bd:	48 83 ec 10          	sub    rsp,0x10
    b0c1:	e8 7a 76 ff ff       	call   2740 <luaL_newstate@plt>
    b0c6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b0ca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b0ce:	48 89 c7             	mov    rdi,rax
    b0d1:	e8 8a 76 ff ff       	call   2760 <luaL_openlibs@plt>
    b0d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b0da:	ba 00 00 00 00       	mov    edx,0x0
    b0df:	48 8d 35 ea 2c 00 00 	lea    rsi,[rip+0x2cea]        # ddd0 <_IO_stdin_used+0x1dd0>
    b0e6:	48 89 c7             	mov    rdi,rax
    b0e9:	e8 f2 75 ff ff       	call   26e0 <luaL_loadfilex@plt>
    b0ee:	85 c0                	test   eax,eax
    b0f0:	75 2b                	jne    b11d <run_hello_script+0x68>
    b0f2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b0f6:	41 b9 00 00 00 00    	mov    r9d,0x0
    b0fc:	41 b8 00 00 00 00    	mov    r8d,0x0
    b102:	b9 00 00 00 00       	mov    ecx,0x0
    b107:	ba ff ff ff ff       	mov    edx,0xffffffff
    b10c:	be 00 00 00 00       	mov    esi,0x0
    b111:	48 89 c7             	mov    rdi,rax
    b114:	e8 77 75 ff ff       	call   2690 <lua_pcallk@plt>
    b119:	85 c0                	test   eax,eax
    b11b:	74 07                	je     b124 <run_hello_script+0x6f>
    b11d:	b8 01 00 00 00       	mov    eax,0x1
    b122:	eb 05                	jmp    b129 <run_hello_script+0x74>
    b124:	b8 00 00 00 00       	mov    eax,0x0
    b129:	85 c0                	test   eax,eax
    b12b:	75 1e                	jne    b14b <run_hello_script+0x96>
    b12d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b131:	48 89 c7             	mov    rdi,rax
    b134:	e8 f7 75 ff ff       	call   2730 <lua_gettop@plt>
    b139:	f7 d0                	not    eax
    b13b:	89 c2                	mov    edx,eax
    b13d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b141:	89 d6                	mov    esi,edx
    b143:	48 89 c7             	mov    rdi,rax
    b146:	e8 95 74 ff ff       	call   25e0 <lua_settop@plt>
    b14b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b14f:	48 89 c7             	mov    rdi,rax
    b152:	e8 79 76 ff ff       	call   27d0 <lua_close@plt>
    b157:	90                   	nop
    b158:	c9                   	leave  
    b159:	c3                   	ret    

000000000000b15a <collect_scripts>:
    b15a:	f3 0f 1e fa          	endbr64 
    b15e:	55                   	push   rbp
    b15f:	48 89 e5             	mov    rbp,rsp
    b162:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b169:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b170:	00 00 
    b172:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b176:	31 c0                	xor    eax,eax
    b178:	48 8d 35 6f 2c 00 00 	lea    rsi,[rip+0x2c6f]        # ddee <_IO_stdin_used+0x1dee>
    b17f:	48 8d 3d 6a 2c 00 00 	lea    rdi,[rip+0x2c6a]        # ddf0 <_IO_stdin_used+0x1df0>
    b186:	e8 05 74 ff ff       	call   2590 <fopen@plt>
    b18b:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    b18f:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    b194:	75 16                	jne    b1ac <collect_scripts+0x52>
    b196:	48 8d 3d 6b 2c 00 00 	lea    rdi,[rip+0x2c6b]        # de08 <_IO_stdin_used+0x1e08>
    b19d:	e8 5e 73 ff ff       	call   2500 <puts@plt>
    b1a2:	bf ff ff ff ff       	mov    edi,0xffffffff
    b1a7:	e8 74 73 ff ff       	call   2520 <exit@plt>
    b1ac:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    b1b3:	00 00 00 00 
    b1b7:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b1bb:	ba 00 00 00 00       	mov    edx,0x0
    b1c0:	48 8d 35 83 2c 00 00 	lea    rsi,[rip+0x2c83]        # de4a <_IO_stdin_used+0x1e4a>
    b1c7:	48 89 c7             	mov    rdi,rax
    b1ca:	e8 31 75 ff ff       	call   2700 <regcomp@plt>
    b1cf:	e9 86 00 00 00       	jmp    b25a <collect_scripts+0x100>
    b1d4:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b1db:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b1de:	3c 23                	cmp    al,0x23
    b1e0:	75 02                	jne    b1e4 <collect_scripts+0x8a>
    b1e2:	eb 76                	jmp    b25a <collect_scripts+0x100>
    b1e4:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b1eb:	ba 0e 00 00 00       	mov    edx,0xe
    b1f0:	48 8d 35 5d 2c 00 00 	lea    rsi,[rip+0x2c5d]        # de54 <_IO_stdin_used+0x1e54>
    b1f7:	48 89 c7             	mov    rdi,rax
    b1fa:	e8 71 73 ff ff       	call   2570 <strncmp@plt>
    b1ff:	85 c0                	test   eax,eax
    b201:	75 34                	jne    b237 <collect_scripts+0xdd>
    b203:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b20a:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    b20e:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b212:	48 89 d6             	mov    rsi,rdx
    b215:	48 89 c7             	mov    rdi,rax
    b218:	e8 93 75 ff ff       	call   27b0 <strcpy@plt>
    b21d:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b221:	48 8d 35 3b 2c 00 00 	lea    rsi,[rip+0x2c3b]        # de63 <_IO_stdin_used+0x1e63>
    b228:	48 89 c7             	mov    rdi,rax
    b22b:	e8 e0 75 ff ff       	call   2810 <strcspn@plt>
    b230:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b235:	eb 23                	jmp    b25a <collect_scripts+0x100>
    b237:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b23e:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b242:	41 b8 00 00 00 00    	mov    r8d,0x0
    b248:	b9 00 00 00 00       	mov    ecx,0x0
    b24d:	ba 00 00 00 00       	mov    edx,0x0
    b252:	48 89 c7             	mov    rdi,rax
    b255:	e8 46 73 ff ff       	call   25a0 <regexec@plt>
    b25a:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    b25e:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    b265:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    b26c:	48 89 ce             	mov    rsi,rcx
    b26f:	48 89 c7             	mov    rdi,rax
    b272:	e8 29 75 ff ff       	call   27a0 <getline@plt>
    b277:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b27b:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    b280:	0f 85 4e ff ff ff    	jne    b1d4 <collect_scripts+0x7a>
    b286:	90                   	nop
    b287:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b28b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b292:	00 00 
    b294:	74 05                	je     b29b <collect_scripts+0x141>
    b296:	e8 d5 74 ff ff       	call   2770 <__stack_chk_fail@plt>
    b29b:	c9                   	leave  
    b29c:	c3                   	ret    

000000000000b29d <ip6decode>:
    b29d:	f3 0f 1e fa          	endbr64 
    b2a1:	55                   	push   rbp
    b2a2:	48 89 e5             	mov    rbp,rsp
    b2a5:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b2ac:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    b2b3:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    b2ba:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b2c1:	00 00 
    b2c3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b2c7:	31 c0                	xor    eax,eax
    b2c9:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b2d0:	48 83 c0 0e          	add    rax,0xe
    b2d4:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b2d8:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b2dc:	48 83 c0 08          	add    rax,0x8
    b2e0:	48 89 c7             	mov    rdi,rax
    b2e3:	e8 d5 7e ff ff       	call   31bd <inet6_ntoa>
    b2e8:	48 89 c1             	mov    rcx,rax
    b2eb:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b2ef:	ba 29 00 00 00       	mov    edx,0x29
    b2f4:	48 89 ce             	mov    rsi,rcx
    b2f7:	48 89 c7             	mov    rdi,rax
    b2fa:	e8 01 75 ff ff       	call   2800 <strncpy@plt>
    b2ff:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b303:	48 83 c0 18          	add    rax,0x18
    b307:	48 89 c7             	mov    rdi,rax
    b30a:	e8 ae 7e ff ff       	call   31bd <inet6_ntoa>
    b30f:	48 89 c1             	mov    rcx,rax
    b312:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b316:	ba 29 00 00 00       	mov    edx,0x29
    b31b:	48 89 ce             	mov    rsi,rcx
    b31e:	48 89 c7             	mov    rdi,rax
    b321:	e8 da 74 ff ff       	call   2800 <strncpy@plt>
    b326:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b32a:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b32e:	0f b6 c0             	movzx  eax,al
    b331:	85 c0                	test   eax,eax
    b333:	75 1c                	jne    b351 <ip6decode+0xb4>
    b335:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b339:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    b33d:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b344:	48 89 ce             	mov    rsi,rcx
    b347:	48 89 c7             	mov    rdi,rax
    b34a:	e8 09 87 ff ff       	call   3a58 <ip6_icmp_decode>
    b34f:	eb 28                	jmp    b379 <ip6decode+0xdc>
    b351:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b355:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b359:	0f b6 c8             	movzx  ecx,al
    b35c:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b360:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b364:	48 89 c6             	mov    rsi,rax
    b367:	48 8d 3d fa 2a 00 00 	lea    rdi,[rip+0x2afa]        # de68 <_IO_stdin_used+0x1e68>
    b36e:	b8 00 00 00 00       	mov    eax,0x0
    b373:	e8 28 71 ff ff       	call   24a0 <printf@plt>
    b378:	90                   	nop
    b379:	90                   	nop
    b37a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b37e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b385:	00 00 
    b387:	74 05                	je     b38e <ip6decode+0xf1>
    b389:	e8 e2 73 ff ff       	call   2770 <__stack_chk_fail@plt>
    b38e:	c9                   	leave  
    b38f:	c3                   	ret    

000000000000b390 <print_mem_map>:
    b390:	f3 0f 1e fa          	endbr64 
    b394:	55                   	push   rbp
    b395:	48 89 e5             	mov    rbp,rsp
    b398:	48 83 ec 10          	sub    rsp,0x10
    b39c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b3a3:	eb 4c                	jmp    b3f1 <print_mem_map+0x61>
    b3a5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b3a8:	48 63 d0             	movsxd rdx,eax
    b3ab:	48 89 d0             	mov    rax,rdx
    b3ae:	48 c1 e0 02          	shl    rax,0x2
    b3b2:	48 01 d0             	add    rax,rdx
    b3b5:	48 c1 e0 03          	shl    rax,0x3
    b3b9:	48 8d 15 40 d4 12 00 	lea    rdx,[rip+0x12d440]        # 138800 <fn_mem_map>
    b3c0:	48 01 d0             	add    rax,rdx
    b3c3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b3c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b3cb:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b3ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b3d2:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b3d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b3d9:	48 89 c6             	mov    rsi,rax
    b3dc:	48 8d 3d ad 2a 00 00 	lea    rdi,[rip+0x2aad]        # de90 <_IO_stdin_used+0x1e90>
    b3e3:	b8 00 00 00 00       	mov    eax,0x0
    b3e8:	e8 b3 70 ff ff       	call   24a0 <printf@plt>
    b3ed:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b3f1:	8b 05 09 fc 12 00    	mov    eax,DWORD PTR [rip+0x12fc09]        # 13b000 <fn_num>
    b3f7:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b3fa:	7c a9                	jl     b3a5 <print_mem_map+0x15>
    b3fc:	90                   	nop
    b3fd:	90                   	nop
    b3fe:	c9                   	leave  
    b3ff:	c3                   	ret    

000000000000b400 <crash_handler>:
    b400:	f3 0f 1e fa          	endbr64 
    b404:	55                   	push   rbp
    b405:	48 89 e5             	mov    rbp,rsp
    b408:	41 54                	push   r12
    b40a:	53                   	push   rbx
    b40b:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    b412:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    b418:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b41f:	00 00 
    b421:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b425:	31 c0                	xor    eax,eax
    b427:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b42e:	be 14 00 00 00       	mov    esi,0x14
    b433:	48 89 c7             	mov    rdi,rax
    b436:	e8 95 70 ff ff       	call   24d0 <backtrace@plt>
    b43b:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    b441:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    b447:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b44e:	89 d6                	mov    esi,edx
    b450:	48 89 c7             	mov    rdi,rax
    b453:	e8 a8 71 ff ff       	call   2600 <backtrace_symbols@plt>
    b458:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    b45f:	b8 00 00 00 00       	mov    eax,0x0
    b464:	e8 20 7f ff ff       	call   3389 <get_formated_time>
    b469:	48 89 c6             	mov    rsi,rax
    b46c:	48 8d 3d 3d 2a 00 00 	lea    rdi,[rip+0x2a3d]        # deb0 <_IO_stdin_used+0x1eb0>
    b473:	b8 00 00 00 00       	mov    eax,0x0
    b478:	e8 23 70 ff ff       	call   24a0 <printf@plt>
    b47d:	48 8d 3d 5b 2a 00 00 	lea    rdi,[rip+0x2a5b]        # dedf <_IO_stdin_used+0x1edf>
    b484:	e8 77 70 ff ff       	call   2500 <puts@plt>
    b489:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    b490:	00 
    b491:	0f 84 6d 01 00 00    	je     b604 <crash_handler+0x204>
    b497:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    b49e:	00 00 00 
    b4a1:	e9 4c 01 00 00       	jmp    b5f2 <crash_handler+0x1f2>
    b4a6:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b4ac:	48 98                	cdqe   
    b4ae:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b4b5:	00 
    b4b6:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b4bd:	48 01 d0             	add    rax,rdx
    b4c0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b4c3:	48 8d 35 29 2a 00 00 	lea    rsi,[rip+0x2a29]        # def3 <_IO_stdin_used+0x1ef3>
    b4ca:	48 89 c7             	mov    rdi,rax
    b4cd:	e8 ce 71 ff ff       	call   26a0 <strstr@plt>
    b4d2:	48 85 c0             	test   rax,rax
    b4d5:	0f 85 0f 01 00 00    	jne    b5ea <crash_handler+0x1ea>
    b4db:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b4e1:	48 98                	cdqe   
    b4e3:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b4ea:	00 
    b4eb:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b4f2:	48 01 d0             	add    rax,rdx
    b4f5:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b4f8:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b4fe:	48 98                	cdqe   
    b500:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b507:	00 
    b508:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b50f:	48 01 d0             	add    rax,rdx
    b512:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b515:	be 2b 00 00 00       	mov    esi,0x2b
    b51a:	48 89 c7             	mov    rdi,rax
    b51d:	e8 02 80 ff ff       	call   3524 <strloc>
    b522:	48 98                	cdqe   
    b524:	48 83 c0 01          	add    rax,0x1
    b528:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b52c:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b530:	48 8d 35 c0 29 00 00 	lea    rsi,[rip+0x29c0]        # def7 <_IO_stdin_used+0x1ef7>
    b537:	48 89 c7             	mov    rdi,rax
    b53a:	b8 00 00 00 00       	mov    eax,0x0
    b53f:	e8 fc 70 ff ff       	call   2640 <sprintf@plt>
    b544:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b548:	be 29 00 00 00       	mov    esi,0x29
    b54d:	48 89 c7             	mov    rdi,rax
    b550:	e8 cf 7f ff ff       	call   3524 <strloc>
    b555:	48 98                	cdqe   
    b557:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b55c:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b560:	ba 10 00 00 00       	mov    edx,0x10
    b565:	be 00 00 00 00       	mov    esi,0x0
    b56a:	48 89 c7             	mov    rdi,rax
    b56d:	e8 5e 71 ff ff       	call   26d0 <strtol@plt>
    b572:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b578:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b57e:	89 c7                	mov    edi,eax
    b580:	e8 20 01 00 00       	call   b6a5 <offset_search>
    b585:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b58c:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b593:	74 3a                	je     b5cf <crash_handler+0x1cf>
    b595:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b59c:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b59f:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b5a6:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b5a9:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b5b0:	8b b5 1c ff ff ff    	mov    esi,DWORD PTR [rbp-0xe4]
    b5b6:	41 89 f0             	mov    r8d,esi
    b5b9:	48 89 c6             	mov    rsi,rax
    b5bc:	48 8d 3d 3d 29 00 00 	lea    rdi,[rip+0x293d]        # df00 <_IO_stdin_used+0x1f00>
    b5c3:	b8 00 00 00 00       	mov    eax,0x0
    b5c8:	e8 d3 6e ff ff       	call   24a0 <printf@plt>
    b5cd:	eb 1c                	jmp    b5eb <crash_handler+0x1eb>
    b5cf:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b5d5:	89 c6                	mov    esi,eax
    b5d7:	48 8d 3d 5a 29 00 00 	lea    rdi,[rip+0x295a]        # df38 <_IO_stdin_used+0x1f38>
    b5de:	b8 00 00 00 00       	mov    eax,0x0
    b5e3:	e8 b8 6e ff ff       	call   24a0 <printf@plt>
    b5e8:	eb 01                	jmp    b5eb <crash_handler+0x1eb>
    b5ea:	90                   	nop
    b5eb:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b5f2:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b5f8:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b5fe:	0f 8c a2 fe ff ff    	jl     b4a6 <crash_handler+0xa6>
    b604:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b60b:	48 89 c7             	mov    rdi,rax
    b60e:	e8 fd 6f ff ff       	call   2610 <free@plt>
    b613:	48 8d 3d 48 29 00 00 	lea    rdi,[rip+0x2948]        # df62 <_IO_stdin_used+0x1f62>
    b61a:	e8 e1 6e ff ff       	call   2500 <puts@plt>
    b61f:	89 c6                	mov    esi,eax
    b621:	48 8d 3d 49 29 00 00 	lea    rdi,[rip+0x2949]        # df71 <_IO_stdin_used+0x1f71>
    b628:	b8 00 00 00 00       	mov    eax,0x0
    b62d:	e8 6e 6e ff ff       	call   24a0 <printf@plt>
    b632:	89 d8                	mov    eax,ebx
    b634:	89 c6                	mov    esi,eax
    b636:	48 8d 3d 44 29 00 00 	lea    rdi,[rip+0x2944]        # df81 <_IO_stdin_used+0x1f81>
    b63d:	b8 00 00 00 00       	mov    eax,0x0
    b642:	e8 59 6e ff ff       	call   24a0 <printf@plt>
    b647:	89 d8                	mov    eax,ebx
    b649:	89 c6                	mov    esi,eax
    b64b:	48 8d 3d 3f 29 00 00 	lea    rdi,[rip+0x293f]        # df91 <_IO_stdin_used+0x1f91>
    b652:	b8 00 00 00 00       	mov    eax,0x0
    b657:	e8 44 6e ff ff       	call   24a0 <printf@plt>
    b65c:	89 c8                	mov    eax,ecx
    b65e:	89 c6                	mov    esi,eax
    b660:	48 8d 3d 3a 29 00 00 	lea    rdi,[rip+0x293a]        # dfa1 <_IO_stdin_used+0x1fa1>
    b667:	b8 00 00 00 00       	mov    eax,0x0
    b66c:	e8 2f 6e ff ff       	call   24a0 <printf@plt>
    b671:	89 e0                	mov    eax,esp
    b673:	89 c6                	mov    esi,eax
    b675:	48 8d 3d 35 29 00 00 	lea    rdi,[rip+0x2935]        # dfb1 <_IO_stdin_used+0x1fb1>
    b67c:	b8 00 00 00 00       	mov    eax,0x0
    b681:	e8 1a 6e ff ff       	call   24a0 <printf@plt>
    b686:	89 e8                	mov    eax,ebp
    b688:	89 c6                	mov    esi,eax
    b68a:	48 8d 3d 30 29 00 00 	lea    rdi,[rip+0x2930]        # dfc1 <_IO_stdin_used+0x1fc1>
    b691:	b8 00 00 00 00       	mov    eax,0x0
    b696:	e8 05 6e ff ff       	call   24a0 <printf@plt>
    b69b:	bf 01 00 00 00       	mov    edi,0x1
    b6a0:	e8 7b 6e ff ff       	call   2520 <exit@plt>

000000000000b6a5 <offset_search>:
    b6a5:	f3 0f 1e fa          	endbr64 
    b6a9:	55                   	push   rbp
    b6aa:	48 89 e5             	mov    rbp,rsp
    b6ad:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b6b0:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b6b7:	eb 44                	jmp    b6fd <offset_search+0x58>
    b6b9:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b6bc:	48 63 d0             	movsxd rdx,eax
    b6bf:	48 89 d0             	mov    rax,rdx
    b6c2:	48 c1 e0 02          	shl    rax,0x2
    b6c6:	48 01 d0             	add    rax,rdx
    b6c9:	48 c1 e0 03          	shl    rax,0x3
    b6cd:	48 8d 15 2c d1 12 00 	lea    rdx,[rip+0x12d12c]        # 138800 <fn_mem_map>
    b6d4:	48 01 d0             	add    rax,rdx
    b6d7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b6db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b6df:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b6e2:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b6e5:	76 12                	jbe    b6f9 <offset_search+0x54>
    b6e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b6eb:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b6ee:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b6f1:	73 06                	jae    b6f9 <offset_search+0x54>
    b6f3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b6f7:	eb 14                	jmp    b70d <offset_search+0x68>
    b6f9:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b6fd:	8b 05 fd f8 12 00    	mov    eax,DWORD PTR [rip+0x12f8fd]        # 13b000 <fn_num>
    b703:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b706:	7c b1                	jl     b6b9 <offset_search+0x14>
    b708:	b8 00 00 00 00       	mov    eax,0x0
    b70d:	5d                   	pop    rbp
    b70e:	c3                   	ret    

000000000000b70f <add_fn>:
    b70f:	f3 0f 1e fa          	endbr64 
    b713:	55                   	push   rbp
    b714:	48 89 e5             	mov    rbp,rsp
    b717:	48 83 ec 20          	sub    rsp,0x20
    b71b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b71f:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b722:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b725:	8b 05 d5 f8 12 00    	mov    eax,DWORD PTR [rip+0x12f8d5]        # 13b000 <fn_num>
    b72b:	8d 50 01             	lea    edx,[rax+0x1]
    b72e:	89 15 cc f8 12 00    	mov    DWORD PTR [rip+0x12f8cc],edx        # 13b000 <fn_num>
    b734:	48 63 d0             	movsxd rdx,eax
    b737:	48 89 d0             	mov    rax,rdx
    b73a:	48 c1 e0 02          	shl    rax,0x2
    b73e:	48 01 d0             	add    rax,rdx
    b741:	48 c1 e0 03          	shl    rax,0x3
    b745:	48 8d 15 b4 d0 12 00 	lea    rdx,[rip+0x12d0b4]        # 138800 <fn_mem_map>
    b74c:	48 01 d0             	add    rax,rdx
    b74f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b753:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b757:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b75b:	48 89 d6             	mov    rsi,rdx
    b75e:	48 89 c7             	mov    rdi,rax
    b761:	e8 4a 70 ff ff       	call   27b0 <strcpy@plt>
    b766:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b76a:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b76d:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b770:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b774:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b777:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b77a:	90                   	nop
    b77b:	c9                   	leave  
    b77c:	c3                   	ret    

000000000000b77d <load_fn_mem_map>:
    b77d:	f3 0f 1e fa          	endbr64 
    b781:	55                   	push   rbp
    b782:	48 89 e5             	mov    rbp,rsp
    b785:	53                   	push   rbx
    b786:	48 83 ec 78          	sub    rsp,0x78
    b78a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b791:	00 00 
    b793:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b797:	31 c0                	xor    eax,eax
    b799:	48 8d 35 38 28 00 00 	lea    rsi,[rip+0x2838]        # dfd8 <_IO_stdin_used+0x1fd8>
    b7a0:	48 8d 3d 33 28 00 00 	lea    rdi,[rip+0x2833]        # dfda <_IO_stdin_used+0x1fda>
    b7a7:	e8 e4 6d ff ff       	call   2590 <fopen@plt>
    b7ac:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b7b0:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b7b5:	75 16                	jne    b7cd <load_fn_mem_map+0x50>
    b7b7:	48 8d 3d 3a 28 00 00 	lea    rdi,[rip+0x283a]        # dff8 <_IO_stdin_used+0x1ff8>
    b7be:	e8 3d 6d ff ff       	call   2500 <puts@plt>
    b7c3:	bf ff ff ff ff       	mov    edi,0xffffffff
    b7c8:	e8 53 6d ff ff       	call   2520 <exit@plt>
    b7cd:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b7d4:	00 
    b7d5:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b7dc:	00 
    b7dd:	e9 db 00 00 00       	jmp    b8bd <load_fn_mem_map+0x140>
    b7e2:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b7e6:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b7ea:	48 8d 35 6e 28 00 00 	lea    rsi,[rip+0x286e]        # e05f <_IO_stdin_used+0x205f>
    b7f1:	48 89 c7             	mov    rdi,rax
    b7f4:	e8 17 70 ff ff       	call   2810 <strcspn@plt>
    b7f9:	48 01 d8             	add    rax,rbx
    b7fc:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b7ff:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b806:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b80a:	48 8d 35 50 28 00 00 	lea    rsi,[rip+0x2850]        # e061 <_IO_stdin_used+0x2061>
    b811:	48 89 c7             	mov    rdi,rax
    b814:	e8 a7 6f ff ff       	call   27c0 <strtok@plt>
    b819:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b81d:	eb 7f                	jmp    b89e <load_fn_mem_map+0x121>
    b81f:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b823:	74 44                	je     b869 <load_fn_mem_map+0xec>
    b825:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b829:	7f 59                	jg     b884 <load_fn_mem_map+0x107>
    b82b:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b82f:	74 08                	je     b839 <load_fn_mem_map+0xbc>
    b831:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b835:	74 17                	je     b84e <load_fn_mem_map+0xd1>
    b837:	eb 4b                	jmp    b884 <load_fn_mem_map+0x107>
    b839:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b83d:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b841:	48 89 d6             	mov    rsi,rdx
    b844:	48 89 c7             	mov    rdi,rax
    b847:	e8 64 6f ff ff       	call   27b0 <strcpy@plt>
    b84c:	eb 37                	jmp    b885 <load_fn_mem_map+0x108>
    b84e:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b852:	ba 10 00 00 00       	mov    edx,0x10
    b857:	be 00 00 00 00       	mov    esi,0x0
    b85c:	48 89 c7             	mov    rdi,rax
    b85f:	e8 6c 6e ff ff       	call   26d0 <strtol@plt>
    b864:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b867:	eb 1c                	jmp    b885 <load_fn_mem_map+0x108>
    b869:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b86d:	ba 10 00 00 00       	mov    edx,0x10
    b872:	be 00 00 00 00       	mov    esi,0x0
    b877:	48 89 c7             	mov    rdi,rax
    b87a:	e8 51 6e ff ff       	call   26d0 <strtol@plt>
    b87f:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b882:	eb 01                	jmp    b885 <load_fn_mem_map+0x108>
    b884:	90                   	nop
    b885:	48 8d 35 d5 27 00 00 	lea    rsi,[rip+0x27d5]        # e061 <_IO_stdin_used+0x2061>
    b88c:	bf 00 00 00 00       	mov    edi,0x0
    b891:	e8 2a 6f ff ff       	call   27c0 <strtok@plt>
    b896:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b89a:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b89e:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b8a3:	0f 85 76 ff ff ff    	jne    b81f <load_fn_mem_map+0xa2>
    b8a9:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b8ac:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b8af:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b8b3:	89 ce                	mov    esi,ecx
    b8b5:	48 89 c7             	mov    rdi,rax
    b8b8:	e8 52 fe ff ff       	call   b70f <add_fn>
    b8bd:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b8c1:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b8c5:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b8c9:	48 89 ce             	mov    rsi,rcx
    b8cc:	48 89 c7             	mov    rdi,rax
    b8cf:	e8 cc 6e ff ff       	call   27a0 <getline@plt>
    b8d4:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b8d8:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b8dd:	0f 85 ff fe ff ff    	jne    b7e2 <load_fn_mem_map+0x65>
    b8e3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b8e7:	48 89 c7             	mov    rdi,rax
    b8ea:	e8 01 6f ff ff       	call   27f0 <fclose@plt>
    b8ef:	90                   	nop
    b8f0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b8f4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b8fb:	00 00 
    b8fd:	74 05                	je     b904 <load_fn_mem_map+0x187>
    b8ff:	e8 6c 6e ff ff       	call   2770 <__stack_chk_fail@plt>
    b904:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    b908:	c9                   	leave  
    b909:	c3                   	ret    

000000000000b90a <pps_monitor>:
    b90a:	f3 0f 1e fa          	endbr64 
    b90e:	55                   	push   rbp
    b90f:	48 89 e5             	mov    rbp,rsp
    b912:	48 81 ec c0 03 00 00 	sub    rsp,0x3c0
    b919:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b920:	00 00 
    b922:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b926:	31 c0                	xor    eax,eax
    b928:	bf 00 00 00 00       	mov    edi,0x0
    b92d:	e8 7e 6f ff ff       	call   28b0 <time@plt>
    b932:	48 89 c2             	mov    rdx,rax
    b935:	8b 05 e5 f6 12 00    	mov    eax,DWORD PTR [rip+0x12f6e5]        # 13b020 <arr_num.2>
    b93b:	8d 48 01             	lea    ecx,[rax+0x1]
    b93e:	89 0d dc f6 12 00    	mov    DWORD PTR [rip+0x12f6dc],ecx        # 13b020 <arr_num.2>
    b944:	48 89 d1             	mov    rcx,rdx
    b947:	89 c0                	mov    eax,eax
    b949:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b950:	00 
    b951:	48 8d 05 e8 f6 12 00 	lea    rax,[rip+0x12f6e8]        # 13b040 <pkt_times.1>
    b958:	48 89 0c 02          	mov    QWORD PTR [rdx+rax*1],rcx
    b95c:	8b 05 be f6 12 00    	mov    eax,DWORD PTR [rip+0x12f6be]        # 13b020 <arr_num.2>
    b962:	3d 00 08 00 00       	cmp    eax,0x800
    b967:	0f 85 cc 02 00 00    	jne    bc39 <pps_monitor+0x32f>
    b96d:	8b 15 cd 36 13 00    	mov    edx,DWORD PTR [rip+0x1336cd]        # 13f040 <current_log_num.0>
    b973:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    b97a:	48 8d 35 e7 26 00 00 	lea    rsi,[rip+0x26e7]        # e068 <_IO_stdin_used+0x2068>
    b981:	48 89 c7             	mov    rdi,rax
    b984:	b8 00 00 00 00       	mov    eax,0x0
    b989:	e8 b2 6c ff ff       	call   2640 <sprintf@plt>
    b98e:	c7 85 48 fc ff ff 00 	mov    DWORD PTR [rbp-0x3b8],0x0
    b995:	00 00 00 
    b998:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    b99f:	48 8d 35 ec 26 00 00 	lea    rsi,[rip+0x26ec]        # e092 <_IO_stdin_used+0x2092>
    b9a6:	48 89 c7             	mov    rdi,rax
    b9a9:	e8 e2 6b ff ff       	call   2590 <fopen@plt>
    b9ae:	48 89 85 68 fc ff ff 	mov    QWORD PTR [rbp-0x398],rax
    b9b5:	48 83 bd 68 fc ff ff 	cmp    QWORD PTR [rbp-0x398],0x0
    b9bc:	00 
    b9bd:	75 1c                	jne    b9db <pps_monitor+0xd1>
    b9bf:	c7 85 48 fc ff ff 00 	mov    DWORD PTR [rbp-0x3b8],0x800
    b9c6:	08 00 00 
    b9c9:	eb 3d                	jmp    ba08 <pps_monitor+0xfe>
    b9cb:	80 bd 47 fc ff ff 0a 	cmp    BYTE PTR [rbp-0x3b9],0xa
    b9d2:	75 07                	jne    b9db <pps_monitor+0xd1>
    b9d4:	83 85 48 fc ff ff 01 	add    DWORD PTR [rbp-0x3b8],0x1
    b9db:	48 8b 85 68 fc ff ff 	mov    rax,QWORD PTR [rbp-0x398]
    b9e2:	48 89 c7             	mov    rdi,rax
    b9e5:	e8 76 6c ff ff       	call   2660 <fgetc@plt>
    b9ea:	88 85 47 fc ff ff    	mov    BYTE PTR [rbp-0x3b9],al
    b9f0:	80 bd 47 fc ff ff ff 	cmp    BYTE PTR [rbp-0x3b9],0xff
    b9f7:	75 d2                	jne    b9cb <pps_monitor+0xc1>
    b9f9:	48 8b 85 68 fc ff ff 	mov    rax,QWORD PTR [rbp-0x398]
    ba00:	48 89 c7             	mov    rdi,rax
    ba03:	e8 e8 6d ff ff       	call   27f0 <fclose@plt>
    ba08:	48 8d 3d 85 26 00 00 	lea    rdi,[rip+0x2685]        # e094 <_IO_stdin_used+0x2094>
    ba0f:	e8 ec 6a ff ff       	call   2500 <puts@plt>
    ba14:	81 bd 48 fc ff ff ff 	cmp    DWORD PTR [rbp-0x3b8],0x7ff
    ba1b:	07 00 00 
    ba1e:	7e 49                	jle    ba69 <pps_monitor+0x15f>
    ba20:	8b 05 1a 36 13 00    	mov    eax,DWORD PTR [rip+0x13361a]        # 13f040 <current_log_num.0>
    ba26:	83 c0 01             	add    eax,0x1
    ba29:	89 05 11 36 13 00    	mov    DWORD PTR [rip+0x133611],eax        # 13f040 <current_log_num.0>
    ba2f:	8b 15 0b 36 13 00    	mov    edx,DWORD PTR [rip+0x13360b]        # 13f040 <current_log_num.0>
    ba35:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    ba39:	48 8d 35 28 26 00 00 	lea    rsi,[rip+0x2628]        # e068 <_IO_stdin_used+0x2068>
    ba40:	48 89 c7             	mov    rdi,rax
    ba43:	b8 00 00 00 00       	mov    eax,0x0
    ba48:	e8 f3 6b ff ff       	call   2640 <sprintf@plt>
    ba4d:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    ba51:	48 8d 35 41 26 00 00 	lea    rsi,[rip+0x2641]        # e099 <_IO_stdin_used+0x2099>
    ba58:	48 89 c7             	mov    rdi,rax
    ba5b:	e8 30 6b ff ff       	call   2590 <fopen@plt>
    ba60:	48 89 85 58 fc ff ff 	mov    QWORD PTR [rbp-0x3a8],rax
    ba67:	eb 38                	jmp    baa1 <pps_monitor+0x197>
    ba69:	8b 15 d1 35 13 00    	mov    edx,DWORD PTR [rip+0x1335d1]        # 13f040 <current_log_num.0>
    ba6f:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    ba73:	48 8d 35 ee 25 00 00 	lea    rsi,[rip+0x25ee]        # e068 <_IO_stdin_used+0x2068>
    ba7a:	48 89 c7             	mov    rdi,rax
    ba7d:	b8 00 00 00 00       	mov    eax,0x0
    ba82:	e8 b9 6b ff ff       	call   2640 <sprintf@plt>
    ba87:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    ba8b:	48 8d 35 09 26 00 00 	lea    rsi,[rip+0x2609]        # e09b <_IO_stdin_used+0x209b>
    ba92:	48 89 c7             	mov    rdi,rax
    ba95:	e8 f6 6a ff ff       	call   2590 <fopen@plt>
    ba9a:	48 89 85 58 fc ff ff 	mov    QWORD PTR [rbp-0x3a8],rax
    baa1:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    baa5:	48 89 c6             	mov    rsi,rax
    baa8:	48 8d 3d ee 25 00 00 	lea    rdi,[rip+0x25ee]        # e09d <_IO_stdin_used+0x209d>
    baaf:	b8 00 00 00 00       	mov    eax,0x0
    bab4:	e8 e7 69 ff ff       	call   24a0 <printf@plt>
    bab9:	c7 85 4c fc ff ff ff 	mov    DWORD PTR [rbp-0x3b4],0xffffffff
    bac0:	ff ff ff 
    bac3:	48 c7 85 60 fc ff ff 	mov    QWORD PTR [rbp-0x3a0],0x0
    baca:	00 00 00 00 
    bace:	c7 85 50 fc ff ff 00 	mov    DWORD PTR [rbp-0x3b0],0x0
    bad5:	00 00 00 
    bad8:	e9 c2 00 00 00       	jmp    bb9f <pps_monitor+0x295>
    badd:	8b 85 50 fc ff ff    	mov    eax,DWORD PTR [rbp-0x3b0]
    bae3:	48 98                	cdqe   
    bae5:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    baec:	00 
    baed:	48 8d 05 4c f5 12 00 	lea    rax,[rip+0x12f54c]        # 13b040 <pkt_times.1>
    baf4:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    baf8:	48 39 85 60 fc ff ff 	cmp    QWORD PTR [rbp-0x3a0],rax
    baff:	75 23                	jne    bb24 <pps_monitor+0x21a>
    bb01:	8b 85 4c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3b4]
    bb07:	48 98                	cdqe   
    bb09:	8b 84 85 70 fc ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x390]
    bb10:	8d 50 01             	lea    edx,[rax+0x1]
    bb13:	8b 85 4c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3b4]
    bb19:	48 98                	cdqe   
    bb1b:	89 94 85 70 fc ff ff 	mov    DWORD PTR [rbp+rax*4-0x390],edx
    bb22:	eb 74                	jmp    bb98 <pps_monitor+0x28e>
    bb24:	8b 85 50 fc ff ff    	mov    eax,DWORD PTR [rbp-0x3b0]
    bb2a:	48 98                	cdqe   
    bb2c:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bb33:	00 
    bb34:	48 8d 05 05 f5 12 00 	lea    rax,[rip+0x12f505]        # 13b040 <pkt_times.1>
    bb3b:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    bb3f:	48 89 85 60 fc ff ff 	mov    QWORD PTR [rbp-0x3a0],rax
    bb46:	83 85 4c fc ff ff 01 	add    DWORD PTR [rbp-0x3b4],0x1
    bb4d:	8b 85 4c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3b4]
    bb53:	48 98                	cdqe   
    bb55:	48 8b 95 60 fc ff ff 	mov    rdx,QWORD PTR [rbp-0x3a0]
    bb5c:	48 89 94 c5 70 fd ff 	mov    QWORD PTR [rbp+rax*8-0x290],rdx
    bb63:	ff 
    bb64:	8b 85 4c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3b4]
    bb6a:	48 98                	cdqe   
    bb6c:	c7 84 85 70 fc ff ff 	mov    DWORD PTR [rbp+rax*4-0x390],0x1
    bb73:	01 00 00 00 
    bb77:	8b 85 4c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3b4]
    bb7d:	48 98                	cdqe   
    bb7f:	8b 84 85 70 fc ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x390]
    bb86:	8d 50 01             	lea    edx,[rax+0x1]
    bb89:	8b 85 4c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3b4]
    bb8f:	48 98                	cdqe   
    bb91:	89 94 85 70 fc ff ff 	mov    DWORD PTR [rbp+rax*4-0x390],edx
    bb98:	83 85 50 fc ff ff 01 	add    DWORD PTR [rbp-0x3b0],0x1
    bb9f:	81 bd 50 fc ff ff ff 	cmp    DWORD PTR [rbp-0x3b0],0x7ff
    bba6:	07 00 00 
    bba9:	0f 8e 2e ff ff ff    	jle    badd <pps_monitor+0x1d3>
    bbaf:	c7 85 54 fc ff ff 00 	mov    DWORD PTR [rbp-0x3ac],0x0
    bbb6:	00 00 00 
    bbb9:	eb 41                	jmp    bbfc <pps_monitor+0x2f2>
    bbbb:	8b 85 54 fc ff ff    	mov    eax,DWORD PTR [rbp-0x3ac]
    bbc1:	48 98                	cdqe   
    bbc3:	8b 8c 85 70 fc ff ff 	mov    ecx,DWORD PTR [rbp+rax*4-0x390]
    bbca:	8b 85 54 fc ff ff    	mov    eax,DWORD PTR [rbp-0x3ac]
    bbd0:	48 98                	cdqe   
    bbd2:	48 8b 94 c5 70 fd ff 	mov    rdx,QWORD PTR [rbp+rax*8-0x290]
    bbd9:	ff 
    bbda:	48 8b 85 58 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3a8]
    bbe1:	48 8d 35 c4 24 00 00 	lea    rsi,[rip+0x24c4]        # e0ac <_IO_stdin_used+0x20ac>
    bbe8:	48 89 c7             	mov    rdi,rax
    bbeb:	b8 00 00 00 00       	mov    eax,0x0
    bbf0:	e8 6b 6c ff ff       	call   2860 <fprintf@plt>
    bbf5:	83 85 54 fc ff ff 01 	add    DWORD PTR [rbp-0x3ac],0x1
    bbfc:	8b 85 54 fc ff ff    	mov    eax,DWORD PTR [rbp-0x3ac]
    bc02:	3b 85 4c fc ff ff    	cmp    eax,DWORD PTR [rbp-0x3b4]
    bc08:	7c b1                	jl     bbbb <pps_monitor+0x2b1>
    bc0a:	ba 00 40 00 00       	mov    edx,0x4000
    bc0f:	be 00 00 00 00       	mov    esi,0x0
    bc14:	48 8d 3d 25 f4 12 00 	lea    rdi,[rip+0x12f425]        # 13b040 <pkt_times.1>
    bc1b:	e8 90 68 ff ff       	call   24b0 <memset@plt>
    bc20:	c7 05 f6 f3 12 00 00 	mov    DWORD PTR [rip+0x12f3f6],0x0        # 13b020 <arr_num.2>
    bc27:	00 00 00 
    bc2a:	48 8b 85 58 fc ff ff 	mov    rax,QWORD PTR [rbp-0x3a8]
    bc31:	48 89 c7             	mov    rdi,rax
    bc34:	e8 b7 6b ff ff       	call   27f0 <fclose@plt>
    bc39:	90                   	nop
    bc3a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    bc3e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    bc45:	00 00 
    bc47:	74 05                	je     bc4e <pps_monitor+0x344>
    bc49:	e8 22 6b ff ff       	call   2770 <__stack_chk_fail@plt>
    bc4e:	c9                   	leave  
    bc4f:	c3                   	ret    

Disassembly of section .fini:

000000000000bc50 <_fini>:
    bc50:	f3 0f 1e fa          	endbr64 
    bc54:	48 83 ec 08          	sub    rsp,0x8
    bc58:	48 83 c4 08          	add    rsp,0x8
    bc5c:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1cd120>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d1065>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ecdb93>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e19f1b9>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520cd1bf>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9cf3a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x256503d5>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a51042a>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f32f288>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f18e5>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250cd2f8>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e19f30d>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723cf313>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x7311d32d>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e19f33e>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ecdd44>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f4ffbea>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d0f3d>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744df4ad>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d0fb3>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e19f4fd>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ecdf03>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c8e1:	77 ff                	ja     c8e2 <_IO_stdin_used+0x8e2>
    c8e3:	ff c9                	dec    ecx
    c8e5:	7a ff                	jp     c8e6 <_IO_stdin_used+0x8e6>
    c8e7:	ff c9                	dec    ecx
    c8e9:	7a ff                	jp     c8ea <_IO_stdin_used+0x8ea>
    c8eb:	ff b7 77 ff ff 24    	push   QWORD PTR [rdi+0x24ffff77]
    c8f1:	79 ff                	jns    c8f2 <_IO_stdin_used+0x8f2>
    c8f3:	ff 35 79 ff ff c9    	push   QWORD PTR [rip+0xffffffffc9ffff79]        # ffffffffca00c872 <_end+0xffffffffc9ecd82a>
    c8f9:	7a ff                	jp     c8fa <_IO_stdin_used+0x8fa>
    c8fb:	ff c9                	dec    ecx
    c8fd:	7a ff                	jp     c8fe <_IO_stdin_used+0x8fe>
    c8ff:	ff d2                	call   rdx
    c901:	79 ff                	jns    c902 <_IO_stdin_used+0x902>
    c903:	ff e3                	jmp    rbx
    c905:	79 ff                	jns    c906 <_IO_stdin_used+0x906>
    c907:	ff 2e                	jmp    FWORD PTR [rsi]
    c909:	7a ff                	jp     c90a <_IO_stdin_used+0x90a>
    c90b:	ff                   	(bad)  
    c90c:	3f                   	(bad)  
    c90d:	7a ff                	jp     c90e <_IO_stdin_used+0x90e>
    c90f:	ff c9                	dec    ecx
    c911:	7a ff                	jp     c912 <_IO_stdin_used+0x912>
    c913:	ff ad 7a ff ff bb    	jmp    FWORD PTR [rbp-0x44000086]
    c919:	7a ff                	jp     c91a <_IO_stdin_used+0x91a>
    c91b:	ff c6                	inc    esi
    c91d:	77 ff                	ja     c91e <_IO_stdin_used+0x91e>
    c91f:	ff d7                	call   rdi
    c921:	77 ff                	ja     c922 <_IO_stdin_used+0x922>
    c923:	ff                   	(bad)  
    c924:	e8 77 ff ff f9       	call   fffffffffa00c8a0 <_end+0xfffffffff9ecd858>
    c929:	77 ff                	ja     c92a <_IO_stdin_used+0x92a>
    c92b:	ff 0a                	dec    DWORD PTR [rdx]
    c92d:	78 ff                	js     c92e <_IO_stdin_used+0x92e>
    c92f:	ff 1b                	call   FWORD PTR [rbx]
    c931:	78 ff                	js     c932 <_IO_stdin_used+0x932>
    c933:	ff 2c 78             	jmp    FWORD PTR [rax+rdi*2]
    c936:	ff                   	(bad)  
    c937:	ff                   	(bad)  
    c938:	3d 78 ff ff 4e       	cmp    eax,0x4effff78
    c93d:	78 ff                	js     c93e <_IO_stdin_used+0x93e>
    c93f:	ff 5f 78             	call   FWORD PTR [rdi+0x78]
    c942:	ff                   	(bad)  
    c943:	ff 6d 78             	jmp    FWORD PTR [rbp+0x78]
    c946:	ff                   	(bad)  
    c947:	ff                   	(bad)  
    c948:	7b 78                	jnp    c9c2 <_IO_stdin_used+0x9c2>
    c94a:	ff                   	(bad)  
    c94b:	ff 89 78 ff ff 97    	dec    DWORD PTR [rcx-0x68000088]
    c951:	78 ff                	js     c952 <_IO_stdin_used+0x952>
    c953:	ff a5 78 ff ff b3    	jmp    QWORD PTR [rbp-0x4c000088]
    c959:	78 ff                	js     c95a <_IO_stdin_used+0x95a>
    c95b:	ff 00                	inc    DWORD PTR [rax]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x5035d996>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x6412139e>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x7311f96f>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ece39b>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x4932f9c9>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533cf9d7>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x5241fa01>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x7311fa05>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d0631>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x5035da56>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x6412145e>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x7311fa2f>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x4441fa5b>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e19fa82>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x47fa88>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a510cc0>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e19fb18>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ece51e>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e19fb1c>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64121531>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755bdc78>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f59dcb9>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x473632ca>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ece7e0>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	55                   	push   rbp
    ce22:	4e                   	rex.WRX
    ce23:	4e                   	rex.WRX
    ce24:	49                   	rex.WB
    ce25:	4e                   	rex.WRX
    ce26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce2e:	4f                   	rex.WRXB
    ce2f:	4e 53                	rex.WRX push rbx
    ce31:	54                   	push   rsp
    ce32:	52                   	push   rdx
    ce33:	41 54                	push   r12
    ce35:	49                   	rex.WB
    ce36:	4f                   	rex.WRXB
    ce37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce3b:	44                   	rex.R
    ce3c:	45                   	rex.RB
    ce3d:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce41:	55                   	push   rbp
    ce42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce45:	56                   	push   rsi
    ce46:	45 20 31             	and    BYTE PTR [r9],r14b
    ce49:	30 20                	xor    BYTE PTR [rax],ah
    ce4b:	53                   	push   rbx
    ce4c:	45                   	rex.RB
    ce4d:	43                   	rex.XB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e                   	rex.WRX
    ce50:	44 53                	rex.R push rbx
    ce52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce56:	41                   	rex.B
    ce57:	42                   	rex.X
    ce58:	4f 52                	rex.WRXB push r10
    ce5a:	54                   	push   rsp
    ce5b:	2e 00 00             	cs add BYTE PTR [rax],al
    ce5e:	00 00                	add    BYTE PTR [rax],al
    ce60:	52                   	push   rdx
    ce61:	55                   	push   rbp
    ce62:	4e                   	rex.WRX
    ce63:	4e                   	rex.WRX
    ce64:	49                   	rex.WB
    ce65:	4e                   	rex.WRX
    ce66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce6e:	54                   	push   rsp
    ce6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce72:	44                   	rex.R
    ce73:	45                   	rex.RB
    ce74:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce78:	55                   	push   rbp
    ce79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce7c:	56                   	push   rsi
    ce7d:	45 20 31             	and    BYTE PTR [r9],r14b
    ce80:	30 20                	xor    BYTE PTR [rax],ah
    ce82:	53                   	push   rbx
    ce83:	45                   	rex.RB
    ce84:	43                   	rex.XB
    ce85:	4f                   	rex.WRXB
    ce86:	4e                   	rex.WRX
    ce87:	44 53                	rex.R push rbx
    ce89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce8d:	41                   	rex.B
    ce8e:	42                   	rex.X
    ce8f:	4f 52                	rex.WRXB push r10
    ce91:	54                   	push   rsp
    ce92:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    ce96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ce9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ce9e:	67 75 6d             	addr32 jne cf0e <_IO_stdin_used+0xf0e>
    cea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cea3:	74 20                	je     cec5 <_IO_stdin_used+0xec5>
    cea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    ceaa:	70 64                	jo     cf10 <_IO_stdin_used+0xf10>
    ceac:	71 68                	jno    cf16 <_IO_stdin_used+0xf16>
    ceae:	74 65                	je     cf15 <_IO_stdin_used+0xf15>
    ceb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    ceb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ceb8:	76 69                	jbe    cf23 <_IO_stdin_used+0xf23>
    ceba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cec1:	79 2e 
    cec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ceca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cecb:	73 69                	jae    cf36 <_IO_stdin_used+0xf36>
    cecd:	73 68                	jae    cf37 <_IO_stdin_used+0xf37>
    cecf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ced5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cedc:	70 
    cedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    cede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee6:	79 20                	jns    cf08 <_IO_stdin_used+0xf08>
    cee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    ceef:	74 63                	je     cf54 <_IO_stdin_used+0xf54>
    cef1:	2f                   	(bad)  
    cef2:	76 69                	jbe    cf5d <_IO_stdin_used+0xf5d>
    cef4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cefb:	79 2e 
    cefd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf00:	66 29 00             	sub    WORD PTR [rax],ax
    cf03:	2f                   	(bad)  
    cf04:	65 74 63             	gs je  cf6a <_IO_stdin_used+0xf6a>
    cf07:	2f                   	(bad)  
    cf08:	76 69                	jbe    cf73 <_IO_stdin_used+0xf73>
    cf0a:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf11:	69 6c 
    cf13:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    cf17:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf1b:	72 73                	jb     cf90 <_IO_stdin_used+0xf90>
    cf1d:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf22:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf23:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf27:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf28:	65 73 00             	gs jae cf2b <_IO_stdin_used+0xf2b>
    cf2b:	00 00                	add    BYTE PTR [rax],al
    cf2d:	00 00                	add    BYTE PTR [rax],al
    cf2f:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf32:	47                   	rex.RXB
    cf33:	49                   	rex.WB
    cf34:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf39:	74 65                	je     cfa0 <_IO_stdin_used+0xfa0>
    cf3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf3c:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf43:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cf4a:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cf4d:	25 73 0a 00 70       	and    eax,0x70000a73
    cf52:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cf55:	5f                   	pop    rdi
    cf56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cf57:	67 72 20             	addr32 jb cf7a <_IO_stdin_used+0xf7a>
    cf5a:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cf61:	5f                   	pop    rdi
    cf62:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf63:	70 65                	jo     cfca <_IO_stdin_used+0xfca>
    cf65:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf66:	5f                   	pop    rdi
    cf67:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf68:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cf6f:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cf72:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cf76:	70 74                	jo     cfec <_IO_stdin_used+0xfec>
    cf78:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cf7d:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cf81:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf82:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cf88:	72 76                	jb     d000 <_IO_stdin_used+0x1000>
    cf8a:	65 72 20             	gs jb  cfad <_IO_stdin_used+0xfad>
    cf8d:	73 74                	jae    d003 <_IO_stdin_used+0x1003>
    cf8f:	61                   	(bad)  
    cf90:	72 74                	jb     d006 <_IO_stdin_used+0x1006>
    cf92:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cf96:	31 32                	xor    DWORD PTR [rdx],esi
    cf98:	37                   	(bad)  
    cf99:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    cf9c:	30 2e                	xor    BYTE PTR [rsi],ch
    cf9e:	31 3a                	xor    DWORD PTR [rdx],edi
    cfa0:	36 34 31             	ss xor al,0x31
    cfa3:	00 89 9a ff ff c6    	add    BYTE PTR [rcx-0x39000066],cl
    cfa9:	9a                   	(bad)  
    cfaa:	ff                   	(bad)  
    cfab:	ff 04 9b             	inc    DWORD PTR [rbx+rbx*4]
    cfae:	ff                   	(bad)  
    cfaf:	ff 04 9b             	inc    DWORD PTR [rbx+rbx*4]
    cfb2:	ff                   	(bad)  
    cfb3:	ff 95 9a ff ff a4    	call   QWORD PTR [rbp-0x5b000066]
    cfb9:	9a                   	(bad)  
    cfba:	ff                   	(bad)  
    cfbb:	ff 04 9b             	inc    DWORD PTR [rbx+rbx*4]
    cfbe:	ff                   	(bad)  
    cfbf:	ff 04 9b             	inc    DWORD PTR [rbx+rbx*4]
    cfc2:	ff                   	(bad)  
    cfc3:	ff 04 9b             	inc    DWORD PTR [rbx+rbx*4]
    cfc6:	ff                   	(bad)  
    cfc7:	ff 04 9b             	inc    DWORD PTR [rbx+rbx*4]
    cfca:	ff                   	(bad)  
    cfcb:	ff 04 9b             	inc    DWORD PTR [rbx+rbx*4]
    cfce:	ff                   	(bad)  
    cfcf:	ff 04 9b             	inc    DWORD PTR [rbx+rbx*4]
    cfd2:	ff                   	(bad)  
    cfd3:	ff b4 9a ff ff bd 9a 	push   QWORD PTR [rdx+rbx*4-0x65420001]
    cfda:	ff                   	(bad)  
    cfdb:	ff 04 9b             	inc    DWORD PTR [rbx+rbx*4]
    cfde:	ff                   	(bad)  
    cfdf:	ff 04 9b             	inc    DWORD PTR [rbx+rbx*4]
    cfe2:	ff                   	(bad)  
    cfe3:	ff e5                	jmp    rbp
    cfe5:	9a                   	(bad)  
    cfe6:	ff                   	(bad)  
    cfe7:	ff 0a                	dec    DWORD PTR [rdx]
    cfe9:	43 61                	rex.XB (bad) 
    cfeb:	75 67                	jne    d054 <_IO_stdin_used+0x1054>
    cfed:	68 74 20 73 69       	push   0x69732074
    cff2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    cff4:	61                   	(bad)  
    cff5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cff6:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f060 <_end+0x744e0018>
    cffc:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fc75 <_end+0x650d0c2d>
    d002:	78 69                	js     d06d <_IO_stdin_used+0x106d>
    d004:	74 69                	je     d06f <_IO_stdin_used+0x106f>
    d006:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d007:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    d00d:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d011:	61                   	(bad)  
    d012:	6c                   	ins    BYTE PTR es:[rdi],dx
    d013:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d016:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d019:	74 73                	je     d08e <_IO_stdin_used+0x108e>
    d01b:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d01e:	75 67                	jne    d087 <_IO_stdin_used+0x1087>
    d020:	68 74 3a 20 25       	push   0x25203a74
    d025:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d028:	53                   	push   rbx
    d029:	74 61                	je     d08c <_IO_stdin_used+0x108c>
    d02b:	74 69                	je     d096 <_IO_stdin_used+0x1096>
    d02d:	73 74                	jae    d0a3 <_IO_stdin_used+0x10a3>
    d02f:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d036:	61                   	(bad)  
    d037:	64 64 72 65          	fs fs jb d0a0 <_IO_stdin_used+0x10a0>
    d03b:	73 73                	jae    d0b0 <_IO_stdin_used+0x10b0>
    d03d:	20 20                	and    BYTE PTR [rax],ah
    d03f:	20 20                	and    BYTE PTR [rax],ah
    d041:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d043:	75 6e                	jne    d0b3 <_IO_stdin_used+0x10b3>
    d045:	74 0a                	je     d051 <_IO_stdin_used+0x1051>
    d047:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d04c:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d051:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d056:	2d 2d 00 00 00       	sub    eax,0x2d
    d05b:	00 00                	add    BYTE PTR [rax],al
    d05d:	00 00                	add    BYTE PTR [rax],al
    d05f:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909dad8 <_end+0x8f5ea90>
    d065:	74 6f                	je     d0d6 <_IO_stdin_used+0x10d6>
    d067:	74 61                	je     d0ca <_IO_stdin_used+0x10ca>
    d069:	6c                   	ins    BYTE PTR es:[rdi],dx
    d06a:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d06d:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d070:	74 73                	je     d0e5 <_IO_stdin_used+0x10e5>
    d072:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f598 <_end+0xa510550>
    d078:	09 09                	or     DWORD PTR [rcx],ecx
    d07a:	74 6f                	je     d0eb <_IO_stdin_used+0x10eb>
    d07c:	74 61                	je     d0df <_IO_stdin_used+0x10df>
    d07e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d07f:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d082:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d083:	74 20                	je     d0a5 <_IO_stdin_used+0x10a5>
    d085:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d08a:	09 09                	or     DWORD PTR [rcx],ecx
    d08c:	74 6f                	je     d0fd <_IO_stdin_used+0x10fd>
    d08e:	74 61                	je     d0f1 <_IO_stdin_used+0x10f1>
    d090:	6c                   	ins    BYTE PTR es:[rdi],dx
    d091:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d094:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d097:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d09c:	09 09                	or     DWORD PTR [rcx],ecx
    d09e:	54                   	push   rsp
    d09f:	43 50                	rex.XB push r8
    d0a1:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0a5:	74 20                	je     d0c7 <_IO_stdin_used+0x10c7>
    d0a7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0ac:	09 09                	or     DWORD PTR [rcx],ecx
    d0ae:	54                   	push   rsp
    d0af:	43 50                	rex.XB push r8
    d0b1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0b4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0b7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0bc:	09 09                	or     DWORD PTR [rcx],ecx
    d0be:	55                   	push   rbp
    d0bf:	44 50                	rex.R push rax
    d0c1:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0c4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0c5:	74 20                	je     d0e7 <_IO_stdin_used+0x10e7>
    d0c7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0cc:	09 09                	or     DWORD PTR [rcx],ecx
    d0ce:	55                   	push   rbp
    d0cf:	44 50                	rex.R push rax
    d0d1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0d4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0d7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0dc:	09 09                	or     DWORD PTR [rcx],ecx
    d0de:	49                   	rex.WB
    d0df:	43                   	rex.XB
    d0e0:	4d 50                	rex.WRB push r8
    d0e2:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0e6:	74 20                	je     d108 <_IO_stdin_used+0x1108>
    d0e8:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0ed:	09 09                	or     DWORD PTR [rcx],ecx
    d0ef:	49                   	rex.WB
    d0f0:	43                   	rex.XB
    d0f1:	4d 50                	rex.WRB push r8
    d0f3:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0f6:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0f9:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0fe:	0a 00                	or     al,BYTE PTR [rax]
    d100:	77 00                	ja     d102 <_IO_stdin_used+0x1102>
    d102:	2f                   	(bad)  
    d103:	75 73                	jne    d178 <_IO_stdin_used+0x1178>
    d105:	72 2f                	jb     d136 <_IO_stdin_used+0x1136>
    d107:	73 68                	jae    d171 <_IO_stdin_used+0x1171>
    d109:	61                   	(bad)  
    d10a:	72 65                	jb     d171 <_IO_stdin_used+0x1171>
    d10c:	2f                   	(bad)  
    d10d:	76 69                	jbe    d178 <_IO_stdin_used+0x1178>
    d10f:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d116:	63 61 
    d118:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d11b:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d11f:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d122:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d123:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d124:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d125:	74 20                	je     d147 <_IO_stdin_used+0x1147>
    d127:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d128:	70 65                	jo     d18f <_IO_stdin_used+0x118f>
    d12a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d12b:	20 2f                	and    BYTE PTR [rdi],ch
    d12d:	75 73                	jne    d1a2 <_IO_stdin_used+0x11a2>
    d12f:	72 2f                	jb     d160 <_IO_stdin_used+0x1160>
    d131:	73 68                	jae    d19b <_IO_stdin_used+0x119b>
    d133:	61                   	(bad)  
    d134:	72 65                	jb     d19b <_IO_stdin_used+0x119b>
    d136:	2f                   	(bad)  
    d137:	76 69                	jbe    d1a2 <_IO_stdin_used+0x11a2>
    d139:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d140:	63 61 
    d142:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d145:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d149:	3a 20                	cmp    ah,BYTE PTR [rax]
    d14b:	70 72                	jo     d1bf <_IO_stdin_used+0x11bf>
    d14d:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d154:	61                   	(bad)  
    d155:	72 70                	jb     d1c7 <_IO_stdin_used+0x11c7>
    d157:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d15a:	68 65 20 74 6f       	push   0x6f742065
    d15f:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d162:	72 65                	jb     d1c9 <_IO_stdin_used+0x11c9>
    d164:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d166:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df1df <_end+0x3e1a0197>
    d16c:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dbe5 <_end+0x24eceb9d>
    d172:	73 2c                	jae    d1a0 <_IO_stdin_used+0x11a0>
    d174:	25 73 0a 00 31       	and    eax,0x31000a73
    d179:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d17c:	30 00                	xor    BYTE PTR [rax],al
    d17e:	00 00                	add    BYTE PTR [rax],al
    d180:	56                   	push   rsi
    d181:	49                   	rex.WB
    d182:	47                   	rex.RXB
    d183:	49                   	rex.WB
    d184:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d188:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc02 <_end+0x2cf5ebba>
    d18f:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d192:	64 65 62             	fs gs (bad) 
    d195:	75 67                	jne    d1fe <_IO_stdin_used+0x11fe>
    d197:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d19a:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d19e:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1a3:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d1aa:	74 68                	je     d214 <_IO_stdin_used+0x1214>
    d1ac:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d1b3:	61                   	(bad)  
    d1b4:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d1b8:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d1bd:	66 61                	data16 (bad) 
    d1bf:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d1c2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1c4:	73 65                	jae    d22b <_IO_stdin_used+0x122b>
    d1c6:	74 20                	je     d1e8 <_IO_stdin_used+0x11e8>
    d1c8:	74 68                	je     d232 <_IO_stdin_used+0x1232>
    d1ca:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d1ce:	74 65                	je     d235 <_IO_stdin_used+0x1235>
    d1d0:	72 66                	jb     d238 <_IO_stdin_used+0x1238>
    d1d2:	61                   	(bad)  
    d1d3:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d1d6:	74 6f                	je     d247 <_IO_stdin_used+0x1247>
    d1d8:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d1dc:	74 65                	je     d243 <_IO_stdin_used+0x1243>
    d1de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d1df:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d1e2:	0a 09                	or     cl,BYTE PTR [rcx]
    d1e4:	2d 70 20 70 72       	sub    eax,0x72702070
    d1e9:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d1f0:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d1f4:	0a 09                	or     cl,BYTE PTR [rcx]
    d1f6:	2d 71 20 65 78       	sub    eax,0x78652071
    d1fb:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d202:	74 
    d203:	6c                   	ins    BYTE PTR es:[rdi],dx
    d204:	79 0a                	jns    d210 <_IO_stdin_used+0x1210>
    d206:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d209:	00 2f                	add    BYTE PTR [rdi],ch
    d20b:	70 72                	jo     d27f <_IO_stdin_used+0x127f>
    d20d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d20e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d210:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d213:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d21a:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d21d:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d220:	6d                   	ins    DWORD PTR es:[rdi],dx
    d221:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d225:	75 6e                	jne    d295 <_IO_stdin_used+0x1295>
    d227:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f292 <_end+0x7050024a>
    d22e:	75 73                	jne    d2a3 <_IO_stdin_used+0x12a3>
    d230:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d232:	25 73 00 00 00       	and    eax,0x73
    d237:	00 e2                	add    dl,ah
    d239:	96                   	xchg   esi,eax
    d23a:	88 e2                	mov    dl,ah
    d23c:	96                   	xchg   esi,eax
    d23d:	88 e2                	mov    dl,ah
    d23f:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d246:	88 e2                	mov    dl,ah
    d248:	96                   	xchg   esi,eax
    d249:	88 e2                	mov    dl,ah
    d24b:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d252:	88 e2                	mov    dl,ah
    d254:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d25b:	96                   	xchg   esi,eax
    d25c:	88 e2                	mov    dl,ah
    d25e:	96                   	xchg   esi,eax
    d25f:	88 e2                	mov    dl,ah
    d261:	96                   	xchg   esi,eax
    d262:	88 e2                	mov    dl,ah
    d264:	96                   	xchg   esi,eax
    d265:	88 e2                	mov    dl,ah
    d267:	96                   	xchg   esi,eax
    d268:	88 e2                	mov    dl,ah
    d26a:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d271:	96                   	xchg   esi,eax
    d272:	88 e2                	mov    dl,ah
    d274:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d27b:	88 0a                	mov    BYTE PTR [rdx],cl
    d27d:	e2 96                	loop   d215 <_IO_stdin_used+0x1215>
    d27f:	88 e2                	mov    dl,ah
    d281:	96                   	xchg   esi,eax
    d282:	88 e2                	mov    dl,ah
    d284:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d28b:	88 e2                	mov    dl,ah
    d28d:	96                   	xchg   esi,eax
    d28e:	88 e2                	mov    dl,ah
    d290:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d297:	88 e2                	mov    dl,ah
    d299:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2a0:	88 e2                	mov    dl,ah
    d2a2:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d2a9:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d2af:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d2b5:	96                   	xchg   esi,eax
    d2b6:	88 e2                	mov    dl,ah
    d2b8:	96                   	xchg   esi,eax
    d2b9:	88 e2                	mov    dl,ah
    d2bb:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2c2:	88 0a                	mov    BYTE PTR [rdx],cl
    d2c4:	e2 96                	loop   d25c <_IO_stdin_used+0x125c>
    d2c6:	88 e2                	mov    dl,ah
    d2c8:	96                   	xchg   esi,eax
    d2c9:	88 e2                	mov    dl,ah
    d2cb:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2d2:	88 e2                	mov    dl,ah
    d2d4:	96                   	xchg   esi,eax
    d2d5:	88 e2                	mov    dl,ah
    d2d7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2de:	88 e2                	mov    dl,ah
    d2e0:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2e7:	88 e2                	mov    dl,ah
    d2e9:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d2f0:	e2 96                	loop   d288 <_IO_stdin_used+0x1288>
    d2f2:	88 e2                	mov    dl,ah
    d2f4:	96                   	xchg   esi,eax
    d2f5:	88 e2                	mov    dl,ah
    d2f7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2fe:	88 e2                	mov    dl,ah
    d300:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d307:	88 0a                	mov    BYTE PTR [rdx],cl
    d309:	e2 80                	loop   d28b <_IO_stdin_used+0x128b>
    d30b:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d311:	88 e2                	mov    dl,ah
    d313:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d31a:	96                   	xchg   esi,eax
    d31b:	88 e2                	mov    dl,ah
    d31d:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d324:	88 e2                	mov    dl,ah
    d326:	96                   	xchg   esi,eax
    d327:	88 e2                	mov    dl,ah
    d329:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d330:	88 e2                	mov    dl,ah
    d332:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d339:	88 e2                	mov    dl,ah
    d33b:	96                   	xchg   esi,eax
    d33c:	88 e2                	mov    dl,ah
    d33e:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d345:	88 e2                	mov    dl,ah
    d347:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d34e:	88 0a                	mov    BYTE PTR [rdx],cl
    d350:	20 e2                	and    dl,ah
    d352:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d359:	88 e2                	mov    dl,ah
    d35b:	96                   	xchg   esi,eax
    d35c:	88 e2                	mov    dl,ah
    d35e:	96                   	xchg   esi,eax
    d35f:	88 e2                	mov    dl,ah
    d361:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d368:	96                   	xchg   esi,eax
    d369:	88 e2                	mov    dl,ah
    d36b:	96                   	xchg   esi,eax
    d36c:	88 e2                	mov    dl,ah
    d36e:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d375:	88 e2                	mov    dl,ah
    d377:	96                   	xchg   esi,eax
    d378:	88 e2                	mov    dl,ah
    d37a:	96                   	xchg   esi,eax
    d37b:	88 e2                	mov    dl,ah
    d37d:	96                   	xchg   esi,eax
    d37e:	88 e2                	mov    dl,ah
    d380:	96                   	xchg   esi,eax
    d381:	88 e2                	mov    dl,ah
    d383:	96                   	xchg   esi,eax
    d384:	88 e2                	mov    dl,ah
    d386:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d38d:	88 e2                	mov    dl,ah
    d38f:	96                   	xchg   esi,eax
    d390:	88 e2                	mov    dl,ah
    d392:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d399:	88 e2                	mov    dl,ah
    d39b:	96                   	xchg   esi,eax
    d39c:	88 e2                	mov    dl,ah
    d39e:	96                   	xchg   esi,eax
    d39f:	88 e2                	mov    dl,ah
    d3a1:	96                   	xchg   esi,eax
    d3a2:	88 e2                	mov    dl,ah
    d3a4:	96                   	xchg   esi,eax
    d3a5:	88 e2                	mov    dl,ah
    d3a7:	96                   	xchg   esi,eax
    d3a8:	88 00                	mov    BYTE PTR [rax],al
    d3aa:	00 00                	add    BYTE PTR [rax],al
    d3ac:	00 00                	add    BYTE PTR [rax],al
    d3ae:	00 00                	add    BYTE PTR [rax],al
    d3b0:	0a 00                	or     al,BYTE PTR [rax]
    d3b2:	0d 00 00 00 00       	or     eax,0x0
    d3b7:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d3ba:	68 5f 73 65 72       	push   0x7265735f
    d3bf:	76 65                	jbe    d426 <_IO_stdin_used+0x1426>
    d3c1:	72 2e                	jb     d3f1 <_IO_stdin_used+0x13f1>
    d3c3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3c5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3c8:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d3cf:	20 
    d3d0:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d3d3:	61                   	(bad)  
    d3d4:	74 65                	je     d43b <_IO_stdin_used+0x143b>
    d3d6:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d3d9:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d3dc:	74 00                	je     d3de <_IO_stdin_used+0x13de>
    d3de:	00 00                	add    BYTE PTR [rax],al
    d3e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d3e1:	73 68                	jae    d44b <_IO_stdin_used+0x144b>
    d3e3:	5f                   	pop    rdi
    d3e4:	73 65                	jae    d44b <_IO_stdin_used+0x144b>
    d3e6:	72 76                	jb     d45e <_IO_stdin_used+0x145e>
    d3e8:	65 72 2e             	gs jb  d419 <_IO_stdin_used+0x1419>
    d3eb:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3ed:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3f0:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d3f7:	6e 
    d3f8:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d3fb:	74 73                	je     d470 <_IO_stdin_used+0x1470>
    d3fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d3fe:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d401:	70 74                	jo     d477 <_IO_stdin_used+0x1477>
    d403:	00 00                	add    BYTE PTR [rax],al
    d405:	00 00                	add    BYTE PTR [rax],al
    d407:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d40a:	68 5f 73 65 72       	push   0x7265735f
    d40f:	76 65                	jbe    d476 <_IO_stdin_used+0x1476>
    d411:	72 2e                	jb     d441 <_IO_stdin_used+0x1441>
    d413:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d415:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d418:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d419:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d420:	20 
    d421:	73 6f                	jae    d492 <_IO_stdin_used+0x1492>
    d423:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d426:	74 20                	je     d448 <_IO_stdin_used+0x1448>
    d428:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d42a:	72 20                	jb     d44c <_IO_stdin_used+0x144c>
    d42c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d42d:	73 68                	jae    d497 <_IO_stdin_used+0x1497>
    d42f:	5f                   	pop    rdi
    d430:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d435:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d43c:	00 
    d43d:	00 00                	add    BYTE PTR [rax],al
    d43f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d442:	68 5f 73 65 72       	push   0x7265735f
    d447:	76 65                	jbe    d4ae <_IO_stdin_used+0x14ae>
    d449:	72 2e                	jb     d479 <_IO_stdin_used+0x1479>
    d44b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d44d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d450:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d457:	6e 
    d458:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d45c:	74 65                	je     d4c3 <_IO_stdin_used+0x14c3>
    d45e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d45f:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d466:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d469:	68 5f 66 64 00       	push   0x64665f
    d46e:	00 00                	add    BYTE PTR [rax],al
    d470:	46 61                	rex.RX (bad) 
    d472:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d479:	6f 
    d47a:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d47d:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d480:	74 20                	je     d4a2 <_IO_stdin_used+0x14a2>
    d482:	61                   	(bad)  
    d483:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d486:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d48d:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df06 <_end+0x2feceebe>
    d493:	78 25                	js     d4ba <_IO_stdin_used+0x14ba>
    d495:	30 32                	xor    BYTE PTR [rdx],dh
    d497:	78 0a                	js     d4a3 <_IO_stdin_used+0x14a3>
    d499:	00 00                	add    BYTE PTR [rax],al
    d49b:	00 00                	add    BYTE PTR [rax],al
    d49d:	00 00                	add    BYTE PTR [rax],al
    d49f:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4a2:	00 00                	add    BYTE PTR [rax],al
    d4a4:	00 00                	add    BYTE PTR [rax],al
    d4a6:	00 00                	add    BYTE PTR [rax],al
    d4a8:	42 61                	rex.X (bad) 
    d4aa:	73 69                	jae    d515 <_IO_stdin_used+0x1515>
    d4ac:	63 20                	movsxd esp,DWORD PTR [rax]
    d4ae:	70 6f                	jo     d51f <_IO_stdin_used+0x151f>
    d4b0:	72 74                	jb     d526 <_IO_stdin_used+0x1526>
    d4b2:	73 63                	jae    d517 <_IO_stdin_used+0x1517>
    d4b4:	61                   	(bad)  
    d4b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4b6:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4ba:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4bf:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4c3:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4c4:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d4c7:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d4ca:	64 72 65             	fs jb  d532 <_IO_stdin_used+0x1532>
    d4cd:	73 73                	jae    d542 <_IO_stdin_used+0x1542>
    d4cf:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df48 <_IO_stdin_used+0x1f48>
    d4d5:	00 00                	add    BYTE PTR [rax],al
    d4d7:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d4da:	72 74                	jb     d550 <_IO_stdin_used+0x1550>
    d4dc:	73 63                	jae    d541 <_IO_stdin_used+0x1541>
    d4de:	61                   	(bad)  
    d4df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4e0:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4e4:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4e9:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4ed:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4ee:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f567 <_end+0x744e051f>
    d4f4:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df6d <_IO_stdin_used+0x1f6d>
    d4fa:	00 00                	add    BYTE PTR [rax],al
    d4fc:	00 00                	add    BYTE PTR [rax],al
    d4fe:	00 00                	add    BYTE PTR [rax],al
    d500:	46                   	rex.RX
    d501:	49                   	rex.WB
    d502:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d506:	72 74                	jb     d57c <_IO_stdin_used+0x157c>
    d508:	73 63                	jae    d56d <_IO_stdin_used+0x156d>
    d50a:	61                   	(bad)  
    d50b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d50c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d510:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d515:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d518:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d519:	6d                   	ins    DWORD PTR es:[rdi],dx
    d51a:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d51d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d520:	64 72 65             	fs jb  d588 <_IO_stdin_used+0x1588>
    d523:	73 73                	jae    d598 <_IO_stdin_used+0x1598>
    d525:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df9e <_IO_stdin_used+0x1f9e>
    d52b:	00 00                	add    BYTE PTR [rax],al
    d52d:	00 00                	add    BYTE PTR [rax],al
    d52f:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d532:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d536:	72 74                	jb     d5ac <_IO_stdin_used+0x15ac>
    d538:	73 63                	jae    d59d <_IO_stdin_used+0x159d>
    d53a:	61                   	(bad)  
    d53b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d53c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d540:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d545:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d548:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d549:	6d                   	ins    DWORD PTR es:[rdi],dx
    d54a:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5c3 <_end+0x744e057b>
    d550:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000dfc9 <_end+0x2fecef81>
    d556:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d559:	30 2e                	xor    BYTE PTR [rsi],ch
    d55b:	31 00                	xor    DWORD PTR [rax],eax
    d55d:	30 2e                	xor    BYTE PTR [rsi],ch
    d55f:	30 2e                	xor    BYTE PTR [rsi],ch
    d561:	30 2e                	xor    BYTE PTR [rsi],ch
    d563:	31 00                	xor    DWORD PTR [rax],eax
    d565:	00 00                	add    BYTE PTR [rax],al
    d567:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d56a:	70 20                	jo     d58c <_IO_stdin_used+0x158c>
    d56c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d56e:	74 72                	je     d5e2 <_IO_stdin_used+0x15e2>
    d570:	79 20                	jns    d592 <_IO_stdin_used+0x1592>
    d572:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d575:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d576:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d57c:	72 20                	jb     d59e <_IO_stdin_used+0x159e>
    d57e:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d585:	65 73 73             	gs jae d5fb <_IO_stdin_used+0x15fb>
    d588:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211001 <_end+0x770d1fb9>
    d58e:	61                   	(bad)  
    d58f:	73 20                	jae    d5b1 <_IO_stdin_used+0x15b1>
    d591:	25 73 20 69 73       	and    eax,0x73692073
    d596:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d599:	77 20                	ja     d5bb <_IO_stdin_used+0x15bb>
    d59b:	25 73 00 72 00       	and    eax,0x720073
    d5a0:	2f                   	(bad)  
    d5a1:	75 73                	jne    d616 <_IO_stdin_used+0x1616>
    d5a3:	72 2f                	jb     d5d4 <_IO_stdin_used+0x15d4>
    d5a5:	73 68                	jae    d60f <_IO_stdin_used+0x160f>
    d5a7:	61                   	(bad)  
    d5a8:	72 65                	jb     d60f <_IO_stdin_used+0x160f>
    d5aa:	2f                   	(bad)  
    d5ab:	76 69                	jbe    d616 <_IO_stdin_used+0x1616>
    d5ad:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d5b4:	63 61 
    d5b6:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d5b9:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d5bd:	00 00                	add    BYTE PTR [rax],al
    d5bf:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d5c2:	75 6c                	jne    d630 <_IO_stdin_used+0x1630>
    d5c4:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d5c8:	74 20                	je     d5ea <_IO_stdin_used+0x15ea>
    d5ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5cc:	61                   	(bad)  
    d5cd:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d5d1:	70 20                	jo     d5f3 <_IO_stdin_used+0x15f3>
    d5d3:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d5d6:	68 65 20 66 72       	push   0x72662065
    d5db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5dd:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d5e1:	61                   	(bad)  
    d5e2:	62 61                	(bad)  
    d5e4:	73 65                	jae    d64b <_IO_stdin_used+0x164b>
    d5e6:	2c 20                	sub    al,0x20
    d5e8:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d5ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5f0:	65 78 69             	gs js  d65c <_IO_stdin_used+0x165c>
    d5f3:	73 74                	jae    d669 <_IO_stdin_used+0x1669>
    d5f5:	61                   	(bad)  
    d5f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5f7:	74 00                	je     d5f9 <_IO_stdin_used+0x15f9>
    d5f9:	0a 00                	or     al,BYTE PTR [rax]
    d5fb:	2c 00                	sub    al,0x0
    d5fd:	00 00                	add    BYTE PTR [rax],al
    d5ff:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d603:	20 31                	and    BYTE PTR [rcx],dh
    d605:	2e 30 20             	cs xor BYTE PTR [rax],ah
    d608:	44                   	rex.R
    d609:	41 54                	push   r12
    d60b:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d60e:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d612:	20 31                	and    BYTE PTR [rcx],dh
    d614:	2e 32 20             	cs xor ah,BYTE PTR [rax]
    d617:	44                   	rex.R
    d618:	41 54                	push   r12
    d61a:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d61d:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d621:	20 31                	and    BYTE PTR [rcx],dh
    d623:	2e 33 20             	cs xor esp,DWORD PTR [rax]
    d626:	44                   	rex.R
    d627:	41 54                	push   r12
    d629:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d62c:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d62f:	69 65 6e 74 20 48 65 	imul   esp,DWORD PTR [rbp+0x6e],0x65482074
    d636:	6c                   	ins    BYTE PTR es:[rdi],dx
    d637:	6c                   	ins    BYTE PTR es:[rdi],dx
    d638:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d639:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    d63c:	72 76                	jb     d6b4 <_IO_stdin_used+0x16b4>
    d63e:	65 72 20             	gs jb  d661 <_IO_stdin_used+0x1661>
    d641:	48                   	rex.W
    d642:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d644:	6c                   	ins    BYTE PTR es:[rdi],dx
    d645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d646:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d649:	77 20                	ja     d66b <_IO_stdin_used+0x166b>
    d64b:	53                   	push   rbx
    d64c:	65 73 73             	gs jae d6c2 <_IO_stdin_used+0x16c2>
    d64f:	69 6f 6e 20 54 69 63 	imul   ebp,DWORD PTR [rdi+0x6e],0x63695420
    d656:	6b 65 74 00          	imul   esp,DWORD PTR [rbp+0x74],0x0
    d65a:	43                   	rex.XB
    d65b:	65 72 74             	gs jb  d6d2 <_IO_stdin_used+0x16d2>
    d65e:	69 66 69 63 61 74 65 	imul   esp,DWORD PTR [rsi+0x69],0x65746163
    d665:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d668:	69 65 6e 74 20 4b 65 	imul   esp,DWORD PTR [rbp+0x6e],0x654b2074
    d66f:	78 00                	js     d671 <_IO_stdin_used+0x1671>
    d671:	00 00                	add    BYTE PTR [rax],al
    d673:	00 3a                	add    BYTE PTR [rdx],bh
    d675:	ab                   	stos   DWORD PTR es:[rdi],eax
    d676:	ff                   	(bad)  
    d677:	ff 9e aa ff ff b7    	call   FWORD PTR [rsi-0x48000056]
    d67d:	aa                   	stos   BYTE PTR es:[rdi],al
    d67e:	ff                   	(bad)  
    d67f:	ff                   	(bad)  
    d680:	3a ab ff ff d8 aa    	cmp    ch,BYTE PTR [rbx-0x55270001]
    d686:	ff                   	(bad)  
    d687:	ff                   	(bad)  
    d688:	3a ab ff ff 3a ab    	cmp    ch,BYTE PTR [rbx-0x54c50001]
    d68e:	ff                   	(bad)  
    d68f:	ff                   	(bad)  
    d690:	3a ab ff ff 3a ab    	cmp    ch,BYTE PTR [rbx-0x54c50001]
    d696:	ff                   	(bad)  
    d697:	ff                   	(bad)  
    d698:	3a ab ff ff 1a ab    	cmp    ch,BYTE PTR [rbx-0x54e50001]
    d69e:	ff                   	(bad)  
    d69f:	ff                   	(bad)  
    d6a0:	f9                   	stc    
    d6a1:	aa                   	stos   BYTE PTR es:[rdi],al
    d6a2:	ff                   	(bad)  
    d6a3:	ff 00                	inc    DWORD PTR [rax]
    d6a5:	00 00                	add    BYTE PTR [rax],al
    d6a7:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d6aa:	64 61                	fs (bad) 
    d6ac:	74 69                	je     d717 <_IO_stdin_used+0x1717>
    d6ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6af:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d6b4:	53                   	push   rbx
    d6b5:	51                   	push   rcx
    d6b6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d6b7:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d6be:	6f 
    d6bf:	72 3a                	jb     d6fb <_IO_stdin_used+0x16fb>
    d6c1:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e13a <__GNU_EH_FRAME_HDR+0x86>
    d6c7:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d6ca:	53                   	push   rbx
    d6cb:	45 52                	rex.RB push r10
    d6cd:	54                   	push   rsp
    d6ce:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d6d1:	54                   	push   rsp
    d6d2:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d6d6:	70 5f                	jo     d737 <_IO_stdin_used+0x1737>
    d6d8:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d6db:	68 65 20 28 69       	push   0x69282065
    d6e0:	70 5f                	jo     d741 <_IO_stdin_used+0x1741>
    d6e2:	61                   	(bad)  
    d6e3:	64 64 72 65          	fs fs jb d74c <_IO_stdin_used+0x174c>
    d6e7:	73 73                	jae    d75c <_IO_stdin_used+0x175c>
    d6e9:	2c 20                	sub    al,0x20
    d6eb:	6d                   	ins    DWORD PTR es:[rdi],dx
    d6ec:	61                   	(bad)  
    d6ed:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d6f0:	64 64 72 65          	fs fs jb d759 <_IO_stdin_used+0x1759>
    d6f4:	73 73                	jae    d769 <_IO_stdin_used+0x1769>
    d6f6:	29 20                	sub    DWORD PTR [rax],esp
    d6f8:	56                   	push   rsi
    d6f9:	41                   	rex.B
    d6fa:	4c 55                	rex.WR push rbp
    d6fc:	45 53                	rex.RB push r11
    d6fe:	20 28                	and    BYTE PTR [rax],ch
    d700:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf979 <_end+0x20190931>
    d706:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f97f <_end+0x3b160937>
    d70c:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d70f:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d716:	63 6f 
    d718:	75 6e                	jne    d788 <_IO_stdin_used+0x1788>
    d71a:	74 65                	je     d781 <_IO_stdin_used+0x1781>
    d71c:	72 65                	jb     d783 <_IO_stdin_used+0x1783>
    d71e:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d722:	72 6f                	jb     d793 <_IO_stdin_used+0x1793>
    d724:	72 3a                	jb     d760 <_IO_stdin_used+0x1760>
    d726:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e19f <_end+0x2eecf157>
    d72c:	75 73                	jne    d7a1 <_IO_stdin_used+0x17a1>
    d72e:	72 2f                	jb     d75f <_IO_stdin_used+0x175f>
    d730:	73 68                	jae    d79a <_IO_stdin_used+0x179a>
    d732:	61                   	(bad)  
    d733:	72 65                	jb     d79a <_IO_stdin_used+0x179a>
    d735:	2f                   	(bad)  
    d736:	76 69                	jbe    d7a1 <_IO_stdin_used+0x17a1>
    d738:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d73f:	2e 64 
    d741:	62                   	(bad)  
    d742:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d745:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d74c:	72 6f 
    d74e:	72 20                	jb     d770 <_IO_stdin_used+0x1770>
    d750:	25 73 0a 00 00       	and    eax,0xa73
    d755:	00 00                	add    BYTE PTR [rax],al
    d757:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d75a:	53                   	push   rbx
    d75b:	45 52                	rex.RB push r10
    d75d:	54                   	push   rsp
    d75e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d761:	54                   	push   rsp
    d762:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d766:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d76d:	20 28                	and    BYTE PTR [rax],ch
    d76f:	73 65                	jae    d7d6 <_IO_stdin_used+0x17d6>
    d771:	72 76                	jb     d7e9 <_IO_stdin_used+0x17e9>
    d773:	5f                   	pop    rdi
    d774:	61                   	(bad)  
    d775:	64 64 72 2c          	fs fs jb d7a5 <_IO_stdin_used+0x17a5>
    d779:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d77c:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d783:	73 65                	jae    d7ea <_IO_stdin_used+0x17ea>
    d785:	72 76                	jb     d7fd <_IO_stdin_used+0x17fd>
    d787:	5f                   	pop    rdi
    d788:	70 6f                	jo     d7f9 <_IO_stdin_used+0x17f9>
    d78a:	72 74                	jb     d800 <_IO_stdin_used+0x1800>
    d78c:	2c 63                	sub    al,0x63
    d78e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d78f:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d796:	73 65                	jae    d7fd <_IO_stdin_used+0x17fd>
    d798:	72 76                	jb     d810 <_IO_stdin_used+0x1810>
    d79a:	5f                   	pop    rdi
    d79b:	70 6b                	jo     d808 <_IO_stdin_used+0x1808>
    d79d:	74 5f                	je     d7fe <_IO_stdin_used+0x17fe>
    d79f:	73 65                	jae    d806 <_IO_stdin_used+0x1806>
    d7a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7a2:	74 2c                	je     d7d0 <_IO_stdin_used+0x17d0>
    d7a4:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7a8:	70 6b                	jo     d815 <_IO_stdin_used+0x1815>
    d7aa:	74 5f                	je     d80b <_IO_stdin_used+0x180b>
    d7ac:	73 65                	jae    d813 <_IO_stdin_used+0x1813>
    d7ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7af:	74 2c                	je     d7dd <_IO_stdin_used+0x17dd>
    d7b1:	73 65                	jae    d818 <_IO_stdin_used+0x1818>
    d7b3:	72 76                	jb     d82b <_IO_stdin_used+0x182b>
    d7b5:	5f                   	pop    rdi
    d7b6:	70 6b                	jo     d823 <_IO_stdin_used+0x1823>
    d7b8:	74 5f                	je     d819 <_IO_stdin_used+0x1819>
    d7ba:	72 65                	jb     d821 <_IO_stdin_used+0x1821>
    d7bc:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7bf:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7c3:	70 6b                	jo     d830 <_IO_stdin_used+0x1830>
    d7c5:	74 5f                	je     d826 <_IO_stdin_used+0x1826>
    d7c7:	72 65                	jb     d82e <_IO_stdin_used+0x182e>
    d7c9:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7cc:	70 72                	jo     d840 <_IO_stdin_used+0x1840>
    d7ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7cf:	74 6f                	je     d840 <_IO_stdin_used+0x1840>
    d7d1:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d7d4:	2c 61                	sub    al,0x61
    d7d6:	76 67                	jbe    d83f <_IO_stdin_used+0x183f>
    d7d8:	5f                   	pop    rdi
    d7d9:	70 70                	jo     d84b <_IO_stdin_used+0x184b>
    d7db:	73 2c                	jae    d809 <_IO_stdin_used+0x1809>
    d7dd:	73 74                	jae    d853 <_IO_stdin_used+0x1853>
    d7df:	61                   	(bad)  
    d7e0:	72 74                	jb     d856 <_IO_stdin_used+0x1856>
    d7e2:	5f                   	pop    rdi
    d7e3:	74 69                	je     d84e <_IO_stdin_used+0x184e>
    d7e5:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7e6:	65 2c 65             	gs sub al,0x65
    d7e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7ea:	64 5f                	fs pop rdi
    d7ec:	74 69                	je     d857 <_IO_stdin_used+0x1857>
    d7ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7ef:	65 2c 64             	gs sub al,0x64
    d7f2:	61                   	(bad)  
    d7f3:	74 61                	je     d856 <_IO_stdin_used+0x1856>
    d7f5:	5f                   	pop    rdi
    d7f6:	70 6b                	jo     d863 <_IO_stdin_used+0x1863>
    d7f8:	74 73                	je     d86d <_IO_stdin_used+0x186d>
    d7fa:	2c 63                	sub    al,0x63
    d7fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7fe:	74 72                	je     d872 <_IO_stdin_used+0x1872>
    d800:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d801:	6c                   	ins    BYTE PTR es:[rdi],dx
    d802:	5f                   	pop    rdi
    d803:	70 6b                	jo     d870 <_IO_stdin_used+0x1870>
    d805:	74 73                	je     d87a <_IO_stdin_used+0x187a>
    d807:	29 20                	sub    DWORD PTR [rax],esp
    d809:	56                   	push   rsi
    d80a:	41                   	rex.B
    d80b:	4c 55                	rex.WR push rbp
    d80d:	45 53                	rex.RB push r11
    d80f:	20 28                	and    BYTE PTR [rax],ch
    d811:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfa8a <_end+0x22190a42>
    d817:	25 73 22 2c 25       	and    eax,0x252c2273
    d81c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d81d:	64 2c 25             	fs sub al,0x25
    d820:	6c                   	ins    BYTE PTR es:[rdi],dx
    d821:	64 2c 25             	fs sub al,0x25
    d824:	64 2c 25             	fs sub al,0x25
    d827:	64 2c 25             	fs sub al,0x25
    d82a:	64 2c 25             	fs sub al,0x25
    d82d:	64 2c 25             	fs sub al,0x25
    d830:	64 2c 25             	fs sub al,0x25
    d833:	64 2c 25             	fs sub al,0x25
    d836:	6c                   	ins    BYTE PTR es:[rdi],dx
    d837:	64 2c 25             	fs sub al,0x25
    d83a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d83b:	64 2c 25             	fs sub al,0x25
    d83e:	64 2c 25             	fs sub al,0x25
    d841:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d844:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d847:	4c                   	rex.WR
    d848:	49 54                	rex.WB push r12
    d84a:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d84e:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d851:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d852:	74 65                	je     d8b9 <_IO_stdin_used+0x18b9>
    d854:	72 65                	jb     d8bb <_IO_stdin_used+0x18bb>
    d856:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d85a:	72 6f                	jb     d8cb <_IO_stdin_used+0x18cb>
    d85c:	72 3a                	jb     d898 <_IO_stdin_used+0x1898>
    d85e:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e2d7 <_end+0x52ecf28f>
    d864:	74 72                	je     d8d8 <_IO_stdin_used+0x18d8>
    d866:	6c                   	ins    BYTE PTR es:[rdi],dx
    d867:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d868:	63 20                	movsxd esp,DWORD PTR [rax]
    d86a:	73 75                	jae    d8e1 <_IO_stdin_used+0x18e1>
    d86c:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d86f:	73 73                	jae    d8e4 <_IO_stdin_used+0x18e4>
    d871:	66 75 6c             	data16 jne d8e0 <_IO_stdin_used+0x18e0>
    d874:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d877:	65 72 79             	gs jb  d8f3 <_IO_stdin_used+0x18f3>
    d87a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d87c:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d881:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d882:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d889:	6f 
    d88a:	72 72                	jb     d8fe <_IO_stdin_used+0x18fe>
    d88c:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d891:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d892:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d899:	6f 
    d89a:	72 72                	jb     d90e <_IO_stdin_used+0x190e>
    d89c:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d8a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8a2:	73 73                	jae    d917 <_IO_stdin_used+0x1917>
    d8a4:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d8ab:	50                   	push   rax
    d8ac:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d8af:	75 74                	jne    d925 <_IO_stdin_used+0x1925>
    d8b1:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d8b5:	72 63                	jb     d91a <_IO_stdin_used+0x191a>
    d8b7:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d8bb:	74 65                	je     d922 <_IO_stdin_used+0x1922>
    d8bd:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8be:	70 74                	jo     d934 <_IO_stdin_used+0x1934>
    d8c0:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8c2:	25 73 28 73 75       	and    eax,0x75732873
    d8c7:	73 70                	jae    d939 <_IO_stdin_used+0x1939>
    d8c9:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d8ce:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d8d3:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 6166f93e <_end+0x615308f6>
    d8da:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d8e1:	67 
    d8e2:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d8e9:	50                   	push   rax
    d8ea:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d8ef:	4c                   	rex.WR
    d8f0:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d8f4:	54                   	push   rsp
    d8f5:	52                   	push   rdx
    d8f6:	41                   	rex.B
    d8f7:	4e 53                	rex.WRX push rbx
    d8f9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8fb:	25 64 3a 20 25       	and    eax,0x25203a64
    d900:	73 3a                	jae    d93c <_IO_stdin_used+0x193c>
    d902:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d907:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261380 <_end+0x64122338>
    d90d:	0a 00                	or     al,BYTE PTR [rax]
    d90f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d912:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d916:	57                   	push   rdi
    d917:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d91a:	4e 56                	rex.WRX push rsi
    d91c:	3a 20                	cmp    ah,BYTE PTR [rax]
    d91e:	25 64 3a 20 25       	and    eax,0x25203a64
    d923:	73 3a                	jae    d95f <_IO_stdin_used+0x195f>
    d925:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d92a:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613a3 <_end+0x6412235b>
    d930:	0a 00                	or     al,BYTE PTR [rax]
    d932:	00 00                	add    BYTE PTR [rax],al
    d934:	00 00                	add    BYTE PTR [rax],al
    d936:	00 00                	add    BYTE PTR [rax],al
    d938:	53                   	push   rbx
    d939:	50                   	push   rax
    d93a:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d93f:	20 32                	and    BYTE PTR [rdx],dh
    d941:	2f                   	(bad)  
    d942:	33 3a                	xor    edi,DWORD PTR [rdx]
    d944:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 252113ae <_end+0x250d2366>
    d94a:	73 3a                	jae    d986 <_IO_stdin_used+0x1986>
    d94c:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d951:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613ca <_end+0x64122382>
    d957:	0a 00                	or     al,BYTE PTR [rax]
    d959:	00 00                	add    BYTE PTR [rax],al
    d95b:	00 00                	add    BYTE PTR [rax],al
    d95d:	00 00                	add    BYTE PTR [rax],al
    d95f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d962:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d966:	54                   	push   rsp
    d967:	52                   	push   rdx
    d968:	59                   	pop    rcx
    d969:	3a 20                	cmp    ah,BYTE PTR [rax]
    d96b:	25 64 3a 20 53       	and    eax,0x53203a64
    d970:	45 53                	rex.RB push r11
    d972:	53                   	push   rbx
    d973:	49                   	rex.WB
    d974:	4f                   	rex.WRXB
    d975:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d979:	54                   	push   rsp
    d97a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d97c:	25 73 3a 25 64       	and    eax,0x64253a73
    d981:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9c5 <_end+0x7312097d>
    d987:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3f1 <__GNU_EH_FRAME_HDR+0x33d>
    d98d:	00 00                	add    BYTE PTR [rax],al
    d98f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d992:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d996:	54                   	push   rsp
    d997:	52                   	push   rdx
    d998:	59                   	pop    rcx
    d999:	3a 20                	cmp    ah,BYTE PTR [rax]
    d99b:	25 64 3a 20 50       	and    eax,0x50203a64
    d9a0:	4f                   	rex.WRXB
    d9a1:	4c                   	rex.WR
    d9a2:	49 54                	rex.WB push r12
    d9a4:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9a8:	4e 56                	rex.WRX push rsi
    d9aa:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9ad:	44 20 33             	and    BYTE PTR [rbx],r14b
    d9b0:	2f                   	(bad)  
    d9b1:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9b3:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426142c <_end+0x641223e4>
    d9b9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9fd <_end+0x731209b5>
    d9bf:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e429 <__GNU_EH_FRAME_HDR+0x375>
    d9c5:	00 00                	add    BYTE PTR [rax],al
    d9c7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9ca:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9ce:	54                   	push   rsp
    d9cf:	52                   	push   rdx
    d9d0:	59                   	pop    rcx
    d9d1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9d3:	25 64 3a 20 50       	and    eax,0x50203a64
    d9d8:	4f                   	rex.WRXB
    d9d9:	4c                   	rex.WR
    d9da:	49 54                	rex.WB push r12
    d9dc:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9e0:	4e 56                	rex.WRX push rsi
    d9e2:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9e5:	44 20 32             	and    BYTE PTR [rdx],r14b
    d9e8:	2f                   	(bad)  
    d9e9:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9eb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261464 <_end+0x6412241c>
    d9f1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa35 <_end+0x731209ed>
    d9f7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e461 <__GNU_EH_FRAME_HDR+0x3ad>
    d9fd:	00 00                	add    BYTE PTR [rax],al
    d9ff:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    da02:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    da06:	54                   	push   rsp
    da07:	52                   	push   rdx
    da08:	59                   	pop    rcx
    da09:	3a 20                	cmp    ah,BYTE PTR [rax]
    da0b:	25 64 3a 20 50       	and    eax,0x50203a64
    da10:	4f                   	rex.WRXB
    da11:	4c                   	rex.WR
    da12:	49 54                	rex.WB push r12
    da14:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da18:	4e 56                	rex.WRX push rsi
    da1a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da1d:	44 20 31             	and    BYTE PTR [rcx],r14b
    da20:	2f                   	(bad)  
    da21:	33 3a                	xor    edi,DWORD PTR [rdx]
    da23:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426149c <_end+0x64122454>
    da29:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa6d <_end+0x73120a25>
    da2f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e499 <__GNU_EH_FRAME_HDR+0x3e5>
    da35:	00 00                	add    BYTE PTR [rax],al
    da37:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    da3a:	00 00                	add    BYTE PTR [rax],al
    da3c:	00 00                	add    BYTE PTR [rax],al
    da3e:	00 00                	add    BYTE PTR [rax],al
    da40:	43 52                	rex.XB push r10
    da42:	49 54                	rex.WB push r12
    da44:	49                   	rex.WB
    da45:	43                   	rex.XB
    da46:	41                   	rex.B
    da47:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    da4b:	49                   	rex.WB
    da4c:	4c                   	rex.WR
    da4d:	45                   	rex.RB
    da4e:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    da53:	4f 50                	rex.WRXB push r8
    da55:	45                   	rex.RB
    da56:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    da5a:	4c                   	rex.WR
    da5b:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    da5f:	52                   	push   rdx
    da60:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    da64:	47                   	rex.RXB
    da65:	49                   	rex.WB
    da66:	4e                   	rex.WRX
    da67:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    da6a:	25 73 0a 00 25       	and    eax,0x25000a73
    da6f:	73 20                	jae    da91 <_IO_stdin_used+0x1a91>
    da71:	25 73 20 25 73       	and    eax,0x73252073
    da76:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325faba <_end+0x73120a72>
    da7c:	0a 00                	or     al,BYTE PTR [rax]
    da7e:	25 73 20 25 73       	and    eax,0x73252073
    da83:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614fc <_end+0x641224b4>
    da89:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325facd <_end+0x73120a85>
    da8f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4f9 <__GNU_EH_FRAME_HDR+0x445>
    da95:	00 00                	add    BYTE PTR [rax],al
    da97:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    da9a:	79 00                	jns    da9c <_IO_stdin_used+0x1a9c>
    da9c:	41                   	rex.B
    da9d:	4e 59                	rex.WRX pop rcx
    da9f:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    daa2:	4d 50                	rex.WRB push r8
    daa4:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    daa8:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    daab:	50                   	push   rax
    daac:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    daaf:	72 5f                	jb     db10 <_IO_stdin_used+0x1b10>
    dab1:	6d                   	ins    DWORD PTR es:[rdi],dx
    dab2:	61                   	(bad)  
    dab3:	74 63                	je     db18 <_IO_stdin_used+0x1b18>
    dab5:	68 00 6e 6f 6e       	push   0x6e6f6e00
    daba:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    dabe:	72 65                	jb     db25 <_IO_stdin_used+0x1b25>
    dac0:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dac3:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dac7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dac8:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dacb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dacc:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    dad1:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    dad4:	25 73 0a 00 3b       	and    eax,0x3b000a73
    dad9:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    dadc:	75 6e                	jne    db4c <_IO_stdin_used+0x1b4c>
    dade:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    dae2:	65 72 61             	gs jb  db46 <_IO_stdin_used+0x1b46>
    dae5:	74 6f                	je     db56 <_IO_stdin_used+0x1b56>
    dae7:	72 00                	jb     dae9 <_IO_stdin_used+0x1ae9>
    dae9:	61                   	(bad)  
    daea:	6c                   	ins    BYTE PTR es:[rdi],dx
    daeb:	65 72 74             	gs jb  db62 <_IO_stdin_used+0x1b62>
    daee:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    daf1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daf2:	6d                   	ins    DWORD PTR es:[rdi],dx
    daf3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    daf5:	65 74 00             	gs je  daf8 <_IO_stdin_used+0x1af8>
    daf8:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    dafd:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    db04:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db05:	61                   	(bad)  
    db06:	6c                   	ins    BYTE PTR es:[rdi],dx
    db07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db08:	65 74 00             	gs je  db0b <_IO_stdin_used+0x1b0b>
    db0b:	22 3b                	and    bh,BYTE PTR [rbx]
    db0d:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    db10:	6d                   	ins    DWORD PTR es:[rdi],dx
    db11:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    db14:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    db17:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    db1a:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    db1e:	74 68                	je     db88 <_IO_stdin_used+0x1b88>
    db20:	3a 00                	cmp    al,BYTE PTR [rax]
    db22:	74 79                	je     db9d <_IO_stdin_used+0x1b9d>
    db24:	70 65                	jo     db8b <_IO_stdin_used+0x1b8b>
    db26:	3a 00                	cmp    al,BYTE PTR [rax]
    db28:	74 61                	je     db8b <_IO_stdin_used+0x1b8b>
    db2a:	72 67                	jb     db93 <_IO_stdin_used+0x1b93>
    db2c:	65 74 3a             	gs je  db69 <_IO_stdin_used+0x1b69>
    db2f:	22 00                	and    al,BYTE PTR [rax]
    db31:	73 65                	jae    db98 <_IO_stdin_used+0x1b98>
    db33:	76 3a                	jbe    db6f <_IO_stdin_used+0x1b6f>
    db35:	00 00                	add    BYTE PTR [rax],al
    db37:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    db3a:	6c                   	ins    BYTE PTR es:[rdi],dx
    db3b:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db3f:	76 65                	jbe    dba6 <_IO_stdin_used+0x1ba6>
    db41:	72 69                	jb     dbac <_IO_stdin_used+0x1bac>
    db43:	74 79                	je     dbbe <_IO_stdin_used+0x1bbe>
    db45:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db49:	75 6c                	jne    dbb7 <_IO_stdin_used+0x1bb7>
    db4b:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db4f:	20 3e                	and    BYTE PTR [rsi],bh
    db51:	20 30                	and    BYTE PTR [rax],dh
    db53:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    db56:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    db5d:	00 
    db5e:	00 00                	add    BYTE PTR [rax],al
    db60:	52                   	push   rdx
    db61:	75 6c                	jne    dbcf <_IO_stdin_used+0x1bcf>
    db63:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db67:	76 65                	jbe    dbce <_IO_stdin_used+0x1bce>
    db69:	72 69                	jb     dbd4 <_IO_stdin_used+0x1bd4>
    db6b:	74 79                	je     dbe6 <_IO_stdin_used+0x1be6>
    db6d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db71:	75 6c                	jne    dbdf <_IO_stdin_used+0x1bdf>
    db73:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db77:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    db7a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db7b:	75 6d                	jne    dbea <_IO_stdin_used+0x1bea>
    db7d:	65 72 69             	gs jb  dbe9 <_IO_stdin_used+0x1be9>
    db80:	63 20                	movsxd esp,DWORD PTR [rax]
    db82:	76 61                	jbe    dbe5 <_IO_stdin_used+0x1be5>
    db84:	6c                   	ins    BYTE PTR es:[rdi],dx
    db85:	75 65                	jne    dbec <_IO_stdin_used+0x1bec>
    db87:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    db8a:	79 70                	jns    dbfc <_IO_stdin_used+0x1bfc>
    db8c:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    db8f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db91:	76 61                	jbe    dbf4 <_IO_stdin_used+0x1bf4>
    db93:	6c                   	ins    BYTE PTR es:[rdi],dx
    db94:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    db9b:	20 
    db9c:	74 79                	je     dc17 <_IO_stdin_used+0x1c17>
    db9e:	70 65                	jo     dc05 <_IO_stdin_used+0x1c05>
    dba0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dba3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dba4:	75 65                	jne    dc0b <_IO_stdin_used+0x1c0b>
    dba6:	00 00                	add    BYTE PTR [rax],al
    dba8:	25 73 3a 20 69       	and    eax,0x69203a73
    dbad:	74 79                	je     dc28 <_IO_stdin_used+0x1c28>
    dbaf:	70 65                	jo     dc16 <_IO_stdin_used+0x1c16>
    dbb1:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dbb4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb5:	79 20                	jns    dbd7 <_IO_stdin_used+0x1bd7>
    dbb7:	61                   	(bad)  
    dbb8:	70 70                	jo     dc2a <_IO_stdin_used+0x1c2a>
    dbba:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbbb:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dbc2:	72 75                	jb     dc39 <_IO_stdin_used+0x1c39>
    dbc4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbc5:	65 73 20             	gs jae dbe8 <_IO_stdin_used+0x1be8>
    dbc8:	77 69                	ja     dc33 <_IO_stdin_used+0x1c33>
    dbca:	74 68                	je     dc34 <_IO_stdin_used+0x1c34>
    dbcc:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dbcf:	4d 50                	rex.WRB push r8
    dbd1:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dbd4:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dbd7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbd8:	74 6f                	je     dc49 <_IO_stdin_used+0x1c49>
    dbda:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dbdd:	0a 00                	or     al,BYTE PTR [rax]
    dbdf:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    dbe6:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dbe8:	76 61                	jbe    dc4b <_IO_stdin_used+0x1c4b>
    dbea:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbeb:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dbf2:	70 
    dbf3:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dbf6:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dbfb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbfc:	75 65                	jne    dc63 <_IO_stdin_used+0x1c63>
    dbfe:	00 00                	add    BYTE PTR [rax],al
    dc00:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dc07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc08:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc09:	79 20                	jns    dc2b <_IO_stdin_used+0x1c2b>
    dc0b:	61                   	(bad)  
    dc0c:	70 70                	jo     dc7e <_IO_stdin_used+0x1c7e>
    dc0e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc0f:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc16:	72 75                	jb     dc8d <_IO_stdin_used+0x1c8d>
    dc18:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc19:	65 73 20             	gs jae dc3c <_IO_stdin_used+0x1c3c>
    dc1c:	77 69                	ja     dc87 <_IO_stdin_used+0x1c87>
    dc1e:	74 68                	je     dc88 <_IO_stdin_used+0x1c88>
    dc20:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc23:	4d 50                	rex.WRB push r8
    dc25:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc28:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc2b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc2c:	74 6f                	je     dc9d <_IO_stdin_used+0x1c9d>
    dc2e:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc31:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc34:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc35:	70 5f                	jo     dc96 <_IO_stdin_used+0x1c96>
    dc37:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dc3e:	61 
    dc3f:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc40:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc47:	20 
    dc48:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dc4f:	65 
	...
    dc58:	49                   	rex.WB
    dc59:	43                   	rex.XB
    dc5a:	4d 50                	rex.WRB push r8
    dc5c:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dc5f:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc62:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc63:	79 20                	jns    dc85 <_IO_stdin_used+0x1c85>
    dc65:	61                   	(bad)  
    dc66:	70 70                	jo     dcd8 <_IO_stdin_used+0x1cd8>
    dc68:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc69:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc70:	72 75                	jb     dce7 <_IO_stdin_used+0x1ce7>
    dc72:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc73:	65 73 20             	gs jae dc96 <_IO_stdin_used+0x1c96>
    dc76:	77 69                	ja     dce1 <_IO_stdin_used+0x1ce1>
    dc78:	74 68                	je     dce2 <_IO_stdin_used+0x1ce2>
    dc7a:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc7d:	4d 50                	rex.WRB push r8
    dc7f:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc82:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc86:	74 6f                	je     dcf7 <_IO_stdin_used+0x1cf7>
    dc88:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc8b:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc8e:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc8f:	70 5f                	jo     dcf0 <_IO_stdin_used+0x1cf0>
    dc91:	73 65                	jae    dcf8 <_IO_stdin_used+0x1cf8>
    dc93:	71 3a                	jno    dccf <_IO_stdin_used+0x1ccf>
    dc95:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dc98:	76 61                	jbe    dcfb <_IO_stdin_used+0x1cfb>
    dc9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc9b:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dca2:	20 
    dca3:	73 65                	jae    dd0a <_IO_stdin_used+0x1d0a>
    dca5:	71 75                	jno    dd1c <_IO_stdin_used+0x1d1c>
    dca7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dca9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dcac:	76 61                	jbe    dd0f <_IO_stdin_used+0x1d0f>
    dcae:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcaf:	75 65                	jne    dd16 <_IO_stdin_used+0x1d16>
    dcb1:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dcb5:	3a 00                	cmp    al,BYTE PTR [rax]
    dcb7:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dcb9:	76 61                	jbe    dd1c <_IO_stdin_used+0x1d1c>
    dcbb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcbc:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dcc3:	76 
    dcc4:	61                   	(bad)  
    dcc5:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc6:	75 65                	jne    dd2d <_IO_stdin_used+0x1d2d>
    dcc8:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dccb:	61                   	(bad)  
    dccc:	67 73 3a             	addr32 jae dd09 <_IO_stdin_used+0x1d09>
    dccf:	22 00                	and    al,BYTE PTR [rax]
    dcd1:	00 00                	add    BYTE PTR [rax],al
    dcd3:	00 00                	add    BYTE PTR [rax],al
    dcd5:	00 00                	add    BYTE PTR [rax],al
    dcd7:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dcda:	61                   	(bad)  
    dcdb:	67 73 20             	addr32 jae dcfe <_IO_stdin_used+0x1cfe>
    dcde:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcdf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dce0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce1:	79 20                	jns    dd03 <_IO_stdin_used+0x1d03>
    dce3:	61                   	(bad)  
    dce4:	70 70                	jo     dd56 <_IO_stdin_used+0x1d56>
    dce6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce7:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dcee:	72 75                	jb     dd65 <_IO_stdin_used+0x1d65>
    dcf0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcf1:	65 73 20             	gs jae dd14 <_IO_stdin_used+0x1d14>
    dcf4:	77 69                	ja     dd5f <_IO_stdin_used+0x1d5f>
    dcf6:	74 68                	je     dd60 <_IO_stdin_used+0x1d60>
    dcf8:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dcfc:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dcff:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dd02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd03:	74 6f                	je     dd74 <_IO_stdin_used+0x1d74>
    dd05:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dd08:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dd0b:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dd0e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dd10:	76 61                	jbe    dd73 <_IO_stdin_used+0x1d73>
    dd12:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd13:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dd1a:	76 
    dd1b:	61                   	(bad)  
    dd1c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd1d:	75 65                	jne    dd84 <_IO_stdin_used+0x1d84>
    dd1f:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dd22:	72 65                	jb     dd89 <_IO_stdin_used+0x1d89>
    dd24:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dd26:	00 00                	add    BYTE PTR [rax],al
    dd28:	46 61                	rex.RX (bad) 
    dd2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dd31:	20 
    dd32:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dd35:	70 69                	jo     dda0 <_IO_stdin_used+0x1da0>
    dd37:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd38:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dd3c:	67 75 6c             	addr32 jne ddab <_IO_stdin_used+0x1dab>
    dd3f:	61                   	(bad)  
    dd40:	72 20                	jb     dd62 <_IO_stdin_used+0x1d62>
    dd42:	65 78 70             	gs js  ddb5 <_IO_stdin_used+0x1db5>
    dd45:	72 65                	jb     ddac <_IO_stdin_used+0x1dac>
    dd47:	73 73                	jae    ddbc <_IO_stdin_used+0x1dbc>
    dd49:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dd50:	7a 65                	jp     ddb7 <_IO_stdin_used+0x1db7>
    dd52:	3a 00                	cmp    al,BYTE PTR [rax]
    dd54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd55:	66 66 73 65          	data16 data16 jae ddbe <_IO_stdin_used+0x1dbe>
    dd59:	74 3a                	je     dd95 <_IO_stdin_used+0x1d95>
    dd5b:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    dd5e:	74 61                	je     ddc1 <_IO_stdin_used+0x1dc1>
    dd60:	62                   	(bad)  
    dd61:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd62:	69 73 68 65 64 00 6e 	imul   esi,DWORD PTR [rbx+0x68],0x6e006465
    dd69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd6a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dd6c:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
    dd6f:	70 74                	jo     dde5 <_IO_stdin_used+0x1de5>
    dd71:	00 25 63 00 25 30    	add    BYTE PTR [rip+0x30250063],ah        # 3025ddda <_end+0x3011ed92>
    dd77:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    dd7a:	00 00                	add    BYTE PTR [rax],al
    dd7c:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    dd80:	21 00                	and    DWORD PTR [rax],eax
    dd82:	3c 3d                	cmp    al,0x3d
    dd84:	00 3e                	add    BYTE PTR [rsi],bh
    dd86:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dd8b:	75 70                	jne    ddfd <_IO_stdin_used+0x1dfd>
    dd8d:	70 6f                	jo     ddfe <_IO_stdin_used+0x1dfe>
    dd8f:	72 74                	jb     de05 <_IO_stdin_used+0x1e05>
    dd91:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    dd96:	65 72 61             	gs jb  ddfa <_IO_stdin_used+0x1dfa>
    dd99:	74 6f                	je     de0a <_IO_stdin_used+0x1e0a>
    dd9b:	72 00                	jb     dd9d <_IO_stdin_used+0x1d9d>
    dd9d:	00 00                	add    BYTE PTR [rax],al
    dd9f:	00 0a                	add    BYTE PTR [rdx],cl
    dda1:	d0 ff                	sar    bh,1
    dda3:	ff 5c d0 ff          	call   FWORD PTR [rax+rdx*8-0x1]
    dda7:	ff 75 d0             	push   QWORD PTR [rbp-0x30]
    ddaa:	ff                   	(bad)  
    ddab:	ff 2a                	jmp    FWORD PTR [rdx]
    ddad:	d0 ff                	sar    bh,1
    ddaf:	ff 43 d0             	inc    DWORD PTR [rbx-0x30]
    ddb2:	ff                   	(bad)  
    ddb3:	ff 8e d0 ff ff 2e    	dec    DWORD PTR [rsi+0x2effffd0]
    ddb9:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 790fef <_end+0x651fa7>
    ddbf:	25 30 32 78 20       	and    eax,0x20783230
    ddc4:	2d 2d 20 25 30       	sub    eax,0x3025202d
    ddc9:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
    ddcc:	00 00                	add    BYTE PTR [rax],al
    ddce:	00 00                	add    BYTE PTR [rax],al
    ddd0:	73 72                	jae    de44 <_IO_stdin_used+0x1e44>
    ddd2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ddd4:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddd5:	75 61                	jne    de38 <_IO_stdin_used+0x1e38>
    ddd7:	2f                   	(bad)  
    ddd8:	73 63                	jae    de3d <_IO_stdin_used+0x1e3d>
    ddda:	72 69                	jb     de45 <_IO_stdin_used+0x1e45>
    dddc:	70 74                	jo     de52 <_IO_stdin_used+0x1e52>
    ddde:	73 2f                	jae    de0f <_IO_stdin_used+0x1e0f>
    dde0:	68 65 6c 6c 6f       	push   0x6f6c6c65
    dde5:	74 65                	je     de4c <_IO_stdin_used+0x1e4c>
    dde7:	73 74                	jae    de5d <_IO_stdin_used+0x1e5d>
    dde9:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    ddeb:	75 61                	jne    de4e <_IO_stdin_used+0x1e4e>
    dded:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    ddf0:	2f                   	(bad)  
    ddf1:	65 74 63             	gs je  de57 <_IO_stdin_used+0x1e57>
    ddf4:	2f                   	(bad)  
    ddf5:	76 69                	jbe    de60 <_IO_stdin_used+0x1e60>
    ddf7:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    ddfe:	72 69 
    de00:	70 74                	jo     de76 <_IO_stdin_used+0x1e76>
    de02:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    de06:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    de0a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de11:	20 
    de12:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de15:	6c                   	ins    BYTE PTR es:[rdi],dx
    de16:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    de1b:	75 61                	jne    de7e <_IO_stdin_used+0x1e7e>
    de1d:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    de20:	72 69                	jb     de8b <_IO_stdin_used+0x1e8b>
    de22:	70 74                	jo     de98 <_IO_stdin_used+0x1e98>
    de24:	73 3a                	jae    de60 <_IO_stdin_used+0x1e60>
    de26:	20 2f                	and    BYTE PTR [rdi],ch
    de28:	65 74 63             	gs je  de8e <_IO_stdin_used+0x1e8e>
    de2b:	2f                   	(bad)  
    de2c:	76 69                	jbe    de97 <_IO_stdin_used+0x1e97>
    de2e:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de35:	72 69 
    de37:	70 74                	jo     dead <_IO_stdin_used+0x1ead>
    de39:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    de3d:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    de41:	74 20                	je     de63 <_IO_stdin_used+0x1e63>
    de43:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    de45:	75 6e                	jne    deb5 <_IO_stdin_used+0x1eb5>
    de47:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    de4b:	2a 2e                	sub    ch,BYTE PTR [rsi]
    de4d:	6c                   	ins    BYTE PTR es:[rdi],dx
    de4e:	75 61                	jne    deb1 <_IO_stdin_used+0x1eb1>
    de50:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    de52:	2a 00                	sub    al,BYTE PTR [rax]
    de54:	6c                   	ins    BYTE PTR es:[rdi],dx
    de55:	5f                   	pop    rdi
    de56:	73 63                	jae    debb <_IO_stdin_used+0x1ebb>
    de58:	72 69                	jb     dec3 <_IO_stdin_used+0x1ec3>
    de5a:	70 74                	jo     ded0 <_IO_stdin_used+0x1ed0>
    de5c:	5f                   	pop    rdi
    de5d:	72 6f                	jb     dece <_IO_stdin_used+0x1ece>
    de5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de60:	74 3d                	je     de9f <_IO_stdin_used+0x1e9f>
    de62:	00 0a                	add    BYTE PTR [rdx],cl
    de64:	00 00                	add    BYTE PTR [rax],al
    de66:	00 00                	add    BYTE PTR [rax],al
    de68:	49 50                	rex.WB push r8
    de6a:	76 36                	jbe    dea2 <_IO_stdin_used+0x1ea2>
    de6c:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfee5 <_end+0x3e1a0e9d>
    de72:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250feeb <_end+0x723d0ea3>
    de78:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de79:	74 6f                	je     deea <_IO_stdin_used+0x1eea>
    de7b:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de7e:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    de81:	6d                   	ins    DWORD PTR es:[rdi],dx
    de82:	62                   	(bad)  
    de83:	65 72 20             	gs jb  dea6 <_IO_stdin_used+0x1ea6>
    de86:	3d 20 25 64 0a       	cmp    eax,0xa642520
    de8b:	00 00                	add    BYTE PTR [rax],al
    de8d:	00 00                	add    BYTE PTR [rax],al
    de8f:	00 5b 4e             	add    BYTE PTR [rbx+0x4e],bl
    de92:	20 25 73 20 53 20    	and    BYTE PTR [rip+0x20532073],ah        # 2053ff0b <_end+0x20400ec3>
    de98:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    de9b:	30 32                	xor    BYTE PTR [rdx],dh
    de9d:	78 20                	js     debf <_IO_stdin_used+0x1ebf>
    de9f:	45 20 30             	and    BYTE PTR [r8],r14b
    dea2:	78 25                	js     dec9 <_IO_stdin_used+0x1ec9>
    dea4:	30 32                	xor    BYTE PTR [rdx],dh
    dea6:	78 5d                	js     df05 <_IO_stdin_used+0x1f05>
    dea8:	0a 00                	or     al,BYTE PTR [rax]
    deaa:	00 00                	add    BYTE PTR [rax],al
    deac:	00 00                	add    BYTE PTR [rax],al
    deae:	00 00                	add    BYTE PTR [rax],al
    deb0:	53                   	push   rbx
    deb1:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
    deb4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    deb6:	74 61                	je     df19 <_IO_stdin_used+0x1f19>
    deb8:	74 69                	je     df23 <_IO_stdin_used+0x1f23>
    deba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    debb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    debc:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    debf:	75 6c                	jne    df2d <_IO_stdin_used+0x1f2d>
    dec1:	74 20                	je     dee3 <_IO_stdin_used+0x1ee3>
    dec3:	61                   	(bad)  
    dec4:	74 20                	je     dee6 <_IO_stdin_used+0x1ee6>
    dec6:	25 73 3a 20 61       	and    eax,0x61203a73
    decb:	70 70                	jo     df3d <_IO_stdin_used+0x1f3d>
    decd:	6c                   	ins    BYTE PTR es:[rdi],dx
    dece:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    ded5:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    ded8:	61                   	(bad)  
    ded9:	73 68                	jae    df43 <_IO_stdin_used+0x1f43>
    dedb:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    dedf:	46 75 6e             	rex.RX jne df50 <_IO_stdin_used+0x1f50>
    dee2:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    dee6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dee7:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    deea:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    deed:	72 61                	jb     df50 <_IO_stdin_used+0x1f50>
    deef:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    def2:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    def6:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # e96f <__GNU_EH_FRAME_HDR+0x8bb>
    defc:	00 00                	add    BYTE PTR [rax],al
    defe:	00 00                	add    BYTE PTR [rax],al
    df00:	5b                   	pop    rbx
    df01:	4e 20 25 73 20 53 20 	rex.WRX and BYTE PTR [rip+0x20532073],r12b        # 2053ff7b <_end+0x20400f33>
    df08:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df0b:	30 32                	xor    BYTE PTR [rdx],dh
    df0d:	78 20                	js     df2f <_IO_stdin_used+0x1f2f>
    df0f:	45 20 30             	and    BYTE PTR [r8],r14b
    df12:	78 25                	js     df39 <_IO_stdin_used+0x1f39>
    df14:	30 32                	xor    BYTE PTR [rdx],dh
    df16:	78 20                	js     df38 <_IO_stdin_used+0x1f38>
    df18:	28 2e                	sub    BYTE PTR [rsi],ch
    df1a:	2f                   	(bad)  
    df1b:	76 69                	jbe    df86 <_IO_stdin_used+0x1f86>
    df1d:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    df24:	28 2b 
    df26:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df29:	30 32                	xor    BYTE PTR [rdx],dh
    df2b:	78 29                	js     df56 <_IO_stdin_used+0x1f56>
    df2d:	29 5d 0a             	sub    DWORD PTR [rbp+0xa],ebx
	...
    df38:	55                   	push   rbp
    df39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3a:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    df3e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3f:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    df42:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df43:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    df47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df48:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    df4b:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    df4e:	6d                   	ins    DWORD PTR es:[rdi],dx
    df4f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df50:	72 79                	jb     dfcb <_IO_stdin_used+0x1fcb>
    df52:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    df55:	66 73 65             	data16 jae dfbd <_IO_stdin_used+0x1fbd>
    df58:	74 20                	je     df7a <_IO_stdin_used+0x1f7a>
    df5a:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df5d:	30 32                	xor    BYTE PTR [rdx],dh
    df5f:	78 0a                	js     df6b <_IO_stdin_used+0x1f6b>
    df61:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    df64:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    df6b:	44 
    df6c:	75 6d                	jne    dfdb <_IO_stdin_used+0x1fdb>
    df6e:	70 3a                	jo     dfaa <_IO_stdin_used+0x1faa>
    df70:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df73:	41 58                	pop    r8
    df75:	5d                   	pop    rbp
    df76:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f9c <_end+0x25651f54>
    df7c:	30 32                	xor    BYTE PTR [rdx],dh
    df7e:	78 0a                	js     df8a <_IO_stdin_used+0x1f8a>
    df80:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df83:	42 58                	rex.X pop rax
    df85:	5d                   	pop    rbp
    df86:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fac <_end+0x25651f64>
    df8c:	30 32                	xor    BYTE PTR [rdx],dh
    df8e:	78 0a                	js     df9a <_IO_stdin_used+0x1f9a>
    df90:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df93:	43 58                	rex.XB pop r8
    df95:	5d                   	pop    rbp
    df96:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fbc <_end+0x25651f74>
    df9c:	30 32                	xor    BYTE PTR [rdx],dh
    df9e:	78 0a                	js     dfaa <_IO_stdin_used+0x1faa>
    dfa0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfa3:	44 58                	rex.R pop rax
    dfa5:	5d                   	pop    rbp
    dfa6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fcc <_end+0x25651f84>
    dfac:	30 32                	xor    BYTE PTR [rdx],dh
    dfae:	78 0a                	js     dfba <_IO_stdin_used+0x1fba>
    dfb0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfb3:	53                   	push   rbx
    dfb4:	50                   	push   rax
    dfb5:	5d                   	pop    rbp
    dfb6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fdc <_end+0x25651f94>
    dfbc:	30 32                	xor    BYTE PTR [rdx],dh
    dfbe:	78 0a                	js     dfca <_IO_stdin_used+0x1fca>
    dfc0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfc3:	42 50                	rex.X push rax
    dfc5:	5d                   	pop    rbp
    dfc6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fec <_end+0x25651fa4>
    dfcc:	30 32                	xor    BYTE PTR [rdx],dh
    dfce:	78 0a                	js     dfda <_IO_stdin_used+0x1fda>
	...
    dfd8:	72 00                	jb     dfda <_IO_stdin_used+0x1fda>
    dfda:	2f                   	(bad)  
    dfdb:	75 73                	jne    e050 <_IO_stdin_used+0x2050>
    dfdd:	72 2f                	jb     e00e <_IO_stdin_used+0x200e>
    dfdf:	73 68                	jae    e049 <_IO_stdin_used+0x2049>
    dfe1:	61                   	(bad)  
    dfe2:	72 65                	jb     e049 <_IO_stdin_used+0x2049>
    dfe4:	2f                   	(bad)  
    dfe5:	76 69                	jbe    e050 <_IO_stdin_used+0x2050>
    dfe7:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    dfee:	6d 61 
    dff0:	70 2e                	jo     e020 <_IO_stdin_used+0x2020>
    dff2:	74 78                	je     e06c <_IO_stdin_used+0x206c>
    dff4:	74 00                	je     dff6 <_IO_stdin_used+0x1ff6>
    dff6:	00 00                	add    BYTE PTR [rax],al
    dff8:	46                   	rex.RX
    dff9:	41 54                	push   r12
    dffb:	41                   	rex.B
    dffc:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    e000:	52                   	push   rdx
    e001:	4f 52                	rex.WRXB push r10
    e003:	3a 20                	cmp    ah,BYTE PTR [rax]
    e005:	6d                   	ins    DWORD PTR es:[rdi],dx
    e006:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e008:	6d                   	ins    DWORD PTR es:[rdi],dx
    e009:	61                   	(bad)  
    e00a:	70 2e                	jo     e03a <_IO_stdin_used+0x203a>
    e00c:	74 78                	je     e086 <_IO_stdin_used+0x2086>
    e00e:	74 20                	je     e030 <_IO_stdin_used+0x2030>
    e010:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e011:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e012:	74 20                	je     e034 <_IO_stdin_used+0x2034>
    e014:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e016:	75 6e                	jne    e086 <_IO_stdin_used+0x2086>
    e018:	64 2e 50             	fs cs push rax
    e01b:	6c                   	ins    BYTE PTR es:[rdi],dx
    e01c:	65 61                	gs (bad) 
    e01e:	73 65                	jae    e085 <_IO_stdin_used+0x2085>
    e020:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e023:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e026:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e027:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    e02a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e02b:	5f                   	pop    rdi
    e02c:	6d                   	ins    DWORD PTR es:[rdi],dx
    e02d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e02f:	5f                   	pop    rdi
    e030:	6d                   	ins    DWORD PTR es:[rdi],dx
    e031:	61                   	(bad)  
    e032:	70 2e                	jo     e062 <_IO_stdin_used+0x2062>
    e034:	70 79                	jo     e0af <_IO_stdin_used+0x20af>
    e036:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    e039:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    e03d:	70 79                	jo     e0b8 <__GNU_EH_FRAME_HDR+0x4>
    e03f:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e042:	6d                   	ins    DWORD PTR es:[rdi],dx
    e043:	6d                   	ins    DWORD PTR es:[rdi],dx
    e044:	61                   	(bad)  
    e045:	70 2e                	jo     e075 <_IO_stdin_used+0x2075>
    e047:	74 78                	je     e0c1 <__GNU_EH_FRAME_HDR+0xd>
    e049:	74 20                	je     e06b <_IO_stdin_used+0x206b>
    e04b:	74 6f                	je     e0bc <__GNU_EH_FRAME_HDR+0x8>
    e04d:	20 2f                	and    BYTE PTR [rdi],ch
    e04f:	75 73                	jne    e0c4 <__GNU_EH_FRAME_HDR+0x10>
    e051:	72 2f                	jb     e082 <_IO_stdin_used+0x2082>
    e053:	73 68                	jae    e0bd <__GNU_EH_FRAME_HDR+0x9>
    e055:	61                   	(bad)  
    e056:	72 65                	jb     e0bd <__GNU_EH_FRAME_HDR+0x9>
    e058:	2f                   	(bad)  
    e059:	76 69                	jbe    e0c4 <__GNU_EH_FRAME_HDR+0x10>
    e05b:	67 69 6c 00 0a 00 20 	imul   ebp,DWORD PTR [eax+eax*1+0xa],0x2000
    e062:	00 00 
    e064:	00 00                	add    BYTE PTR [rax],al
    e066:	00 00                	add    BYTE PTR [rax],al
    e068:	2f                   	(bad)  
    e069:	75 73                	jne    e0de <__GNU_EH_FRAME_HDR+0x2a>
    e06b:	72 2f                	jb     e09c <_IO_stdin_used+0x209c>
    e06d:	73 68                	jae    e0d7 <__GNU_EH_FRAME_HDR+0x23>
    e06f:	61                   	(bad)  
    e070:	72 65                	jb     e0d7 <__GNU_EH_FRAME_HDR+0x23>
    e072:	2f                   	(bad)  
    e073:	76 69                	jbe    e0de <__GNU_EH_FRAME_HDR+0x2a>
    e075:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e07c:	74 73 
    e07e:	2f                   	(bad)  
    e07f:	70 70                	jo     e0f1 <__GNU_EH_FRAME_HDR+0x3d>
    e081:	73 2f                	jae    e0b2 <_IO_stdin_used+0x20b2>
    e083:	70 70                	jo     e0f5 <__GNU_EH_FRAME_HDR+0x41>
    e085:	73 2e                	jae    e0b5 <__GNU_EH_FRAME_HDR+0x1>
    e087:	6c                   	ins    BYTE PTR es:[rdi],dx
    e088:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e089:	67 2e 25 64 2e 74 78 	addr32 cs and eax,0x78742e64
    e090:	74 00                	je     e092 <_IO_stdin_used+0x2092>
    e092:	72 00                	jb     e094 <_IO_stdin_used+0x2094>
    e094:	48                   	rex.W
    e095:	65 72 65             	gs jb  e0fd <__GNU_EH_FRAME_HDR+0x49>
    e098:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    e09b:	61                   	(bad)  
    e09c:	00 44 75 6d          	add    BYTE PTR [rbp+rsi*2+0x6d],al
    e0a0:	70 69                	jo     e10b <__GNU_EH_FRAME_HDR+0x57>
    e0a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0a3:	67 20 74 6f 20       	and    BYTE PTR [edi+ebp*2+0x20],dh
    e0a8:	25 73 0a 00 25       	and    eax,0x25000a73
    e0ad:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0ae:	75 2c                	jne    e0dc <__GNU_EH_FRAME_HDR+0x28>
    e0b0:	25                   	.byte 0x25
    e0b1:	64 0a 00             	or     al,BYTE PTR fs:[rax]

Disassembly of section .eh_frame_hdr:

000000000000e0b4 <__GNU_EH_FRAME_HDR>:
    e0b4:	01 1b                	add    DWORD PTR [rbx],ebx
    e0b6:	03 3b                	add    edi,DWORD PTR [rbx]
    e0b8:	b8 03 00 00 76       	mov    eax,0x76000003
    e0bd:	00 00                	add    BYTE PTR [rax],al
    e0bf:	00 6c 3f ff          	add    BYTE PTR [rdi+rdi*1-0x1],ch
    e0c3:	ff                   	(bad)  
    e0c4:	ec                   	in     al,dx
    e0c5:	03 00                	add    eax,DWORD PTR [rax]
    e0c7:	00 bc 43 ff ff 14 04 	add    BYTE PTR [rbx+rax*2+0x414ffff],bh
    e0ce:	00 00                	add    BYTE PTR [rax],al
    e0d0:	cc                   	int3   
    e0d1:	43 ff                	rex.XB (bad) 
    e0d3:	ff 2c 04             	jmp    FWORD PTR [rsp+rax*1]
    e0d6:	00 00                	add    BYTE PTR [rax],al
    e0d8:	0c 48                	or     al,0x48
    e0da:	ff                   	(bad)  
    e0db:	ff d4                	call   rsp
    e0dd:	03 00                	add    eax,DWORD PTR [rax]
    e0df:	00 f5                	add    ch,dh
    e0e1:	48 ff                	rex.W (bad) 
    e0e3:	ff 44 04 00          	inc    DWORD PTR [rsp+rax*1+0x0]
    e0e7:	00 2f                	add    BYTE PTR [rdi],ch
    e0e9:	49 ff                	rex.WB (bad) 
    e0eb:	ff 64 04 00          	jmp    QWORD PTR [rsp+rax*1+0x0]
    e0ef:	00 85 4a ff ff 8c    	add    BYTE PTR [rbp-0x730000b6],al
    e0f5:	04 00                	add    al,0x0
    e0f7:	00 79 4d             	add    BYTE PTR [rcx+0x4d],bh
    e0fa:	ff                   	(bad)  
    e0fb:	ff ac 04 00 00 8c 4e 	jmp    FWORD PTR [rsp+rax*1+0x4e8c0000]
    e102:	ff                   	(bad)  
    e103:	ff cc                	dec    esp
    e105:	04 00                	add    al,0x0
    e107:	00 3a                	add    BYTE PTR [rdx],bh
    e109:	4f ff                	rex.WRXB (bad) 
    e10b:	ff                   	(bad)  
    e10c:	ec                   	in     al,dx
    e10d:	04 00                	add    al,0x0
    e10f:	00 e0                	add    al,ah
    e111:	4f ff                	rex.WRXB (bad) 
    e113:	ff 0c 05 00 00 75 50 	dec    DWORD PTR [rax*1+0x50750000]
    e11a:	ff                   	(bad)  
    e11b:	ff 2c 05 00 00 09 51 	jmp    FWORD PTR [rax*1+0x51090000]
    e122:	ff                   	(bad)  
    e123:	ff 4c 05 00          	dec    DWORD PTR [rbp+rax*1+0x0]
    e127:	00 d5                	add    ch,dl
    e129:	52                   	push   rdx
    e12a:	ff                   	(bad)  
    e12b:	ff                   	(bad)  
    e12c:	78 05                	js     e133 <__GNU_EH_FRAME_HDR+0x7f>
    e12e:	00 00                	add    BYTE PTR [rax],al
    e130:	a9 53 ff ff 9c       	test   eax,0x9cffff53
    e135:	05 00 00 70 54       	add    eax,0x54700000
    e13a:	ff                   	(bad)  
    e13b:	ff c0                	inc    eax
    e13d:	05 00 00 c3 54       	add    eax,0x54c30000
    e142:	ff                   	(bad)  
    e143:	ff e0                	jmp    rax
    e145:	05 00 00 f6 54       	add    eax,0x54f60000
    e14a:	ff                   	(bad)  
    e14b:	ff 00                	inc    DWORD PTR [rax]
    e14d:	06                   	(bad)  
    e14e:	00 00                	add    BYTE PTR [rax],al
    e150:	17                   	(bad)  
    e151:	55                   	push   rbp
    e152:	ff                   	(bad)  
    e153:	ff 20                	jmp    QWORD PTR [rax]
    e155:	06                   	(bad)  
    e156:	00 00                	add    BYTE PTR [rax],al
    e158:	7f 55                	jg     e1af <__GNU_EH_FRAME_HDR+0xfb>
    e15a:	ff                   	(bad)  
    e15b:	ff 44 06 00          	inc    DWORD PTR [rsi+rax*1+0x0]
    e15f:	00 a4 59 ff ff 64 06 	add    BYTE PTR [rcx+rbx*2+0x664ffff],ah
    e166:	00 00                	add    BYTE PTR [rax],al
    e168:	01 5b ff             	add    DWORD PTR [rbx-0x1],ebx
    e16b:	ff 84 06 00 00 45 63 	inc    DWORD PTR [rsi+rax*1+0x63450000]
    e172:	ff                   	(bad)  
    e173:	ff a4 06 00 00 01 6c 	jmp    QWORD PTR [rsi+rax*1+0x6c010000]
    e17a:	ff                   	(bad)  
    e17b:	ff cc                	dec    esp
    e17d:	06                   	(bad)  
    e17e:	00 00                	add    BYTE PTR [rax],al
    e180:	56                   	push   rsi
    e181:	6d                   	ins    DWORD PTR es:[rdi],dx
    e182:	ff                   	(bad)  
    e183:	ff                   	(bad)  
    e184:	ec                   	in     al,dx
    e185:	06                   	(bad)  
    e186:	00 00                	add    BYTE PTR [rax],al
    e188:	55                   	push   rbp
    e189:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e18a:	ff                   	(bad)  
    e18b:	ff 0c 07             	dec    DWORD PTR [rdi+rax*1]
    e18e:	00 00                	add    BYTE PTR [rax],al
    e190:	41 6f                	rex.B outs dx,DWORD PTR ds:[rsi]
    e192:	ff                   	(bad)  
    e193:	ff 2c 07             	jmp    FWORD PTR [rdi+rax*1]
    e196:	00 00                	add    BYTE PTR [rax],al
    e198:	f3 72 ff             	repz jb e19a <__GNU_EH_FRAME_HDR+0xe6>
    e19b:	ff 4c 07 00          	dec    DWORD PTR [rdi+rax*1+0x0]
    e19f:	00 76 73             	add    BYTE PTR [rsi+0x73],dh
    e1a2:	ff                   	(bad)  
    e1a3:	ff 6c 07 00          	jmp    FWORD PTR [rdi+rax*1+0x0]
    e1a7:	00 a0 75 ff ff 94    	add    BYTE PTR [rax-0x6b00008b],ah
    e1ad:	07                   	(bad)  
    e1ae:	00 00                	add    BYTE PTR [rax],al
    e1b0:	dd 77 ff             	fnsave [rdi-0x1]
    e1b3:	ff                   	(bad)  
    e1b4:	b8 07 00 00 43       	mov    eax,0x43000007
    e1b9:	78 ff                	js     e1ba <__GNU_EH_FRAME_HDR+0x106>
    e1bb:	ff                   	(bad)  
    e1bc:	d8 07                	fadd   DWORD PTR [rdi]
    e1be:	00 00                	add    BYTE PTR [rax],al
    e1c0:	5a                   	pop    rdx
    e1c1:	78 ff                	js     e1c2 <__GNU_EH_FRAME_HDR+0x10e>
    e1c3:	ff                   	(bad)  
    e1c4:	f8                   	clc    
    e1c5:	07                   	(bad)  
    e1c6:	00 00                	add    BYTE PTR [rax],al
    e1c8:	ab                   	stos   DWORD PTR es:[rdi],eax
    e1c9:	78 ff                	js     e1ca <__GNU_EH_FRAME_HDR+0x116>
    e1cb:	ff 1c 08             	call   FWORD PTR [rax+rcx*1]
    e1ce:	00 00                	add    BYTE PTR [rax],al
    e1d0:	e8 7e ff ff 40       	call   4100e153 <_end+0x40ecf10b>
    e1d5:	08 00                	or     BYTE PTR [rax],al
    e1d7:	00 02                	add    BYTE PTR [rdx],al
    e1d9:	7f ff                	jg     e1da <__GNU_EH_FRAME_HDR+0x126>
    e1db:	ff 60 08             	jmp    QWORD PTR [rax+0x8]
    e1de:	00 00                	add    BYTE PTR [rax],al
    e1e0:	2b 7f ff             	sub    edi,DWORD PTR [rdi-0x1]
    e1e3:	ff 80 08 00 00 5b    	inc    DWORD PTR [rax+0x5b000008]
    e1e9:	7f ff                	jg     e1ea <__GNU_EH_FRAME_HDR+0x136>
    e1eb:	ff a0 08 00 00 92    	jmp    QWORD PTR [rax-0x6dfffff8]
    e1f1:	7f ff                	jg     e1f2 <__GNU_EH_FRAME_HDR+0x13e>
    e1f3:	ff                   	(bad)  
    e1f4:	bc 08 00 00 d7       	mov    esp,0xd7000008
    e1f9:	80 ff ff             	cmp    bh,0xff
    e1fc:	dc 08                	fmul   QWORD PTR [rax]
    e1fe:	00 00                	add    BYTE PTR [rax],al
    e200:	37                   	(bad)  
    e201:	82                   	(bad)  
    e202:	ff                   	(bad)  
    e203:	ff                   	(bad)  
    e204:	fc                   	cld    
    e205:	08 00                	or     BYTE PTR [rax],al
    e207:	00 98 82 ff ff 1c    	add    BYTE PTR [rax+0x1cffff82],bl
    e20d:	09 00                	or     DWORD PTR [rax],eax
    e20f:	00 d1                	add    cl,dl
    e211:	82                   	(bad)  
    e212:	ff                   	(bad)  
    e213:	ff                   	(bad)  
    e214:	3c 09                	cmp    al,0x9
    e216:	00 00                	add    BYTE PTR [rax],al
    e218:	8f 83 ff ff 5c 09    	pop    QWORD PTR [rbx+0x95cffff]
    e21e:	00 00                	add    BYTE PTR [rax],al
    e220:	4d 86 ff             	rex.WRB xchg r15b,r15b
    e223:	ff                   	(bad)  
    e224:	7c 09                	jl     e22f <__GNU_EH_FRAME_HDR+0x17b>
    e226:	00 00                	add    BYTE PTR [rax],al
    e228:	45 88 ff             	mov    r15b,r15b
    e22b:	ff 9c 09 00 00 9f 88 	call   FWORD PTR [rcx+rcx*1-0x77610000]
    e232:	ff                   	(bad)  
    e233:	ff                   	(bad)  
    e234:	bc 09 00 00 85       	mov    esp,0x85000009
    e239:	8b ff                	mov    edi,edi
    e23b:	ff                   	(bad)  
    e23c:	dc 09                	fmul   QWORD PTR [rcx]
    e23e:	00 00                	add    BYTE PTR [rax],al
    e240:	d6                   	(bad)  
    e241:	8f                   	(bad)  
    e242:	ff                   	(bad)  
    e243:	ff                   	(bad)  
    e244:	fc                   	cld    
    e245:	09 00                	or     DWORD PTR [rax],eax
    e247:	00 00                	add    BYTE PTR [rax],al
    e249:	90                   	nop
    e24a:	ff                   	(bad)  
    e24b:	ff 18                	call   FWORD PTR [rax]
    e24d:	0a 00                	or     al,BYTE PTR [rax]
    e24f:	00 b2 91 ff ff 3c    	add    BYTE PTR [rdx+0x3cffff91],dh
    e255:	0a 00                	or     al,BYTE PTR [rax]
    e257:	00 c9                	add    cl,cl
    e259:	91                   	xchg   ecx,eax
    e25a:	ff                   	(bad)  
    e25b:	ff 5c 0a 00          	call   FWORD PTR [rdx+rcx*1+0x0]
    e25f:	00 18                	add    BYTE PTR [rax],bl
    e261:	92                   	xchg   edx,eax
    e262:	ff                   	(bad)  
    e263:	ff                   	(bad)  
    e264:	7c 0a                	jl     e270 <__GNU_EH_FRAME_HDR+0x1bc>
    e266:	00 00                	add    BYTE PTR [rax],al
    e268:	65 92                	gs xchg edx,eax
    e26a:	ff                   	(bad)  
    e26b:	ff 9c 0a 00 00 dc 93 	call   FWORD PTR [rdx+rcx*1-0x6c240000]
    e272:	ff                   	(bad)  
    e273:	ff                   	(bad)  
    e274:	b8 0a 00 00 78       	mov    eax,0x7800000a
    e279:	94                   	xchg   esp,eax
    e27a:	ff                   	(bad)  
    e27b:	ff                   	(bad)  
    e27c:	dc 0a                	fmul   QWORD PTR [rdx]
    e27e:	00 00                	add    BYTE PTR [rax],al
    e280:	66 96                	xchg   si,ax
    e282:	ff                   	(bad)  
    e283:	ff                   	(bad)  
    e284:	fc                   	cld    
    e285:	0a 00                	or     al,BYTE PTR [rax]
    e287:	00 4e 98             	add    BYTE PTR [rsi-0x68],cl
    e28a:	ff                   	(bad)  
    e28b:	ff 1c 0b             	call   FWORD PTR [rbx+rcx*1]
    e28e:	00 00                	add    BYTE PTR [rax],al
    e290:	ba 98 ff ff 3c       	mov    edx,0x3cffff98
    e295:	0b 00                	or     eax,DWORD PTR [rax]
    e297:	00 2c 99             	add    BYTE PTR [rcx+rbx*4],ch
    e29a:	ff                   	(bad)  
    e29b:	ff 5c 0b 00          	call   FWORD PTR [rbx+rcx*1+0x0]
    e29f:	00 3d 9a ff ff 7c    	add    BYTE PTR [rip+0x7cffff9a],bh        # 7d00e23f <_end+0x7cecf1f7>
    e2a5:	0b 00                	or     eax,DWORD PTR [rax]
    e2a7:	00 99 9a ff ff 9c    	add    BYTE PTR [rcx-0x63000066],bl
    e2ad:	0b 00                	or     eax,DWORD PTR [rax]
    e2af:	00 d7                	add    bh,dl
    e2b1:	9a                   	(bad)  
    e2b2:	ff                   	(bad)  
    e2b3:	ff                   	(bad)  
    e2b4:	bc 0b 00 00 5d       	mov    esp,0x5d00000b
    e2b9:	9b                   	fwait
    e2ba:	ff                   	(bad)  
    e2bb:	ff                   	(bad)  
    e2bc:	dc 0b                	fmul   QWORD PTR [rbx]
    e2be:	00 00                	add    BYTE PTR [rax],al
    e2c0:	3c 9c                	cmp    al,0x9c
    e2c2:	ff                   	(bad)  
    e2c3:	ff                   	(bad)  
    e2c4:	fc                   	cld    
    e2c5:	0b 00                	or     eax,DWORD PTR [rax]
    e2c7:	00 b0 9c ff ff 1c    	add    BYTE PTR [rax+0x1cffff9c],dh
    e2cd:	0c 00                	or     al,0x0
    e2cf:	00 4c 9d ff          	add    BYTE PTR [rbp+rbx*4-0x1],cl
    e2d3:	ff                   	(bad)  
    e2d4:	3c 0c                	cmp    al,0xc
    e2d6:	00 00                	add    BYTE PTR [rax],al
    e2d8:	75 9d                	jne    e277 <__GNU_EH_FRAME_HDR+0x1c3>
    e2da:	ff                   	(bad)  
    e2db:	ff 5c 0c 00          	call   FWORD PTR [rsp+rcx*1+0x0]
    e2df:	00 9e 9d ff ff 7c    	add    BYTE PTR [rsi+0x7cffff9d],bl
    e2e5:	0c 00                	or     al,0x0
    e2e7:	00 f1                	add    cl,dh
    e2e9:	9e                   	sahf   
    e2ea:	ff                   	(bad)  
    e2eb:	ff a4 0c 00 00 04 a0 	jmp    QWORD PTR [rsp+rcx*1-0x5ffc0000]
    e2f2:	ff                   	(bad)  
    e2f3:	ff c4                	inc    esp
    e2f5:	0c 00                	or     al,0x0
    e2f7:	00 fd                	add    ch,bh
    e2f9:	a0 ff ff e4 0c 00 00 	movabs al,ds:0xa19f00000ce4ffff
    e300:	9f a1 
    e302:	ff                   	(bad)  
    e303:	ff 04 0d 00 00 bd a1 	inc    DWORD PTR [rcx*1-0x5e430000]
    e30a:	ff                   	(bad)  
    e30b:	ff 24 0d 00 00 20 a3 	jmp    QWORD PTR [rcx*1-0x5ce00000]
    e312:	ff                   	(bad)  
    e313:	ff 44 0d 00          	inc    DWORD PTR [rbp+rcx*1+0x0]
    e317:	00 31                	add    BYTE PTR [rcx],dh
    e319:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e31a:	ff                   	(bad)  
    e31b:	ff 74 0d 00          	push   QWORD PTR [rbp+rcx*1+0x0]
    e31f:	00 e3                	add    bl,ah
    e321:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e322:	ff                   	(bad)  
    e323:	ff 94 0d 00 00 88 a6 	call   QWORD PTR [rbp+rcx*1-0x59780000]
    e32a:	ff                   	(bad)  
    e32b:	ff b4 0d 00 00 1c a7 	push   QWORD PTR [rbp+rcx*1-0x58e40000]
    e332:	ff                   	(bad)  
    e333:	ff                   	(bad)  
    e334:	dc 0d 00 00 f1 a7    	fmul   QWORD PTR [rip+0xffffffffa7f10000]        # ffffffffa7f1e33a <_end+0xffffffffa7ddf2f2>
    e33a:	ff                   	(bad)  
    e33b:	ff                   	(bad)  
    e33c:	fc                   	cld    
    e33d:	0d 00 00 d0 a8       	or     eax,0xa8d00000
    e342:	ff                   	(bad)  
    e343:	ff 1c 0e             	call   FWORD PTR [rsi+rcx*1]
    e346:	00 00                	add    BYTE PTR [rax],al
    e348:	4d a9 ff ff 3c 0e    	rex.WRB test rax,0xe3cffff
    e34e:	00 00                	add    BYTE PTR [rax],al
    e350:	83 aa ff ff 5c 0e 00 	sub    DWORD PTR [rdx+0xe5cffff],0x0
    e357:	00 01                	add    BYTE PTR [rcx],al
    e359:	ab                   	stos   DWORD PTR es:[rdi],eax
    e35a:	ff                   	(bad)  
    e35b:	ff                   	(bad)  
    e35c:	7c 0e                	jl     e36c <__GNU_EH_FRAME_HDR+0x2b8>
    e35e:	00 00                	add    BYTE PTR [rax],al
    e360:	3a ad ff ff 9c 0e    	cmp    ch,BYTE PTR [rbp+0xe9cffff]
    e366:	00 00                	add    BYTE PTR [rax],al
    e368:	03 ae ff ff bc 0e    	add    ebp,DWORD PTR [rsi+0xebcffff]
    e36e:	00 00                	add    BYTE PTR [rax],al
    e370:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    e371:	af                   	scas   eax,DWORD PTR es:[rdi]
    e372:	ff                   	(bad)  
    e373:	ff                   	(bad)  
    e374:	dc 0e                	fmul   QWORD PTR [rsi]
    e376:	00 00                	add    BYTE PTR [rax],al
    e378:	b7 b0                	mov    bh,0xb0
    e37a:	ff                   	(bad)  
    e37b:	ff                   	(bad)  
    e37c:	fc                   	cld    
    e37d:	0e                   	(bad)  
    e37e:	00 00                	add    BYTE PTR [rax],al
    e380:	1d b1 ff ff 1c       	sbb    eax,0x1cffffb1
    e385:	0f 00 00             	sldt   WORD PTR [rax]
    e388:	92                   	xchg   edx,eax
    e389:	b1 ff                	mov    cl,0xff
    e38b:	ff                   	(bad)  
    e38c:	3c 0f                	cmp    al,0xf
    e38e:	00 00                	add    BYTE PTR [rax],al
    e390:	6d                   	ins    DWORD PTR es:[rdi],dx
    e391:	b2 ff                	mov    dl,0xff
    e393:	ff 5c 0f 00          	call   FWORD PTR [rdi+rcx*1+0x0]
    e397:	00 df                	add    bh,bl
    e399:	b3 ff                	mov    bl,0xff
    e39b:	ff                   	(bad)  
    e39c:	7c 0f                	jl     e3ad <__GNU_EH_FRAME_HDR+0x2f9>
    e39e:	00 00                	add    BYTE PTR [rax],al
    e3a0:	4b b4 ff             	rex.WXB mov r12b,0xff
    e3a3:	ff 9c 0f 00 00 cb b4 	call   FWORD PTR [rdi+rcx*1-0x4b350000]
    e3aa:	ff                   	(bad)  
    e3ab:	ff                   	(bad)  
    e3ac:	bc 0f 00 00 e1       	mov    esp,0xe100000f
    e3b1:	b4 ff                	mov    ah,0xff
    e3b3:	ff                   	(bad)  
    e3b4:	dc 0f                	fmul   QWORD PTR [rdi]
    e3b6:	00 00                	add    BYTE PTR [rax],al
    e3b8:	1b b6 ff ff 00 10    	sbb    esi,DWORD PTR [rsi+0x1000ffff]
    e3be:	00 00                	add    BYTE PTR [rax],al
    e3c0:	7f b6                	jg     e378 <__GNU_EH_FRAME_HDR+0x2c4>
    e3c2:	ff                   	(bad)  
    e3c3:	ff 20                	jmp    QWORD PTR [rax]
    e3c5:	10 00                	adc    BYTE PTR [rax],al
    e3c7:	00 d2                	add    dl,dl
    e3c9:	b6 ff                	mov    dh,0xff
    e3cb:	ff 40 10             	inc    DWORD PTR [rax+0x10]
    e3ce:	00 00                	add    BYTE PTR [rax],al
    e3d0:	83 b7 ff ff 60 10 00 	xor    DWORD PTR [rdi+0x1060ffff],0x0
    e3d7:	00 4e b8             	add    BYTE PTR [rsi-0x48],cl
    e3da:	ff                   	(bad)  
    e3db:	ff 80 10 00 00 a3    	inc    DWORD PTR [rax-0x5cfffff0]
    e3e1:	b8 ff ff a0 10       	mov    eax,0x10a0ffff
    e3e6:	00 00                	add    BYTE PTR [rax],al
    e3e8:	d3 b8 ff ff c0 10    	sar    DWORD PTR [rax+0x10c0ffff],cl
    e3ee:	00 00                	add    BYTE PTR [rax],al
    e3f0:	3a b9 ff ff e0 10    	cmp    bh,BYTE PTR [rcx+0x10e0ffff]
    e3f6:	00 00                	add    BYTE PTR [rax],al
    e3f8:	72 c8                	jb     e3c2 <__GNU_EH_FRAME_HDR+0x30e>
    e3fa:	ff                   	(bad)  
    e3fb:	ff 04 11             	inc    DWORD PTR [rcx+rdx*1]
    e3fe:	00 00                	add    BYTE PTR [rax],al
    e400:	b8 c8 ff ff 24       	mov    eax,0x24ffffc8
    e405:	11 00                	adc    DWORD PTR [rax],eax
    e407:	00 f3                	add    bl,dh
    e409:	ca ff ff             	retf   0xffff
    e40c:	4c 11 00             	adc    QWORD PTR [rax],r8
    e40f:	00 98 cc ff ff 6c    	add    BYTE PTR [rax+0x6cffffcc],bl
    e415:	11 00                	adc    DWORD PTR [rax],eax
    e417:	00 aa cd ff ff 8c    	add    BYTE PTR [rdx-0x73000033],ch
    e41d:	11 00                	adc    DWORD PTR [rax],eax
    e41f:	00 66 ce             	add    BYTE PTR [rsi-0x32],ah
    e422:	ff                   	(bad)  
    e423:	ff b4 11 00 00 01 d0 	push   QWORD PTR [rcx+rdx*1-0x2fff0000]
    e42a:	ff                   	(bad)  
    e42b:	ff                   	(bad)  
    e42c:	dc 11                	fcom   QWORD PTR [rcx]
    e42e:	00 00                	add    BYTE PTR [rax],al
    e430:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    e431:	d0 ff                	sar    bh,1
    e433:	ff                   	(bad)  
    e434:	fc                   	cld    
    e435:	11 00                	adc    DWORD PTR [rax],eax
    e437:	00 e9                	add    cl,ch
    e439:	d1 ff                	sar    edi,1
    e43b:	ff 1c 12             	call   FWORD PTR [rdx+rdx*1]
    e43e:	00 00                	add    BYTE PTR [rax],al
    e440:	dc d2                	(bad)  
    e442:	ff                   	(bad)  
    e443:	ff                   	(bad)  
    e444:	3c 12                	cmp    al,0x12
    e446:	00 00                	add    BYTE PTR [rax],al
    e448:	4c d3 ff             	rex.WR sar rdi,cl
    e44b:	ff 5c 12 00          	call   FWORD PTR [rdx+rdx*1+0x0]
    e44f:	00 f1                	add    cl,dh
    e451:	d5                   	(bad)  
    e452:	ff                   	(bad)  
    e453:	ff                   	(bad)  
    e454:	7c 12                	jl     e468 <__GNU_EH_FRAME_HDR+0x3b4>
    e456:	00 00                	add    BYTE PTR [rax],al
    e458:	5b                   	pop    rbx
    e459:	d6                   	(bad)  
    e45a:	ff                   	(bad)  
    e45b:	ff 9c 12 00 00 c9 d6 	call   FWORD PTR [rdx+rdx*1-0x29370000]
    e462:	ff                   	(bad)  
    e463:	ff                   	(bad)  
    e464:	bc 12 00 00 56       	mov    esp,0x56000012
    e469:	d8 ff                	fdivr  st,st(7)
    e46b:	ff e4                	jmp    rsp
    e46d:	12 00                	adc    al,BYTE PTR [rax]
	...

Disassembly of section .eh_frame:

000000000000e470 <__FRAME_END__-0xf48>:
    e470:	14 00                	adc    al,0x0
    e472:	00 00                	add    BYTE PTR [rax],al
    e474:	00 00                	add    BYTE PTR [rax],al
    e476:	00 00                	add    BYTE PTR [rax],al
    e478:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e47b:	00 01                	add    BYTE PTR [rcx],al
    e47d:	78 10                	js     e48f <__GNU_EH_FRAME_HDR+0x3db>
    e47f:	01 1b                	add    DWORD PTR [rbx],ebx
    e481:	0c 07                	or     al,0x7
    e483:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e489:	00 00                	add    BYTE PTR [rax],al
    e48b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e48e:	00 00                	add    BYTE PTR [rax],al
    e490:	30 44 ff ff          	xor    BYTE PTR [rdi+rdi*8-0x1],al
    e494:	26 00 00             	es add BYTE PTR [rax],al
    e497:	00 00                	add    BYTE PTR [rax],al
    e499:	44 07                	rex.R (bad) 
    e49b:	10 00                	adc    BYTE PTR [rax],al
    e49d:	00 00                	add    BYTE PTR [rax],al
    e49f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e4a2:	00 00                	add    BYTE PTR [rax],al
    e4a4:	34 00                	xor    al,0x0
    e4a6:	00 00                	add    BYTE PTR [rax],al
    e4a8:	78 3b                	js     e4e5 <__GNU_EH_FRAME_HDR+0x431>
    e4aa:	ff                   	(bad)  
    e4ab:	ff 50 04             	call   QWORD PTR [rax+0x4]
    e4ae:	00 00                	add    BYTE PTR [rax],al
    e4b0:	00 0e                	add    BYTE PTR [rsi],cl
    e4b2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e4b5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e4b8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e4bb:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e4be:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e4c0:	2a 33                	sub    dh,BYTE PTR [rbx]
    e4c2:	24 22                	and    al,0x22
    e4c4:	00 00                	add    BYTE PTR [rax],al
    e4c6:	00 00                	add    BYTE PTR [rax],al
    e4c8:	14 00                	adc    al,0x0
    e4ca:	00 00                	add    BYTE PTR [rax],al
    e4cc:	5c                   	pop    rsp
    e4cd:	00 00                	add    BYTE PTR [rax],al
    e4cf:	00 a0 3f ff ff 10    	add    BYTE PTR [rax+0x10ffff3f],ah
	...
    e4dd:	00 00                	add    BYTE PTR [rax],al
    e4df:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e4e2:	00 00                	add    BYTE PTR [rax],al
    e4e4:	74 00                	je     e4e6 <__GNU_EH_FRAME_HDR+0x432>
    e4e6:	00 00                	add    BYTE PTR [rax],al
    e4e8:	98                   	cwde   
    e4e9:	3f                   	(bad)  
    e4ea:	ff                   	(bad)  
    e4eb:	ff 40 04             	inc    DWORD PTR [rax+0x4]
	...
    e4f6:	00 00                	add    BYTE PTR [rax],al
    e4f8:	1c 00                	sbb    al,0x0
    e4fa:	00 00                	add    BYTE PTR [rax],al
    e4fc:	8c 00                	mov    WORD PTR [rax],es
    e4fe:	00 00                	add    BYTE PTR [rax],al
    e500:	a9 44 ff ff 3a       	test   eax,0x3affff44
    e505:	00 00                	add    BYTE PTR [rax],al
    e507:	00 00                	add    BYTE PTR [rax],al
    e509:	45 0e                	rex.RB (bad) 
    e50b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e511:	71 0c                	jno    e51f <__GNU_EH_FRAME_HDR+0x46b>
    e513:	07                   	(bad)  
    e514:	08 00                	or     BYTE PTR [rax],al
    e516:	00 00                	add    BYTE PTR [rax],al
    e518:	24 00                	and    al,0x0
    e51a:	00 00                	add    BYTE PTR [rax],al
    e51c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e51d:	00 00                	add    BYTE PTR [rax],al
    e51f:	00 c3                	add    bl,al
    e521:	44 ff                	rex.R (bad) 
    e523:	ff 56 01             	call   QWORD PTR [rsi+0x1]
    e526:	00 00                	add    BYTE PTR [rax],al
    e528:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e52b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e531:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e535:	48 01 0c 07          	add    QWORD PTR [rdi+rax*1],rcx
    e539:	08 00                	or     BYTE PTR [rax],al
    e53b:	00 00                	add    BYTE PTR [rax],al
    e53d:	00 00                	add    BYTE PTR [rax],al
    e53f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e542:	00 00                	add    BYTE PTR [rax],al
    e544:	d4                   	(bad)  
    e545:	00 00                	add    BYTE PTR [rax],al
    e547:	00 f1                	add    cl,dh
    e549:	45 ff                	rex.RB (bad) 
    e54b:	ff f4                	push   rsp
    e54d:	02 00                	add    al,BYTE PTR [rax]
    e54f:	00 00                	add    BYTE PTR [rax],al
    e551:	45 0e                	rex.RB (bad) 
    e553:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e559:	03 eb                	add    ebp,ebx
    e55b:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e55e:	08 00                	or     BYTE PTR [rax],al
    e560:	1c 00                	sbb    al,0x0
    e562:	00 00                	add    BYTE PTR [rax],al
    e564:	f4                   	hlt    
    e565:	00 00                	add    BYTE PTR [rax],al
    e567:	00 c5                	add    ch,al
    e569:	48 ff                	rex.W (bad) 
    e56b:	ff 13                	call   QWORD PTR [rbx]
    e56d:	01 00                	add    DWORD PTR [rax],eax
    e56f:	00 00                	add    BYTE PTR [rax],al
    e571:	45 0e                	rex.RB (bad) 
    e573:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e579:	03 0a                	add    ecx,DWORD PTR [rdx]
    e57b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e57e:	08 00                	or     BYTE PTR [rax],al
    e580:	1c 00                	sbb    al,0x0
    e582:	00 00                	add    BYTE PTR [rax],al
    e584:	14 01                	adc    al,0x1
    e586:	00 00                	add    BYTE PTR [rax],al
    e588:	b8 49 ff ff ae       	mov    eax,0xaeffff49
    e58d:	00 00                	add    BYTE PTR [rax],al
    e58f:	00 00                	add    BYTE PTR [rax],al
    e591:	45 0e                	rex.RB (bad) 
    e593:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e599:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e59f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e5a2:	00 00                	add    BYTE PTR [rax],al
    e5a4:	34 01                	xor    al,0x1
    e5a6:	00 00                	add    BYTE PTR [rax],al
    e5a8:	46                   	rex.RX
    e5a9:	4a ff                	rex.WX (bad) 
    e5ab:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    e5b1:	45 0e                	rex.RB (bad) 
    e5b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5b9:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e5bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e5c2:	00 00                	add    BYTE PTR [rax],al
    e5c4:	54                   	push   rsp
    e5c5:	01 00                	add    DWORD PTR [rax],eax
    e5c7:	00 cc                	add    ah,cl
    e5c9:	4a ff                	rex.WX (bad) 
    e5cb:	ff 95 00 00 00 00    	call   QWORD PTR [rbp+0x0]
    e5d1:	45 0e                	rex.RB (bad) 
    e5d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5d9:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e5e0:	1c 00                	sbb    al,0x0
    e5e2:	00 00                	add    BYTE PTR [rax],al
    e5e4:	74 01                	je     e5e7 <__GNU_EH_FRAME_HDR+0x533>
    e5e6:	00 00                	add    BYTE PTR [rax],al
    e5e8:	41                   	rex.B
    e5e9:	4b ff                	rex.WXB (bad) 
    e5eb:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e5f2:	0e                   	(bad)  
    e5f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5f9:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e5ff:	00 28                	add    BYTE PTR [rax],ch
    e601:	00 00                	add    BYTE PTR [rax],al
    e603:	00 94 01 00 00 b5 4b 	add    BYTE PTR [rcx+rax*1+0x4bb50000],dl
    e60a:	ff                   	(bad)  
    e60b:	ff cc                	dec    esp
    e60d:	01 00                	add    DWORD PTR [rax],eax
    e60f:	00 00                	add    BYTE PTR [rax],al
    e611:	45 0e                	rex.RB (bad) 
    e613:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e619:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e61c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e623:	07                   	(bad)  
    e624:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e62a:	00 00                	add    BYTE PTR [rax],al
    e62c:	20 00                	and    BYTE PTR [rax],al
    e62e:	00 00                	add    BYTE PTR [rax],al
    e630:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e633:	00 55 4d             	add    BYTE PTR [rbp+0x4d],dl
    e636:	ff                   	(bad)  
    e637:	ff d4                	call   rsp
    e639:	00 00                	add    BYTE PTR [rax],al
    e63b:	00 00                	add    BYTE PTR [rax],al
    e63d:	45 0e                	rex.RB (bad) 
    e63f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e645:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e649:	c6                   	(bad)  
    e64a:	0c 07                	or     al,0x7
    e64c:	08 00                	or     BYTE PTR [rax],al
    e64e:	00 00                	add    BYTE PTR [rax],al
    e650:	20 00                	and    BYTE PTR [rax],al
    e652:	00 00                	add    BYTE PTR [rax],al
    e654:	e4 01                	in     al,0x1
    e656:	00 00                	add    BYTE PTR [rax],al
    e658:	05 4e ff ff c7       	add    eax,0xc7ffff4e
    e65d:	00 00                	add    BYTE PTR [rax],al
    e65f:	00 00                	add    BYTE PTR [rax],al
    e661:	45 0e                	rex.RB (bad) 
    e663:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e669:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e66d:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e672:	00 00                	add    BYTE PTR [rax],al
    e674:	1c 00                	sbb    al,0x0
    e676:	00 00                	add    BYTE PTR [rax],al
    e678:	08 02                	or     BYTE PTR [rdx],al
    e67a:	00 00                	add    BYTE PTR [rax],al
    e67c:	a8 4e                	test   al,0x4e
    e67e:	ff                   	(bad)  
    e67f:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    e682:	00 00                	add    BYTE PTR [rax],al
    e684:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e687:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e68d:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e690:	07                   	(bad)  
    e691:	08 00                	or     BYTE PTR [rax],al
    e693:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e696:	00 00                	add    BYTE PTR [rax],al
    e698:	28 02                	sub    BYTE PTR [rdx],al
    e69a:	00 00                	add    BYTE PTR [rax],al
    e69c:	db 4e ff             	fisttp DWORD PTR [rsi-0x1]
    e69f:	ff 33                	push   QWORD PTR [rbx]
    e6a1:	00 00                	add    BYTE PTR [rax],al
    e6a3:	00 00                	add    BYTE PTR [rax],al
    e6a5:	45 0e                	rex.RB (bad) 
    e6a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6ad:	6a 0c                	push   0xc
    e6af:	07                   	(bad)  
    e6b0:	08 00                	or     BYTE PTR [rax],al
    e6b2:	00 00                	add    BYTE PTR [rax],al
    e6b4:	1c 00                	sbb    al,0x0
    e6b6:	00 00                	add    BYTE PTR [rax],al
    e6b8:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e6bb:	00 ee                	add    dh,ch
    e6bd:	4e ff                	rex.WRX (bad) 
    e6bf:	ff 21                	jmp    QWORD PTR [rcx]
    e6c1:	00 00                	add    BYTE PTR [rax],al
    e6c3:	00 00                	add    BYTE PTR [rax],al
    e6c5:	45 0e                	rex.RB (bad) 
    e6c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6cd:	58                   	pop    rax
    e6ce:	0c 07                	or     al,0x7
    e6d0:	08 00                	or     BYTE PTR [rax],al
    e6d2:	00 00                	add    BYTE PTR [rax],al
    e6d4:	20 00                	and    BYTE PTR [rax],al
    e6d6:	00 00                	add    BYTE PTR [rax],al
    e6d8:	68 02 00 00 ef       	push   0xffffffffef000002
    e6dd:	4e ff                	rex.WRX (bad) 
    e6df:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    e6e2:	00 00                	add    BYTE PTR [rax],al
    e6e4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6ed:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6f1:	5a                   	pop    rdx
    e6f2:	0c 07                	or     al,0x7
    e6f4:	08 00                	or     BYTE PTR [rax],al
    e6f6:	00 00                	add    BYTE PTR [rax],al
    e6f8:	1c 00                	sbb    al,0x0
    e6fa:	00 00                	add    BYTE PTR [rax],al
    e6fc:	8c 02                	mov    WORD PTR [rdx],es
    e6fe:	00 00                	add    BYTE PTR [rax],al
    e700:	33 4f ff             	xor    ecx,DWORD PTR [rdi-0x1]
    e703:	ff 25 04 00 00 00    	jmp    QWORD PTR [rip+0x4]        # e70d <__GNU_EH_FRAME_HDR+0x659>
    e709:	45 0e                	rex.RB (bad) 
    e70b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e711:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e714:	0c 07                	or     al,0x7
    e716:	08 00                	or     BYTE PTR [rax],al
    e718:	1c 00                	sbb    al,0x0
    e71a:	00 00                	add    BYTE PTR [rax],al
    e71c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e71d:	02 00                	add    al,BYTE PTR [rax]
    e71f:	00 38                	add    BYTE PTR [rax],bh
    e721:	53                   	push   rbx
    e722:	ff                   	(bad)  
    e723:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    e726:	00 00                	add    BYTE PTR [rax],al
    e728:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e72b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e731:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e735:	07                   	(bad)  
    e736:	08 00                	or     BYTE PTR [rax],al
    e738:	1c 00                	sbb    al,0x0
    e73a:	00 00                	add    BYTE PTR [rax],al
    e73c:	cc                   	int3   
    e73d:	02 00                	add    al,BYTE PTR [rax]
    e73f:	00 75 54             	add    BYTE PTR [rbp+0x54],dh
    e742:	ff                   	(bad)  
    e743:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    e747:	00 00                	add    BYTE PTR [rax],al
    e749:	45 0e                	rex.RB (bad) 
    e74b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e751:	03 3b                	add    edi,DWORD PTR [rbx]
    e753:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e756:	08 00                	or     BYTE PTR [rax],al
    e758:	24 00                	and    al,0x0
    e75a:	00 00                	add    BYTE PTR [rax],al
    e75c:	ec                   	in     al,dx
    e75d:	02 00                	add    al,BYTE PTR [rax]
    e75f:	00 99 5c ff ff bc    	add    BYTE PTR [rcx-0x430000a4],bl
    e765:	08 00                	or     BYTE PTR [rax],al
    e767:	00 00                	add    BYTE PTR [rax],al
    e769:	45 0e                	rex.RB (bad) 
    e76b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e771:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e775:	ab                   	stos   DWORD PTR es:[rdi],eax
    e776:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e779:	08 00                	or     BYTE PTR [rax],al
    e77b:	00 00                	add    BYTE PTR [rax],al
    e77d:	00 00                	add    BYTE PTR [rax],al
    e77f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e782:	00 00                	add    BYTE PTR [rax],al
    e784:	14 03                	adc    al,0x3
    e786:	00 00                	add    BYTE PTR [rax],al
    e788:	2d 65 ff ff 55       	sub    eax,0x55ffff65
    e78d:	01 00                	add    DWORD PTR [rax],eax
    e78f:	00 00                	add    BYTE PTR [rax],al
    e791:	45 0e                	rex.RB (bad) 
    e793:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e799:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e79d:	07                   	(bad)  
    e79e:	08 00                	or     BYTE PTR [rax],al
    e7a0:	1c 00                	sbb    al,0x0
    e7a2:	00 00                	add    BYTE PTR [rax],al
    e7a4:	34 03                	xor    al,0x3
    e7a6:	00 00                	add    BYTE PTR [rax],al
    e7a8:	62                   	(bad)  
    e7a9:	66 ff                	data16 (bad) 
    e7ab:	ff                   	(bad)  
    e7ac:	ff 00                	inc    DWORD PTR [rax]
    e7ae:	00 00                	add    BYTE PTR [rax],al
    e7b0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e7b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7b9:	02 f6                	add    dh,dh
    e7bb:	0c 07                	or     al,0x7
    e7bd:	08 00                	or     BYTE PTR [rax],al
    e7bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7c2:	00 00                	add    BYTE PTR [rax],al
    e7c4:	54                   	push   rsp
    e7c5:	03 00                	add    eax,DWORD PTR [rax]
    e7c7:	00 41 67             	add    BYTE PTR [rcx+0x67],al
    e7ca:	ff                   	(bad)  
    e7cb:	ff                   	(bad)  
    e7cc:	ec                   	in     al,dx
    e7cd:	00 00                	add    BYTE PTR [rax],al
    e7cf:	00 00                	add    BYTE PTR [rax],al
    e7d1:	45 0e                	rex.RB (bad) 
    e7d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7d9:	02 e3                	add    ah,bl
    e7db:	0c 07                	or     al,0x7
    e7dd:	08 00                	or     BYTE PTR [rax],al
    e7df:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7e2:	00 00                	add    BYTE PTR [rax],al
    e7e4:	74 03                	je     e7e9 <__GNU_EH_FRAME_HDR+0x735>
    e7e6:	00 00                	add    BYTE PTR [rax],al
    e7e8:	0d 68 ff ff b2       	or     eax,0xb2ffff68
    e7ed:	03 00                	add    eax,DWORD PTR [rax]
    e7ef:	00 00                	add    BYTE PTR [rax],al
    e7f1:	45 0e                	rex.RB (bad) 
    e7f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7f9:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e7ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e802:	00 00                	add    BYTE PTR [rax],al
    e804:	94                   	xchg   esp,eax
    e805:	03 00                	add    eax,DWORD PTR [rax]
    e807:	00 9f 6b ff ff 83    	add    BYTE PTR [rdi-0x7c000095],bl
    e80d:	00 00                	add    BYTE PTR [rax],al
    e80f:	00 00                	add    BYTE PTR [rax],al
    e811:	45 0e                	rex.RB (bad) 
    e813:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e819:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e81c:	07                   	(bad)  
    e81d:	08 00                	or     BYTE PTR [rax],al
    e81f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e822:	00 00                	add    BYTE PTR [rax],al
    e824:	b4 03                	mov    ah,0x3
    e826:	00 00                	add    BYTE PTR [rax],al
    e828:	02 6c ff ff          	add    ch,BYTE PTR [rdi+rdi*8-0x1]
    e82c:	2a 02                	sub    al,BYTE PTR [rdx]
    e82e:	00 00                	add    BYTE PTR [rax],al
    e830:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e833:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e839:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e83d:	19 02                	sbb    DWORD PTR [rdx],eax
    e83f:	0c 07                	or     al,0x7
    e841:	08 00                	or     BYTE PTR [rax],al
    e843:	00 00                	add    BYTE PTR [rax],al
    e845:	00 00                	add    BYTE PTR [rax],al
    e847:	00 20                	add    BYTE PTR [rax],ah
    e849:	00 00                	add    BYTE PTR [rax],al
    e84b:	00 dc                	add    ah,bl
    e84d:	03 00                	add    eax,DWORD PTR [rax]
    e84f:	00 04 6e             	add    BYTE PTR [rsi+rbp*2],al
    e852:	ff                   	(bad)  
    e853:	ff                   	(bad)  
    e854:	3d 02 00 00 00       	cmp    eax,0x2
    e859:	45 0e                	rex.RB (bad) 
    e85b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e861:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e865:	2f                   	(bad)  
    e866:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e869:	08 00                	or     BYTE PTR [rax],al
    e86b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e86e:	00 00                	add    BYTE PTR [rax],al
    e870:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    e873:	00 1d 70 ff ff 66    	add    BYTE PTR [rip+0x66ffff70],bl        # 6700e7e9 <_end+0x66ecf7a1>
    e879:	00 00                	add    BYTE PTR [rax],al
    e87b:	00 00                	add    BYTE PTR [rax],al
    e87d:	45 0e                	rex.RB (bad) 
    e87f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e885:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e888:	07                   	(bad)  
    e889:	08 00                	or     BYTE PTR [rax],al
    e88b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e88e:	00 00                	add    BYTE PTR [rax],al
    e890:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    e893:	00 63 70             	add    BYTE PTR [rbx+0x70],ah
    e896:	ff                   	(bad)  
    e897:	ff 17                	call   QWORD PTR [rdi]
    e899:	00 00                	add    BYTE PTR [rax],al
    e89b:	00 00                	add    BYTE PTR [rax],al
    e89d:	45 0e                	rex.RB (bad) 
    e89f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8a5:	4e 0c 07             	rex.WRX or al,0x7
    e8a8:	08 00                	or     BYTE PTR [rax],al
    e8aa:	00 00                	add    BYTE PTR [rax],al
    e8ac:	20 00                	and    BYTE PTR [rax],al
    e8ae:	00 00                	add    BYTE PTR [rax],al
    e8b0:	40 04 00             	rex add al,0x0
    e8b3:	00 5a 70             	add    BYTE PTR [rdx+0x70],bl
    e8b6:	ff                   	(bad)  
    e8b7:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    e8ba:	00 00                	add    BYTE PTR [rax],al
    e8bc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8bf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8c5:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e8c8:	07                   	(bad)  
    e8c9:	08 00                	or     BYTE PTR [rax],al
    e8cb:	00 00                	add    BYTE PTR [rax],al
    e8cd:	00 00                	add    BYTE PTR [rax],al
    e8cf:	00 20                	add    BYTE PTR [rax],ah
    e8d1:	00 00                	add    BYTE PTR [rax],al
    e8d3:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    e8d7:	00 87 70 ff ff 3d    	add    BYTE PTR [rdi+0x3dffff70],al
    e8dd:	06                   	(bad)  
    e8de:	00 00                	add    BYTE PTR [rax],al
    e8e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8e9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e8ed:	2f                   	(bad)  
    e8ee:	06                   	(bad)  
    e8ef:	0c 07                	or     al,0x7
    e8f1:	08 00                	or     BYTE PTR [rax],al
    e8f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8f6:	00 00                	add    BYTE PTR [rax],al
    e8f8:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    e8fb:	00 a0 76 ff ff 1a    	add    BYTE PTR [rax+0x1affff76],ah
    e901:	00 00                	add    BYTE PTR [rax],al
    e903:	00 00                	add    BYTE PTR [rax],al
    e905:	45 0e                	rex.RB (bad) 
    e907:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e90d:	51                   	push   rcx
    e90e:	0c 07                	or     al,0x7
    e910:	08 00                	or     BYTE PTR [rax],al
    e912:	00 00                	add    BYTE PTR [rax],al
    e914:	1c 00                	sbb    al,0x0
    e916:	00 00                	add    BYTE PTR [rax],al
    e918:	a8 04                	test   al,0x4
    e91a:	00 00                	add    BYTE PTR [rax],al
    e91c:	9a                   	(bad)  
    e91d:	76 ff                	jbe    e91e <__GNU_EH_FRAME_HDR+0x86a>
    e91f:	ff 29                	jmp    FWORD PTR [rcx]
    e921:	00 00                	add    BYTE PTR [rax],al
    e923:	00 00                	add    BYTE PTR [rax],al
    e925:	45 0e                	rex.RB (bad) 
    e927:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e92d:	60                   	(bad)  
    e92e:	0c 07                	or     al,0x7
    e930:	08 00                	or     BYTE PTR [rax],al
    e932:	00 00                	add    BYTE PTR [rax],al
    e934:	1c 00                	sbb    al,0x0
    e936:	00 00                	add    BYTE PTR [rax],al
    e938:	c8 04 00 00          	enter  0x4,0x0
    e93c:	a3 76 ff ff 30 00 00 	movabs ds:0x30ffff76,eax
    e943:	00 00 
    e945:	45 0e                	rex.RB (bad) 
    e947:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e94d:	67 0c 07             	addr32 or al,0x7
    e950:	08 00                	or     BYTE PTR [rax],al
    e952:	00 00                	add    BYTE PTR [rax],al
    e954:	18 00                	sbb    BYTE PTR [rax],al
    e956:	00 00                	add    BYTE PTR [rax],al
    e958:	e8 04 00 00 b3       	call   ffffffffb300e961 <_end+0xffffffffb2ecf919>
    e95d:	76 ff                	jbe    e95e <__GNU_EH_FRAME_HDR+0x8aa>
    e95f:	ff 37                	push   QWORD PTR [rdi]
    e961:	00 00                	add    BYTE PTR [rax],al
    e963:	00 00                	add    BYTE PTR [rax],al
    e965:	45 0e                	rex.RB (bad) 
    e967:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e96d:	00 00                	add    BYTE PTR [rax],al
    e96f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e972:	00 00                	add    BYTE PTR [rax],al
    e974:	04 05                	add    al,0x5
    e976:	00 00                	add    BYTE PTR [rax],al
    e978:	ce                   	(bad)  
    e979:	76 ff                	jbe    e97a <__GNU_EH_FRAME_HDR+0x8c6>
    e97b:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    e97e:	00 00                	add    BYTE PTR [rax],al
    e980:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e983:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e989:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    e98c:	0c 07                	or     al,0x7
    e98e:	08 00                	or     BYTE PTR [rax],al
    e990:	1c 00                	sbb    al,0x0
    e992:	00 00                	add    BYTE PTR [rax],al
    e994:	24 05                	and    al,0x5
    e996:	00 00                	add    BYTE PTR [rax],al
    e998:	f3 77 ff             	repz ja e99a <__GNU_EH_FRAME_HDR+0x8e6>
    e99b:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    e99e:	00 00                	add    BYTE PTR [rax],al
    e9a0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9a9:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    e9ac:	0c 07                	or     al,0x7
    e9ae:	08 00                	or     BYTE PTR [rax],al
    e9b0:	1c 00                	sbb    al,0x0
    e9b2:	00 00                	add    BYTE PTR [rax],al
    e9b4:	44 05 00 00 33 79    	rex.R add eax,0x79330000
    e9ba:	ff                   	(bad)  
    e9bb:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    e9be:	00 00                	add    BYTE PTR [rax],al
    e9c0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9c9:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    e9cc:	07                   	(bad)  
    e9cd:	08 00                	or     BYTE PTR [rax],al
    e9cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e9d2:	00 00                	add    BYTE PTR [rax],al
    e9d4:	64 05 00 00 74 79    	fs add eax,0x79740000
    e9da:	ff                   	(bad)  
    e9db:	ff                   	(bad)  
    e9dc:	39 00                	cmp    DWORD PTR [rax],eax
    e9de:	00 00                	add    BYTE PTR [rax],al
    e9e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9e9:	70 0c                	jo     e9f7 <__GNU_EH_FRAME_HDR+0x943>
    e9eb:	07                   	(bad)  
    e9ec:	08 00                	or     BYTE PTR [rax],al
    e9ee:	00 00                	add    BYTE PTR [rax],al
    e9f0:	1c 00                	sbb    al,0x0
    e9f2:	00 00                	add    BYTE PTR [rax],al
    e9f4:	84 05 00 00 8d 79    	test   BYTE PTR [rip+0x798d0000],al        # 798de9fa <_end+0x7979f9b2>
    e9fa:	ff                   	(bad)  
    e9fb:	ff                   	(bad)  
    e9fc:	be 00 00 00 00       	mov    esi,0x0
    ea01:	45 0e                	rex.RB (bad) 
    ea03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea09:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    ea0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea12:	00 00                	add    BYTE PTR [rax],al
    ea14:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ea15:	05 00 00 2b 7a       	add    eax,0x7a2b0000
    ea1a:	ff                   	(bad)  
    ea1b:	ff                   	(bad)  
    ea1c:	be 02 00 00 00       	mov    esi,0x2
    ea21:	45 0e                	rex.RB (bad) 
    ea23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea29:	03 b5 02 0c 07 08    	add    esi,DWORD PTR [rbp+0x8070c02]
    ea2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea32:	00 00                	add    BYTE PTR [rax],al
    ea34:	c4                   	(bad)  
    ea35:	05 00 00 c9 7c       	add    eax,0x7cc90000
    ea3a:	ff                   	(bad)  
    ea3b:	ff                   	(bad)  
    ea3c:	f8                   	clc    
    ea3d:	01 00                	add    DWORD PTR [rax],eax
    ea3f:	00 00                	add    BYTE PTR [rax],al
    ea41:	45 0e                	rex.RB (bad) 
    ea43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea49:	03 ef                	add    ebp,edi
    ea4b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ea4e:	08 00                	or     BYTE PTR [rax],al
    ea50:	1c 00                	sbb    al,0x0
    ea52:	00 00                	add    BYTE PTR [rax],al
    ea54:	e4 05                	in     al,0x5
    ea56:	00 00                	add    BYTE PTR [rax],al
    ea58:	a1 7e ff ff 5a 00 00 	movabs eax,ds:0x5affff7e
    ea5f:	00 00 
    ea61:	45 0e                	rex.RB (bad) 
    ea63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea69:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    ea6c:	07                   	(bad)  
    ea6d:	08 00                	or     BYTE PTR [rax],al
    ea6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea72:	00 00                	add    BYTE PTR [rax],al
    ea74:	04 06                	add    al,0x6
    ea76:	00 00                	add    BYTE PTR [rax],al
    ea78:	db 7e ff             	fstp   TBYTE PTR [rsi-0x1]
    ea7b:	ff e6                	jmp    rsi
    ea7d:	02 00                	add    al,BYTE PTR [rax]
    ea7f:	00 00                	add    BYTE PTR [rax],al
    ea81:	45 0e                	rex.RB (bad) 
    ea83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea89:	03 dd                	add    ebx,ebp
    ea8b:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    ea8e:	08 00                	or     BYTE PTR [rax],al
    ea90:	1c 00                	sbb    al,0x0
    ea92:	00 00                	add    BYTE PTR [rax],al
    ea94:	24 06                	and    al,0x6
    ea96:	00 00                	add    BYTE PTR [rax],al
    ea98:	a1 81 ff ff 51 04 00 	movabs eax,ds:0x451ffff81
    ea9f:	00 00 
    eaa1:	45 0e                	rex.RB (bad) 
    eaa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaa9:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    eaac:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    eab0:	18 00                	sbb    BYTE PTR [rax],al
    eab2:	00 00                	add    BYTE PTR [rax],al
    eab4:	44 06                	rex.R (bad) 
    eab6:	00 00                	add    BYTE PTR [rax],al
    eab8:	d2 85 ff ff 2a 00    	rol    BYTE PTR [rbp+0x2affff],cl
    eabe:	00 00                	add    BYTE PTR [rax],al
    eac0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eac3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eac9:	00 00                	add    BYTE PTR [rax],al
    eacb:	00 20                	add    BYTE PTR [rax],ah
    eacd:	00 00                	add    BYTE PTR [rax],al
    eacf:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    ead2:	00 00                	add    BYTE PTR [rax],al
    ead4:	e0 85                	loopne ea5b <__GNU_EH_FRAME_HDR+0x9a7>
    ead6:	ff                   	(bad)  
    ead7:	ff b2 01 00 00 00    	push   QWORD PTR [rdx+0x1]
    eadd:	45 0e                	rex.RB (bad) 
    eadf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eae5:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    eae9:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    eaf0:	1c 00 
    eaf2:	00 00                	add    BYTE PTR [rax],al
    eaf4:	84 06                	test   BYTE PTR [rsi],al
    eaf6:	00 00                	add    BYTE PTR [rax],al
    eaf8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    eaf9:	87 ff                	xchg   edi,edi
    eafb:	ff 17                	call   QWORD PTR [rdi]
    eafd:	00 00                	add    BYTE PTR [rax],al
    eaff:	00 00                	add    BYTE PTR [rax],al
    eb01:	45 0e                	rex.RB (bad) 
    eb03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb09:	4e 0c 07             	rex.WRX or al,0x7
    eb0c:	08 00                	or     BYTE PTR [rax],al
    eb0e:	00 00                	add    BYTE PTR [rax],al
    eb10:	1c 00                	sbb    al,0x0
    eb12:	00 00                	add    BYTE PTR [rax],al
    eb14:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    eb15:	06                   	(bad)  
    eb16:	00 00                	add    BYTE PTR [rax],al
    eb18:	65 87 ff             	gs xchg edi,edi
    eb1b:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    eb1e:	00 00                	add    BYTE PTR [rax],al
    eb20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb29:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    eb2c:	07                   	(bad)  
    eb2d:	08 00                	or     BYTE PTR [rax],al
    eb2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb32:	00 00                	add    BYTE PTR [rax],al
    eb34:	c4                   	(bad)  
    eb35:	06                   	(bad)  
    eb36:	00 00                	add    BYTE PTR [rax],al
    eb38:	94                   	xchg   esp,eax
    eb39:	87 ff                	xchg   edi,edi
    eb3b:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    eb3e:	00 00                	add    BYTE PTR [rax],al
    eb40:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb49:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    eb4d:	08 00                	or     BYTE PTR [rax],al
    eb4f:	00 18                	add    BYTE PTR [rax],bl
    eb51:	00 00                	add    BYTE PTR [rax],al
    eb53:	00 e4                	add    ah,ah
    eb55:	06                   	(bad)  
    eb56:	00 00                	add    BYTE PTR [rax],al
    eb58:	c1 87 ff ff 77 01 00 	rol    DWORD PTR [rdi+0x177ffff],0x0
    eb5f:	00 00                	add    BYTE PTR [rax],al
    eb61:	45 0e                	rex.RB (bad) 
    eb63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb69:	00 00                	add    BYTE PTR [rax],al
    eb6b:	00 20                	add    BYTE PTR [rax],ah
    eb6d:	00 00                	add    BYTE PTR [rax],al
    eb6f:	00 00                	add    BYTE PTR [rax],al
    eb71:	07                   	(bad)  
    eb72:	00 00                	add    BYTE PTR [rax],al
    eb74:	1c 89                	sbb    al,0x89
    eb76:	ff                   	(bad)  
    eb77:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    eb7e:	0e                   	(bad)  
    eb7f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb85:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    eb8b:	00 00                	add    BYTE PTR [rax],al
    eb8d:	00 00                	add    BYTE PTR [rax],al
    eb8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb92:	00 00                	add    BYTE PTR [rax],al
    eb94:	24 07                	and    al,0x7
    eb96:	00 00                	add    BYTE PTR [rax],al
    eb98:	94                   	xchg   esp,eax
    eb99:	89 ff                	mov    edi,edi
    eb9b:	ff                   	(bad)  
    eb9c:	ee                   	out    dx,al
    eb9d:	01 00                	add    DWORD PTR [rax],eax
    eb9f:	00 00                	add    BYTE PTR [rax],al
    eba1:	45 0e                	rex.RB (bad) 
    eba3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eba9:	03 e5                	add    esp,ebp
    ebab:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ebae:	08 00                	or     BYTE PTR [rax],al
    ebb0:	1c 00                	sbb    al,0x0
    ebb2:	00 00                	add    BYTE PTR [rax],al
    ebb4:	44 07                	rex.R (bad) 
    ebb6:	00 00                	add    BYTE PTR [rax],al
    ebb8:	62                   	(bad)  
    ebb9:	8b ff                	mov    edi,edi
    ebbb:	ff                   	(bad)  
    ebbc:	e8 01 00 00 00       	call   ebc2 <__GNU_EH_FRAME_HDR+0xb0e>
    ebc1:	45 0e                	rex.RB (bad) 
    ebc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebc9:	03 df                	add    ebx,edi
    ebcb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ebce:	08 00                	or     BYTE PTR [rax],al
    ebd0:	1c 00                	sbb    al,0x0
    ebd2:	00 00                	add    BYTE PTR [rax],al
    ebd4:	64 07                	fs (bad) 
    ebd6:	00 00                	add    BYTE PTR [rax],al
    ebd8:	2a 8d ff ff 6c 00    	sub    cl,BYTE PTR [rbp+0x6cffff]
    ebde:	00 00                	add    BYTE PTR [rax],al
    ebe0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebe3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebe9:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    ebec:	07                   	(bad)  
    ebed:	08 00                	or     BYTE PTR [rax],al
    ebef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebf2:	00 00                	add    BYTE PTR [rax],al
    ebf4:	84 07                	test   BYTE PTR [rdi],al
    ebf6:	00 00                	add    BYTE PTR [rax],al
    ebf8:	76 8d                	jbe    eb87 <__GNU_EH_FRAME_HDR+0xad3>
    ebfa:	ff                   	(bad)  
    ebfb:	ff 72 00             	push   QWORD PTR [rdx+0x0]
    ebfe:	00 00                	add    BYTE PTR [rax],al
    ec00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec09:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    ec0c:	07                   	(bad)  
    ec0d:	08 00                	or     BYTE PTR [rax],al
    ec0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec12:	00 00                	add    BYTE PTR [rax],al
    ec14:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ec15:	07                   	(bad)  
    ec16:	00 00                	add    BYTE PTR [rax],al
    ec18:	c8 8d ff ff          	enter  0xff8d,0xff
    ec1c:	11 01                	adc    DWORD PTR [rcx],eax
    ec1e:	00 00                	add    BYTE PTR [rax],al
    ec20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec29:	03 08                	add    ecx,DWORD PTR [rax]
    ec2b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec2e:	08 00                	or     BYTE PTR [rax],al
    ec30:	1c 00                	sbb    al,0x0
    ec32:	00 00                	add    BYTE PTR [rax],al
    ec34:	c4                   	(bad)  
    ec35:	07                   	(bad)  
    ec36:	00 00                	add    BYTE PTR [rax],al
    ec38:	b9 8e ff ff 5c       	mov    ecx,0x5cffff8e
    ec3d:	00 00                	add    BYTE PTR [rax],al
    ec3f:	00 00                	add    BYTE PTR [rax],al
    ec41:	45 0e                	rex.RB (bad) 
    ec43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec49:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    ec4c:	07                   	(bad)  
    ec4d:	08 00                	or     BYTE PTR [rax],al
    ec4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec52:	00 00                	add    BYTE PTR [rax],al
    ec54:	e4 07                	in     al,0x7
    ec56:	00 00                	add    BYTE PTR [rax],al
    ec58:	f5                   	cmc    
    ec59:	8e ff                	mov    ?,edi
    ec5b:	ff                   	(bad)  
    ec5c:	3e 00 00             	ds add BYTE PTR [rax],al
    ec5f:	00 00                	add    BYTE PTR [rax],al
    ec61:	45 0e                	rex.RB (bad) 
    ec63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec69:	75 0c                	jne    ec77 <__GNU_EH_FRAME_HDR+0xbc3>
    ec6b:	07                   	(bad)  
    ec6c:	08 00                	or     BYTE PTR [rax],al
    ec6e:	00 00                	add    BYTE PTR [rax],al
    ec70:	1c 00                	sbb    al,0x0
    ec72:	00 00                	add    BYTE PTR [rax],al
    ec74:	04 08                	add    al,0x8
    ec76:	00 00                	add    BYTE PTR [rax],al
    ec78:	13 8f ff ff 86 00    	adc    ecx,DWORD PTR [rdi+0x86ffff]
    ec7e:	00 00                	add    BYTE PTR [rax],al
    ec80:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec89:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    ec8c:	07                   	(bad)  
    ec8d:	08 00                	or     BYTE PTR [rax],al
    ec8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec92:	00 00                	add    BYTE PTR [rax],al
    ec94:	24 08                	and    al,0x8
    ec96:	00 00                	add    BYTE PTR [rax],al
    ec98:	79 8f                	jns    ec29 <__GNU_EH_FRAME_HDR+0xb75>
    ec9a:	ff                   	(bad)  
    ec9b:	ff                   	(bad)  
    ec9c:	df 00                	fild   WORD PTR [rax]
    ec9e:	00 00                	add    BYTE PTR [rax],al
    eca0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eca3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eca9:	02 d6                	add    dl,dh
    ecab:	0c 07                	or     al,0x7
    ecad:	08 00                	or     BYTE PTR [rax],al
    ecaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecb2:	00 00                	add    BYTE PTR [rax],al
    ecb4:	44 08 00             	or     BYTE PTR [rax],r8b
    ecb7:	00 38                	add    BYTE PTR [rax],bh
    ecb9:	90                   	nop
    ecba:	ff                   	(bad)  
    ecbb:	ff 74 00 00          	push   QWORD PTR [rax+rax*1+0x0]
    ecbf:	00 00                	add    BYTE PTR [rax],al
    ecc1:	45 0e                	rex.RB (bad) 
    ecc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecc9:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    eccc:	07                   	(bad)  
    eccd:	08 00                	or     BYTE PTR [rax],al
    eccf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecd2:	00 00                	add    BYTE PTR [rax],al
    ecd4:	64 08 00             	or     BYTE PTR fs:[rax],al
    ecd7:	00 8c 90 ff ff 9c 00 	add    BYTE PTR [rax+rdx*4+0x9cffff],cl
    ecde:	00 00                	add    BYTE PTR [rax],al
    ece0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ece3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ece9:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ecef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecf2:	00 00                	add    BYTE PTR [rax],al
    ecf4:	84 08                	test   BYTE PTR [rax],cl
    ecf6:	00 00                	add    BYTE PTR [rax],al
    ecf8:	08 91 ff ff 29 00    	or     BYTE PTR [rcx+0x29ffff],dl
    ecfe:	00 00                	add    BYTE PTR [rax],al
    ed00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed09:	60                   	(bad)  
    ed0a:	0c 07                	or     al,0x7
    ed0c:	08 00                	or     BYTE PTR [rax],al
    ed0e:	00 00                	add    BYTE PTR [rax],al
    ed10:	1c 00                	sbb    al,0x0
    ed12:	00 00                	add    BYTE PTR [rax],al
    ed14:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ed15:	08 00                	or     BYTE PTR [rax],al
    ed17:	00 11                	add    BYTE PTR [rcx],dl
    ed19:	91                   	xchg   ecx,eax
    ed1a:	ff                   	(bad)  
    ed1b:	ff 29                	jmp    FWORD PTR [rcx]
    ed1d:	00 00                	add    BYTE PTR [rax],al
    ed1f:	00 00                	add    BYTE PTR [rax],al
    ed21:	45 0e                	rex.RB (bad) 
    ed23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed29:	60                   	(bad)  
    ed2a:	0c 07                	or     al,0x7
    ed2c:	08 00                	or     BYTE PTR [rax],al
    ed2e:	00 00                	add    BYTE PTR [rax],al
    ed30:	24 00                	and    al,0x0
    ed32:	00 00                	add    BYTE PTR [rax],al
    ed34:	c4                   	(bad)  
    ed35:	08 00                	or     BYTE PTR [rax],al
    ed37:	00 1a                	add    BYTE PTR [rdx],bl
    ed39:	91                   	xchg   ecx,eax
    ed3a:	ff                   	(bad)  
    ed3b:	ff 53 01             	call   QWORD PTR [rbx+0x1]
    ed3e:	00 00                	add    BYTE PTR [rax],al
    ed40:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed49:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    ed4d:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
    ed51:	08 00                	or     BYTE PTR [rax],al
    ed53:	00 00                	add    BYTE PTR [rax],al
    ed55:	00 00                	add    BYTE PTR [rax],al
    ed57:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed5a:	00 00                	add    BYTE PTR [rax],al
    ed5c:	ec                   	in     al,dx
    ed5d:	08 00                	or     BYTE PTR [rax],al
    ed5f:	00 45 92             	add    BYTE PTR [rbp-0x6e],al
    ed62:	ff                   	(bad)  
    ed63:	ff 13                	call   QWORD PTR [rbx]
    ed65:	01 00                	add    DWORD PTR [rax],eax
    ed67:	00 00                	add    BYTE PTR [rax],al
    ed69:	45 0e                	rex.RB (bad) 
    ed6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed71:	03 0a                	add    ecx,DWORD PTR [rdx]
    ed73:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ed76:	08 00                	or     BYTE PTR [rax],al
    ed78:	1c 00                	sbb    al,0x0
    ed7a:	00 00                	add    BYTE PTR [rax],al
    ed7c:	0c 09                	or     al,0x9
    ed7e:	00 00                	add    BYTE PTR [rax],al
    ed80:	38 93 ff ff f9 00    	cmp    BYTE PTR [rbx+0xf9ffff],dl
    ed86:	00 00                	add    BYTE PTR [rax],al
    ed88:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed8b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed91:	02 f0                	add    dh,al
    ed93:	0c 07                	or     al,0x7
    ed95:	08 00                	or     BYTE PTR [rax],al
    ed97:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed9a:	00 00                	add    BYTE PTR [rax],al
    ed9c:	2c 09                	sub    al,0x9
    ed9e:	00 00                	add    BYTE PTR [rax],al
    eda0:	11 94 ff ff a2 00 00 	adc    DWORD PTR [rdi+rdi*8+0xa2ff],edx
    eda7:	00 00                	add    BYTE PTR [rax],al
    eda9:	45 0e                	rex.RB (bad) 
    edab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edb1:	02 99 0c 07 08 00    	add    bl,BYTE PTR [rcx+0x8070c]
    edb7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edba:	00 00                	add    BYTE PTR [rax],al
    edbc:	4c 09 00             	or     QWORD PTR [rax],r8
    edbf:	00 93 94 ff ff 1e    	add    BYTE PTR [rbx+0x1effff94],dl
    edc5:	00 00                	add    BYTE PTR [rax],al
    edc7:	00 00                	add    BYTE PTR [rax],al
    edc9:	45 0e                	rex.RB (bad) 
    edcb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edd1:	55                   	push   rbp
    edd2:	0c 07                	or     al,0x7
    edd4:	08 00                	or     BYTE PTR [rax],al
    edd6:	00 00                	add    BYTE PTR [rax],al
    edd8:	1c 00                	sbb    al,0x0
    edda:	00 00                	add    BYTE PTR [rax],al
    eddc:	6c                   	ins    BYTE PTR es:[rdi],dx
    eddd:	09 00                	or     DWORD PTR [rax],eax
    eddf:	00 91 94 ff ff 63    	add    BYTE PTR [rcx+0x63ffff94],dl
    ede5:	01 00                	add    DWORD PTR [rax],eax
    ede7:	00 00                	add    BYTE PTR [rax],al
    ede9:	45 0e                	rex.RB (bad) 
    edeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edf1:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    edf4:	0c 07                	or     al,0x7
    edf6:	08 00                	or     BYTE PTR [rax],al
    edf8:	2c 00                	sub    al,0x0
    edfa:	00 00                	add    BYTE PTR [rax],al
    edfc:	8c 09                	mov    WORD PTR [rcx],cs
    edfe:	00 00                	add    BYTE PTR [rax],al
    ee00:	d4                   	(bad)  
    ee01:	95                   	xchg   ebp,eax
    ee02:	ff                   	(bad)  
    ee03:	ff 11                	call   QWORD PTR [rcx]
    ee05:	02 00                	add    al,BYTE PTR [rax]
    ee07:	00 00                	add    BYTE PTR [rax],al
    ee09:	45 0e                	rex.RB (bad) 
    ee0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee11:	50                   	push   rax
    ee12:	8f 03                	pop    QWORD PTR [rbx]
    ee14:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    ee1b:	07                   	(bad)  
    ee1c:	03 f8                	add    edi,eax
    ee1e:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ee21:	08 00                	or     BYTE PTR [rax],al
    ee23:	00 00                	add    BYTE PTR [rax],al
    ee25:	00 00                	add    BYTE PTR [rax],al
    ee27:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee2a:	00 00                	add    BYTE PTR [rax],al
    ee2c:	bc 09 00 00 b5       	mov    esp,0xb5000009
    ee31:	97                   	xchg   edi,eax
    ee32:	ff                   	(bad)  
    ee33:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
    ee39:	45 0e                	rex.RB (bad) 
    ee3b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee41:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    ee47:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee4a:	00 00                	add    BYTE PTR [rax],al
    ee4c:	dc 09                	fmul   QWORD PTR [rcx]
    ee4e:	00 00                	add    BYTE PTR [rax],al
    ee50:	47 98                	rex.RXB cwde 
    ee52:	ff                   	(bad)  
    ee53:	ff a5 00 00 00 00    	jmp    QWORD PTR [rbp+0x0]
    ee59:	45 0e                	rex.RB (bad) 
    ee5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee61:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    ee68:	24 00                	and    al,0x0
    ee6a:	00 00                	add    BYTE PTR [rax],al
    ee6c:	fc                   	cld    
    ee6d:	09 00                	or     DWORD PTR [rax],eax
    ee6f:	00 cc                	add    ah,cl
    ee71:	98                   	cwde   
    ee72:	ff                   	(bad)  
    ee73:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    ee7a:	0e                   	(bad)  
    ee7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee81:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    ee85:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
    ee88:	08 00                	or     BYTE PTR [rax],al
    ee8a:	00 00                	add    BYTE PTR [rax],al
    ee8c:	00 00                	add    BYTE PTR [rax],al
    ee8e:	00 00                	add    BYTE PTR [rax],al
    ee90:	1c 00                	sbb    al,0x0
    ee92:	00 00                	add    BYTE PTR [rax],al
    ee94:	24 0a                	and    al,0xa
    ee96:	00 00                	add    BYTE PTR [rax],al
    ee98:	38 99 ff ff d5 00    	cmp    BYTE PTR [rcx+0xd5ffff],bl
    ee9e:	00 00                	add    BYTE PTR [rax],al
    eea0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eea3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eea9:	02 cc                	add    cl,ah
    eeab:	0c 07                	or     al,0x7
    eead:	08 00                	or     BYTE PTR [rax],al
    eeaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeb2:	00 00                	add    BYTE PTR [rax],al
    eeb4:	44 0a 00             	or     r8b,BYTE PTR [rax]
    eeb7:	00 ed                	add    ch,ch
    eeb9:	99                   	cdq    
    eeba:	ff                   	(bad)  
    eebb:	ff                   	(bad)  
    eebc:	df 00                	fild   WORD PTR [rax]
    eebe:	00 00                	add    BYTE PTR [rax],al
    eec0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eec3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eec9:	02 d6                	add    dl,dh
    eecb:	0c 07                	or     al,0x7
    eecd:	08 00                	or     BYTE PTR [rax],al
    eecf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eed2:	00 00                	add    BYTE PTR [rax],al
    eed4:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    eed7:	00 ac 9a ff ff 7d 00 	add    BYTE PTR [rdx+rbx*4+0x7dffff],ch
    eede:	00 00                	add    BYTE PTR [rax],al
    eee0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eee3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eee9:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    eeed:	08 00                	or     BYTE PTR [rax],al
    eeef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eef2:	00 00                	add    BYTE PTR [rax],al
    eef4:	84 0a                	test   BYTE PTR [rdx],cl
    eef6:	00 00                	add    BYTE PTR [rax],al
    eef8:	09 9b ff ff 36 01    	or     DWORD PTR [rbx+0x136ffff],ebx
    eefe:	00 00                	add    BYTE PTR [rax],al
    ef00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef09:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807fb10 <_end+0x7f40ac8>
    ef0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef12:	00 00                	add    BYTE PTR [rax],al
    ef14:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ef15:	0a 00                	or     al,BYTE PTR [rax]
    ef17:	00 1f                	add    BYTE PTR [rdi],bl
    ef19:	9c                   	pushf  
    ef1a:	ff                   	(bad)  
    ef1b:	ff                   	(bad)  
    ef1c:	7e 00                	jle    ef1e <__GNU_EH_FRAME_HDR+0xe6a>
    ef1e:	00 00                	add    BYTE PTR [rax],al
    ef20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef29:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    ef2c:	07                   	(bad)  
    ef2d:	08 00                	or     BYTE PTR [rax],al
    ef2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef32:	00 00                	add    BYTE PTR [rax],al
    ef34:	c4                   	(bad)  
    ef35:	0a 00                	or     al,BYTE PTR [rax]
    ef37:	00 7d 9c             	add    BYTE PTR [rbp-0x64],bh
    ef3a:	ff                   	(bad)  
    ef3b:	ff                   	(bad)  
    ef3c:	39 02                	cmp    DWORD PTR [rdx],eax
    ef3e:	00 00                	add    BYTE PTR [rax],al
    ef40:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef49:	03 30                	add    esi,DWORD PTR [rax]
    ef4b:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    ef4e:	08 00                	or     BYTE PTR [rax],al
    ef50:	1c 00                	sbb    al,0x0
    ef52:	00 00                	add    BYTE PTR [rax],al
    ef54:	e4 0a                	in     al,0xa
    ef56:	00 00                	add    BYTE PTR [rax],al
    ef58:	96                   	xchg   esi,eax
    ef59:	9e                   	sahf   
    ef5a:	ff                   	(bad)  
    ef5b:	ff c9                	dec    ecx
    ef5d:	00 00                	add    BYTE PTR [rax],al
    ef5f:	00 00                	add    BYTE PTR [rax],al
    ef61:	45 0e                	rex.RB (bad) 
    ef63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef69:	02 c0                	add    al,al
    ef6b:	0c 07                	or     al,0x7
    ef6d:	08 00                	or     BYTE PTR [rax],al
    ef6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef72:	00 00                	add    BYTE PTR [rax],al
    ef74:	04 0b                	add    al,0xb
    ef76:	00 00                	add    BYTE PTR [rax],al
    ef78:	3f                   	(bad)  
    ef79:	9f                   	lahf   
    ef7a:	ff                   	(bad)  
    ef7b:	ff a1 01 00 00 00    	jmp    QWORD PTR [rcx+0x1]
    ef81:	45 0e                	rex.RB (bad) 
    ef83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef89:	03 98 01 0c 07 08    	add    ebx,DWORD PTR [rax+0x8070c01]
    ef8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef92:	00 00                	add    BYTE PTR [rax],al
    ef94:	24 0b                	and    al,0xb
    ef96:	00 00                	add    BYTE PTR [rax],al
    ef98:	c0 a0 ff ff 13 01 00 	shl    BYTE PTR [rax+0x113ffff],0x0
    ef9f:	00 00                	add    BYTE PTR [rax],al
    efa1:	45 0e                	rex.RB (bad) 
    efa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efa9:	03 0a                	add    ecx,DWORD PTR [rdx]
    efab:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    efae:	08 00                	or     BYTE PTR [rax],al
    efb0:	1c 00                	sbb    al,0x0
    efb2:	00 00                	add    BYTE PTR [rax],al
    efb4:	44 0b 00             	or     r8d,DWORD PTR [rax]
    efb7:	00 b3 a1 ff ff 66    	add    BYTE PTR [rbx+0x66ffffa1],dh
    efbd:	00 00                	add    BYTE PTR [rax],al
    efbf:	00 00                	add    BYTE PTR [rax],al
    efc1:	45 0e                	rex.RB (bad) 
    efc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efc9:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    efcc:	07                   	(bad)  
    efcd:	08 00                	or     BYTE PTR [rax],al
    efcf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efd2:	00 00                	add    BYTE PTR [rax],al
    efd4:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    efd7:	00 f9                	add    cl,bh
    efd9:	a1 ff ff 75 00 00 00 	movabs eax,ds:0x450000000075ffff
    efe0:	00 45 
    efe2:	0e                   	(bad)  
    efe3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efe9:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    efed:	08 00                	or     BYTE PTR [rax],al
    efef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eff2:	00 00                	add    BYTE PTR [rax],al
    eff4:	84 0b                	test   BYTE PTR [rbx],cl
    eff6:	00 00                	add    BYTE PTR [rax],al
    eff8:	4e a2 ff ff db 00 00 	rex.WRX movabs ds:0x4500000000dbffff,al
    efff:	00 00 45 
    f002:	0e                   	(bad)  
    f003:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f009:	02 d2                	add    dl,dl
    f00b:	0c 07                	or     al,0x7
    f00d:	08 00                	or     BYTE PTR [rax],al
    f00f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f012:	00 00                	add    BYTE PTR [rax],al
    f014:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f015:	0b 00                	or     eax,DWORD PTR [rax]
    f017:	00 09                	add    BYTE PTR [rcx],cl
    f019:	a3 ff ff 72 01 00 00 	movabs ds:0x450000000172ffff,eax
    f020:	00 45 
    f022:	0e                   	(bad)  
    f023:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f029:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    f02c:	0c 07                	or     al,0x7
    f02e:	08 00                	or     BYTE PTR [rax],al
    f030:	1c 00                	sbb    al,0x0
    f032:	00 00                	add    BYTE PTR [rax],al
    f034:	c4                   	(bad)  
    f035:	0b 00                	or     eax,DWORD PTR [rax]
    f037:	00 5b a4             	add    BYTE PTR [rbx-0x5c],bl
    f03a:	ff                   	(bad)  
    f03b:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    f03f:	00 00                	add    BYTE PTR [rax],al
    f041:	45 0e                	rex.RB (bad) 
    f043:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f049:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    f04c:	07                   	(bad)  
    f04d:	08 00                	or     BYTE PTR [rax],al
    f04f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f052:	00 00                	add    BYTE PTR [rax],al
    f054:	e4 0b                	in     al,0xb
    f056:	00 00                	add    BYTE PTR [rax],al
    f058:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f059:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f05a:	ff                   	(bad)  
    f05b:	ff 80 00 00 00 00    	inc    DWORD PTR [rax+0x0]
    f061:	45 0e                	rex.RB (bad) 
    f063:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f069:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    f06c:	07                   	(bad)  
    f06d:	08 00                	or     BYTE PTR [rax],al
    f06f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f072:	00 00                	add    BYTE PTR [rax],al
    f074:	04 0c                	add    al,0xc
    f076:	00 00                	add    BYTE PTR [rax],al
    f078:	07                   	(bad)  
    f079:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f07a:	ff                   	(bad)  
    f07b:	ff 16                	call   QWORD PTR [rsi]
    f07d:	00 00                	add    BYTE PTR [rax],al
    f07f:	00 00                	add    BYTE PTR [rax],al
    f081:	45 0e                	rex.RB (bad) 
    f083:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f089:	4d 0c 07             	rex.WRB or al,0x7
    f08c:	08 00                	or     BYTE PTR [rax],al
    f08e:	00 00                	add    BYTE PTR [rax],al
    f090:	20 00                	and    BYTE PTR [rax],al
    f092:	00 00                	add    BYTE PTR [rax],al
    f094:	24 0c                	and    al,0xc
    f096:	00 00                	add    BYTE PTR [rax],al
    f098:	fd                   	std    
    f099:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f09a:	ff                   	(bad)  
    f09b:	ff                   	(bad)  
    f09c:	3a 01                	cmp    al,BYTE PTR [rcx]
    f09e:	00 00                	add    BYTE PTR [rax],al
    f0a0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0a9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f0ad:	2c 01                	sub    al,0x1
    f0af:	0c 07                	or     al,0x7
    f0b1:	08 00                	or     BYTE PTR [rax],al
    f0b3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0b6:	00 00                	add    BYTE PTR [rax],al
    f0b8:	48 0c 00             	rex.W or al,0x0
    f0bb:	00 13                	add    BYTE PTR [rbx],dl
    f0bd:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f0be:	ff                   	(bad)  
    f0bf:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
    f0c3:	00 00                	add    BYTE PTR [rax],al
    f0c5:	45 0e                	rex.RB (bad) 
    f0c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0cd:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    f0d0:	07                   	(bad)  
    f0d1:	08 00                	or     BYTE PTR [rax],al
    f0d3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0d6:	00 00                	add    BYTE PTR [rax],al
    f0d8:	68 0c 00 00 57       	push   0x5700000c
    f0dd:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f0de:	ff                   	(bad)  
    f0df:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f0e2:	00 00                	add    BYTE PTR [rax],al
    f0e4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f0e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0ed:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f0f0:	07                   	(bad)  
    f0f1:	08 00                	or     BYTE PTR [rax],al
    f0f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0f6:	00 00                	add    BYTE PTR [rax],al
    f0f8:	88 0c 00             	mov    BYTE PTR [rax+rax*1],cl
    f0fb:	00 8a a6 ff ff b1    	add    BYTE PTR [rdx-0x4e00005a],cl
    f101:	00 00                	add    BYTE PTR [rax],al
    f103:	00 00                	add    BYTE PTR [rax],al
    f105:	45 0e                	rex.RB (bad) 
    f107:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f10d:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    f113:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f116:	00 00                	add    BYTE PTR [rax],al
    f118:	a8 0c                	test   al,0xc
    f11a:	00 00                	add    BYTE PTR [rax],al
    f11c:	1b a7 ff ff cb 00    	sbb    esp,DWORD PTR [rdi+0xcbffff]
    f122:	00 00                	add    BYTE PTR [rax],al
    f124:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f127:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f12d:	02 c2                	add    al,dl
    f12f:	0c 07                	or     al,0x7
    f131:	08 00                	or     BYTE PTR [rax],al
    f133:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f136:	00 00                	add    BYTE PTR [rax],al
    f138:	c8 0c 00 00          	enter  0xc,0x0
    f13c:	c6                   	(bad)  
    f13d:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f13e:	ff                   	(bad)  
    f13f:	ff 55 00             	call   QWORD PTR [rbp+0x0]
    f142:	00 00                	add    BYTE PTR [rax],al
    f144:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f147:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f14d:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    f151:	08 00                	or     BYTE PTR [rax],al
    f153:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f156:	00 00                	add    BYTE PTR [rax],al
    f158:	e8 0c 00 00 fb       	call   fffffffffb00f169 <_end+0xfffffffffaed0121>
    f15d:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f15e:	ff                   	(bad)  
    f15f:	ff 30                	push   QWORD PTR [rax]
    f161:	00 00                	add    BYTE PTR [rax],al
    f163:	00 00                	add    BYTE PTR [rax],al
    f165:	45 0e                	rex.RB (bad) 
    f167:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f16d:	67 0c 07             	addr32 or al,0x7
    f170:	08 00                	or     BYTE PTR [rax],al
    f172:	00 00                	add    BYTE PTR [rax],al
    f174:	1c 00                	sbb    al,0x0
    f176:	00 00                	add    BYTE PTR [rax],al
    f178:	08 0d 00 00 0b a8    	or     BYTE PTR [rip+0xffffffffa80b0000],cl        # ffffffffa80bf17e <_end+0xffffffffa7f80136>
    f17e:	ff                   	(bad)  
    f17f:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
    f182:	00 00                	add    BYTE PTR [rax],al
    f184:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f187:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f18d:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f190:	07                   	(bad)  
    f191:	08 00                	or     BYTE PTR [rax],al
    f193:	00 20                	add    BYTE PTR [rax],ah
    f195:	00 00                	add    BYTE PTR [rax],al
    f197:	00 28                	add    BYTE PTR [rax],ch
    f199:	0d 00 00 52 a8       	or     eax,0xa8520000
    f19e:	ff                   	(bad)  
    f19f:	ff                   	(bad)  
    f1a0:	38 0f                	cmp    BYTE PTR [rdi],cl
    f1a2:	00 00                	add    BYTE PTR [rax],al
    f1a4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1ad:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    f1b1:	27                   	(bad)  
    f1b2:	0f 0c                	(bad)  
    f1b4:	07                   	(bad)  
    f1b5:	08 00                	or     BYTE PTR [rax],al
    f1b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1ba:	00 00                	add    BYTE PTR [rax],al
    f1bc:	4c 0d 00 00 66 b7    	rex.WR or rax,0xffffffffb7660000
    f1c2:	ff                   	(bad)  
    f1c3:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
    f1c6:	00 00                	add    BYTE PTR [rax],al
    f1c8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1d1:	7d 0c                	jge    f1df <__GNU_EH_FRAME_HDR+0x112b>
    f1d3:	07                   	(bad)  
    f1d4:	08 00                	or     BYTE PTR [rax],al
    f1d6:	00 00                	add    BYTE PTR [rax],al
    f1d8:	24 00                	and    al,0x0
    f1da:	00 00                	add    BYTE PTR [rax],al
    f1dc:	6c                   	ins    BYTE PTR es:[rdi],dx
    f1dd:	0d 00 00 8c b7       	or     eax,0xb78c0000
    f1e2:	ff                   	(bad)  
    f1e3:	ff                   	(bad)  
    f1e4:	3b 02                	cmp    eax,DWORD PTR [rdx]
    f1e6:	00 00                	add    BYTE PTR [rax],al
    f1e8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1f1:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f1f4:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f1f7:	05 83 06 03 27       	add    eax,0x27030683
    f1fc:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f1ff:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f202:	00 00                	add    BYTE PTR [rax],al
    f204:	94                   	xchg   esp,eax
    f205:	0d 00 00 9f b9       	or     eax,0xb99f0000
    f20a:	ff                   	(bad)  
    f20b:	ff a5 01 00 00 00    	jmp    QWORD PTR [rbp+0x1]
    f211:	45 0e                	rex.RB (bad) 
    f213:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f219:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
    f220:	1c 00                	sbb    al,0x0
    f222:	00 00                	add    BYTE PTR [rax],al
    f224:	b4 0d                	mov    ah,0xd
    f226:	00 00                	add    BYTE PTR [rax],al
    f228:	24 bb                	and    al,0xbb
    f22a:	ff                   	(bad)  
    f22b:	ff 12                	call   QWORD PTR [rdx]
    f22d:	01 00                	add    DWORD PTR [rax],eax
    f22f:	00 00                	add    BYTE PTR [rax],al
    f231:	45 0e                	rex.RB (bad) 
    f233:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f239:	03 09                	add    ecx,DWORD PTR [rcx]
    f23b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f23e:	08 00                	or     BYTE PTR [rax],al
    f240:	24 00                	and    al,0x0
    f242:	00 00                	add    BYTE PTR [rax],al
    f244:	d4                   	(bad)  
    f245:	0d 00 00 16 bc       	or     eax,0xbc160000
    f24a:	ff                   	(bad)  
    f24b:	ff                   	(bad)  
    f24c:	bc 00 00 00 00       	mov    esp,0x0
    f251:	45 0e                	rex.RB (bad) 
    f253:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f259:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f25d:	ae                   	scas   al,BYTE PTR es:[rdi]
    f25e:	0c 07                	or     al,0x7
    f260:	08 00                	or     BYTE PTR [rax],al
    f262:	00 00                	add    BYTE PTR [rax],al
    f264:	00 00                	add    BYTE PTR [rax],al
    f266:	00 00                	add    BYTE PTR [rax],al
    f268:	24 00                	and    al,0x0
    f26a:	00 00                	add    BYTE PTR [rax],al
    f26c:	fc                   	cld    
    f26d:	0d 00 00 aa bc       	or     eax,0xbcaa0000
    f272:	ff                   	(bad)  
    f273:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    f279:	45 0e                	rex.RB (bad) 
    f27b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f281:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f284:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f288:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f28b:	08 00                	or     BYTE PTR [rax],al
    f28d:	00 00                	add    BYTE PTR [rax],al
    f28f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f292:	00 00                	add    BYTE PTR [rax],al
    f294:	24 0e                	and    al,0xe
    f296:	00 00                	add    BYTE PTR [rax],al
    f298:	1d be ff ff a5       	sbb    eax,0xa5ffffbe
    f29d:	00 00                	add    BYTE PTR [rax],al
    f29f:	00 00                	add    BYTE PTR [rax],al
    f2a1:	45 0e                	rex.RB (bad) 
    f2a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2a9:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f2b0:	1c 00                	sbb    al,0x0
    f2b2:	00 00                	add    BYTE PTR [rax],al
    f2b4:	44 0e                	rex.R (bad) 
    f2b6:	00 00                	add    BYTE PTR [rax],al
    f2b8:	a2 be ff ff 43 01 00 	movabs ds:0x143ffffbe,al
    f2bf:	00 00 
    f2c1:	45 0e                	rex.RB (bad) 
    f2c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2c9:	03 3a                	add    edi,DWORD PTR [rdx]
    f2cb:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f2ce:	08 00                	or     BYTE PTR [rax],al
    f2d0:	1c 00                	sbb    al,0x0
    f2d2:	00 00                	add    BYTE PTR [rax],al
    f2d4:	64 0e                	fs (bad) 
    f2d6:	00 00                	add    BYTE PTR [rax],al
    f2d8:	c5 bf ff             	(bad)
    f2db:	ff f3                	push   rbx
    f2dd:	00 00                	add    BYTE PTR [rax],al
    f2df:	00 00                	add    BYTE PTR [rax],al
    f2e1:	45 0e                	rex.RB (bad) 
    f2e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2e9:	02 ea                	add    ch,dl
    f2eb:	0c 07                	or     al,0x7
    f2ed:	08 00                	or     BYTE PTR [rax],al
    f2ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f2f2:	00 00                	add    BYTE PTR [rax],al
    f2f4:	84 0e                	test   BYTE PTR [rsi],cl
    f2f6:	00 00                	add    BYTE PTR [rax],al
    f2f8:	98                   	cwde   
    f2f9:	c0 ff ff             	sar    bh,0xff
    f2fc:	70 00                	jo     f2fe <__GNU_EH_FRAME_HDR+0x124a>
    f2fe:	00 00                	add    BYTE PTR [rax],al
    f300:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f303:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f309:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f30c:	07                   	(bad)  
    f30d:	08 00                	or     BYTE PTR [rax],al
    f30f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f312:	00 00                	add    BYTE PTR [rax],al
    f314:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f315:	0e                   	(bad)  
    f316:	00 00                	add    BYTE PTR [rax],al
    f318:	e8 c0 ff ff a5       	call   ffffffffa600f2dd <_end+0xffffffffa5ed0295>
    f31d:	02 00                	add    al,BYTE PTR [rax]
    f31f:	00 00                	add    BYTE PTR [rax],al
    f321:	45 0e                	rex.RB (bad) 
    f323:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f329:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f32c:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f330:	1c 00                	sbb    al,0x0
    f332:	00 00                	add    BYTE PTR [rax],al
    f334:	c4                   	(bad)  
    f335:	0e                   	(bad)  
    f336:	00 00                	add    BYTE PTR [rax],al
    f338:	6d                   	ins    DWORD PTR es:[rdi],dx
    f339:	c3                   	ret    
    f33a:	ff                   	(bad)  
    f33b:	ff 6a 00             	jmp    FWORD PTR [rdx+0x0]
    f33e:	00 00                	add    BYTE PTR [rax],al
    f340:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f343:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f349:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f34c:	07                   	(bad)  
    f34d:	08 00                	or     BYTE PTR [rax],al
    f34f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f352:	00 00                	add    BYTE PTR [rax],al
    f354:	e4 0e                	in     al,0xe
    f356:	00 00                	add    BYTE PTR [rax],al
    f358:	b7 c3                	mov    bh,0xc3
    f35a:	ff                   	(bad)  
    f35b:	ff 6e 00             	jmp    FWORD PTR [rsi+0x0]
    f35e:	00 00                	add    BYTE PTR [rax],al
    f360:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f363:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f369:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f36c:	07                   	(bad)  
    f36d:	08 00                	or     BYTE PTR [rax],al
    f36f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    f372:	00 00                	add    BYTE PTR [rax],al
    f374:	04 0f                	add    al,0xf
    f376:	00 00                	add    BYTE PTR [rax],al
    f378:	05 c4 ff ff 8d       	add    eax,0x8dffffc4
    f37d:	01 00                	add    DWORD PTR [rax],eax
    f37f:	00 00                	add    BYTE PTR [rax],al
    f381:	45 0e                	rex.RB (bad) 
    f383:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f389:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f38d:	7f 01                	jg     f390 <__GNU_EH_FRAME_HDR+0x12dc>
    f38f:	0c 07                	or     al,0x7
    f391:	08 00                	or     BYTE PTR [rax],al
    f393:	00 00                	add    BYTE PTR [rax],al
    f395:	00 00                	add    BYTE PTR [rax],al
    f397:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f39a:	00 00                	add    BYTE PTR [rax],al
    f39c:	2c 0f                	sub    al,0xf
    f39e:	00 00                	add    BYTE PTR [rax],al
    f3a0:	6a c5                	push   0xffffffffffffffc5
    f3a2:	ff                   	(bad)  
    f3a3:	ff 46 03             	inc    DWORD PTR [rsi+0x3]
    f3a6:	00 00                	add    BYTE PTR [rax],al
    f3a8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f3ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3b1:	03 3d 03 0c 07 08    	add    edi,DWORD PTR [rip+0x8070c03]        # 807ffba <_end+0x7f40f72>
	...

000000000000f3b8 <__FRAME_END__>:
    f3b8:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b70 <buffer.0+0x10af0>:
	...

Disassembly of section .init_array:

0000000000010b70 <__frame_dummy_init_array_entry>:
   10b70:	a0                   	.byte 0xa0
   10b71:	29 00                	sub    DWORD PTR [rax],eax
   10b73:	00 00                	add    BYTE PTR [rax],al
   10b75:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b78 <__do_global_dtors_aux_fini_array_entry>:
   10b78:	60                   	(bad)  
   10b79:	29 00                	sub    DWORD PTR [rax],eax
   10b7b:	00 00                	add    BYTE PTR [rax],al
   10b7d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b80 <_DYNAMIC>:
   10b80:	01 00                	add    DWORD PTR [rax],eax
   10b82:	00 00                	add    BYTE PTR [rax],al
   10b84:	00 00                	add    BYTE PTR [rax],al
   10b86:	00 00                	add    BYTE PTR [rax],al
   10b88:	a9 02 00 00 00       	test   eax,0x2
   10b8d:	00 00                	add    BYTE PTR [rax],al
   10b8f:	00 01                	add    BYTE PTR [rcx],al
   10b91:	00 00                	add    BYTE PTR [rax],al
   10b93:	00 00                	add    BYTE PTR [rax],al
   10b95:	00 00                	add    BYTE PTR [rax],al
   10b97:	00 b8 02 00 00 00    	add    BYTE PTR [rax+0x2],bh
   10b9d:	00 00                	add    BYTE PTR [rax],al
   10b9f:	00 01                	add    BYTE PTR [rcx],al
   10ba1:	00 00                	add    BYTE PTR [rax],al
   10ba3:	00 00                	add    BYTE PTR [rax],al
   10ba5:	00 00                	add    BYTE PTR [rax],al
   10ba7:	00 c8                	add    al,cl
   10ba9:	02 00                	add    al,BYTE PTR [rax]
   10bab:	00 00                	add    BYTE PTR [rax],al
   10bad:	00 00                	add    BYTE PTR [rax],al
   10baf:	00 01                	add    BYTE PTR [rcx],al
   10bb1:	00 00                	add    BYTE PTR [rax],al
   10bb3:	00 00                	add    BYTE PTR [rax],al
   10bb5:	00 00                	add    BYTE PTR [rax],al
   10bb7:	00 d7                	add    bh,dl
   10bb9:	02 00                	add    al,BYTE PTR [rax]
   10bbb:	00 00                	add    BYTE PTR [rax],al
   10bbd:	00 00                	add    BYTE PTR [rax],al
   10bbf:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10bc2:	00 00                	add    BYTE PTR [rax],al
   10bc4:	00 00                	add    BYTE PTR [rax],al
   10bc6:	00 00                	add    BYTE PTR [rax],al
   10bc8:	00 20                	add    BYTE PTR [rax],ah
   10bca:	00 00                	add    BYTE PTR [rax],al
   10bcc:	00 00                	add    BYTE PTR [rax],al
   10bce:	00 00                	add    BYTE PTR [rax],al
   10bd0:	0d 00 00 00 00       	or     eax,0x0
   10bd5:	00 00                	add    BYTE PTR [rax],al
   10bd7:	00 50 bc             	add    BYTE PTR [rax-0x44],dl
   10bda:	00 00                	add    BYTE PTR [rax],al
   10bdc:	00 00                	add    BYTE PTR [rax],al
   10bde:	00 00                	add    BYTE PTR [rax],al
   10be0:	19 00                	sbb    DWORD PTR [rax],eax
   10be2:	00 00                	add    BYTE PTR [rax],al
   10be4:	00 00                	add    BYTE PTR [rax],al
   10be6:	00 00                	add    BYTE PTR [rax],al
   10be8:	70 0b                	jo     10bf5 <_DYNAMIC+0x75>
   10bea:	01 00                	add    DWORD PTR [rax],eax
   10bec:	00 00                	add    BYTE PTR [rax],al
   10bee:	00 00                	add    BYTE PTR [rax],al
   10bf0:	1b 00                	sbb    eax,DWORD PTR [rax]
   10bf2:	00 00                	add    BYTE PTR [rax],al
   10bf4:	00 00                	add    BYTE PTR [rax],al
   10bf6:	00 00                	add    BYTE PTR [rax],al
   10bf8:	08 00                	or     BYTE PTR [rax],al
   10bfa:	00 00                	add    BYTE PTR [rax],al
   10bfc:	00 00                	add    BYTE PTR [rax],al
   10bfe:	00 00                	add    BYTE PTR [rax],al
   10c00:	1a 00                	sbb    al,BYTE PTR [rax]
   10c02:	00 00                	add    BYTE PTR [rax],al
   10c04:	00 00                	add    BYTE PTR [rax],al
   10c06:	00 00                	add    BYTE PTR [rax],al
   10c08:	78 0b                	js     10c15 <_DYNAMIC+0x95>
   10c0a:	01 00                	add    DWORD PTR [rax],eax
   10c0c:	00 00                	add    BYTE PTR [rax],al
   10c0e:	00 00                	add    BYTE PTR [rax],al
   10c10:	1c 00                	sbb    al,0x0
   10c12:	00 00                	add    BYTE PTR [rax],al
   10c14:	00 00                	add    BYTE PTR [rax],al
   10c16:	00 00                	add    BYTE PTR [rax],al
   10c18:	08 00                	or     BYTE PTR [rax],al
   10c1a:	00 00                	add    BYTE PTR [rax],al
   10c1c:	00 00                	add    BYTE PTR [rax],al
   10c1e:	00 00                	add    BYTE PTR [rax],al
   10c20:	f5                   	cmc    
   10c21:	fe                   	(bad)  
   10c22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c25:	00 00                	add    BYTE PTR [rax],al
   10c27:	00 e8                	add    al,ch
   10c29:	03 00                	add    eax,DWORD PTR [rax]
   10c2b:	00 00                	add    BYTE PTR [rax],al
   10c2d:	00 00                	add    BYTE PTR [rax],al
   10c2f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c35 <_DYNAMIC+0xb5>
   10c35:	00 00                	add    BYTE PTR [rax],al
   10c37:	00 38                	add    BYTE PTR [rax],bh
   10c39:	0b 00                	or     eax,DWORD PTR [rax]
   10c3b:	00 00                	add    BYTE PTR [rax],al
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 06                	add    BYTE PTR [rsi],al
   10c41:	00 00                	add    BYTE PTR [rax],al
   10c43:	00 00                	add    BYTE PTR [rax],al
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 18                	add    BYTE PTR [rax],bl
   10c49:	04 00                	add    al,0x0
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 0a                	add    BYTE PTR [rdx],cl
   10c51:	00 00                	add    BYTE PTR [rax],al
   10c53:	00 00                	add    BYTE PTR [rax],al
   10c55:	00 00                	add    BYTE PTR [rax],al
   10c57:	00 16                	add    BYTE PTR [rsi],dl
   10c59:	03 00                	add    eax,DWORD PTR [rax]
   10c5b:	00 00                	add    BYTE PTR [rax],al
   10c5d:	00 00                	add    BYTE PTR [rax],al
   10c5f:	00 0b                	add    BYTE PTR [rbx],cl
   10c61:	00 00                	add    BYTE PTR [rax],al
   10c63:	00 00                	add    BYTE PTR [rax],al
   10c65:	00 00                	add    BYTE PTR [rax],al
   10c67:	00 18                	add    BYTE PTR [rax],bl
   10c69:	00 00                	add    BYTE PTR [rax],al
   10c6b:	00 00                	add    BYTE PTR [rax],al
   10c6d:	00 00                	add    BYTE PTR [rax],al
   10c6f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c75 <_DYNAMIC+0xf5>
	...
   10c7d:	00 00                	add    BYTE PTR [rax],al
   10c7f:	00 03                	add    BYTE PTR [rbx],al
   10c81:	00 00                	add    BYTE PTR [rax],al
   10c83:	00 00                	add    BYTE PTR [rax],al
   10c85:	00 00                	add    BYTE PTR [rax],al
   10c87:	00 a0 0d 01 00 00    	add    BYTE PTR [rax+0x10d],ah
   10c8d:	00 00                	add    BYTE PTR [rax],al
   10c8f:	00 02                	add    BYTE PTR [rdx],al
   10c91:	00 00                	add    BYTE PTR [rax],al
   10c93:	00 00                	add    BYTE PTR [rax],al
   10c95:	00 00                	add    BYTE PTR [rax],al
   10c97:	00 60 06             	add    BYTE PTR [rax+0x6],ah
   10c9a:	00 00                	add    BYTE PTR [rax],al
   10c9c:	00 00                	add    BYTE PTR [rax],al
   10c9e:	00 00                	add    BYTE PTR [rax],al
   10ca0:	14 00                	adc    al,0x0
   10ca2:	00 00                	add    BYTE PTR [rax],al
   10ca4:	00 00                	add    BYTE PTR [rax],al
   10ca6:	00 00                	add    BYTE PTR [rax],al
   10ca8:	07                   	(bad)  
   10ca9:	00 00                	add    BYTE PTR [rax],al
   10cab:	00 00                	add    BYTE PTR [rax],al
   10cad:	00 00                	add    BYTE PTR [rax],al
   10caf:	00 17                	add    BYTE PTR [rdi],dl
   10cb1:	00 00                	add    BYTE PTR [rax],al
   10cb3:	00 00                	add    BYTE PTR [rax],al
   10cb5:	00 00                	add    BYTE PTR [rax],al
   10cb7:	00 78 10             	add    BYTE PTR [rax+0x10],bh
   10cba:	00 00                	add    BYTE PTR [rax],al
   10cbc:	00 00                	add    BYTE PTR [rax],al
   10cbe:	00 00                	add    BYTE PTR [rax],al
   10cc0:	07                   	(bad)  
   10cc1:	00 00                	add    BYTE PTR [rax],al
   10cc3:	00 00                	add    BYTE PTR [rax],al
   10cc5:	00 00                	add    BYTE PTR [rax],al
   10cc7:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
   10cca:	00 00                	add    BYTE PTR [rax],al
   10ccc:	00 00                	add    BYTE PTR [rax],al
   10cce:	00 00                	add    BYTE PTR [rax],al
   10cd0:	08 00                	or     BYTE PTR [rax],al
   10cd2:	00 00                	add    BYTE PTR [rax],al
   10cd4:	00 00                	add    BYTE PTR [rax],al
   10cd6:	00 00                	add    BYTE PTR [rax],al
   10cd8:	20 01                	and    BYTE PTR [rcx],al
   10cda:	00 00                	add    BYTE PTR [rax],al
   10cdc:	00 00                	add    BYTE PTR [rax],al
   10cde:	00 00                	add    BYTE PTR [rax],al
   10ce0:	09 00                	or     DWORD PTR [rax],eax
   10ce2:	00 00                	add    BYTE PTR [rax],al
   10ce4:	00 00                	add    BYTE PTR [rax],al
   10ce6:	00 00                	add    BYTE PTR [rax],al
   10ce8:	18 00                	sbb    BYTE PTR [rax],al
   10cea:	00 00                	add    BYTE PTR [rax],al
   10cec:	00 00                	add    BYTE PTR [rax],al
   10cee:	00 00                	add    BYTE PTR [rax],al
   10cf0:	1e                   	(bad)  
   10cf1:	00 00                	add    BYTE PTR [rax],al
   10cf3:	00 00                	add    BYTE PTR [rax],al
   10cf5:	00 00                	add    BYTE PTR [rax],al
   10cf7:	00 08                	add    BYTE PTR [rax],cl
   10cf9:	00 00                	add    BYTE PTR [rax],al
   10cfb:	00 00                	add    BYTE PTR [rax],al
   10cfd:	00 00                	add    BYTE PTR [rax],al
   10cff:	00 fb                	add    bl,bh
   10d01:	ff                   	(bad)  
   10d02:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d05:	00 00                	add    BYTE PTR [rax],al
   10d07:	00 01                	add    BYTE PTR [rcx],al
   10d09:	00 00                	add    BYTE PTR [rax],al
   10d0b:	08 00                	or     BYTE PTR [rax],al
   10d0d:	00 00                	add    BYTE PTR [rax],al
   10d0f:	00 fe                	add    dh,bh
   10d11:	ff                   	(bad)  
   10d12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d15:	00 00                	add    BYTE PTR [rax],al
   10d17:	00 e8                	add    al,ch
   10d19:	0e                   	(bad)  
   10d1a:	00 00                	add    BYTE PTR [rax],al
   10d1c:	00 00                	add    BYTE PTR [rax],al
   10d1e:	00 00                	add    BYTE PTR [rax],al
   10d20:	ff                   	(bad)  
   10d21:	ff                   	(bad)  
   10d22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d25:	00 00                	add    BYTE PTR [rax],al
   10d27:	00 02                	add    BYTE PTR [rdx],al
   10d29:	00 00                	add    BYTE PTR [rax],al
   10d2b:	00 00                	add    BYTE PTR [rax],al
   10d2d:	00 00                	add    BYTE PTR [rax],al
   10d2f:	00 f0                	add    al,dh
   10d31:	ff                   	(bad)  
   10d32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d35:	00 00                	add    BYTE PTR [rax],al
   10d37:	00 4e 0e             	add    BYTE PTR [rsi+0xe],cl
   10d3a:	00 00                	add    BYTE PTR [rax],al
   10d3c:	00 00                	add    BYTE PTR [rax],al
   10d3e:	00 00                	add    BYTE PTR [rax],al
   10d40:	f9                   	stc    
   10d41:	ff                   	(bad)  
   10d42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d45:	00 00                	add    BYTE PTR [rax],al
   10d47:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010da0 <_GLOBAL_OFFSET_TABLE_>:
   10da0:	80 0b 01             	or     BYTE PTR [rbx],0x1
	...
   10db7:	00 30                	add    BYTE PTR [rax],dh
   10db9:	20 00                	and    BYTE PTR [rax],al
   10dbb:	00 00                	add    BYTE PTR [rax],al
   10dbd:	00 00                	add    BYTE PTR [rax],al
   10dbf:	00 40 20             	add    BYTE PTR [rax+0x20],al
   10dc2:	00 00                	add    BYTE PTR [rax],al
   10dc4:	00 00                	add    BYTE PTR [rax],al
   10dc6:	00 00                	add    BYTE PTR [rax],al
   10dc8:	50                   	push   rax
   10dc9:	20 00                	and    BYTE PTR [rax],al
   10dcb:	00 00                	add    BYTE PTR [rax],al
   10dcd:	00 00                	add    BYTE PTR [rax],al
   10dcf:	00 60 20             	add    BYTE PTR [rax+0x20],ah
   10dd2:	00 00                	add    BYTE PTR [rax],al
   10dd4:	00 00                	add    BYTE PTR [rax],al
   10dd6:	00 00                	add    BYTE PTR [rax],al
   10dd8:	70 20                	jo     10dfa <_GLOBAL_OFFSET_TABLE_+0x5a>
   10dda:	00 00                	add    BYTE PTR [rax],al
   10ddc:	00 00                	add    BYTE PTR [rax],al
   10dde:	00 00                	add    BYTE PTR [rax],al
   10de0:	80 20 00             	and    BYTE PTR [rax],0x0
   10de3:	00 00                	add    BYTE PTR [rax],al
   10de5:	00 00                	add    BYTE PTR [rax],al
   10de7:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10ded:	00 00                	add    BYTE PTR [rax],al
   10def:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10df5:	00 00                	add    BYTE PTR [rax],al
   10df7:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 c0                	add    al,al
   10e01:	20 00                	and    BYTE PTR [rax],al
   10e03:	00 00                	add    BYTE PTR [rax],al
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 d0                	add    al,dl
   10e09:	20 00                	and    BYTE PTR [rax],al
   10e0b:	00 00                	add    BYTE PTR [rax],al
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 e0                	add    al,ah
   10e11:	20 00                	and    BYTE PTR [rax],al
   10e13:	00 00                	add    BYTE PTR [rax],al
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 f0                	add    al,dh
   10e19:	20 00                	and    BYTE PTR [rax],al
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 00                	add    BYTE PTR [rax],al
   10e21:	21 00                	and    DWORD PTR [rax],eax
   10e23:	00 00                	add    BYTE PTR [rax],al
   10e25:	00 00                	add    BYTE PTR [rax],al
   10e27:	00 10                	add    BYTE PTR [rax],dl
   10e29:	21 00                	and    DWORD PTR [rax],eax
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 20                	add    BYTE PTR [rax],ah
   10e31:	21 00                	and    DWORD PTR [rax],eax
   10e33:	00 00                	add    BYTE PTR [rax],al
   10e35:	00 00                	add    BYTE PTR [rax],al
   10e37:	00 30                	add    BYTE PTR [rax],dh
   10e39:	21 00                	and    DWORD PTR [rax],eax
   10e3b:	00 00                	add    BYTE PTR [rax],al
   10e3d:	00 00                	add    BYTE PTR [rax],al
   10e3f:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e42:	00 00                	add    BYTE PTR [rax],al
   10e44:	00 00                	add    BYTE PTR [rax],al
   10e46:	00 00                	add    BYTE PTR [rax],al
   10e48:	50                   	push   rax
   10e49:	21 00                	and    DWORD PTR [rax],eax
   10e4b:	00 00                	add    BYTE PTR [rax],al
   10e4d:	00 00                	add    BYTE PTR [rax],al
   10e4f:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e52:	00 00                	add    BYTE PTR [rax],al
   10e54:	00 00                	add    BYTE PTR [rax],al
   10e56:	00 00                	add    BYTE PTR [rax],al
   10e58:	70 21                	jo     10e7b <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e5a:	00 00                	add    BYTE PTR [rax],al
   10e5c:	00 00                	add    BYTE PTR [rax],al
   10e5e:	00 00                	add    BYTE PTR [rax],al
   10e60:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e63:	00 00                	add    BYTE PTR [rax],al
   10e65:	00 00                	add    BYTE PTR [rax],al
   10e67:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e6d:	00 00                	add    BYTE PTR [rax],al
   10e6f:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e75:	00 00                	add    BYTE PTR [rax],al
   10e77:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 c0                	add    al,al
   10e81:	21 00                	and    DWORD PTR [rax],eax
   10e83:	00 00                	add    BYTE PTR [rax],al
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 d0                	add    al,dl
   10e89:	21 00                	and    DWORD PTR [rax],eax
   10e8b:	00 00                	add    BYTE PTR [rax],al
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 e0                	add    al,ah
   10e91:	21 00                	and    DWORD PTR [rax],eax
   10e93:	00 00                	add    BYTE PTR [rax],al
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 f0                	add    al,dh
   10e99:	21 00                	and    DWORD PTR [rax],eax
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 00                	add    BYTE PTR [rax],al
   10ea1:	22 00                	and    al,BYTE PTR [rax]
   10ea3:	00 00                	add    BYTE PTR [rax],al
   10ea5:	00 00                	add    BYTE PTR [rax],al
   10ea7:	00 10                	add    BYTE PTR [rax],dl
   10ea9:	22 00                	and    al,BYTE PTR [rax]
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 20                	add    BYTE PTR [rax],ah
   10eb1:	22 00                	and    al,BYTE PTR [rax]
   10eb3:	00 00                	add    BYTE PTR [rax],al
   10eb5:	00 00                	add    BYTE PTR [rax],al
   10eb7:	00 30                	add    BYTE PTR [rax],dh
   10eb9:	22 00                	and    al,BYTE PTR [rax]
   10ebb:	00 00                	add    BYTE PTR [rax],al
   10ebd:	00 00                	add    BYTE PTR [rax],al
   10ebf:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10ec2:	00 00                	add    BYTE PTR [rax],al
   10ec4:	00 00                	add    BYTE PTR [rax],al
   10ec6:	00 00                	add    BYTE PTR [rax],al
   10ec8:	50                   	push   rax
   10ec9:	22 00                	and    al,BYTE PTR [rax]
   10ecb:	00 00                	add    BYTE PTR [rax],al
   10ecd:	00 00                	add    BYTE PTR [rax],al
   10ecf:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10ed2:	00 00                	add    BYTE PTR [rax],al
   10ed4:	00 00                	add    BYTE PTR [rax],al
   10ed6:	00 00                	add    BYTE PTR [rax],al
   10ed8:	70 22                	jo     10efc <_GLOBAL_OFFSET_TABLE_+0x15c>
   10eda:	00 00                	add    BYTE PTR [rax],al
   10edc:	00 00                	add    BYTE PTR [rax],al
   10ede:	00 00                	add    BYTE PTR [rax],al
   10ee0:	80 22 00             	and    BYTE PTR [rdx],0x0
   10ee3:	00 00                	add    BYTE PTR [rax],al
   10ee5:	00 00                	add    BYTE PTR [rax],al
   10ee7:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10eed:	00 00                	add    BYTE PTR [rax],al
   10eef:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10ef5:	00 00                	add    BYTE PTR [rax],al
   10ef7:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 c0                	add    al,al
   10f01:	22 00                	and    al,BYTE PTR [rax]
   10f03:	00 00                	add    BYTE PTR [rax],al
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 d0                	add    al,dl
   10f09:	22 00                	and    al,BYTE PTR [rax]
   10f0b:	00 00                	add    BYTE PTR [rax],al
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 e0                	add    al,ah
   10f11:	22 00                	and    al,BYTE PTR [rax]
   10f13:	00 00                	add    BYTE PTR [rax],al
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 f0                	add    al,dh
   10f19:	22 00                	and    al,BYTE PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 00                	add    BYTE PTR [rax],al
   10f21:	23 00                	and    eax,DWORD PTR [rax]
   10f23:	00 00                	add    BYTE PTR [rax],al
   10f25:	00 00                	add    BYTE PTR [rax],al
   10f27:	00 10                	add    BYTE PTR [rax],dl
   10f29:	23 00                	and    eax,DWORD PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 20                	add    BYTE PTR [rax],ah
   10f31:	23 00                	and    eax,DWORD PTR [rax]
   10f33:	00 00                	add    BYTE PTR [rax],al
   10f35:	00 00                	add    BYTE PTR [rax],al
   10f37:	00 30                	add    BYTE PTR [rax],dh
   10f39:	23 00                	and    eax,DWORD PTR [rax]
   10f3b:	00 00                	add    BYTE PTR [rax],al
   10f3d:	00 00                	add    BYTE PTR [rax],al
   10f3f:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f42:	00 00                	add    BYTE PTR [rax],al
   10f44:	00 00                	add    BYTE PTR [rax],al
   10f46:	00 00                	add    BYTE PTR [rax],al
   10f48:	50                   	push   rax
   10f49:	23 00                	and    eax,DWORD PTR [rax]
   10f4b:	00 00                	add    BYTE PTR [rax],al
   10f4d:	00 00                	add    BYTE PTR [rax],al
   10f4f:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f52:	00 00                	add    BYTE PTR [rax],al
   10f54:	00 00                	add    BYTE PTR [rax],al
   10f56:	00 00                	add    BYTE PTR [rax],al
   10f58:	70 23                	jo     10f7d <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f5a:	00 00                	add    BYTE PTR [rax],al
   10f5c:	00 00                	add    BYTE PTR [rax],al
   10f5e:	00 00                	add    BYTE PTR [rax],al
   10f60:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f63:	00 00                	add    BYTE PTR [rax],al
   10f65:	00 00                	add    BYTE PTR [rax],al
   10f67:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f6d:	00 00                	add    BYTE PTR [rax],al
   10f6f:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f75:	00 00                	add    BYTE PTR [rax],al
   10f77:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 c0                	add    al,al
   10f81:	23 00                	and    eax,DWORD PTR [rax]
   10f83:	00 00                	add    BYTE PTR [rax],al
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 d0                	add    al,dl
   10f89:	23 00                	and    eax,DWORD PTR [rax]
   10f8b:	00 00                	add    BYTE PTR [rax],al
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 e0                	add    al,ah
   10f91:	23 00                	and    eax,DWORD PTR [rax]
   10f93:	00 00                	add    BYTE PTR [rax],al
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 f0                	add    al,dh
   10f99:	23 00                	and    eax,DWORD PTR [rax]
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 00                	add    BYTE PTR [rax],al
   10fa1:	24 00                	and    al,0x0
   10fa3:	00 00                	add    BYTE PTR [rax],al
   10fa5:	00 00                	add    BYTE PTR [rax],al
   10fa7:	00 10                	add    BYTE PTR [rax],dl
   10fa9:	24 00                	and    al,0x0
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 20                	add    BYTE PTR [rax],ah
   10fb1:	24 00                	and    al,0x0
   10fb3:	00 00                	add    BYTE PTR [rax],al
   10fb5:	00 00                	add    BYTE PTR [rax],al
   10fb7:	00 30                	add    BYTE PTR [rax],dh
   10fb9:	24 00                	and    al,0x0
   10fbb:	00 00                	add    BYTE PTR [rax],al
   10fbd:	00 00                	add    BYTE PTR [rax],al
   10fbf:	00 40 24             	add    BYTE PTR [rax+0x24],al
   10fc2:	00 00                	add    BYTE PTR [rax],al
   10fc4:	00 00                	add    BYTE PTR [rax],al
   10fc6:	00 00                	add    BYTE PTR [rax],al
   10fc8:	50                   	push   rax
   10fc9:	24 00                	and    al,0x0
   10fcb:	00 00                	add    BYTE PTR [rax],al
   10fcd:	00 00                	add    BYTE PTR [rax],al
   10fcf:	00 60 24             	add    BYTE PTR [rax+0x24],ah
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .bss:

0000000000011060 <optarg@GLIBC_2.2.5>:
	...

0000000000011068 <completed.0>:
	...

0000000000011080 <demo_mode>:
   11080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011084 <strict_icmp_timestamp_req>:
   11084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011088 <strict_nmap_host_alive_check>:
	...

00000000000110a0 <threads>:
	...

00000000000112a0 <thread_count>:
   112a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a4 <total_pkt_captured>:
   112a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a8 <is_running>:
	...

00000000000112b0 <last_clean_time>:
	...

00000000000112b8 <clean_delay>:
	...

00000000000112c0 <pkt_counter>:
	...

00000000000112e0 <rules>:
	...

00000000000f32e0 <blocked_ipv4_addrs>:
	...

00000000000f3520 <watchlist>:
	...

0000000000107d20 <arpcache>:
	...

0000000000109f00 <ip_addr>:
	...

0000000000109f20 <debug_mode>:
	...

0000000000109f21 <use_sqlite>:
	...

0000000000109f40 <sqlite_db_path>:
	...

0000000000109f60 <clean_delay_pkts>:
  109f60:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f64 <packet_print>:
	...

0000000000109f65 <quiet_exit>:
  109f65:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f68 <vigil_location>:
	...

0000000000109f70 <input_adapter>:
	...

0000000000109f80 <output_adapter>:
	...

0000000000109f90 <local_ip>:
	...

0000000000109fb0 <def_gw>:
	...

0000000000109fc2 <use_spi>:
	...

0000000000109fc4 <homenet>:
  109fc4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fc8 <homenetmask>:
  109fc8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fcc <in_test_mode>:
	...

0000000000109fe0 <spi_table>:
	...

0000000000137fe0 <lua_scripts>:
	...

0000000000138800 <fn_mem_map>:
	...

000000000013b000 <fn_num>:
	...

000000000013b020 <arr_num.2>:
	...

000000000013b040 <pkt_times.1>:
	...

000000000013f040 <current_log_num.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.0+0x1>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754e8501>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer.0+0x10>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
