
vigil.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000350 <.interp>:
 350:	2f                   	(bad)  
 351:	6c                   	ins    BYTE PTR es:[rdi],dx
 352:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 359:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 35e:	78 2d                	js     38d <buffer.0+0x30d>
 360:	78 38                	js     39a <buffer.0+0x31a>
 362:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 369:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000370 <.note.gnu.property>:
 370:	04 00                	add    al,0x0
 372:	00 00                	add    BYTE PTR [rax],al
 374:	20 00                	and    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	05 00 00 00 47       	add    eax,0x47000000
 37d:	4e 55                	rex.WRX push rbp
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	00 00                	add    BYTE PTR [rax],al
 383:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 387:	00 03                	add    BYTE PTR [rbx],al
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 02                	add    BYTE PTR [rdx],al
 391:	80 00 c0             	add    BYTE PTR [rax],0xc0
 394:	04 00                	add    al,0x0
 396:	00 00                	add    BYTE PTR [rax],al
 398:	01 00                	add    DWORD PTR [rax],eax
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000003a0 <.note.gnu.build-id>:
 3a0:	04 00                	add    al,0x0
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	14 00                	adc    al,0x0
 3a6:	00 00                	add    BYTE PTR [rax],al
 3a8:	03 00                	add    eax,DWORD PTR [rax]
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	47                   	rex.RXB
 3ad:	4e 55                	rex.WRX push rbp
 3af:	00 8d 6b c8 2e 3b    	add    BYTE PTR [rbp+0x3b2ec86b],cl
 3b5:	d9 65 3d             	fldenv [rbp+0x3d]
 3b8:	ca 00 65             	retf   0x6500
 3bb:	ea                   	(bad)  
 3bc:	b1 96                	mov    cl,0x96
 3be:	e8 51 7a e1 f0       	call   fffffffff0e17e14 <_end+0xfffffffff0cd8dd4>
 3c3:	9a                   	(bad)  

Disassembly of section .note.ABI-tag:

00000000000003c4 <__abi_tag>:
 3c4:	04 00                	add    al,0x0
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	10 00                	adc    BYTE PTR [rax],al
 3ca:	00 00                	add    BYTE PTR [rax],al
 3cc:	01 00                	add    DWORD PTR [rax],eax
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	47                   	rex.RXB
 3d1:	4e 55                	rex.WRX push rbp
 3d3:	00 00                	add    BYTE PTR [rax],al
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 03                	add    BYTE PTR [rbx],al
 3d9:	00 00                	add    BYTE PTR [rax],al
 3db:	00 02                	add    BYTE PTR [rdx],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003e8 <.gnu.hash>:
 3e8:	03 00                	add    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
 3ef:	00 01                	add    BYTE PTR [rcx],al
 3f1:	00 00                	add    BYTE PTR [rax],al
 3f3:	00 06                	add    BYTE PTR [rsi],al
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 00                	add    BYTE PTR [rax],al
 3f9:	14 81                	adc    al,0x81
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 400:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
 403:	00 00                	add    BYTE PTR [rax],al
 405:	00 00                	add    BYTE PTR [rax],al
 407:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
 40b:	00 d1                	add    cl,dl
 40d:	65 ce                	gs (bad) 
 40f:	6d                   	ins    DWORD PTR es:[rdi],dx
 410:	32 b3 f0 a9 b3 a2    	xor    dh,BYTE PTR [rbx-0x5d4c5610]
 416:	f7 12                	not    DWORD PTR [rdx]

Disassembly of section .dynsym:

0000000000000418 <.dynsym>:
	...
 430:	88 00                	mov    BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	12 00                	adc    al,BYTE PTR [rax]
	...
 446:	00 00                	add    BYTE PTR [rax],al
 448:	47 01 00             	rex.RXB add DWORD PTR [r8],r8d
 44b:	00 12                	add    BYTE PTR [rdx],dl
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 90 01 00 00 12    	add    BYTE PTR [rax+0x12000001],dl
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 e3                	add    bl,ah
 479:	01 00                	add    DWORD PTR [rax],eax
 47b:	00 12                	add    BYTE PTR [rdx],dl
	...
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
 492:	00 00                	add    BYTE PTR [rax],al
 494:	12 00                	adc    al,BYTE PTR [rax]
	...
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	cb                   	retf   
 4a9:	01 00                	add    DWORD PTR [rax],eax
 4ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 90 00 00 00 12    	add    BYTE PTR [rax+0x12000000],dl
	...
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 07                	add    BYTE PTR [rdi],al
 4d9:	01 00                	add    DWORD PTR [rax],eax
 4db:	00 12                	add    BYTE PTR [rdx],dl
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 1d 00 00 00 20    	add    BYTE PTR [rip+0x20000000],bl        # 200004f5 <_end+0x1fec14b5>
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 98 01 00 00 12    	add    BYTE PTR [rax+0x12000001],bl
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 4d 02             	add    BYTE PTR [rbp+0x2],cl
 522:	00 00                	add    BYTE PTR [rax],al
 524:	12 00                	adc    al,BYTE PTR [rax]
	...
 536:	00 00                	add    BYTE PTR [rax],al
 538:	90                   	nop
 539:	02 00                	add    al,BYTE PTR [rax]
 53b:	00 12                	add    BYTE PTR [rdx],dl
	...
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 88 02 00 00 12    	add    BYTE PTR [rax+0x12000002],cl
	...
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 7b 00             	add    BYTE PTR [rbx+0x0],bh
 56a:	00 00                	add    BYTE PTR [rax],al
 56c:	12 00                	adc    al,BYTE PTR [rax]
	...
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	b6 01                	mov    dh,0x1
 582:	00 00                	add    BYTE PTR [rax],al
 584:	12 00                	adc    al,BYTE PTR [rax]
	...
 596:	00 00                	add    BYTE PTR [rax],al
 598:	2a 01                	sub    al,BYTE PTR [rcx]
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	f1                   	icebp  
 5b1:	01 00                	add    DWORD PTR [rax],eax
 5b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5c5:	00 00                	add    BYTE PTR [rax],al
 5c7:	00 40 01             	add    BYTE PTR [rax+0x1],al
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	b0 01                	mov    al,0x1
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	5c                   	pop    rsp
 5f9:	02 00                	add    al,BYTE PTR [rax]
 5fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	00 50 00             	add    BYTE PTR [rax+0x0],dl
 612:	00 00                	add    BYTE PTR [rax],al
 614:	12 00                	adc    al,BYTE PTR [rax]
	...
 626:	00 00                	add    BYTE PTR [rax],al
 628:	ae                   	scas   al,BYTE PTR es:[rdi]
 629:	02 00                	add    al,BYTE PTR [rax]
 62b:	00 12                	add    BYTE PTR [rdx],dl
	...
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
 642:	00 00                	add    BYTE PTR [rax],al
 644:	12 00                	adc    al,BYTE PTR [rax]
	...
 656:	00 00                	add    BYTE PTR [rax],al
 658:	a3 00 00 00 12 00 00 	movabs ds:0x12000000,eax
 65f:	00 00 
	...
 66d:	00 00                	add    BYTE PTR [rax],al
 66f:	00 01                	add    BYTE PTR [rcx],al
 671:	00 00                	add    BYTE PTR [rax],al
 673:	00 20                	add    BYTE PTR [rax],ah
	...
 685:	00 00                	add    BYTE PTR [rax],al
 687:	00 08                	add    BYTE PTR [rax],cl
 689:	02 00                	add    al,BYTE PTR [rax]
 68b:	00 12                	add    BYTE PTR [rdx],dl
	...
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 5c 01 00          	add    BYTE PTR [rcx+rax*1+0x0],bl
 6a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6b5:	00 00                	add    BYTE PTR [rax],al
 6b7:	00 76 00             	add    BYTE PTR [rsi+0x0],dh
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 6ce:	00 00                	add    BYTE PTR [rax],al
 6d0:	1f                   	(bad)  
 6d1:	02 00                	add    al,BYTE PTR [rax]
 6d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 6e5:	00 00                	add    BYTE PTR [rax],al
 6e7:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 6ea:	00 00                	add    BYTE PTR [rax],al
 6ec:	20 00                	and    BYTE PTR [rax],al
	...
 6fe:	00 00                	add    BYTE PTR [rax],al
 700:	6b 02 00             	imul   eax,DWORD PTR [rdx],0x0
 703:	00 12                	add    BYTE PTR [rdx],dl
	...
 715:	00 00                	add    BYTE PTR [rax],al
 717:	00 64 02 00          	add    BYTE PTR [rdx+rax*1+0x0],ah
 71b:	00 12                	add    BYTE PTR [rdx],dl
	...
 72d:	00 00                	add    BYTE PTR [rax],al
 72f:	00 95 02 00 00 12    	add    BYTE PTR [rbp+0x12000002],dl
	...
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 3a                	add    BYTE PTR [rdx],bh
 749:	02 00                	add    al,BYTE PTR [rax]
 74b:	00 12                	add    BYTE PTR [rdx],dl
	...
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
 762:	00 00                	add    BYTE PTR [rax],al
 764:	12 00                	adc    al,BYTE PTR [rax]
	...
 776:	00 00                	add    BYTE PTR [rax],al
 778:	01 01                	add    DWORD PTR [rcx],eax
 77a:	00 00                	add    BYTE PTR [rax],al
 77c:	12 00                	adc    al,BYTE PTR [rax]
	...
 78e:	00 00                	add    BYTE PTR [rax],al
 790:	1e                   	(bad)  
 791:	01 00                	add    DWORD PTR [rax],eax
 793:	00 12                	add    BYTE PTR [rdx],dl
	...
 7a5:	00 00                	add    BYTE PTR [rax],al
 7a7:	00 26                	add    BYTE PTR [rsi],ah
 7a9:	02 00                	add    al,BYTE PTR [rax]
 7ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 7bd:	00 00                	add    BYTE PTR [rax],al
 7bf:	00 d5                	add    ch,dl
 7c1:	00 00                	add    BYTE PTR [rax],al
 7c3:	00 12                	add    BYTE PTR [rdx],dl
	...
 7d5:	00 00                	add    BYTE PTR [rax],al
 7d7:	00 01                	add    BYTE PTR [rcx],al
 7d9:	02 00                	add    al,BYTE PTR [rax]
 7db:	00 12                	add    BYTE PTR [rdx],dl
	...
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 7a 02             	add    BYTE PTR [rdx+0x2],bh
 7f2:	00 00                	add    BYTE PTR [rax],al
 7f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 806:	00 00                	add    BYTE PTR [rax],al
 808:	97                   	xchg   edi,eax
 809:	01 00                	add    DWORD PTR [rax],eax
 80b:	00 12                	add    BYTE PTR [rdx],dl
	...
 81d:	00 00                	add    BYTE PTR [rax],al
 81f:	00 dc                	add    ah,bl
 821:	01 00                	add    DWORD PTR [rax],eax
 823:	00 12                	add    BYTE PTR [rdx],dl
	...
 835:	00 00                	add    BYTE PTR [rax],al
 837:	00 ae 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],ch
	...
 84d:	00 00                	add    BYTE PTR [rax],al
 84f:	00 ab 01 00 00 12    	add    BYTE PTR [rbx+0x12000001],ch
	...
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
 86a:	00 00                	add    BYTE PTR [rax],al
 86c:	12 00                	adc    al,BYTE PTR [rax]
	...
 87e:	00 00                	add    BYTE PTR [rax],al
 880:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 881:	01 00                	add    DWORD PTR [rax],eax
 883:	00 12                	add    BYTE PTR [rdx],dl
	...
 895:	00 00                	add    BYTE PTR [rax],al
 897:	00 2f                	add    BYTE PTR [rdi],ch
 899:	01 00                	add    DWORD PTR [rax],eax
 89b:	00 12                	add    BYTE PTR [rdx],dl
	...
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 e0                	add    al,ah
 8b1:	00 00                	add    BYTE PTR [rax],al
 8b3:	00 12                	add    BYTE PTR [rdx],dl
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 bd 00 00 00 12    	add    BYTE PTR [rbp+0x12000000],bh
	...
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 9d 01 00 00 12    	add    BYTE PTR [rbp+0x12000001],bl
	...
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 eb                	add    bl,ch
 8f9:	00 00                	add    BYTE PTR [rax],al
 8fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 9d 02 00 00 12    	add    BYTE PTR [rbp+0x12000002],bl
	...
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 88 01 00 00 12    	add    BYTE PTR [rax+0x12000001],cl
	...
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 35 02 00 00 12    	add    BYTE PTR [rip+0x12000002],dh        # 12000947 <_end+0x11ec1907>
	...
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 f9                	add    cl,bh
 959:	00 00                	add    BYTE PTR [rax],al
 95b:	00 12                	add    BYTE PTR [rdx],dl
	...
 96d:	00 00                	add    BYTE PTR [rax],al
 96f:	00 c4                	add    ah,al
 971:	01 00                	add    DWORD PTR [rax],eax
 973:	00 12                	add    BYTE PTR [rdx],dl
	...
 985:	00 00                	add    BYTE PTR [rax],al
 987:	00 d5                	add    ch,dl
 989:	01 00                	add    DWORD PTR [rax],eax
 98b:	00 12                	add    BYTE PTR [rdx],dl
	...
 99d:	00 00                	add    BYTE PTR [rax],al
 99f:	00 cb                	add    bl,cl
 9a1:	00 00                	add    BYTE PTR [rax],al
 9a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
 9ba:	00 00                	add    BYTE PTR [rax],al
 9bc:	12 00                	adc    al,BYTE PTR [rax]
	...
 9ce:	00 00                	add    BYTE PTR [rax],al
 9d0:	bd 01 00 00 12       	mov    ebp,0x12000001
	...
 9e5:	00 00                	add    BYTE PTR [rax],al
 9e7:	00 17                	add    BYTE PTR [rdi],dl
 9e9:	02 00                	add    al,BYTE PTR [rax]
 9eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 9fd:	00 00                	add    BYTE PTR [rax],al
 9ff:	00 54 01 00          	add    BYTE PTR [rcx+rax*1+0x0],dl
 a03:	00 12                	add    BYTE PTR [rdx],dl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 42 02             	add    BYTE PTR [rdx+0x2],al
 a1a:	00 00                	add    BYTE PTR [rax],al
 a1c:	12 00                	adc    al,BYTE PTR [rax]
	...
 a2e:	00 00                	add    BYTE PTR [rax],al
 a30:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
 a33:	00 12                	add    BYTE PTR [rdx],dl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 47 02             	add    BYTE PTR [rdi+0x2],al
 a4a:	00 00                	add    BYTE PTR [rax],al
 a4c:	12 00                	adc    al,BYTE PTR [rax]
	...
 a5e:	00 00                	add    BYTE PTR [rax],al
 a60:	73 02                	jae    a64 <__abi_tag+0x6a0>
 a62:	00 00                	add    BYTE PTR [rax],al
 a64:	12 00                	adc    al,BYTE PTR [rax]
	...
 a76:	00 00                	add    BYTE PTR [rax],al
 a78:	8f 01                	pop    QWORD PTR [rcx]
 a7a:	00 00                	add    BYTE PTR [rax],al
 a7c:	12 00                	adc    al,BYTE PTR [rax]
	...
 a8e:	00 00                	add    BYTE PTR [rax],al
 a90:	36 01 00             	ss add DWORD PTR [rax],eax
 a93:	00 12                	add    BYTE PTR [rdx],dl
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 2c 02             	add    BYTE PTR [rdx+rax*1],ch
 aaa:	00 00                	add    BYTE PTR [rax],al
 aac:	12 00                	adc    al,BYTE PTR [rax]
	...
 abe:	00 00                	add    BYTE PTR [rax],al
 ac0:	76 01                	jbe    ac3 <__abi_tag+0x6ff>
 ac2:	00 00                	add    BYTE PTR [rax],al
 ac4:	12 00                	adc    al,BYTE PTR [rax]
	...
 ad6:	00 00                	add    BYTE PTR [rax],al
 ad8:	81 02 00 00 12 00    	add    DWORD PTR [rdx],0x120000
	...
 aee:	00 00                	add    BYTE PTR [rax],al
 af0:	96                   	xchg   esi,eax
 af1:	00 00                	add    BYTE PTR [rax],al
 af3:	00 12                	add    BYTE PTR [rdx],dl
	...
 b05:	00 00                	add    BYTE PTR [rax],al
 b07:	00 3b                	add    BYTE PTR [rbx],bh
 b09:	01 00                	add    DWORD PTR [rax],eax
 b0b:	00 12                	add    BYTE PTR [rdx],dl
	...
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 0f                	add    BYTE PTR [rdi],cl
 b21:	01 00                	add    DWORD PTR [rax],eax
 b23:	00 22                	add    BYTE PTR [rdx],ah
	...
 b35:	00 00                	add    BYTE PTR [rax],al
 b37:	00 f9                	add    cl,bh
 b39:	01 00                	add    DWORD PTR [rax],eax
 b3b:	00 12                	add    BYTE PTR [rdx],dl
 b3d:	00 10                	add    BYTE PTR [rax],dl
 b3f:	00 df                	add    bh,bl
 b41:	95                   	xchg   ebp,eax
 b42:	00 00                	add    BYTE PTR [rax],al
 b44:	00 00                	add    BYTE PTR [rax],al
 b46:	00 00                	add    BYTE PTR [rax],al
 b48:	3a 01                	cmp    al,BYTE PTR [rcx]
 b4a:	00 00                	add    BYTE PTR [rax],al
 b4c:	00 00                	add    BYTE PTR [rax],al
 b4e:	00 00                	add    BYTE PTR [rax],al
 b50:	ea                   	(bad)  
 b51:	01 00                	add    DWORD PTR [rax],eax
 b53:	00 11                	add    BYTE PTR [rcx],dl
 b55:	00 1b                	add    BYTE PTR [rbx],bl
 b57:	00 60 10             	add    BYTE PTR [rax+0x10],ah
 b5a:	01 00                	add    DWORD PTR [rax],eax
 b5c:	00 00                	add    BYTE PTR [rax],al
 b5e:	00 00                	add    BYTE PTR [rax],al
 b60:	08 00                	or     BYTE PTR [rax],al
 b62:	00 00                	add    BYTE PTR [rax],al
 b64:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000b68 <.dynstr>:
 b68:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b6b:	54                   	push   rsp
 b6c:	4d 5f                	rex.WRB pop r15
 b6e:	64 65 72 65          	fs gs jb bd7 <__abi_tag+0x813>
 b72:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 b79:	4d 
 b7a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 b7c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b7d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b7e:	65 54                	gs push rsp
 b80:	61                   	(bad)  
 b81:	62                   	(bad)  
 b82:	6c                   	ins    BYTE PTR es:[rdi],dx
 b83:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 b87:	67 6d                	ins    DWORD PTR es:[edi],dx
 b89:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b8a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b8b:	5f                   	pop    rdi
 b8c:	73 74                	jae    c02 <__abi_tag+0x83e>
 b8e:	61                   	(bad)  
 b8f:	72 74                	jb     c05 <__abi_tag+0x841>
 b91:	5f                   	pop    rdi
 b92:	5f                   	pop    rdi
 b93:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 b96:	54                   	push   rsp
 b97:	4d 5f                	rex.WRB pop r15
 b99:	72 65                	jb     c00 <__abi_tag+0x83c>
 b9b:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 ba2:	4d 
 ba3:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 ba5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 ba6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 ba7:	65 54                	gs push rsp
 ba9:	61                   	(bad)  
 baa:	62                   	(bad)  
 bab:	6c                   	ins    BYTE PTR es:[rdi],dx
 bac:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
 bb0:	61                   	(bad)  
 bb1:	70 5f                	jo     c12 <__abi_tag+0x84e>
 bb3:	6c                   	ins    BYTE PTR es:[rdi],dx
 bb4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bb5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bb6:	70 00                	jo     bb8 <__abi_tag+0x7f4>
 bb8:	70 63                	jo     c1d <__abi_tag+0x859>
 bba:	61                   	(bad)  
 bbb:	70 5f                	jo     c1c <__abi_tag+0x858>
 bbd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bbe:	70 65                	jo     c25 <__abi_tag+0x861>
 bc0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 bc1:	5f                   	pop    rdi
 bc2:	6c                   	ins    BYTE PTR es:[rdi],dx
 bc3:	69 76 65 00 73 71 6c 	imul   esi,DWORD PTR [rsi+0x65],0x6c717300
 bca:	69 74 65 33 5f 65 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x7272655f
 bd1:	72 
 bd2:	6d                   	ins    DWORD PTR es:[rdi],dx
 bd3:	73 67                	jae    c3c <__abi_tag+0x878>
 bd5:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 bd8:	6c                   	ins    BYTE PTR es:[rdi],dx
 bd9:	69 74 65 33 5f 66 72 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6572665f
 be0:	65 
 be1:	65 00 73 71          	add    BYTE PTR gs:[rbx+0x71],dh
 be5:	6c                   	ins    BYTE PTR es:[rdi],dx
 be6:	69 74 65 33 5f 65 78 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6578655f
 bed:	65 
 bee:	63 00                	movsxd eax,DWORD PTR [rax]
 bf0:	73 71                	jae    c63 <__abi_tag+0x89f>
 bf2:	6c                   	ins    BYTE PTR es:[rdi],dx
 bf3:	69 74 65 33 5f 63 6c 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x6f6c635f
 bfa:	6f 
 bfb:	73 65                	jae    c62 <__abi_tag+0x89e>
 bfd:	00 73 71             	add    BYTE PTR [rbx+0x71],dh
 c00:	6c                   	ins    BYTE PTR es:[rdi],dx
 c01:	69 74 65 33 5f 6f 70 	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x65706f5f
 c08:	65 
 c09:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c0a:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c0e:	5f                   	pop    rdi
 c0f:	73 65                	jae    c76 <__abi_tag+0x8b2>
 c11:	74 74                	je     c87 <__abi_tag+0x8c3>
 c13:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c14:	70 00                	jo     c16 <__abi_tag+0x852>
 c16:	6c                   	ins    BYTE PTR es:[rdi],dx
 c17:	75 61                	jne    c7a <__abi_tag+0x8b6>
 c19:	4c 5f                	rex.WR pop rdi
 c1b:	6c                   	ins    BYTE PTR es:[rdi],dx
 c1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c1d:	61                   	(bad)  
 c1e:	64 66 69 6c 65 78 00 	imul   bp,WORD PTR fs:[rbp+riz*2+0x78],0x6c00
 c25:	6c 
 c26:	75 61                	jne    c89 <__abi_tag+0x8c5>
 c28:	4c 5f                	rex.WR pop rdi
 c2a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c2b:	65 77 73             	gs ja  ca1 <__abi_tag+0x8dd>
 c2e:	74 61                	je     c91 <__abi_tag+0x8cd>
 c30:	74 65                	je     c97 <__abi_tag+0x8d3>
 c32:	00 6c 75 61          	add    BYTE PTR [rbp+rsi*2+0x61],ch
 c36:	5f                   	pop    rdi
 c37:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
 c3b:	65 00 6c 75 61       	add    BYTE PTR gs:[rbp+rsi*2+0x61],ch
 c40:	5f                   	pop    rdi
 c41:	70 63                	jo     ca6 <__abi_tag+0x8e2>
 c43:	61                   	(bad)  
 c44:	6c                   	ins    BYTE PTR es:[rdi],dx
 c45:	6c                   	ins    BYTE PTR es:[rdi],dx
 c46:	6b 00 6c             	imul   eax,DWORD PTR [rax],0x6c
 c49:	75 61                	jne    cac <__abi_tag+0x8e8>
 c4b:	5f                   	pop    rdi
 c4c:	67 65 74 74          	addr32 gs je cc4 <__abi_tag+0x900>
 c50:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c51:	70 00                	jo     c53 <__abi_tag+0x88f>
 c53:	6c                   	ins    BYTE PTR es:[rdi],dx
 c54:	75 61                	jne    cb7 <__abi_tag+0x8f3>
 c56:	4c 5f                	rex.WR pop rdi
 c58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c59:	70 65                	jo     cc0 <__abi_tag+0x8fc>
 c5b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c5c:	6c                   	ins    BYTE PTR es:[rdi],dx
 c5d:	69 62 73 00 67 65 74 	imul   esp,DWORD PTR [rdx+0x73],0x74656700
 c64:	6c                   	ins    BYTE PTR es:[rdi],dx
 c65:	69 6e 65 00 66 67 65 	imul   ebp,DWORD PTR [rsi+0x65],0x65676600
 c6c:	74 63                	je     cd1 <__abi_tag+0x90d>
 c6e:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 c71:	72 6e                	jb     ce1 <__abi_tag+0x91d>
 c73:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 c76:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 c79:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 c7c:	5f                   	pop    rdi
 c7d:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 c83:	7a 65                	jp     cea <__abi_tag+0x926>
 c85:	00 6e 74             	add    BYTE PTR [rsi+0x74],ch
 c88:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c89:	68 6c 00 6e 74       	push   0x746e006c
 c8e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 c8f:	68 73 00 72 65       	push   0x65720073
 c94:	61                   	(bad)  
 c95:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 c99:	72 63                	jb     cfe <__abi_tag+0x93a>
 c9b:	68 72 00 6c 6f       	push   0x6f6c0072
 ca0:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 ca3:	74 69                	je     d0e <__abi_tag+0x94a>
 ca5:	6d                   	ins    DWORD PTR es:[rdi],dx
 ca6:	65 00 6d 61          	add    BYTE PTR gs:[rbp+0x61],ch
 caa:	6c                   	ins    BYTE PTR es:[rdi],dx
 cab:	6c                   	ins    BYTE PTR es:[rdi],dx
 cac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cad:	63 00                	movsxd eax,DWORD PTR [rax]
 caf:	70 74                	jo     d25 <__abi_tag+0x961>
 cb1:	68 72 65 61 64       	push   0x64616572
 cb6:	5f                   	pop    rdi
 cb7:	6a 6f                	push   0x6f
 cb9:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 cc0:	73 70                	jae    d32 <__abi_tag+0x96e>
 cc2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 cc3:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 cc6:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 cc9:	72 61                	jb     d2c <__abi_tag+0x968>
 ccb:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 cce:	73 79                	jae    d49 <__abi_tag+0x985>
 cd0:	6d                   	ins    DWORD PTR es:[rdi],dx
 cd1:	62                   	(bad)  
 cd2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 cd3:	6c                   	ins    BYTE PTR es:[rdi],dx
 cd4:	73 00                	jae    cd6 <__abi_tag+0x912>
 cd6:	72 65                	jb     d3d <__abi_tag+0x979>
 cd8:	67 63 6f 6d          	movsxd ebp,DWORD PTR [edi+0x6d]
 cdc:	70 00                	jo     cde <__abi_tag+0x91a>
 cde:	5f                   	pop    rdi
 cdf:	5f                   	pop    rdi
 ce0:	6c                   	ins    BYTE PTR es:[rdi],dx
 ce1:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 ce8:	72 74                	jb     d5e <__abi_tag+0x99a>
 cea:	5f                   	pop    rdi
 ceb:	6d                   	ins    DWORD PTR es:[rdi],dx
 cec:	61                   	(bad)  
 ced:	69 6e 00 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x0],0x63727473
 cf4:	6d                   	ins    DWORD PTR es:[rdi],dx
 cf5:	70 00                	jo     cf7 <__abi_tag+0x933>
 cf7:	66 70 72             	data16 jo d6c <__abi_tag+0x9a8>
 cfa:	69 6e 74 66 00 66 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70660066
 d01:	75 74                	jne    d77 <__abi_tag+0x9b3>
 d03:	73 00                	jae    d05 <__abi_tag+0x941>
 d05:	73 6f                	jae    d76 <__abi_tag+0x9b2>
 d07:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
 d0a:	74 00                	je     d0c <__abi_tag+0x948>
 d0c:	73 69                	jae    d77 <__abi_tag+0x9b3>
 d0e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 d10:	61                   	(bad)  
 d11:	6c                   	ins    BYTE PTR es:[rdi],dx
 d12:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 d15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d16:	69 00 66 6f 70 65    	imul   eax,DWORD PTR [rax],0x65706f66
 d1c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 d1d:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 d20:	74 6f                	je     d91 <__abi_tag+0x9cd>
 d22:	70 74                	jo     d98 <__abi_tag+0x9d4>
 d24:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
 d27:	6c                   	ins    BYTE PTR es:[rdi],dx
 d28:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d29:	73 65                	jae    d90 <__abi_tag+0x9cc>
 d2b:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d2e:	72 63                	jb     d93 <__abi_tag+0x9cf>
 d30:	70 79                	jo     dab <__abi_tag+0x9e7>
 d32:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 d35:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
 d38:	72 61                	jb     d9b <__abi_tag+0x9d7>
 d3a:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 d3d:	73 74                	jae    db3 <__abi_tag+0x9ef>
 d3f:	72 74                	jb     db5 <__abi_tag+0x9f1>
 d41:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d42:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
 d45:	74 72                	je     db9 <__abi_tag+0x9f5>
 d47:	74 6f                	je     db8 <__abi_tag+0x9f4>
 d49:	6c                   	ins    BYTE PTR es:[rdi],dx
 d4a:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 d4d:	6d                   	ins    DWORD PTR es:[rdi],dx
 d4e:	73 65                	jae    db5 <__abi_tag+0x9f1>
 d50:	74 00                	je     d52 <__abi_tag+0x98e>
 d52:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 d53:	70 74                	jo     dc9 <__abi_tag+0xa05>
 d55:	61                   	(bad)  
 d56:	72 67                	jb     dbf <__abi_tag+0x9fb>
 d58:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d5b:	72 6e                	jb     dcb <__abi_tag+0xa07>
 d5d:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 d60:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
 d63:	64 69 67 69 74 00 73 	imul   esp,DWORD PTR fs:[rdi+0x69],0x74730074
 d6a:	74 
 d6b:	72 73                	jb     de0 <__abi_tag+0xa1c>
 d6d:	74 72                	je     de1 <__abi_tag+0xa1d>
 d6f:	00 70 74             	add    BYTE PTR [rax+0x74],dh
 d72:	68 72 65 61 64       	push   0x64616572
 d77:	5f                   	pop    rdi
 d78:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 d7b:	61                   	(bad)  
 d7c:	74 65                	je     de3 <__abi_tag+0xa1f>
 d7e:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d81:	72 6e                	jb     df1 <__abi_tag+0xa2d>
 d83:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 d86:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 d89:	72 6c                	jb     df7 <__abi_tag+0xa33>
 d8b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 d8d:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
 d90:	65 65 70 00          	gs gs jo d94 <__abi_tag+0x9d0>
 d94:	67 65 74 64          	addr32 gs je dfc <__abi_tag+0xa38>
 d98:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 d9a:	69 6d 00 73 65 6e 64 	imul   ebp,DWORD PTR [rbp+0x0],0x646e6573
 da1:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
 da4:	72 69                	jb     e0f <__abi_tag+0xa4b>
 da6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 da7:	74 66                	je     e0f <__abi_tag+0xa4b>
 da9:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
 dac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dad:	64 00 68 74          	add    BYTE PTR fs:[rax+0x74],ch
 db1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 db2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 db3:	6c                   	ins    BYTE PTR es:[rdi],dx
 db4:	00 68 74             	add    BYTE PTR [rax+0x74],ch
 db7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 db8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 db9:	73 00                	jae    dbb <__abi_tag+0x9f7>
 dbb:	73 6e                	jae    e2b <__abi_tag+0xa67>
 dbd:	70 72                	jo     e31 <__abi_tag+0xa6d>
 dbf:	69 6e 74 66 00 72 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65720066
 dc6:	67 65 78 65          	addr32 gs js e2f <__abi_tag+0xa6b>
 dca:	63 00                	movsxd eax,DWORD PTR [rax]
 dcc:	6c                   	ins    BYTE PTR es:[rdi],dx
 dcd:	69 73 74 65 6e 00 6f 	imul   esi,DWORD PTR [rbx+0x74],0x6f006e65
 dd4:	70 65                	jo     e3b <__abi_tag+0xa77>
 dd6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 dd7:	64 69 72 00 70 65 72 	imul   esi,DWORD PTR fs:[rdx+0x0],0x72726570
 dde:	72 
 ddf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 de0:	72 00                	jb     de2 <__abi_tag+0xa1e>
 de2:	73 74                	jae    e58 <__abi_tag+0xa94>
 de4:	72 63                	jb     e49 <__abi_tag+0xa85>
 de6:	61                   	(bad)  
 de7:	74 00                	je     de9 <__abi_tag+0xa25>
 de9:	61                   	(bad)  
 dea:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
 ded:	70 74                	jo     e63 <__abi_tag+0xa9f>
 def:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 df2:	74 63                	je     e57 <__abi_tag+0xa93>
 df4:	68 61 72 00 65       	push   0x65007261
 df9:	78 69                	js     e64 <__abi_tag+0xaa0>
 dfb:	74 00                	je     dfd <__abi_tag+0xa39>
 dfd:	72 65                	jb     e64 <__abi_tag+0xaa0>
 dff:	61                   	(bad)  
 e00:	64 64 69 72 00 5f 5f 	fs imul esi,DWORD PTR fs:[rdx+0x0],0x74735f5f
 e07:	73 74 
 e09:	61                   	(bad)  
 e0a:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 e0d:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 e10:	5f                   	pop    rdi
 e11:	66 61                	data16 (bad) 
 e13:	69 6c 00 73 65 74 73 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6f737465
 e1a:	6f 
 e1b:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
 e1e:	70 74                	jo     e94 <__abi_tag+0xad0>
 e20:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 e24:	70 63                	jo     e89 <__abi_tag+0xac5>
 e26:	61                   	(bad)  
 e27:	70 2e                	jo     e57 <__abi_tag+0xa93>
 e29:	73 6f                	jae    e9a <__abi_tag+0xad6>
 e2b:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
 e2e:	38 00                	cmp    BYTE PTR [rax],al
 e30:	6c                   	ins    BYTE PTR es:[rdi],dx
 e31:	69 62 73 71 6c 69 74 	imul   esp,DWORD PTR [rdx+0x73],0x74696c71
 e38:	65 33 2e             	xor    ebp,DWORD PTR gs:[rsi]
 e3b:	73 6f                	jae    eac <__abi_tag+0xae8>
 e3d:	2e 30 00             	cs xor BYTE PTR [rax],al
 e40:	6c                   	ins    BYTE PTR es:[rdi],dx
 e41:	69 62 6c 75 61 35 2e 	imul   esp,DWORD PTR [rdx+0x6c],0x2e356175
 e48:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e4a:	73 6f                	jae    ebb <__abi_tag+0xaf7>
 e4c:	2e 30 00             	cs xor BYTE PTR [rax],al
 e4f:	6c                   	ins    BYTE PTR es:[rdi],dx
 e50:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 e57:	36 00 4c 55 41       	ss add BYTE PTR [rbp+rdx*2+0x41],cl
 e5c:	5f                   	pop    rdi
 e5d:	35 2e 33 00 47       	xor    eax,0x4700332e
 e62:	4c                   	rex.WR
 e63:	49                   	rex.WB
 e64:	42                   	rex.X
 e65:	43 5f                	rex.XB pop r15
 e67:	32 2e                	xor    ch,BYTE PTR [rsi]
 e69:	34 00                	xor    al,0x0
 e6b:	47                   	rex.RXB
 e6c:	4c                   	rex.WR
 e6d:	49                   	rex.WB
 e6e:	42                   	rex.X
 e6f:	43 5f                	rex.XB pop r15
 e71:	32 2e                	xor    ch,BYTE PTR [rsi]
 e73:	33 2e                	xor    ebp,DWORD PTR [rsi]
 e75:	34 00                	xor    al,0x0
 e77:	47                   	rex.RXB
 e78:	4c                   	rex.WR
 e79:	49                   	rex.WB
 e7a:	42                   	rex.X
 e7b:	43 5f                	rex.XB pop r15
 e7d:	32 2e                	xor    ch,BYTE PTR [rsi]
 e7f:	32 2e                	xor    ch,BYTE PTR [rsi]
 e81:	35 00 47 4c 49       	xor    eax,0x494c4700
 e86:	42                   	rex.X
 e87:	43 5f                	rex.XB pop r15
 e89:	32 2e                	xor    ch,BYTE PTR [rsi]
 e8b:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]

Disassembly of section .gnu.version:

0000000000000e8e <.gnu.version>:
 e8e:	00 00                	add    BYTE PTR [rax],al
 e90:	00 00                	add    BYTE PTR [rax],al
 e92:	02 00                	add    al,BYTE PTR [rax]
 e94:	03 00                	add    eax,DWORD PTR [rax]
 e96:	03 00                	add    eax,DWORD PTR [rax]
 e98:	03 00                	add    eax,DWORD PTR [rax]
 e9a:	03 00                	add    eax,DWORD PTR [rax]
 e9c:	03 00                	add    eax,DWORD PTR [rax]
 e9e:	03 00                	add    eax,DWORD PTR [rax]
 ea0:	00 00                	add    BYTE PTR [rax],al
 ea2:	03 00                	add    eax,DWORD PTR [rax]
 ea4:	03 00                	add    eax,DWORD PTR [rax]
 ea6:	03 00                	add    eax,DWORD PTR [rax]
 ea8:	03 00                	add    eax,DWORD PTR [rax]
 eaa:	00 00                	add    BYTE PTR [rax],al
 eac:	03 00                	add    eax,DWORD PTR [rax]
 eae:	03 00                	add    eax,DWORD PTR [rax]
 eb0:	03 00                	add    eax,DWORD PTR [rax]
 eb2:	03 00                	add    eax,DWORD PTR [rax]
 eb4:	03 00                	add    eax,DWORD PTR [rax]
 eb6:	04 00                	add    al,0x0
 eb8:	00 00                	add    BYTE PTR [rax],al
 eba:	03 00                	add    eax,DWORD PTR [rax]
 ebc:	00 00                	add    BYTE PTR [rax],al
 ebe:	05 00 00 00 02       	add    eax,0x2000000
 ec3:	00 03                	add    BYTE PTR [rbx],al
 ec5:	00 03                	add    BYTE PTR [rbx],al
 ec7:	00 03                	add    BYTE PTR [rbx],al
 ec9:	00 00                	add    BYTE PTR [rax],al
 ecb:	00 03                	add    BYTE PTR [rbx],al
 ecd:	00 03                	add    BYTE PTR [rbx],al
 ecf:	00 03                	add    BYTE PTR [rbx],al
 ed1:	00 03                	add    BYTE PTR [rbx],al
 ed3:	00 03                	add    BYTE PTR [rbx],al
 ed5:	00 03                	add    BYTE PTR [rbx],al
 ed7:	00 03                	add    BYTE PTR [rbx],al
 ed9:	00 03                	add    BYTE PTR [rbx],al
 edb:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 30011e1 <_end+0x2ec21a1>
 ee1:	00 03                	add    BYTE PTR [rbx],al
 ee3:	00 03                	add    BYTE PTR [rbx],al
 ee5:	00 05 00 03 00 03    	add    BYTE PTR [rip+0x3000300],al        # 30011eb <_end+0x2ec21ab>
 eeb:	00 03                	add    BYTE PTR [rbx],al
 eed:	00 03                	add    BYTE PTR [rbx],al
 eef:	00 05 00 05 00 03    	add    BYTE PTR [rip+0x3000500],al        # 30013f5 <_end+0x2ec23b5>
 ef5:	00 05 00 06 00 03    	add    BYTE PTR [rip+0x3000600],al        # 30014fb <_end+0x2ec24bb>
 efb:	00 03                	add    BYTE PTR [rbx],al
 efd:	00 03                	add    BYTE PTR [rbx],al
 eff:	00 03                	add    BYTE PTR [rbx],al
 f01:	00 03                	add    BYTE PTR [rbx],al
 f03:	00 05 00 00 00 03    	add    BYTE PTR [rip+0x3000000],al        # 3000f09 <_end+0x2ec1ec9>
 f09:	00 03                	add    BYTE PTR [rbx],al
 f0b:	00 03                	add    BYTE PTR [rbx],al
 f0d:	00 03                	add    BYTE PTR [rbx],al
 f0f:	00 00                	add    BYTE PTR [rax],al
 f11:	00 03                	add    BYTE PTR [rbx],al
 f13:	00 03                	add    BYTE PTR [rbx],al
 f15:	00 03                	add    BYTE PTR [rbx],al
 f17:	00 03                	add    BYTE PTR [rbx],al
 f19:	00 03                	add    BYTE PTR [rbx],al
 f1b:	00 02                	add    BYTE PTR [rdx],al
 f1d:	00 03                	add    BYTE PTR [rbx],al
 f1f:	00 00                	add    BYTE PTR [rax],al
 f21:	00 03                	add    BYTE PTR [rbx],al
 f23:	00 03                	add    BYTE PTR [rbx],al
 f25:	00 01                	add    BYTE PTR [rcx],al
 f27:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

0000000000000f30 <.gnu.version_r>:
 f30:	01 00                	add    DWORD PTR [rax],eax
 f32:	01 00                	add    DWORD PTR [rax],eax
 f34:	d8 02                	fadd   DWORD PTR [rdx]
 f36:	00 00                	add    BYTE PTR [rax],al
 f38:	10 00                	adc    BYTE PTR [rax],al
 f3a:	00 00                	add    BYTE PTR [rax],al
 f3c:	20 00                	and    BYTE PTR [rax],al
 f3e:	00 00                	add    BYTE PTR [rax],al
 f40:	43 28 97 01 00 00 05 	rex.XB sub BYTE PTR [r15+0x5000001],dl
 f47:	00 f1                	add    cl,dh
 f49:	02 00                	add    al,BYTE PTR [rax]
 f4b:	00 00                	add    BYTE PTR [rax],al
 f4d:	00 00                	add    BYTE PTR [rax],al
 f4f:	00 01                	add    BYTE PTR [rcx],al
 f51:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 f54:	e7 02                	out    0x2,eax
 f56:	00 00                	add    BYTE PTR [rax],al
 f58:	10 00                	adc    BYTE PTR [rax],al
 f5a:	00 00                	add    BYTE PTR [rax],al
 f5c:	00 00                	add    BYTE PTR [rax],al
 f5e:	00 00                	add    BYTE PTR [rax],al
 f60:	14 69                	adc    al,0x69
 f62:	69 0d 00 00 06 00 f9 	imul   ecx,DWORD PTR [rip+0x60000],0x2f9        # 60f6c <rules+0x4fc8c>
 f69:	02 00 00 
 f6c:	10 00                	adc    BYTE PTR [rax],al
 f6e:	00 00                	add    BYTE PTR [rax],al
 f70:	74 19                	je     f8b <__abi_tag+0xbc7>
 f72:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [rcx],0x40000
 f78:	03 03                	add    eax,DWORD PTR [rbx]
 f7a:	00 00                	add    BYTE PTR [rax],al
 f7c:	10 00                	adc    BYTE PTR [rax],al
 f7e:	00 00                	add    BYTE PTR [rax],al
 f80:	75 1a                	jne    f9c <__abi_tag+0xbd8>
 f82:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 f88:	0f 03 00             	lsl    eax,WORD PTR [rax]
 f8b:	00 10                	add    BYTE PTR [rax],dl
 f8d:	00 00                	add    BYTE PTR [rax],al
 f8f:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 f96:	02 00                	add    al,BYTE PTR [rax]
 f98:	1b 03                	sbb    eax,DWORD PTR [rbx]
 f9a:	00 00                	add    BYTE PTR [rax],al
 f9c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000fa0 <.rela.dyn>:
     fa0:	60                   	(bad)  
     fa1:	0b 01                	or     eax,DWORD PTR [rcx]
     fa3:	00 00                	add    BYTE PTR [rax],al
     fa5:	00 00                	add    BYTE PTR [rax],al
     fa7:	00 08                	add    BYTE PTR [rax],cl
     fa9:	00 00                	add    BYTE PTR [rax],al
     fab:	00 00                	add    BYTE PTR [rax],al
     fad:	00 00                	add    BYTE PTR [rax],al
     faf:	00 e0                	add    al,ah
     fb1:	29 00                	sub    DWORD PTR [rax],eax
     fb3:	00 00                	add    BYTE PTR [rax],al
     fb5:	00 00                	add    BYTE PTR [rax],al
     fb7:	00 68 0b             	add    BYTE PTR [rax+0xb],ch
     fba:	01 00                	add    DWORD PTR [rax],eax
     fbc:	00 00                	add    BYTE PTR [rax],al
     fbe:	00 00                	add    BYTE PTR [rax],al
     fc0:	08 00                	or     BYTE PTR [rax],al
     fc2:	00 00                	add    BYTE PTR [rax],al
     fc4:	00 00                	add    BYTE PTR [rax],al
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	a0 29 00 00 00 00 00 	movabs al,ds:0x800000000000029
     fcf:	00 08 
     fd1:	10 01                	adc    BYTE PTR [rcx],al
     fd3:	00 00                	add    BYTE PTR [rax],al
     fd5:	00 00                	add    BYTE PTR [rax],al
     fd7:	00 08                	add    BYTE PTR [rax],cl
     fd9:	00 00                	add    BYTE PTR [rax],al
     fdb:	00 00                	add    BYTE PTR [rax],al
     fdd:	00 00                	add    BYTE PTR [rax],al
     fdf:	00 08                	add    BYTE PTR [rax],cl
     fe1:	10 01                	adc    BYTE PTR [rcx],al
     fe3:	00 00                	add    BYTE PTR [rax],al
     fe5:	00 00                	add    BYTE PTR [rax],al
     fe7:	00 28                	add    BYTE PTR [rax],ch
     fe9:	10 01                	adc    BYTE PTR [rcx],al
     feb:	00 00                	add    BYTE PTR [rax],al
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	00 08                	add    BYTE PTR [rax],cl
     ff1:	00 00                	add    BYTE PTR [rax],al
     ff3:	00 00                	add    BYTE PTR [rax],al
     ff5:	00 00                	add    BYTE PTR [rax],al
     ff7:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
     ffa:	00 00                	add    BYTE PTR [rax],al
     ffc:	00 00                	add    BYTE PTR [rax],al
     ffe:	00 00                	add    BYTE PTR [rax],al
    1000:	30 10                	xor    BYTE PTR [rax],dl
    1002:	01 00                	add    DWORD PTR [rax],eax
    1004:	00 00                	add    BYTE PTR [rax],al
    1006:	00 00                	add    BYTE PTR [rax],al
    1008:	08 00                	or     BYTE PTR [rax],al
    100a:	00 00                	add    BYTE PTR [rax],al
    100c:	00 00                	add    BYTE PTR [rax],al
    100e:	00 00                	add    BYTE PTR [rax],al
    1010:	1a c0                	sbb    al,al
    1012:	00 00                	add    BYTE PTR [rax],al
    1014:	00 00                	add    BYTE PTR [rax],al
    1016:	00 00                	add    BYTE PTR [rax],al
    1018:	38 10                	cmp    BYTE PTR [rax],dl
    101a:	01 00                	add    DWORD PTR [rax],eax
    101c:	00 00                	add    BYTE PTR [rax],al
    101e:	00 00                	add    BYTE PTR [rax],al
    1020:	08 00                	or     BYTE PTR [rax],al
    1022:	00 00                	add    BYTE PTR [rax],al
    1024:	00 00                	add    BYTE PTR [rax],al
    1026:	00 00                	add    BYTE PTR [rax],al
    1028:	34 c0                	xor    al,0xc0
    102a:	00 00                	add    BYTE PTR [rax],al
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	00 00                	add    BYTE PTR [rax],al
    1030:	d8 0f                	fmul   DWORD PTR [rdi]
    1032:	01 00                	add    DWORD PTR [rax],eax
    1034:	00 00                	add    BYTE PTR [rax],al
    1036:	00 00                	add    BYTE PTR [rax],al
    1038:	06                   	(bad)  
    1039:	00 00                	add    BYTE PTR [rax],al
    103b:	00 09                	add    BYTE PTR [rcx],cl
	...
    1045:	00 00                	add    BYTE PTR [rax],al
    1047:	00 e0                	add    al,ah
    1049:	0f 01 00             	sgdt   [rax]
    104c:	00 00                	add    BYTE PTR [rax],al
    104e:	00 00                	add    BYTE PTR [rax],al
    1050:	06                   	(bad)  
    1051:	00 00                	add    BYTE PTR [rax],al
    1053:	00 19                	add    BYTE PTR [rcx],bl
	...
    105d:	00 00                	add    BYTE PTR [rax],al
    105f:	00 e8                	add    al,ch
    1061:	0f 01 00             	sgdt   [rax]
    1064:	00 00                	add    BYTE PTR [rax],al
    1066:	00 00                	add    BYTE PTR [rax],al
    1068:	06                   	(bad)  
    1069:	00 00                	add    BYTE PTR [rax],al
    106b:	00 1e                	add    BYTE PTR [rsi],bl
	...
    1075:	00 00                	add    BYTE PTR [rax],al
    1077:	00 f0                	add    al,dh
    1079:	0f 01 00             	sgdt   [rax]
    107c:	00 00                	add    BYTE PTR [rax],al
    107e:	00 00                	add    BYTE PTR [rax],al
    1080:	06                   	(bad)  
    1081:	00 00                	add    BYTE PTR [rax],al
    1083:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
	...
    108e:	00 00                	add    BYTE PTR [rax],al
    1090:	f8                   	clc    
    1091:	0f 01 00             	sgdt   [rax]
    1094:	00 00                	add    BYTE PTR [rax],al
    1096:	00 00                	add    BYTE PTR [rax],al
    1098:	06                   	(bad)  
    1099:	00 00                	add    BYTE PTR [rax],al
    109b:	00 47 00             	add    BYTE PTR [rdi+0x0],al
	...
    10a6:	00 00                	add    BYTE PTR [rax],al
    10a8:	60                   	(bad)  
    10a9:	10 01                	adc    BYTE PTR [rcx],al
    10ab:	00 00                	add    BYTE PTR [rax],al
    10ad:	00 00                	add    BYTE PTR [rax],al
    10af:	00 05 00 00 00 4d    	add    BYTE PTR [rip+0x4d000000],al        # 4d0010b5 <_end+0x4cec2075>
	...

Disassembly of section .rela.plt:

00000000000010c0 <.rela.plt>:
    10c0:	a8 0d                	test   al,0xd
    10c2:	01 00                	add    DWORD PTR [rax],eax
    10c4:	00 00                	add    BYTE PTR [rax],al
    10c6:	00 00                	add    BYTE PTR [rax],al
    10c8:	07                   	(bad)  
    10c9:	00 00                	add    BYTE PTR [rax],al
    10cb:	00 01                	add    BYTE PTR [rcx],al
	...
    10d5:	00 00                	add    BYTE PTR [rax],al
    10d7:	00 b0 0d 01 00 00    	add    BYTE PTR [rax+0x10d],dh
    10dd:	00 00                	add    BYTE PTR [rax],al
    10df:	00 07                	add    BYTE PTR [rdi],al
    10e1:	00 00                	add    BYTE PTR [rax],al
    10e3:	00 02                	add    BYTE PTR [rdx],al
	...
    10ed:	00 00                	add    BYTE PTR [rax],al
    10ef:	00 b8 0d 01 00 00    	add    BYTE PTR [rax+0x10d],bh
    10f5:	00 00                	add    BYTE PTR [rax],al
    10f7:	00 07                	add    BYTE PTR [rdi],al
    10f9:	00 00                	add    BYTE PTR [rax],al
    10fb:	00 03                	add    BYTE PTR [rbx],al
	...
    1105:	00 00                	add    BYTE PTR [rax],al
    1107:	00 c0                	add    al,al
    1109:	0d 01 00 00 00       	or     eax,0x1
    110e:	00 00                	add    BYTE PTR [rax],al
    1110:	07                   	(bad)  
    1111:	00 00                	add    BYTE PTR [rax],al
    1113:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    111e:	00 00                	add    BYTE PTR [rax],al
    1120:	c8 0d 01 00          	enter  0x10d,0x0
    1124:	00 00                	add    BYTE PTR [rax],al
    1126:	00 00                	add    BYTE PTR [rax],al
    1128:	07                   	(bad)  
    1129:	00 00                	add    BYTE PTR [rax],al
    112b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1131 <__abi_tag+0xd6d>
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	00 00                	add    BYTE PTR [rax],al
    1135:	00 00                	add    BYTE PTR [rax],al
    1137:	00 d0                	add    al,dl
    1139:	0d 01 00 00 00       	or     eax,0x1
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	07                   	(bad)  
    1141:	00 00                	add    BYTE PTR [rax],al
    1143:	00 06                	add    BYTE PTR [rsi],al
	...
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	00 d8                	add    al,bl
    1151:	0d 01 00 00 00       	or     eax,0x1
    1156:	00 00                	add    BYTE PTR [rax],al
    1158:	07                   	(bad)  
    1159:	00 00                	add    BYTE PTR [rax],al
    115b:	00 07                	add    BYTE PTR [rdi],al
	...
    1165:	00 00                	add    BYTE PTR [rax],al
    1167:	00 e0                	add    al,ah
    1169:	0d 01 00 00 00       	or     eax,0x1
    116e:	00 00                	add    BYTE PTR [rax],al
    1170:	07                   	(bad)  
    1171:	00 00                	add    BYTE PTR [rax],al
    1173:	00 08                	add    BYTE PTR [rax],cl
	...
    117d:	00 00                	add    BYTE PTR [rax],al
    117f:	00 e8                	add    al,ch
    1181:	0d 01 00 00 00       	or     eax,0x1
    1186:	00 00                	add    BYTE PTR [rax],al
    1188:	07                   	(bad)  
    1189:	00 00                	add    BYTE PTR [rax],al
    118b:	00 0a                	add    BYTE PTR [rdx],cl
	...
    1195:	00 00                	add    BYTE PTR [rax],al
    1197:	00 f0                	add    al,dh
    1199:	0d 01 00 00 00       	or     eax,0x1
    119e:	00 00                	add    BYTE PTR [rax],al
    11a0:	07                   	(bad)  
    11a1:	00 00                	add    BYTE PTR [rax],al
    11a3:	00 0b                	add    BYTE PTR [rbx],cl
	...
    11ad:	00 00                	add    BYTE PTR [rax],al
    11af:	00 f8                	add    al,bh
    11b1:	0d 01 00 00 00       	or     eax,0x1
    11b6:	00 00                	add    BYTE PTR [rax],al
    11b8:	07                   	(bad)  
    11b9:	00 00                	add    BYTE PTR [rax],al
    11bb:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    11c6:	00 00                	add    BYTE PTR [rax],al
    11c8:	00 0e                	add    BYTE PTR [rsi],cl
    11ca:	01 00                	add    DWORD PTR [rax],eax
    11cc:	00 00                	add    BYTE PTR [rax],al
    11ce:	00 00                	add    BYTE PTR [rax],al
    11d0:	07                   	(bad)  
    11d1:	00 00                	add    BYTE PTR [rax],al
    11d3:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 11d9 <__abi_tag+0xe15>
    11d9:	00 00                	add    BYTE PTR [rax],al
    11db:	00 00                	add    BYTE PTR [rax],al
    11dd:	00 00                	add    BYTE PTR [rax],al
    11df:	00 08                	add    BYTE PTR [rax],cl
    11e1:	0e                   	(bad)  
    11e2:	01 00                	add    DWORD PTR [rax],eax
    11e4:	00 00                	add    BYTE PTR [rax],al
    11e6:	00 00                	add    BYTE PTR [rax],al
    11e8:	07                   	(bad)  
    11e9:	00 00                	add    BYTE PTR [rax],al
    11eb:	00 0e                	add    BYTE PTR [rsi],cl
	...
    11f5:	00 00                	add    BYTE PTR [rax],al
    11f7:	00 10                	add    BYTE PTR [rax],dl
    11f9:	0e                   	(bad)  
    11fa:	01 00                	add    DWORD PTR [rax],eax
    11fc:	00 00                	add    BYTE PTR [rax],al
    11fe:	00 00                	add    BYTE PTR [rax],al
    1200:	07                   	(bad)  
    1201:	00 00                	add    BYTE PTR [rax],al
    1203:	00 0f                	add    BYTE PTR [rdi],cl
	...
    120d:	00 00                	add    BYTE PTR [rax],al
    120f:	00 18                	add    BYTE PTR [rax],bl
    1211:	0e                   	(bad)  
    1212:	01 00                	add    DWORD PTR [rax],eax
    1214:	00 00                	add    BYTE PTR [rax],al
    1216:	00 00                	add    BYTE PTR [rax],al
    1218:	07                   	(bad)  
    1219:	00 00                	add    BYTE PTR [rax],al
    121b:	00 10                	add    BYTE PTR [rax],dl
	...
    1225:	00 00                	add    BYTE PTR [rax],al
    1227:	00 20                	add    BYTE PTR [rax],ah
    1229:	0e                   	(bad)  
    122a:	01 00                	add    DWORD PTR [rax],eax
    122c:	00 00                	add    BYTE PTR [rax],al
    122e:	00 00                	add    BYTE PTR [rax],al
    1230:	07                   	(bad)  
    1231:	00 00                	add    BYTE PTR [rax],al
    1233:	00 11                	add    BYTE PTR [rcx],dl
	...
    123d:	00 00                	add    BYTE PTR [rax],al
    123f:	00 28                	add    BYTE PTR [rax],ch
    1241:	0e                   	(bad)  
    1242:	01 00                	add    DWORD PTR [rax],eax
    1244:	00 00                	add    BYTE PTR [rax],al
    1246:	00 00                	add    BYTE PTR [rax],al
    1248:	07                   	(bad)  
    1249:	00 00                	add    BYTE PTR [rax],al
    124b:	00 12                	add    BYTE PTR [rdx],dl
	...
    1255:	00 00                	add    BYTE PTR [rax],al
    1257:	00 30                	add    BYTE PTR [rax],dh
    1259:	0e                   	(bad)  
    125a:	01 00                	add    DWORD PTR [rax],eax
    125c:	00 00                	add    BYTE PTR [rax],al
    125e:	00 00                	add    BYTE PTR [rax],al
    1260:	07                   	(bad)  
    1261:	00 00                	add    BYTE PTR [rax],al
    1263:	00 13                	add    BYTE PTR [rbx],dl
	...
    126d:	00 00                	add    BYTE PTR [rax],al
    126f:	00 38                	add    BYTE PTR [rax],bh
    1271:	0e                   	(bad)  
    1272:	01 00                	add    DWORD PTR [rax],eax
    1274:	00 00                	add    BYTE PTR [rax],al
    1276:	00 00                	add    BYTE PTR [rax],al
    1278:	07                   	(bad)  
    1279:	00 00                	add    BYTE PTR [rax],al
    127b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    1286:	00 00                	add    BYTE PTR [rax],al
    1288:	40 0e                	rex (bad) 
    128a:	01 00                	add    DWORD PTR [rax],eax
    128c:	00 00                	add    BYTE PTR [rax],al
    128e:	00 00                	add    BYTE PTR [rax],al
    1290:	07                   	(bad)  
    1291:	00 00                	add    BYTE PTR [rax],al
    1293:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 1299 <__abi_tag+0xed5>
    1299:	00 00                	add    BYTE PTR [rax],al
    129b:	00 00                	add    BYTE PTR [rax],al
    129d:	00 00                	add    BYTE PTR [rax],al
    129f:	00 48 0e             	add    BYTE PTR [rax+0xe],cl
    12a2:	01 00                	add    DWORD PTR [rax],eax
    12a4:	00 00                	add    BYTE PTR [rax],al
    12a6:	00 00                	add    BYTE PTR [rax],al
    12a8:	07                   	(bad)  
    12a9:	00 00                	add    BYTE PTR [rax],al
    12ab:	00 16                	add    BYTE PTR [rsi],dl
	...
    12b5:	00 00                	add    BYTE PTR [rax],al
    12b7:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
    12ba:	01 00                	add    DWORD PTR [rax],eax
    12bc:	00 00                	add    BYTE PTR [rax],al
    12be:	00 00                	add    BYTE PTR [rax],al
    12c0:	07                   	(bad)  
    12c1:	00 00                	add    BYTE PTR [rax],al
    12c3:	00 17                	add    BYTE PTR [rdi],dl
	...
    12cd:	00 00                	add    BYTE PTR [rax],al
    12cf:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
    12d2:	01 00                	add    DWORD PTR [rax],eax
    12d4:	00 00                	add    BYTE PTR [rax],al
    12d6:	00 00                	add    BYTE PTR [rax],al
    12d8:	07                   	(bad)  
    12d9:	00 00                	add    BYTE PTR [rax],al
    12db:	00 18                	add    BYTE PTR [rax],bl
	...
    12e5:	00 00                	add    BYTE PTR [rax],al
    12e7:	00 60 0e             	add    BYTE PTR [rax+0xe],ah
    12ea:	01 00                	add    DWORD PTR [rax],eax
    12ec:	00 00                	add    BYTE PTR [rax],al
    12ee:	00 00                	add    BYTE PTR [rax],al
    12f0:	07                   	(bad)  
    12f1:	00 00                	add    BYTE PTR [rax],al
    12f3:	00 1a                	add    BYTE PTR [rdx],bl
	...
    12fd:	00 00                	add    BYTE PTR [rax],al
    12ff:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    1302:	01 00                	add    DWORD PTR [rax],eax
    1304:	00 00                	add    BYTE PTR [rax],al
    1306:	00 00                	add    BYTE PTR [rax],al
    1308:	07                   	(bad)  
    1309:	00 00                	add    BYTE PTR [rax],al
    130b:	00 1b                	add    BYTE PTR [rbx],bl
	...
    1315:	00 00                	add    BYTE PTR [rax],al
    1317:	00 70 0e             	add    BYTE PTR [rax+0xe],dh
    131a:	01 00                	add    DWORD PTR [rax],eax
    131c:	00 00                	add    BYTE PTR [rax],al
    131e:	00 00                	add    BYTE PTR [rax],al
    1320:	07                   	(bad)  
    1321:	00 00                	add    BYTE PTR [rax],al
    1323:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
    132e:	00 00                	add    BYTE PTR [rax],al
    1330:	78 0e                	js     1340 <__abi_tag+0xf7c>
    1332:	01 00                	add    DWORD PTR [rax],eax
    1334:	00 00                	add    BYTE PTR [rax],al
    1336:	00 00                	add    BYTE PTR [rax],al
    1338:	07                   	(bad)  
    1339:	00 00                	add    BYTE PTR [rax],al
    133b:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 1341 <__abi_tag+0xf7d>
    1341:	00 00                	add    BYTE PTR [rax],al
    1343:	00 00                	add    BYTE PTR [rax],al
    1345:	00 00                	add    BYTE PTR [rax],al
    1347:	00 80 0e 01 00 00    	add    BYTE PTR [rax+0x10e],al
    134d:	00 00                	add    BYTE PTR [rax],al
    134f:	00 07                	add    BYTE PTR [rdi],al
    1351:	00 00                	add    BYTE PTR [rax],al
    1353:	00 1f                	add    BYTE PTR [rdi],bl
	...
    135d:	00 00                	add    BYTE PTR [rax],al
    135f:	00 88 0e 01 00 00    	add    BYTE PTR [rax+0x10e],cl
    1365:	00 00                	add    BYTE PTR [rax],al
    1367:	00 07                	add    BYTE PTR [rdi],al
    1369:	00 00                	add    BYTE PTR [rax],al
    136b:	00 20                	add    BYTE PTR [rax],ah
	...
    1375:	00 00                	add    BYTE PTR [rax],al
    1377:	00 90 0e 01 00 00    	add    BYTE PTR [rax+0x10e],dl
    137d:	00 00                	add    BYTE PTR [rax],al
    137f:	00 07                	add    BYTE PTR [rdi],al
    1381:	00 00                	add    BYTE PTR [rax],al
    1383:	00 21                	add    BYTE PTR [rcx],ah
	...
    138d:	00 00                	add    BYTE PTR [rax],al
    138f:	00 98 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bl
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	00 07                	add    BYTE PTR [rdi],al
    1399:	00 00                	add    BYTE PTR [rax],al
    139b:	00 22                	add    BYTE PTR [rdx],ah
	...
    13a5:	00 00                	add    BYTE PTR [rax],al
    13a7:	00 a0 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ah
    13ad:	00 00                	add    BYTE PTR [rax],al
    13af:	00 07                	add    BYTE PTR [rdi],al
    13b1:	00 00                	add    BYTE PTR [rax],al
    13b3:	00 23                	add    BYTE PTR [rbx],ah
	...
    13bd:	00 00                	add    BYTE PTR [rax],al
    13bf:	00 a8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],ch
    13c5:	00 00                	add    BYTE PTR [rax],al
    13c7:	00 07                	add    BYTE PTR [rdi],al
    13c9:	00 00                	add    BYTE PTR [rax],al
    13cb:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...
    13d6:	00 00                	add    BYTE PTR [rax],al
    13d8:	b0 0e                	mov    al,0xe
    13da:	01 00                	add    DWORD PTR [rax],eax
    13dc:	00 00                	add    BYTE PTR [rax],al
    13de:	00 00                	add    BYTE PTR [rax],al
    13e0:	07                   	(bad)  
    13e1:	00 00                	add    BYTE PTR [rax],al
    13e3:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 13e9 <__abi_tag+0x1025>
    13e9:	00 00                	add    BYTE PTR [rax],al
    13eb:	00 00                	add    BYTE PTR [rax],al
    13ed:	00 00                	add    BYTE PTR [rax],al
    13ef:	00 b8 0e 01 00 00    	add    BYTE PTR [rax+0x10e],bh
    13f5:	00 00                	add    BYTE PTR [rax],al
    13f7:	00 07                	add    BYTE PTR [rdi],al
    13f9:	00 00                	add    BYTE PTR [rax],al
    13fb:	00 26                	add    BYTE PTR [rsi],ah
	...
    1405:	00 00                	add    BYTE PTR [rax],al
    1407:	00 c0                	add    al,al
    1409:	0e                   	(bad)  
    140a:	01 00                	add    DWORD PTR [rax],eax
    140c:	00 00                	add    BYTE PTR [rax],al
    140e:	00 00                	add    BYTE PTR [rax],al
    1410:	07                   	(bad)  
    1411:	00 00                	add    BYTE PTR [rax],al
    1413:	00 27                	add    BYTE PTR [rdi],ah
	...
    141d:	00 00                	add    BYTE PTR [rax],al
    141f:	00 c8                	add    al,cl
    1421:	0e                   	(bad)  
    1422:	01 00                	add    DWORD PTR [rax],eax
    1424:	00 00                	add    BYTE PTR [rax],al
    1426:	00 00                	add    BYTE PTR [rax],al
    1428:	07                   	(bad)  
    1429:	00 00                	add    BYTE PTR [rax],al
    142b:	00 28                	add    BYTE PTR [rax],ch
	...
    1435:	00 00                	add    BYTE PTR [rax],al
    1437:	00 d0                	add    al,dl
    1439:	0e                   	(bad)  
    143a:	01 00                	add    DWORD PTR [rax],eax
    143c:	00 00                	add    BYTE PTR [rax],al
    143e:	00 00                	add    BYTE PTR [rax],al
    1440:	07                   	(bad)  
    1441:	00 00                	add    BYTE PTR [rax],al
    1443:	00 29                	add    BYTE PTR [rcx],ch
	...
    144d:	00 00                	add    BYTE PTR [rax],al
    144f:	00 d8                	add    al,bl
    1451:	0e                   	(bad)  
    1452:	01 00                	add    DWORD PTR [rax],eax
    1454:	00 00                	add    BYTE PTR [rax],al
    1456:	00 00                	add    BYTE PTR [rax],al
    1458:	07                   	(bad)  
    1459:	00 00                	add    BYTE PTR [rax],al
    145b:	00 2a                	add    BYTE PTR [rdx],ch
	...
    1465:	00 00                	add    BYTE PTR [rax],al
    1467:	00 e0                	add    al,ah
    1469:	0e                   	(bad)  
    146a:	01 00                	add    DWORD PTR [rax],eax
    146c:	00 00                	add    BYTE PTR [rax],al
    146e:	00 00                	add    BYTE PTR [rax],al
    1470:	07                   	(bad)  
    1471:	00 00                	add    BYTE PTR [rax],al
    1473:	00 2b                	add    BYTE PTR [rbx],ch
	...
    147d:	00 00                	add    BYTE PTR [rax],al
    147f:	00 e8                	add    al,ch
    1481:	0e                   	(bad)  
    1482:	01 00                	add    DWORD PTR [rax],eax
    1484:	00 00                	add    BYTE PTR [rax],al
    1486:	00 00                	add    BYTE PTR [rax],al
    1488:	07                   	(bad)  
    1489:	00 00                	add    BYTE PTR [rax],al
    148b:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
	...
    1496:	00 00                	add    BYTE PTR [rax],al
    1498:	f0 0e                	lock (bad) 
    149a:	01 00                	add    DWORD PTR [rax],eax
    149c:	00 00                	add    BYTE PTR [rax],al
    149e:	00 00                	add    BYTE PTR [rax],al
    14a0:	07                   	(bad)  
    14a1:	00 00                	add    BYTE PTR [rax],al
    14a3:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 14a9 <__abi_tag+0x10e5>
    14a9:	00 00                	add    BYTE PTR [rax],al
    14ab:	00 00                	add    BYTE PTR [rax],al
    14ad:	00 00                	add    BYTE PTR [rax],al
    14af:	00 f8                	add    al,bh
    14b1:	0e                   	(bad)  
    14b2:	01 00                	add    DWORD PTR [rax],eax
    14b4:	00 00                	add    BYTE PTR [rax],al
    14b6:	00 00                	add    BYTE PTR [rax],al
    14b8:	07                   	(bad)  
    14b9:	00 00                	add    BYTE PTR [rax],al
    14bb:	00 2e                	add    BYTE PTR [rsi],ch
	...
    14c9:	0f 01 00             	sgdt   [rax]
    14cc:	00 00                	add    BYTE PTR [rax],al
    14ce:	00 00                	add    BYTE PTR [rax],al
    14d0:	07                   	(bad)  
    14d1:	00 00                	add    BYTE PTR [rax],al
    14d3:	00 2f                	add    BYTE PTR [rdi],ch
	...
    14dd:	00 00                	add    BYTE PTR [rax],al
    14df:	00 08                	add    BYTE PTR [rax],cl
    14e1:	0f 01 00             	sgdt   [rax]
    14e4:	00 00                	add    BYTE PTR [rax],al
    14e6:	00 00                	add    BYTE PTR [rax],al
    14e8:	07                   	(bad)  
    14e9:	00 00                	add    BYTE PTR [rax],al
    14eb:	00 30                	add    BYTE PTR [rax],dh
	...
    14f5:	00 00                	add    BYTE PTR [rax],al
    14f7:	00 10                	add    BYTE PTR [rax],dl
    14f9:	0f 01 00             	sgdt   [rax]
    14fc:	00 00                	add    BYTE PTR [rax],al
    14fe:	00 00                	add    BYTE PTR [rax],al
    1500:	07                   	(bad)  
    1501:	00 00                	add    BYTE PTR [rax],al
    1503:	00 31                	add    BYTE PTR [rcx],dh
	...
    150d:	00 00                	add    BYTE PTR [rax],al
    150f:	00 18                	add    BYTE PTR [rax],bl
    1511:	0f 01 00             	sgdt   [rax]
    1514:	00 00                	add    BYTE PTR [rax],al
    1516:	00 00                	add    BYTE PTR [rax],al
    1518:	07                   	(bad)  
    1519:	00 00                	add    BYTE PTR [rax],al
    151b:	00 32                	add    BYTE PTR [rdx],dh
	...
    1525:	00 00                	add    BYTE PTR [rax],al
    1527:	00 20                	add    BYTE PTR [rax],ah
    1529:	0f 01 00             	sgdt   [rax]
    152c:	00 00                	add    BYTE PTR [rax],al
    152e:	00 00                	add    BYTE PTR [rax],al
    1530:	07                   	(bad)  
    1531:	00 00                	add    BYTE PTR [rax],al
    1533:	00 33                	add    BYTE PTR [rbx],dh
	...
    153d:	00 00                	add    BYTE PTR [rax],al
    153f:	00 28                	add    BYTE PTR [rax],ch
    1541:	0f 01 00             	sgdt   [rax]
    1544:	00 00                	add    BYTE PTR [rax],al
    1546:	00 00                	add    BYTE PTR [rax],al
    1548:	07                   	(bad)  
    1549:	00 00                	add    BYTE PTR [rax],al
    154b:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
	...
    1556:	00 00                	add    BYTE PTR [rax],al
    1558:	30 0f                	xor    BYTE PTR [rdi],cl
    155a:	01 00                	add    DWORD PTR [rax],eax
    155c:	00 00                	add    BYTE PTR [rax],al
    155e:	00 00                	add    BYTE PTR [rax],al
    1560:	07                   	(bad)  
    1561:	00 00                	add    BYTE PTR [rax],al
    1563:	00 35 00 00 00 00    	add    BYTE PTR [rip+0x0],dh        # 1569 <__abi_tag+0x11a5>
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	00 00                	add    BYTE PTR [rax],al
    156d:	00 00                	add    BYTE PTR [rax],al
    156f:	00 38                	add    BYTE PTR [rax],bh
    1571:	0f 01 00             	sgdt   [rax]
    1574:	00 00                	add    BYTE PTR [rax],al
    1576:	00 00                	add    BYTE PTR [rax],al
    1578:	07                   	(bad)  
    1579:	00 00                	add    BYTE PTR [rax],al
    157b:	00 36                	add    BYTE PTR [rsi],dh
	...
    1585:	00 00                	add    BYTE PTR [rax],al
    1587:	00 40 0f             	add    BYTE PTR [rax+0xf],al
    158a:	01 00                	add    DWORD PTR [rax],eax
    158c:	00 00                	add    BYTE PTR [rax],al
    158e:	00 00                	add    BYTE PTR [rax],al
    1590:	07                   	(bad)  
    1591:	00 00                	add    BYTE PTR [rax],al
    1593:	00 37                	add    BYTE PTR [rdi],dh
	...
    159d:	00 00                	add    BYTE PTR [rax],al
    159f:	00 48 0f             	add    BYTE PTR [rax+0xf],cl
    15a2:	01 00                	add    DWORD PTR [rax],eax
    15a4:	00 00                	add    BYTE PTR [rax],al
    15a6:	00 00                	add    BYTE PTR [rax],al
    15a8:	07                   	(bad)  
    15a9:	00 00                	add    BYTE PTR [rax],al
    15ab:	00 38                	add    BYTE PTR [rax],bh
	...
    15b5:	00 00                	add    BYTE PTR [rax],al
    15b7:	00 50 0f             	add    BYTE PTR [rax+0xf],dl
    15ba:	01 00                	add    DWORD PTR [rax],eax
    15bc:	00 00                	add    BYTE PTR [rax],al
    15be:	00 00                	add    BYTE PTR [rax],al
    15c0:	07                   	(bad)  
    15c1:	00 00                	add    BYTE PTR [rax],al
    15c3:	00 39                	add    BYTE PTR [rcx],bh
	...
    15cd:	00 00                	add    BYTE PTR [rax],al
    15cf:	00 58 0f             	add    BYTE PTR [rax+0xf],bl
    15d2:	01 00                	add    DWORD PTR [rax],eax
    15d4:	00 00                	add    BYTE PTR [rax],al
    15d6:	00 00                	add    BYTE PTR [rax],al
    15d8:	07                   	(bad)  
    15d9:	00 00                	add    BYTE PTR [rax],al
    15db:	00 3a                	add    BYTE PTR [rdx],bh
	...
    15e5:	00 00                	add    BYTE PTR [rax],al
    15e7:	00 60 0f             	add    BYTE PTR [rax+0xf],ah
    15ea:	01 00                	add    DWORD PTR [rax],eax
    15ec:	00 00                	add    BYTE PTR [rax],al
    15ee:	00 00                	add    BYTE PTR [rax],al
    15f0:	07                   	(bad)  
    15f1:	00 00                	add    BYTE PTR [rax],al
    15f3:	00 3b                	add    BYTE PTR [rbx],bh
	...
    15fd:	00 00                	add    BYTE PTR [rax],al
    15ff:	00 68 0f             	add    BYTE PTR [rax+0xf],ch
    1602:	01 00                	add    DWORD PTR [rax],eax
    1604:	00 00                	add    BYTE PTR [rax],al
    1606:	00 00                	add    BYTE PTR [rax],al
    1608:	07                   	(bad)  
    1609:	00 00                	add    BYTE PTR [rax],al
    160b:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
	...
    1616:	00 00                	add    BYTE PTR [rax],al
    1618:	70 0f                	jo     1629 <__abi_tag+0x1265>
    161a:	01 00                	add    DWORD PTR [rax],eax
    161c:	00 00                	add    BYTE PTR [rax],al
    161e:	00 00                	add    BYTE PTR [rax],al
    1620:	07                   	(bad)  
    1621:	00 00                	add    BYTE PTR [rax],al
    1623:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 1629 <__abi_tag+0x1265>
    1629:	00 00                	add    BYTE PTR [rax],al
    162b:	00 00                	add    BYTE PTR [rax],al
    162d:	00 00                	add    BYTE PTR [rax],al
    162f:	00 78 0f             	add    BYTE PTR [rax+0xf],bh
    1632:	01 00                	add    DWORD PTR [rax],eax
    1634:	00 00                	add    BYTE PTR [rax],al
    1636:	00 00                	add    BYTE PTR [rax],al
    1638:	07                   	(bad)  
    1639:	00 00                	add    BYTE PTR [rax],al
    163b:	00 3e                	add    BYTE PTR [rsi],bh
	...
    1645:	00 00                	add    BYTE PTR [rax],al
    1647:	00 80 0f 01 00 00    	add    BYTE PTR [rax+0x10f],al
    164d:	00 00                	add    BYTE PTR [rax],al
    164f:	00 07                	add    BYTE PTR [rdi],al
    1651:	00 00                	add    BYTE PTR [rax],al
    1653:	00 3f                	add    BYTE PTR [rdi],bh
	...
    165d:	00 00                	add    BYTE PTR [rax],al
    165f:	00 88 0f 01 00 00    	add    BYTE PTR [rax+0x10f],cl
    1665:	00 00                	add    BYTE PTR [rax],al
    1667:	00 07                	add    BYTE PTR [rdi],al
    1669:	00 00                	add    BYTE PTR [rax],al
    166b:	00 40 00             	add    BYTE PTR [rax+0x0],al
	...
    1676:	00 00                	add    BYTE PTR [rax],al
    1678:	90                   	nop
    1679:	0f 01 00             	sgdt   [rax]
    167c:	00 00                	add    BYTE PTR [rax],al
    167e:	00 00                	add    BYTE PTR [rax],al
    1680:	07                   	(bad)  
    1681:	00 00                	add    BYTE PTR [rax],al
    1683:	00 41 00             	add    BYTE PTR [rcx+0x0],al
	...
    168e:	00 00                	add    BYTE PTR [rax],al
    1690:	98                   	cwde   
    1691:	0f 01 00             	sgdt   [rax]
    1694:	00 00                	add    BYTE PTR [rax],al
    1696:	00 00                	add    BYTE PTR [rax],al
    1698:	07                   	(bad)  
    1699:	00 00                	add    BYTE PTR [rax],al
    169b:	00 42 00             	add    BYTE PTR [rdx+0x0],al
	...
    16a6:	00 00                	add    BYTE PTR [rax],al
    16a8:	a0 0f 01 00 00 00 00 	movabs al,ds:0x70000000000010f
    16af:	00 07 
    16b1:	00 00                	add    BYTE PTR [rax],al
    16b3:	00 43 00             	add    BYTE PTR [rbx+0x0],al
	...
    16be:	00 00                	add    BYTE PTR [rax],al
    16c0:	a8 0f                	test   al,0xf
    16c2:	01 00                	add    DWORD PTR [rax],eax
    16c4:	00 00                	add    BYTE PTR [rax],al
    16c6:	00 00                	add    BYTE PTR [rax],al
    16c8:	07                   	(bad)  
    16c9:	00 00                	add    BYTE PTR [rax],al
    16cb:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
	...
    16d7:	00 b0 0f 01 00 00    	add    BYTE PTR [rax+0x10f],dh
    16dd:	00 00                	add    BYTE PTR [rax],al
    16df:	00 07                	add    BYTE PTR [rdi],al
    16e1:	00 00                	add    BYTE PTR [rax],al
    16e3:	00 45 00             	add    BYTE PTR [rbp+0x0],al
	...
    16ee:	00 00                	add    BYTE PTR [rax],al
    16f0:	b8 0f 01 00 00       	mov    eax,0x10f
    16f5:	00 00                	add    BYTE PTR [rax],al
    16f7:	00 07                	add    BYTE PTR [rdi],al
    16f9:	00 00                	add    BYTE PTR [rax],al
    16fb:	00 46 00             	add    BYTE PTR [rsi+0x0],al
	...
    1706:	00 00                	add    BYTE PTR [rax],al
    1708:	c0 0f 01             	ror    BYTE PTR [rdi],0x1
    170b:	00 00                	add    BYTE PTR [rax],al
    170d:	00 00                	add    BYTE PTR [rax],al
    170f:	00 07                	add    BYTE PTR [rdi],al
    1711:	00 00                	add    BYTE PTR [rax],al
    1713:	00 48 00             	add    BYTE PTR [rax+0x0],cl
	...
    171e:	00 00                	add    BYTE PTR [rax],al
    1720:	c8 0f 01 00          	enter  0x10f,0x0
    1724:	00 00                	add    BYTE PTR [rax],al
    1726:	00 00                	add    BYTE PTR [rax],al
    1728:	07                   	(bad)  
    1729:	00 00                	add    BYTE PTR [rax],al
    172b:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
	...
    1736:	00 00                	add    BYTE PTR [rax],al
    1738:	d0 0f                	ror    BYTE PTR [rdi],1
    173a:	01 00                	add    DWORD PTR [rax],eax
    173c:	00 00                	add    BYTE PTR [rax],al
    173e:	00 00                	add    BYTE PTR [rax],al
    1740:	07                   	(bad)  
    1741:	00 00                	add    BYTE PTR [rax],al
    1743:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    rsp,0x8
    2008:	48 8b 05 c9 ef 00 00 	mov    rax,QWORD PTR [rip+0xefc9]        # 10fd8 <__gmon_start__>
    200f:	48 85 c0             	test   rax,rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   rax
    2016:	48 83 c4 08          	add    rsp,0x8
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 72 ed 00 00    	push   QWORD PTR [rip+0xed72]        # 10d98 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 73 ed 00 00 	bnd jmp QWORD PTR [rip+0xed73]        # 10da0 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nop    DWORD PTR [rax]
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop
    2390:	f3 0f 1e fa          	endbr64 
    2394:	68 36 00 00 00       	push   0x36
    2399:	f2 e9 81 fc ff ff    	bnd jmp 2020 <_init+0x20>
    239f:	90                   	nop
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	68 37 00 00 00       	push   0x37
    23a9:	f2 e9 71 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23af:	90                   	nop
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	68 38 00 00 00       	push   0x38
    23b9:	f2 e9 61 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23bf:	90                   	nop
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	68 39 00 00 00       	push   0x39
    23c9:	f2 e9 51 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23cf:	90                   	nop
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	68 3a 00 00 00       	push   0x3a
    23d9:	f2 e9 41 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23df:	90                   	nop
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	68 3b 00 00 00       	push   0x3b
    23e9:	f2 e9 31 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ef:	90                   	nop
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	68 3c 00 00 00       	push   0x3c
    23f9:	f2 e9 21 fc ff ff    	bnd jmp 2020 <_init+0x20>
    23ff:	90                   	nop
    2400:	f3 0f 1e fa          	endbr64 
    2404:	68 3d 00 00 00       	push   0x3d
    2409:	f2 e9 11 fc ff ff    	bnd jmp 2020 <_init+0x20>
    240f:	90                   	nop
    2410:	f3 0f 1e fa          	endbr64 
    2414:	68 3e 00 00 00       	push   0x3e
    2419:	f2 e9 01 fc ff ff    	bnd jmp 2020 <_init+0x20>
    241f:	90                   	nop
    2420:	f3 0f 1e fa          	endbr64 
    2424:	68 3f 00 00 00       	push   0x3f
    2429:	f2 e9 f1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    242f:	90                   	nop
    2430:	f3 0f 1e fa          	endbr64 
    2434:	68 40 00 00 00       	push   0x40
    2439:	f2 e9 e1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    243f:	90                   	nop
    2440:	f3 0f 1e fa          	endbr64 
    2444:	68 41 00 00 00       	push   0x41
    2449:	f2 e9 d1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    244f:	90                   	nop
    2450:	f3 0f 1e fa          	endbr64 
    2454:	68 42 00 00 00       	push   0x42
    2459:	f2 e9 c1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    245f:	90                   	nop
    2460:	f3 0f 1e fa          	endbr64 
    2464:	68 43 00 00 00       	push   0x43
    2469:	f2 e9 b1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    246f:	90                   	nop
    2470:	f3 0f 1e fa          	endbr64 
    2474:	68 44 00 00 00       	push   0x44
    2479:	f2 e9 a1 fb ff ff    	bnd jmp 2020 <_init+0x20>
    247f:	90                   	nop
    2480:	f3 0f 1e fa          	endbr64 
    2484:	68 45 00 00 00       	push   0x45
    2489:	f2 e9 91 fb ff ff    	bnd jmp 2020 <_init+0x20>
    248f:	90                   	nop

Disassembly of section .plt.got:

0000000000002490 <__cxa_finalize@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 55 eb 00 00 	bnd jmp QWORD PTR [rip+0xeb55]        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000024a0 <sqlite3_close@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 fd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8fd]        # 10da8 <sqlite3_close>
    24ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <pthread_join@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 f5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8f5]        # 10db0 <pthread_join@GLIBC_2.34>
    24bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <printf@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 ed e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ed]        # 10db8 <printf@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <memset@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 e5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8e5]        # 10dc0 <memset@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <snprintf@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 dd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8dd]        # 10dc8 <snprintf@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <backtrace@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 d5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8d5]        # 10dd0 <backtrace@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <close@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 cd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8cd]        # 10dd8 <close@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <strncat@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 c5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8c5]        # 10de0 <strncat@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <puts@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 bd e8 00 00 	bnd jmp QWORD PTR [rip+0xe8bd]        # 10de8 <puts@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <htons@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 b5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8b5]        # 10df0 <htons@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <exit@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 ad e8 00 00 	bnd jmp QWORD PTR [rip+0xe8ad]        # 10df8 <exit@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <putchar@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 a5 e8 00 00 	bnd jmp QWORD PTR [rip+0xe8a5]        # 10e00 <putchar@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <sqlite3_exec@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 9d e8 00 00 	bnd jmp QWORD PTR [rip+0xe89d]        # 10e08 <sqlite3_exec>
    256b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <getopt@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 95 e8 00 00 	bnd jmp QWORD PTR [rip+0xe895]        # 10e10 <getopt@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <read@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 8d e8 00 00 	bnd jmp QWORD PTR [rip+0xe88d]        # 10e18 <read@GLIBC_2.2.5>
    258b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <strncmp@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 85 e8 00 00 	bnd jmp QWORD PTR [rip+0xe885]        # 10e20 <strncmp@GLIBC_2.2.5>
    259b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <malloc@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 7d e8 00 00 	bnd jmp QWORD PTR [rip+0xe87d]        # 10e28 <malloc@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <fopen@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 75 e8 00 00 	bnd jmp QWORD PTR [rip+0xe875]        # 10e30 <fopen@GLIBC_2.2.5>
    25bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <regexec@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 6d e8 00 00 	bnd jmp QWORD PTR [rip+0xe86d]        # 10e38 <regexec@GLIBC_2.3.4>
    25cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <pcap_open_live@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 65 e8 00 00 	bnd jmp QWORD PTR [rip+0xe865]        # 10e40 <pcap_open_live>
    25db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <setsockopt@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 5d e8 00 00 	bnd jmp QWORD PTR [rip+0xe85d]        # 10e48 <setsockopt@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <sqlite3_free@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 55 e8 00 00 	bnd jmp QWORD PTR [rip+0xe855]        # 10e50 <sqlite3_free>
    25fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <lua_settop@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 4d e8 00 00 	bnd jmp QWORD PTR [rip+0xe84d]        # 10e58 <lua_settop@LUA_5.3>
    260b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <pthread_create@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 45 e8 00 00 	bnd jmp QWORD PTR [rip+0xe845]        # 10e60 <pthread_create@GLIBC_2.34>
    261b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <backtrace_symbols@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 3d e8 00 00 	bnd jmp QWORD PTR [rip+0xe83d]        # 10e68 <backtrace_symbols@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <free@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 35 e8 00 00 	bnd jmp QWORD PTR [rip+0xe835]        # 10e70 <free@GLIBC_2.2.5>
    263b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <strlen@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 2d e8 00 00 	bnd jmp QWORD PTR [rip+0xe82d]        # 10e78 <strlen@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <opendir@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 25 e8 00 00 	bnd jmp QWORD PTR [rip+0xe825]        # 10e80 <opendir@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <listen@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 1d e8 00 00 	bnd jmp QWORD PTR [rip+0xe81d]        # 10e88 <listen@GLIBC_2.2.5>
    266b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <readdir@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 15 e8 00 00 	bnd jmp QWORD PTR [rip+0xe815]        # 10e90 <readdir@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <sprintf@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 0d e8 00 00 	bnd jmp QWORD PTR [rip+0xe80d]        # 10e98 <sprintf@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <ntohs@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 05 e8 00 00 	bnd jmp QWORD PTR [rip+0xe805]        # 10ea0 <ntohs@GLIBC_2.2.5>
    269b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <fgetc@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 fd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7fd]        # 10ea8 <fgetc@GLIBC_2.2.5>
    26ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <ntohl@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 f5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7f5]        # 10eb0 <ntohl@GLIBC_2.2.5>
    26bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <sleep@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 ed e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ed]        # 10eb8 <sleep@GLIBC_2.2.5>
    26cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <lua_pcallk@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 e5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7e5]        # 10ec0 <lua_pcallk@LUA_5.3>
    26db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <strstr@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 dd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7dd]        # 10ec8 <strstr@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <strcat@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 d5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7d5]        # 10ed0 <strcat@GLIBC_2.2.5>
    26fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <fputs@plt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	f2 ff 25 cd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7cd]        # 10ed8 <fputs@GLIBC_2.2.5>
    270b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <strtol@plt>:
    2710:	f3 0f 1e fa          	endbr64 
    2714:	f2 ff 25 c5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7c5]        # 10ee0 <strtol@GLIBC_2.2.5>
    271b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <luaL_loadfilex@plt>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	f2 ff 25 bd e7 00 00 	bnd jmp QWORD PTR [rip+0xe7bd]        # 10ee8 <luaL_loadfilex@LUA_5.3>
    272b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <atoi@plt>:
    2730:	f3 0f 1e fa          	endbr64 
    2734:	f2 ff 25 b5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7b5]        # 10ef0 <atoi@GLIBC_2.2.5>
    273b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <regcomp@plt>:
    2740:	f3 0f 1e fa          	endbr64 
    2744:	f2 ff 25 ad e7 00 00 	bnd jmp QWORD PTR [rip+0xe7ad]        # 10ef8 <regcomp@GLIBC_2.2.5>
    274b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <signal@plt>:
    2750:	f3 0f 1e fa          	endbr64 
    2754:	f2 ff 25 a5 e7 00 00 	bnd jmp QWORD PTR [rip+0xe7a5]        # 10f00 <signal@GLIBC_2.2.5>
    275b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <strchr@plt>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	f2 ff 25 9d e7 00 00 	bnd jmp QWORD PTR [rip+0xe79d]        # 10f08 <strchr@GLIBC_2.2.5>
    276b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <lua_gettop@plt>:
    2770:	f3 0f 1e fa          	endbr64 
    2774:	f2 ff 25 95 e7 00 00 	bnd jmp QWORD PTR [rip+0xe795]        # 10f10 <lua_gettop@LUA_5.3>
    277b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <luaL_newstate@plt>:
    2780:	f3 0f 1e fa          	endbr64 
    2784:	f2 ff 25 8d e7 00 00 	bnd jmp QWORD PTR [rip+0xe78d]        # 10f18 <luaL_newstate@LUA_5.3>
    278b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <socket@plt>:
    2790:	f3 0f 1e fa          	endbr64 
    2794:	f2 ff 25 85 e7 00 00 	bnd jmp QWORD PTR [rip+0xe785]        # 10f20 <socket@GLIBC_2.2.5>
    279b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <luaL_openlibs@plt>:
    27a0:	f3 0f 1e fa          	endbr64 
    27a4:	f2 ff 25 7d e7 00 00 	bnd jmp QWORD PTR [rip+0xe77d]        # 10f28 <luaL_openlibs@LUA_5.3>
    27ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <__stack_chk_fail@plt>:
    27b0:	f3 0f 1e fa          	endbr64 
    27b4:	f2 ff 25 75 e7 00 00 	bnd jmp QWORD PTR [rip+0xe775]        # 10f30 <__stack_chk_fail@GLIBC_2.4>
    27bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <strcmp@plt>:
    27c0:	f3 0f 1e fa          	endbr64 
    27c4:	f2 ff 25 6d e7 00 00 	bnd jmp QWORD PTR [rip+0xe76d]        # 10f38 <strcmp@GLIBC_2.2.5>
    27cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <send@plt>:
    27d0:	f3 0f 1e fa          	endbr64 
    27d4:	f2 ff 25 65 e7 00 00 	bnd jmp QWORD PTR [rip+0xe765]        # 10f40 <send@GLIBC_2.2.5>
    27db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <getline@plt>:
    27e0:	f3 0f 1e fa          	endbr64 
    27e4:	f2 ff 25 5d e7 00 00 	bnd jmp QWORD PTR [rip+0xe75d]        # 10f48 <getline@GLIBC_2.2.5>
    27eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <strcpy@plt>:
    27f0:	f3 0f 1e fa          	endbr64 
    27f4:	f2 ff 25 55 e7 00 00 	bnd jmp QWORD PTR [rip+0xe755]        # 10f50 <strcpy@GLIBC_2.2.5>
    27fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <strtok@plt>:
    2800:	f3 0f 1e fa          	endbr64 
    2804:	f2 ff 25 4d e7 00 00 	bnd jmp QWORD PTR [rip+0xe74d]        # 10f58 <strtok@GLIBC_2.2.5>
    280b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <lua_close@plt>:
    2810:	f3 0f 1e fa          	endbr64 
    2814:	f2 ff 25 45 e7 00 00 	bnd jmp QWORD PTR [rip+0xe745]        # 10f60 <lua_close@LUA_5.3>
    281b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <sqlite3_errmsg@plt>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	f2 ff 25 3d e7 00 00 	bnd jmp QWORD PTR [rip+0xe73d]        # 10f68 <sqlite3_errmsg>
    282b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <fclose@plt>:
    2830:	f3 0f 1e fa          	endbr64 
    2834:	f2 ff 25 35 e7 00 00 	bnd jmp QWORD PTR [rip+0xe735]        # 10f70 <fclose@GLIBC_2.2.5>
    283b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <strncpy@plt>:
    2840:	f3 0f 1e fa          	endbr64 
    2844:	f2 ff 25 2d e7 00 00 	bnd jmp QWORD PTR [rip+0xe72d]        # 10f78 <strncpy@GLIBC_2.2.5>
    284b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <strcspn@plt>:
    2850:	f3 0f 1e fa          	endbr64 
    2854:	f2 ff 25 25 e7 00 00 	bnd jmp QWORD PTR [rip+0xe725]        # 10f80 <strcspn@GLIBC_2.2.5>
    285b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <bind@plt>:
    2860:	f3 0f 1e fa          	endbr64 
    2864:	f2 ff 25 1d e7 00 00 	bnd jmp QWORD PTR [rip+0xe71d]        # 10f88 <bind@GLIBC_2.2.5>
    286b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <pcap_loop@plt>:
    2870:	f3 0f 1e fa          	endbr64 
    2874:	f2 ff 25 15 e7 00 00 	bnd jmp QWORD PTR [rip+0xe715]        # 10f90 <pcap_loop>
    287b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <htonl@plt>:
    2880:	f3 0f 1e fa          	endbr64 
    2884:	f2 ff 25 0d e7 00 00 	bnd jmp QWORD PTR [rip+0xe70d]        # 10f98 <htonl@GLIBC_2.2.5>
    288b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <perror@plt>:
    2890:	f3 0f 1e fa          	endbr64 
    2894:	f2 ff 25 05 e7 00 00 	bnd jmp QWORD PTR [rip+0xe705]        # 10fa0 <perror@GLIBC_2.2.5>
    289b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028a0 <fprintf@plt>:
    28a0:	f3 0f 1e fa          	endbr64 
    28a4:	f2 ff 25 fd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6fd]        # 10fa8 <fprintf@GLIBC_2.2.5>
    28ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028b0 <localtime@plt>:
    28b0:	f3 0f 1e fa          	endbr64 
    28b4:	f2 ff 25 f5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6f5]        # 10fb0 <localtime@GLIBC_2.2.5>
    28bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028c0 <getdelim@plt>:
    28c0:	f3 0f 1e fa          	endbr64 
    28c4:	f2 ff 25 ed e6 00 00 	bnd jmp QWORD PTR [rip+0xe6ed]        # 10fb8 <getdelim@GLIBC_2.2.5>
    28cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028d0 <accept@plt>:
    28d0:	f3 0f 1e fa          	endbr64 
    28d4:	f2 ff 25 e5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6e5]        # 10fc0 <accept@GLIBC_2.2.5>
    28db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028e0 <sqlite3_open@plt>:
    28e0:	f3 0f 1e fa          	endbr64 
    28e4:	f2 ff 25 dd e6 00 00 	bnd jmp QWORD PTR [rip+0xe6dd]        # 10fc8 <sqlite3_open>
    28eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028f0 <time@plt>:
    28f0:	f3 0f 1e fa          	endbr64 
    28f4:	f2 ff 25 d5 e6 00 00 	bnd jmp QWORD PTR [rip+0xe6d5]        # 10fd0 <time@GLIBC_2.2.5>
    28fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002900 <_start>:
    2900:	f3 0f 1e fa          	endbr64 
    2904:	31 ed                	xor    ebp,ebp
    2906:	49 89 d1             	mov    r9,rdx
    2909:	5e                   	pop    rsi
    290a:	48 89 e2             	mov    rdx,rsp
    290d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    2911:	50                   	push   rax
    2912:	54                   	push   rsp
    2913:	45 31 c0             	xor    r8d,r8d
    2916:	31 c9                	xor    ecx,ecx
    2918:	48 8d 3d 74 40 00 00 	lea    rdi,[rip+0x4074]        # 6993 <main>
    291f:	ff 15 d3 e6 00 00    	call   QWORD PTR [rip+0xe6d3]        # 10ff8 <__libc_start_main@GLIBC_2.34>
    2925:	f4                   	hlt    
    2926:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    292d:	00 00 00 

0000000000002930 <deregister_tm_clones>:
    2930:	48 8d 3d 11 e7 00 00 	lea    rdi,[rip+0xe711]        # 11048 <__TMC_END__>
    2937:	48 8d 05 0a e7 00 00 	lea    rax,[rip+0xe70a]        # 11048 <__TMC_END__>
    293e:	48 39 f8             	cmp    rax,rdi
    2941:	74 15                	je     2958 <deregister_tm_clones+0x28>
    2943:	48 8b 05 96 e6 00 00 	mov    rax,QWORD PTR [rip+0xe696]        # 10fe0 <_ITM_deregisterTMCloneTable>
    294a:	48 85 c0             	test   rax,rax
    294d:	74 09                	je     2958 <deregister_tm_clones+0x28>
    294f:	ff e0                	jmp    rax
    2951:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2958:	c3                   	ret    
    2959:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002960 <register_tm_clones>:
    2960:	48 8d 3d e1 e6 00 00 	lea    rdi,[rip+0xe6e1]        # 11048 <__TMC_END__>
    2967:	48 8d 35 da e6 00 00 	lea    rsi,[rip+0xe6da]        # 11048 <__TMC_END__>
    296e:	48 29 fe             	sub    rsi,rdi
    2971:	48 89 f0             	mov    rax,rsi
    2974:	48 c1 ee 3f          	shr    rsi,0x3f
    2978:	48 c1 f8 03          	sar    rax,0x3
    297c:	48 01 c6             	add    rsi,rax
    297f:	48 d1 fe             	sar    rsi,1
    2982:	74 14                	je     2998 <register_tm_clones+0x38>
    2984:	48 8b 05 5d e6 00 00 	mov    rax,QWORD PTR [rip+0xe65d]        # 10fe8 <_ITM_registerTMCloneTable>
    298b:	48 85 c0             	test   rax,rax
    298e:	74 08                	je     2998 <register_tm_clones+0x38>
    2990:	ff e0                	jmp    rax
    2992:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2998:	c3                   	ret    
    2999:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029a0 <__do_global_dtors_aux>:
    29a0:	f3 0f 1e fa          	endbr64 
    29a4:	80 3d bd e6 00 00 00 	cmp    BYTE PTR [rip+0xe6bd],0x0        # 11068 <completed.0>
    29ab:	75 2b                	jne    29d8 <__do_global_dtors_aux+0x38>
    29ad:	55                   	push   rbp
    29ae:	48 83 3d 3a e6 00 00 	cmp    QWORD PTR [rip+0xe63a],0x0        # 10ff0 <__cxa_finalize@GLIBC_2.2.5>
    29b5:	00 
    29b6:	48 89 e5             	mov    rbp,rsp
    29b9:	74 0c                	je     29c7 <__do_global_dtors_aux+0x27>
    29bb:	48 8b 3d 46 e6 00 00 	mov    rdi,QWORD PTR [rip+0xe646]        # 11008 <__dso_handle>
    29c2:	e8 c9 fa ff ff       	call   2490 <__cxa_finalize@plt>
    29c7:	e8 64 ff ff ff       	call   2930 <deregister_tm_clones>
    29cc:	c6 05 95 e6 00 00 01 	mov    BYTE PTR [rip+0xe695],0x1        # 11068 <completed.0>
    29d3:	5d                   	pop    rbp
    29d4:	c3                   	ret    
    29d5:	0f 1f 00             	nop    DWORD PTR [rax]
    29d8:	c3                   	ret    
    29d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000029e0 <frame_dummy>:
    29e0:	f3 0f 1e fa          	endbr64 
    29e4:	e9 77 ff ff ff       	jmp    2960 <register_tm_clones>

00000000000029e9 <add_thread>:
    29e9:	f3 0f 1e fa          	endbr64 
    29ed:	55                   	push   rbp
    29ee:	48 89 e5             	mov    rbp,rsp
    29f1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    29f5:	8b 05 a5 e8 00 00    	mov    eax,DWORD PTR [rip+0xe8a5]        # 112a0 <thread_count>
    29fb:	8d 50 01             	lea    edx,[rax+0x1]
    29fe:	89 15 9c e8 00 00    	mov    DWORD PTR [rip+0xe89c],edx        # 112a0 <thread_count>
    2a04:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    2a08:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
    2a0b:	48 98                	cdqe   
    2a0d:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2a14:	00 
    2a15:	48 8d 05 84 e6 00 00 	lea    rax,[rip+0xe684]        # 110a0 <threads>
    2a1c:	48 89 14 01          	mov    QWORD PTR [rcx+rax*1],rdx
    2a20:	90                   	nop
    2a21:	5d                   	pop    rbp
    2a22:	c3                   	ret    

0000000000002a23 <pktmgr>:
    2a23:	f3 0f 1e fa          	endbr64 
    2a27:	55                   	push   rbp
    2a28:	48 89 e5             	mov    rbp,rsp
    2a2b:	53                   	push   rbx
    2a2c:	48 83 ec 38          	sub    rsp,0x38
    2a30:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    2a34:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    2a38:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    2a3c:	b8 00 00 00 00       	mov    eax,0x0
    2a41:	e8 0e 8f 00 00       	call   b954 <pps_monitor>
    2a46:	0f b6 05 17 75 10 00 	movzx  eax,BYTE PTR [rip+0x107517]        # 109f64 <packet_print>
    2a4d:	84 c0                	test   al,al
    2a4f:	74 0c                	je     2a5d <pktmgr+0x3a>
    2a51:	48 8d 3d f8 95 00 00 	lea    rdi,[rip+0x95f8]        # c050 <_IO_stdin_used+0x50>
    2a58:	e8 c3 fa ff ff       	call   2520 <puts@plt>
    2a5d:	8b 05 41 e8 00 00    	mov    eax,DWORD PTR [rip+0xe841]        # 112a4 <total_pkt_captured>
    2a63:	83 c0 01             	add    eax,0x1
    2a66:	89 05 38 e8 00 00    	mov    DWORD PTR [rip+0xe838],eax        # 112a4 <total_pkt_captured>
    2a6c:	8b 05 4e e8 00 00    	mov    eax,DWORD PTR [rip+0xe84e]        # 112c0 <pkt_counter>
    2a72:	83 c0 01             	add    eax,0x1
    2a75:	89 05 45 e8 00 00    	mov    DWORD PTR [rip+0xe845],eax        # 112c0 <pkt_counter>
    2a7b:	8b 15 3f e8 00 00    	mov    edx,DWORD PTR [rip+0xe83f]        # 112c0 <pkt_counter>
    2a81:	8b 05 d9 74 10 00    	mov    eax,DWORD PTR [rip+0x1074d9]        # 109f60 <clean_delay_pkts>
    2a87:	39 c2                	cmp    edx,eax
    2a89:	72 0a                	jb     2a95 <pktmgr+0x72>
    2a8b:	c7 05 2b e8 00 00 00 	mov    DWORD PTR [rip+0xe82b],0x0        # 112c0 <pkt_counter>
    2a92:	00 00 00 
    2a95:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2a99:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    2a9d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2aa1:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
    2aa5:	0f b7 c0             	movzx  eax,ax
    2aa8:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2aad:	74 46                	je     2af5 <pktmgr+0xd2>
    2aaf:	3d 86 dd 00 00       	cmp    eax,0xdd86
    2ab4:	7f 77                	jg     2b2d <pktmgr+0x10a>
    2ab6:	3d 80 35 00 00       	cmp    eax,0x3580
    2abb:	74 23                	je     2ae0 <pktmgr+0xbd>
    2abd:	3d 80 35 00 00       	cmp    eax,0x3580
    2ac2:	7f 69                	jg     2b2d <pktmgr+0x10a>
    2ac4:	3d 08 06 00 00       	cmp    eax,0x608
    2ac9:	74 15                	je     2ae0 <pktmgr+0xbd>
    2acb:	3d 08 06 00 00       	cmp    eax,0x608
    2ad0:	7f 5b                	jg     2b2d <pktmgr+0x10a>
    2ad2:	83 f8 08             	cmp    eax,0x8
    2ad5:	74 33                	je     2b0a <pktmgr+0xe7>
    2ad7:	3d 90 00 00 00       	cmp    eax,0x90
    2adc:	74 41                	je     2b1f <pktmgr+0xfc>
    2ade:	eb 4d                	jmp    2b2d <pktmgr+0x10a>
    2ae0:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2ae4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2ae8:	48 89 d6             	mov    rsi,rdx
    2aeb:	48 89 c7             	mov    rdi,rax
    2aee:	e8 86 00 00 00       	call   2b79 <arpdecode>
    2af3:	eb 7d                	jmp    2b72 <pktmgr+0x14f>
    2af5:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2af9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2afd:	48 89 d6             	mov    rsi,rdx
    2b00:	48 89 c7             	mov    rdi,rax
    2b03:	e8 df 87 00 00       	call   b2e7 <ip6decode>
    2b08:	eb 68                	jmp    2b72 <pktmgr+0x14f>
    2b0a:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2b0e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b12:	48 89 d6             	mov    rsi,rdx
    2b15:	48 89 c7             	mov    rdi,rax
    2b18:	e8 56 0b 00 00       	call   3673 <ipv4pktmgr>
    2b1d:	eb 53                	jmp    2b72 <pktmgr+0x14f>
    2b1f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b23:	48 89 c7             	mov    rdi,rax
    2b26:	e8 42 03 00 00       	call   2e6d <loopback_ctp_decode>
    2b2b:	eb 45                	jmp    2b72 <pktmgr+0x14f>
    2b2d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b31:	48 89 c7             	mov    rdi,rax
    2b34:	e8 f5 04 00 00       	call   302e <uc_mac_ntoa>
    2b39:	48 89 c3             	mov    rbx,rax
    2b3c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2b40:	48 83 c0 06          	add    rax,0x6
    2b44:	48 89 c7             	mov    rdi,rax
    2b47:	e8 e2 04 00 00       	call   302e <uc_mac_ntoa>
    2b4c:	41 b9 ff ff ff ff    	mov    r9d,0xffffffff
    2b52:	41 b8 ff ff ff ff    	mov    r8d,0xffffffff
    2b58:	48 89 d9             	mov    rcx,rbx
    2b5b:	48 89 c2             	mov    rdx,rax
    2b5e:	48 8d 35 33 95 00 00 	lea    rsi,[rip+0x9533]        # c098 <_IO_stdin_used+0x98>
    2b65:	48 8d 3d 5e 95 00 00 	lea    rdi,[rip+0x955e]        # c0ca <_IO_stdin_used+0xca>
    2b6c:	e8 fa 67 00 00       	call   936b <lfprintf>
    2b71:	90                   	nop
    2b72:	90                   	nop
    2b73:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    2b77:	c9                   	leave  
    2b78:	c3                   	ret    

0000000000002b79 <arpdecode>:
    2b79:	f3 0f 1e fa          	endbr64 
    2b7d:	55                   	push   rbp
    2b7e:	48 89 e5             	mov    rbp,rsp
    2b81:	48 81 ec 50 03 00 00 	sub    rsp,0x350
    2b88:	48 89 bd b8 fc ff ff 	mov    QWORD PTR [rbp-0x348],rdi
    2b8f:	48 89 b5 b0 fc ff ff 	mov    QWORD PTR [rbp-0x350],rsi
    2b96:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2b9d:	00 00 
    2b9f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2ba3:	31 c0                	xor    eax,eax
    2ba5:	0f b6 05 b8 73 10 00 	movzx  eax,BYTE PTR [rip+0x1073b8]        # 109f64 <packet_print>
    2bac:	84 c0                	test   al,al
    2bae:	74 18                	je     2bc8 <arpdecode+0x4f>
    2bb0:	48 8d 35 31 95 00 00 	lea    rsi,[rip+0x9531]        # c0e8 <_IO_stdin_used+0xe8>
    2bb7:	48 8d 3d 32 95 00 00 	lea    rdi,[rip+0x9532]        # c0f0 <_IO_stdin_used+0xf0>
    2bbe:	b8 00 00 00 00       	mov    eax,0x0
    2bc3:	e8 f8 f8 ff ff       	call   24c0 <printf@plt>
    2bc8:	48 8b 85 b8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x348]
    2bcf:	48 83 c0 0e          	add    rax,0xe
    2bd3:	48 89 85 c8 fc ff ff 	mov    QWORD PTR [rbp-0x338],rax
    2bda:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2be1:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2be5:	0f b7 c0             	movzx  eax,ax
    2be8:	3d 00 18 00 00       	cmp    eax,0x1800
    2bed:	74 35                	je     2c24 <arpdecode+0xab>
    2bef:	3d 00 18 00 00       	cmp    eax,0x1800
    2bf4:	0f 8f 1d 02 00 00    	jg     2e17 <arpdecode+0x29e>
    2bfa:	3d 00 02 00 00       	cmp    eax,0x200
    2bff:	0f 84 eb 00 00 00    	je     2cf0 <arpdecode+0x177>
    2c05:	3d 00 02 00 00       	cmp    eax,0x200
    2c0a:	0f 8f 07 02 00 00    	jg     2e17 <arpdecode+0x29e>
    2c10:	83 f8 02             	cmp    eax,0x2
    2c13:	0f 84 d7 00 00 00    	je     2cf0 <arpdecode+0x177>
    2c19:	3d 00 01 00 00       	cmp    eax,0x100
    2c1e:	0f 85 f3 01 00 00    	jne    2e17 <arpdecode+0x29e>
    2c24:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c2b:	48 83 c0 18          	add    rax,0x18
    2c2f:	48 89 c7             	mov    rdi,rax
    2c32:	e8 9d 04 00 00       	call   30d4 <u8_ipv4_ntoa>
    2c37:	48 89 c1             	mov    rcx,rax
    2c3a:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2c3e:	ba 20 00 00 00       	mov    edx,0x20
    2c43:	48 89 ce             	mov    rsi,rcx
    2c46:	48 89 c7             	mov    rdi,rax
    2c49:	e8 f2 fb ff ff       	call   2840 <strncpy@plt>
    2c4e:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2c55:	48 83 c0 0e          	add    rax,0xe
    2c59:	48 89 c7             	mov    rdi,rax
    2c5c:	e8 73 04 00 00       	call   30d4 <u8_ipv4_ntoa>
    2c61:	48 89 c1             	mov    rcx,rax
    2c64:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c68:	ba 20 00 00 00       	mov    edx,0x20
    2c6d:	48 89 ce             	mov    rsi,rcx
    2c70:	48 89 c7             	mov    rdi,rax
    2c73:	e8 c8 fb ff ff       	call   2840 <strncpy@plt>
    2c78:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2c7c:	ba 05 00 00 00       	mov    edx,0x5
    2c81:	48 8d 35 6b 94 00 00 	lea    rsi,[rip+0x946b]        # c0f3 <_IO_stdin_used+0xf3>
    2c88:	48 89 c7             	mov    rdi,rax
    2c8b:	e8 00 f9 ff ff       	call   2590 <strncmp@plt>
    2c90:	85 c0                	test   eax,eax
    2c92:	75 2c                	jne    2cc0 <arpdecode+0x147>
    2c94:	0f b6 05 c9 72 10 00 	movzx  eax,BYTE PTR [rip+0x1072c9]        # 109f64 <packet_print>
    2c9b:	84 c0                	test   al,al
    2c9d:	0f 84 97 01 00 00    	je     2e3a <arpdecode+0x2c1>
    2ca3:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2ca7:	48 89 c6             	mov    rsi,rax
    2caa:	48 8d 3d 4f 94 00 00 	lea    rdi,[rip+0x944f]        # c100 <_IO_stdin_used+0x100>
    2cb1:	b8 00 00 00 00       	mov    eax,0x0
    2cb6:	e8 05 f8 ff ff       	call   24c0 <printf@plt>
    2cbb:	e9 7a 01 00 00       	jmp    2e3a <arpdecode+0x2c1>
    2cc0:	0f b6 05 9d 72 10 00 	movzx  eax,BYTE PTR [rip+0x10729d]        # 109f64 <packet_print>
    2cc7:	84 c0                	test   al,al
    2cc9:	0f 84 6b 01 00 00    	je     2e3a <arpdecode+0x2c1>
    2ccf:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2cd3:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2cd7:	48 89 c6             	mov    rsi,rax
    2cda:	48 8d 3d 3f 94 00 00 	lea    rdi,[rip+0x943f]        # c120 <_IO_stdin_used+0x120>
    2ce1:	b8 00 00 00 00       	mov    eax,0x0
    2ce6:	e8 d5 f7 ff ff       	call   24c0 <printf@plt>
    2ceb:	e9 4a 01 00 00       	jmp    2e3a <arpdecode+0x2c1>
    2cf0:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2cf7:	48 83 c0 08          	add    rax,0x8
    2cfb:	48 89 c7             	mov    rdi,rax
    2cfe:	e8 7d 02 00 00       	call   2f80 <mac_ntoa>
    2d03:	48 89 c1             	mov    rcx,rax
    2d06:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2d0a:	ba 40 00 00 00       	mov    edx,0x40
    2d0f:	48 89 ce             	mov    rsi,rcx
    2d12:	48 89 c7             	mov    rdi,rax
    2d15:	e8 26 fb ff ff       	call   2840 <strncpy@plt>
    2d1a:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2d21:	48 83 c0 0e          	add    rax,0xe
    2d25:	48 89 c7             	mov    rdi,rax
    2d28:	e8 a7 03 00 00       	call   30d4 <u8_ipv4_ntoa>
    2d2d:	48 89 c1             	mov    rcx,rax
    2d30:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d34:	ba 20 00 00 00       	mov    edx,0x20
    2d39:	48 89 ce             	mov    rsi,rcx
    2d3c:	48 89 c7             	mov    rdi,rax
    2d3f:	e8 fc fa ff ff       	call   2840 <strncpy@plt>
    2d44:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d48:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d4c:	48 89 d6             	mov    rsi,rdx
    2d4f:	48 89 c7             	mov    rdi,rax
    2d52:	e8 57 50 00 00       	call   7dae <entry_exists>
    2d57:	83 f8 ff             	cmp    eax,0xffffffff
    2d5a:	74 15                	je     2d71 <arpdecode+0x1f8>
    2d5c:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2d60:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2d64:	48 89 d6             	mov    rsi,rdx
    2d67:	48 89 c7             	mov    rdi,rax
    2d6a:	e8 ec 4e 00 00       	call   7c5b <compare_entries>
    2d6f:	eb 7d                	jmp    2dee <arpdecode+0x275>
    2d71:	0f b6 05 a9 71 10 00 	movzx  eax,BYTE PTR [rip+0x1071a9]        # 109f21 <use_sqlite>
    2d78:	84 c0                	test   al,al
    2d7a:	74 5f                	je     2ddb <arpdecode+0x262>
    2d7c:	c7 85 f4 fc ff ff 00 	mov    DWORD PTR [rbp-0x30c],0x0
    2d83:	00 00 00 
    2d86:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    2d8a:	48 8d 85 d0 fc ff ff 	lea    rax,[rbp-0x330]
    2d91:	48 89 d6             	mov    rsi,rdx
    2d94:	48 89 c7             	mov    rdi,rax
    2d97:	e8 54 fa ff ff       	call   27f0 <strcpy@plt>
    2d9c:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    2da0:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2da7:	48 83 c2 10          	add    rdx,0x10
    2dab:	48 89 c6             	mov    rsi,rax
    2dae:	48 89 d7             	mov    rdi,rdx
    2db1:	e8 3a fa ff ff       	call   27f0 <strcpy@plt>
    2db6:	48 8d 95 d0 fc ff ff 	lea    rdx,[rbp-0x330]
    2dbd:	48 8d 85 c0 fc ff ff 	lea    rax,[rbp-0x340]
    2dc4:	48 89 d1             	mov    rcx,rdx
    2dc7:	48 8d 15 ed 54 00 00 	lea    rdx,[rip+0x54ed]        # 82bb <update_db>
    2dce:	be 00 00 00 00       	mov    esi,0x0
    2dd3:	48 89 c7             	mov    rdi,rax
    2dd6:	e8 35 f8 ff ff       	call   2610 <pthread_create@plt>
    2ddb:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2ddf:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2de3:	48 89 d6             	mov    rsi,rdx
    2de6:	48 89 c7             	mov    rdi,rax
    2de9:	e8 4c 4f 00 00       	call   7d3a <add_entry>
    2dee:	0f b6 05 6f 71 10 00 	movzx  eax,BYTE PTR [rip+0x10716f]        # 109f64 <packet_print>
    2df5:	84 c0                	test   al,al
    2df7:	74 44                	je     2e3d <arpdecode+0x2c4>
    2df9:	48 8d 55 b0          	lea    rdx,[rbp-0x50]
    2dfd:	48 8d 45 90          	lea    rax,[rbp-0x70]
    2e01:	48 89 c6             	mov    rsi,rax
    2e04:	48 8d 3d 3d 93 00 00 	lea    rdi,[rip+0x933d]        # c148 <_IO_stdin_used+0x148>
    2e0b:	b8 00 00 00 00       	mov    eax,0x0
    2e10:	e8 ab f6 ff ff       	call   24c0 <printf@plt>
    2e15:	eb 26                	jmp    2e3d <arpdecode+0x2c4>
    2e17:	48 8b 85 c8 fc ff ff 	mov    rax,QWORD PTR [rbp-0x338]
    2e1e:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    2e22:	0f b7 c0             	movzx  eax,ax
    2e25:	89 c6                	mov    esi,eax
    2e27:	48 8d 3d 39 93 00 00 	lea    rdi,[rip+0x9339]        # c167 <_IO_stdin_used+0x167>
    2e2e:	b8 00 00 00 00       	mov    eax,0x0
    2e33:	e8 88 f6 ff ff       	call   24c0 <printf@plt>
    2e38:	eb 04                	jmp    2e3e <arpdecode+0x2c5>
    2e3a:	90                   	nop
    2e3b:	eb 01                	jmp    2e3e <arpdecode+0x2c5>
    2e3d:	90                   	nop
    2e3e:	48 8d 35 3a 93 00 00 	lea    rsi,[rip+0x933a]        # c17f <_IO_stdin_used+0x17f>
    2e45:	48 8d 3d a4 92 00 00 	lea    rdi,[rip+0x92a4]        # c0f0 <_IO_stdin_used+0xf0>
    2e4c:	b8 00 00 00 00       	mov    eax,0x0
    2e51:	e8 6a f6 ff ff       	call   24c0 <printf@plt>
    2e56:	90                   	nop
    2e57:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e5b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2e62:	00 00 
    2e64:	74 05                	je     2e6b <arpdecode+0x2f2>
    2e66:	e8 45 f9 ff ff       	call   27b0 <__stack_chk_fail@plt>
    2e6b:	c9                   	leave  
    2e6c:	c3                   	ret    

0000000000002e6d <loopback_ctp_decode>:
    2e6d:	f3 0f 1e fa          	endbr64 
    2e71:	55                   	push   rbp
    2e72:	48 89 e5             	mov    rbp,rsp
    2e75:	48 83 ec 60          	sub    rsp,0x60
    2e79:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    2e7d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2e84:	00 00 
    2e86:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2e8a:	31 c0                	xor    eax,eax
    2e8c:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e90:	48 83 c0 0e          	add    rax,0xe
    2e94:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    2e98:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    2e9c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    2ea0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2ea4:	48 83 c0 06          	add    rax,0x6
    2ea8:	48 89 c7             	mov    rdi,rax
    2eab:	e8 7e 01 00 00       	call   302e <uc_mac_ntoa>
    2eb0:	48 89 c1             	mov    rcx,rax
    2eb3:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2eb7:	ba 18 00 00 00       	mov    edx,0x18
    2ebc:	48 89 ce             	mov    rsi,rcx
    2ebf:	48 89 c7             	mov    rdi,rax
    2ec2:	e8 79 f9 ff ff       	call   2840 <strncpy@plt>
    2ec7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    2ecb:	48 89 c7             	mov    rdi,rax
    2ece:	e8 5b 01 00 00       	call   302e <uc_mac_ntoa>
    2ed3:	48 89 c1             	mov    rcx,rax
    2ed6:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2eda:	ba 18 00 00 00       	mov    edx,0x18
    2edf:	48 89 ce             	mov    rsi,rcx
    2ee2:	48 89 c7             	mov    rdi,rax
    2ee5:	e8 56 f9 ff ff       	call   2840 <strncpy@plt>
    2eea:	0f b6 05 73 70 10 00 	movzx  eax,BYTE PTR [rip+0x107073]        # 109f64 <packet_print>
    2ef1:	84 c0                	test   al,al
    2ef3:	74 1c                	je     2f11 <loopback_ctp_decode+0xa4>
    2ef5:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
    2ef9:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    2efd:	48 89 c6             	mov    rsi,rax
    2f00:	48 8d 3d 7d 92 00 00 	lea    rdi,[rip+0x927d]        # c184 <_IO_stdin_used+0x184>
    2f07:	b8 00 00 00 00       	mov    eax,0x0
    2f0c:	e8 af f5 ff ff       	call   24c0 <printf@plt>
    2f11:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f15:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f19:	0f b7 c0             	movzx  eax,ax
    2f1c:	83 f8 01             	cmp    eax,0x1
    2f1f:	75 19                	jne    2f3a <loopback_ctp_decode+0xcd>
    2f21:	0f b6 05 3c 70 10 00 	movzx  eax,BYTE PTR [rip+0x10703c]        # 109f64 <packet_print>
    2f28:	84 c0                	test   al,al
    2f2a:	74 39                	je     2f65 <loopback_ctp_decode+0xf8>
    2f2c:	48 8d 3d 5f 92 00 00 	lea    rdi,[rip+0x925f]        # c192 <_IO_stdin_used+0x192>
    2f33:	e8 e8 f5 ff ff       	call   2520 <puts@plt>
    2f38:	eb 2b                	jmp    2f65 <loopback_ctp_decode+0xf8>
    2f3a:	0f b6 05 23 70 10 00 	movzx  eax,BYTE PTR [rip+0x107023]        # 109f64 <packet_print>
    2f41:	84 c0                	test   al,al
    2f43:	74 23                	je     2f68 <loopback_ctp_decode+0xfb>
    2f45:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    2f49:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    2f4d:	0f b7 c0             	movzx  eax,ax
    2f50:	89 c6                	mov    esi,eax
    2f52:	48 8d 3d 41 92 00 00 	lea    rdi,[rip+0x9241]        # c19a <_IO_stdin_used+0x19a>
    2f59:	b8 00 00 00 00       	mov    eax,0x0
    2f5e:	e8 5d f5 ff ff       	call   24c0 <printf@plt>
    2f63:	eb 03                	jmp    2f68 <loopback_ctp_decode+0xfb>
    2f65:	90                   	nop
    2f66:	eb 01                	jmp    2f69 <loopback_ctp_decode+0xfc>
    2f68:	90                   	nop
    2f69:	90                   	nop
    2f6a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f6e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2f75:	00 00 
    2f77:	74 05                	je     2f7e <loopback_ctp_decode+0x111>
    2f79:	e8 32 f8 ff ff       	call   27b0 <__stack_chk_fail@plt>
    2f7e:	c9                   	leave  
    2f7f:	c3                   	ret    

0000000000002f80 <mac_ntoa>:
    2f80:	f3 0f 1e fa          	endbr64 
    2f84:	55                   	push   rbp
    2f85:	48 89 e5             	mov    rbp,rsp
    2f88:	48 83 ec 20          	sub    rsp,0x20
    2f8c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2f90:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2f94:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2f98:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2f9c:	48 83 c0 05          	add    rax,0x5
    2fa0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fa3:	0f b6 f0             	movzx  esi,al
    2fa6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2faa:	48 83 c0 04          	add    rax,0x4
    2fae:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fb1:	0f b6 c8             	movzx  ecx,al
    2fb4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fb8:	48 83 c0 03          	add    rax,0x3
    2fbc:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fbf:	0f b6 d0             	movzx  edx,al
    2fc2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fc6:	48 83 c0 02          	add    rax,0x2
    2fca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fcd:	44 0f b6 c8          	movzx  r9d,al
    2fd1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fd5:	48 83 c0 01          	add    rax,0x1
    2fd9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fdc:	44 0f b6 c0          	movzx  r8d,al
    2fe0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2fe4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    2fe7:	0f b6 c0             	movzx  eax,al
    2fea:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    2ff1:	00 00 
    2ff3:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    2ffa:	48 83 ec 08          	sub    rsp,0x8
    2ffe:	56                   	push   rsi
    2fff:	51                   	push   rcx
    3000:	52                   	push   rdx
    3001:	89 c1                	mov    ecx,eax
    3003:	48 8d 15 ae 91 00 00 	lea    rdx,[rip+0x91ae]        # c1b8 <_IO_stdin_used+0x1b8>
    300a:	be 80 00 00 00       	mov    esi,0x80
    300f:	b8 00 00 00 00       	mov    eax,0x0
    3014:	e8 c7 f4 ff ff       	call   24e0 <snprintf@plt>
    3019:	48 83 c4 20          	add    rsp,0x20
    301d:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    3024:	00 00 
    3026:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    302c:	c9                   	leave  
    302d:	c3                   	ret    

000000000000302e <uc_mac_ntoa>:
    302e:	f3 0f 1e fa          	endbr64 
    3032:	55                   	push   rbp
    3033:	48 89 e5             	mov    rbp,rsp
    3036:	48 83 ec 10          	sub    rsp,0x10
    303a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    303e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3042:	48 83 c0 05          	add    rax,0x5
    3046:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3049:	0f b6 f0             	movzx  esi,al
    304c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3050:	48 83 c0 04          	add    rax,0x4
    3054:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3057:	0f b6 c8             	movzx  ecx,al
    305a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    305e:	48 83 c0 03          	add    rax,0x3
    3062:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3065:	0f b6 d0             	movzx  edx,al
    3068:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    306c:	48 83 c0 02          	add    rax,0x2
    3070:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3073:	44 0f b6 c8          	movzx  r9d,al
    3077:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    307b:	48 83 c0 01          	add    rax,0x1
    307f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3082:	44 0f b6 c0          	movzx  r8d,al
    3086:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    308a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    308d:	0f b6 c0             	movzx  eax,al
    3090:	64 48 8b 3c 25 00 00 	mov    rdi,QWORD PTR fs:0x0
    3097:	00 00 
    3099:	48 81 c7 80 fb ff ff 	add    rdi,0xfffffffffffffb80
    30a0:	48 83 ec 08          	sub    rsp,0x8
    30a4:	56                   	push   rsi
    30a5:	51                   	push   rcx
    30a6:	52                   	push   rdx
    30a7:	89 c1                	mov    ecx,eax
    30a9:	48 8d 15 08 91 00 00 	lea    rdx,[rip+0x9108]        # c1b8 <_IO_stdin_used+0x1b8>
    30b0:	be 80 00 00 00       	mov    esi,0x80
    30b5:	b8 00 00 00 00       	mov    eax,0x0
    30ba:	e8 21 f4 ff ff       	call   24e0 <snprintf@plt>
    30bf:	48 83 c4 20          	add    rsp,0x20
    30c3:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    30ca:	00 00 
    30cc:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    30d2:	c9                   	leave  
    30d3:	c3                   	ret    

00000000000030d4 <u8_ipv4_ntoa>:
    30d4:	f3 0f 1e fa          	endbr64 
    30d8:	55                   	push   rbp
    30d9:	48 89 e5             	mov    rbp,rsp
    30dc:	48 83 ec 20          	sub    rsp,0x20
    30e0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    30e4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    30e8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    30ec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30f0:	48 83 c0 03          	add    rax,0x3
    30f4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    30f7:	0f b6 d0             	movzx  edx,al
    30fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    30fe:	48 83 c0 02          	add    rax,0x2
    3102:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3105:	44 0f b6 c0          	movzx  r8d,al
    3109:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    310d:	48 83 c0 01          	add    rax,0x1
    3111:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3114:	0f b6 f0             	movzx  esi,al
    3117:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    311b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    311e:	0f b6 c0             	movzx  eax,al
    3121:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    3128:	00 00 
    312a:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    3131:	48 83 ec 08          	sub    rsp,0x8
    3135:	52                   	push   rdx
    3136:	45 89 c1             	mov    r9d,r8d
    3139:	41 89 f0             	mov    r8d,esi
    313c:	89 c1                	mov    ecx,eax
    313e:	48 8d 15 91 90 00 00 	lea    rdx,[rip+0x9091]        # c1d6 <_IO_stdin_used+0x1d6>
    3145:	be 80 00 00 00       	mov    esi,0x80
    314a:	b8 00 00 00 00       	mov    eax,0x0
    314f:	e8 8c f3 ff ff       	call   24e0 <snprintf@plt>
    3154:	48 83 c4 10          	add    rsp,0x10
    3158:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    315f:	00 00 
    3161:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3167:	c9                   	leave  
    3168:	c3                   	ret    

0000000000003169 <ipv4_ntoa>:
    3169:	f3 0f 1e fa          	endbr64 
    316d:	55                   	push   rbp
    316e:	48 89 e5             	mov    rbp,rsp
    3171:	48 83 ec 20          	sub    rsp,0x20
    3175:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    3178:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    317c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3180:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3184:	48 83 c0 03          	add    rax,0x3
    3188:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    318b:	0f b6 d0             	movzx  edx,al
    318e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3192:	48 83 c0 02          	add    rax,0x2
    3196:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3199:	44 0f b6 c0          	movzx  r8d,al
    319d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31a1:	48 83 c0 01          	add    rax,0x1
    31a5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31a8:	0f b6 f0             	movzx  esi,al
    31ab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    31af:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    31b2:	0f b6 c0             	movzx  eax,al
    31b5:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    31bc:	00 00 
    31be:	48 8d b9 80 fb ff ff 	lea    rdi,[rcx-0x480]
    31c5:	48 83 ec 08          	sub    rsp,0x8
    31c9:	52                   	push   rdx
    31ca:	45 89 c1             	mov    r9d,r8d
    31cd:	41 89 f0             	mov    r8d,esi
    31d0:	89 c1                	mov    ecx,eax
    31d2:	48 8d 15 fd 8f 00 00 	lea    rdx,[rip+0x8ffd]        # c1d6 <_IO_stdin_used+0x1d6>
    31d9:	be 80 00 00 00       	mov    esi,0x80
    31de:	b8 00 00 00 00       	mov    eax,0x0
    31e3:	e8 f8 f2 ff ff       	call   24e0 <snprintf@plt>
    31e8:	48 83 c4 10          	add    rsp,0x10
    31ec:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    31f3:	00 00 
    31f5:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    31fb:	c9                   	leave  
    31fc:	c3                   	ret    

00000000000031fd <inet6_ntoa>:
    31fd:	f3 0f 1e fa          	endbr64 
    3201:	55                   	push   rbp
    3202:	48 89 e5             	mov    rbp,rsp
    3205:	41 57                	push   r15
    3207:	41 56                	push   r14
    3209:	41 55                	push   r13
    320b:	41 54                	push   r12
    320d:	53                   	push   rbx
    320e:	48 83 ec 38          	sub    rsp,0x38
    3212:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    3216:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    321d:	00 00 
    321f:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    3223:	31 c0                	xor    eax,eax
    3225:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    322c:	00 00 
    322e:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3234:	ba 80 00 00 00       	mov    edx,0x80
    3239:	be 00 00 00 00       	mov    esi,0x0
    323e:	48 89 c7             	mov    rdi,rax
    3241:	e8 8a f2 ff ff       	call   24d0 <memset@plt>
    3246:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
    324d:	00 
    324e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3252:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    3256:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    325a:	48 83 c0 0f          	add    rax,0xf
    325e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3261:	0f b6 c8             	movzx  ecx,al
    3264:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3268:	48 83 c0 0e          	add    rax,0xe
    326c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    326f:	0f b6 f8             	movzx  edi,al
    3272:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3276:	48 83 c0 0d          	add    rax,0xd
    327a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    327d:	0f b6 c0             	movzx  eax,al
    3280:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    3283:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3287:	48 83 c0 0c          	add    rax,0xc
    328b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    328e:	0f b6 d8             	movzx  ebx,al
    3291:	89 5d b0             	mov    DWORD PTR [rbp-0x50],ebx
    3294:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3298:	48 83 c0 0b          	add    rax,0xb
    329c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    329f:	44 0f b6 f8          	movzx  r15d,al
    32a3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32a7:	48 83 c0 0a          	add    rax,0xa
    32ab:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32ae:	44 0f b6 f0          	movzx  r14d,al
    32b2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32b6:	48 83 c0 09          	add    rax,0x9
    32ba:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32bd:	44 0f b6 e8          	movzx  r13d,al
    32c1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32c5:	48 83 c0 08          	add    rax,0x8
    32c9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32cc:	44 0f b6 e0          	movzx  r12d,al
    32d0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32d4:	48 83 c0 07          	add    rax,0x7
    32d8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32db:	0f b6 d8             	movzx  ebx,al
    32de:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32e2:	48 83 c0 06          	add    rax,0x6
    32e6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32e9:	44 0f b6 d8          	movzx  r11d,al
    32ed:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    32f1:	48 83 c0 05          	add    rax,0x5
    32f5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    32f8:	44 0f b6 d0          	movzx  r10d,al
    32fc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    3300:	48 83 c0 04          	add    rax,0x4
    3304:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3307:	44 0f b6 c8          	movzx  r9d,al
    330b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    330f:	48 83 c0 03          	add    rax,0x3
    3313:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3316:	44 0f b6 c0          	movzx  r8d,al
    331a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    331e:	48 83 c0 02          	add    rax,0x2
    3322:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3325:	0f b6 d0             	movzx  edx,al
    3328:	89 55 ac             	mov    DWORD PTR [rbp-0x54],edx
    332b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    332f:	48 83 c0 01          	add    rax,0x1
    3333:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3336:	0f b6 f0             	movzx  esi,al
    3339:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    333d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3340:	0f b6 d0             	movzx  edx,al
    3343:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    334a:	00 00 
    334c:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    3352:	48 83 ec 08          	sub    rsp,0x8
    3356:	51                   	push   rcx
    3357:	57                   	push   rdi
    3358:	8b 4d b4             	mov    ecx,DWORD PTR [rbp-0x4c]
    335b:	51                   	push   rcx
    335c:	8b 4d b0             	mov    ecx,DWORD PTR [rbp-0x50]
    335f:	51                   	push   rcx
    3360:	41 57                	push   r15
    3362:	41 56                	push   r14
    3364:	41 55                	push   r13
    3366:	41 54                	push   r12
    3368:	53                   	push   rbx
    3369:	41 53                	push   r11
    336b:	41 52                	push   r10
    336d:	41 51                	push   r9
    336f:	41 50                	push   r8
    3371:	44 8b 4d ac          	mov    r9d,DWORD PTR [rbp-0x54]
    3375:	41 89 f0             	mov    r8d,esi
    3378:	89 d1                	mov    ecx,edx
    337a:	48 8d 15 67 8e 00 00 	lea    rdx,[rip+0x8e67]        # c1e8 <_IO_stdin_used+0x1e8>
    3381:	be 80 00 00 00       	mov    esi,0x80
    3386:	48 89 c7             	mov    rdi,rax
    3389:	b8 00 00 00 00       	mov    eax,0x0
    338e:	e8 4d f1 ff ff       	call   24e0 <snprintf@plt>
    3393:	48 83 c4 70          	add    rsp,0x70
    3397:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    339e:	00 00 
    33a0:	48 05 80 fb ff ff    	add    rax,0xfffffffffffffb80
    33a6:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    33aa:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    33b1:	00 00 
    33b3:	74 05                	je     33ba <inet6_ntoa+0x1bd>
    33b5:	e8 f6 f3 ff ff       	call   27b0 <__stack_chk_fail@plt>
    33ba:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    33be:	5b                   	pop    rbx
    33bf:	41 5c                	pop    r12
    33c1:	41 5d                	pop    r13
    33c3:	41 5e                	pop    r14
    33c5:	41 5f                	pop    r15
    33c7:	5d                   	pop    rbp
    33c8:	c3                   	ret    

00000000000033c9 <get_formated_time>:
    33c9:	f3 0f 1e fa          	endbr64 
    33cd:	55                   	push   rbp
    33ce:	48 89 e5             	mov    rbp,rsp
    33d1:	53                   	push   rbx
    33d2:	48 83 ec 58          	sub    rsp,0x58
    33d6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    33dd:	00 00 
    33df:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    33e3:	31 c0                	xor    eax,eax
    33e5:	bf ff 00 00 00       	mov    edi,0xff
    33ea:	e8 b1 f1 ff ff       	call   25a0 <malloc@plt>
    33ef:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    33f3:	bf 00 00 00 00       	mov    edi,0x0
    33f8:	e8 f3 f4 ff ff       	call   28f0 <time@plt>
    33fd:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    3401:	48 8d 45 a0          	lea    rax,[rbp-0x60]
    3405:	48 89 c7             	mov    rdi,rax
    3408:	e8 a3 f4 ff ff       	call   28b0 <localtime@plt>
    340d:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    3410:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    3414:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    3418:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    341c:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    3420:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    3424:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    3428:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    342c:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    3430:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    3434:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3438:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    343c:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    3440:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    3444:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3447:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    344a:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    344e:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    3452:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    3455:	8d 48 01             	lea    ecx,[rax+0x1]
    3458:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    345b:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    3461:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3465:	57                   	push   rdi
    3466:	56                   	push   rsi
    3467:	48 8d 35 c2 8d 00 00 	lea    rsi,[rip+0x8dc2]        # c230 <_IO_stdin_used+0x230>
    346e:	48 89 c7             	mov    rdi,rax
    3471:	b8 00 00 00 00       	mov    eax,0x0
    3476:	e8 05 f2 ff ff       	call   2680 <sprintf@plt>
    347b:	48 83 c4 10          	add    rsp,0x10
    347f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3483:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    3487:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    348e:	00 00 
    3490:	74 05                	je     3497 <get_formated_time+0xce>
    3492:	e8 19 f3 ff ff       	call   27b0 <__stack_chk_fail@plt>
    3497:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    349b:	c9                   	leave  
    349c:	c3                   	ret    

000000000000349d <cb_get_formatted_time>:
    349d:	f3 0f 1e fa          	endbr64 
    34a1:	55                   	push   rbp
    34a2:	48 89 e5             	mov    rbp,rsp
    34a5:	53                   	push   rbx
    34a6:	48 83 ec 68          	sub    rsp,0x68
    34aa:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    34ae:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    34b5:	00 00 
    34b7:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    34bb:	31 c0                	xor    eax,eax
    34bd:	bf 00 00 00 00       	mov    edi,0x0
    34c2:	e8 29 f4 ff ff       	call   28f0 <time@plt>
    34c7:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    34cb:	48 8d 45 a8          	lea    rax,[rbp-0x58]
    34cf:	48 89 c7             	mov    rdi,rax
    34d2:	e8 d9 f3 ff ff       	call   28b0 <localtime@plt>
    34d7:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    34da:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    34de:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
    34e2:	48 89 5d b8          	mov    QWORD PTR [rbp-0x48],rbx
    34e6:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    34ea:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    34ee:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    34f2:	48 89 5d c8          	mov    QWORD PTR [rbp-0x38],rbx
    34f6:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    34fa:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    34fe:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    3502:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    3506:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    350a:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    350e:	8b 7d b0             	mov    edi,DWORD PTR [rbp-0x50]
    3511:	8b 75 b4             	mov    esi,DWORD PTR [rbp-0x4c]
    3514:	44 8b 4d b8          	mov    r9d,DWORD PTR [rbp-0x48]
    3518:	44 8b 45 bc          	mov    r8d,DWORD PTR [rbp-0x44]
    351c:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    351f:	8d 48 01             	lea    ecx,[rax+0x1]
    3522:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    3525:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    352b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    352f:	57                   	push   rdi
    3530:	56                   	push   rsi
    3531:	48 8d 35 f8 8c 00 00 	lea    rsi,[rip+0x8cf8]        # c230 <_IO_stdin_used+0x230>
    3538:	48 89 c7             	mov    rdi,rax
    353b:	b8 00 00 00 00       	mov    eax,0x0
    3540:	e8 3b f1 ff ff       	call   2680 <sprintf@plt>
    3545:	48 83 c4 10          	add    rsp,0x10
    3549:	90                   	nop
    354a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    354e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3555:	00 00 
    3557:	74 05                	je     355e <cb_get_formatted_time+0xc1>
    3559:	e8 52 f2 ff ff       	call   27b0 <__stack_chk_fail@plt>
    355e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3562:	c9                   	leave  
    3563:	c3                   	ret    

0000000000003564 <strloc>:
    3564:	f3 0f 1e fa          	endbr64 
    3568:	55                   	push   rbp
    3569:	48 89 e5             	mov    rbp,rsp
    356c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    3570:	89 f0                	mov    eax,esi
    3572:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
    3575:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    357c:	eb 1e                	jmp    359c <strloc+0x38>
    357e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3581:	48 63 d0             	movsxd rdx,eax
    3584:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    3588:	48 01 d0             	add    rax,rdx
    358b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    358e:	38 45 e4             	cmp    BYTE PTR [rbp-0x1c],al
    3591:	75 05                	jne    3598 <strloc+0x34>
    3593:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    3596:	eb 1d                	jmp    35b5 <strloc+0x51>
    3598:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    359c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    359f:	48 63 d0             	movsxd rdx,eax
    35a2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    35a6:	48 01 d0             	add    rax,rdx
    35a9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    35ac:	84 c0                	test   al,al
    35ae:	75 ce                	jne    357e <strloc+0x1a>
    35b0:	b8 ff ff ff ff       	mov    eax,0xffffffff
    35b5:	5d                   	pop    rbp
    35b6:	c3                   	ret    

00000000000035b7 <fail>:
    35b7:	f3 0f 1e fa          	endbr64 
    35bb:	55                   	push   rbp
    35bc:	48 89 e5             	mov    rbp,rsp
    35bf:	48 83 ec 10          	sub    rsp,0x10
    35c3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    35c7:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    35cb:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    35cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    35d3:	48 89 c6             	mov    rsi,rax
    35d6:	48 8d 3d 6f 8c 00 00 	lea    rdi,[rip+0x8c6f]        # c24c <_IO_stdin_used+0x24c>
    35dd:	b8 00 00 00 00       	mov    eax,0x0
    35e2:	e8 d9 ee ff ff       	call   24c0 <printf@plt>
    35e7:	90                   	nop
    35e8:	c9                   	leave  
    35e9:	c3                   	ret    

00000000000035ea <char_is_printable>:
    35ea:	f3 0f 1e fa          	endbr64 
    35ee:	55                   	push   rbp
    35ef:	48 89 e5             	mov    rbp,rsp
    35f2:	89 f8                	mov    eax,edi
    35f4:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    35f7:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
    35fb:	7f 07                	jg     3604 <char_is_printable+0x1a>
    35fd:	b8 00 00 00 00       	mov    eax,0x0
    3602:	eb 05                	jmp    3609 <char_is_printable+0x1f>
    3604:	b8 01 00 00 00       	mov    eax,0x1
    3609:	5d                   	pop    rbp
    360a:	c3                   	ret    

000000000000360b <test_string_arr_print>:
    360b:	f3 0f 1e fa          	endbr64 
    360f:	55                   	push   rbp
    3610:	48 89 e5             	mov    rbp,rsp
    3613:	53                   	push   rbx
    3614:	48 83 ec 28          	sub    rsp,0x28
    3618:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    361c:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    3623:	eb 2c                	jmp    3651 <test_string_arr_print+0x46>
    3625:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    3628:	48 63 d0             	movsxd rdx,eax
    362b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    362f:	48 01 d0             	add    rax,rdx
    3632:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3635:	0f be c0             	movsx  eax,al
    3638:	89 c7                	mov    edi,eax
    363a:	e8 ab ff ff ff       	call   35ea <char_is_printable>
    363f:	83 f0 01             	xor    eax,0x1
    3642:	84 c0                	test   al,al
    3644:	74 07                	je     364d <test_string_arr_print+0x42>
    3646:	b8 00 00 00 00       	mov    eax,0x0
    364b:	eb 20                	jmp    366d <test_string_arr_print+0x62>
    364d:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    3651:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    3654:	48 63 d8             	movsxd rbx,eax
    3657:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    365b:	48 89 c7             	mov    rdi,rax
    365e:	e8 dd ef ff ff       	call   2640 <strlen@plt>
    3663:	48 39 c3             	cmp    rbx,rax
    3666:	72 bd                	jb     3625 <test_string_arr_print+0x1a>
    3668:	b8 01 00 00 00       	mov    eax,0x1
    366d:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    3671:	c9                   	leave  
    3672:	c3                   	ret    

0000000000003673 <ipv4pktmgr>:
    3673:	f3 0f 1e fa          	endbr64 
    3677:	55                   	push   rbp
    3678:	48 89 e5             	mov    rbp,rsp
    367b:	48 81 ec e0 04 00 00 	sub    rsp,0x4e0
    3682:	48 89 bd 28 fb ff ff 	mov    QWORD PTR [rbp-0x4d8],rdi
    3689:	48 89 b5 20 fb ff ff 	mov    QWORD PTR [rbp-0x4e0],rsi
    3690:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3697:	00 00 
    3699:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    369d:	31 c0                	xor    eax,eax
    369f:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    36a6:	48 83 c0 0e          	add    rax,0xe
    36aa:	48 89 85 48 fb ff ff 	mov    QWORD PTR [rbp-0x4b8],rax
    36b1:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    36b8:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    36bb:	89 c7                	mov    edi,eax
    36bd:	e8 ee ef ff ff       	call   26b0 <ntohl@plt>
    36c2:	89 85 6c fb ff ff    	mov    DWORD PTR [rbp-0x494],eax
    36c8:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    36cf:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    36d2:	89 c7                	mov    edi,eax
    36d4:	e8 d7 ef ff ff       	call   26b0 <ntohl@plt>
    36d9:	89 85 68 fb ff ff    	mov    DWORD PTR [rbp-0x498],eax
    36df:	8b 95 68 fb ff ff    	mov    edx,DWORD PTR [rbp-0x498]
    36e5:	8b 05 dd 68 10 00    	mov    eax,DWORD PTR [rip+0x1068dd]        # 109fc8 <homenetmask>
    36eb:	21 d0                	and    eax,edx
    36ed:	89 85 3c fb ff ff    	mov    DWORD PTR [rbp-0x4c4],eax
    36f3:	8b 95 6c fb ff ff    	mov    edx,DWORD PTR [rbp-0x494]
    36f9:	8b 05 c9 68 10 00    	mov    eax,DWORD PTR [rip+0x1068c9]        # 109fc8 <homenetmask>
    36ff:	21 d0                	and    eax,edx
    3701:	89 85 40 fb ff ff    	mov    DWORD PTR [rbp-0x4c0],eax
    3707:	8b 05 b7 68 10 00    	mov    eax,DWORD PTR [rip+0x1068b7]        # 109fc4 <homenet>
    370d:	39 85 3c fb ff ff    	cmp    DWORD PTR [rbp-0x4c4],eax
    3713:	75 0c                	jne    3721 <ipv4pktmgr+0xae>
    3715:	c7 85 70 fb ff ff 45 	mov    DWORD PTR [rbp-0x490],0x45
    371c:	00 00 00 
    371f:	eb 24                	jmp    3745 <ipv4pktmgr+0xd2>
    3721:	8b 05 9d 68 10 00    	mov    eax,DWORD PTR [rip+0x10689d]        # 109fc4 <homenet>
    3727:	39 85 40 fb ff ff    	cmp    DWORD PTR [rbp-0x4c0],eax
    372d:	75 0c                	jne    373b <ipv4pktmgr+0xc8>
    372f:	c7 85 70 fb ff ff 46 	mov    DWORD PTR [rbp-0x490],0x46
    3736:	00 00 00 
    3739:	eb 0a                	jmp    3745 <ipv4pktmgr+0xd2>
    373b:	c7 85 70 fb ff ff 47 	mov    DWORD PTR [rbp-0x490],0x47
    3742:	00 00 00 
    3745:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    374c:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    374f:	89 85 80 fb ff ff    	mov    DWORD PTR [rbp-0x480],eax
    3755:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    375c:	48 89 85 a0 fb ff ff 	mov    QWORD PTR [rbp-0x460],rax
    3763:	48 8b 85 20 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4e0]
    376a:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    376d:	48 8b 95 28 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4d8]
    3774:	48 83 c2 0e          	add    rdx,0xe
    3778:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    377b:	83 e2 0f             	and    edx,0xf
    377e:	0f b6 d2             	movzx  edx,dl
    3781:	c1 e2 02             	shl    edx,0x2
    3784:	29 d0                	sub    eax,edx
    3786:	83 e8 0e             	sub    eax,0xe
    3789:	89 85 44 fb ff ff    	mov    DWORD PTR [rbp-0x4bc],eax
    378f:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3796:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    3799:	89 c7                	mov    edi,eax
    379b:	e8 c9 f9 ff ff       	call   3169 <ipv4_ntoa>
    37a0:	48 89 c1             	mov    rcx,rax
    37a3:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37aa:	ba 10 00 00 00       	mov    edx,0x10
    37af:	48 89 ce             	mov    rsi,rcx
    37b2:	48 89 c7             	mov    rdi,rax
    37b5:	e8 86 f0 ff ff       	call   2840 <strncpy@plt>
    37ba:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    37c1:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    37c4:	89 c7                	mov    edi,eax
    37c6:	e8 9e f9 ff ff       	call   3169 <ipv4_ntoa>
    37cb:	48 89 c1             	mov    rcx,rax
    37ce:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37d5:	ba 10 00 00 00       	mov    edx,0x10
    37da:	48 89 ce             	mov    rsi,rcx
    37dd:	48 89 c7             	mov    rdi,rax
    37e0:	e8 5b f0 ff ff       	call   2840 <strncpy@plt>
    37e5:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    37ec:	48 89 c7             	mov    rdi,rax
    37ef:	e8 36 42 00 00       	call   7a2a <init_member>
    37f4:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    37fb:	48 89 c7             	mov    rdi,rax
    37fe:	e8 27 42 00 00       	call   7a2a <init_member>
    3803:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    380a:	48 89 c7             	mov    rdi,rax
    380d:	e8 bf 20 00 00       	call   58d1 <is_blocked_ipv4>
    3812:	84 c0                	test   al,al
    3814:	74 44                	je     385a <ipv4pktmgr+0x1e7>
    3816:	b8 00 00 00 00       	mov    eax,0x0
    381b:	e8 a9 fb ff ff       	call   33c9 <get_formated_time>
    3820:	48 89 c6             	mov    rsi,rax
    3823:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    382a:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3831:	48 89 d1             	mov    rcx,rdx
    3834:	48 89 f2             	mov    rdx,rsi
    3837:	48 8d 35 1a 8a 00 00 	lea    rsi,[rip+0x8a1a]        # c258 <_IO_stdin_used+0x258>
    383e:	48 89 c7             	mov    rdi,rax
    3841:	b8 00 00 00 00       	mov    eax,0x0
    3846:	e8 35 ee ff ff       	call   2680 <sprintf@plt>
    384b:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3852:	48 89 c7             	mov    rdi,rax
    3855:	e8 83 5c 00 00       	call   94dd <saprintf>
    385a:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    3861:	48 89 c7             	mov    rdi,rax
    3864:	e8 68 20 00 00       	call   58d1 <is_blocked_ipv4>
    3869:	84 c0                	test   al,al
    386b:	74 44                	je     38b1 <ipv4pktmgr+0x23e>
    386d:	b8 00 00 00 00       	mov    eax,0x0
    3872:	e8 52 fb ff ff       	call   33c9 <get_formated_time>
    3877:	48 89 c6             	mov    rsi,rax
    387a:	48 8d 95 d0 fb ff ff 	lea    rdx,[rbp-0x430]
    3881:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    3888:	48 89 d1             	mov    rcx,rdx
    388b:	48 89 f2             	mov    rdx,rsi
    388e:	48 8d 35 f3 89 00 00 	lea    rsi,[rip+0x89f3]        # c288 <_IO_stdin_used+0x288>
    3895:	48 89 c7             	mov    rdi,rax
    3898:	b8 00 00 00 00       	mov    eax,0x0
    389d:	e8 de ed ff ff       	call   2680 <sprintf@plt>
    38a2:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    38a9:	48 89 c7             	mov    rdi,rax
    38ac:	e8 2c 5c 00 00       	call   94dd <saprintf>
    38b1:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    38b8:	48 89 85 58 fb ff ff 	mov    QWORD PTR [rbp-0x4a8],rax
    38bf:	48 8d 85 e0 fb ff ff 	lea    rax,[rbp-0x420]
    38c6:	48 89 85 60 fb ff ff 	mov    QWORD PTR [rbp-0x4a0],rax
    38cd:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    38d4:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    38d8:	66 83 f8 20          	cmp    ax,0x20
    38dc:	74 11                	je     38ef <ipv4pktmgr+0x27c>
    38de:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    38e5:	0f b7 40 06          	movzx  eax,WORD PTR [rax+0x6]
    38e9:	66 3d 02 01          	cmp    ax,0x102
    38ed:	75 66                	jne    3955 <ipv4pktmgr+0x2e2>
    38ef:	48 8d 35 ba 89 00 00 	lea    rsi,[rip+0x89ba]        # c2b0 <_IO_stdin_used+0x2b0>
    38f6:	48 8d 3d b8 89 00 00 	lea    rdi,[rip+0x89b8]        # c2b5 <_IO_stdin_used+0x2b5>
    38fd:	b8 00 00 00 00       	mov    eax,0x0
    3902:	e8 b9 eb ff ff       	call   24c0 <printf@plt>
    3907:	0f b6 05 56 66 10 00 	movzx  eax,BYTE PTR [rip+0x106656]        # 109f64 <packet_print>
    390e:	84 c0                	test   al,al
    3910:	74 1a                	je     392c <ipv4pktmgr+0x2b9>
    3912:	48 8d 35 aa 89 00 00 	lea    rsi,[rip+0x89aa]        # c2c3 <_IO_stdin_used+0x2c3>
    3919:	48 8d 3d a8 89 00 00 	lea    rdi,[rip+0x89a8]        # c2c8 <_IO_stdin_used+0x2c8>
    3920:	b8 00 00 00 00       	mov    eax,0x0
    3925:	e8 96 eb ff ff       	call   24c0 <printf@plt>
    392a:	eb 29                	jmp    3955 <ipv4pktmgr+0x2e2>
    392c:	48 8d 95 e0 fb ff ff 	lea    rdx,[rbp-0x420]
    3933:	48 8d 85 d0 fb ff ff 	lea    rax,[rbp-0x430]
    393a:	48 8d 0d 82 89 00 00 	lea    rcx,[rip+0x8982]        # c2c3 <_IO_stdin_used+0x2c3>
    3941:	48 89 c6             	mov    rsi,rax
    3944:	48 8d 3d 80 89 00 00 	lea    rdi,[rip+0x8980]        # c2cb <_IO_stdin_used+0x2cb>
    394b:	b8 00 00 00 00       	mov    eax,0x0
    3950:	e8 6b eb ff ff       	call   24c0 <printf@plt>
    3955:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    395c:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3960:	0f b6 c0             	movzx  eax,al
    3963:	83 f8 11             	cmp    eax,0x11
    3966:	0f 84 b8 00 00 00    	je     3a24 <ipv4pktmgr+0x3b1>
    396c:	83 f8 11             	cmp    eax,0x11
    396f:	0f 8f db 00 00 00    	jg     3a50 <ipv4pktmgr+0x3dd>
    3975:	83 f8 06             	cmp    eax,0x6
    3978:	74 7e                	je     39f8 <ipv4pktmgr+0x385>
    397a:	83 f8 06             	cmp    eax,0x6
    397d:	0f 8f cd 00 00 00    	jg     3a50 <ipv4pktmgr+0x3dd>
    3983:	83 f8 01             	cmp    eax,0x1
    3986:	74 0a                	je     3992 <ipv4pktmgr+0x31f>
    3988:	83 f8 02             	cmp    eax,0x2
    398b:	74 2d                	je     39ba <ipv4pktmgr+0x347>
    398d:	e9 be 00 00 00       	jmp    3a50 <ipv4pktmgr+0x3dd>
    3992:	c7 85 7c fb ff ff 80 	mov    DWORD PTR [rbp-0x484],0x80
    3999:	00 00 00 
    399c:	48 8d 95 50 fb ff ff 	lea    rdx,[rbp-0x4b0]
    39a3:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39aa:	48 89 d6             	mov    rsi,rdx
    39ad:	48 89 c7             	mov    rdi,rax
    39b0:	e8 40 02 00 00       	call   3bf5 <ip4_icmp_decode>
    39b5:	e9 c7 00 00 00       	jmp    3a81 <ipv4pktmgr+0x40e>
    39ba:	c7 85 7c fb ff ff ff 	mov    DWORD PTR [rbp-0x484],0xffffffff
    39c1:	ff ff ff 
    39c4:	8b 05 76 d6 00 00    	mov    eax,DWORD PTR [rip+0xd676]        # 11040 <total_conversations>
    39ca:	83 e8 01             	sub    eax,0x1
    39cd:	89 05 6d d6 00 00    	mov    DWORD PTR [rip+0xd66d],eax        # 11040 <total_conversations>
    39d3:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    39da:	48 8b 8d 58 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x4a8]
    39e1:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    39e8:	48 89 ce             	mov    rsi,rcx
    39eb:	48 89 c7             	mov    rdi,rax
    39ee:	e8 57 14 00 00       	call   4e4a <ip4_igmp_decode>
    39f3:	e9 89 00 00 00       	jmp    3a81 <ipv4pktmgr+0x40e>
    39f8:	c7 85 7c fb ff ff 7e 	mov    DWORD PTR [rbp-0x484],0x7e
    39ff:	00 00 00 
    3a02:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    3a09:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    3a10:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a17:	48 89 ce             	mov    rsi,rcx
    3a1a:	48 89 c7             	mov    rdi,rax
    3a1d:	e8 17 0a 00 00       	call   4439 <ip4_tcp_decode>
    3a22:	eb 5d                	jmp    3a81 <ipv4pktmgr+0x40e>
    3a24:	c7 85 7c fb ff ff 7f 	mov    DWORD PTR [rbp-0x484],0x7f
    3a2b:	00 00 00 
    3a2e:	48 8b 95 20 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4e0]
    3a35:	48 8d 8d 50 fb ff ff 	lea    rcx,[rbp-0x4b0]
    3a3c:	48 8b 85 28 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4d8]
    3a43:	48 89 ce             	mov    rsi,rcx
    3a46:	48 89 c7             	mov    rdi,rax
    3a49:	e8 a7 12 00 00       	call   4cf5 <ip4_udp_decode>
    3a4e:	eb 31                	jmp    3a81 <ipv4pktmgr+0x40e>
    3a50:	48 8b 85 48 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4b8]
    3a57:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
    3a5b:	0f b6 c8             	movzx  ecx,al
    3a5e:	48 8b 95 60 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x4a0]
    3a65:	48 8b 85 58 fb ff ff 	mov    rax,QWORD PTR [rbp-0x4a8]
    3a6c:	48 89 c6             	mov    rsi,rax
    3a6f:	48 8d 3d 62 88 00 00 	lea    rdi,[rip+0x8862]        # c2d8 <_IO_stdin_used+0x2d8>
    3a76:	b8 00 00 00 00       	mov    eax,0x0
    3a7b:	e8 40 ea ff ff       	call   24c0 <printf@plt>
    3a80:	90                   	nop
    3a81:	90                   	nop
    3a82:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3a86:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3a8d:	00 00 
    3a8f:	74 05                	je     3a96 <ipv4pktmgr+0x423>
    3a91:	e8 1a ed ff ff       	call   27b0 <__stack_chk_fail@plt>
    3a96:	c9                   	leave  
    3a97:	c3                   	ret    

0000000000003a98 <ip6_icmp_decode>:
    3a98:	f3 0f 1e fa          	endbr64 
    3a9c:	55                   	push   rbp
    3a9d:	48 89 e5             	mov    rbp,rsp
    3aa0:	48 83 c4 80          	add    rsp,0xffffffffffffff80
    3aa4:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
    3aa8:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
    3aac:	48 89 55 88          	mov    QWORD PTR [rbp-0x78],rdx
    3ab0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3ab7:	00 00 
    3ab9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3abd:	31 c0                	xor    eax,eax
    3abf:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    3ac3:	48 83 c0 36          	add    rax,0x36
    3ac7:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    3acb:	0f b6 05 92 64 10 00 	movzx  eax,BYTE PTR [rip+0x106492]        # 109f64 <packet_print>
    3ad2:	84 c0                	test   al,al
    3ad4:	0f 84 04 01 00 00    	je     3bde <ip6_icmp_decode+0x146>
    3ada:	48 8d 35 1f 88 00 00 	lea    rsi,[rip+0x881f]        # c300 <_IO_stdin_used+0x300>
    3ae1:	48 8d 3d 1e 88 00 00 	lea    rdi,[rip+0x881e]        # c306 <_IO_stdin_used+0x306>
    3ae8:	b8 00 00 00 00       	mov    eax,0x0
    3aed:	e8 ce e9 ff ff       	call   24c0 <printf@plt>
    3af2:	48 8b 55 88          	mov    rdx,QWORD PTR [rbp-0x78]
    3af6:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
    3afa:	48 89 c6             	mov    rsi,rax
    3afd:	48 8d 3d 05 88 00 00 	lea    rdi,[rip+0x8805]        # c309 <_IO_stdin_used+0x309>
    3b04:	b8 00 00 00 00       	mov    eax,0x0
    3b09:	e8 b2 e9 ff ff       	call   24c0 <printf@plt>
    3b0e:	48 8d 3d 03 88 00 00 	lea    rdi,[rip+0x8803]        # c318 <_IO_stdin_used+0x318>
    3b15:	b8 00 00 00 00       	mov    eax,0x0
    3b1a:	e8 a1 e9 ff ff       	call   24c0 <printf@plt>
    3b1f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b23:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3b26:	0f b6 c0             	movzx  eax,al
    3b29:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b2e:	74 68                	je     3b98 <ip6_icmp_decode+0x100>
    3b30:	3d 8f 00 00 00       	cmp    eax,0x8f
    3b35:	0f 8f 8b 00 00 00    	jg     3bc6 <ip6_icmp_decode+0x12e>
    3b3b:	3d 87 00 00 00       	cmp    eax,0x87
    3b40:	74 77                	je     3bb9 <ip6_icmp_decode+0x121>
    3b42:	3d 87 00 00 00       	cmp    eax,0x87
    3b47:	7f 7d                	jg     3bc6 <ip6_icmp_decode+0x12e>
    3b49:	3d 82 00 00 00       	cmp    eax,0x82
    3b4e:	74 56                	je     3ba6 <ip6_icmp_decode+0x10e>
    3b50:	3d 85 00 00 00       	cmp    eax,0x85
    3b55:	75 6f                	jne    3bc6 <ip6_icmp_decode+0x12e>
    3b57:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    3b5b:	48 83 c0 0a          	add    rax,0xa
    3b5f:	48 89 c7             	mov    rdi,rax
    3b62:	e8 19 f4 ff ff       	call   2f80 <mac_ntoa>
    3b67:	48 89 c1             	mov    rcx,rax
    3b6a:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b6e:	ba 40 00 00 00       	mov    edx,0x40
    3b73:	48 89 ce             	mov    rsi,rcx
    3b76:	48 89 c7             	mov    rdi,rax
    3b79:	e8 c2 ec ff ff       	call   2840 <strncpy@plt>
    3b7e:	48 8d 45 b0          	lea    rax,[rbp-0x50]
    3b82:	48 89 c6             	mov    rsi,rax
    3b85:	48 8d 3d 95 87 00 00 	lea    rdi,[rip+0x8795]        # c321 <_IO_stdin_used+0x321>
    3b8c:	b8 00 00 00 00       	mov    eax,0x0
    3b91:	e8 2a e9 ff ff       	call   24c0 <printf@plt>
    3b96:	eb 2e                	jmp    3bc6 <ip6_icmp_decode+0x12e>
    3b98:	48 8d 3d a1 87 00 00 	lea    rdi,[rip+0x87a1]        # c340 <_IO_stdin_used+0x340>
    3b9f:	e8 7c e9 ff ff       	call   2520 <puts@plt>
    3ba4:	eb 20                	jmp    3bc6 <ip6_icmp_decode+0x12e>
    3ba6:	48 8d 3d b8 87 00 00 	lea    rdi,[rip+0x87b8]        # c365 <_IO_stdin_used+0x365>
    3bad:	b8 00 00 00 00       	mov    eax,0x0
    3bb2:	e8 09 e9 ff ff       	call   24c0 <printf@plt>
    3bb7:	eb 0d                	jmp    3bc6 <ip6_icmp_decode+0x12e>
    3bb9:	48 8d 3d bf 87 00 00 	lea    rdi,[rip+0x87bf]        # c37f <_IO_stdin_used+0x37f>
    3bc0:	e8 5b e9 ff ff       	call   2520 <puts@plt>
    3bc5:	90                   	nop
    3bc6:	48 8d 35 c8 87 00 00 	lea    rsi,[rip+0x87c8]        # c395 <_IO_stdin_used+0x395>
    3bcd:	48 8d 3d 32 87 00 00 	lea    rdi,[rip+0x8732]        # c306 <_IO_stdin_used+0x306>
    3bd4:	b8 00 00 00 00       	mov    eax,0x0
    3bd9:	e8 e2 e8 ff ff       	call   24c0 <printf@plt>
    3bde:	90                   	nop
    3bdf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    3be3:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    3bea:	00 00 
    3bec:	74 05                	je     3bf3 <ip6_icmp_decode+0x15b>
    3bee:	e8 bd eb ff ff       	call   27b0 <__stack_chk_fail@plt>
    3bf3:	c9                   	leave  
    3bf4:	c3                   	ret    

0000000000003bf5 <ip4_icmp_decode>:
    3bf5:	f3 0f 1e fa          	endbr64 
    3bf9:	55                   	push   rbp
    3bfa:	48 89 e5             	mov    rbp,rsp
    3bfd:	48 81 ec 20 01 00 00 	sub    rsp,0x120
    3c04:	48 89 bd e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rdi
    3c0b:	48 89 b5 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],rsi
    3c12:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    3c19:	00 00 
    3c1b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    3c1f:	31 c0                	xor    eax,eax
    3c21:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c28:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c2c:	ba 5e 00 00 00       	mov    edx,0x5e
    3c31:	be 01 00 00 00       	mov    esi,0x1
    3c36:	48 89 c7             	mov    rdi,rax
    3c39:	e8 0b 13 00 00       	call   4f49 <add_ip_addr_or_inc_counter>
    3c3e:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c45:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c49:	ba 5e 00 00 00       	mov    edx,0x5e
    3c4e:	be 00 00 00 00       	mov    esi,0x0
    3c53:	48 89 c7             	mov    rdi,rax
    3c56:	e8 ee 12 00 00       	call   4f49 <add_ip_addr_or_inc_counter>
    3c5b:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c62:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3c66:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
    3c6d:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3c74:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    3c78:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
    3c7f:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c86:	48 83 c0 22          	add    rax,0x22
    3c8a:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
    3c91:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    3c98:	48 8d 50 22          	lea    rdx,[rax+0x22]
    3c9c:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ca3:	48 89 10             	mov    QWORD PTR [rax],rdx
    3ca6:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cad:	48 8b 95 18 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xe8]
    3cb4:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    3cb8:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cbf:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3cc2:	89 85 fc fe ff ff    	mov    DWORD PTR [rbp-0x104],eax
    3cc8:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3ccf:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    3cd2:	8d 50 d6             	lea    edx,[rax-0x2a]
    3cd5:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3cdc:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    3cdf:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3ce6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3ce9:	3c 08                	cmp    al,0x8
    3ceb:	0f 85 55 01 00 00    	jne    3e46 <ip4_icmp_decode+0x251>
    3cf1:	8b 05 91 d3 00 00    	mov    eax,DWORD PTR [rip+0xd391]        # 11088 <strict_nmap_host_alive_check>
    3cf7:	83 f8 01             	cmp    eax,0x1
    3cfa:	0f 85 46 01 00 00    	jne    3e46 <ip4_icmp_decode+0x251>
    3d00:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    3d07:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    3d0b:	48 89 c7             	mov    rdi,rax
    3d0e:	e8 a5 3c 00 00       	call   79b8 <member_exists>
    3d13:	89 85 00 ff ff ff    	mov    DWORD PTR [rbp-0x100],eax
    3d19:	83 bd 00 ff ff ff ff 	cmp    DWORD PTR [rbp-0x100],0xffffffff
    3d20:	0f 84 83 00 00 00    	je     3da9 <ip4_icmp_decode+0x1b4>
    3d26:	8b 85 00 ff ff ff    	mov    eax,DWORD PTR [rbp-0x100]
    3d2c:	48 63 d0             	movsxd rdx,eax
    3d2f:	48 89 d0             	mov    rax,rdx
    3d32:	48 c1 e0 02          	shl    rax,0x2
    3d36:	48 01 d0             	add    rax,rdx
    3d39:	48 c1 e0 03          	shl    rax,0x3
    3d3d:	48 01 d0             	add    rax,rdx
    3d40:	48 c1 e0 04          	shl    rax,0x4
    3d44:	48 8d 15 d5 f7 0e 00 	lea    rdx,[rip+0xef7d5]        # f3520 <watchlist>
    3d4b:	48 01 d0             	add    rax,rdx
    3d4e:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    3d55:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d5c:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d5f:	85 c0                	test   eax,eax
    3d61:	0f 85 a8 02 00 00    	jne    400f <ip4_icmp_decode+0x41a>
    3d67:	bf 00 00 00 00       	mov    edi,0x0
    3d6c:	e8 7f eb ff ff       	call   28f0 <time@plt>
    3d71:	48 89 c2             	mov    rdx,rax
    3d74:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d7b:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3d7f:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d86:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3d8d:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3d94:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3d97:	8d 50 01             	lea    edx,[rax+0x1]
    3d9a:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    3da1:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3da4:	e9 66 02 00 00       	jmp    400f <ip4_icmp_decode+0x41a>
    3da9:	8b 05 69 d2 00 00    	mov    eax,DWORD PTR [rip+0xd269]        # 11018 <watchlist_num>
    3daf:	83 c0 01             	add    eax,0x1
    3db2:	89 05 60 d2 00 00    	mov    DWORD PTR [rip+0xd260],eax        # 11018 <watchlist_num>
    3db8:	8b 05 5a d2 00 00    	mov    eax,DWORD PTR [rip+0xd25a]        # 11018 <watchlist_num>
    3dbe:	48 63 d0             	movsxd rdx,eax
    3dc1:	48 89 d0             	mov    rax,rdx
    3dc4:	48 c1 e0 02          	shl    rax,0x2
    3dc8:	48 01 d0             	add    rax,rdx
    3dcb:	48 c1 e0 03          	shl    rax,0x3
    3dcf:	48 01 d0             	add    rax,rdx
    3dd2:	48 c1 e0 04          	shl    rax,0x4
    3dd6:	48 8d 15 43 f7 0e 00 	lea    rdx,[rip+0xef743]        # f3520 <watchlist>
    3ddd:	48 01 d0             	add    rax,rdx
    3de0:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    3de7:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3dee:	48 8d 50 08          	lea    rdx,[rax+0x8]
    3df2:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3df9:	48 89 c6             	mov    rsi,rax
    3dfc:	48 89 d7             	mov    rdi,rdx
    3dff:	e8 ec e9 ff ff       	call   27f0 <strcpy@plt>
    3e04:	bf 00 00 00 00       	mov    edi,0x0
    3e09:	e8 e2 ea ff ff       	call   28f0 <time@plt>
    3e0e:	48 89 c2             	mov    rdx,rax
    3e11:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e18:	48 89 50 28          	mov    QWORD PTR [rax+0x28],rdx
    3e1c:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e23:	c7 40 30 01 00 00 00 	mov    DWORD PTR [rax+0x30],0x1
    3e2a:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e31:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3e34:	8d 50 01             	lea    edx,[rax+0x1]
    3e37:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    3e3e:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    3e41:	e9 c9 01 00 00       	jmp    400f <ip4_icmp_decode+0x41a>
    3e46:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    3e4d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    3e50:	3c 0d                	cmp    al,0xd
    3e52:	0f 85 ba 01 00 00    	jne    4012 <ip4_icmp_decode+0x41d>
    3e58:	8b 05 26 d2 00 00    	mov    eax,DWORD PTR [rip+0xd226]        # 11084 <strict_icmp_timestamp_req>
    3e5e:	83 f8 01             	cmp    eax,0x1
    3e61:	74 0f                	je     3e72 <ip4_icmp_decode+0x27d>
    3e63:	8b 05 1f d2 00 00    	mov    eax,DWORD PTR [rip+0xd21f]        # 11088 <strict_nmap_host_alive_check>
    3e69:	83 f8 01             	cmp    eax,0x1
    3e6c:	0f 85 a0 01 00 00    	jne    4012 <ip4_icmp_decode+0x41d>
    3e72:	8b 05 0c d2 00 00    	mov    eax,DWORD PTR [rip+0xd20c]        # 11084 <strict_icmp_timestamp_req>
    3e78:	85 c0                	test   eax,eax
    3e7a:	74 22                	je     3e9e <ip4_icmp_decode+0x2a9>
    3e7c:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3e83:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3e8a:	48 89 c6             	mov    rsi,rax
    3e8d:	48 8d 3d 0c 85 00 00 	lea    rdi,[rip+0x850c]        # c3a0 <_IO_stdin_used+0x3a0>
    3e94:	b8 00 00 00 00       	mov    eax,0x0
    3e99:	e8 22 e6 ff ff       	call   24c0 <printf@plt>
    3e9e:	8b 05 e4 d1 00 00    	mov    eax,DWORD PTR [rip+0xd1e4]        # 11088 <strict_nmap_host_alive_check>
    3ea4:	85 c0                	test   eax,eax
    3ea6:	0f 84 66 01 00 00    	je     4012 <ip4_icmp_decode+0x41d>
    3eac:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3eb3:	48 89 c7             	mov    rdi,rax
    3eb6:	e8 fd 3a 00 00       	call   79b8 <member_exists>
    3ebb:	89 85 04 ff ff ff    	mov    DWORD PTR [rbp-0xfc],eax
    3ec1:	83 bd 04 ff ff ff ff 	cmp    DWORD PTR [rbp-0xfc],0xffffffff
    3ec8:	0f 84 44 01 00 00    	je     4012 <ip4_icmp_decode+0x41d>
    3ece:	8b 85 04 ff ff ff    	mov    eax,DWORD PTR [rbp-0xfc]
    3ed4:	48 63 d0             	movsxd rdx,eax
    3ed7:	48 89 d0             	mov    rax,rdx
    3eda:	48 c1 e0 02          	shl    rax,0x2
    3ede:	48 01 d0             	add    rax,rdx
    3ee1:	48 c1 e0 03          	shl    rax,0x3
    3ee5:	48 01 d0             	add    rax,rdx
    3ee8:	48 c1 e0 04          	shl    rax,0x4
    3eec:	48 8d 15 2d f6 0e 00 	lea    rdx,[rip+0xef62d]        # f3520 <watchlist>
    3ef3:	48 01 d0             	add    rax,rdx
    3ef6:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
    3efd:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f04:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    3f07:	83 f8 03             	cmp    eax,0x3
    3f0a:	0f 85 05 01 00 00    	jne    4015 <ip4_icmp_decode+0x420>
    3f10:	bf 00 00 00 00       	mov    edi,0x0
    3f15:	e8 d6 e9 ff ff       	call   28f0 <time@plt>
    3f1a:	48 89 c2             	mov    rdx,rax
    3f1d:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f24:	48 89 50 48          	mov    QWORD PTR [rax+0x48],rdx
    3f28:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f2f:	48 8b 50 48          	mov    rdx,QWORD PTR [rax+0x48]
    3f33:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3f3a:	48 8b 48 28          	mov    rcx,QWORD PTR [rax+0x28]
    3f3e:	48 89 d0             	mov    rax,rdx
    3f41:	48 29 c8             	sub    rax,rcx
    3f44:	48 3d e2 b4 04 00    	cmp    rax,0x4b4e2
    3f4a:	0f 87 c2 00 00 00    	ja     4012 <ip4_icmp_decode+0x41d>
    3f50:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    3f57:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    3f5e:	48 89 c6             	mov    rsi,rax
    3f61:	48 8d 3d 80 84 00 00 	lea    rdi,[rip+0x8480]        # c3e8 <_IO_stdin_used+0x3e8>
    3f68:	b8 00 00 00 00       	mov    eax,0x0
    3f6d:	e8 4e e5 ff ff       	call   24c0 <printf@plt>
    3f72:	48 8b 05 b7 d0 00 00 	mov    rax,QWORD PTR [rip+0xd0b7]        # 11030 <def_log_file>
    3f79:	48 8d 35 d2 84 00 00 	lea    rsi,[rip+0x84d2]        # c452 <_IO_stdin_used+0x452>
    3f80:	48 89 c7             	mov    rdi,rax
    3f83:	e8 28 e6 ff ff       	call   25b0 <fopen@plt>
    3f88:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    3f8f:	b8 00 00 00 00       	mov    eax,0x0
    3f94:	e8 30 f4 ff ff       	call   33c9 <get_formated_time>
    3f99:	48 89 c6             	mov    rsi,rax
    3f9c:	48 8b 8d 10 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xf0]
    3fa3:	48 8b 95 08 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf8]
    3faa:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3fb1:	49 89 f0             	mov    r8,rsi
    3fb4:	48 8d 35 9d 84 00 00 	lea    rsi,[rip+0x849d]        # c458 <_IO_stdin_used+0x458>
    3fbb:	48 89 c7             	mov    rdi,rax
    3fbe:	b8 00 00 00 00       	mov    eax,0x0
    3fc3:	e8 b8 e6 ff ff       	call   2680 <sprintf@plt>
    3fc8:	48 8b 95 38 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xc8]
    3fcf:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
    3fd6:	48 89 d6             	mov    rsi,rdx
    3fd9:	48 89 c7             	mov    rdi,rax
    3fdc:	e8 1f e7 ff ff       	call   2700 <fputs@plt>
    3fe1:	48 8b 85 38 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc8]
    3fe8:	48 89 c7             	mov    rdi,rax
    3feb:	e8 40 e8 ff ff       	call   2830 <fclose@plt>
    3ff0:	48 8b 85 30 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd0]
    3ff7:	48 83 c0 28          	add    rax,0x28
    3ffb:	ba 28 00 00 00       	mov    edx,0x28
    4000:	be 00 00 00 00       	mov    esi,0x0
    4005:	48 89 c7             	mov    rdi,rax
    4008:	e8 c3 e4 ff ff       	call   24d0 <memset@plt>
    400d:	eb 07                	jmp    4016 <ip4_icmp_decode+0x421>
    400f:	90                   	nop
    4010:	eb 04                	jmp    4016 <ip4_icmp_decode+0x421>
    4012:	90                   	nop
    4013:	eb 01                	jmp    4016 <ip4_icmp_decode+0x421>
    4015:	90                   	nop
    4016:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    401d:	c7 40 2c 80 00 00 00 	mov    DWORD PTR [rax+0x2c],0x80
    4024:	48 8b 85 e0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x120]
    402b:	48 89 c7             	mov    rdi,rax
    402e:	e8 50 24 00 00       	call   6483 <rulemgr>
    4033:	0f b6 05 2a 5f 10 00 	movzx  eax,BYTE PTR [rip+0x105f2a]        # 109f64 <packet_print>
    403a:	84 c0                	test   al,al
    403c:	0f 84 e0 03 00 00    	je     4422 <ip4_icmp_decode+0x82d>
    4042:	48 8d 35 b7 82 00 00 	lea    rsi,[rip+0x82b7]        # c300 <_IO_stdin_used+0x300>
    4049:	48 8d 3d b6 82 00 00 	lea    rdi,[rip+0x82b6]        # c306 <_IO_stdin_used+0x306>
    4050:	b8 00 00 00 00       	mov    eax,0x0
    4055:	e8 66 e4 ff ff       	call   24c0 <printf@plt>
    405a:	48 8b 95 10 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xf0]
    4061:	48 8b 85 08 ff ff ff 	mov    rax,QWORD PTR [rbp-0xf8]
    4068:	48 89 c6             	mov    rsi,rax
    406b:	48 8d 3d 56 84 00 00 	lea    rdi,[rip+0x8456]        # c4c8 <_IO_stdin_used+0x4c8>
    4072:	b8 00 00 00 00       	mov    eax,0x0
    4077:	e8 44 e4 ff ff       	call   24c0 <printf@plt>
    407c:	48 8d 3d 54 84 00 00 	lea    rdi,[rip+0x8454]        # c4d7 <_IO_stdin_used+0x4d7>
    4083:	b8 00 00 00 00       	mov    eax,0x0
    4088:	e8 33 e4 ff ff       	call   24c0 <printf@plt>
    408d:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4094:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4097:	0f b6 c0             	movzx  eax,al
    409a:	83 f8 0e             	cmp    eax,0xe
    409d:	0f 87 46 03 00 00    	ja     43e9 <ip4_icmp_decode+0x7f4>
    40a3:	89 c0                	mov    eax,eax
    40a5:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    40ac:	00 
    40ad:	48 8d 05 2c 88 00 00 	lea    rax,[rip+0x882c]        # c8e0 <_IO_stdin_used+0x8e0>
    40b4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    40b7:	48 98                	cdqe   
    40b9:	48 8d 15 20 88 00 00 	lea    rdx,[rip+0x8820]        # c8e0 <_IO_stdin_used+0x8e0>
    40c0:	48 01 d0             	add    rax,rdx
    40c3:	3e ff e0             	notrack jmp rax
    40c6:	48 8d 3d 11 84 00 00 	lea    rdi,[rip+0x8411]        # c4de <_IO_stdin_used+0x4de>
    40cd:	e8 4e e4 ff ff       	call   2520 <puts@plt>
    40d2:	e9 33 03 00 00       	jmp    440a <ip4_icmp_decode+0x815>
    40d7:	48 8d 3d 0c 84 00 00 	lea    rdi,[rip+0x840c]        # c4ea <_IO_stdin_used+0x4ea>
    40de:	b8 00 00 00 00       	mov    eax,0x0
    40e3:	e8 d8 e3 ff ff       	call   24c0 <printf@plt>
    40e8:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    40ef:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    40f3:	0f b6 c0             	movzx  eax,al
    40f6:	83 f8 0f             	cmp    eax,0xf
    40f9:	0f 87 1e 01 00 00    	ja     421d <ip4_icmp_decode+0x628>
    40ff:	89 c0                	mov    eax,eax
    4101:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    4108:	00 
    4109:	48 8d 05 0c 88 00 00 	lea    rax,[rip+0x880c]        # c91c <_IO_stdin_used+0x91c>
    4110:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    4113:	48 98                	cdqe   
    4115:	48 8d 15 00 88 00 00 	lea    rdx,[rip+0x8800]        # c91c <_IO_stdin_used+0x91c>
    411c:	48 01 d0             	add    rax,rdx
    411f:	3e ff e0             	notrack jmp rax
    4122:	48 8d 3d db 83 00 00 	lea    rdi,[rip+0x83db]        # c504 <_IO_stdin_used+0x504>
    4129:	e8 f2 e3 ff ff       	call   2520 <puts@plt>
    412e:	e9 0c 01 00 00       	jmp    423f <ip4_icmp_decode+0x64a>
    4133:	48 8d 3d e1 83 00 00 	lea    rdi,[rip+0x83e1]        # c51b <_IO_stdin_used+0x51b>
    413a:	e8 e1 e3 ff ff       	call   2520 <puts@plt>
    413f:	e9 fb 00 00 00       	jmp    423f <ip4_icmp_decode+0x64a>
    4144:	48 8d 3d e4 83 00 00 	lea    rdi,[rip+0x83e4]        # c52f <_IO_stdin_used+0x52f>
    414b:	e8 d0 e3 ff ff       	call   2520 <puts@plt>
    4150:	e9 ea 00 00 00       	jmp    423f <ip4_icmp_decode+0x64a>
    4155:	48 8d 3d eb 83 00 00 	lea    rdi,[rip+0x83eb]        # c547 <_IO_stdin_used+0x547>
    415c:	e8 bf e3 ff ff       	call   2520 <puts@plt>
    4161:	e9 d9 00 00 00       	jmp    423f <ip4_icmp_decode+0x64a>
    4166:	48 8d 3d ee 83 00 00 	lea    rdi,[rip+0x83ee]        # c55b <_IO_stdin_used+0x55b>
    416d:	e8 ae e3 ff ff       	call   2520 <puts@plt>
    4172:	e9 c8 00 00 00       	jmp    423f <ip4_icmp_decode+0x64a>
    4177:	48 8d 3d f5 83 00 00 	lea    rdi,[rip+0x83f5]        # c573 <_IO_stdin_used+0x573>
    417e:	e8 9d e3 ff ff       	call   2520 <puts@plt>
    4183:	e9 b7 00 00 00       	jmp    423f <ip4_icmp_decode+0x64a>
    4188:	48 8d 3d 01 84 00 00 	lea    rdi,[rip+0x8401]        # c590 <_IO_stdin_used+0x590>
    418f:	e8 8c e3 ff ff       	call   2520 <puts@plt>
    4194:	e9 a6 00 00 00       	jmp    423f <ip4_icmp_decode+0x64a>
    4199:	48 8d 3d 18 84 00 00 	lea    rdi,[rip+0x8418]        # c5b8 <_IO_stdin_used+0x5b8>
    41a0:	e8 7b e3 ff ff       	call   2520 <puts@plt>
    41a5:	e9 95 00 00 00       	jmp    423f <ip4_icmp_decode+0x64a>
    41aa:	48 8d 3d 27 84 00 00 	lea    rdi,[rip+0x8427]        # c5d8 <_IO_stdin_used+0x5d8>
    41b1:	e8 6a e3 ff ff       	call   2520 <puts@plt>
    41b6:	e9 84 00 00 00       	jmp    423f <ip4_icmp_decode+0x64a>
    41bb:	48 8d 3d 2e 84 00 00 	lea    rdi,[rip+0x842e]        # c5f0 <_IO_stdin_used+0x5f0>
    41c2:	e8 59 e3 ff ff       	call   2520 <puts@plt>
    41c7:	eb 76                	jmp    423f <ip4_icmp_decode+0x64a>
    41c9:	48 8d 3d 48 84 00 00 	lea    rdi,[rip+0x8448]        # c618 <_IO_stdin_used+0x618>
    41d0:	e8 4b e3 ff ff       	call   2520 <puts@plt>
    41d5:	eb 68                	jmp    423f <ip4_icmp_decode+0x64a>
    41d7:	48 8d 3d 62 84 00 00 	lea    rdi,[rip+0x8462]        # c640 <_IO_stdin_used+0x640>
    41de:	e8 3d e3 ff ff       	call   2520 <puts@plt>
    41e3:	eb 5a                	jmp    423f <ip4_icmp_decode+0x64a>
    41e5:	48 8d 3d 73 84 00 00 	lea    rdi,[rip+0x8473]        # c65f <_IO_stdin_used+0x65f>
    41ec:	e8 2f e3 ff ff       	call   2520 <puts@plt>
    41f1:	eb 4c                	jmp    423f <ip4_icmp_decode+0x64a>
    41f3:	48 8d 3d 86 84 00 00 	lea    rdi,[rip+0x8486]        # c680 <_IO_stdin_used+0x680>
    41fa:	e8 21 e3 ff ff       	call   2520 <puts@plt>
    41ff:	eb 3e                	jmp    423f <ip4_icmp_decode+0x64a>
    4201:	48 8d 3d a5 84 00 00 	lea    rdi,[rip+0x84a5]        # c6ad <_IO_stdin_used+0x6ad>
    4208:	e8 13 e3 ff ff       	call   2520 <puts@plt>
    420d:	eb 30                	jmp    423f <ip4_icmp_decode+0x64a>
    420f:	48 8d 3d ba 84 00 00 	lea    rdi,[rip+0x84ba]        # c6d0 <_IO_stdin_used+0x6d0>
    4216:	e8 05 e3 ff ff       	call   2520 <puts@plt>
    421b:	eb 22                	jmp    423f <ip4_icmp_decode+0x64a>
    421d:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4224:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4228:	0f b6 c0             	movzx  eax,al
    422b:	89 c6                	mov    esi,eax
    422d:	48 8d 3d bb 84 00 00 	lea    rdi,[rip+0x84bb]        # c6ef <_IO_stdin_used+0x6ef>
    4234:	b8 00 00 00 00       	mov    eax,0x0
    4239:	e8 82 e2 ff ff       	call   24c0 <printf@plt>
    423e:	90                   	nop
    423f:	e9 c6 01 00 00       	jmp    440a <ip4_icmp_decode+0x815>
    4244:	48 8d 3d bd 84 00 00 	lea    rdi,[rip+0x84bd]        # c708 <_IO_stdin_used+0x708>
    424b:	e8 d0 e2 ff ff       	call   2520 <puts@plt>
    4250:	e9 b5 01 00 00       	jmp    440a <ip4_icmp_decode+0x815>
    4255:	48 8d 3d cb 84 00 00 	lea    rdi,[rip+0x84cb]        # c727 <_IO_stdin_used+0x727>
    425c:	b8 00 00 00 00       	mov    eax,0x0
    4261:	e8 5a e2 ff ff       	call   24c0 <printf@plt>
    4266:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    426d:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4271:	0f b6 c0             	movzx  eax,al
    4274:	83 f8 03             	cmp    eax,0x3
    4277:	74 44                	je     42bd <ip4_icmp_decode+0x6c8>
    4279:	83 f8 03             	cmp    eax,0x3
    427c:	7f 4d                	jg     42cb <ip4_icmp_decode+0x6d6>
    427e:	83 f8 02             	cmp    eax,0x2
    4281:	74 2c                	je     42af <ip4_icmp_decode+0x6ba>
    4283:	83 f8 02             	cmp    eax,0x2
    4286:	7f 43                	jg     42cb <ip4_icmp_decode+0x6d6>
    4288:	85 c0                	test   eax,eax
    428a:	74 07                	je     4293 <ip4_icmp_decode+0x69e>
    428c:	83 f8 01             	cmp    eax,0x1
    428f:	74 10                	je     42a1 <ip4_icmp_decode+0x6ac>
    4291:	eb 38                	jmp    42cb <ip4_icmp_decode+0x6d6>
    4293:	48 8d 3d 99 84 00 00 	lea    rdi,[rip+0x8499]        # c733 <_IO_stdin_used+0x733>
    429a:	e8 81 e2 ff ff       	call   2520 <puts@plt>
    429f:	eb 4c                	jmp    42ed <ip4_icmp_decode+0x6f8>
    42a1:	48 8d 3d a3 84 00 00 	lea    rdi,[rip+0x84a3]        # c74b <_IO_stdin_used+0x74b>
    42a8:	e8 73 e2 ff ff       	call   2520 <puts@plt>
    42ad:	eb 3e                	jmp    42ed <ip4_icmp_decode+0x6f8>
    42af:	48 8d 3d aa 84 00 00 	lea    rdi,[rip+0x84aa]        # c760 <_IO_stdin_used+0x760>
    42b6:	e8 65 e2 ff ff       	call   2520 <puts@plt>
    42bb:	eb 30                	jmp    42ed <ip4_icmp_decode+0x6f8>
    42bd:	48 8d 3d bc 84 00 00 	lea    rdi,[rip+0x84bc]        # c780 <_IO_stdin_used+0x780>
    42c4:	e8 57 e2 ff ff       	call   2520 <puts@plt>
    42c9:	eb 22                	jmp    42ed <ip4_icmp_decode+0x6f8>
    42cb:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    42d2:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    42d6:	0f b6 c0             	movzx  eax,al
    42d9:	89 c6                	mov    esi,eax
    42db:	48 8d 3d 0d 84 00 00 	lea    rdi,[rip+0x840d]        # c6ef <_IO_stdin_used+0x6ef>
    42e2:	b8 00 00 00 00       	mov    eax,0x0
    42e7:	e8 d4 e1 ff ff       	call   24c0 <printf@plt>
    42ec:	90                   	nop
    42ed:	e9 18 01 00 00       	jmp    440a <ip4_icmp_decode+0x815>
    42f2:	48 8d 3d a4 84 00 00 	lea    rdi,[rip+0x84a4]        # c79d <_IO_stdin_used+0x79d>
    42f9:	e8 22 e2 ff ff       	call   2520 <puts@plt>
    42fe:	e9 07 01 00 00       	jmp    440a <ip4_icmp_decode+0x815>
    4303:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    430a:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    430e:	84 c0                	test   al,al
    4310:	75 16                	jne    4328 <ip4_icmp_decode+0x733>
    4312:	48 8d 3d 97 84 00 00 	lea    rdi,[rip+0x8497]        # c7b0 <_IO_stdin_used+0x7b0>
    4319:	b8 00 00 00 00       	mov    eax,0x0
    431e:	e8 9d e1 ff ff       	call   24c0 <printf@plt>
    4323:	e9 e2 00 00 00       	jmp    440a <ip4_icmp_decode+0x815>
    4328:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    432f:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4333:	0f b6 c0             	movzx  eax,al
    4336:	89 c6                	mov    esi,eax
    4338:	48 8d 3d b1 84 00 00 	lea    rdi,[rip+0x84b1]        # c7f0 <_IO_stdin_used+0x7f0>
    433f:	b8 00 00 00 00       	mov    eax,0x0
    4344:	e8 77 e1 ff ff       	call   24c0 <printf@plt>
    4349:	e9 bc 00 00 00       	jmp    440a <ip4_icmp_decode+0x815>
    434e:	48 8d 3d c8 84 00 00 	lea    rdi,[rip+0x84c8]        # c81d <_IO_stdin_used+0x81d>
    4355:	e8 c6 e1 ff ff       	call   2520 <puts@plt>
    435a:	e9 ab 00 00 00       	jmp    440a <ip4_icmp_decode+0x815>
    435f:	48 8d 3d ce 84 00 00 	lea    rdi,[rip+0x84ce]        # c834 <_IO_stdin_used+0x834>
    4366:	b8 00 00 00 00       	mov    eax,0x0
    436b:	e8 50 e1 ff ff       	call   24c0 <printf@plt>
    4370:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4377:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    437b:	84 c0                	test   al,al
    437d:	75 0e                	jne    438d <ip4_icmp_decode+0x798>
    437f:	48 8d 3d c5 84 00 00 	lea    rdi,[rip+0x84c5]        # c84b <_IO_stdin_used+0x84b>
    4386:	e8 95 e1 ff ff       	call   2520 <puts@plt>
    438b:	eb 7d                	jmp    440a <ip4_icmp_decode+0x815>
    438d:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    4394:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    4398:	3c 01                	cmp    al,0x1
    439a:	75 0e                	jne    43aa <ip4_icmp_decode+0x7b5>
    439c:	48 8d 3d c5 84 00 00 	lea    rdi,[rip+0x84c5]        # c868 <_IO_stdin_used+0x868>
    43a3:	e8 78 e1 ff ff       	call   2520 <puts@plt>
    43a8:	eb 60                	jmp    440a <ip4_icmp_decode+0x815>
    43aa:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43b1:	0f b6 40 01          	movzx  eax,BYTE PTR [rax+0x1]
    43b5:	0f b6 c0             	movzx  eax,al
    43b8:	89 c6                	mov    esi,eax
    43ba:	48 8d 3d ce 84 00 00 	lea    rdi,[rip+0x84ce]        # c88f <_IO_stdin_used+0x88f>
    43c1:	b8 00 00 00 00       	mov    eax,0x0
    43c6:	e8 f5 e0 ff ff       	call   24c0 <printf@plt>
    43cb:	eb 3d                	jmp    440a <ip4_icmp_decode+0x815>
    43cd:	48 8d 3d d1 84 00 00 	lea    rdi,[rip+0x84d1]        # c8a5 <_IO_stdin_used+0x8a5>
    43d4:	e8 47 e1 ff ff       	call   2520 <puts@plt>
    43d9:	eb 2f                	jmp    440a <ip4_icmp_decode+0x815>
    43db:	48 8d 3d d6 84 00 00 	lea    rdi,[rip+0x84d6]        # c8b8 <_IO_stdin_used+0x8b8>
    43e2:	e8 39 e1 ff ff       	call   2520 <puts@plt>
    43e7:	eb 21                	jmp    440a <ip4_icmp_decode+0x815>
    43e9:	48 8b 85 18 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe8]
    43f0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    43f3:	0f b6 c0             	movzx  eax,al
    43f6:	89 c6                	mov    esi,eax
    43f8:	48 8d 3d ca 84 00 00 	lea    rdi,[rip+0x84ca]        # c8c9 <_IO_stdin_used+0x8c9>
    43ff:	b8 00 00 00 00       	mov    eax,0x0
    4404:	e8 b7 e0 ff ff       	call   24c0 <printf@plt>
    4409:	90                   	nop
    440a:	48 8d 35 84 7f 00 00 	lea    rsi,[rip+0x7f84]        # c395 <_IO_stdin_used+0x395>
    4411:	48 8d 3d ee 7e 00 00 	lea    rdi,[rip+0x7eee]        # c306 <_IO_stdin_used+0x306>
    4418:	b8 00 00 00 00       	mov    eax,0x0
    441d:	e8 9e e0 ff ff       	call   24c0 <printf@plt>
    4422:	90                   	nop
    4423:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4427:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    442e:	00 00 
    4430:	74 05                	je     4437 <ip4_icmp_decode+0x842>
    4432:	e8 79 e3 ff ff       	call   27b0 <__stack_chk_fail@plt>
    4437:	c9                   	leave  
    4438:	c3                   	ret    

0000000000004439 <ip4_tcp_decode>:
    4439:	f3 0f 1e fa          	endbr64 
    443d:	55                   	push   rbp
    443e:	48 89 e5             	mov    rbp,rsp
    4441:	53                   	push   rbx
    4442:	48 81 ec 88 00 00 00 	sub    rsp,0x88
    4449:	48 89 7d 88          	mov    QWORD PTR [rbp-0x78],rdi
    444d:	48 89 75 80          	mov    QWORD PTR [rbp-0x80],rsi
    4451:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
    4458:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    445c:	48 83 c0 22          	add    rax,0x22
    4460:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4464:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4468:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    446c:	c0 e8 04             	shr    al,0x4
    446f:	0f b6 c0             	movzx  eax,al
    4472:	c1 e0 02             	shl    eax,0x2
    4475:	48 98                	cdqe   
    4477:	48 8d 50 22          	lea    rdx,[rax+0x22]
    447b:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    447f:	48 01 c2             	add    rdx,rax
    4482:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4486:	48 89 10             	mov    QWORD PTR [rax],rdx
    4489:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    448d:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    4490:	89 c2                	mov    edx,eax
    4492:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4496:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    449a:	c0 e8 04             	shr    al,0x4
    449d:	0f b6 c0             	movzx  eax,al
    44a0:	c1 e0 02             	shl    eax,0x2
    44a3:	89 c1                	mov    ecx,eax
    44a5:	89 d0                	mov    eax,edx
    44a7:	29 c8                	sub    eax,ecx
    44a9:	83 e8 22             	sub    eax,0x22
    44ac:	89 c2                	mov    edx,eax
    44ae:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44b2:	89 50 30             	mov    DWORD PTR [rax+0x30],edx
    44b5:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44b9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    44bd:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    44c1:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    44c5:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    44c9:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    44cd:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    44d1:	ba 5c 00 00 00       	mov    edx,0x5c
    44d6:	be 01 00 00 00       	mov    esi,0x1
    44db:	48 89 c7             	mov    rdi,rax
    44de:	e8 66 0a 00 00       	call   4f49 <add_ip_addr_or_inc_counter>
    44e3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    44e7:	ba 5c 00 00 00       	mov    edx,0x5c
    44ec:	be 00 00 00 00       	mov    esi,0x0
    44f1:	48 89 c7             	mov    rdi,rax
    44f4:	e8 50 0a 00 00       	call   4f49 <add_ip_addr_or_inc_counter>
    44f9:	c7 45 a4 00 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x0
    4500:	c6 45 9f 00          	mov    BYTE PTR [rbp-0x61],0x0
    4504:	c6 45 a0 00          	mov    BYTE PTR [rbp-0x60],0x0
    4508:	c6 45 a1 00          	mov    BYTE PTR [rbp-0x5f],0x0
    450c:	c6 45 a2 00          	mov    BYTE PTR [rbp-0x5e],0x0
    4510:	c6 45 a3 00          	mov    BYTE PTR [rbp-0x5d],0x0
    4514:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4518:	48 83 c0 68          	add    rax,0x68
    451c:	ba 08 00 00 00       	mov    edx,0x8
    4521:	be 00 00 00 00       	mov    esi,0x0
    4526:	48 89 c7             	mov    rdi,rax
    4529:	e8 a2 df ff ff       	call   24d0 <memset@plt>
    452e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4532:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4536:	0f b7 c0             	movzx  eax,ax
    4539:	89 c7                	mov    edi,eax
    453b:	e8 50 e1 ff ff       	call   2690 <ntohs@plt>
    4540:	0f b7 c0             	movzx  eax,ax
    4543:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    4546:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    454a:	0f b7 00             	movzx  eax,WORD PTR [rax]
    454d:	0f b7 c0             	movzx  eax,ax
    4550:	89 c7                	mov    edi,eax
    4552:	e8 39 e1 ff ff       	call   2690 <ntohs@plt>
    4557:	0f b7 c0             	movzx  eax,ax
    455a:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    455d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4561:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4565:	0f b7 c0             	movzx  eax,ax
    4568:	89 c7                	mov    edi,eax
    456a:	e8 21 e1 ff ff       	call   2690 <ntohs@plt>
    456f:	0f b7 d0             	movzx  edx,ax
    4572:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4576:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4579:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    457d:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    4580:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4583:	0f b6 05 da 59 10 00 	movzx  eax,BYTE PTR [rip+0x1059da]        # 109f64 <packet_print>
    458a:	84 c0                	test   al,al
    458c:	74 4e                	je     45dc <ip4_tcp_decode+0x1a3>
    458e:	48 8d 35 cb 83 00 00 	lea    rsi,[rip+0x83cb]        # c960 <_IO_stdin_used+0x960>
    4595:	48 8d 3d ca 83 00 00 	lea    rdi,[rip+0x83ca]        # c966 <_IO_stdin_used+0x966>
    459c:	b8 00 00 00 00       	mov    eax,0x0
    45a1:	e8 1a df ff ff       	call   24c0 <printf@plt>
    45a6:	8b 75 a8             	mov    esi,DWORD PTR [rbp-0x58]
    45a9:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
    45ad:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    45b0:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    45b4:	41 89 f0             	mov    r8d,esi
    45b7:	48 89 c6             	mov    rsi,rax
    45ba:	48 8d 3d a8 83 00 00 	lea    rdi,[rip+0x83a8]        # c969 <_IO_stdin_used+0x969>
    45c1:	b8 00 00 00 00       	mov    eax,0x0
    45c6:	e8 f5 de ff ff       	call   24c0 <printf@plt>
    45cb:	48 8d 3d ac 83 00 00 	lea    rdi,[rip+0x83ac]        # c97e <_IO_stdin_used+0x97e>
    45d2:	b8 00 00 00 00       	mov    eax,0x0
    45d7:	e8 e4 de ff ff       	call   24c0 <printf@plt>
    45dc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    45e0:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    45e4:	c0 e8 04             	shr    al,0x4
    45e7:	83 e0 01             	and    eax,0x1
    45ea:	0f b6 c0             	movzx  eax,al
    45ed:	89 c7                	mov    edi,eax
    45ef:	e8 9c e0 ff ff       	call   2690 <ntohs@plt>
    45f4:	66 85 c0             	test   ax,ax
    45f7:	74 43                	je     463c <ip4_tcp_decode+0x203>
    45f9:	0f b6 05 64 59 10 00 	movzx  eax,BYTE PTR [rip+0x105964]        # 109f64 <packet_print>
    4600:	84 c0                	test   al,al
    4602:	74 18                	je     461c <ip4_tcp_decode+0x1e3>
    4604:	48 8d 35 7a 83 00 00 	lea    rsi,[rip+0x837a]        # c985 <_IO_stdin_used+0x985>
    460b:	48 8d 3d 79 83 00 00 	lea    rdi,[rip+0x8379]        # c98b <_IO_stdin_used+0x98b>
    4612:	b8 00 00 00 00       	mov    eax,0x0
    4617:	e8 a4 de ff ff       	call   24c0 <printf@plt>
    461c:	c6 45 a0 01          	mov    BYTE PTR [rbp-0x60],0x1
    4620:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4624:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4628:	48 89 df             	mov    rdi,rbx
    462b:	e8 10 e0 ff ff       	call   2640 <strlen@plt>
    4630:	48 01 d8             	add    rax,rbx
    4633:	66 c7 00 41 00       	mov    WORD PTR [rax],0x41
    4638:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    463c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4640:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4644:	83 e0 01             	and    eax,0x1
    4647:	0f b6 c0             	movzx  eax,al
    464a:	89 c7                	mov    edi,eax
    464c:	e8 3f e0 ff ff       	call   2690 <ntohs@plt>
    4651:	66 85 c0             	test   ax,ax
    4654:	74 43                	je     4699 <ip4_tcp_decode+0x260>
    4656:	0f b6 05 07 59 10 00 	movzx  eax,BYTE PTR [rip+0x105907]        # 109f64 <packet_print>
    465d:	84 c0                	test   al,al
    465f:	74 18                	je     4679 <ip4_tcp_decode+0x240>
    4661:	48 8d 35 2b 83 00 00 	lea    rsi,[rip+0x832b]        # c993 <_IO_stdin_used+0x993>
    4668:	48 8d 3d 2a 83 00 00 	lea    rdi,[rip+0x832a]        # c999 <_IO_stdin_used+0x999>
    466f:	b8 00 00 00 00       	mov    eax,0x0
    4674:	e8 47 de ff ff       	call   24c0 <printf@plt>
    4679:	c6 45 a2 01          	mov    BYTE PTR [rbp-0x5e],0x1
    467d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4681:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4685:	48 89 df             	mov    rdi,rbx
    4688:	e8 b3 df ff ff       	call   2640 <strlen@plt>
    468d:	48 01 d8             	add    rax,rbx
    4690:	66 c7 00 46 00       	mov    WORD PTR [rax],0x46
    4695:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4699:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    469d:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    46a1:	c0 e8 03             	shr    al,0x3
    46a4:	83 e0 01             	and    eax,0x1
    46a7:	0f b6 c0             	movzx  eax,al
    46aa:	89 c7                	mov    edi,eax
    46ac:	e8 df df ff ff       	call   2690 <ntohs@plt>
    46b1:	66 85 c0             	test   ax,ax
    46b4:	74 43                	je     46f9 <ip4_tcp_decode+0x2c0>
    46b6:	0f b6 05 a7 58 10 00 	movzx  eax,BYTE PTR [rip+0x1058a7]        # 109f64 <packet_print>
    46bd:	84 c0                	test   al,al
    46bf:	74 18                	je     46d9 <ip4_tcp_decode+0x2a0>
    46c1:	48 8d 35 d9 82 00 00 	lea    rsi,[rip+0x82d9]        # c9a1 <_IO_stdin_used+0x9a1>
    46c8:	48 8d 3d d8 82 00 00 	lea    rdi,[rip+0x82d8]        # c9a7 <_IO_stdin_used+0x9a7>
    46cf:	b8 00 00 00 00       	mov    eax,0x0
    46d4:	e8 e7 dd ff ff       	call   24c0 <printf@plt>
    46d9:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    46dd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    46e1:	48 8d 58 68          	lea    rbx,[rax+0x68]
    46e5:	48 89 df             	mov    rdi,rbx
    46e8:	e8 53 df ff ff       	call   2640 <strlen@plt>
    46ed:	48 01 d8             	add    rax,rbx
    46f0:	66 c7 00 50 00       	mov    WORD PTR [rax],0x50
    46f5:	c6 45 a3 01          	mov    BYTE PTR [rbp-0x5d],0x1
    46f9:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    46fd:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4701:	c0 e8 02             	shr    al,0x2
    4704:	83 e0 01             	and    eax,0x1
    4707:	0f b6 c0             	movzx  eax,al
    470a:	89 c7                	mov    edi,eax
    470c:	e8 7f df ff ff       	call   2690 <ntohs@plt>
    4711:	66 85 c0             	test   ax,ax
    4714:	74 43                	je     4759 <ip4_tcp_decode+0x320>
    4716:	0f b6 05 47 58 10 00 	movzx  eax,BYTE PTR [rip+0x105847]        # 109f64 <packet_print>
    471d:	84 c0                	test   al,al
    471f:	74 18                	je     4739 <ip4_tcp_decode+0x300>
    4721:	48 8d 35 87 82 00 00 	lea    rsi,[rip+0x8287]        # c9af <_IO_stdin_used+0x9af>
    4728:	48 8d 3d 86 82 00 00 	lea    rdi,[rip+0x8286]        # c9b5 <_IO_stdin_used+0x9b5>
    472f:	b8 00 00 00 00       	mov    eax,0x0
    4734:	e8 87 dd ff ff       	call   24c0 <printf@plt>
    4739:	c6 45 9f 01          	mov    BYTE PTR [rbp-0x61],0x1
    473d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4741:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4745:	48 89 df             	mov    rdi,rbx
    4748:	e8 f3 de ff ff       	call   2640 <strlen@plt>
    474d:	48 01 d8             	add    rax,rbx
    4750:	66 c7 00 52 00       	mov    WORD PTR [rax],0x52
    4755:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    4759:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    475d:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    4761:	d0 e8                	shr    al,1
    4763:	83 e0 01             	and    eax,0x1
    4766:	0f b6 c0             	movzx  eax,al
    4769:	89 c7                	mov    edi,eax
    476b:	e8 20 df ff ff       	call   2690 <ntohs@plt>
    4770:	66 85 c0             	test   ax,ax
    4773:	74 43                	je     47b8 <ip4_tcp_decode+0x37f>
    4775:	0f b6 05 e8 57 10 00 	movzx  eax,BYTE PTR [rip+0x1057e8]        # 109f64 <packet_print>
    477c:	84 c0                	test   al,al
    477e:	74 18                	je     4798 <ip4_tcp_decode+0x35f>
    4780:	48 8d 35 36 82 00 00 	lea    rsi,[rip+0x8236]        # c9bd <_IO_stdin_used+0x9bd>
    4787:	48 8d 3d 35 82 00 00 	lea    rdi,[rip+0x8235]        # c9c3 <_IO_stdin_used+0x9c3>
    478e:	b8 00 00 00 00       	mov    eax,0x0
    4793:	e8 28 dd ff ff       	call   24c0 <printf@plt>
    4798:	c6 45 a1 01          	mov    BYTE PTR [rbp-0x5f],0x1
    479c:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    47a0:	48 8d 58 68          	lea    rbx,[rax+0x68]
    47a4:	48 89 df             	mov    rdi,rbx
    47a7:	e8 94 de ff ff       	call   2640 <strlen@plt>
    47ac:	48 01 d8             	add    rax,rbx
    47af:	66 c7 00 53 00       	mov    WORD PTR [rax],0x53
    47b4:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    47b8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    47bc:	0f b6 40 0d          	movzx  eax,BYTE PTR [rax+0xd]
    47c0:	c0 e8 05             	shr    al,0x5
    47c3:	83 e0 01             	and    eax,0x1
    47c6:	0f b6 c0             	movzx  eax,al
    47c9:	89 c7                	mov    edi,eax
    47cb:	e8 c0 de ff ff       	call   2690 <ntohs@plt>
    47d0:	66 85 c0             	test   ax,ax
    47d3:	74 3f                	je     4814 <ip4_tcp_decode+0x3db>
    47d5:	0f b6 05 88 57 10 00 	movzx  eax,BYTE PTR [rip+0x105788]        # 109f64 <packet_print>
    47dc:	84 c0                	test   al,al
    47de:	74 18                	je     47f8 <ip4_tcp_decode+0x3bf>
    47e0:	48 8d 35 e4 81 00 00 	lea    rsi,[rip+0x81e4]        # c9cb <_IO_stdin_used+0x9cb>
    47e7:	48 8d 3d e3 81 00 00 	lea    rdi,[rip+0x81e3]        # c9d1 <_IO_stdin_used+0x9d1>
    47ee:	b8 00 00 00 00       	mov    eax,0x0
    47f3:	e8 c8 dc ff ff       	call   24c0 <printf@plt>
    47f8:	83 45 a4 01          	add    DWORD PTR [rbp-0x5c],0x1
    47fc:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4800:	48 8d 58 68          	lea    rbx,[rax+0x68]
    4804:	48 89 df             	mov    rdi,rbx
    4807:	e8 34 de ff ff       	call   2640 <strlen@plt>
    480c:	48 01 d8             	add    rax,rbx
    480f:	66 c7 00 55 00       	mov    WORD PTR [rax],0x55
    4814:	0f b6 05 49 57 10 00 	movzx  eax,BYTE PTR [rip+0x105749]        # 109f64 <packet_print>
    481b:	84 c0                	test   al,al
    481d:	74 3c                	je     485b <ip4_tcp_decode+0x422>
    481f:	48 8d 35 3a 81 00 00 	lea    rsi,[rip+0x813a]        # c960 <_IO_stdin_used+0x960>
    4826:	48 8d 3d 39 81 00 00 	lea    rdi,[rip+0x8139]        # c966 <_IO_stdin_used+0x966>
    482d:	b8 00 00 00 00       	mov    eax,0x0
    4832:	e8 89 dc ff ff       	call   24c0 <printf@plt>
    4837:	48 8d 3d 9b 81 00 00 	lea    rdi,[rip+0x819b]        # c9d9 <_IO_stdin_used+0x9d9>
    483e:	e8 dd dc ff ff       	call   2520 <puts@plt>
    4843:	48 8d 35 91 81 00 00 	lea    rsi,[rip+0x8191]        # c9db <_IO_stdin_used+0x9db>
    484a:	48 8d 3d 15 81 00 00 	lea    rdi,[rip+0x8115]        # c966 <_IO_stdin_used+0x966>
    4851:	b8 00 00 00 00       	mov    eax,0x0
    4856:	e8 65 dc ff ff       	call   24c0 <printf@plt>
    485b:	83 7d a4 03          	cmp    DWORD PTR [rbp-0x5c],0x3
    485f:	7f 06                	jg     4867 <ip4_tcp_decode+0x42e>
    4861:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
    4865:	75 41                	jne    48a8 <ip4_tcp_decode+0x46f>
    4867:	8b 7d a8             	mov    edi,DWORD PTR [rbp-0x58]
    486a:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
    486e:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    4871:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4875:	48 8d 0d 5f 81 00 00 	lea    rcx,[rip+0x815f]        # c9db <_IO_stdin_used+0x9db>
    487c:	51                   	push   rcx
    487d:	8b 4d a4             	mov    ecx,DWORD PTR [rbp-0x5c]
    4880:	51                   	push   rcx
    4881:	41 89 f9             	mov    r9d,edi
    4884:	49 89 f0             	mov    r8,rsi
    4887:	89 d1                	mov    ecx,edx
    4889:	48 89 c2             	mov    rdx,rax
    488c:	48 8d 35 1c 81 00 00 	lea    rsi,[rip+0x811c]        # c9af <_IO_stdin_used+0x9af>
    4893:	48 8d 3d 46 81 00 00 	lea    rdi,[rip+0x8146]        # c9e0 <_IO_stdin_used+0x9e0>
    489a:	b8 00 00 00 00       	mov    eax,0x0
    489f:	e8 1c dc ff ff       	call   24c0 <printf@plt>
    48a4:	48 83 c4 10          	add    rsp,0x10
    48a8:	0f b6 05 13 57 10 00 	movzx  eax,BYTE PTR [rip+0x105713]        # 109fc2 <use_spi>
    48af:	84 c0                	test   al,al
    48b1:	0f 84 8c 00 00 00    	je     4943 <ip4_tcp_decode+0x50a>
    48b7:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    48bb:	74 1a                	je     48d7 <ip4_tcp_decode+0x49e>
    48bd:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48c1:	74 14                	je     48d7 <ip4_tcp_decode+0x49e>
    48c3:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    48c7:	75 0e                	jne    48d7 <ip4_tcp_decode+0x49e>
    48c9:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48cd:	48 89 c7             	mov    rdi,rax
    48d0:	e8 e0 48 00 00       	call   91b5 <handle_data_pkt>
    48d5:	eb 6c                	jmp    4943 <ip4_tcp_decode+0x50a>
    48d7:	80 7d a2 00          	cmp    BYTE PTR [rbp-0x5e],0x0
    48db:	74 14                	je     48f1 <ip4_tcp_decode+0x4b8>
    48dd:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    48e1:	74 0e                	je     48f1 <ip4_tcp_decode+0x4b8>
    48e3:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    48e7:	48 89 c7             	mov    rdi,rax
    48ea:	e8 b3 47 00 00       	call   90a2 <polite_end>
    48ef:	eb 52                	jmp    4943 <ip4_tcp_decode+0x50a>
    48f1:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    48f5:	74 14                	je     490b <ip4_tcp_decode+0x4d2>
    48f7:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    48fb:	75 0e                	jne    490b <ip4_tcp_decode+0x4d2>
    48fd:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4901:	48 89 c7             	mov    rdi,rax
    4904:	e8 f6 42 00 00       	call   8bff <add_new_conversation>
    4909:	eb 38                	jmp    4943 <ip4_tcp_decode+0x50a>
    490b:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    490f:	74 1a                	je     492b <ip4_tcp_decode+0x4f2>
    4911:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4915:	74 14                	je     492b <ip4_tcp_decode+0x4f2>
    4917:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    491b:	75 0e                	jne    492b <ip4_tcp_decode+0x4f2>
    491d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4921:	48 89 c7             	mov    rdi,rax
    4924:	e8 0f 45 00 00       	call   8e38 <spi_ud_thw>
    4929:	eb 18                	jmp    4943 <ip4_tcp_decode+0x50a>
    492b:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    492f:	74 12                	je     4943 <ip4_tcp_decode+0x50a>
    4931:	83 7d a4 01          	cmp    DWORD PTR [rbp-0x5c],0x1
    4935:	75 0c                	jne    4943 <ip4_tcp_decode+0x50a>
    4937:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    493b:	48 89 c7             	mov    rdi,rax
    493e:	e8 be 45 00 00       	call   8f01 <update_table>
    4943:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4947:	74 17                	je     4960 <ip4_tcp_decode+0x527>
    4949:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    494d:	74 11                	je     4960 <ip4_tcp_decode+0x527>
    494f:	83 7d a4 02          	cmp    DWORD PTR [rbp-0x5c],0x2
    4953:	75 0b                	jne    4960 <ip4_tcp_decode+0x527>
    4955:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4959:	c7 40 70 01 00 00 00 	mov    DWORD PTR [rax+0x70],0x1
    4960:	80 7d 9f 00          	cmp    BYTE PTR [rbp-0x61],0x0
    4964:	0f 84 8f 01 00 00    	je     4af9 <ip4_tcp_decode+0x6c0>
    496a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    496e:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4972:	48 89 c7             	mov    rdi,rax
    4975:	e8 3e 30 00 00       	call   79b8 <member_exists>
    497a:	89 45 b0             	mov    DWORD PTR [rbp-0x50],eax
    497d:	83 7d b0 ff          	cmp    DWORD PTR [rbp-0x50],0xffffffff
    4981:	0f 84 db 00 00 00    	je     4a62 <ip4_tcp_decode+0x629>
    4987:	8b 45 b0             	mov    eax,DWORD PTR [rbp-0x50]
    498a:	48 63 d0             	movsxd rdx,eax
    498d:	48 89 d0             	mov    rax,rdx
    4990:	48 c1 e0 02          	shl    rax,0x2
    4994:	48 01 d0             	add    rax,rdx
    4997:	48 c1 e0 03          	shl    rax,0x3
    499b:	48 01 d0             	add    rax,rdx
    499e:	48 c1 e0 04          	shl    rax,0x4
    49a2:	48 8d 15 77 eb 0e 00 	lea    rdx,[rip+0xeeb77]        # f3520 <watchlist>
    49a9:	48 01 d0             	add    rax,rdx
    49ac:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    49b0:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    49b4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    49b8:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    49bc:	48 83 c2 08          	add    rdx,0x8
    49c0:	48 89 c6             	mov    rsi,rax
    49c3:	48 89 d7             	mov    rdi,rdx
    49c6:	e8 25 de ff ff       	call   27f0 <strcpy@plt>
    49cb:	bf 00 00 00 00       	mov    edi,0x0
    49d0:	e8 1b df ff ff       	call   28f0 <time@plt>
    49d5:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    49d9:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    49df:	8d 72 01             	lea    esi,[rdx+0x1]
    49e2:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    49e6:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    49ec:	48 89 c1             	mov    rcx,rax
    49ef:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    49f3:	89 d2                	mov    edx,edx
    49f5:	48 83 c2 28          	add    rdx,0x28
    49f9:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    49fe:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a02:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    4a08:	83 f8 1d             	cmp    eax,0x1d
    4a0b:	0f 86 e8 00 00 00    	jbe    4af9 <ip4_tcp_decode+0x6c0>
    4a11:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a15:	c7 80 48 01 00 00 1e 	mov    DWORD PTR [rax+0x148],0x1e
    4a1c:	00 00 00 
    4a1f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a23:	48 89 c7             	mov    rdi,rax
    4a26:	e8 4b 2b 00 00       	call   7576 <tcp_rst_portscan_detect>
    4a2b:	84 c0                	test   al,al
    4a2d:	0f 84 c6 00 00 00    	je     4af9 <ip4_tcp_decode+0x6c0>
    4a33:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a37:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4a3e:	00 00 00 
    4a41:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4a45:	48 05 50 01 00 00    	add    rax,0x150
    4a4b:	ba f0 00 00 00       	mov    edx,0xf0
    4a50:	be 00 00 00 00       	mov    esi,0x0
    4a55:	48 89 c7             	mov    rdi,rax
    4a58:	e8 73 da ff ff       	call   24d0 <memset@plt>
    4a5d:	e9 97 00 00 00       	jmp    4af9 <ip4_tcp_decode+0x6c0>
    4a62:	8b 05 b0 c5 00 00    	mov    eax,DWORD PTR [rip+0xc5b0]        # 11018 <watchlist_num>
    4a68:	83 c0 01             	add    eax,0x1
    4a6b:	89 05 a7 c5 00 00    	mov    DWORD PTR [rip+0xc5a7],eax        # 11018 <watchlist_num>
    4a71:	8b 05 a1 c5 00 00    	mov    eax,DWORD PTR [rip+0xc5a1]        # 11018 <watchlist_num>
    4a77:	48 63 d0             	movsxd rdx,eax
    4a7a:	48 89 d0             	mov    rax,rdx
    4a7d:	48 c1 e0 02          	shl    rax,0x2
    4a81:	48 01 d0             	add    rax,rdx
    4a84:	48 c1 e0 03          	shl    rax,0x3
    4a88:	48 01 d0             	add    rax,rdx
    4a8b:	48 c1 e0 04          	shl    rax,0x4
    4a8f:	48 8d 15 8a ea 0e 00 	lea    rdx,[rip+0xeea8a]        # f3520 <watchlist>
    4a96:	48 01 d0             	add    rax,rdx
    4a99:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    4a9d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4aa1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4aa5:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4aa9:	48 83 c2 08          	add    rdx,0x8
    4aad:	48 89 c6             	mov    rsi,rax
    4ab0:	48 89 d7             	mov    rdi,rdx
    4ab3:	e8 38 dd ff ff       	call   27f0 <strcpy@plt>
    4ab8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4abc:	c7 80 48 01 00 00 00 	mov    DWORD PTR [rax+0x148],0x0
    4ac3:	00 00 00 
    4ac6:	bf 00 00 00 00       	mov    edi,0x0
    4acb:	e8 20 de ff ff       	call   28f0 <time@plt>
    4ad0:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    4ad4:	8b 92 48 01 00 00    	mov    edx,DWORD PTR [rdx+0x148]
    4ada:	8d 72 01             	lea    esi,[rdx+0x1]
    4add:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    4ae1:	89 b1 48 01 00 00    	mov    DWORD PTR [rcx+0x148],esi
    4ae7:	48 89 c1             	mov    rcx,rax
    4aea:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4aee:	89 d2                	mov    edx,edx
    4af0:	48 83 c2 28          	add    rdx,0x28
    4af4:	48 89 4c d0 10       	mov    QWORD PTR [rax+rdx*8+0x10],rcx
    4af9:	8b 05 89 c5 00 00    	mov    eax,DWORD PTR [rip+0xc589]        # 11088 <strict_nmap_host_alive_check>
    4aff:	83 f8 01             	cmp    eax,0x1
    4b02:	0f 85 f6 00 00 00    	jne    4bfe <ip4_tcp_decode+0x7c5>
    4b08:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4b0c:	74 0c                	je     4b1a <ip4_tcp_decode+0x6e1>
    4b0e:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4b12:	74 26                	je     4b3a <ip4_tcp_decode+0x701>
    4b14:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4b18:	74 20                	je     4b3a <ip4_tcp_decode+0x701>
    4b1a:	80 7d a1 00          	cmp    BYTE PTR [rbp-0x5f],0x0
    4b1e:	0f 84 da 00 00 00    	je     4bfe <ip4_tcp_decode+0x7c5>
    4b24:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4b2b:	74 0d                	je     4b3a <ip4_tcp_decode+0x701>
    4b2d:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4b34:	0f 85 c4 00 00 00    	jne    4bfe <ip4_tcp_decode+0x7c5>
    4b3a:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
    4b3d:	3b 45 ac             	cmp    eax,DWORD PTR [rbp-0x54]
    4b40:	76 0a                	jbe    4b4c <ip4_tcp_decode+0x713>
    4b42:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    4b46:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b4a:	eb 08                	jmp    4b54 <ip4_tcp_decode+0x71b>
    4b4c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4b50:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    4b54:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4b58:	48 89 c7             	mov    rdi,rax
    4b5b:	e8 58 2e 00 00       	call   79b8 <member_exists>
    4b60:	89 45 b4             	mov    DWORD PTR [rbp-0x4c],eax
    4b63:	83 7d b4 ff          	cmp    DWORD PTR [rbp-0x4c],0xffffffff
    4b67:	0f 84 91 00 00 00    	je     4bfe <ip4_tcp_decode+0x7c5>
    4b6d:	8b 45 b4             	mov    eax,DWORD PTR [rbp-0x4c]
    4b70:	48 63 d0             	movsxd rdx,eax
    4b73:	48 89 d0             	mov    rax,rdx
    4b76:	48 c1 e0 02          	shl    rax,0x2
    4b7a:	48 01 d0             	add    rax,rdx
    4b7d:	48 c1 e0 03          	shl    rax,0x3
    4b81:	48 01 d0             	add    rax,rdx
    4b84:	48 c1 e0 04          	shl    rax,0x4
    4b88:	48 8d 15 91 e9 0e 00 	lea    rdx,[rip+0xee991]        # f3520 <watchlist>
    4b8f:	48 01 d0             	add    rax,rdx
    4b92:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    4b96:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4b9a:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    4b9d:	85 c0                	test   eax,eax
    4b9f:	75 2a                	jne    4bcb <ip4_tcp_decode+0x792>
    4ba1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4ba5:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4ba8:	83 f8 01             	cmp    eax,0x1
    4bab:	75 1e                	jne    4bcb <ip4_tcp_decode+0x792>
    4bad:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bb1:	c7 40 34 01 00 00 00 	mov    DWORD PTR [rax+0x34],0x1
    4bb8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bbc:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bbf:	8d 50 01             	lea    edx,[rax+0x1]
    4bc2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bc6:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4bc9:	eb 33                	jmp    4bfe <ip4_tcp_decode+0x7c5>
    4bcb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bcf:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
    4bd2:	85 c0                	test   eax,eax
    4bd4:	75 28                	jne    4bfe <ip4_tcp_decode+0x7c5>
    4bd6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bda:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bdd:	83 f8 02             	cmp    eax,0x2
    4be0:	75 1c                	jne    4bfe <ip4_tcp_decode+0x7c5>
    4be2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4be6:	c7 40 38 01 00 00 00 	mov    DWORD PTR [rax+0x38],0x1
    4bed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bf1:	8b 40 40             	mov    eax,DWORD PTR [rax+0x40]
    4bf4:	8d 50 01             	lea    edx,[rax+0x1]
    4bf7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4bfb:	89 50 40             	mov    DWORD PTR [rax+0x40],edx
    4bfe:	0f b6 05 5f 53 10 00 	movzx  eax,BYTE PTR [rip+0x10535f]        # 109f64 <packet_print>
    4c05:	84 c0                	test   al,al
    4c07:	74 3a                	je     4c43 <ip4_tcp_decode+0x80a>
    4c09:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4c0d:	74 34                	je     4c43 <ip4_tcp_decode+0x80a>
    4c0f:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4c13:	74 2e                	je     4c43 <ip4_tcp_decode+0x80a>
    4c15:	0f b6 45 a2          	movzx  eax,BYTE PTR [rbp-0x5e]
    4c19:	83 f0 01             	xor    eax,0x1
    4c1c:	84 c0                	test   al,al
    4c1e:	74 23                	je     4c43 <ip4_tcp_decode+0x80a>
    4c20:	83 7d a8 50          	cmp    DWORD PTR [rbp-0x58],0x50
    4c24:	74 06                	je     4c2c <ip4_tcp_decode+0x7f3>
    4c26:	83 7d ac 50          	cmp    DWORD PTR [rbp-0x54],0x50
    4c2a:	75 17                	jne    4c43 <ip4_tcp_decode+0x80a>
    4c2c:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4c30:	48 8d 50 42          	lea    rdx,[rax+0x42]
    4c34:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c38:	48 89 c6             	mov    rsi,rax
    4c3b:	48 89 d7             	mov    rdi,rdx
    4c3e:	e8 ec 39 00 00       	call   862f <http_disect>
    4c43:	83 7d a8 15          	cmp    DWORD PTR [rbp-0x58],0x15
    4c47:	74 06                	je     4c4f <ip4_tcp_decode+0x816>
    4c49:	83 7d ac 15          	cmp    DWORD PTR [rbp-0x54],0x15
    4c4d:	75 2d                	jne    4c7c <ip4_tcp_decode+0x843>
    4c4f:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4c53:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4c57:	c0 e8 04             	shr    al,0x4
    4c5a:	0f b6 c0             	movzx  eax,al
    4c5d:	c1 e0 02             	shl    eax,0x2
    4c60:	48 98                	cdqe   
    4c62:	48 8d 50 22          	lea    rdx,[rax+0x22]
    4c66:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    4c6a:	48 01 c2             	add    rdx,rax
    4c6d:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c71:	48 89 c6             	mov    rsi,rax
    4c74:	48 89 d7             	mov    rdi,rdx
    4c77:	e8 9e 3b 00 00       	call   881a <ftp_disect>
    4c7c:	81 7d a8 bb 01 00 00 	cmp    DWORD PTR [rbp-0x58],0x1bb
    4c83:	74 09                	je     4c8e <ip4_tcp_decode+0x855>
    4c85:	81 7d ac bb 01 00 00 	cmp    DWORD PTR [rbp-0x54],0x1bb
    4c8c:	75 29                	jne    4cb7 <ip4_tcp_decode+0x87e>
    4c8e:	80 7d a3 00          	cmp    BYTE PTR [rbp-0x5d],0x0
    4c92:	74 23                	je     4cb7 <ip4_tcp_decode+0x87e>
    4c94:	80 7d a0 00          	cmp    BYTE PTR [rbp-0x60],0x0
    4c98:	74 1d                	je     4cb7 <ip4_tcp_decode+0x87e>
    4c9a:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4c9e:	48 8b 00             	mov    rax,QWORD PTR [rax]
    4ca1:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
    4ca8:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
    4cac:	48 89 ce             	mov    rsi,rcx
    4caf:	48 89 c7             	mov    rdi,rax
    4cb2:	e8 38 33 00 00       	call   7fef <tls_decode>
    4cb7:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    4cbe:	8b 50 14             	mov    edx,DWORD PTR [rax+0x14]
    4cc1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4cc5:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    4cc9:	c0 e8 04             	shr    al,0x4
    4ccc:	0f b6 c0             	movzx  eax,al
    4ccf:	c1 e0 02             	shl    eax,0x2
    4cd2:	89 c1                	mov    ecx,eax
    4cd4:	89 d0                	mov    eax,edx
    4cd6:	29 c8                	sub    eax,ecx
    4cd8:	8d 50 de             	lea    edx,[rax-0x22]
    4cdb:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4cdf:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4ce2:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    4ce6:	48 89 c7             	mov    rdi,rax
    4ce9:	e8 95 17 00 00       	call   6483 <rulemgr>
    4cee:	90                   	nop
    4cef:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    4cf3:	c9                   	leave  
    4cf4:	c3                   	ret    

0000000000004cf5 <ip4_udp_decode>:
    4cf5:	f3 0f 1e fa          	endbr64 
    4cf9:	55                   	push   rbp
    4cfa:	48 89 e5             	mov    rbp,rsp
    4cfd:	48 83 ec 30          	sub    rsp,0x30
    4d01:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    4d05:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    4d09:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    4d0d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d11:	48 83 c0 22          	add    rax,0x22
    4d15:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4d19:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4d1d:	48 8d 50 2a          	lea    rdx,[rax+0x2a]
    4d21:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d25:	48 89 10             	mov    QWORD PTR [rax],rdx
    4d28:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d2c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4d30:	ba 5d 00 00 00       	mov    edx,0x5d
    4d35:	be 01 00 00 00       	mov    esi,0x1
    4d3a:	48 89 c7             	mov    rdi,rax
    4d3d:	e8 07 02 00 00       	call   4f49 <add_ip_addr_or_inc_counter>
    4d42:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4d46:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    4d4a:	ba 5d 00 00 00       	mov    edx,0x5d
    4d4f:	be 00 00 00 00       	mov    esi,0x0
    4d54:	48 89 c7             	mov    rdi,rax
    4d57:	e8 ed 01 00 00       	call   4f49 <add_ip_addr_or_inc_counter>
    4d5c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d60:	0f b7 00             	movzx  eax,WORD PTR [rax]
    4d63:	0f b7 c0             	movzx  eax,ax
    4d66:	89 c7                	mov    edi,eax
    4d68:	e8 23 d9 ff ff       	call   2690 <ntohs@plt>
    4d6d:	0f b7 c0             	movzx  eax,ax
    4d70:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
    4d73:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4d77:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    4d7b:	0f b7 c0             	movzx  eax,ax
    4d7e:	89 c7                	mov    edi,eax
    4d80:	e8 0b d9 ff ff       	call   2690 <ntohs@plt>
    4d85:	0f b7 c0             	movzx  eax,ax
    4d88:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    4d8b:	0f b6 05 d2 51 10 00 	movzx  eax,BYTE PTR [rip+0x1051d2]        # 109f64 <packet_print>
    4d92:	84 c0                	test   al,al
    4d94:	74 5d                	je     4df3 <ip4_udp_decode+0xfe>
    4d96:	48 8d 35 83 7c 00 00 	lea    rsi,[rip+0x7c83]        # ca20 <_IO_stdin_used+0xa20>
    4d9d:	48 8d 3d 82 7c 00 00 	lea    rdi,[rip+0x7c82]        # ca26 <_IO_stdin_used+0xa26>
    4da4:	b8 00 00 00 00       	mov    eax,0x0
    4da9:	e8 12 d7 ff ff       	call   24c0 <printf@plt>
    4dae:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4db2:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    4db6:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4dba:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    4dbe:	8b 75 f4             	mov    esi,DWORD PTR [rbp-0xc]
    4dc1:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4dc4:	41 89 f0             	mov    r8d,esi
    4dc7:	48 89 c6             	mov    rsi,rax
    4dca:	48 8d 3d 58 7c 00 00 	lea    rdi,[rip+0x7c58]        # ca29 <_IO_stdin_used+0xa29>
    4dd1:	b8 00 00 00 00       	mov    eax,0x0
    4dd6:	e8 e5 d6 ff ff       	call   24c0 <printf@plt>
    4ddb:	48 8d 35 60 7c 00 00 	lea    rsi,[rip+0x7c60]        # ca42 <_IO_stdin_used+0xa42>
    4de2:	48 8d 3d 3d 7c 00 00 	lea    rdi,[rip+0x7c3d]        # ca26 <_IO_stdin_used+0xa26>
    4de9:	b8 00 00 00 00       	mov    eax,0x0
    4dee:	e8 cd d6 ff ff       	call   24c0 <printf@plt>
    4df3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4df7:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
    4dfa:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    4dfd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e01:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    4e04:	89 50 28             	mov    DWORD PTR [rax+0x28],edx
    4e07:	83 7d f0 35          	cmp    DWORD PTR [rbp-0x10],0x35
    4e0b:	74 06                	je     4e13 <ip4_udp_decode+0x11e>
    4e0d:	83 7d f4 35          	cmp    DWORD PTR [rbp-0xc],0x35
    4e11:	75 17                	jne    4e2a <ip4_udp_decode+0x135>
    4e13:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    4e17:	48 8d 50 2b          	lea    rdx,[rax+0x2b]
    4e1b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e1f:	48 89 c6             	mov    rsi,rax
    4e22:	48 89 d7             	mov    rdi,rdx
    4e25:	e8 b7 38 00 00       	call   86e1 <dns_disect>
    4e2a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    4e2e:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    4e31:	8d 50 d6             	lea    edx,[rax-0x2a]
    4e34:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e38:	89 50 34             	mov    DWORD PTR [rax+0x34],edx
    4e3b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    4e3f:	48 89 c7             	mov    rdi,rax
    4e42:	e8 3c 16 00 00       	call   6483 <rulemgr>
    4e47:	90                   	nop
    4e48:	c9                   	leave  
    4e49:	c3                   	ret    

0000000000004e4a <ip4_igmp_decode>:
    4e4a:	f3 0f 1e fa          	endbr64 
    4e4e:	55                   	push   rbp
    4e4f:	48 89 e5             	mov    rbp,rsp
    4e52:	48 83 ec 60          	sub    rsp,0x60
    4e56:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    4e5a:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    4e5e:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    4e62:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4e69:	00 00 
    4e6b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4e6f:	31 c0                	xor    eax,eax
    4e71:	0f b6 05 ec 50 10 00 	movzx  eax,BYTE PTR [rip+0x1050ec]        # 109f64 <packet_print>
    4e78:	84 c0                	test   al,al
    4e7a:	0f 84 b1 00 00 00    	je     4f31 <ip4_igmp_decode+0xe7>
    4e80:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4e84:	48 83 c0 26          	add    rax,0x26
    4e88:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    4e8c:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    4e90:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    4e94:	48 89 c6             	mov    rsi,rax
    4e97:	48 8d 3d aa 7b 00 00 	lea    rdi,[rip+0x7baa]        # ca48 <_IO_stdin_used+0xa48>
    4e9e:	b8 00 00 00 00       	mov    eax,0x0
    4ea3:	e8 18 d6 ff ff       	call   24c0 <printf@plt>
    4ea8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4eac:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4eaf:	0f b6 c0             	movzx  eax,al
    4eb2:	83 f8 11             	cmp    eax,0x11
    4eb5:	74 07                	je     4ebe <ip4_igmp_decode+0x74>
    4eb7:	83 f8 22             	cmp    eax,0x22
    4eba:	74 10                	je     4ecc <ip4_igmp_decode+0x82>
    4ebc:	eb 54                	jmp    4f12 <ip4_igmp_decode+0xc8>
    4ebe:	48 8d 3d 98 7b 00 00 	lea    rdi,[rip+0x7b98]        # ca5d <_IO_stdin_used+0xa5d>
    4ec5:	e8 56 d6 ff ff       	call   2520 <puts@plt>
    4eca:	eb 66                	jmp    4f32 <ip4_igmp_decode+0xe8>
    4ecc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    4ed0:	48 83 c0 26          	add    rax,0x26
    4ed4:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    4ed8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    4edc:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    4edf:	89 c7                	mov    edi,eax
    4ee1:	e8 83 e2 ff ff       	call   3169 <ipv4_ntoa>
    4ee6:	48 89 c2             	mov    rdx,rax
    4ee9:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4eed:	48 89 d6             	mov    rsi,rdx
    4ef0:	48 89 c7             	mov    rdi,rax
    4ef3:	e8 f8 d8 ff ff       	call   27f0 <strcpy@plt>
    4ef8:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    4efc:	48 89 c6             	mov    rsi,rax
    4eff:	48 8d 3d 72 7b 00 00 	lea    rdi,[rip+0x7b72]        # ca78 <_IO_stdin_used+0xa78>
    4f06:	b8 00 00 00 00       	mov    eax,0x0
    4f0b:	e8 b0 d5 ff ff       	call   24c0 <printf@plt>
    4f10:	eb 20                	jmp    4f32 <ip4_igmp_decode+0xe8>
    4f12:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    4f16:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    4f19:	0f b6 c0             	movzx  eax,al
    4f1c:	89 c6                	mov    esi,eax
    4f1e:	48 8d 3d 89 7b 00 00 	lea    rdi,[rip+0x7b89]        # caae <_IO_stdin_used+0xaae>
    4f25:	b8 00 00 00 00       	mov    eax,0x0
    4f2a:	e8 91 d5 ff ff       	call   24c0 <printf@plt>
    4f2f:	eb 01                	jmp    4f32 <ip4_igmp_decode+0xe8>
    4f31:	90                   	nop
    4f32:	90                   	nop
    4f33:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    4f37:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    4f3e:	00 00 
    4f40:	74 05                	je     4f47 <ip4_igmp_decode+0xfd>
    4f42:	e8 69 d8 ff ff       	call   27b0 <__stack_chk_fail@plt>
    4f47:	c9                   	leave  
    4f48:	c3                   	ret    

0000000000004f49 <add_ip_addr_or_inc_counter>:
    4f49:	f3 0f 1e fa          	endbr64 
    4f4d:	55                   	push   rbp
    4f4e:	48 89 e5             	mov    rbp,rsp
    4f51:	48 83 ec 60          	sub    rsp,0x60
    4f55:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
    4f59:	89 f0                	mov    eax,esi
    4f5b:	89 55 a0             	mov    DWORD PTR [rbp-0x60],edx
    4f5e:	88 45 a4             	mov    BYTE PTR [rbp-0x5c],al
    4f61:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    4f68:	00 00 
    4f6a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    4f6e:	31 c0                	xor    eax,eax
    4f70:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4f74:	ba 08 00 00 00       	mov    edx,0x8
    4f79:	be 00 00 00 00       	mov    esi,0x0
    4f7e:	48 89 c7             	mov    rdi,rax
    4f81:	e8 4a d5 ff ff       	call   24d0 <memset@plt>
    4f86:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4f8a:	ba 1c 00 00 00       	mov    edx,0x1c
    4f8f:	be 00 00 00 00       	mov    esi,0x0
    4f94:	48 89 c7             	mov    rdi,rax
    4f97:	e8 34 d5 ff ff       	call   24d0 <memset@plt>
    4f9c:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    4fa0:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fa4:	ba 18 00 00 00       	mov    edx,0x18
    4fa9:	48 89 ce             	mov    rsi,rcx
    4fac:	48 89 c7             	mov    rdi,rax
    4faf:	e8 8c d8 ff ff       	call   2840 <strncpy@plt>
    4fb4:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    4fb8:	ba 1c 00 00 00       	mov    edx,0x1c
    4fbd:	be 00 00 00 00       	mov    esi,0x0
    4fc2:	48 89 c7             	mov    rdi,rax
    4fc5:	e8 06 d5 ff ff       	call   24d0 <memset@plt>
    4fca:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    4fce:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4fd2:	48 83 c2 08          	add    rdx,0x8
    4fd6:	48 89 c6             	mov    rsi,rax
    4fd9:	48 89 d7             	mov    rdi,rdx
    4fdc:	e8 0f d8 ff ff       	call   27f0 <strcpy@plt>
    4fe1:	0f b6 45 a4          	movzx  eax,BYTE PTR [rbp-0x5c]
    4fe5:	88 45 c0             	mov    BYTE PTR [rbp-0x40],al
    4fe8:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    4feb:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    4fee:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
    4ff2:	48 8d 45 b8          	lea    rax,[rbp-0x48]
    4ff6:	48 89 d1             	mov    rcx,rdx
    4ff9:	48 8d 15 35 00 00 00 	lea    rdx,[rip+0x35]        # 5035 <verify_ip_addr>
    5000:	be 00 00 00 00       	mov    esi,0x0
    5005:	48 89 c7             	mov    rdi,rax
    5008:	e8 03 d6 ff ff       	call   2610 <pthread_create@plt>
    500d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5011:	be 00 00 00 00       	mov    esi,0x0
    5016:	48 89 c7             	mov    rdi,rax
    5019:	e8 92 d4 ff ff       	call   24b0 <pthread_join@plt>
    501e:	90                   	nop
    501f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5023:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    502a:	00 00 
    502c:	74 05                	je     5033 <add_ip_addr_or_inc_counter+0xea>
    502e:	e8 7d d7 ff ff       	call   27b0 <__stack_chk_fail@plt>
    5033:	c9                   	leave  
    5034:	c3                   	ret    

0000000000005035 <verify_ip_addr>:
    5035:	f3 0f 1e fa          	endbr64 
    5039:	55                   	push   rbp
    503a:	48 89 e5             	mov    rbp,rsp
    503d:	48 83 ec 30          	sub    rsp,0x30
    5041:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    5045:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    5049:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    504d:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
    5054:	e9 c9 00 00 00       	jmp    5122 <verify_ip_addr+0xed>
    5059:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    505c:	48 63 d0             	movsxd rdx,eax
    505f:	48 89 d0             	mov    rax,rdx
    5062:	48 c1 e0 02          	shl    rax,0x2
    5066:	48 01 d0             	add    rax,rdx
    5069:	48 c1 e0 03          	shl    rax,0x3
    506d:	48 01 d0             	add    rax,rdx
    5070:	48 c1 e0 04          	shl    rax,0x4
    5074:	48 8d 15 a5 e4 0e 00 	lea    rdx,[rip+0xee4a5]        # f3520 <watchlist>
    507b:	48 01 d0             	add    rax,rdx
    507e:	48 8d 50 08          	lea    rdx,[rax+0x8]
    5082:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5086:	48 83 c0 08          	add    rax,0x8
    508a:	48 89 d6             	mov    rsi,rdx
    508d:	48 89 c7             	mov    rdi,rax
    5090:	e8 2b d7 ff ff       	call   27c0 <strcmp@plt>
    5095:	85 c0                	test   eax,eax
    5097:	0f 85 81 00 00 00    	jne    511e <verify_ip_addr+0xe9>
    509d:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50a0:	48 63 d0             	movsxd rdx,eax
    50a3:	48 89 d0             	mov    rax,rdx
    50a6:	48 c1 e0 02          	shl    rax,0x2
    50aa:	48 01 d0             	add    rax,rdx
    50ad:	48 c1 e0 03          	shl    rax,0x3
    50b1:	48 01 d0             	add    rax,rdx
    50b4:	48 c1 e0 04          	shl    rax,0x4
    50b8:	48 89 c2             	mov    rdx,rax
    50bb:	48 8d 05 b6 e6 0e 00 	lea    rax,[rip+0xee6b6]        # f3778 <watchlist+0x258>
    50c2:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    50c5:	8d 48 01             	lea    ecx,[rax+0x1]
    50c8:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50cb:	48 63 d0             	movsxd rdx,eax
    50ce:	48 89 d0             	mov    rax,rdx
    50d1:	48 c1 e0 02          	shl    rax,0x2
    50d5:	48 01 d0             	add    rax,rdx
    50d8:	48 c1 e0 03          	shl    rax,0x3
    50dc:	48 01 d0             	add    rax,rdx
    50df:	48 c1 e0 04          	shl    rax,0x4
    50e3:	48 89 c2             	mov    rdx,rax
    50e6:	48 8d 05 8b e6 0e 00 	lea    rax,[rip+0xee68b]        # f3778 <watchlist+0x258>
    50ed:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
    50f0:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    50f3:	48 63 d0             	movsxd rdx,eax
    50f6:	48 89 d0             	mov    rax,rdx
    50f9:	48 c1 e0 02          	shl    rax,0x2
    50fd:	48 01 d0             	add    rax,rdx
    5100:	48 c1 e0 03          	shl    rax,0x3
    5104:	48 01 d0             	add    rax,rdx
    5107:	48 c1 e0 04          	shl    rax,0x4
    510b:	48 8d 15 0e e4 0e 00 	lea    rdx,[rip+0xee40e]        # f3520 <watchlist>
    5112:	48 01 d0             	add    rax,rdx
    5115:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5119:	e9 f5 00 00 00       	jmp    5213 <verify_ip_addr+0x1de>
    511e:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
    5122:	8b 05 f0 be 00 00    	mov    eax,DWORD PTR [rip+0xbef0]        # 11018 <watchlist_num>
    5128:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    512b:	0f 8e 28 ff ff ff    	jle    5059 <verify_ip_addr+0x24>
    5131:	bf 90 02 00 00       	mov    edi,0x290
    5136:	e8 65 d4 ff ff       	call   25a0 <malloc@plt>
    513b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    513f:	8b 05 d3 be 00 00    	mov    eax,DWORD PTR [rip+0xbed3]        # 11018 <watchlist_num>
    5145:	83 c0 01             	add    eax,0x1
    5148:	89 05 ca be 00 00    	mov    DWORD PTR [rip+0xbeca],eax        # 11018 <watchlist_num>
    514e:	8b 05 c4 be 00 00    	mov    eax,DWORD PTR [rip+0xbec4]        # 11018 <watchlist_num>
    5154:	48 63 d0             	movsxd rdx,eax
    5157:	48 89 d0             	mov    rax,rdx
    515a:	48 c1 e0 02          	shl    rax,0x2
    515e:	48 01 d0             	add    rax,rdx
    5161:	48 c1 e0 03          	shl    rax,0x3
    5165:	48 01 d0             	add    rax,rdx
    5168:	48 c1 e0 04          	shl    rax,0x4
    516c:	48 89 c1             	mov    rcx,rax
    516f:	48 8d 05 aa e3 0e 00 	lea    rax,[rip+0xee3aa]        # f3520 <watchlist>
    5176:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    517a:	48 01 c8             	add    rax,rcx
    517d:	48 89 d6             	mov    rsi,rdx
    5180:	ba 52 00 00 00       	mov    edx,0x52
    5185:	48 89 c7             	mov    rdi,rax
    5188:	48 89 d1             	mov    rcx,rdx
    518b:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    518e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5192:	48 83 c0 08          	add    rax,0x8
    5196:	ba 0f 00 00 00       	mov    edx,0xf
    519b:	be 00 00 00 00       	mov    esi,0x0
    51a0:	48 89 c7             	mov    rdi,rax
    51a3:	e8 28 d3 ff ff       	call   24d0 <memset@plt>
    51a8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    51ac:	48 8d 48 08          	lea    rcx,[rax+0x8]
    51b0:	8b 05 62 be 00 00    	mov    eax,DWORD PTR [rip+0xbe62]        # 11018 <watchlist_num>
    51b6:	48 63 d0             	movsxd rdx,eax
    51b9:	48 89 d0             	mov    rax,rdx
    51bc:	48 c1 e0 02          	shl    rax,0x2
    51c0:	48 01 d0             	add    rax,rdx
    51c3:	48 c1 e0 03          	shl    rax,0x3
    51c7:	48 01 d0             	add    rax,rdx
    51ca:	48 c1 e0 04          	shl    rax,0x4
    51ce:	48 8d 15 4b e3 0e 00 	lea    rdx,[rip+0xee34b]        # f3520 <watchlist>
    51d5:	48 01 d0             	add    rax,rdx
    51d8:	48 83 c0 08          	add    rax,0x8
    51dc:	48 89 ce             	mov    rsi,rcx
    51df:	48 89 c7             	mov    rdi,rax
    51e2:	e8 09 d6 ff ff       	call   27f0 <strcpy@plt>
    51e7:	8b 05 2b be 00 00    	mov    eax,DWORD PTR [rip+0xbe2b]        # 11018 <watchlist_num>
    51ed:	48 63 d0             	movsxd rdx,eax
    51f0:	48 89 d0             	mov    rax,rdx
    51f3:	48 c1 e0 02          	shl    rax,0x2
    51f7:	48 01 d0             	add    rax,rdx
    51fa:	48 c1 e0 03          	shl    rax,0x3
    51fe:	48 01 d0             	add    rax,rdx
    5201:	48 c1 e0 04          	shl    rax,0x4
    5205:	48 8d 15 14 e3 0e 00 	lea    rdx,[rip+0xee314]        # f3520 <watchlist>
    520c:	48 01 d0             	add    rax,rdx
    520f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    5213:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5217:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    521a:	84 c0                	test   al,al
    521c:	74 36                	je     5254 <verify_ip_addr+0x21f>
    521e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5222:	8b 80 80 02 00 00    	mov    eax,DWORD PTR [rax+0x280]
    5228:	8d 50 01             	lea    edx,[rax+0x1]
    522b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    522f:	89 90 80 02 00 00    	mov    DWORD PTR [rax+0x280],edx
    5235:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5239:	8b 90 88 02 00 00    	mov    edx,DWORD PTR [rax+0x288]
    523f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5243:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5246:	01 c2                	add    edx,eax
    5248:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    524c:	89 90 88 02 00 00    	mov    DWORD PTR [rax+0x288],edx
    5252:	eb 34                	jmp    5288 <verify_ip_addr+0x253>
    5254:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5258:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    525e:	8d 50 01             	lea    edx,[rax+0x1]
    5261:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5265:	89 90 7c 02 00 00    	mov    DWORD PTR [rax+0x27c],edx
    526b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    526f:	8b 90 84 02 00 00    	mov    edx,DWORD PTR [rax+0x284]
    5275:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5279:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    527c:	01 c2                	add    edx,eax
    527e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5282:	89 90 84 02 00 00    	mov    DWORD PTR [rax+0x284],edx
    5288:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    528c:	8b 90 8c 02 00 00    	mov    edx,DWORD PTR [rax+0x28c]
    5292:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    5296:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    5299:	01 c2                	add    edx,eax
    529b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    529f:	89 90 8c 02 00 00    	mov    DWORD PTR [rax+0x28c],edx
    52a5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52a9:	8b 80 7c 02 00 00    	mov    eax,DWORD PTR [rax+0x27c]
    52af:	8d 14 00             	lea    edx,[rax+rax*1]
    52b2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52b6:	89 90 58 02 00 00    	mov    DWORD PTR [rax+0x258],edx
    52bc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52c0:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    52c3:	83 f8 5e             	cmp    eax,0x5e
    52c6:	0f 84 9b 00 00 00    	je     5367 <verify_ip_addr+0x332>
    52cc:	83 f8 5e             	cmp    eax,0x5e
    52cf:	0f 8f cf 00 00 00    	jg     53a4 <verify_ip_addr+0x36f>
    52d5:	83 f8 5c             	cmp    eax,0x5c
    52d8:	74 0a                	je     52e4 <verify_ip_addr+0x2af>
    52da:	83 f8 5d             	cmp    eax,0x5d
    52dd:	74 48                	je     5327 <verify_ip_addr+0x2f2>
    52df:	e9 c0 00 00 00       	jmp    53a4 <verify_ip_addr+0x36f>
    52e4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    52e8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    52eb:	84 c0                	test   al,al
    52ed:	74 1c                	je     530b <verify_ip_addr+0x2d6>
    52ef:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    52f3:	8b 80 5c 02 00 00    	mov    eax,DWORD PTR [rax+0x25c]
    52f9:	8d 50 01             	lea    edx,[rax+0x1]
    52fc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5300:	89 90 5c 02 00 00    	mov    DWORD PTR [rax+0x25c],edx
    5306:	e9 d5 00 00 00       	jmp    53e0 <verify_ip_addr+0x3ab>
    530b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    530f:	8b 80 68 02 00 00    	mov    eax,DWORD PTR [rax+0x268]
    5315:	8d 50 01             	lea    edx,[rax+0x1]
    5318:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    531c:	89 90 68 02 00 00    	mov    DWORD PTR [rax+0x268],edx
    5322:	e9 b9 00 00 00       	jmp    53e0 <verify_ip_addr+0x3ab>
    5327:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    532b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    532e:	84 c0                	test   al,al
    5330:	74 1c                	je     534e <verify_ip_addr+0x319>
    5332:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5336:	8b 80 60 02 00 00    	mov    eax,DWORD PTR [rax+0x260]
    533c:	8d 50 01             	lea    edx,[rax+0x1]
    533f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5343:	89 90 60 02 00 00    	mov    DWORD PTR [rax+0x260],edx
    5349:	e9 92 00 00 00       	jmp    53e0 <verify_ip_addr+0x3ab>
    534e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5352:	8b 80 6c 02 00 00    	mov    eax,DWORD PTR [rax+0x26c]
    5358:	8d 50 01             	lea    edx,[rax+0x1]
    535b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    535f:	89 90 6c 02 00 00    	mov    DWORD PTR [rax+0x26c],edx
    5365:	eb 79                	jmp    53e0 <verify_ip_addr+0x3ab>
    5367:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    536b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    536e:	84 c0                	test   al,al
    5370:	74 19                	je     538b <verify_ip_addr+0x356>
    5372:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5376:	8b 80 64 02 00 00    	mov    eax,DWORD PTR [rax+0x264]
    537c:	8d 50 01             	lea    edx,[rax+0x1]
    537f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5383:	89 90 64 02 00 00    	mov    DWORD PTR [rax+0x264],edx
    5389:	eb 55                	jmp    53e0 <verify_ip_addr+0x3ab>
    538b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    538f:	8b 80 70 02 00 00    	mov    eax,DWORD PTR [rax+0x270]
    5395:	8d 50 01             	lea    edx,[rax+0x1]
    5398:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    539c:	89 90 70 02 00 00    	mov    DWORD PTR [rax+0x270],edx
    53a2:	eb 3c                	jmp    53e0 <verify_ip_addr+0x3ab>
    53a4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    53a8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    53ab:	84 c0                	test   al,al
    53ad:	74 19                	je     53c8 <verify_ip_addr+0x393>
    53af:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53b3:	8b 80 74 02 00 00    	mov    eax,DWORD PTR [rax+0x274]
    53b9:	8d 50 01             	lea    edx,[rax+0x1]
    53bc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53c0:	89 90 74 02 00 00    	mov    DWORD PTR [rax+0x274],edx
    53c6:	eb 17                	jmp    53df <verify_ip_addr+0x3aa>
    53c8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53cc:	8b 80 78 02 00 00    	mov    eax,DWORD PTR [rax+0x278]
    53d2:	8d 50 01             	lea    edx,[rax+0x1]
    53d5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    53d9:	89 90 78 02 00 00    	mov    DWORD PTR [rax+0x278],edx
    53df:	90                   	nop
    53e0:	b8 01 00 00 00       	mov    eax,0x1
    53e5:	c9                   	leave  
    53e6:	c3                   	ret    

00000000000053e7 <ascii_hexdump>:
    53e7:	f3 0f 1e fa          	endbr64 
    53eb:	55                   	push   rbp
    53ec:	48 89 e5             	mov    rbp,rsp
    53ef:	48 83 ec 20          	sub    rsp,0x20
    53f3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    53f7:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    53fa:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    5401:	eb 52                	jmp    5455 <ascii_hexdump+0x6e>
    5403:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5406:	48 63 d0             	movsxd rdx,eax
    5409:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    540d:	48 01 d0             	add    rax,rdx
    5410:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5413:	3c 20                	cmp    al,0x20
    5415:	76 30                	jbe    5447 <ascii_hexdump+0x60>
    5417:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    541a:	48 63 d0             	movsxd rdx,eax
    541d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5421:	48 01 d0             	add    rax,rdx
    5424:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5427:	3c 7e                	cmp    al,0x7e
    5429:	77 1c                	ja     5447 <ascii_hexdump+0x60>
    542b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    542e:	48 63 d0             	movsxd rdx,eax
    5431:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5435:	48 01 d0             	add    rax,rdx
    5438:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    543b:	0f b6 c0             	movzx  eax,al
    543e:	89 c7                	mov    edi,eax
    5440:	e8 0b d1 ff ff       	call   2550 <putchar@plt>
    5445:	eb 0a                	jmp    5451 <ascii_hexdump+0x6a>
    5447:	bf 2e 00 00 00       	mov    edi,0x2e
    544c:	e8 ff d0 ff ff       	call   2550 <putchar@plt>
    5451:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5455:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    5458:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
    545b:	7c a6                	jl     5403 <ascii_hexdump+0x1c>
    545d:	bf 0a 00 00 00       	mov    edi,0xa
    5462:	e8 e9 d0 ff ff       	call   2550 <putchar@plt>
    5467:	90                   	nop
    5468:	c9                   	leave  
    5469:	c3                   	ret    

000000000000546a <stdout_alert>:
    546a:	f3 0f 1e fa          	endbr64 
    546e:	55                   	push   rbp
    546f:	48 89 e5             	mov    rbp,rsp
    5472:	53                   	push   rbx
    5473:	48 81 ec c8 01 00 00 	sub    rsp,0x1c8
    547a:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
    5481:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
    5488:	89 95 3c fe ff ff    	mov    DWORD PTR [rbp-0x1c4],edx
    548e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    5495:	00 00 
    5497:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    549b:	31 c0                	xor    eax,eax
    549d:	bf 00 00 00 00       	mov    edi,0x0
    54a2:	e8 49 d4 ff ff       	call   28f0 <time@plt>
    54a7:	48 89 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],rax
    54ae:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
    54b5:	48 89 c7             	mov    rdi,rax
    54b8:	e8 f3 d3 ff ff       	call   28b0 <localtime@plt>
    54bd:	48 8b 08             	mov    rcx,QWORD PTR [rax]
    54c0:	48 8b 58 08          	mov    rbx,QWORD PTR [rax+0x8]
    54c4:	48 89 8d 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],rcx
    54cb:	48 89 9d 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],rbx
    54d2:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
    54d6:	48 8b 58 18          	mov    rbx,QWORD PTR [rax+0x18]
    54da:	48 89 8d 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],rcx
    54e1:	48 89 9d 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],rbx
    54e8:	48 8b 48 20          	mov    rcx,QWORD PTR [rax+0x20]
    54ec:	48 8b 58 28          	mov    rbx,QWORD PTR [rax+0x28]
    54f0:	48 89 8d 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],rcx
    54f7:	48 89 9d 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],rbx
    54fe:	48 8b 40 30          	mov    rax,QWORD PTR [rax+0x30]
    5502:	48 89 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],rax
    5509:	8b bd 60 fe ff ff    	mov    edi,DWORD PTR [rbp-0x1a0]
    550f:	8b b5 64 fe ff ff    	mov    esi,DWORD PTR [rbp-0x19c]
    5515:	44 8b 8d 68 fe ff ff 	mov    r9d,DWORD PTR [rbp-0x198]
    551c:	44 8b 85 6c fe ff ff 	mov    r8d,DWORD PTR [rbp-0x194]
    5523:	8b 85 70 fe ff ff    	mov    eax,DWORD PTR [rbp-0x190]
    5529:	8d 48 01             	lea    ecx,[rax+0x1]
    552c:	8b 85 74 fe ff ff    	mov    eax,DWORD PTR [rbp-0x18c]
    5532:	8d 90 6c 07 00 00    	lea    edx,[rax+0x76c]
    5538:	48 8d 85 a0 fe ff ff 	lea    rax,[rbp-0x160]
    553f:	57                   	push   rdi
    5540:	56                   	push   rsi
    5541:	48 8d 35 7e 75 00 00 	lea    rsi,[rip+0x757e]        # cac6 <_IO_stdin_used+0xac6>
    5548:	48 89 c7             	mov    rdi,rax
    554b:	b8 00 00 00 00       	mov    eax,0x0
    5550:	e8 2b d1 ff ff       	call   2680 <sprintf@plt>
    5555:	48 83 c4 10          	add    rsp,0x10
    5559:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5560:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    5563:	3d 80 00 00 00       	cmp    eax,0x80
    5568:	75 4e                	jne    55b8 <stdout_alert+0x14e>
    556a:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    5571:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
    5575:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    557c:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
    5580:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    5587:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    558e:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    5595:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    559c:	49 89 f9             	mov    r9,rdi
    559f:	49 89 f0             	mov    r8,rsi
    55a2:	48 8d 35 39 75 00 00 	lea    rsi,[rip+0x7539]        # cae2 <_IO_stdin_used+0xae2>
    55a9:	48 89 c7             	mov    rdi,rax
    55ac:	b8 00 00 00 00       	mov    eax,0x0
    55b1:	e8 ca d0 ff ff       	call   2680 <sprintf@plt>
    55b6:	eb 61                	jmp    5619 <stdout_alert+0x1af>
    55b8:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55bf:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    55c2:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55c9:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    55cd:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55d4:	44 8b 48 24          	mov    r9d,DWORD PTR [rax+0x24]
    55d8:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
    55df:	4c 8b 40 08          	mov    r8,QWORD PTR [rax+0x8]
    55e3:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
    55ea:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    55f1:	48 8d 95 a0 fe ff ff 	lea    rdx,[rbp-0x160]
    55f8:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    55ff:	57                   	push   rdi
    5600:	56                   	push   rsi
    5601:	48 8d 35 ea 74 00 00 	lea    rsi,[rip+0x74ea]        # caf2 <_IO_stdin_used+0xaf2>
    5608:	48 89 c7             	mov    rdi,rax
    560b:	b8 00 00 00 00       	mov    eax,0x0
    5610:	e8 6b d0 ff ff       	call   2680 <sprintf@plt>
    5615:	48 83 c4 10          	add    rsp,0x10
    5619:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    5620:	48 89 c6             	mov    rsi,rax
    5623:	48 8d 3d de 74 00 00 	lea    rdi,[rip+0x74de]        # cb08 <_IO_stdin_used+0xb08>
    562a:	b8 00 00 00 00       	mov    eax,0x0
    562f:	e8 8c ce ff ff       	call   24c0 <printf@plt>
    5634:	48 8b 05 f5 b9 00 00 	mov    rax,QWORD PTR [rip+0xb9f5]        # 11030 <def_log_file>
    563b:	48 8d 35 c9 74 00 00 	lea    rsi,[rip+0x74c9]        # cb0b <_IO_stdin_used+0xb0b>
    5642:	48 89 c7             	mov    rdi,rax
    5645:	e8 66 cf ff ff       	call   25b0 <fopen@plt>
    564a:	48 89 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],rax
    5651:	48 8b 95 58 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1a8]
    5658:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    565f:	48 89 d6             	mov    rsi,rdx
    5662:	48 89 c7             	mov    rdi,rax
    5665:	e8 96 d0 ff ff       	call   2700 <fputs@plt>
    566a:	48 8b 85 58 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1a8]
    5671:	48 89 c7             	mov    rdi,rax
    5674:	e8 b7 d1 ff ff       	call   2830 <fclose@plt>
    5679:	90                   	nop
    567a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    567e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5685:	00 00 
    5687:	74 05                	je     568e <stdout_alert+0x224>
    5689:	e8 22 d1 ff ff       	call   27b0 <__stack_chk_fail@plt>
    568e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5692:	c9                   	leave  
    5693:	c3                   	ret    

0000000000005694 <str_match_parser>:
    5694:	f3 0f 1e fa          	endbr64 
    5698:	55                   	push   rbp
    5699:	48 89 e5             	mov    rbp,rsp
    569c:	53                   	push   rbx
    569d:	48 83 ec 48          	sub    rsp,0x48
    56a1:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    56a5:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    56a9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    56b0:	00 00 
    56b2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    56b6:	31 c0                	xor    eax,eax
    56b8:	48 89 e0             	mov    rax,rsp
    56bb:	48 89 c3             	mov    rbx,rax
    56be:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56c2:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56c5:	85 c0                	test   eax,eax
    56c7:	75 0a                	jne    56d3 <str_match_parser+0x3f>
    56c9:	b8 00 00 00 00       	mov    eax,0x0
    56ce:	e9 e1 01 00 00       	jmp    58b4 <str_match_parser+0x220>
    56d3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56d7:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56da:	83 c0 01             	add    eax,0x1
    56dd:	01 c0                	add    eax,eax
    56df:	48 98                	cdqe   
    56e1:	48 83 e8 01          	sub    rax,0x1
    56e5:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    56e9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    56ed:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    56f0:	83 c0 01             	add    eax,0x1
    56f3:	01 c0                	add    eax,eax
    56f5:	48 98                	cdqe   
    56f7:	49 89 c2             	mov    r10,rax
    56fa:	41 bb 00 00 00 00    	mov    r11d,0x0
    5700:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5704:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5707:	83 c0 01             	add    eax,0x1
    570a:	01 c0                	add    eax,eax
    570c:	48 98                	cdqe   
    570e:	49 89 c0             	mov    r8,rax
    5711:	41 b9 00 00 00 00    	mov    r9d,0x0
    5717:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    571b:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    571e:	83 c0 01             	add    eax,0x1
    5721:	01 c0                	add    eax,eax
    5723:	48 98                	cdqe   
    5725:	ba 10 00 00 00       	mov    edx,0x10
    572a:	48 83 ea 01          	sub    rdx,0x1
    572e:	48 01 d0             	add    rax,rdx
    5731:	be 10 00 00 00       	mov    esi,0x10
    5736:	ba 00 00 00 00       	mov    edx,0x0
    573b:	48 f7 f6             	div    rsi
    573e:	48 6b c0 10          	imul   rax,rax,0x10
    5742:	48 89 c1             	mov    rcx,rax
    5745:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    574c:	48 89 e2             	mov    rdx,rsp
    574f:	48 29 ca             	sub    rdx,rcx
    5752:	48 39 d4             	cmp    rsp,rdx
    5755:	74 12                	je     5769 <str_match_parser+0xd5>
    5757:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    575e:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    5765:	00 00 
    5767:	eb e9                	jmp    5752 <str_match_parser+0xbe>
    5769:	48 89 c2             	mov    rdx,rax
    576c:	81 e2 ff 0f 00 00    	and    edx,0xfff
    5772:	48 29 d4             	sub    rsp,rdx
    5775:	48 89 c2             	mov    rdx,rax
    5778:	81 e2 ff 0f 00 00    	and    edx,0xfff
    577e:	48 85 d2             	test   rdx,rdx
    5781:	74 10                	je     5793 <str_match_parser+0xff>
    5783:	25 ff 0f 00 00       	and    eax,0xfff
    5788:	48 83 e8 08          	sub    rax,0x8
    578c:	48 01 e0             	add    rax,rsp
    578f:	48 83 08 00          	or     QWORD PTR [rax],0x0
    5793:	48 89 e0             	mov    rax,rsp
    5796:	48 83 c0 00          	add    rax,0x0
    579a:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    579e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57a2:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    57a5:	83 c0 01             	add    eax,0x1
    57a8:	01 c0                	add    eax,eax
    57aa:	48 63 d0             	movsxd rdx,eax
    57ad:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    57b1:	be 00 00 00 00       	mov    esi,0x0
    57b6:	48 89 c7             	mov    rdi,rax
    57b9:	e8 12 cd ff ff       	call   24d0 <memset@plt>
    57be:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    57c5:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57c9:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    57cf:	85 c0                	test   eax,eax
    57d1:	74 5f                	je     5832 <str_match_parser+0x19e>
    57d3:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    57d7:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    57da:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    57dd:	eb 42                	jmp    5821 <str_match_parser+0x18d>
    57df:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    57e3:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    57e6:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    57e9:	48 98                	cdqe   
    57eb:	48 01 d0             	add    rax,rdx
    57ee:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    57f1:	0f b6 d0             	movzx  edx,al
    57f4:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    57f7:	8d 48 01             	lea    ecx,[rax+0x1]
    57fa:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    57fd:	01 c0                	add    eax,eax
    57ff:	48 63 c8             	movsxd rcx,eax
    5802:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5806:	48 01 c8             	add    rax,rcx
    5809:	48 8d 35 fd 72 00 00 	lea    rsi,[rip+0x72fd]        # cb0d <_IO_stdin_used+0xb0d>
    5810:	48 89 c7             	mov    rdi,rax
    5813:	b8 00 00 00 00       	mov    eax,0x0
    5818:	e8 63 ce ff ff       	call   2680 <sprintf@plt>
    581d:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    5821:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5825:	8b 80 4c 03 00 00    	mov    eax,DWORD PTR [rax+0x34c]
    582b:	39 45 d0             	cmp    DWORD PTR [rbp-0x30],eax
    582e:	7c af                	jl     57df <str_match_parser+0x14b>
    5830:	eb 5a                	jmp    588c <str_match_parser+0x1f8>
    5832:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5836:	8b 40 14             	mov    eax,DWORD PTR [rax+0x14]
    5839:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    583c:	eb 42                	jmp    5880 <str_match_parser+0x1ec>
    583e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5842:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    5845:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    5848:	48 98                	cdqe   
    584a:	48 01 d0             	add    rax,rdx
    584d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5850:	0f b6 d0             	movzx  edx,al
    5853:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    5856:	8d 48 01             	lea    ecx,[rax+0x1]
    5859:	89 4d d4             	mov    DWORD PTR [rbp-0x2c],ecx
    585c:	01 c0                	add    eax,eax
    585e:	48 63 c8             	movsxd rcx,eax
    5861:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5865:	48 01 c8             	add    rax,rcx
    5868:	48 8d 35 9e 72 00 00 	lea    rsi,[rip+0x729e]        # cb0d <_IO_stdin_used+0xb0d>
    586f:	48 89 c7             	mov    rdi,rax
    5872:	b8 00 00 00 00       	mov    eax,0x0
    5877:	e8 04 ce ff ff       	call   2680 <sprintf@plt>
    587c:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    5880:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    5884:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    5887:	39 45 cc             	cmp    DWORD PTR [rbp-0x34],eax
    588a:	7c b2                	jl     583e <str_match_parser+0x1aa>
    588c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    5890:	48 8d 50 40          	lea    rdx,[rax+0x40]
    5894:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    5898:	48 89 d6             	mov    rsi,rdx
    589b:	48 89 c7             	mov    rdi,rax
    589e:	e8 3d ce ff ff       	call   26e0 <strstr@plt>
    58a3:	48 85 c0             	test   rax,rax
    58a6:	74 07                	je     58af <str_match_parser+0x21b>
    58a8:	b8 01 00 00 00       	mov    eax,0x1
    58ad:	eb 05                	jmp    58b4 <str_match_parser+0x220>
    58af:	b8 00 00 00 00       	mov    eax,0x0
    58b4:	48 89 dc             	mov    rsp,rbx
    58b7:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    58bb:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    58c2:	00 00 
    58c4:	74 05                	je     58cb <str_match_parser+0x237>
    58c6:	e8 e5 ce ff ff       	call   27b0 <__stack_chk_fail@plt>
    58cb:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    58cf:	c9                   	leave  
    58d0:	c3                   	ret    

00000000000058d1 <is_blocked_ipv4>:
    58d1:	f3 0f 1e fa          	endbr64 
    58d5:	55                   	push   rbp
    58d6:	48 89 e5             	mov    rbp,rsp
    58d9:	48 83 ec 20          	sub    rsp,0x20
    58dd:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    58e1:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    58e8:	eb 3b                	jmp    5925 <is_blocked_ipv4+0x54>
    58ea:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    58ed:	48 63 d0             	movsxd rdx,eax
    58f0:	48 89 d0             	mov    rax,rdx
    58f3:	48 c1 e0 03          	shl    rax,0x3
    58f7:	48 01 d0             	add    rax,rdx
    58fa:	48 01 c0             	add    rax,rax
    58fd:	48 8d 15 dc d9 0e 00 	lea    rdx,[rip+0xed9dc]        # f32e0 <blocked_ipv4_addrs>
    5904:	48 01 c2             	add    rdx,rax
    5907:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    590b:	48 89 d6             	mov    rsi,rdx
    590e:	48 89 c7             	mov    rdi,rax
    5911:	e8 aa ce ff ff       	call   27c0 <strcmp@plt>
    5916:	85 c0                	test   eax,eax
    5918:	75 07                	jne    5921 <is_blocked_ipv4+0x50>
    591a:	b8 01 00 00 00       	mov    eax,0x1
    591f:	eb 14                	jmp    5935 <is_blocked_ipv4+0x64>
    5921:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    5925:	8b 05 e5 b6 00 00    	mov    eax,DWORD PTR [rip+0xb6e5]        # 11010 <blk_ipv4_len>
    592b:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    592e:	7e ba                	jle    58ea <is_blocked_ipv4+0x19>
    5930:	b8 00 00 00 00       	mov    eax,0x0
    5935:	c9                   	leave  
    5936:	c3                   	ret    

0000000000005937 <none>:
    5937:	f3 0f 1e fa          	endbr64 
    593b:	55                   	push   rbp
    593c:	48 89 e5             	mov    rbp,rsp
    593f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5943:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5947:	b8 01 00 00 00       	mov    eax,0x1
    594c:	5d                   	pop    rbp
    594d:	c3                   	ret    

000000000000594e <pcre_match>:
    594e:	f3 0f 1e fa          	endbr64 
    5952:	55                   	push   rbp
    5953:	48 89 e5             	mov    rbp,rsp
    5956:	48 83 ec 10          	sub    rsp,0x10
    595a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    595e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    5962:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5966:	48 8b 00             	mov    rax,QWORD PTR [rax]
    5969:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    596d:	48 8d ba d0 01 00 00 	lea    rdi,[rdx+0x1d0]
    5974:	41 b8 00 00 00 00    	mov    r8d,0x0
    597a:	b9 00 00 00 00       	mov    ecx,0x0
    597f:	ba 00 00 00 00       	mov    edx,0x0
    5984:	48 89 c6             	mov    rsi,rax
    5987:	e8 34 cc ff ff       	call   25c0 <regexec@plt>
    598c:	83 f8 01             	cmp    eax,0x1
    598f:	75 07                	jne    5998 <pcre_match+0x4a>
    5991:	b8 00 00 00 00       	mov    eax,0x0
    5996:	eb 05                	jmp    599d <pcre_match+0x4f>
    5998:	b8 01 00 00 00       	mov    eax,0x1
    599d:	c9                   	leave  
    599e:	c3                   	ret    

000000000000599f <rule_library_parser>:
    599f:	f3 0f 1e fa          	endbr64 
    59a3:	55                   	push   rbp
    59a4:	48 89 e5             	mov    rbp,rsp
    59a7:	53                   	push   rbx
    59a8:	48 83 ec 48          	sub    rsp,0x48
    59ac:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    59b0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    59b7:	00 00 
    59b9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    59bd:	31 c0                	xor    eax,eax
    59bf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    59c3:	48 8d 35 4e 71 00 00 	lea    rsi,[rip+0x714e]        # cb18 <_IO_stdin_used+0xb18>
    59ca:	48 89 c7             	mov    rdi,rax
    59cd:	e8 de cb ff ff       	call   25b0 <fopen@plt>
    59d2:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    59d6:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    59db:	75 22                	jne    59ff <rule_library_parser+0x60>
    59dd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    59e1:	48 89 c6             	mov    rsi,rax
    59e4:	48 8d 3d 35 71 00 00 	lea    rdi,[rip+0x7135]        # cb20 <_IO_stdin_used+0xb20>
    59eb:	b8 00 00 00 00       	mov    eax,0x0
    59f0:	e8 cb ca ff ff       	call   24c0 <printf@plt>
    59f5:	bf 01 00 00 00       	mov    edi,0x1
    59fa:	e8 41 cb ff ff       	call   2540 <exit@plt>
    59ff:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    5a06:	00 
    5a07:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    5a0e:	00 
    5a0f:	e9 70 05 00 00       	jmp    5f84 <rule_library_parser+0x5e5>
    5a14:	48 8b 5d d0          	mov    rbx,QWORD PTR [rbp-0x30]
    5a18:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a1c:	48 8d 35 23 71 00 00 	lea    rsi,[rip+0x7123]        # cb46 <_IO_stdin_used+0xb46>
    5a23:	48 89 c7             	mov    rdi,rax
    5a26:	e8 25 ce ff ff       	call   2850 <strcspn@plt>
    5a2b:	48 01 d8             	add    rax,rbx
    5a2e:	c6 00 00             	mov    BYTE PTR [rax],0x0
    5a31:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a35:	48 89 c7             	mov    rdi,rax
    5a38:	e8 b9 05 00 00       	call   5ff6 <is_comment>
    5a3d:	84 c0                	test   al,al
    5a3f:	74 05                	je     5a46 <rule_library_parser+0xa7>
    5a41:	e9 3e 05 00 00       	jmp    5f84 <rule_library_parser+0x5e5>
    5a46:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a4a:	ba 1a 00 00 00       	mov    edx,0x1a
    5a4f:	48 8d 35 f2 70 00 00 	lea    rsi,[rip+0x70f2]        # cb48 <_IO_stdin_used+0xb48>
    5a56:	48 89 c7             	mov    rdi,rax
    5a59:	e8 32 cb ff ff       	call   2590 <strncmp@plt>
    5a5e:	85 c0                	test   eax,eax
    5a60:	75 39                	jne    5a9b <rule_library_parser+0xfc>
    5a62:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a66:	48 83 c0 1a          	add    rax,0x1a
    5a6a:	48 8d 35 f2 70 00 00 	lea    rsi,[rip+0x70f2]        # cb63 <_IO_stdin_used+0xb63>
    5a71:	48 89 c7             	mov    rdi,rax
    5a74:	e8 47 cd ff ff       	call   27c0 <strcmp@plt>
    5a79:	85 c0                	test   eax,eax
    5a7b:	75 0f                	jne    5a8c <rule_library_parser+0xed>
    5a7d:	c7 05 fd b5 00 00 01 	mov    DWORD PTR [rip+0xb5fd],0x1        # 11084 <strict_icmp_timestamp_req>
    5a84:	00 00 00 
    5a87:	e9 e2 04 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5a8c:	c7 05 ee b5 00 00 00 	mov    DWORD PTR [rip+0xb5ee],0x0        # 11084 <strict_icmp_timestamp_req>
    5a93:	00 00 00 
    5a96:	e9 d3 04 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5a9b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5a9f:	ba 1d 00 00 00       	mov    edx,0x1d
    5aa4:	48 8d 35 bc 70 00 00 	lea    rsi,[rip+0x70bc]        # cb67 <_IO_stdin_used+0xb67>
    5aab:	48 89 c7             	mov    rdi,rax
    5aae:	e8 dd ca ff ff       	call   2590 <strncmp@plt>
    5ab3:	85 c0                	test   eax,eax
    5ab5:	75 39                	jne    5af0 <rule_library_parser+0x151>
    5ab7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5abb:	48 83 c0 1d          	add    rax,0x1d
    5abf:	48 8d 35 9d 70 00 00 	lea    rsi,[rip+0x709d]        # cb63 <_IO_stdin_used+0xb63>
    5ac6:	48 89 c7             	mov    rdi,rax
    5ac9:	e8 f2 cc ff ff       	call   27c0 <strcmp@plt>
    5ace:	85 c0                	test   eax,eax
    5ad0:	75 0f                	jne    5ae1 <rule_library_parser+0x142>
    5ad2:	c7 05 ac b5 00 00 01 	mov    DWORD PTR [rip+0xb5ac],0x1        # 11088 <strict_nmap_host_alive_check>
    5ad9:	00 00 00 
    5adc:	e9 8d 04 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5ae1:	c7 05 9d b5 00 00 00 	mov    DWORD PTR [rip+0xb59d],0x0        # 11088 <strict_nmap_host_alive_check>
    5ae8:	00 00 00 
    5aeb:	e9 7e 04 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5af0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5af4:	ba 17 00 00 00       	mov    edx,0x17
    5af9:	48 8d 35 85 70 00 00 	lea    rsi,[rip+0x7085]        # cb85 <_IO_stdin_used+0xb85>
    5b00:	48 89 c7             	mov    rdi,rax
    5b03:	e8 88 ca ff ff       	call   2590 <strncmp@plt>
    5b08:	85 c0                	test   eax,eax
    5b0a:	75 43                	jne    5b4f <rule_library_parser+0x1b0>
    5b0c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b10:	48 89 c7             	mov    rdi,rax
    5b13:	e8 28 cb ff ff       	call   2640 <strlen@plt>
    5b18:	48 83 f8 17          	cmp    rax,0x17
    5b1c:	77 16                	ja     5b34 <rule_library_parser+0x195>
    5b1e:	48 8d 3d 78 70 00 00 	lea    rdi,[rip+0x7078]        # cb9d <_IO_stdin_used+0xb9d>
    5b25:	e8 f6 c9 ff ff       	call   2520 <puts@plt>
    5b2a:	bf 01 00 00 00       	mov    edi,0x1
    5b2f:	e8 0c ca ff ff       	call   2540 <exit@plt>
    5b34:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b38:	48 83 c0 17          	add    rax,0x17
    5b3c:	48 89 c7             	mov    rdi,rax
    5b3f:	e8 ec cb ff ff       	call   2730 <atoi@plt>
    5b44:	89 05 16 44 10 00    	mov    DWORD PTR [rip+0x104416],eax        # 109f60 <clean_delay_pkts>
    5b4a:	e9 1f 04 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5b4f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b53:	ba 18 00 00 00       	mov    edx,0x18
    5b58:	48 8d 35 58 70 00 00 	lea    rsi,[rip+0x7058]        # cbb7 <_IO_stdin_used+0xbb7>
    5b5f:	48 89 c7             	mov    rdi,rax
    5b62:	e8 29 ca ff ff       	call   2590 <strncmp@plt>
    5b67:	85 c0                	test   eax,eax
    5b69:	75 46                	jne    5bb1 <rule_library_parser+0x212>
    5b6b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b6f:	48 89 c7             	mov    rdi,rax
    5b72:	e8 c9 ca ff ff       	call   2640 <strlen@plt>
    5b77:	48 83 f8 18          	cmp    rax,0x18
    5b7b:	75 16                	jne    5b93 <rule_library_parser+0x1f4>
    5b7d:	48 8d 3d 19 70 00 00 	lea    rdi,[rip+0x7019]        # cb9d <_IO_stdin_used+0xb9d>
    5b84:	e8 97 c9 ff ff       	call   2520 <puts@plt>
    5b89:	bf 01 00 00 00       	mov    edi,0x1
    5b8e:	e8 ad c9 ff ff       	call   2540 <exit@plt>
    5b93:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5b97:	48 83 c0 18          	add    rax,0x18
    5b9b:	48 89 c7             	mov    rdi,rax
    5b9e:	e8 8d cb ff ff       	call   2730 <atoi@plt>
    5ba3:	48 98                	cdqe   
    5ba5:	48 89 05 0c b7 00 00 	mov    QWORD PTR [rip+0xb70c],rax        # 112b8 <clean_delay>
    5bac:	e9 bd 03 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5bb1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bb5:	ba 0b 00 00 00       	mov    edx,0xb
    5bba:	48 8d 35 0f 70 00 00 	lea    rsi,[rip+0x700f]        # cbd0 <_IO_stdin_used+0xbd0>
    5bc1:	48 89 c7             	mov    rdi,rax
    5bc4:	e8 c7 c9 ff ff       	call   2590 <strncmp@plt>
    5bc9:	85 c0                	test   eax,eax
    5bcb:	75 33                	jne    5c00 <rule_library_parser+0x261>
    5bcd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5bd1:	48 83 c0 0b          	add    rax,0xb
    5bd5:	48 8d 35 87 6f 00 00 	lea    rsi,[rip+0x6f87]        # cb63 <_IO_stdin_used+0xb63>
    5bdc:	48 89 c7             	mov    rdi,rax
    5bdf:	e8 dc cb ff ff       	call   27c0 <strcmp@plt>
    5be4:	85 c0                	test   eax,eax
    5be6:	75 0c                	jne    5bf4 <rule_library_parser+0x255>
    5be8:	c6 05 32 43 10 00 01 	mov    BYTE PTR [rip+0x104332],0x1        # 109f21 <use_sqlite>
    5bef:	e9 7a 03 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5bf4:	c6 05 26 43 10 00 00 	mov    BYTE PTR [rip+0x104326],0x0        # 109f21 <use_sqlite>
    5bfb:	e9 6e 03 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5c00:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c04:	ba 15 00 00 00       	mov    edx,0x15
    5c09:	48 8d 35 cc 6f 00 00 	lea    rsi,[rip+0x6fcc]        # cbdc <_IO_stdin_used+0xbdc>
    5c10:	48 89 c7             	mov    rdi,rax
    5c13:	e8 78 c9 ff ff       	call   2590 <strncmp@plt>
    5c18:	85 c0                	test   eax,eax
    5c1a:	75 34                	jne    5c50 <rule_library_parser+0x2b1>
    5c1c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c20:	48 83 c0 15          	add    rax,0x15
    5c24:	48 89 c6             	mov    rsi,rax
    5c27:	48 8d 3d 12 43 10 00 	lea    rdi,[rip+0x104312]        # 109f40 <sqlite_db_path>
    5c2e:	e8 bd cb ff ff       	call   27f0 <strcpy@plt>
    5c33:	48 8d 35 06 43 10 00 	lea    rsi,[rip+0x104306]        # 109f40 <sqlite_db_path>
    5c3a:	48 8d 3d b1 6f 00 00 	lea    rdi,[rip+0x6fb1]        # cbf2 <_IO_stdin_used+0xbf2>
    5c41:	b8 00 00 00 00       	mov    eax,0x0
    5c46:	e8 a4 2c 00 00       	call   88ef <livedebug>
    5c4b:	e9 1e 03 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5c50:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c54:	ba 0b 00 00 00       	mov    edx,0xb
    5c59:	48 8d 35 ab 6f 00 00 	lea    rsi,[rip+0x6fab]        # cc0b <_IO_stdin_used+0xc0b>
    5c60:	48 89 c7             	mov    rdi,rax
    5c63:	e8 28 c9 ff ff       	call   2590 <strncmp@plt>
    5c68:	85 c0                	test   eax,eax
    5c6a:	75 34                	jne    5ca0 <rule_library_parser+0x301>
    5c6c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5c70:	48 83 c0 0b          	add    rax,0xb
    5c74:	48 89 c6             	mov    rsi,rax
    5c77:	48 8d 3d f2 42 10 00 	lea    rdi,[rip+0x1042f2]        # 109f70 <input_adapter>
    5c7e:	e8 6d cb ff ff       	call   27f0 <strcpy@plt>
    5c83:	48 8d 35 e6 42 10 00 	lea    rsi,[rip+0x1042e6]        # 109f70 <input_adapter>
    5c8a:	48 8d 3d 87 6f 00 00 	lea    rdi,[rip+0x6f87]        # cc18 <_IO_stdin_used+0xc18>
    5c91:	b8 00 00 00 00       	mov    eax,0x0
    5c96:	e8 54 2c 00 00       	call   88ef <livedebug>
    5c9b:	e9 ce 02 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5ca0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ca4:	ba 0c 00 00 00       	mov    edx,0xc
    5ca9:	48 8d 35 9b 6f 00 00 	lea    rsi,[rip+0x6f9b]        # cc4b <_IO_stdin_used+0xc4b>
    5cb0:	48 89 c7             	mov    rdi,rax
    5cb3:	e8 d8 c8 ff ff       	call   2590 <strncmp@plt>
    5cb8:	85 c0                	test   eax,eax
    5cba:	75 34                	jne    5cf0 <rule_library_parser+0x351>
    5cbc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cc0:	48 83 c0 0c          	add    rax,0xc
    5cc4:	48 89 c6             	mov    rsi,rax
    5cc7:	48 8d 3d b2 42 10 00 	lea    rdi,[rip+0x1042b2]        # 109f80 <output_adapter>
    5cce:	e8 1d cb ff ff       	call   27f0 <strcpy@plt>
    5cd3:	48 8d 35 a6 42 10 00 	lea    rsi,[rip+0x1042a6]        # 109f80 <output_adapter>
    5cda:	48 8d 3d 77 6f 00 00 	lea    rdi,[rip+0x6f77]        # cc58 <_IO_stdin_used+0xc58>
    5ce1:	b8 00 00 00 00       	mov    eax,0x0
    5ce6:	e8 04 2c 00 00       	call   88ef <livedebug>
    5ceb:	e9 7e 02 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5cf0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5cf4:	ba 05 00 00 00       	mov    edx,0x5
    5cf9:	48 8d 35 8c 6f 00 00 	lea    rsi,[rip+0x6f8c]        # cc8c <_IO_stdin_used+0xc8c>
    5d00:	48 89 c7             	mov    rdi,rax
    5d03:	e8 88 c8 ff ff       	call   2590 <strncmp@plt>
    5d08:	85 c0                	test   eax,eax
    5d0a:	0f 85 81 00 00 00    	jne    5d91 <rule_library_parser+0x3f2>
    5d10:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d14:	48 83 c0 05          	add    rax,0x5
    5d18:	48 89 c6             	mov    rsi,rax
    5d1b:	48 8d 3d 70 6f 00 00 	lea    rdi,[rip+0x6f70]        # cc92 <_IO_stdin_used+0xc92>
    5d22:	b8 00 00 00 00       	mov    eax,0x0
    5d27:	e8 c3 2b 00 00       	call   88ef <livedebug>
    5d2c:	48 8d 3d 68 6f 00 00 	lea    rdi,[rip+0x6f68]        # cc9b <_IO_stdin_used+0xc9b>
    5d33:	b8 00 00 00 00       	mov    eax,0x0
    5d38:	e8 83 c7 ff ff       	call   24c0 <printf@plt>
    5d3d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d41:	48 83 c0 05          	add    rax,0x5
    5d45:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5d48:	0f b6 15 58 6f 00 00 	movzx  edx,BYTE PTR [rip+0x6f58]        # cca7 <_IO_stdin_used+0xca7>
    5d4f:	0f b6 c0             	movzx  eax,al
    5d52:	0f b6 d2             	movzx  edx,dl
    5d55:	29 d0                	sub    eax,edx
    5d57:	85 c0                	test   eax,eax
    5d59:	75 1b                	jne    5d76 <rule_library_parser+0x3d7>
    5d5b:	c7 05 bf b2 00 00 02 	mov    DWORD PTR [rip+0xb2bf],0x2        # 11024 <VIGIL_MODE>
    5d62:	00 00 00 
    5d65:	48 8d 3d 3d 6f 00 00 	lea    rdi,[rip+0x6f3d]        # cca9 <_IO_stdin_used+0xca9>
    5d6c:	e8 af c7 ff ff       	call   2520 <puts@plt>
    5d71:	e9 f8 01 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5d76:	c7 05 a4 b2 00 00 01 	mov    DWORD PTR [rip+0xb2a4],0x1        # 11024 <VIGIL_MODE>
    5d7d:	00 00 00 
    5d80:	48 8d 3d 39 6f 00 00 	lea    rdi,[rip+0x6f39]        # ccc0 <_IO_stdin_used+0xcc0>
    5d87:	e8 94 c7 ff ff       	call   2520 <puts@plt>
    5d8c:	e9 dd 01 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5d91:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5d95:	ba 08 00 00 00       	mov    edx,0x8
    5d9a:	48 8d 35 36 6f 00 00 	lea    rsi,[rip+0x6f36]        # ccd7 <_IO_stdin_used+0xcd7>
    5da1:	48 89 c7             	mov    rdi,rax
    5da4:	e8 e7 c7 ff ff       	call   2590 <strncmp@plt>
    5da9:	85 c0                	test   eax,eax
    5dab:	75 34                	jne    5de1 <rule_library_parser+0x442>
    5dad:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5db1:	48 83 c0 08          	add    rax,0x8
    5db5:	48 89 c6             	mov    rsi,rax
    5db8:	48 8d 3d d1 41 10 00 	lea    rdi,[rip+0x1041d1]        # 109f90 <local_ip>
    5dbf:	e8 2c ca ff ff       	call   27f0 <strcpy@plt>
    5dc4:	48 8d 35 c5 41 10 00 	lea    rsi,[rip+0x1041c5]        # 109f90 <local_ip>
    5dcb:	48 8d 3d 0e 6f 00 00 	lea    rdi,[rip+0x6f0e]        # cce0 <_IO_stdin_used+0xce0>
    5dd2:	b8 00 00 00 00       	mov    eax,0x0
    5dd7:	e8 13 2b 00 00       	call   88ef <livedebug>
    5ddc:	e9 8d 01 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5de1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5de5:	ba 06 00 00 00       	mov    edx,0x6
    5dea:	48 8d 35 0a 6f 00 00 	lea    rsi,[rip+0x6f0a]        # ccfb <_IO_stdin_used+0xcfb>
    5df1:	48 89 c7             	mov    rdi,rax
    5df4:	e8 97 c7 ff ff       	call   2590 <strncmp@plt>
    5df9:	85 c0                	test   eax,eax
    5dfb:	75 1c                	jne    5e19 <rule_library_parser+0x47a>
    5dfd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e01:	48 83 c0 06          	add    rax,0x6
    5e05:	48 89 c6             	mov    rsi,rax
    5e08:	48 8d 3d a1 41 10 00 	lea    rdi,[rip+0x1041a1]        # 109fb0 <def_gw>
    5e0f:	e8 dc c9 ff ff       	call   27f0 <strcpy@plt>
    5e14:	e9 55 01 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5e19:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e1d:	ba 08 00 00 00       	mov    edx,0x8
    5e22:	48 8d 35 d9 6e 00 00 	lea    rsi,[rip+0x6ed9]        # cd02 <_IO_stdin_used+0xd02>
    5e29:	48 89 c7             	mov    rdi,rax
    5e2c:	e8 5f c7 ff ff       	call   2590 <strncmp@plt>
    5e31:	85 c0                	test   eax,eax
    5e33:	75 3f                	jne    5e74 <rule_library_parser+0x4d5>
    5e35:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e39:	48 83 c0 08          	add    rax,0x8
    5e3d:	48 8d 35 1f 6d 00 00 	lea    rsi,[rip+0x6d1f]        # cb63 <_IO_stdin_used+0xb63>
    5e44:	48 89 c7             	mov    rdi,rax
    5e47:	e8 74 c9 ff ff       	call   27c0 <strcmp@plt>
    5e4c:	85 c0                	test   eax,eax
    5e4e:	75 18                	jne    5e68 <rule_library_parser+0x4c9>
    5e50:	c6 05 6b 41 10 00 01 	mov    BYTE PTR [rip+0x10416b],0x1        # 109fc2 <use_spi>
    5e57:	48 8d 3d ad 6e 00 00 	lea    rdi,[rip+0x6ead]        # cd0b <_IO_stdin_used+0xd0b>
    5e5e:	e8 bd c6 ff ff       	call   2520 <puts@plt>
    5e63:	e9 06 01 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5e68:	c6 05 53 41 10 00 00 	mov    BYTE PTR [rip+0x104153],0x0        # 109fc2 <use_spi>
    5e6f:	e9 fa 00 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5e74:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e78:	ba 09 00 00 00       	mov    edx,0x9
    5e7d:	48 8d 35 a0 6e 00 00 	lea    rsi,[rip+0x6ea0]        # cd24 <_IO_stdin_used+0xd24>
    5e84:	48 89 c7             	mov    rdi,rax
    5e87:	e8 04 c7 ff ff       	call   2590 <strncmp@plt>
    5e8c:	85 c0                	test   eax,eax
    5e8e:	75 27                	jne    5eb7 <rule_library_parser+0x518>
    5e90:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5e94:	48 89 c7             	mov    rdi,rax
    5e97:	e8 83 01 00 00       	call   601f <rstrip>
    5e9c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ea0:	48 83 c0 09          	add    rax,0x9
    5ea4:	48 89 c7             	mov    rdi,rax
    5ea7:	e8 fc 4f 00 00       	call   aea8 <homenet_toi>
    5eac:	89 05 12 41 10 00    	mov    DWORD PTR [rip+0x104112],eax        # 109fc4 <homenet>
    5eb2:	e9 b7 00 00 00       	jmp    5f6e <rule_library_parser+0x5cf>
    5eb7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ebb:	ba 0e 00 00 00       	mov    edx,0xe
    5ec0:	48 8d 35 67 6e 00 00 	lea    rsi,[rip+0x6e67]        # cd2e <_IO_stdin_used+0xd2e>
    5ec7:	48 89 c7             	mov    rdi,rax
    5eca:	e8 c1 c6 ff ff       	call   2590 <strncmp@plt>
    5ecf:	85 c0                	test   eax,eax
    5ed1:	75 24                	jne    5ef7 <rule_library_parser+0x558>
    5ed3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ed7:	48 89 c7             	mov    rdi,rax
    5eda:	e8 40 01 00 00       	call   601f <rstrip>
    5edf:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5ee3:	48 83 c0 0e          	add    rax,0xe
    5ee7:	48 89 c7             	mov    rdi,rax
    5eea:	e8 b9 4f 00 00       	call   aea8 <homenet_toi>
    5eef:	89 05 d3 40 10 00    	mov    DWORD PTR [rip+0x1040d3],eax        # 109fc8 <homenetmask>
    5ef5:	eb 77                	jmp    5f6e <rule_library_parser+0x5cf>
    5ef7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5efb:	ba 09 00 00 00       	mov    edx,0x9
    5f00:	48 8d 35 36 6e 00 00 	lea    rsi,[rip+0x6e36]        # cd3d <_IO_stdin_used+0xd3d>
    5f07:	48 89 c7             	mov    rdi,rax
    5f0a:	e8 81 c6 ff ff       	call   2590 <strncmp@plt>
    5f0f:	85 c0                	test   eax,eax
    5f11:	75 3f                	jne    5f52 <rule_library_parser+0x5b3>
    5f13:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f17:	48 89 c7             	mov    rdi,rax
    5f1a:	e8 00 01 00 00       	call   601f <rstrip>
    5f1f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f23:	48 83 c0 09          	add    rax,0x9
    5f27:	48 8d 35 19 6e 00 00 	lea    rsi,[rip+0x6e19]        # cd47 <_IO_stdin_used+0xd47>
    5f2e:	48 89 c7             	mov    rdi,rax
    5f31:	e8 8a c8 ff ff       	call   27c0 <strcmp@plt>
    5f36:	85 c0                	test   eax,eax
    5f38:	75 0c                	jne    5f46 <rule_library_parser+0x5a7>
    5f3a:	c7 05 24 40 10 00 04 	mov    DWORD PTR [rip+0x104024],0x4        # 109f68 <vigil_location>
    5f41:	00 00 00 
    5f44:	eb 28                	jmp    5f6e <rule_library_parser+0x5cf>
    5f46:	c7 05 18 40 10 00 03 	mov    DWORD PTR [rip+0x104018],0x3        # 109f68 <vigil_location>
    5f4d:	00 00 00 
    5f50:	eb 1c                	jmp    5f6e <rule_library_parser+0x5cf>
    5f52:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f56:	48 89 c7             	mov    rdi,rax
    5f59:	e8 7e 00 00 00       	call   5fdc <is_rule>
    5f5e:	84 c0                	test   al,al
    5f60:	74 0c                	je     5f6e <rule_library_parser+0x5cf>
    5f62:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f66:	48 89 c7             	mov    rdi,rax
    5f69:	e8 18 01 00 00       	call   6086 <rule_parser>
    5f6e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    5f72:	ba 08 00 00 00       	mov    edx,0x8
    5f77:	be 00 00 00 00       	mov    esi,0x0
    5f7c:	48 89 c7             	mov    rdi,rax
    5f7f:	e8 4c c5 ff ff       	call   24d0 <memset@plt>
    5f84:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    5f88:	48 8d 4d c8          	lea    rcx,[rbp-0x38]
    5f8c:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    5f90:	48 89 ce             	mov    rsi,rcx
    5f93:	48 89 c7             	mov    rdi,rax
    5f96:	e8 45 c8 ff ff       	call   27e0 <getline@plt>
    5f9b:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    5f9f:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    5fa4:	0f 85 6a fa ff ff    	jne    5a14 <rule_library_parser+0x75>
    5faa:	8b 05 74 b0 00 00    	mov    eax,DWORD PTR [rip+0xb074]        # 11024 <VIGIL_MODE>
    5fb0:	3d ff ff 00 00       	cmp    eax,0xffff
    5fb5:	75 0a                	jne    5fc1 <rule_library_parser+0x622>
    5fb7:	c7 05 63 b0 00 00 01 	mov    DWORD PTR [rip+0xb063],0x1        # 11024 <VIGIL_MODE>
    5fbe:	00 00 00 
    5fc1:	90                   	nop
    5fc2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    5fc6:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    5fcd:	00 00 
    5fcf:	74 05                	je     5fd6 <rule_library_parser+0x637>
    5fd1:	e8 da c7 ff ff       	call   27b0 <__stack_chk_fail@plt>
    5fd6:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    5fda:	c9                   	leave  
    5fdb:	c3                   	ret    

0000000000005fdc <is_rule>:
    5fdc:	f3 0f 1e fa          	endbr64 
    5fe0:	55                   	push   rbp
    5fe1:	48 89 e5             	mov    rbp,rsp
    5fe4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    5fe8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    5fec:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    5fef:	3c 24                	cmp    al,0x24
    5ff1:	0f 94 c0             	sete   al
    5ff4:	5d                   	pop    rbp
    5ff5:	c3                   	ret    

0000000000005ff6 <is_comment>:
    5ff6:	f3 0f 1e fa          	endbr64 
    5ffa:	55                   	push   rbp
    5ffb:	48 89 e5             	mov    rbp,rsp
    5ffe:	48 83 ec 10          	sub    rsp,0x10
    6002:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6006:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    600a:	be 23 00 00 00       	mov    esi,0x23
    600f:	48 89 c7             	mov    rdi,rax
    6012:	e8 49 c7 ff ff       	call   2760 <strchr@plt>
    6017:	48 85 c0             	test   rax,rax
    601a:	0f 95 c0             	setne  al
    601d:	c9                   	leave  
    601e:	c3                   	ret    

000000000000601f <rstrip>:
    601f:	f3 0f 1e fa          	endbr64 
    6023:	55                   	push   rbp
    6024:	48 89 e5             	mov    rbp,rsp
    6027:	48 83 ec 10          	sub    rsp,0x10
    602b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    602f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6033:	48 8d 35 0c 6b 00 00 	lea    rsi,[rip+0x6b0c]        # cb46 <_IO_stdin_used+0xb46>
    603a:	48 89 c7             	mov    rdi,rax
    603d:	e8 0e c8 ff ff       	call   2850 <strcspn@plt>
    6042:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6046:	48 01 d0             	add    rax,rdx
    6049:	c6 00 00             	mov    BYTE PTR [rax],0x0
    604c:	90                   	nop
    604d:	c9                   	leave  
    604e:	c3                   	ret    

000000000000604f <syntax_error>:
    604f:	f3 0f 1e fa          	endbr64 
    6053:	55                   	push   rbp
    6054:	48 89 e5             	mov    rbp,rsp
    6057:	48 83 ec 10          	sub    rsp,0x10
    605b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    605f:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    6062:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6066:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    6069:	89 c6                	mov    esi,eax
    606b:	48 8d 3d de 6c 00 00 	lea    rdi,[rip+0x6cde]        # cd50 <_IO_stdin_used+0xd50>
    6072:	b8 00 00 00 00       	mov    eax,0x0
    6077:	e8 44 c4 ff ff       	call   24c0 <printf@plt>
    607c:	bf 01 00 00 00       	mov    edi,0x1
    6081:	e8 ba c4 ff ff       	call   2540 <exit@plt>

0000000000006086 <rule_parser>:
    6086:	f3 0f 1e fa          	endbr64 
    608a:	55                   	push   rbp
    608b:	48 89 e5             	mov    rbp,rsp
    608e:	48 83 ec 40          	sub    rsp,0x40
    6092:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    6096:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    609d:	00 00 
    609f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    60a3:	31 c0                	xor    eax,eax
    60a5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    60a9:	48 83 c0 01          	add    rax,0x1
    60ad:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    60b1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60b5:	48 8d 35 5c 6a 00 00 	lea    rsi,[rip+0x6a5c]        # cb18 <_IO_stdin_used+0xb18>
    60bc:	48 89 c7             	mov    rdi,rax
    60bf:	e8 ec c4 ff ff       	call   25b0 <fopen@plt>
    60c4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    60c8:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
    60cd:	75 22                	jne    60f1 <rule_parser+0x6b>
    60cf:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60d3:	48 89 c6             	mov    rsi,rax
    60d6:	48 8d 3d 93 6c 00 00 	lea    rdi,[rip+0x6c93]        # cd70 <_IO_stdin_used+0xd70>
    60dd:	b8 00 00 00 00       	mov    eax,0x0
    60e2:	e8 d9 c3 ff ff       	call   24c0 <printf@plt>
    60e7:	bf 01 00 00 00       	mov    edi,0x1
    60ec:	e8 4f c4 ff ff       	call   2540 <exit@plt>
    60f1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    60f5:	48 89 c6             	mov    rsi,rax
    60f8:	48 8d 3d a4 6c 00 00 	lea    rdi,[rip+0x6ca4]        # cda3 <_IO_stdin_used+0xda3>
    60ff:	b8 00 00 00 00       	mov    eax,0x0
    6104:	e8 b7 c3 ff ff       	call   24c0 <printf@plt>
    6109:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6110:	00 
    6111:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    6118:	00 
    6119:	eb 54                	jmp    616f <rule_parser+0xe9>
    611b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    611f:	48 89 c7             	mov    rdi,rax
    6122:	e8 cf fe ff ff       	call   5ff6 <is_comment>
    6127:	84 c0                	test   al,al
    6129:	74 02                	je     612d <rule_parser+0xa7>
    612b:	eb 42                	jmp    616f <rule_parser+0xe9>
    612d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6131:	48 89 c7             	mov    rdi,rax
    6134:	e8 e6 fe ff ff       	call   601f <rstrip>
    6139:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    613d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6140:	0f b6 c0             	movzx  eax,al
    6143:	f7 d8                	neg    eax
    6145:	85 c0                	test   eax,eax
    6147:	75 02                	jne    614b <rule_parser+0xc5>
    6149:	eb 24                	jmp    616f <rule_parser+0xe9>
    614b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    614f:	48 8d 35 5e 6c 00 00 	lea    rsi,[rip+0x6c5e]        # cdb4 <_IO_stdin_used+0xdb4>
    6156:	48 89 c7             	mov    rdi,rax
    6159:	e8 82 c5 ff ff       	call   26e0 <strstr@plt>
    615e:	48 85 c0             	test   rax,rax
    6161:	74 0c                	je     616f <rule_parser+0xe9>
    6163:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    6167:	48 89 c7             	mov    rdi,rax
    616a:	e8 c9 38 00 00       	call   9a38 <line_parser>
    616f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6173:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    6177:	48 8d 45 d8          	lea    rax,[rbp-0x28]
    617b:	48 89 ce             	mov    rsi,rcx
    617e:	48 89 c7             	mov    rdi,rax
    6181:	e8 5a c6 ff ff       	call   27e0 <getline@plt>
    6186:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    618a:	48 83 7d f0 ff       	cmp    QWORD PTR [rbp-0x10],0xffffffffffffffff
    618f:	75 8a                	jne    611b <rule_parser+0x95>
    6191:	0f b6 05 88 3d 10 00 	movzx  eax,BYTE PTR [rip+0x103d88]        # 109f20 <debug_mode>
    6198:	84 c0                	test   al,al
    619a:	74 18                	je     61b4 <rule_parser+0x12e>
    619c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    61a0:	48 89 c6             	mov    rsi,rax
    61a3:	48 8d 3d 10 6c 00 00 	lea    rdi,[rip+0x6c10]        # cdba <_IO_stdin_used+0xdba>
    61aa:	b8 00 00 00 00       	mov    eax,0x0
    61af:	e8 0c c3 ff ff       	call   24c0 <printf@plt>
    61b4:	90                   	nop
    61b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    61b9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    61c0:	00 00 
    61c2:	74 05                	je     61c9 <rule_parser+0x143>
    61c4:	e8 e7 c5 ff ff       	call   27b0 <__stack_chk_fail@plt>
    61c9:	c9                   	leave  
    61ca:	c3                   	ret    

00000000000061cb <deny_conf_parser>:
    61cb:	f3 0f 1e fa          	endbr64 
    61cf:	55                   	push   rbp
    61d0:	48 89 e5             	mov    rbp,rsp
    61d3:	48 83 ec 50          	sub    rsp,0x50
    61d7:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    61db:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    61e2:	00 00 
    61e4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    61e8:	31 c0                	xor    eax,eax
    61ea:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    61ee:	48 8d 35 23 69 00 00 	lea    rsi,[rip+0x6923]        # cb18 <_IO_stdin_used+0xb18>
    61f5:	48 89 c7             	mov    rdi,rax
    61f8:	e8 b3 c3 ff ff       	call   25b0 <fopen@plt>
    61fd:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    6201:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
    6206:	75 22                	jne    622a <deny_conf_parser+0x5f>
    6208:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    620c:	48 89 c6             	mov    rsi,rax
    620f:	48 8d 3d ba 6b 00 00 	lea    rdi,[rip+0x6bba]        # cdd0 <_IO_stdin_used+0xdd0>
    6216:	b8 00 00 00 00       	mov    eax,0x0
    621b:	e8 a0 c2 ff ff       	call   24c0 <printf@plt>
    6220:	bf 01 00 00 00       	mov    edi,0x1
    6225:	e8 16 c3 ff ff       	call   2540 <exit@plt>
    622a:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
    6231:	00 
    6232:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    6239:	00 
    623a:	e9 9a 00 00 00       	jmp    62d9 <deny_conf_parser+0x10e>
    623f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6243:	48 89 c7             	mov    rdi,rax
    6246:	e8 d4 fd ff ff       	call   601f <rstrip>
    624b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    624f:	48 89 c7             	mov    rdi,rax
    6252:	e8 9f fd ff ff       	call   5ff6 <is_comment>
    6257:	84 c0                	test   al,al
    6259:	74 02                	je     625d <deny_conf_parser+0x92>
    625b:	eb 7c                	jmp    62d9 <deny_conf_parser+0x10e>
    625d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6261:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    6264:	0f b6 c0             	movzx  eax,al
    6267:	f7 d8                	neg    eax
    6269:	85 c0                	test   eax,eax
    626b:	75 02                	jne    626f <deny_conf_parser+0xa4>
    626d:	eb 6a                	jmp    62d9 <deny_conf_parser+0x10e>
    626f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6273:	48 8d 35 87 6b 00 00 	lea    rsi,[rip+0x6b87]        # ce01 <_IO_stdin_used+0xe01>
    627a:	48 89 c7             	mov    rdi,rax
    627d:	e8 5e c4 ff ff       	call   26e0 <strstr@plt>
    6282:	48 85 c0             	test   rax,rax
    6285:	74 52                	je     62d9 <deny_conf_parser+0x10e>
    6287:	8b 05 83 ad 00 00    	mov    eax,DWORD PTR [rip+0xad83]        # 11010 <blk_ipv4_len>
    628d:	83 c0 01             	add    eax,0x1
    6290:	89 05 7a ad 00 00    	mov    DWORD PTR [rip+0xad7a],eax        # 11010 <blk_ipv4_len>
    6296:	8b 05 74 ad 00 00    	mov    eax,DWORD PTR [rip+0xad74]        # 11010 <blk_ipv4_len>
    629c:	48 63 d0             	movsxd rdx,eax
    629f:	48 89 d0             	mov    rax,rdx
    62a2:	48 c1 e0 03          	shl    rax,0x3
    62a6:	48 01 d0             	add    rax,rdx
    62a9:	48 01 c0             	add    rax,rax
    62ac:	48 8d 15 2d d0 0e 00 	lea    rdx,[rip+0xed02d]        # f32e0 <blocked_ipv4_addrs>
    62b3:	48 01 d0             	add    rax,rdx
    62b6:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    62ba:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    62be:	48 83 c0 05          	add    rax,0x5
    62c2:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    62c6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    62ca:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    62ce:	48 89 d6             	mov    rsi,rdx
    62d1:	48 89 c7             	mov    rdi,rax
    62d4:	e8 17 c5 ff ff       	call   27f0 <strcpy@plt>
    62d9:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    62dd:	48 8d 4d d0          	lea    rcx,[rbp-0x30]
    62e1:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    62e5:	48 89 ce             	mov    rsi,rcx
    62e8:	48 89 c7             	mov    rdi,rax
    62eb:	e8 f0 c4 ff ff       	call   27e0 <getline@plt>
    62f0:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    62f4:	48 83 7d e0 ff       	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
    62f9:	0f 85 40 ff ff ff    	jne    623f <deny_conf_parser+0x74>
    62ff:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    6303:	48 85 c0             	test   rax,rax
    6306:	74 0c                	je     6314 <deny_conf_parser+0x149>
    6308:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    630c:	48 89 c7             	mov    rdi,rax
    630f:	e8 1c c3 ff ff       	call   2630 <free@plt>
    6314:	90                   	nop
    6315:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6319:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    6320:	00 00 
    6322:	74 05                	je     6329 <deny_conf_parser+0x15e>
    6324:	e8 87 c4 ff ff       	call   27b0 <__stack_chk_fail@plt>
    6329:	c9                   	leave  
    632a:	c3                   	ret    

000000000000632b <host_mon_parser>:
    632b:	f3 0f 1e fa          	endbr64 
    632f:	55                   	push   rbp
    6330:	48 89 e5             	mov    rbp,rsp
    6333:	48 83 ec 10          	sub    rsp,0x10
    6337:	48 8b 05 fa ac 00 00 	mov    rax,QWORD PTR [rip+0xacfa]        # 11038 <default_host_conf>
    633e:	48 8d 35 d3 67 00 00 	lea    rsi,[rip+0x67d3]        # cb18 <_IO_stdin_used+0xb18>
    6345:	48 89 c7             	mov    rdi,rax
    6348:	e8 63 c2 ff ff       	call   25b0 <fopen@plt>
    634d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    6351:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    6356:	75 25                	jne    637d <host_mon_parser+0x52>
    6358:	48 8b 05 d9 ac 00 00 	mov    rax,QWORD PTR [rip+0xacd9]        # 11038 <default_host_conf>
    635f:	48 89 c6             	mov    rsi,rax
    6362:	48 8d 3d 9d 6a 00 00 	lea    rdi,[rip+0x6a9d]        # ce06 <_IO_stdin_used+0xe06>
    6369:	b8 00 00 00 00       	mov    eax,0x0
    636e:	e8 4d c1 ff ff       	call   24c0 <printf@plt>
    6373:	bf 01 00 00 00       	mov    edi,0x1
    6378:	e8 c3 c1 ff ff       	call   2540 <exit@plt>
    637d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6381:	48 89 c7             	mov    rdi,rax
    6384:	e8 a7 c4 ff ff       	call   2830 <fclose@plt>
    6389:	90                   	nop
    638a:	c9                   	leave  
    638b:	c3                   	ret    

000000000000638c <test_encrypt>:
    638c:	f3 0f 1e fa          	endbr64 
    6390:	55                   	push   rbp
    6391:	48 89 e5             	mov    rbp,rsp
    6394:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6398:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    639c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    63a0:	0f b6 80 48 01 00 00 	movzx  eax,BYTE PTR [rax+0x148]
    63a7:	84 c0                	test   al,al
    63a9:	74 13                	je     63be <test_encrypt+0x32>
    63ab:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    63af:	0f b6 40 38          	movzx  eax,BYTE PTR [rax+0x38]
    63b3:	84 c0                	test   al,al
    63b5:	74 07                	je     63be <test_encrypt+0x32>
    63b7:	b8 00 00 00 00       	mov    eax,0x0
    63bc:	eb 05                	jmp    63c3 <test_encrypt+0x37>
    63be:	b8 01 00 00 00       	mov    eax,0x1
    63c3:	5d                   	pop    rbp
    63c4:	c3                   	ret    

00000000000063c5 <rule_app>:
    63c5:	f3 0f 1e fa          	endbr64 
    63c9:	55                   	push   rbp
    63ca:	48 89 e5             	mov    rbp,rsp
    63cd:	48 83 ec 20          	sub    rsp,0x20
    63d1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    63d5:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    63d9:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    63dd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63e1:	48 89 d6             	mov    rsi,rdx
    63e4:	48 89 c7             	mov    rdi,rax
    63e7:	e8 55 03 00 00       	call   6741 <r_engine>
    63ec:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
    63ef:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    63f3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    63f7:	48 89 d6             	mov    rsi,rdx
    63fa:	48 89 c7             	mov    rdi,rax
    63fd:	e8 94 49 00 00       	call   ad96 <d_engine>
    6402:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
    6405:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6409:	48 8b 88 78 03 00 00 	mov    rcx,QWORD PTR [rax+0x378]
    6410:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6414:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6418:	48 89 d6             	mov    rsi,rdx
    641b:	48 89 c7             	mov    rdi,rax
    641e:	ff d1                	call   rcx
    6420:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
    6423:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
    6427:	74 40                	je     6469 <rule_app+0xa4>
    6429:	80 7d fd 00          	cmp    BYTE PTR [rbp-0x3],0x0
    642d:	74 3a                	je     6469 <rule_app+0xa4>
    642f:	80 7d fe 00          	cmp    BYTE PTR [rbp-0x2],0x0
    6433:	74 34                	je     6469 <rule_app+0xa4>
    6435:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6439:	4c 8b 80 80 03 00 00 	mov    r8,QWORD PTR [rax+0x380]
    6440:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    6444:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6448:	ba 00 00 00 00       	mov    edx,0x0
    644d:	48 89 ce             	mov    rsi,rcx
    6450:	48 89 c7             	mov    rdi,rax
    6453:	41 ff d0             	call   r8
    6456:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    645a:	8b 40 3c             	mov    eax,DWORD PTR [rax+0x3c]
    645d:	8d 50 01             	lea    edx,[rax+0x1]
    6460:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6464:	89 50 3c             	mov    DWORD PTR [rax+0x3c],edx
    6467:	eb 17                	jmp    6480 <rule_app+0xbb>
    6469:	8b 05 b5 ab 00 00    	mov    eax,DWORD PTR [rip+0xabb5]        # 11024 <VIGIL_MODE>
    646f:	83 f8 02             	cmp    eax,0x2
    6472:	75 0c                	jne    6480 <rule_app+0xbb>
    6474:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    6478:	48 89 c7             	mov    rdi,rax
    647b:	e8 4e 25 00 00       	call   89ce <forward_packet>
    6480:	90                   	nop
    6481:	c9                   	leave  
    6482:	c3                   	ret    

0000000000006483 <rulemgr>:
    6483:	f3 0f 1e fa          	endbr64 
    6487:	55                   	push   rbp
    6488:	48 89 e5             	mov    rbp,rsp
    648b:	48 83 ec 20          	sub    rsp,0x20
    648f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    6493:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    649a:	e9 8f 02 00 00       	jmp    672e <rulemgr+0x2ab>
    649f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    64a2:	8d 50 01             	lea    edx,[rax+0x1]
    64a5:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
    64a8:	48 98                	cdqe   
    64aa:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    64b1:	48 8d 15 28 ae 00 00 	lea    rdx,[rip+0xae28]        # 112e0 <rules>
    64b8:	48 01 d0             	add    rax,rdx
    64bb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    64bf:	0f b6 05 06 3b 10 00 	movzx  eax,BYTE PTR [rip+0x103b06]        # 109fcc <in_test_mode>
    64c6:	84 c0                	test   al,al
    64c8:	74 30                	je     64fa <rulemgr+0x77>
    64ca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64ce:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64d1:	83 f8 46             	cmp    eax,0x46
    64d4:	75 0d                	jne    64e3 <rulemgr+0x60>
    64d6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64da:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    64e1:	eb 17                	jmp    64fa <rulemgr+0x77>
    64e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64e7:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    64ea:	83 f8 45             	cmp    eax,0x45
    64ed:	75 0b                	jne    64fa <rulemgr+0x77>
    64ef:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64f3:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    64fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    64fe:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6504:	83 f8 ff             	cmp    eax,0xffffffff
    6507:	74 19                	je     6522 <rulemgr+0x9f>
    6509:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    650d:	8b 50 2c             	mov    edx,DWORD PTR [rax+0x2c]
    6510:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6514:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    651a:	39 c2                	cmp    edx,eax
    651c:	0f 85 0c 02 00 00    	jne    672e <rulemgr+0x2ab>
    6522:	0f b6 05 57 ab 00 00 	movzx  eax,BYTE PTR [rip+0xab57]        # 11080 <demo_mode>
    6529:	84 c0                	test   al,al
    652b:	75 0f                	jne    653c <rulemgr+0xb9>
    652d:	8b 05 35 3a 10 00    	mov    eax,DWORD PTR [rip+0x103a35]        # 109f68 <vigil_location>
    6533:	83 f8 03             	cmp    eax,0x3
    6536:	0f 85 a1 00 00 00    	jne    65dd <rulemgr+0x15a>
    653c:	8b 05 26 3a 10 00    	mov    eax,DWORD PTR [rip+0x103a26]        # 109f68 <vigil_location>
    6542:	83 f8 03             	cmp    eax,0x3
    6545:	0f 85 e3 01 00 00    	jne    672e <rulemgr+0x2ab>
    654b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    654f:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6552:	83 f8 ff             	cmp    eax,0xffffffff
    6555:	74 16                	je     656d <rulemgr+0xea>
    6557:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    655b:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    655e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6562:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    6565:	39 c2                	cmp    edx,eax
    6567:	0f 85 c1 01 00 00    	jne    672e <rulemgr+0x2ab>
    656d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6571:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6574:	83 f8 ff             	cmp    eax,0xffffffff
    6577:	74 16                	je     658f <rulemgr+0x10c>
    6579:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    657d:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    6580:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6584:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    6587:	39 c2                	cmp    edx,eax
    6589:	0f 85 9f 01 00 00    	jne    672e <rulemgr+0x2ab>
    658f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6593:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6597:	48 89 d6             	mov    rsi,rdx
    659a:	48 89 c7             	mov    rdi,rax
    659d:	e8 97 03 00 00       	call   6939 <test_tcp_session_status>
    65a2:	84 c0                	test   al,al
    65a4:	0f 84 84 01 00 00    	je     672e <rulemgr+0x2ab>
    65aa:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65b2:	48 89 d6             	mov    rsi,rdx
    65b5:	48 89 c7             	mov    rdi,rax
    65b8:	e8 cf fd ff ff       	call   638c <test_encrypt>
    65bd:	84 c0                	test   al,al
    65bf:	0f 84 69 01 00 00    	je     672e <rulemgr+0x2ab>
    65c5:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    65c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65cd:	48 89 d6             	mov    rsi,rdx
    65d0:	48 89 c7             	mov    rdi,rax
    65d3:	e8 ed fd ff ff       	call   63c5 <rule_app>
    65d8:	e9 51 01 00 00       	jmp    672e <rulemgr+0x2ab>
    65dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65e1:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    65e4:	83 f8 47             	cmp    eax,0x47
    65e7:	74 16                	je     65ff <rulemgr+0x17c>
    65e9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    65ed:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    65f0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    65f4:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    65f7:	39 c2                	cmp    edx,eax
    65f9:	0f 85 2f 01 00 00    	jne    672e <rulemgr+0x2ab>
    65ff:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6603:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6609:	3d 80 00 00 00       	cmp    eax,0x80
    660e:	75 18                	jne    6628 <rulemgr+0x1a5>
    6610:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6614:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6618:	48 89 d6             	mov    rsi,rdx
    661b:	48 89 c7             	mov    rdi,rax
    661e:	e8 a2 fd ff ff       	call   63c5 <rule_app>
    6623:	e9 06 01 00 00       	jmp    672e <rulemgr+0x2ab>
    6628:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    662c:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    662f:	83 f8 47             	cmp    eax,0x47
    6632:	75 7d                	jne    66b1 <rulemgr+0x22e>
    6634:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6638:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    663b:	83 f8 ff             	cmp    eax,0xffffffff
    663e:	74 28                	je     6668 <rulemgr+0x1e5>
    6640:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6644:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    6647:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    664b:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    664e:	39 c2                	cmp    edx,eax
    6650:	74 16                	je     6668 <rulemgr+0x1e5>
    6652:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6656:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    6659:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    665d:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    6660:	39 c2                	cmp    edx,eax
    6662:	0f 85 c6 00 00 00    	jne    672e <rulemgr+0x2ab>
    6668:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    666c:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    666f:	83 f8 ff             	cmp    eax,0xffffffff
    6672:	74 28                	je     669c <rulemgr+0x219>
    6674:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    6678:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    667b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    667f:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6682:	39 c2                	cmp    edx,eax
    6684:	74 16                	je     669c <rulemgr+0x219>
    6686:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    668a:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    668d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6691:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    6694:	39 c2                	cmp    edx,eax
    6696:	0f 85 92 00 00 00    	jne    672e <rulemgr+0x2ab>
    669c:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    66a0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66a4:	48 89 d6             	mov    rsi,rdx
    66a7:	48 89 c7             	mov    rdi,rax
    66aa:	e8 16 fd ff ff       	call   63c5 <rule_app>
    66af:	eb 7d                	jmp    672e <rulemgr+0x2ab>
    66b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66b5:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    66b8:	83 f8 ff             	cmp    eax,0xffffffff
    66bb:	74 12                	je     66cf <rulemgr+0x24c>
    66bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66c1:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
    66c4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66c8:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    66cb:	39 c2                	cmp    edx,eax
    66cd:	75 5f                	jne    672e <rulemgr+0x2ab>
    66cf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66d3:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    66d6:	83 f8 ff             	cmp    eax,0xffffffff
    66d9:	74 12                	je     66ed <rulemgr+0x26a>
    66db:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66df:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    66e2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    66e6:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
    66e9:	39 c2                	cmp    edx,eax
    66eb:	75 41                	jne    672e <rulemgr+0x2ab>
    66ed:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    66f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    66f5:	48 89 d6             	mov    rsi,rdx
    66f8:	48 89 c7             	mov    rdi,rax
    66fb:	e8 39 02 00 00       	call   6939 <test_tcp_session_status>
    6700:	84 c0                	test   al,al
    6702:	74 2a                	je     672e <rulemgr+0x2ab>
    6704:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    6708:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    670c:	48 89 d6             	mov    rsi,rdx
    670f:	48 89 c7             	mov    rdi,rax
    6712:	e8 75 fc ff ff       	call   638c <test_encrypt>
    6717:	84 c0                	test   al,al
    6719:	74 13                	je     672e <rulemgr+0x2ab>
    671b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    671f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6723:	48 89 d6             	mov    rsi,rdx
    6726:	48 89 c7             	mov    rdi,rax
    6729:	e8 97 fc ff ff       	call   63c5 <rule_app>
    672e:	8b 05 e0 a8 00 00    	mov    eax,DWORD PTR [rip+0xa8e0]        # 11014 <num_rules>
    6734:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    6737:	0f 8e 62 fd ff ff    	jle    649f <rulemgr+0x1c>
    673d:	90                   	nop
    673e:	90                   	nop
    673f:	c9                   	leave  
    6740:	c3                   	ret    

0000000000006741 <r_engine>:
    6741:	f3 0f 1e fa          	endbr64 
    6745:	55                   	push   rbp
    6746:	48 89 e5             	mov    rbp,rsp
    6749:	48 83 ec 10          	sub    rsp,0x10
    674d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6751:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6755:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6759:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    675c:	3d 80 00 00 00       	cmp    eax,0x80
    6761:	0f 85 d9 00 00 00    	jne    6840 <r_engine+0xff>
    6767:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    676b:	0f b6 80 6f 03 00 00 	movzx  eax,BYTE PTR [rax+0x36f]
    6772:	84 c0                	test   al,al
    6774:	74 25                	je     679b <r_engine+0x5a>
    6776:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    677a:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    677e:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
    6782:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6786:	0f b6 80 73 03 00 00 	movzx  eax,BYTE PTR [rax+0x373]
    678d:	38 c2                	cmp    dl,al
    678f:	74 0a                	je     679b <r_engine+0x5a>
    6791:	b8 00 00 00 00       	mov    eax,0x0
    6796:	e9 9c 01 00 00       	jmp    6937 <r_engine+0x1f6>
    679b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    679f:	0f b6 80 71 03 00 00 	movzx  eax,BYTE PTR [rax+0x371]
    67a6:	84 c0                	test   al,al
    67a8:	74 26                	je     67d0 <r_engine+0x8f>
    67aa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67ae:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67b2:	0f b7 50 04          	movzx  edx,WORD PTR [rax+0x4]
    67b6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67ba:	0f b7 80 76 03 00 00 	movzx  eax,WORD PTR [rax+0x376]
    67c1:	66 39 c2             	cmp    dx,ax
    67c4:	74 0a                	je     67d0 <r_engine+0x8f>
    67c6:	b8 00 00 00 00       	mov    eax,0x0
    67cb:	e9 67 01 00 00       	jmp    6937 <r_engine+0x1f6>
    67d0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67d4:	0f b6 80 70 03 00 00 	movzx  eax,BYTE PTR [rax+0x370]
    67db:	84 c0                	test   al,al
    67dd:	74 26                	je     6805 <r_engine+0xc4>
    67df:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    67e3:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    67e7:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
    67eb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    67ef:	0f b7 80 74 03 00 00 	movzx  eax,WORD PTR [rax+0x374]
    67f6:	66 39 c2             	cmp    dx,ax
    67f9:	74 0a                	je     6805 <r_engine+0xc4>
    67fb:	b8 00 00 00 00       	mov    eax,0x0
    6800:	e9 32 01 00 00       	jmp    6937 <r_engine+0x1f6>
    6805:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6809:	0f b6 80 6e 03 00 00 	movzx  eax,BYTE PTR [rax+0x36e]
    6810:	84 c0                	test   al,al
    6812:	0f 84 dc 00 00 00    	je     68f4 <r_engine+0x1b3>
    6818:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    681c:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
    6820:	0f b6 10             	movzx  edx,BYTE PTR [rax]
    6823:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6827:	0f b6 80 72 03 00 00 	movzx  eax,BYTE PTR [rax+0x372]
    682e:	38 c2                	cmp    dl,al
    6830:	0f 84 be 00 00 00    	je     68f4 <r_engine+0x1b3>
    6836:	b8 00 00 00 00       	mov    eax,0x0
    683b:	e9 f7 00 00 00       	jmp    6937 <r_engine+0x1f6>
    6840:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6844:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    6847:	83 f8 7e             	cmp    eax,0x7e
    684a:	0f 85 a4 00 00 00    	jne    68f4 <r_engine+0x1b3>
    6850:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6854:	0f b6 80 51 03 00 00 	movzx  eax,BYTE PTR [rax+0x351]
    685b:	84 c0                	test   al,al
    685d:	74 2e                	je     688d <r_engine+0x14c>
    685f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6863:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    6867:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
    686a:	89 c7                	mov    edi,eax
    686c:	e8 3f be ff ff       	call   26b0 <ntohl@plt>
    6871:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    6875:	0f b7 92 5c 03 00 00 	movzx  edx,WORD PTR [rdx+0x35c]
    687c:	0f b7 d2             	movzx  edx,dx
    687f:	39 d0                	cmp    eax,edx
    6881:	74 0a                	je     688d <r_engine+0x14c>
    6883:	b8 00 00 00 00       	mov    eax,0x0
    6888:	e9 aa 00 00 00       	jmp    6937 <r_engine+0x1f6>
    688d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6891:	0f b6 80 50 03 00 00 	movzx  eax,BYTE PTR [rax+0x350]
    6898:	84 c0                	test   al,al
    689a:	74 29                	je     68c5 <r_engine+0x184>
    689c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68a0:	48 8d 90 53 03 00 00 	lea    rdx,[rax+0x353]
    68a7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68ab:	48 83 c0 68          	add    rax,0x68
    68af:	48 89 d6             	mov    rsi,rdx
    68b2:	48 89 c7             	mov    rdi,rax
    68b5:	e8 06 bf ff ff       	call   27c0 <strcmp@plt>
    68ba:	85 c0                	test   eax,eax
    68bc:	74 07                	je     68c5 <r_engine+0x184>
    68be:	b8 00 00 00 00       	mov    eax,0x0
    68c3:	eb 72                	jmp    6937 <r_engine+0x1f6>
    68c5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68c9:	0f b6 80 52 03 00 00 	movzx  eax,BYTE PTR [rax+0x352]
    68d0:	84 c0                	test   al,al
    68d2:	74 20                	je     68f4 <r_engine+0x1b3>
    68d4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68d8:	48 8b 40 58          	mov    rax,QWORD PTR [rax+0x58]
    68dc:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    68df:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    68e3:	8b 80 60 03 00 00    	mov    eax,DWORD PTR [rax+0x360]
    68e9:	39 c2                	cmp    edx,eax
    68eb:	74 07                	je     68f4 <r_engine+0x1b3>
    68ed:	b8 00 00 00 00       	mov    eax,0x0
    68f2:	eb 43                	jmp    6937 <r_engine+0x1f6>
    68f4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    68f8:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    68fc:	48 85 c0             	test   rax,rax
    68ff:	74 31                	je     6932 <r_engine+0x1f1>
    6901:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6905:	0f b6 80 69 03 00 00 	movzx  eax,BYTE PTR [rax+0x369]
    690c:	84 c0                	test   al,al
    690e:	74 22                	je     6932 <r_engine+0x1f1>
    6910:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6914:	48 8b 40 50          	mov    rax,QWORD PTR [rax+0x50]
    6918:	0f b6 50 08          	movzx  edx,BYTE PTR [rax+0x8]
    691c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6920:	0f b6 80 6c 03 00 00 	movzx  eax,BYTE PTR [rax+0x36c]
    6927:	38 c2                	cmp    dl,al
    6929:	74 07                	je     6932 <r_engine+0x1f1>
    692b:	b8 00 00 00 00       	mov    eax,0x0
    6930:	eb 05                	jmp    6937 <r_engine+0x1f6>
    6932:	b8 01 00 00 00       	mov    eax,0x1
    6937:	c9                   	leave  
    6938:	c3                   	ret    

0000000000006939 <test_tcp_session_status>:
    6939:	f3 0f 1e fa          	endbr64 
    693d:	55                   	push   rbp
    693e:	48 89 e5             	mov    rbp,rsp
    6941:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    6945:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    6949:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    694d:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    6953:	83 f8 7e             	cmp    eax,0x7e
    6956:	75 34                	jne    698c <test_tcp_session_status+0x53>
    6958:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    695c:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    695f:	83 f8 7e             	cmp    eax,0x7e
    6962:	75 28                	jne    698c <test_tcp_session_status+0x53>
    6964:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    6968:	8b 80 48 03 00 00    	mov    eax,DWORD PTR [rax+0x348]
    696e:	83 f8 01             	cmp    eax,0x1
    6971:	75 12                	jne    6985 <test_tcp_session_status+0x4c>
    6973:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    6977:	8b 40 70             	mov    eax,DWORD PTR [rax+0x70]
    697a:	85 c0                	test   eax,eax
    697c:	75 07                	jne    6985 <test_tcp_session_status+0x4c>
    697e:	b8 00 00 00 00       	mov    eax,0x0
    6983:	eb 0c                	jmp    6991 <test_tcp_session_status+0x58>
    6985:	b8 01 00 00 00       	mov    eax,0x1
    698a:	eb 05                	jmp    6991 <test_tcp_session_status+0x58>
    698c:	b8 01 00 00 00       	mov    eax,0x1
    6991:	5d                   	pop    rbp
    6992:	c3                   	ret    

0000000000006993 <main>:
    6993:	f3 0f 1e fa          	endbr64 
    6997:	55                   	push   rbp
    6998:	48 89 e5             	mov    rbp,rsp
    699b:	48 81 ec 40 08 00 00 	sub    rsp,0x840
    69a2:	89 bd cc f7 ff ff    	mov    DWORD PTR [rbp-0x834],edi
    69a8:	48 89 b5 c0 f7 ff ff 	mov    QWORD PTR [rbp-0x840],rsi
    69af:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    69b6:	00 00 
    69b8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    69bc:	31 c0                	xor    eax,eax
    69be:	b8 00 00 00 00       	mov    eax,0x0
    69c3:	e8 ff 4d 00 00       	call   b7c7 <load_fn_mem_map>
    69c8:	48 8d 35 b4 02 00 00 	lea    rsi,[rip+0x2b4]        # 6c83 <sigint_processor>
    69cf:	bf 02 00 00 00       	mov    edi,0x2
    69d4:	e8 77 bd ff ff       	call   2750 <signal@plt>
    69d9:	48 8d 05 6a 4a 00 00 	lea    rax,[rip+0x4a6a]        # b44a <crash_handler>
    69e0:	48 89 c6             	mov    rsi,rax
    69e3:	bf 0b 00 00 00       	mov    edi,0xb
    69e8:	e8 63 bd ff ff       	call   2750 <signal@plt>
    69ed:	b8 00 00 00 00       	mov    eax,0x0
    69f2:	e8 b9 08 00 00       	call   72b0 <print_logo>
    69f7:	b8 00 00 00 00       	mov    eax,0x0
    69fc:	e8 fd 06 00 00       	call   70fe <print_cpu_info>
    6a01:	c7 05 9d a8 00 00 01 	mov    DWORD PTR [rip+0xa89d],0x1        # 112a8 <is_running>
    6a08:	00 00 00 
    6a0b:	b8 00 00 00 00       	mov    eax,0x0
    6a10:	e8 3f 4f 00 00       	call   b954 <pps_monitor>
    6a15:	bf 00 00 00 00       	mov    edi,0x0
    6a1a:	e8 d1 be ff ff       	call   28f0 <time@plt>
    6a1f:	48 89 05 8a a8 00 00 	mov    QWORD PTR [rip+0xa88a],rax        # 112b0 <last_clean_time>
    6a26:	83 bd cc f7 ff ff 01 	cmp    DWORD PTR [rbp-0x834],0x1
    6a2d:	0f 85 e3 00 00 00    	jne    6b16 <main+0x183>
    6a33:	b8 00 00 00 00       	mov    eax,0x0
    6a38:	e8 97 06 00 00       	call   70d4 <print_help_and_exit>
    6a3d:	e9 d4 00 00 00       	jmp    6b16 <main+0x183>
    6a42:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6a48:	83 e8 64             	sub    eax,0x64
    6a4b:	83 f8 10             	cmp    eax,0x10
    6a4e:	0f 87 9e 00 00 00    	ja     6af2 <main+0x15f>
    6a54:	89 c0                	mov    eax,eax
    6a56:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    6a5d:	00 
    6a5e:	48 8d 05 3f 65 00 00 	lea    rax,[rip+0x653f]        # cfa4 <_IO_stdin_used+0xfa4>
    6a65:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    6a68:	48 98                	cdqe   
    6a6a:	48 8d 15 33 65 00 00 	lea    rdx,[rip+0x6533]        # cfa4 <_IO_stdin_used+0xfa4>
    6a71:	48 01 d0             	add    rax,rdx
    6a74:	3e ff e0             	notrack jmp rax
    6a77:	c6 05 a2 34 10 00 01 	mov    BYTE PTR [rip+0x1034a2],0x1        # 109f20 <debug_mode>
    6a7e:	e9 93 00 00 00       	jmp    6b16 <main+0x183>
    6a83:	b8 00 00 00 00       	mov    eax,0x0
    6a88:	e8 47 06 00 00       	call   70d4 <print_help_and_exit>
    6a8d:	e9 84 00 00 00       	jmp    6b16 <main+0x183>
    6a92:	48 8b 05 c7 a5 00 00 	mov    rax,QWORD PTR [rip+0xa5c7]        # 11060 <optarg@@GLIBC_2.2.5>
    6a99:	48 89 85 e0 f7 ff ff 	mov    QWORD PTR [rbp-0x820],rax
    6aa0:	eb 74                	jmp    6b16 <main+0x183>
    6aa2:	c6 05 bb 34 10 00 01 	mov    BYTE PTR [rip+0x1034bb],0x1        # 109f64 <packet_print>
    6aa9:	eb 6b                	jmp    6b16 <main+0x183>
    6aab:	c6 05 b3 34 10 00 01 	mov    BYTE PTR [rip+0x1034b3],0x1        # 109f65 <quiet_exit>
    6ab2:	eb 62                	jmp    6b16 <main+0x183>
    6ab4:	48 8d 3d 65 63 00 00 	lea    rdi,[rip+0x6365]        # ce20 <_IO_stdin_used+0xe20>
    6abb:	e8 60 ba ff ff       	call   2520 <puts@plt>
    6ac0:	bf 0a 00 00 00       	mov    edi,0xa
    6ac5:	e8 f6 bb ff ff       	call   26c0 <sleep@plt>
    6aca:	c6 05 af a5 00 00 01 	mov    BYTE PTR [rip+0xa5af],0x1        # 11080 <demo_mode>
    6ad1:	eb 43                	jmp    6b16 <main+0x183>
    6ad3:	48 8d 3d 86 63 00 00 	lea    rdi,[rip+0x6386]        # ce60 <_IO_stdin_used+0xe60>
    6ada:	e8 41 ba ff ff       	call   2520 <puts@plt>
    6adf:	bf 0a 00 00 00       	mov    edi,0xa
    6ae4:	e8 d7 bb ff ff       	call   26c0 <sleep@plt>
    6ae9:	c6 05 dc 34 10 00 01 	mov    BYTE PTR [rip+0x1034dc],0x1        # 109fcc <in_test_mode>
    6af0:	eb 24                	jmp    6b16 <main+0x183>
    6af2:	8b 85 dc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x824]
    6af8:	89 c6                	mov    esi,eax
    6afa:	48 8d 3d 93 63 00 00 	lea    rdi,[rip+0x6393]        # ce94 <_IO_stdin_used+0xe94>
    6b01:	b8 00 00 00 00       	mov    eax,0x0
    6b06:	e8 b5 b9 ff ff       	call   24c0 <printf@plt>
    6b0b:	b8 00 00 00 00       	mov    eax,0x0
    6b10:	e8 bf 05 00 00       	call   70d4 <print_help_and_exit>
    6b15:	90                   	nop
    6b16:	48 8b 8d c0 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x840]
    6b1d:	8b 85 cc f7 ff ff    	mov    eax,DWORD PTR [rbp-0x834]
    6b23:	48 8d 15 80 63 00 00 	lea    rdx,[rip+0x6380]        # ceaa <_IO_stdin_used+0xeaa>
    6b2a:	48 89 ce             	mov    rsi,rcx
    6b2d:	89 c7                	mov    edi,eax
    6b2f:	e8 3c ba ff ff       	call   2570 <getopt@plt>
    6b34:	89 85 dc f7 ff ff    	mov    DWORD PTR [rbp-0x824],eax
    6b3a:	83 bd dc f7 ff ff ff 	cmp    DWORD PTR [rbp-0x824],0xffffffff
    6b41:	0f 85 fb fe ff ff    	jne    6a42 <main+0xaf>
    6b47:	48 8d 3d 65 63 00 00 	lea    rdi,[rip+0x6365]        # ceb3 <_IO_stdin_used+0xeb3>
    6b4e:	e8 78 f6 ff ff       	call   61cb <deny_conf_parser>
    6b53:	48 8d 3d 6e 63 00 00 	lea    rdi,[rip+0x636e]        # cec8 <_IO_stdin_used+0xec8>
    6b5a:	e8 c1 b9 ff ff       	call   2520 <puts@plt>
    6b5f:	48 8d 3d 9d 63 00 00 	lea    rdi,[rip+0x639d]        # cf03 <_IO_stdin_used+0xf03>
    6b66:	e8 34 ee ff ff       	call   599f <rule_library_parser>
    6b6b:	48 8d 3d a7 63 00 00 	lea    rdi,[rip+0x63a7]        # cf19 <_IO_stdin_used+0xf19>
    6b72:	e8 a9 b9 ff ff       	call   2520 <puts@plt>
    6b77:	b8 00 00 00 00       	mov    eax,0x0
    6b7c:	e8 ef 3d 00 00       	call   a970 <rule_processor>
    6b81:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6b88:	48 89 c6             	mov    rsi,rax
    6b8b:	48 8d 3d 9e 63 00 00 	lea    rdi,[rip+0x639e]        # cf30 <_IO_stdin_used+0xf30>
    6b92:	b8 00 00 00 00       	mov    eax,0x0
    6b97:	e8 24 b9 ff ff       	call   24c0 <printf@plt>
    6b9c:	48 c7 85 f0 f7 ff ff 	mov    QWORD PTR [rbp-0x810],0x0
    6ba3:	00 00 00 00 
    6ba7:	48 c7 85 f8 f7 ff ff 	mov    QWORD PTR [rbp-0x808],0x0
    6bae:	00 00 00 00 
    6bb2:	48 8d 95 00 f8 ff ff 	lea    rdx,[rbp-0x800]
    6bb9:	b8 00 00 00 00       	mov    eax,0x0
    6bbe:	b9 fd 00 00 00       	mov    ecx,0xfd
    6bc3:	48 89 d7             	mov    rdi,rdx
    6bc6:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
    6bc9:	48 89 fa             	mov    rdx,rdi
    6bcc:	89 02                	mov    DWORD PTR [rdx],eax
    6bce:	48 83 c2 04          	add    rdx,0x4
    6bd2:	66 89 02             	mov    WORD PTR [rdx],ax
    6bd5:	48 83 c2 02          	add    rdx,0x2
    6bd9:	48 8d 95 f0 f7 ff ff 	lea    rdx,[rbp-0x810]
    6be0:	48 8b 85 e0 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x820]
    6be7:	49 89 d0             	mov    r8,rdx
    6bea:	b9 64 00 00 00       	mov    ecx,0x64
    6bef:	ba 01 00 00 00       	mov    edx,0x1
    6bf4:	be 00 04 00 00       	mov    esi,0x400
    6bf9:	48 89 c7             	mov    rdi,rax
    6bfc:	e8 cf b9 ff ff       	call   25d0 <pcap_open_live@plt>
    6c01:	48 89 85 e8 f7 ff ff 	mov    QWORD PTR [rbp-0x818],rax
    6c08:	48 83 bd e8 f7 ff ff 	cmp    QWORD PTR [rbp-0x818],0x0
    6c0f:	00 
    6c10:	75 16                	jne    6c28 <main+0x295>
    6c12:	48 8d 3d 38 63 00 00 	lea    rdi,[rip+0x6338]        # cf51 <_IO_stdin_used+0xf51>
    6c19:	e8 72 bc ff ff       	call   2890 <perror@plt>
    6c1e:	bf 01 00 00 00       	mov    edi,0x1
    6c23:	e8 18 b9 ff ff       	call   2540 <exit@plt>
    6c28:	b8 00 00 00 00       	mov    eax,0x0
    6c2d:	e8 72 45 00 00       	call   b1a4 <collect_scripts>
    6c32:	b8 00 00 00 00       	mov    eax,0x0
    6c37:	e8 8b 06 00 00       	call   72c7 <start_nsh_server>
    6c3c:	48 8d 3d 2d 63 00 00 	lea    rdi,[rip+0x632d]        # cf70 <_IO_stdin_used+0xf70>
    6c43:	e8 d8 b8 ff ff       	call   2520 <puts@plt>
    6c48:	48 8b 85 e8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x818]
    6c4f:	b9 00 00 00 00       	mov    ecx,0x0
    6c54:	48 8d 15 c8 bd ff ff 	lea    rdx,[rip+0xffffffffffffbdc8]        # 2a23 <pktmgr>
    6c5b:	be ff ff ff ff       	mov    esi,0xffffffff
    6c60:	48 89 c7             	mov    rdi,rax
    6c63:	e8 08 bc ff ff       	call   2870 <pcap_loop@plt>
    6c68:	b8 00 00 00 00       	mov    eax,0x0
    6c6d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    6c71:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    6c78:	00 00 
    6c7a:	74 05                	je     6c81 <main+0x2ee>
    6c7c:	e8 2f bb ff ff       	call   27b0 <__stack_chk_fail@plt>
    6c81:	c9                   	leave  
    6c82:	c3                   	ret    

0000000000006c83 <sigint_processor>:
    6c83:	f3 0f 1e fa          	endbr64 
    6c87:	55                   	push   rbp
    6c88:	48 89 e5             	mov    rbp,rsp
    6c8b:	41 54                	push   r12
    6c8d:	53                   	push   rbx
    6c8e:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    6c95:	89 bd bc fe ff ff    	mov    DWORD PTR [rbp-0x144],edi
    6c9b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    6ca2:	00 00 
    6ca4:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    6ca8:	31 c0                	xor    eax,eax
    6caa:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    6cb1:	00 00 00 
    6cb4:	48 8d 85 e0 fe ff ff 	lea    rax,[rbp-0x120]
    6cbb:	48 89 c7             	mov    rdi,rax
    6cbe:	e8 da c7 ff ff       	call   349d <cb_get_formatted_time>
    6cc3:	48 8d 95 e0 fe ff ff 	lea    rdx,[rbp-0x120]
    6cca:	8b 85 bc fe ff ff    	mov    eax,DWORD PTR [rbp-0x144]
    6cd0:	89 c6                	mov    esi,eax
    6cd2:	48 8d 3d 0f 63 00 00 	lea    rdi,[rip+0x630f]        # cfe8 <_IO_stdin_used+0xfe8>
    6cd9:	b8 00 00 00 00       	mov    eax,0x0
    6cde:	e8 dd b7 ff ff       	call   24c0 <printf@plt>
    6ce3:	48 8d 3d 23 63 00 00 	lea    rdi,[rip+0x6323]        # d00d <_IO_stdin_used+0x100d>
    6cea:	e8 a1 bb ff ff       	call   2890 <perror@plt>
    6cef:	0f b6 05 6f 32 10 00 	movzx  eax,BYTE PTR [rip+0x10326f]        # 109f65 <quiet_exit>
    6cf6:	83 f0 01             	xor    eax,0x1
    6cf9:	84 c0                	test   al,al
    6cfb:	0f 84 2e 02 00 00    	je     6f2f <sigint_processor+0x2ac>
    6d01:	8b 05 9d a5 00 00    	mov    eax,DWORD PTR [rip+0xa59d]        # 112a4 <total_pkt_captured>
    6d07:	89 c6                	mov    esi,eax
    6d09:	48 8d 3d fe 62 00 00 	lea    rdi,[rip+0x62fe]        # d00e <_IO_stdin_used+0x100e>
    6d10:	b8 00 00 00 00       	mov    eax,0x0
    6d15:	e8 a6 b7 ff ff       	call   24c0 <printf@plt>
    6d1a:	48 8d 3d 07 63 00 00 	lea    rdi,[rip+0x6307]        # d028 <_IO_stdin_used+0x1028>
    6d21:	e8 fa b7 ff ff       	call   2520 <puts@plt>
    6d26:	c7 85 c4 fe ff ff 00 	mov    DWORD PTR [rbp-0x13c],0x0
    6d2d:	00 00 00 
    6d30:	e9 e8 01 00 00       	jmp    6f1d <sigint_processor+0x29a>
    6d35:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d3b:	48 63 d0             	movsxd rdx,eax
    6d3e:	48 89 d0             	mov    rax,rdx
    6d41:	48 c1 e0 02          	shl    rax,0x2
    6d45:	48 01 d0             	add    rax,rdx
    6d48:	48 c1 e0 03          	shl    rax,0x3
    6d4c:	48 01 d0             	add    rax,rdx
    6d4f:	48 c1 e0 04          	shl    rax,0x4
    6d53:	48 89 c2             	mov    rdx,rax
    6d56:	48 8d 05 33 ca 0e 00 	lea    rax,[rip+0xeca33]        # f3790 <watchlist+0x270>
    6d5d:	44 8b 1c 02          	mov    r11d,DWORD PTR [rdx+rax*1]
    6d61:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d67:	48 63 d0             	movsxd rdx,eax
    6d6a:	48 89 d0             	mov    rax,rdx
    6d6d:	48 c1 e0 02          	shl    rax,0x2
    6d71:	48 01 d0             	add    rax,rdx
    6d74:	48 c1 e0 03          	shl    rax,0x3
    6d78:	48 01 d0             	add    rax,rdx
    6d7b:	48 c1 e0 04          	shl    rax,0x4
    6d7f:	48 89 c2             	mov    rdx,rax
    6d82:	48 8d 05 fb c9 0e 00 	lea    rax,[rip+0xec9fb]        # f3784 <watchlist+0x264>
    6d89:	44 8b 14 02          	mov    r10d,DWORD PTR [rdx+rax*1]
    6d8d:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6d93:	48 63 d0             	movsxd rdx,eax
    6d96:	48 89 d0             	mov    rax,rdx
    6d99:	48 c1 e0 02          	shl    rax,0x2
    6d9d:	48 01 d0             	add    rax,rdx
    6da0:	48 c1 e0 03          	shl    rax,0x3
    6da4:	48 01 d0             	add    rax,rdx
    6da7:	48 c1 e0 04          	shl    rax,0x4
    6dab:	48 89 c2             	mov    rdx,rax
    6dae:	48 8d 05 d7 c9 0e 00 	lea    rax,[rip+0xec9d7]        # f378c <watchlist+0x26c>
    6db5:	44 8b 0c 02          	mov    r9d,DWORD PTR [rdx+rax*1]
    6db9:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6dbf:	48 63 d0             	movsxd rdx,eax
    6dc2:	48 89 d0             	mov    rax,rdx
    6dc5:	48 c1 e0 02          	shl    rax,0x2
    6dc9:	48 01 d0             	add    rax,rdx
    6dcc:	48 c1 e0 03          	shl    rax,0x3
    6dd0:	48 01 d0             	add    rax,rdx
    6dd3:	48 c1 e0 04          	shl    rax,0x4
    6dd7:	48 89 c2             	mov    rdx,rax
    6dda:	48 8d 05 9f c9 0e 00 	lea    rax,[rip+0xec99f]        # f3780 <watchlist+0x260>
    6de1:	44 8b 04 02          	mov    r8d,DWORD PTR [rdx+rax*1]
    6de5:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6deb:	48 63 d0             	movsxd rdx,eax
    6dee:	48 89 d0             	mov    rax,rdx
    6df1:	48 c1 e0 02          	shl    rax,0x2
    6df5:	48 01 d0             	add    rax,rdx
    6df8:	48 c1 e0 03          	shl    rax,0x3
    6dfc:	48 01 d0             	add    rax,rdx
    6dff:	48 c1 e0 04          	shl    rax,0x4
    6e03:	48 89 c2             	mov    rdx,rax
    6e06:	48 8d 05 7b c9 0e 00 	lea    rax,[rip+0xec97b]        # f3788 <watchlist+0x268>
    6e0d:	8b 3c 02             	mov    edi,DWORD PTR [rdx+rax*1]
    6e10:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e16:	48 63 d0             	movsxd rdx,eax
    6e19:	48 89 d0             	mov    rax,rdx
    6e1c:	48 c1 e0 02          	shl    rax,0x2
    6e20:	48 01 d0             	add    rax,rdx
    6e23:	48 c1 e0 03          	shl    rax,0x3
    6e27:	48 01 d0             	add    rax,rdx
    6e2a:	48 c1 e0 04          	shl    rax,0x4
    6e2e:	48 89 c2             	mov    rdx,rax
    6e31:	48 8d 05 44 c9 0e 00 	lea    rax,[rip+0xec944]        # f377c <watchlist+0x25c>
    6e38:	44 8b 24 02          	mov    r12d,DWORD PTR [rdx+rax*1]
    6e3c:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e42:	48 63 d0             	movsxd rdx,eax
    6e45:	48 89 d0             	mov    rax,rdx
    6e48:	48 c1 e0 02          	shl    rax,0x2
    6e4c:	48 01 d0             	add    rax,rdx
    6e4f:	48 c1 e0 03          	shl    rax,0x3
    6e53:	48 01 d0             	add    rax,rdx
    6e56:	48 c1 e0 04          	shl    rax,0x4
    6e5a:	48 89 c2             	mov    rdx,rax
    6e5d:	48 8d 05 38 c9 0e 00 	lea    rax,[rip+0xec938]        # f379c <watchlist+0x27c>
    6e64:	8b 1c 02             	mov    ebx,DWORD PTR [rdx+rax*1]
    6e67:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e6d:	48 63 d0             	movsxd rdx,eax
    6e70:	48 89 d0             	mov    rax,rdx
    6e73:	48 c1 e0 02          	shl    rax,0x2
    6e77:	48 01 d0             	add    rax,rdx
    6e7a:	48 c1 e0 03          	shl    rax,0x3
    6e7e:	48 01 d0             	add    rax,rdx
    6e81:	48 c1 e0 04          	shl    rax,0x4
    6e85:	48 89 c2             	mov    rdx,rax
    6e88:	48 8d 05 11 c9 0e 00 	lea    rax,[rip+0xec911]        # f37a0 <watchlist+0x280>
    6e8f:	8b 0c 02             	mov    ecx,DWORD PTR [rdx+rax*1]
    6e92:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6e98:	48 63 d0             	movsxd rdx,eax
    6e9b:	48 89 d0             	mov    rax,rdx
    6e9e:	48 c1 e0 02          	shl    rax,0x2
    6ea2:	48 01 d0             	add    rax,rdx
    6ea5:	48 c1 e0 03          	shl    rax,0x3
    6ea9:	48 01 d0             	add    rax,rdx
    6eac:	48 c1 e0 04          	shl    rax,0x4
    6eb0:	48 89 c2             	mov    rdx,rax
    6eb3:	48 8d 05 be c8 0e 00 	lea    rax,[rip+0xec8be]        # f3778 <watchlist+0x258>
    6eba:	8b 34 02             	mov    esi,DWORD PTR [rdx+rax*1]
    6ebd:	8b 85 c4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x13c]
    6ec3:	48 63 d0             	movsxd rdx,eax
    6ec6:	48 89 d0             	mov    rax,rdx
    6ec9:	48 c1 e0 02          	shl    rax,0x2
    6ecd:	48 01 d0             	add    rax,rdx
    6ed0:	48 c1 e0 03          	shl    rax,0x3
    6ed4:	48 01 d0             	add    rax,rdx
    6ed7:	48 c1 e0 04          	shl    rax,0x4
    6edb:	48 8d 15 3e c6 0e 00 	lea    rdx,[rip+0xec63e]        # f3520 <watchlist>
    6ee2:	48 01 d0             	add    rax,rdx
    6ee5:	48 83 c0 08          	add    rax,0x8
    6ee9:	48 83 ec 08          	sub    rsp,0x8
    6eed:	41 53                	push   r11
    6eef:	41 52                	push   r10
    6ef1:	41 51                	push   r9
    6ef3:	41 50                	push   r8
    6ef5:	57                   	push   rdi
    6ef6:	45 89 e1             	mov    r9d,r12d
    6ef9:	41 89 d8             	mov    r8d,ebx
    6efc:	89 f2                	mov    edx,esi
    6efe:	48 89 c6             	mov    rsi,rax
    6f01:	48 8d 3d 58 61 00 00 	lea    rdi,[rip+0x6158]        # d060 <_IO_stdin_used+0x1060>
    6f08:	b8 00 00 00 00       	mov    eax,0x0
    6f0d:	e8 ae b5 ff ff       	call   24c0 <printf@plt>
    6f12:	48 83 c4 30          	add    rsp,0x30
    6f16:	83 85 c4 fe ff ff 01 	add    DWORD PTR [rbp-0x13c],0x1
    6f1d:	8b 05 f5 a0 00 00    	mov    eax,DWORD PTR [rip+0xa0f5]        # 11018 <watchlist_num>
    6f23:	39 85 c4 fe ff ff    	cmp    DWORD PTR [rbp-0x13c],eax
    6f29:	0f 8e 06 fe ff ff    	jle    6d35 <sigint_processor+0xb2>
    6f2f:	48 8d 35 ca 61 00 00 	lea    rsi,[rip+0x61ca]        # d100 <_IO_stdin_used+0x1100>
    6f36:	48 8d 3d c5 61 00 00 	lea    rdi,[rip+0x61c5]        # d102 <_IO_stdin_used+0x1102>
    6f3d:	e8 6e b6 ff ff       	call   25b0 <fopen@plt>
    6f42:	48 89 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],rax
    6f49:	48 83 bd d8 fe ff ff 	cmp    QWORD PTR [rbp-0x128],0x0
    6f50:	00 
    6f51:	0f 85 99 00 00 00    	jne    6ff0 <sigint_processor+0x36d>
    6f57:	48 8d 3d c2 61 00 00 	lea    rdi,[rip+0x61c2]        # d120 <_IO_stdin_used+0x1120>
    6f5e:	e8 bd b5 ff ff       	call   2520 <puts@plt>
    6f63:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    6f6a:	48 89 c7             	mov    rdi,rax
    6f6d:	e8 be b8 ff ff       	call   2830 <fclose@plt>
    6f72:	c7 85 c8 fe ff ff 00 	mov    DWORD PTR [rbp-0x138],0x0
    6f79:	00 00 00 
    6f7c:	eb 5f                	jmp    6fdd <sigint_processor+0x35a>
    6f7e:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6f84:	48 63 d0             	movsxd rdx,eax
    6f87:	48 89 d0             	mov    rax,rdx
    6f8a:	48 c1 e0 04          	shl    rax,0x4
    6f8e:	48 01 d0             	add    rax,rdx
    6f91:	48 01 c0             	add    rax,rax
    6f94:	48 8d 50 10          	lea    rdx,[rax+0x10]
    6f98:	48 8d 05 81 0d 10 00 	lea    rax,[rip+0x100d81]        # 107d20 <arpcache>
    6f9f:	48 01 c2             	add    rdx,rax
    6fa2:	8b 85 c8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x138]
    6fa8:	48 63 c8             	movsxd rcx,eax
    6fab:	48 89 c8             	mov    rax,rcx
    6fae:	48 c1 e0 04          	shl    rax,0x4
    6fb2:	48 01 c8             	add    rax,rcx
    6fb5:	48 01 c0             	add    rax,rax
    6fb8:	48 8d 0d 61 0d 10 00 	lea    rcx,[rip+0x100d61]        # 107d20 <arpcache>
    6fbf:	48 01 c8             	add    rax,rcx
    6fc2:	48 89 c6             	mov    rsi,rax
    6fc5:	48 8d 3d 9b 61 00 00 	lea    rdi,[rip+0x619b]        # d167 <_IO_stdin_used+0x1167>
    6fcc:	b8 00 00 00 00       	mov    eax,0x0
    6fd1:	e8 ea b4 ff ff       	call   24c0 <printf@plt>
    6fd6:	83 85 c8 fe ff ff 01 	add    DWORD PTR [rbp-0x138],0x1
    6fdd:	8b 05 39 a0 00 00    	mov    eax,DWORD PTR [rip+0xa039]        # 1101c <arp_entries>
    6fe3:	39 85 c8 fe ff ff    	cmp    DWORD PTR [rbp-0x138],eax
    6fe9:	7e 93                	jle    6f7e <sigint_processor+0x2fb>
    6feb:	e9 da 00 00 00       	jmp    70ca <sigint_processor+0x447>
    6ff0:	c7 85 cc fe ff ff 00 	mov    DWORD PTR [rbp-0x134],0x0
    6ff7:	00 00 00 
    6ffa:	eb 67                	jmp    7063 <sigint_processor+0x3e0>
    6ffc:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    7002:	48 63 d0             	movsxd rdx,eax
    7005:	48 89 d0             	mov    rax,rdx
    7008:	48 c1 e0 04          	shl    rax,0x4
    700c:	48 01 d0             	add    rax,rdx
    700f:	48 01 c0             	add    rax,rax
    7012:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7016:	48 8d 05 03 0d 10 00 	lea    rax,[rip+0x100d03]        # 107d20 <arpcache>
    701d:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    7021:	8b 85 cc fe ff ff    	mov    eax,DWORD PTR [rbp-0x134]
    7027:	48 63 d0             	movsxd rdx,eax
    702a:	48 89 d0             	mov    rax,rdx
    702d:	48 c1 e0 04          	shl    rax,0x4
    7031:	48 01 d0             	add    rax,rdx
    7034:	48 01 c0             	add    rax,rax
    7037:	48 8d 15 e2 0c 10 00 	lea    rdx,[rip+0x100ce2]        # 107d20 <arpcache>
    703e:	48 01 c2             	add    rdx,rax
    7041:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    7048:	48 8d 35 22 61 00 00 	lea    rsi,[rip+0x6122]        # d171 <_IO_stdin_used+0x1171>
    704f:	48 89 c7             	mov    rdi,rax
    7052:	b8 00 00 00 00       	mov    eax,0x0
    7057:	e8 44 b8 ff ff       	call   28a0 <fprintf@plt>
    705c:	83 85 cc fe ff ff 01 	add    DWORD PTR [rbp-0x134],0x1
    7063:	8b 05 b3 9f 00 00    	mov    eax,DWORD PTR [rip+0x9fb3]        # 1101c <arp_entries>
    7069:	39 85 cc fe ff ff    	cmp    DWORD PTR [rbp-0x134],eax
    706f:	7e 8b                	jle    6ffc <sigint_processor+0x379>
    7071:	48 8b 85 d8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x128]
    7078:	48 89 c7             	mov    rdi,rax
    707b:	e8 b0 b7 ff ff       	call   2830 <fclose@plt>
    7080:	c7 85 d0 fe ff ff 00 	mov    DWORD PTR [rbp-0x130],0x0
    7087:	00 00 00 
    708a:	eb 2f                	jmp    70bb <sigint_processor+0x438>
    708c:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x130]
    7092:	48 98                	cdqe   
    7094:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    709b:	00 
    709c:	48 8d 05 fd 9f 00 00 	lea    rax,[rip+0x9ffd]        # 110a0 <threads>
    70a3:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    70a7:	be 00 00 00 00       	mov    esi,0x0
    70ac:	48 89 c7             	mov    rdi,rax
    70af:	e8 fc b3 ff ff       	call   24b0 <pthread_join@plt>
    70b4:	83 85 d0 fe ff ff 01 	add    DWORD PTR [rbp-0x130],0x1
    70bb:	8b 05 df a1 00 00    	mov    eax,DWORD PTR [rip+0xa1df]        # 112a0 <thread_count>
    70c1:	39 85 d0 fe ff ff    	cmp    DWORD PTR [rbp-0x130],eax
    70c7:	7c c3                	jl     708c <sigint_processor+0x409>
    70c9:	90                   	nop
    70ca:	bf 00 00 00 00       	mov    edi,0x0
    70cf:	e8 6c b4 ff ff       	call   2540 <exit@plt>

00000000000070d4 <print_help_and_exit>:
    70d4:	f3 0f 1e fa          	endbr64 
    70d8:	55                   	push   rbp
    70d9:	48 89 e5             	mov    rbp,rsp
    70dc:	48 8d 35 95 60 00 00 	lea    rsi,[rip+0x6095]        # d178 <_IO_stdin_used+0x1178>
    70e3:	48 8d 3d 96 60 00 00 	lea    rdi,[rip+0x6096]        # d180 <_IO_stdin_used+0x1180>
    70ea:	b8 00 00 00 00       	mov    eax,0x0
    70ef:	e8 cc b3 ff ff       	call   24c0 <printf@plt>
    70f4:	bf 00 00 00 00       	mov    edi,0x0
    70f9:	e8 42 b4 ff ff       	call   2540 <exit@plt>

00000000000070fe <print_cpu_info>:
    70fe:	f3 0f 1e fa          	endbr64 
    7102:	55                   	push   rbp
    7103:	48 89 e5             	mov    rbp,rsp
    7106:	53                   	push   rbx
    7107:	48 81 ec 48 02 00 00 	sub    rsp,0x248
    710e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7115:	00 00 
    7117:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    711b:	31 c0                	xor    eax,eax
    711d:	48 8d 35 e3 60 00 00 	lea    rsi,[rip+0x60e3]        # d207 <_IO_stdin_used+0x1207>
    7124:	48 8d 3d df 60 00 00 	lea    rdi,[rip+0x60df]        # d20a <_IO_stdin_used+0x120a>
    712b:	e8 80 b4 ff ff       	call   25b0 <fopen@plt>
    7130:	48 89 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],rax
    7137:	48 c7 85 c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],0x0
    713e:	00 00 00 00 
    7142:	48 c7 85 d0 fd ff ff 	mov    QWORD PTR [rbp-0x230],0x0
    7149:	00 00 00 00 
    714d:	c7 85 bc fd ff ff 00 	mov    DWORD PTR [rbp-0x244],0x0
    7154:	00 00 00 
    7157:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    715e:	ba 00 02 00 00       	mov    edx,0x200
    7163:	be 00 00 00 00       	mov    esi,0x0
    7168:	48 89 c7             	mov    rdi,rax
    716b:	e8 60 b3 ff ff       	call   24d0 <memset@plt>
    7170:	e9 b3 00 00 00       	jmp    7228 <print_cpu_info+0x12a>
    7175:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    717c:	ba 0a 00 00 00       	mov    edx,0xa
    7181:	48 89 c6             	mov    rsi,rax
    7184:	48 8d 3d 8d 60 00 00 	lea    rdi,[rip+0x608d]        # d218 <_IO_stdin_used+0x1218>
    718b:	e8 00 b4 ff ff       	call   2590 <strncmp@plt>
    7190:	85 c0                	test   eax,eax
    7192:	0f 85 90 00 00 00    	jne    7228 <print_cpu_info+0x12a>
    7198:	c7 85 c0 fd ff ff 00 	mov    DWORD PTR [rbp-0x240],0x0
    719f:	00 00 00 
    71a2:	c7 85 c4 fd ff ff 00 	mov    DWORD PTR [rbp-0x23c],0x0
    71a9:	00 00 00 
    71ac:	eb 2e                	jmp    71dc <print_cpu_info+0xde>
    71ae:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    71b5:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    71bb:	48 98                	cdqe   
    71bd:	48 01 d0             	add    rax,rdx
    71c0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    71c3:	3c 3a                	cmp    al,0x3a
    71c5:	75 0e                	jne    71d5 <print_cpu_info+0xd7>
    71c7:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    71cd:	89 85 c0 fd ff ff    	mov    DWORD PTR [rbp-0x240],eax
    71d3:	eb 24                	jmp    71f9 <print_cpu_info+0xfb>
    71d5:	83 85 c4 fd ff ff 01 	add    DWORD PTR [rbp-0x23c],0x1
    71dc:	8b 85 c4 fd ff ff    	mov    eax,DWORD PTR [rbp-0x23c]
    71e2:	48 63 d8             	movsxd rbx,eax
    71e5:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    71ec:	48 89 c7             	mov    rdi,rax
    71ef:	e8 4c b4 ff ff       	call   2640 <strlen@plt>
    71f4:	48 39 c3             	cmp    rbx,rax
    71f7:	72 b5                	jb     71ae <print_cpu_info+0xb0>
    71f9:	83 85 bc fd ff ff 01 	add    DWORD PTR [rbp-0x244],0x1
    7200:	48 8b 95 c8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x238]
    7207:	8b 85 c0 fd ff ff    	mov    eax,DWORD PTR [rbp-0x240]
    720d:	48 98                	cdqe   
    720f:	48 83 c0 02          	add    rax,0x2
    7213:	48 01 c2             	add    rdx,rax
    7216:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    721d:	48 89 d6             	mov    rsi,rdx
    7220:	48 89 c7             	mov    rdi,rax
    7223:	e8 c8 b4 ff ff       	call   26f0 <strcat@plt>
    7228:	48 8b 95 d8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x228]
    722f:	48 8d b5 d0 fd ff ff 	lea    rsi,[rbp-0x230]
    7236:	48 8d 85 c8 fd ff ff 	lea    rax,[rbp-0x238]
    723d:	48 89 d1             	mov    rcx,rdx
    7240:	ba 0a 00 00 00       	mov    edx,0xa
    7245:	48 89 c7             	mov    rdi,rax
    7248:	e8 73 b6 ff ff       	call   28c0 <getdelim@plt>
    724d:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
    7251:	0f 85 1e ff ff ff    	jne    7175 <print_cpu_info+0x77>
    7257:	48 8d 95 e0 fd ff ff 	lea    rdx,[rbp-0x220]
    725e:	8b 85 bc fd ff ff    	mov    eax,DWORD PTR [rbp-0x244]
    7264:	89 c6                	mov    esi,eax
    7266:	48 8d 3d b6 5f 00 00 	lea    rdi,[rip+0x5fb6]        # d223 <_IO_stdin_used+0x1223>
    726d:	b8 00 00 00 00       	mov    eax,0x0
    7272:	e8 49 b2 ff ff       	call   24c0 <printf@plt>
    7277:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    727e:	48 89 c7             	mov    rdi,rax
    7281:	e8 aa b3 ff ff       	call   2630 <free@plt>
    7286:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    728d:	48 89 c7             	mov    rdi,rax
    7290:	e8 9b b5 ff ff       	call   2830 <fclose@plt>
    7295:	90                   	nop
    7296:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    729a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    72a1:	00 00 
    72a3:	74 05                	je     72aa <print_cpu_info+0x1ac>
    72a5:	e8 06 b5 ff ff       	call   27b0 <__stack_chk_fail@plt>
    72aa:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    72ae:	c9                   	leave  
    72af:	c3                   	ret    

00000000000072b0 <print_logo>:
    72b0:	f3 0f 1e fa          	endbr64 
    72b4:	55                   	push   rbp
    72b5:	48 89 e5             	mov    rbp,rsp
    72b8:	48 8d 3d 79 5f 00 00 	lea    rdi,[rip+0x5f79]        # d238 <_IO_stdin_used+0x1238>
    72bf:	e8 5c b2 ff ff       	call   2520 <puts@plt>
    72c4:	90                   	nop
    72c5:	5d                   	pop    rbp
    72c6:	c3                   	ret    

00000000000072c7 <start_nsh_server>:
    72c7:	f3 0f 1e fa          	endbr64 
    72cb:	55                   	push   rbp
    72cc:	48 89 e5             	mov    rbp,rsp
    72cf:	48 83 ec 10          	sub    rsp,0x10
    72d3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    72da:	00 00 
    72dc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    72e0:	31 c0                	xor    eax,eax
    72e2:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    72e6:	b9 00 00 00 00       	mov    ecx,0x0
    72eb:	48 8d 15 71 00 00 00 	lea    rdx,[rip+0x71]        # 7363 <actually_start_nsh_server>
    72f2:	be 00 00 00 00       	mov    esi,0x0
    72f7:	48 89 c7             	mov    rdi,rax
    72fa:	e8 11 b3 ff ff       	call   2610 <pthread_create@plt>
    72ff:	90                   	nop
    7300:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7304:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    730b:	00 00 
    730d:	74 05                	je     7314 <start_nsh_server+0x4d>
    730f:	e8 9c b4 ff ff       	call   27b0 <__stack_chk_fail@plt>
    7314:	c9                   	leave  
    7315:	c3                   	ret    

0000000000007316 <rnstrip>:
    7316:	f3 0f 1e fa          	endbr64 
    731a:	55                   	push   rbp
    731b:	48 89 e5             	mov    rbp,rsp
    731e:	48 83 ec 10          	sub    rsp,0x10
    7322:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7326:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    732a:	48 8d 35 7f 60 00 00 	lea    rsi,[rip+0x607f]        # d3b0 <_IO_stdin_used+0x13b0>
    7331:	48 89 c7             	mov    rdi,rax
    7334:	e8 17 b5 ff ff       	call   2850 <strcspn@plt>
    7339:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    733d:	48 01 d0             	add    rax,rdx
    7340:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7343:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7347:	48 8d 35 64 60 00 00 	lea    rsi,[rip+0x6064]        # d3b2 <_IO_stdin_used+0x13b2>
    734e:	48 89 c7             	mov    rdi,rax
    7351:	e8 fa b4 ff ff       	call   2850 <strcspn@plt>
    7356:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    735a:	48 01 d0             	add    rax,rdx
    735d:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7360:	90                   	nop
    7361:	c9                   	leave  
    7362:	c3                   	ret    

0000000000007363 <actually_start_nsh_server>:
    7363:	f3 0f 1e fa          	endbr64 
    7367:	55                   	push   rbp
    7368:	48 89 e5             	mov    rbp,rsp
    736b:	48 83 ec 50          	sub    rsp,0x50
    736f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7376:	00 00 
    7378:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    737c:	31 c0                	xor    eax,eax
    737e:	c7 45 bc 10 00 00 00 	mov    DWORD PTR [rbp-0x44],0x10
    7385:	ba 00 00 00 00       	mov    edx,0x0
    738a:	be 01 00 00 00       	mov    esi,0x1
    738f:	bf 02 00 00 00       	mov    edi,0x2
    7394:	e8 f7 b3 ff ff       	call   2790 <socket@plt>
    7399:	89 45 c0             	mov    DWORD PTR [rbp-0x40],eax
    739c:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    73a0:	75 16                	jne    73b8 <actually_start_nsh_server+0x55>
    73a2:	48 8d 3d 0f 60 00 00 	lea    rdi,[rip+0x600f]        # d3b8 <_IO_stdin_used+0x13b8>
    73a9:	e8 72 b1 ff ff       	call   2520 <puts@plt>
    73ae:	bf 01 00 00 00       	mov    edi,0x1
    73b3:	e8 88 b1 ff ff       	call   2540 <exit@plt>
    73b8:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    73bc:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    73bf:	41 b8 04 00 00 00    	mov    r8d,0x4
    73c5:	48 89 d1             	mov    rcx,rdx
    73c8:	ba 02 00 00 00       	mov    edx,0x2
    73cd:	be 01 00 00 00       	mov    esi,0x1
    73d2:	89 c7                	mov    edi,eax
    73d4:	e8 07 b2 ff ff       	call   25e0 <setsockopt@plt>
    73d9:	85 c0                	test   eax,eax
    73db:	74 16                	je     73f3 <actually_start_nsh_server+0x90>
    73dd:	48 8d 3d fc 5f 00 00 	lea    rdi,[rip+0x5ffc]        # d3e0 <_IO_stdin_used+0x13e0>
    73e4:	e8 37 b1 ff ff       	call   2520 <puts@plt>
    73e9:	bf 01 00 00 00       	mov    edi,0x1
    73ee:	e8 4d b1 ff ff       	call   2540 <exit@plt>
    73f3:	66 c7 45 e0 02 00    	mov    WORD PTR [rbp-0x20],0x2
    73f9:	bf 00 00 00 00       	mov    edi,0x0
    73fe:	e8 7d b4 ff ff       	call   2880 <htonl@plt>
    7403:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    7406:	bf 81 02 00 00       	mov    edi,0x281
    740b:	e8 20 b1 ff ff       	call   2530 <htons@plt>
    7410:	66 89 45 e2          	mov    WORD PTR [rbp-0x1e],ax
    7414:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    7418:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    741b:	ba 10 00 00 00       	mov    edx,0x10
    7420:	48 89 ce             	mov    rsi,rcx
    7423:	89 c7                	mov    edi,eax
    7425:	e8 36 b4 ff ff       	call   2860 <bind@plt>
    742a:	85 c0                	test   eax,eax
    742c:	79 16                	jns    7444 <actually_start_nsh_server+0xe1>
    742e:	48 8d 3d d3 5f 00 00 	lea    rdi,[rip+0x5fd3]        # d408 <_IO_stdin_used+0x1408>
    7435:	e8 e6 b0 ff ff       	call   2520 <puts@plt>
    743a:	bf 01 00 00 00       	mov    edi,0x1
    743f:	e8 fc b0 ff ff       	call   2540 <exit@plt>
    7444:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7447:	be 05 00 00 00       	mov    esi,0x5
    744c:	89 c7                	mov    edi,eax
    744e:	e8 0d b2 ff ff       	call   2660 <listen@plt>
    7453:	85 c0                	test   eax,eax
    7455:	79 16                	jns    746d <actually_start_nsh_server+0x10a>
    7457:	48 8d 3d e2 5f 00 00 	lea    rdi,[rip+0x5fe2]        # d440 <_IO_stdin_used+0x1440>
    745e:	e8 bd b0 ff ff       	call   2520 <puts@plt>
    7463:	bf 01 00 00 00       	mov    edi,0x1
    7468:	e8 d3 b0 ff ff       	call   2540 <exit@plt>
    746d:	48 8d 55 bc          	lea    rdx,[rbp-0x44]
    7471:	48 8d 4d e0          	lea    rcx,[rbp-0x20]
    7475:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
    7478:	48 89 ce             	mov    rsi,rcx
    747b:	89 c7                	mov    edi,eax
    747d:	e8 4e b4 ff ff       	call   28d0 <accept@plt>
    7482:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    7485:	83 7d c4 00          	cmp    DWORD PTR [rbp-0x3c],0x0
    7489:	79 20                	jns    74ab <actually_start_nsh_server+0x148>
    748b:	b8 00 00 00 00       	mov    eax,0x0
    7490:	e8 34 bf ff ff       	call   33c9 <get_formated_time>
    7495:	48 89 c6             	mov    rsi,rax
    7498:	48 8d 3d d1 5f 00 00 	lea    rdi,[rip+0x5fd1]        # d470 <_IO_stdin_used+0x1470>
    749f:	b8 00 00 00 00       	mov    eax,0x0
    74a4:	e8 17 b0 ff ff       	call   24c0 <printf@plt>
    74a9:	eb c2                	jmp    746d <actually_start_nsh_server+0x10a>
    74ab:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    74ae:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
    74b1:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    74b5:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    74b9:	48 8d 55 d0          	lea    rdx,[rbp-0x30]
    74bd:	48 8d 45 c8          	lea    rax,[rbp-0x38]
    74c1:	48 89 d1             	mov    rcx,rdx
    74c4:	48 8d 15 0f 00 00 00 	lea    rdx,[rip+0xf]        # 74da <accept_cmd>
    74cb:	be 00 00 00 00       	mov    esi,0x0
    74d0:	48 89 c7             	mov    rdi,rax
    74d3:	e8 38 b1 ff ff       	call   2610 <pthread_create@plt>
    74d8:	eb 93                	jmp    746d <actually_start_nsh_server+0x10a>

00000000000074da <accept_cmd>:
    74da:	f3 0f 1e fa          	endbr64 
    74de:	55                   	push   rbp
    74df:	48 89 e5             	mov    rbp,rsp
    74e2:	48 83 ec 30          	sub    rsp,0x30
    74e6:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    74ea:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    74ee:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    74f2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    74f6:	8b 00                	mov    eax,DWORD PTR [rax]
    74f8:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    74ff:	00 00 
    7501:	48 8d 8a 00 fc ff ff 	lea    rcx,[rdx-0x400]
    7508:	ba 00 04 00 00       	mov    edx,0x400
    750d:	48 89 ce             	mov    rsi,rcx
    7510:	89 c7                	mov    edi,eax
    7512:	e8 69 b0 ff ff       	call   2580 <read@plt>
    7517:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
    751a:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
    751e:	7e 45                	jle    7565 <accept_cmd+0x8b>
    7520:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    7527:	00 00 
    7529:	48 05 00 fc ff ff    	add    rax,0xfffffffffffffc00
    752f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7533:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7537:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    753a:	0f b6 c0             	movzx  eax,al
    753d:	89 c6                	mov    esi,eax
    753f:	48 8d 3d 4c 5f 00 00 	lea    rdi,[rip+0x5f4c]        # d492 <_IO_stdin_used+0x1492>
    7546:	b8 00 00 00 00       	mov    eax,0x0
    754b:	e8 70 af ff ff       	call   24c0 <printf@plt>
    7550:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7554:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7558:	48 89 d6             	mov    rsi,rdx
    755b:	48 89 c7             	mov    rdi,rax
    755e:	e8 98 0c 00 00       	call   81fb <process_opcode>
    7563:	eb 8d                	jmp    74f2 <accept_cmd+0x18>
    7565:	90                   	nop
    7566:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    756a:	8b 00                	mov    eax,DWORD PTR [rax]
    756c:	89 c7                	mov    edi,eax
    756e:	e8 8d af ff ff       	call   2500 <close@plt>
    7573:	90                   	nop
    7574:	c9                   	leave  
    7575:	c3                   	ret    

0000000000007576 <tcp_rst_portscan_detect>:
    7576:	f3 0f 1e fa          	endbr64 
    757a:	55                   	push   rbp
    757b:	48 89 e5             	mov    rbp,rsp
    757e:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    7585:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    758c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7593:	00 00 
    7595:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7599:	31 c0                	xor    eax,eax
    759b:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    75a2:	00 00 00 
    75a5:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75ac:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    75b2:	83 f8 1e             	cmp    eax,0x1e
    75b5:	74 0a                	je     75c1 <tcp_rst_portscan_detect+0x4b>
    75b7:	b8 00 00 00 00       	mov    eax,0x0
    75bc:	e9 8d 01 00 00       	jmp    774e <tcp_rst_portscan_detect+0x1d8>
    75c1:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75c8:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    75ce:	83 e8 01             	sub    eax,0x1
    75d1:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    75d7:	eb 6c                	jmp    7645 <tcp_rst_portscan_detect+0xcf>
    75d9:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    75df:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    75e5:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    75ec:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    75f2:	48 63 d2             	movsxd rdx,edx
    75f5:	48 83 c2 28          	add    rdx,0x28
    75f9:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    75fe:	89 c1                	mov    ecx,eax
    7600:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    7607:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    760e:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    7614:	48 63 d2             	movsxd rdx,edx
    7617:	48 83 c2 28          	add    rdx,0x28
    761b:	48 8b 44 d0 10       	mov    rax,QWORD PTR [rax+rdx*8+0x10]
    7620:	29 c1                	sub    ecx,eax
    7622:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    7628:	8d 50 01             	lea    edx,[rax+0x1]
    762b:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    7631:	89 ca                	mov    edx,ecx
    7633:	48 98                	cdqe   
    7635:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    763c:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    7643:	74 0b                	je     7650 <tcp_rst_portscan_detect+0xda>
    7645:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    764c:	75 8b                	jne    75d9 <tcp_rst_portscan_detect+0x63>
    764e:	eb 01                	jmp    7651 <tcp_rst_portscan_detect+0xdb>
    7650:	90                   	nop
    7651:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    7658:	00 00 00 
    765b:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    7662:	00 00 00 
    7665:	eb 24                	jmp    768b <tcp_rst_portscan_detect+0x115>
    7667:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    766d:	48 98                	cdqe   
    766f:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    7676:	3d b3 b7 b4 00       	cmp    eax,0xb4b7b3
    767b:	7f 07                	jg     7684 <tcp_rst_portscan_detect+0x10e>
    767d:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    7684:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    768b:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7691:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    7697:	7c ce                	jl     7667 <tcp_rst_portscan_detect+0xf1>
    7699:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    769f:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    76a5:	0f 85 9e 00 00 00    	jne    7749 <tcp_rst_portscan_detect+0x1d3>
    76ab:	48 8b 05 7e 99 00 00 	mov    rax,QWORD PTR [rip+0x997e]        # 11030 <def_log_file>
    76b2:	48 8d 35 e7 5d 00 00 	lea    rsi,[rip+0x5de7]        # d4a0 <_IO_stdin_used+0x14a0>
    76b9:	48 89 c7             	mov    rdi,rax
    76bc:	e8 ef ae ff ff       	call   25b0 <fopen@plt>
    76c1:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    76c8:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    76cf:	48 83 c0 08          	add    rax,0x8
    76d3:	48 89 c6             	mov    rsi,rax
    76d6:	48 8d 3d cb 5d 00 00 	lea    rdi,[rip+0x5dcb]        # d4a8 <_IO_stdin_used+0x14a8>
    76dd:	b8 00 00 00 00       	mov    eax,0x0
    76e2:	e8 d9 ad ff ff       	call   24c0 <printf@plt>
    76e7:	b8 00 00 00 00       	mov    eax,0x0
    76ec:	e8 d8 bc ff ff       	call   33c9 <get_formated_time>
    76f1:	48 89 c1             	mov    rcx,rax
    76f4:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    76fb:	48 8d 50 08          	lea    rdx,[rax+0x8]
    76ff:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7706:	48 8d 35 cb 5d 00 00 	lea    rsi,[rip+0x5dcb]        # d4d8 <_IO_stdin_used+0x14d8>
    770d:	48 89 c7             	mov    rdi,rax
    7710:	b8 00 00 00 00       	mov    eax,0x0
    7715:	e8 66 af ff ff       	call   2680 <sprintf@plt>
    771a:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    7721:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7728:	48 89 d6             	mov    rsi,rdx
    772b:	48 89 c7             	mov    rdi,rax
    772e:	e8 cd af ff ff       	call   2700 <fputs@plt>
    7733:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    773a:	48 89 c7             	mov    rdi,rax
    773d:	e8 ee b0 ff ff       	call   2830 <fclose@plt>
    7742:	b8 01 00 00 00       	mov    eax,0x1
    7747:	eb 05                	jmp    774e <tcp_rst_portscan_detect+0x1d8>
    7749:	b8 00 00 00 00       	mov    eax,0x0
    774e:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    7752:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    7759:	00 00 
    775b:	74 05                	je     7762 <tcp_rst_portscan_detect+0x1ec>
    775d:	e8 4e b0 ff ff       	call   27b0 <__stack_chk_fail@plt>
    7762:	c9                   	leave  
    7763:	c3                   	ret    

0000000000007764 <fin_rst_portscan_detect>:
    7764:	f3 0f 1e fa          	endbr64 
    7768:	55                   	push   rbp
    7769:	48 89 e5             	mov    rbp,rsp
    776c:	48 81 ec 40 01 00 00 	sub    rsp,0x140
    7773:	48 89 bd c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],rdi
    777a:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7781:	00 00 
    7783:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7787:	31 c0                	xor    eax,eax
    7789:	c7 85 d4 fe ff ff 00 	mov    DWORD PTR [rbp-0x12c],0x0
    7790:	00 00 00 
    7793:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    779a:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    779d:	83 f8 1e             	cmp    eax,0x1e
    77a0:	74 0a                	je     77ac <fin_rst_portscan_detect+0x48>
    77a2:	b8 00 00 00 00       	mov    eax,0x0
    77a7:	e9 8a 01 00 00       	jmp    7936 <fin_rst_portscan_detect+0x1d2>
    77ac:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    77b3:	8b 40 50             	mov    eax,DWORD PTR [rax+0x50]
    77b6:	83 e8 01             	sub    eax,0x1
    77b9:	89 85 d8 fe ff ff    	mov    DWORD PTR [rbp-0x128],eax
    77bf:	eb 6c                	jmp    782d <fin_rst_portscan_detect+0xc9>
    77c1:	8b 85 d8 fe ff ff    	mov    eax,DWORD PTR [rbp-0x128]
    77c7:	89 85 e4 fe ff ff    	mov    DWORD PTR [rbp-0x11c],eax
    77cd:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    77d4:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    77da:	48 63 d2             	movsxd rdx,edx
    77dd:	48 83 c2 0a          	add    rdx,0xa
    77e1:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    77e6:	89 c1                	mov    ecx,eax
    77e8:	83 ad d8 fe ff ff 01 	sub    DWORD PTR [rbp-0x128],0x1
    77ef:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    77f6:	8b 95 d8 fe ff ff    	mov    edx,DWORD PTR [rbp-0x128]
    77fc:	48 63 d2             	movsxd rdx,edx
    77ff:	48 83 c2 0a          	add    rdx,0xa
    7803:	48 8b 44 d0 08       	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    7808:	29 c1                	sub    ecx,eax
    780a:	8b 85 d4 fe ff ff    	mov    eax,DWORD PTR [rbp-0x12c]
    7810:	8d 50 01             	lea    edx,[rax+0x1]
    7813:	89 95 d4 fe ff ff    	mov    DWORD PTR [rbp-0x12c],edx
    7819:	89 ca                	mov    edx,ecx
    781b:	48 98                	cdqe   
    781d:	89 94 85 f0 fe ff ff 	mov    DWORD PTR [rbp+rax*4-0x110],edx
    7824:	83 bd e4 fe ff ff 01 	cmp    DWORD PTR [rbp-0x11c],0x1
    782b:	74 0b                	je     7838 <fin_rst_portscan_detect+0xd4>
    782d:	83 bd d8 fe ff ff 00 	cmp    DWORD PTR [rbp-0x128],0x0
    7834:	75 8b                	jne    77c1 <fin_rst_portscan_detect+0x5d>
    7836:	eb 01                	jmp    7839 <fin_rst_portscan_detect+0xd5>
    7838:	90                   	nop
    7839:	c7 85 dc fe ff ff 00 	mov    DWORD PTR [rbp-0x124],0x0
    7840:	00 00 00 
    7843:	c7 85 e0 fe ff ff 00 	mov    DWORD PTR [rbp-0x120],0x0
    784a:	00 00 00 
    784d:	eb 24                	jmp    7873 <fin_rst_portscan_detect+0x10f>
    784f:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7855:	48 98                	cdqe   
    7857:	8b 84 85 f0 fe ff ff 	mov    eax,DWORD PTR [rbp+rax*4-0x110]
    785e:	3d 73 7e e2 00       	cmp    eax,0xe27e73
    7863:	7f 07                	jg     786c <fin_rst_portscan_detect+0x108>
    7865:	83 85 dc fe ff ff 01 	add    DWORD PTR [rbp-0x124],0x1
    786c:	83 85 e0 fe ff ff 01 	add    DWORD PTR [rbp-0x120],0x1
    7873:	8b 85 e0 fe ff ff    	mov    eax,DWORD PTR [rbp-0x120]
    7879:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    787f:	7c ce                	jl     784f <fin_rst_portscan_detect+0xeb>
    7881:	8b 85 dc fe ff ff    	mov    eax,DWORD PTR [rbp-0x124]
    7887:	3b 85 d4 fe ff ff    	cmp    eax,DWORD PTR [rbp-0x12c]
    788d:	0f 85 9e 00 00 00    	jne    7931 <fin_rst_portscan_detect+0x1cd>
    7893:	48 8b 05 96 97 00 00 	mov    rax,QWORD PTR [rip+0x9796]        # 11030 <def_log_file>
    789a:	48 8d 35 ff 5b 00 00 	lea    rsi,[rip+0x5bff]        # d4a0 <_IO_stdin_used+0x14a0>
    78a1:	48 89 c7             	mov    rdi,rax
    78a4:	e8 07 ad ff ff       	call   25b0 <fopen@plt>
    78a9:	48 89 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],rax
    78b0:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    78b7:	48 83 c0 08          	add    rax,0x8
    78bb:	48 89 c6             	mov    rsi,rax
    78be:	48 8d 3d 3b 5c 00 00 	lea    rdi,[rip+0x5c3b]        # d500 <_IO_stdin_used+0x1500>
    78c5:	b8 00 00 00 00       	mov    eax,0x0
    78ca:	e8 f1 ab ff ff       	call   24c0 <printf@plt>
    78cf:	b8 00 00 00 00       	mov    eax,0x0
    78d4:	e8 f0 ba ff ff       	call   33c9 <get_formated_time>
    78d9:	48 89 c1             	mov    rcx,rax
    78dc:	48 8b 85 c8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x138]
    78e3:	48 8d 50 08          	lea    rdx,[rax+0x8]
    78e7:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    78ee:	48 8d 35 3b 5c 00 00 	lea    rsi,[rip+0x5c3b]        # d530 <_IO_stdin_used+0x1530>
    78f5:	48 89 c7             	mov    rdi,rax
    78f8:	b8 00 00 00 00       	mov    eax,0x0
    78fd:	e8 7e ad ff ff       	call   2680 <sprintf@plt>
    7902:	48 8b 95 e8 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x118]
    7909:	48 8d 85 70 ff ff ff 	lea    rax,[rbp-0x90]
    7910:	48 89 d6             	mov    rsi,rdx
    7913:	48 89 c7             	mov    rdi,rax
    7916:	e8 e5 ad ff ff       	call   2700 <fputs@plt>
    791b:	48 8b 85 e8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x118]
    7922:	48 89 c7             	mov    rdi,rax
    7925:	e8 06 af ff ff       	call   2830 <fclose@plt>
    792a:	b8 01 00 00 00       	mov    eax,0x1
    792f:	eb 05                	jmp    7936 <fin_rst_portscan_detect+0x1d2>
    7931:	b8 00 00 00 00       	mov    eax,0x0
    7936:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
    793a:	64 48 2b 34 25 28 00 	sub    rsi,QWORD PTR fs:0x28
    7941:	00 00 
    7943:	74 05                	je     794a <fin_rst_portscan_detect+0x1e6>
    7945:	e8 66 ae ff ff       	call   27b0 <__stack_chk_fail@plt>
    794a:	c9                   	leave  
    794b:	c3                   	ret    

000000000000794c <member_ready_for_scan>:
    794c:	f3 0f 1e fa          	endbr64 
    7950:	55                   	push   rbp
    7951:	48 89 e5             	mov    rbp,rsp
    7954:	48 83 ec 10          	sub    rsp,0x10
    7958:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    795f:	eb 48                	jmp    79a9 <member_ready_for_scan+0x5d>
    7961:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7964:	48 63 d0             	movsxd rdx,eax
    7967:	48 89 d0             	mov    rax,rdx
    796a:	48 c1 e0 02          	shl    rax,0x2
    796e:	48 01 d0             	add    rax,rdx
    7971:	48 c1 e0 03          	shl    rax,0x3
    7975:	48 01 d0             	add    rax,rdx
    7978:	48 c1 e0 04          	shl    rax,0x4
    797c:	48 8d 15 9d bb 0e 00 	lea    rdx,[rip+0xebb9d]        # f3520 <watchlist>
    7983:	48 01 d0             	add    rax,rdx
    7986:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    798a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    798e:	8b 80 48 01 00 00    	mov    eax,DWORD PTR [rax+0x148]
    7994:	83 f8 1d             	cmp    eax,0x1d
    7997:	76 0c                	jbe    79a5 <member_ready_for_scan+0x59>
    7999:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    799d:	48 89 c7             	mov    rdi,rax
    79a0:	e8 d1 fb ff ff       	call   7576 <tcp_rst_portscan_detect>
    79a5:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    79a9:	8b 05 69 96 00 00    	mov    eax,DWORD PTR [rip+0x9669]        # 11018 <watchlist_num>
    79af:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    79b2:	7e ad                	jle    7961 <member_ready_for_scan+0x15>
    79b4:	90                   	nop
    79b5:	90                   	nop
    79b6:	c9                   	leave  
    79b7:	c3                   	ret    

00000000000079b8 <member_exists>:
    79b8:	f3 0f 1e fa          	endbr64 
    79bc:	55                   	push   rbp
    79bd:	48 89 e5             	mov    rbp,rsp
    79c0:	48 83 ec 20          	sub    rsp,0x20
    79c4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    79c8:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    79cf:	eb 47                	jmp    7a18 <member_exists+0x60>
    79d1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    79d4:	8d 50 01             	lea    edx,[rax+0x1]
    79d7:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
    79da:	48 63 d0             	movsxd rdx,eax
    79dd:	48 89 d0             	mov    rax,rdx
    79e0:	48 c1 e0 02          	shl    rax,0x2
    79e4:	48 01 d0             	add    rax,rdx
    79e7:	48 c1 e0 03          	shl    rax,0x3
    79eb:	48 01 d0             	add    rax,rdx
    79ee:	48 c1 e0 04          	shl    rax,0x4
    79f2:	48 8d 15 27 bb 0e 00 	lea    rdx,[rip+0xebb27]        # f3520 <watchlist>
    79f9:	48 01 d0             	add    rax,rdx
    79fc:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7a00:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a04:	48 89 c6             	mov    rsi,rax
    7a07:	48 89 d7             	mov    rdi,rdx
    7a0a:	e8 b1 ad ff ff       	call   27c0 <strcmp@plt>
    7a0f:	85 c0                	test   eax,eax
    7a11:	75 05                	jne    7a18 <member_exists+0x60>
    7a13:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7a16:	eb 10                	jmp    7a28 <member_exists+0x70>
    7a18:	8b 05 fa 95 00 00    	mov    eax,DWORD PTR [rip+0x95fa]        # 11018 <watchlist_num>
    7a1e:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7a21:	7e ae                	jle    79d1 <member_exists+0x19>
    7a23:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7a28:	c9                   	leave  
    7a29:	c3                   	ret    

0000000000007a2a <init_member>:
    7a2a:	f3 0f 1e fa          	endbr64 
    7a2e:	55                   	push   rbp
    7a2f:	48 89 e5             	mov    rbp,rsp
    7a32:	48 83 ec 20          	sub    rsp,0x20
    7a36:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7a3a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7a3e:	48 89 c7             	mov    rdi,rax
    7a41:	e8 72 ff ff ff       	call   79b8 <member_exists>
    7a46:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7a49:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    7a4d:	74 42                	je     7a91 <init_member+0x67>
    7a4f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7a52:	48 63 d0             	movsxd rdx,eax
    7a55:	48 89 d0             	mov    rax,rdx
    7a58:	48 c1 e0 02          	shl    rax,0x2
    7a5c:	48 01 d0             	add    rax,rdx
    7a5f:	48 c1 e0 03          	shl    rax,0x3
    7a63:	48 01 d0             	add    rax,rdx
    7a66:	48 c1 e0 04          	shl    rax,0x4
    7a6a:	48 8d 15 af ba 0e 00 	lea    rdx,[rip+0xebaaf]        # f3520 <watchlist>
    7a71:	48 01 d0             	add    rax,rdx
    7a74:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7a78:	bf 00 00 00 00       	mov    edi,0x0
    7a7d:	e8 6e ae ff ff       	call   28f0 <time@plt>
    7a82:	48 89 c2             	mov    rdx,rax
    7a85:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7a89:	48 89 10             	mov    QWORD PTR [rax],rdx
    7a8c:	e9 a8 00 00 00       	jmp    7b39 <init_member+0x10f>
    7a91:	48 8d 3d bd 5a 00 00 	lea    rdi,[rip+0x5abd]        # d555 <_IO_stdin_used+0x1555>
    7a98:	e8 1b ff ff ff       	call   79b8 <member_exists>
    7a9d:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    7aa0:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    7aa4:	74 2b                	je     7ad1 <init_member+0xa7>
    7aa6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    7aa9:	48 63 d0             	movsxd rdx,eax
    7aac:	48 89 d0             	mov    rax,rdx
    7aaf:	48 c1 e0 02          	shl    rax,0x2
    7ab3:	48 01 d0             	add    rax,rdx
    7ab6:	48 c1 e0 03          	shl    rax,0x3
    7aba:	48 01 d0             	add    rax,rdx
    7abd:	48 c1 e0 04          	shl    rax,0x4
    7ac1:	48 8d 15 58 ba 0e 00 	lea    rdx,[rip+0xeba58]        # f3520 <watchlist>
    7ac8:	48 01 d0             	add    rax,rdx
    7acb:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7acf:	eb 3b                	jmp    7b0c <init_member+0xe2>
    7ad1:	8b 05 41 95 00 00    	mov    eax,DWORD PTR [rip+0x9541]        # 11018 <watchlist_num>
    7ad7:	83 c0 01             	add    eax,0x1
    7ada:	89 05 38 95 00 00    	mov    DWORD PTR [rip+0x9538],eax        # 11018 <watchlist_num>
    7ae0:	8b 05 32 95 00 00    	mov    eax,DWORD PTR [rip+0x9532]        # 11018 <watchlist_num>
    7ae6:	48 63 d0             	movsxd rdx,eax
    7ae9:	48 89 d0             	mov    rax,rdx
    7aec:	48 c1 e0 02          	shl    rax,0x2
    7af0:	48 01 d0             	add    rax,rdx
    7af3:	48 c1 e0 03          	shl    rax,0x3
    7af7:	48 01 d0             	add    rax,rdx
    7afa:	48 c1 e0 04          	shl    rax,0x4
    7afe:	48 8d 15 1b ba 0e 00 	lea    rdx,[rip+0xeba1b]        # f3520 <watchlist>
    7b05:	48 01 d0             	add    rax,rdx
    7b08:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7b0c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b10:	ba 08 00 00 00       	mov    edx,0x8
    7b15:	be 00 00 00 00       	mov    esi,0x0
    7b1a:	48 89 c7             	mov    rdi,rax
    7b1d:	e8 ae a9 ff ff       	call   24d0 <memset@plt>
    7b22:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b26:	48 8d 50 08          	lea    rdx,[rax+0x8]
    7b2a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7b2e:	48 89 c6             	mov    rsi,rax
    7b31:	48 89 d7             	mov    rdi,rdx
    7b34:	e8 b7 ac ff ff       	call   27f0 <strcpy@plt>
    7b39:	c9                   	leave  
    7b3a:	c3                   	ret    

0000000000007b3b <ready_for_clean>:
    7b3b:	f3 0f 1e fa          	endbr64 
    7b3f:	55                   	push   rbp
    7b40:	48 89 e5             	mov    rbp,rsp
    7b43:	48 83 ec 10          	sub    rsp,0x10
    7b47:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7b4b:	bf 00 00 00 00       	mov    edi,0x0
    7b50:	e8 9b ad ff ff       	call   28f0 <time@plt>
    7b55:	48 89 c2             	mov    rdx,rax
    7b58:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b5c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    7b5f:	48 29 c2             	sub    rdx,rax
    7b62:	48 8b 05 4f 97 00 00 	mov    rax,QWORD PTR [rip+0x974f]        # 112b8 <clean_delay>
    7b69:	48 39 c2             	cmp    rdx,rax
    7b6c:	72 22                	jb     7b90 <ready_for_clean+0x55>
    7b6e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7b72:	48 83 c0 08          	add    rax,0x8
    7b76:	48 8d 35 e0 59 00 00 	lea    rsi,[rip+0x59e0]        # d55d <_IO_stdin_used+0x155d>
    7b7d:	48 89 c7             	mov    rdi,rax
    7b80:	e8 3b ac ff ff       	call   27c0 <strcmp@plt>
    7b85:	85 c0                	test   eax,eax
    7b87:	74 07                	je     7b90 <ready_for_clean+0x55>
    7b89:	b8 01 00 00 00       	mov    eax,0x1
    7b8e:	eb 05                	jmp    7b95 <ready_for_clean+0x5a>
    7b90:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7b95:	c9                   	leave  
    7b96:	c3                   	ret    

0000000000007b97 <clean>:
    7b97:	f3 0f 1e fa          	endbr64 
    7b9b:	55                   	push   rbp
    7b9c:	48 89 e5             	mov    rbp,rsp
    7b9f:	48 83 ec 10          	sub    rsp,0x10
    7ba3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7ba7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bab:	ba 08 00 00 00       	mov    edx,0x8
    7bb0:	be 00 00 00 00       	mov    esi,0x0
    7bb5:	48 89 c7             	mov    rdi,rax
    7bb8:	e8 13 a9 ff ff       	call   24d0 <memset@plt>
    7bbd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7bc1:	48 83 c0 08          	add    rax,0x8
    7bc5:	48 b9 30 2e 30 2e 30 	movabs rcx,0x312e302e302e30
    7bcc:	2e 31 00 
    7bcf:	48 89 08             	mov    QWORD PTR [rax],rcx
    7bd2:	90                   	nop
    7bd3:	c9                   	leave  
    7bd4:	c3                   	ret    

0000000000007bd5 <scan_for_clean>:
    7bd5:	f3 0f 1e fa          	endbr64 
    7bd9:	55                   	push   rbp
    7bda:	48 89 e5             	mov    rbp,rsp
    7bdd:	48 83 ec 10          	sub    rsp,0x10
    7be1:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7be8:	eb 62                	jmp    7c4c <scan_for_clean+0x77>
    7bea:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7bed:	48 63 d0             	movsxd rdx,eax
    7bf0:	48 89 d0             	mov    rax,rdx
    7bf3:	48 c1 e0 02          	shl    rax,0x2
    7bf7:	48 01 d0             	add    rax,rdx
    7bfa:	48 c1 e0 03          	shl    rax,0x3
    7bfe:	48 01 d0             	add    rax,rdx
    7c01:	48 c1 e0 04          	shl    rax,0x4
    7c05:	48 8d 15 14 b9 0e 00 	lea    rdx,[rip+0xeb914]        # f3520 <watchlist>
    7c0c:	48 01 d0             	add    rax,rdx
    7c0f:	48 89 c7             	mov    rdi,rax
    7c12:	e8 24 ff ff ff       	call   7b3b <ready_for_clean>
    7c17:	85 c0                	test   eax,eax
    7c19:	7e 2d                	jle    7c48 <scan_for_clean+0x73>
    7c1b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c1e:	48 63 d0             	movsxd rdx,eax
    7c21:	48 89 d0             	mov    rax,rdx
    7c24:	48 c1 e0 02          	shl    rax,0x2
    7c28:	48 01 d0             	add    rax,rdx
    7c2b:	48 c1 e0 03          	shl    rax,0x3
    7c2f:	48 01 d0             	add    rax,rdx
    7c32:	48 c1 e0 04          	shl    rax,0x4
    7c36:	48 8d 15 e3 b8 0e 00 	lea    rdx,[rip+0xeb8e3]        # f3520 <watchlist>
    7c3d:	48 01 d0             	add    rax,rdx
    7c40:	48 89 c7             	mov    rdi,rax
    7c43:	e8 4f ff ff ff       	call   7b97 <clean>
    7c48:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7c4c:	8b 05 c6 93 00 00    	mov    eax,DWORD PTR [rip+0x93c6]        # 11018 <watchlist_num>
    7c52:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7c55:	7e 93                	jle    7bea <scan_for_clean+0x15>
    7c57:	90                   	nop
    7c58:	90                   	nop
    7c59:	c9                   	leave  
    7c5a:	c3                   	ret    

0000000000007c5b <compare_entries>:
    7c5b:	f3 0f 1e fa          	endbr64 
    7c5f:	55                   	push   rbp
    7c60:	48 89 e5             	mov    rbp,rsp
    7c63:	48 83 ec 20          	sub    rsp,0x20
    7c67:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7c6b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7c6f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7c76:	e9 ac 00 00 00       	jmp    7d27 <compare_entries+0xcc>
    7c7b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7c7e:	48 63 d0             	movsxd rdx,eax
    7c81:	48 89 d0             	mov    rax,rdx
    7c84:	48 c1 e0 04          	shl    rax,0x4
    7c88:	48 01 d0             	add    rax,rdx
    7c8b:	48 01 c0             	add    rax,rax
    7c8e:	48 8d 15 8b 00 10 00 	lea    rdx,[rip+0x10008b]        # 107d20 <arpcache>
    7c95:	48 01 c2             	add    rdx,rax
    7c98:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7c9c:	48 89 c6             	mov    rsi,rax
    7c9f:	48 89 d7             	mov    rdi,rdx
    7ca2:	e8 a3 01 00 00       	call   7e4a <compare_ip_entry>
    7ca7:	85 c0                	test   eax,eax
    7ca9:	74 78                	je     7d23 <compare_entries+0xc8>
    7cab:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7cae:	48 63 d0             	movsxd rdx,eax
    7cb1:	48 89 d0             	mov    rax,rdx
    7cb4:	48 c1 e0 04          	shl    rax,0x4
    7cb8:	48 01 d0             	add    rax,rdx
    7cbb:	48 01 c0             	add    rax,rax
    7cbe:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7cc2:	48 8d 05 57 00 10 00 	lea    rax,[rip+0x100057]        # 107d20 <arpcache>
    7cc9:	48 01 c2             	add    rdx,rax
    7ccc:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7cd0:	48 89 c6             	mov    rsi,rax
    7cd3:	48 89 d7             	mov    rdi,rdx
    7cd6:	e8 98 01 00 00       	call   7e73 <compare_mac_entry>
    7cdb:	85 c0                	test   eax,eax
    7cdd:	75 44                	jne    7d23 <compare_entries+0xc8>
    7cdf:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7ce2:	48 63 d0             	movsxd rdx,eax
    7ce5:	48 89 d0             	mov    rax,rdx
    7ce8:	48 c1 e0 04          	shl    rax,0x4
    7cec:	48 01 d0             	add    rax,rdx
    7cef:	48 01 c0             	add    rax,rax
    7cf2:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7cf6:	48 8d 05 23 00 10 00 	lea    rax,[rip+0x100023]        # 107d20 <arpcache>
    7cfd:	48 8d 34 02          	lea    rsi,[rdx+rax*1]
    7d01:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    7d05:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7d09:	48 89 d1             	mov    rcx,rdx
    7d0c:	48 89 f2             	mov    rdx,rsi
    7d0f:	48 89 c6             	mov    rsi,rax
    7d12:	48 8d 3d 4f 58 00 00 	lea    rdi,[rip+0x584f]        # d568 <_IO_stdin_used+0x1568>
    7d19:	b8 00 00 00 00       	mov    eax,0x0
    7d1e:	e8 9d a7 ff ff       	call   24c0 <printf@plt>
    7d23:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7d27:	8b 05 ef 92 00 00    	mov    eax,DWORD PTR [rip+0x92ef]        # 1101c <arp_entries>
    7d2d:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7d30:	0f 8e 45 ff ff ff    	jle    7c7b <compare_entries+0x20>
    7d36:	90                   	nop
    7d37:	90                   	nop
    7d38:	c9                   	leave  
    7d39:	c3                   	ret    

0000000000007d3a <add_entry>:
    7d3a:	f3 0f 1e fa          	endbr64 
    7d3e:	55                   	push   rbp
    7d3f:	48 89 e5             	mov    rbp,rsp
    7d42:	48 83 ec 20          	sub    rsp,0x20
    7d46:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7d4a:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7d4e:	8b 05 c8 92 00 00    	mov    eax,DWORD PTR [rip+0x92c8]        # 1101c <arp_entries>
    7d54:	83 c0 01             	add    eax,0x1
    7d57:	89 05 bf 92 00 00    	mov    DWORD PTR [rip+0x92bf],eax        # 1101c <arp_entries>
    7d5d:	8b 05 b9 92 00 00    	mov    eax,DWORD PTR [rip+0x92b9]        # 1101c <arp_entries>
    7d63:	48 63 d0             	movsxd rdx,eax
    7d66:	48 89 d0             	mov    rax,rdx
    7d69:	48 c1 e0 04          	shl    rax,0x4
    7d6d:	48 01 d0             	add    rax,rdx
    7d70:	48 01 c0             	add    rax,rax
    7d73:	48 8d 15 a6 ff 0f 00 	lea    rdx,[rip+0xfffa6]        # 107d20 <arpcache>
    7d7a:	48 01 d0             	add    rax,rdx
    7d7d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    7d81:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d85:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    7d89:	48 89 d6             	mov    rsi,rdx
    7d8c:	48 89 c7             	mov    rdi,rax
    7d8f:	e8 5c aa ff ff       	call   27f0 <strcpy@plt>
    7d94:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7d98:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7d9c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7da0:	48 89 c6             	mov    rsi,rax
    7da3:	48 89 d7             	mov    rdi,rdx
    7da6:	e8 45 aa ff ff       	call   27f0 <strcpy@plt>
    7dab:	90                   	nop
    7dac:	c9                   	leave  
    7dad:	c3                   	ret    

0000000000007dae <entry_exists>:
    7dae:	f3 0f 1e fa          	endbr64 
    7db2:	55                   	push   rbp
    7db3:	48 89 e5             	mov    rbp,rsp
    7db6:	48 83 ec 20          	sub    rsp,0x20
    7dba:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7dbe:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    7dc2:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    7dc9:	eb 6d                	jmp    7e38 <entry_exists+0x8a>
    7dcb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7dce:	48 63 d0             	movsxd rdx,eax
    7dd1:	48 89 d0             	mov    rax,rdx
    7dd4:	48 c1 e0 04          	shl    rax,0x4
    7dd8:	48 01 d0             	add    rax,rdx
    7ddb:	48 01 c0             	add    rax,rax
    7dde:	48 8d 15 3b ff 0f 00 	lea    rdx,[rip+0xfff3b]        # 107d20 <arpcache>
    7de5:	48 01 c2             	add    rdx,rax
    7de8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    7dec:	48 89 c6             	mov    rsi,rax
    7def:	48 89 d7             	mov    rdi,rdx
    7df2:	e8 53 00 00 00       	call   7e4a <compare_ip_entry>
    7df7:	85 c0                	test   eax,eax
    7df9:	75 39                	jne    7e34 <entry_exists+0x86>
    7dfb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7dfe:	48 63 d0             	movsxd rdx,eax
    7e01:	48 89 d0             	mov    rax,rdx
    7e04:	48 c1 e0 04          	shl    rax,0x4
    7e08:	48 01 d0             	add    rax,rdx
    7e0b:	48 01 c0             	add    rax,rax
    7e0e:	48 8d 50 10          	lea    rdx,[rax+0x10]
    7e12:	48 8d 05 07 ff 0f 00 	lea    rax,[rip+0xfff07]        # 107d20 <arpcache>
    7e19:	48 01 c2             	add    rdx,rax
    7e1c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    7e20:	48 89 c6             	mov    rsi,rax
    7e23:	48 89 d7             	mov    rdi,rdx
    7e26:	e8 48 00 00 00       	call   7e73 <compare_mac_entry>
    7e2b:	85 c0                	test   eax,eax
    7e2d:	75 05                	jne    7e34 <entry_exists+0x86>
    7e2f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    7e32:	eb 14                	jmp    7e48 <entry_exists+0x9a>
    7e34:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    7e38:	8b 05 de 91 00 00    	mov    eax,DWORD PTR [rip+0x91de]        # 1101c <arp_entries>
    7e3e:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    7e41:	7e 88                	jle    7dcb <entry_exists+0x1d>
    7e43:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7e48:	c9                   	leave  
    7e49:	c3                   	ret    

0000000000007e4a <compare_ip_entry>:
    7e4a:	f3 0f 1e fa          	endbr64 
    7e4e:	55                   	push   rbp
    7e4f:	48 89 e5             	mov    rbp,rsp
    7e52:	48 83 ec 10          	sub    rsp,0x10
    7e56:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7e5a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7e5e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7e62:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e66:	48 89 d6             	mov    rsi,rdx
    7e69:	48 89 c7             	mov    rdi,rax
    7e6c:	e8 4f a9 ff ff       	call   27c0 <strcmp@plt>
    7e71:	c9                   	leave  
    7e72:	c3                   	ret    

0000000000007e73 <compare_mac_entry>:
    7e73:	f3 0f 1e fa          	endbr64 
    7e77:	55                   	push   rbp
    7e78:	48 89 e5             	mov    rbp,rsp
    7e7b:	48 83 ec 10          	sub    rsp,0x10
    7e7f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    7e83:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    7e87:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    7e8b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    7e8f:	48 89 d6             	mov    rsi,rdx
    7e92:	48 89 c7             	mov    rdi,rax
    7e95:	e8 26 a9 ff ff       	call   27c0 <strcmp@plt>
    7e9a:	c9                   	leave  
    7e9b:	c3                   	ret    

0000000000007e9c <load_csv_arp_cache>:
    7e9c:	f3 0f 1e fa          	endbr64 
    7ea0:	55                   	push   rbp
    7ea1:	48 89 e5             	mov    rbp,rsp
    7ea4:	53                   	push   rbx
    7ea5:	48 83 ec 68          	sub    rsp,0x68
    7ea9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    7eb0:	00 00 
    7eb2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    7eb6:	31 c0                	xor    eax,eax
    7eb8:	48 8d 35 df 56 00 00 	lea    rsi,[rip+0x56df]        # d59e <_IO_stdin_used+0x159e>
    7ebf:	48 8d 3d da 56 00 00 	lea    rdi,[rip+0x56da]        # d5a0 <_IO_stdin_used+0x15a0>
    7ec6:	e8 e5 a6 ff ff       	call   25b0 <fopen@plt>
    7ecb:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    7ecf:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    7ed4:	75 22                	jne    7ef8 <load_csv_arp_cache+0x5c>
    7ed6:	48 8d 3d e3 56 00 00 	lea    rdi,[rip+0x56e3]        # d5c0 <_IO_stdin_used+0x15c0>
    7edd:	e8 3e a6 ff ff       	call   2520 <puts@plt>
    7ee2:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7ee6:	48 89 c7             	mov    rdi,rax
    7ee9:	e8 42 a9 ff ff       	call   2830 <fclose@plt>
    7eee:	b8 ff ff ff ff       	mov    eax,0xffffffff
    7ef3:	e9 dd 00 00 00       	jmp    7fd5 <load_csv_arp_cache+0x139>
    7ef8:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    7eff:	00 
    7f00:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    7f07:	00 
    7f08:	eb 7c                	jmp    7f86 <load_csv_arp_cache+0xea>
    7f0a:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f0e:	48 85 c0             	test   rax,rax
    7f11:	0f 84 97 00 00 00    	je     7fae <load_csv_arp_cache+0x112>
    7f17:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    7f1b:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f1f:	48 8d 35 d3 56 00 00 	lea    rsi,[rip+0x56d3]        # d5f9 <_IO_stdin_used+0x15f9>
    7f26:	48 89 c7             	mov    rdi,rax
    7f29:	e8 22 a9 ff ff       	call   2850 <strcspn@plt>
    7f2e:	48 01 d8             	add    rax,rbx
    7f31:	c6 00 00             	mov    BYTE PTR [rax],0x0
    7f34:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7f38:	48 8d 35 bc 56 00 00 	lea    rsi,[rip+0x56bc]        # d5fb <_IO_stdin_used+0x15fb>
    7f3f:	48 89 c7             	mov    rdi,rax
    7f42:	e8 b9 a8 ff ff       	call   2800 <strtok@plt>
    7f47:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7f4b:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7f4f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    7f53:	48 89 d6             	mov    rsi,rdx
    7f56:	48 89 c7             	mov    rdi,rax
    7f59:	e8 92 a8 ff ff       	call   27f0 <strcpy@plt>
    7f5e:	48 8d 35 96 56 00 00 	lea    rsi,[rip+0x5696]        # d5fb <_IO_stdin_used+0x15fb>
    7f65:	bf 00 00 00 00       	mov    edi,0x0
    7f6a:	e8 91 a8 ff ff       	call   2800 <strtok@plt>
    7f6f:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    7f73:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    7f77:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    7f7b:	48 89 d6             	mov    rsi,rdx
    7f7e:	48 89 c7             	mov    rdi,rax
    7f81:	e8 6a a8 ff ff       	call   27f0 <strcpy@plt>
    7f86:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    7f8a:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    7f8e:	48 8d 45 98          	lea    rax,[rbp-0x68]
    7f92:	48 89 ce             	mov    rsi,rcx
    7f95:	48 89 c7             	mov    rdi,rax
    7f98:	e8 43 a8 ff ff       	call   27e0 <getline@plt>
    7f9d:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    7fa1:	48 83 7d b0 ff       	cmp    QWORD PTR [rbp-0x50],0xffffffffffffffff
    7fa6:	0f 85 5e ff ff ff    	jne    7f0a <load_csv_arp_cache+0x6e>
    7fac:	eb 01                	jmp    7faf <load_csv_arp_cache+0x113>
    7fae:	90                   	nop
    7faf:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7fb3:	48 85 c0             	test   rax,rax
    7fb6:	74 0c                	je     7fc4 <load_csv_arp_cache+0x128>
    7fb8:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    7fbc:	48 89 c7             	mov    rdi,rax
    7fbf:	e8 6c a6 ff ff       	call   2630 <free@plt>
    7fc4:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    7fc8:	48 89 c7             	mov    rdi,rax
    7fcb:	e8 60 a8 ff ff       	call   2830 <fclose@plt>
    7fd0:	b8 01 00 00 00       	mov    eax,0x1
    7fd5:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    7fd9:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    7fe0:	00 00 
    7fe2:	74 05                	je     7fe9 <load_csv_arp_cache+0x14d>
    7fe4:	e8 c7 a7 ff ff       	call   27b0 <__stack_chk_fail@plt>
    7fe9:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    7fed:	c9                   	leave  
    7fee:	c3                   	ret    

0000000000007fef <tls_decode>:
    7fef:	f3 0f 1e fa          	endbr64 
    7ff3:	55                   	push   rbp
    7ff4:	48 89 e5             	mov    rbp,rsp
    7ff7:	48 83 ec 30          	sub    rsp,0x30
    7ffb:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    7fff:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8003:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    8007:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    800b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    800f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8013:	0f b7 40 01          	movzx  eax,WORD PTR [rax+0x1]
    8017:	0f b7 c0             	movzx  eax,ax
    801a:	3d 03 03 00 00       	cmp    eax,0x303
    801f:	74 6a                	je     808b <tls_decode+0x9c>
    8021:	3d 03 03 00 00       	cmp    eax,0x303
    8026:	0f 8f c7 00 00 00    	jg     80f3 <tls_decode+0x104>
    802c:	3d 01 03 00 00       	cmp    eax,0x301
    8031:	74 0c                	je     803f <tls_decode+0x50>
    8033:	3d 02 03 00 00       	cmp    eax,0x302
    8038:	74 2b                	je     8065 <tls_decode+0x76>
    803a:	e9 b4 00 00 00       	jmp    80f3 <tls_decode+0x104>
    803f:	0f b6 05 1e 1f 10 00 	movzx  eax,BYTE PTR [rip+0x101f1e]        # 109f64 <packet_print>
    8046:	84 c0                	test   al,al
    8048:	74 11                	je     805b <tls_decode+0x6c>
    804a:	48 8d 3d af 55 00 00 	lea    rdi,[rip+0x55af]        # d600 <_IO_stdin_used+0x1600>
    8051:	b8 00 00 00 00       	mov    eax,0x0
    8056:	e8 65 a4 ff ff       	call   24c0 <printf@plt>
    805b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    805f:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8063:	eb 4b                	jmp    80b0 <tls_decode+0xc1>
    8065:	0f b6 05 f8 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101ef8]        # 109f64 <packet_print>
    806c:	84 c0                	test   al,al
    806e:	74 11                	je     8081 <tls_decode+0x92>
    8070:	48 8d 3d 98 55 00 00 	lea    rdi,[rip+0x5598]        # d60f <_IO_stdin_used+0x160f>
    8077:	b8 00 00 00 00       	mov    eax,0x0
    807c:	e8 3f a4 ff ff       	call   24c0 <printf@plt>
    8081:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8085:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8089:	eb 25                	jmp    80b0 <tls_decode+0xc1>
    808b:	0f b6 05 d2 1e 10 00 	movzx  eax,BYTE PTR [rip+0x101ed2]        # 109f64 <packet_print>
    8092:	84 c0                	test   al,al
    8094:	74 11                	je     80a7 <tls_decode+0xb8>
    8096:	48 8d 3d 81 55 00 00 	lea    rdi,[rip+0x5581]        # d61e <_IO_stdin_used+0x161e>
    809d:	b8 00 00 00 00       	mov    eax,0x0
    80a2:	e8 19 a4 ff ff       	call   24c0 <printf@plt>
    80a7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    80ab:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    80af:	90                   	nop
    80b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    80b4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    80b7:	0f b6 c0             	movzx  eax,al
    80ba:	83 f8 17             	cmp    eax,0x17
    80bd:	74 37                	je     80f6 <tls_decode+0x107>
    80bf:	83 f8 17             	cmp    eax,0x17
    80c2:	7f 35                	jg     80f9 <tls_decode+0x10a>
    80c4:	83 f8 16             	cmp    eax,0x16
    80c7:	74 11                	je     80da <tls_decode+0xeb>
    80c9:	83 f8 16             	cmp    eax,0x16
    80cc:	7f 2b                	jg     80f9 <tls_decode+0x10a>
    80ce:	83 f8 14             	cmp    eax,0x14
    80d1:	74 29                	je     80fc <tls_decode+0x10d>
    80d3:	83 f8 15             	cmp    eax,0x15
    80d6:	74 27                	je     80ff <tls_decode+0x110>
    80d8:	eb 1f                	jmp    80f9 <tls_decode+0x10a>
    80da:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    80de:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    80e2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    80e6:	48 89 ce             	mov    rsi,rcx
    80e9:	48 89 c7             	mov    rdi,rax
    80ec:	e8 11 00 00 00       	call   8102 <tlshandshake>
    80f1:	eb 0d                	jmp    8100 <tls_decode+0x111>
    80f3:	90                   	nop
    80f4:	eb 0a                	jmp    8100 <tls_decode+0x111>
    80f6:	90                   	nop
    80f7:	eb 07                	jmp    8100 <tls_decode+0x111>
    80f9:	90                   	nop
    80fa:	eb 04                	jmp    8100 <tls_decode+0x111>
    80fc:	90                   	nop
    80fd:	eb 01                	jmp    8100 <tls_decode+0x111>
    80ff:	90                   	nop
    8100:	c9                   	leave  
    8101:	c3                   	ret    

0000000000008102 <tlshandshake>:
    8102:	f3 0f 1e fa          	endbr64 
    8106:	55                   	push   rbp
    8107:	48 89 e5             	mov    rbp,rsp
    810a:	48 83 ec 30          	sub    rsp,0x30
    810e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8112:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    8116:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    811a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    811e:	48 83 c0 08          	add    rax,0x8
    8122:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8126:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    812a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    812d:	0f b6 c0             	movzx  eax,al
    8130:	83 f8 0b             	cmp    eax,0xb
    8133:	0f 87 bf 00 00 00    	ja     81f8 <tlshandshake+0xf6>
    8139:	89 c0                	mov    eax,eax
    813b:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    8142:	00 
    8143:	48 8d 05 2a 55 00 00 	lea    rax,[rip+0x552a]        # d674 <_IO_stdin_used+0x1674>
    814a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    814d:	48 98                	cdqe   
    814f:	48 8d 15 1e 55 00 00 	lea    rdx,[rip+0x551e]        # d674 <_IO_stdin_used+0x1674>
    8156:	48 01 d0             	add    rax,rdx
    8159:	3e ff e0             	notrack jmp rax
    815c:	48 8d 3d ca 54 00 00 	lea    rdi,[rip+0x54ca]        # d62d <_IO_stdin_used+0x162d>
    8163:	e8 b8 a3 ff ff       	call   2520 <puts@plt>
    8168:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    816c:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8170:	e9 83 00 00 00       	jmp    81f8 <tlshandshake+0xf6>
    8175:	0f b6 05 e8 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101de8]        # 109f64 <packet_print>
    817c:	84 c0                	test   al,al
    817e:	74 0c                	je     818c <tlshandshake+0x8a>
    8180:	48 8d 3d b3 54 00 00 	lea    rdi,[rip+0x54b3]        # d63a <_IO_stdin_used+0x163a>
    8187:	e8 94 a3 ff ff       	call   2520 <puts@plt>
    818c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8190:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    8194:	eb 62                	jmp    81f8 <tlshandshake+0xf6>
    8196:	0f b6 05 c7 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101dc7]        # 109f64 <packet_print>
    819d:	84 c0                	test   al,al
    819f:	74 0c                	je     81ad <tlshandshake+0xab>
    81a1:	48 8d 3d 9f 54 00 00 	lea    rdi,[rip+0x549f]        # d647 <_IO_stdin_used+0x1647>
    81a8:	e8 73 a3 ff ff       	call   2520 <puts@plt>
    81ad:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81b1:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81b5:	eb 41                	jmp    81f8 <tlshandshake+0xf6>
    81b7:	0f b6 05 a6 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101da6]        # 109f64 <packet_print>
    81be:	84 c0                	test   al,al
    81c0:	74 0c                	je     81ce <tlshandshake+0xcc>
    81c2:	48 8d 3d 91 54 00 00 	lea    rdi,[rip+0x5491]        # d65a <_IO_stdin_used+0x165a>
    81c9:	e8 52 a3 ff ff       	call   2520 <puts@plt>
    81ce:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81d2:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81d6:	eb 20                	jmp    81f8 <tlshandshake+0xf6>
    81d8:	0f b6 05 85 1d 10 00 	movzx  eax,BYTE PTR [rip+0x101d85]        # 109f64 <packet_print>
    81df:	84 c0                	test   al,al
    81e1:	74 0c                	je     81ef <tlshandshake+0xed>
    81e3:	48 8d 3d 7c 54 00 00 	lea    rdi,[rip+0x547c]        # d666 <_IO_stdin_used+0x1666>
    81ea:	e8 31 a3 ff ff       	call   2520 <puts@plt>
    81ef:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    81f3:	c6 40 38 01          	mov    BYTE PTR [rax+0x38],0x1
    81f7:	90                   	nop
    81f8:	90                   	nop
    81f9:	c9                   	leave  
    81fa:	c3                   	ret    

00000000000081fb <process_opcode>:
    81fb:	f3 0f 1e fa          	endbr64 
    81ff:	55                   	push   rbp
    8200:	48 89 e5             	mov    rbp,rsp
    8203:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    820a:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    8211:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    8218:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    821f:	00 00 
    8221:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8225:	31 c0                	xor    eax,eax
    8227:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    822e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    8231:	0f b6 c0             	movzx  eax,al
    8234:	3d db 00 00 00       	cmp    eax,0xdb
    8239:	75 4b                	jne    8286 <process_opcode+0x8b>
    823b:	c6 85 e4 fb ff ff db 	mov    BYTE PTR [rbp-0x41c],0xdb
    8242:	8b 85 e4 fb ff ff    	mov    eax,DWORD PTR [rbp-0x41c]
    8248:	0f b6 c0             	movzx  eax,al
    824b:	0d 00 00 00 01       	or     eax,0x1000000
    8250:	89 85 e4 fb ff ff    	mov    DWORD PTR [rbp-0x41c],eax
    8256:	48 8d 85 e4 fb ff ff 	lea    rax,[rbp-0x41c]
    825d:	48 89 85 e8 fb ff ff 	mov    QWORD PTR [rbp-0x418],rax
    8264:	48 8b 85 d0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x430]
    826b:	8b 00                	mov    eax,DWORD PTR [rax]
    826d:	48 8b b5 e8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x418]
    8274:	b9 00 00 00 00       	mov    ecx,0x0
    8279:	ba 04 00 00 00       	mov    edx,0x4
    827e:	89 c7                	mov    edi,eax
    8280:	e8 4b a5 ff ff       	call   27d0 <send@plt>
    8285:	90                   	nop
    8286:	90                   	nop
    8287:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    828b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    8292:	00 00 
    8294:	74 05                	je     829b <process_opcode+0xa0>
    8296:	e8 15 a5 ff ff       	call   27b0 <__stack_chk_fail@plt>
    829b:	c9                   	leave  
    829c:	c3                   	ret    

000000000000829d <callback>:
    829d:	f3 0f 1e fa          	endbr64 
    82a1:	55                   	push   rbp
    82a2:	48 89 e5             	mov    rbp,rsp
    82a5:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    82a9:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
    82ac:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    82b0:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    82b4:	b8 00 00 00 00       	mov    eax,0x0
    82b9:	5d                   	pop    rbp
    82ba:	c3                   	ret    

00000000000082bb <update_db>:
    82bb:	f3 0f 1e fa          	endbr64 
    82bf:	55                   	push   rbp
    82c0:	48 89 e5             	mov    rbp,rsp
    82c3:	48 81 ec 40 02 00 00 	sub    rsp,0x240
    82ca:	48 89 bd c8 fd ff ff 	mov    QWORD PTR [rbp-0x238],rdi
    82d1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    82d8:	00 00 
    82da:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    82de:	31 c0                	xor    eax,eax
    82e0:	48 8b 85 c8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x238]
    82e7:	48 89 85 e8 fd ff ff 	mov    QWORD PTR [rbp-0x218],rax
    82ee:	48 8d 3d b3 53 00 00 	lea    rdi,[rip+0x53b3]        # d6a8 <_IO_stdin_used+0x16a8>
    82f5:	e8 26 a2 ff ff       	call   2520 <puts@plt>
    82fa:	48 c7 85 d8 fd ff ff 	mov    QWORD PTR [rbp-0x228],0x0
    8301:	00 00 00 00 
    8305:	48 8d 85 e0 fd ff ff 	lea    rax,[rbp-0x220]
    830c:	48 89 c6             	mov    rsi,rax
    830f:	48 8d 3d 2a 1c 10 00 	lea    rdi,[rip+0x101c2a]        # 109f40 <sqlite_db_path>
    8316:	e8 c5 a5 ff ff       	call   28e0 <sqlite3_open@plt>
    831b:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    8321:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    8328:	74 28                	je     8352 <update_db+0x97>
    832a:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    8331:	48 89 c7             	mov    rdi,rax
    8334:	e8 e7 a4 ff ff       	call   2820 <sqlite3_errmsg@plt>
    8339:	48 89 c6             	mov    rsi,rax
    833c:	48 8d 3d 71 53 00 00 	lea    rdi,[rip+0x5371]        # d6b4 <_IO_stdin_used+0x16b4>
    8343:	b8 00 00 00 00       	mov    eax,0x0
    8348:	e8 73 a1 ff ff       	call   24c0 <printf@plt>
    834d:	e9 a2 00 00 00       	jmp    83f4 <update_db+0x139>
    8352:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    8359:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    835c:	85 c0                	test   eax,eax
    835e:	75 2e                	jne    838e <update_db+0xd3>
    8360:	48 8b 85 e8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x218]
    8367:	48 8d 48 10          	lea    rcx,[rax+0x10]
    836b:	48 8b 95 e8 fd ff ff 	mov    rdx,QWORD PTR [rbp-0x218]
    8372:	48 8d 85 f0 fd ff ff 	lea    rax,[rbp-0x210]
    8379:	48 8d 35 48 53 00 00 	lea    rsi,[rip+0x5348]        # d6c8 <_IO_stdin_used+0x16c8>
    8380:	48 89 c7             	mov    rdi,rax
    8383:	b8 00 00 00 00       	mov    eax,0x0
    8388:	e8 f3 a2 ff ff       	call   2680 <sprintf@plt>
    838d:	90                   	nop
    838e:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    8395:	48 8d 95 d8 fd ff ff 	lea    rdx,[rbp-0x228]
    839c:	48 8d b5 f0 fd ff ff 	lea    rsi,[rbp-0x210]
    83a3:	49 89 d0             	mov    r8,rdx
    83a6:	b9 00 00 00 00       	mov    ecx,0x0
    83ab:	ba 00 00 00 00       	mov    edx,0x0
    83b0:	48 89 c7             	mov    rdi,rax
    83b3:	e8 a8 a1 ff ff       	call   2560 <sqlite3_exec@plt>
    83b8:	89 85 d4 fd ff ff    	mov    DWORD PTR [rbp-0x22c],eax
    83be:	83 bd d4 fd ff ff 00 	cmp    DWORD PTR [rbp-0x22c],0x0
    83c5:	74 2c                	je     83f3 <update_db+0x138>
    83c7:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    83ce:	48 89 c6             	mov    rsi,rax
    83d1:	48 8d 3d 35 53 00 00 	lea    rdi,[rip+0x5335]        # d70d <_IO_stdin_used+0x170d>
    83d8:	b8 00 00 00 00       	mov    eax,0x0
    83dd:	e8 de a0 ff ff       	call   24c0 <printf@plt>
    83e2:	48 8b 85 d8 fd ff ff 	mov    rax,QWORD PTR [rbp-0x228]
    83e9:	48 89 c7             	mov    rdi,rax
    83ec:	e8 ff a1 ff ff       	call   25f0 <sqlite3_free@plt>
    83f1:	eb 01                	jmp    83f4 <update_db+0x139>
    83f3:	90                   	nop
    83f4:	48 8b 85 e0 fd ff ff 	mov    rax,QWORD PTR [rbp-0x220]
    83fb:	48 89 c7             	mov    rdi,rax
    83fe:	e8 9d a0 ff ff       	call   24a0 <sqlite3_close@plt>
    8403:	b8 01 00 00 00       	mov    eax,0x1
    8408:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    840c:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    8413:	00 00 
    8415:	74 05                	je     841c <update_db+0x161>
    8417:	e8 94 a3 ff ff       	call   27b0 <__stack_chk_fail@plt>
    841c:	c9                   	leave  
    841d:	c3                   	ret    

000000000000841e <update_spi_db>:
    841e:	f3 0f 1e fa          	endbr64 
    8422:	55                   	push   rbp
    8423:	48 89 e5             	mov    rbp,rsp
    8426:	41 57                	push   r15
    8428:	41 56                	push   r14
    842a:	41 55                	push   r13
    842c:	41 54                	push   r12
    842e:	53                   	push   rbx
    842f:	48 81 ec 48 04 00 00 	sub    rsp,0x448
    8436:	48 89 bd 98 fb ff ff 	mov    QWORD PTR [rbp-0x468],rdi
    843d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8444:	00 00 
    8446:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    844a:	31 c0                	xor    eax,eax
    844c:	48 8b 85 98 fb ff ff 	mov    rax,QWORD PTR [rbp-0x468]
    8453:	48 89 85 b0 fb ff ff 	mov    QWORD PTR [rbp-0x450],rax
    845a:	48 8d 85 a0 fb ff ff 	lea    rax,[rbp-0x460]
    8461:	48 89 c6             	mov    rsi,rax
    8464:	48 8d 3d c0 52 00 00 	lea    rdi,[rip+0x52c0]        # d72b <_IO_stdin_used+0x172b>
    846b:	e8 70 a4 ff ff       	call   28e0 <sqlite3_open@plt>
    8470:	85 c0                	test   eax,eax
    8472:	74 3c                	je     84b0 <update_spi_db+0x92>
    8474:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    847b:	48 89 c7             	mov    rdi,rax
    847e:	e8 9d a3 ff ff       	call   2820 <sqlite3_errmsg@plt>
    8483:	48 89 c6             	mov    rsi,rax
    8486:	48 8d 3d b6 52 00 00 	lea    rdi,[rip+0x52b6]        # d743 <_IO_stdin_used+0x1743>
    848d:	b8 00 00 00 00       	mov    eax,0x0
    8492:	e8 29 a0 ff ff       	call   24c0 <printf@plt>
    8497:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    849e:	48 89 c7             	mov    rdi,rax
    84a1:	e8 fa 9f ff ff       	call   24a0 <sqlite3_close@plt>
    84a6:	b8 00 00 00 00       	mov    eax,0x0
    84ab:	e9 5c 01 00 00       	jmp    860c <update_spi_db+0x1ee>
    84b0:	48 8d 05 a1 52 00 00 	lea    rax,[rip+0x52a1]        # d758 <_IO_stdin_used+0x1758>
    84b7:	48 89 85 b8 fb ff ff 	mov    QWORD PTR [rbp-0x448],rax
    84be:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84c5:	8b 90 80 00 00 00    	mov    edx,DWORD PTR [rax+0x80]
    84cb:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84d2:	44 8b 78 7c          	mov    r15d,DWORD PTR [rax+0x7c]
    84d6:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84dd:	4c 8b b0 98 00 00 00 	mov    r14,QWORD PTR [rax+0x98]
    84e4:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84eb:	4c 8b a8 90 00 00 00 	mov    r13,QWORD PTR [rax+0x90]
    84f2:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    84f9:	44 8b a0 a8 00 00 00 	mov    r12d,DWORD PTR [rax+0xa8]
    8500:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8507:	8b 98 a4 00 00 00    	mov    ebx,DWORD PTR [rax+0xa4]
    850d:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8514:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
    8518:	44 8b 18             	mov    r11d,DWORD PTR [rax]
    851b:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8522:	44 8b 50 60          	mov    r10d,DWORD PTR [rax+0x60]
    8526:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    852d:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
    8531:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    8534:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    853b:	44 8b 40 5c          	mov    r8d,DWORD PTR [rax+0x5c]
    853f:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8546:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8549:	89 85 94 fb ff ff    	mov    DWORD PTR [rbp-0x46c],eax
    854f:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8556:	8b 48 54             	mov    ecx,DWORD PTR [rax+0x54]
    8559:	89 8d 90 fb ff ff    	mov    DWORD PTR [rbp-0x470],ecx
    855f:	48 8b 85 b0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x450]
    8566:	48 8d 48 29          	lea    rcx,[rax+0x29]
    856a:	48 8b bd b0 fb ff ff 	mov    rdi,QWORD PTR [rbp-0x450]
    8571:	48 8b b5 b8 fb ff ff 	mov    rsi,QWORD PTR [rbp-0x448]
    8578:	48 8d 85 c0 fb ff ff 	lea    rax,[rbp-0x440]
    857f:	52                   	push   rdx
    8580:	41 57                	push   r15
    8582:	41 56                	push   r14
    8584:	41 55                	push   r13
    8586:	41 54                	push   r12
    8588:	53                   	push   rbx
    8589:	41 53                	push   r11
    858b:	41 52                	push   r10
    858d:	41 51                	push   r9
    858f:	41 50                	push   r8
    8591:	44 8b 8d 94 fb ff ff 	mov    r9d,DWORD PTR [rbp-0x46c]
    8598:	44 8b 85 90 fb ff ff 	mov    r8d,DWORD PTR [rbp-0x470]
    859f:	48 89 fa             	mov    rdx,rdi
    85a2:	48 89 c7             	mov    rdi,rax
    85a5:	b8 00 00 00 00       	mov    eax,0x0
    85aa:	e8 d1 a0 ff ff       	call   2680 <sprintf@plt>
    85af:	48 83 c4 50          	add    rsp,0x50
    85b3:	48 c7 85 a8 fb ff ff 	mov    QWORD PTR [rbp-0x458],0x0
    85ba:	00 00 00 00 
    85be:	48 8b 85 a0 fb ff ff 	mov    rax,QWORD PTR [rbp-0x460]
    85c5:	48 8d 95 a8 fb ff ff 	lea    rdx,[rbp-0x458]
    85cc:	48 8d b5 c0 fb ff ff 	lea    rsi,[rbp-0x440]
    85d3:	49 89 d0             	mov    r8,rdx
    85d6:	b9 00 00 00 00       	mov    ecx,0x0
    85db:	ba 00 00 00 00       	mov    edx,0x0
    85e0:	48 89 c7             	mov    rdi,rax
    85e3:	e8 78 9f ff ff       	call   2560 <sqlite3_exec@plt>
    85e8:	85 c0                	test   eax,eax
    85ea:	74 1b                	je     8607 <update_spi_db+0x1e9>
    85ec:	48 8b 85 a8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x458]
    85f3:	48 89 c6             	mov    rsi,rax
    85f6:	48 8d 3d 48 52 00 00 	lea    rdi,[rip+0x5248]        # d845 <_IO_stdin_used+0x1845>
    85fd:	b8 00 00 00 00       	mov    eax,0x0
    8602:	e8 b9 9e ff ff       	call   24c0 <printf@plt>
    8607:	b8 00 00 00 00       	mov    eax,0x0
    860c:	48 8b 5d c8          	mov    rbx,QWORD PTR [rbp-0x38]
    8610:	64 48 2b 1c 25 28 00 	sub    rbx,QWORD PTR fs:0x28
    8617:	00 00 
    8619:	74 05                	je     8620 <update_spi_db+0x202>
    861b:	e8 90 a1 ff ff       	call   27b0 <__stack_chk_fail@plt>
    8620:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    8624:	5b                   	pop    rbx
    8625:	41 5c                	pop    r12
    8627:	41 5d                	pop    r13
    8629:	41 5e                	pop    r14
    862b:	41 5f                	pop    r15
    862d:	5d                   	pop    rbp
    862e:	c3                   	ret    

000000000000862f <http_disect>:
    862f:	f3 0f 1e fa          	endbr64 
    8633:	55                   	push   rbp
    8634:	48 89 e5             	mov    rbp,rsp
    8637:	48 81 ec 30 04 00 00 	sub    rsp,0x430
    863e:	48 89 bd d8 fb ff ff 	mov    QWORD PTR [rbp-0x428],rdi
    8645:	48 89 b5 d0 fb ff ff 	mov    QWORD PTR [rbp-0x430],rsi
    864c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8653:	00 00 
    8655:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8659:	31 c0                	xor    eax,eax
    865b:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8662:	be 0d 00 00 00       	mov    esi,0xd
    8667:	48 89 c7             	mov    rdi,rax
    866a:	e8 f5 ae ff ff       	call   3564 <strloc>
    866f:	89 85 ec fb ff ff    	mov    DWORD PTR [rbp-0x414],eax
    8675:	48 8d 3d e7 51 00 00 	lea    rdi,[rip+0x51e7]        # d863 <_IO_stdin_used+0x1863>
    867c:	e8 9f 9e ff ff       	call   2520 <puts@plt>
    8681:	48 8b 85 d8 fb ff ff 	mov    rax,QWORD PTR [rbp-0x428]
    8688:	48 89 c7             	mov    rdi,rax
    868b:	e8 7b af ff ff       	call   360b <test_string_arr_print>
    8690:	83 f0 01             	xor    eax,0x1
    8693:	84 c0                	test   al,al
    8695:	75 33                	jne    86ca <http_disect+0x9b>
    8697:	8b 85 ec fb ff ff    	mov    eax,DWORD PTR [rbp-0x414]
    869d:	48 63 d0             	movsxd rdx,eax
    86a0:	48 8b 8d d8 fb ff ff 	mov    rcx,QWORD PTR [rbp-0x428]
    86a7:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    86ae:	48 89 ce             	mov    rsi,rcx
    86b1:	48 89 c7             	mov    rdi,rax
    86b4:	e8 87 a1 ff ff       	call   2840 <strncpy@plt>
    86b9:	48 8d 85 f0 fb ff ff 	lea    rax,[rbp-0x410]
    86c0:	48 89 c7             	mov    rdi,rax
    86c3:	e8 58 9e ff ff       	call   2520 <puts@plt>
    86c8:	eb 01                	jmp    86cb <http_disect+0x9c>
    86ca:	90                   	nop
    86cb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    86cf:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    86d6:	00 00 
    86d8:	74 05                	je     86df <http_disect+0xb0>
    86da:	e8 d1 a0 ff ff       	call   27b0 <__stack_chk_fail@plt>
    86df:	c9                   	leave  
    86e0:	c3                   	ret    

00000000000086e1 <dns_disect>:
    86e1:	f3 0f 1e fa          	endbr64 
    86e5:	55                   	push   rbp
    86e6:	48 89 e5             	mov    rbp,rsp
    86e9:	48 83 ec 30          	sub    rsp,0x30
    86ed:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    86f1:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    86f5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    86f9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    86fd:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8701:	48 83 c0 0c          	add    rax,0xc
    8705:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8709:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    870d:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    8711:	66 85 c0             	test   ax,ax
    8714:	75 6d                	jne    8783 <dns_disect+0xa2>
    8716:	bf 00 04 00 00       	mov    edi,0x400
    871b:	e8 80 9e ff ff       	call   25a0 <malloc@plt>
    8720:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8724:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8728:	ba 08 00 00 00       	mov    edx,0x8
    872d:	be 00 00 00 00       	mov    esi,0x0
    8732:	48 89 c7             	mov    rdi,rax
    8735:	e8 96 9d ff ff       	call   24d0 <memset@plt>
    873a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    873e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8742:	48 89 d6             	mov    rsi,rdx
    8745:	48 89 c7             	mov    rdi,rax
    8748:	e8 39 00 00 00       	call   8786 <get_dns_name>
    874d:	0f b6 05 10 18 10 00 	movzx  eax,BYTE PTR [rip+0x101810]        # 109f64 <packet_print>
    8754:	84 c0                	test   al,al
    8756:	74 18                	je     8770 <dns_disect+0x8f>
    8758:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    875c:	48 89 c6             	mov    rsi,rax
    875f:	48 8d 3d 0f 51 00 00 	lea    rdi,[rip+0x510f]        # d875 <_IO_stdin_used+0x1875>
    8766:	b8 00 00 00 00       	mov    eax,0x0
    876b:	e8 50 9d ff ff       	call   24c0 <printf@plt>
    8770:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    8775:	74 0c                	je     8783 <dns_disect+0xa2>
    8777:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    877b:	48 89 c7             	mov    rdi,rax
    877e:	e8 ad 9e ff ff       	call   2630 <free@plt>
    8783:	90                   	nop
    8784:	c9                   	leave  
    8785:	c3                   	ret    

0000000000008786 <get_dns_name>:
    8786:	f3 0f 1e fa          	endbr64 
    878a:	55                   	push   rbp
    878b:	48 89 e5             	mov    rbp,rsp
    878e:	53                   	push   rbx
    878f:	48 83 ec 28          	sub    rsp,0x28
    8793:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8797:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    879b:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    87a2:	eb 57                	jmp    87fb <get_dns_name+0x75>
    87a4:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    87a7:	48 63 d0             	movsxd rdx,eax
    87aa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    87ae:	48 01 d0             	add    rax,rdx
    87b1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    87b4:	3c 20                	cmp    al,0x20
    87b6:	7e 24                	jle    87dc <get_dns_name+0x56>
    87b8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    87bb:	48 63 d0             	movsxd rdx,eax
    87be:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    87c2:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    87c6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    87ca:	ba 01 00 00 00       	mov    edx,0x1
    87cf:	48 89 ce             	mov    rsi,rcx
    87d2:	48 89 c7             	mov    rdi,rax
    87d5:	e8 36 9d ff ff       	call   2510 <strncat@plt>
    87da:	eb 1b                	jmp    87f7 <get_dns_name+0x71>
    87dc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    87e0:	48 89 c7             	mov    rdi,rax
    87e3:	e8 58 9e ff ff       	call   2640 <strlen@plt>
    87e8:	48 89 c2             	mov    rdx,rax
    87eb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    87ef:	48 01 d0             	add    rax,rdx
    87f2:	66 c7 00 2e 00       	mov    WORD PTR [rax],0x2e
    87f7:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    87fb:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    87fe:	48 63 d8             	movsxd rbx,eax
    8801:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8805:	48 89 c7             	mov    rdi,rax
    8808:	e8 33 9e ff ff       	call   2640 <strlen@plt>
    880d:	48 39 c3             	cmp    rbx,rax
    8810:	72 92                	jb     87a4 <get_dns_name+0x1e>
    8812:	90                   	nop
    8813:	90                   	nop
    8814:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    8818:	c9                   	leave  
    8819:	c3                   	ret    

000000000000881a <ftp_disect>:
    881a:	f3 0f 1e fa          	endbr64 
    881e:	55                   	push   rbp
    881f:	48 89 e5             	mov    rbp,rsp
    8822:	48 83 ec 20          	sub    rsp,0x20
    8826:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    882a:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    882e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8832:	48 8d 35 47 50 00 00 	lea    rsi,[rip+0x5047]        # d880 <_IO_stdin_used+0x1880>
    8839:	48 89 c7             	mov    rdi,rax
    883c:	e8 9f 9e ff ff       	call   26e0 <strstr@plt>
    8841:	48 85 c0             	test   rax,rax
    8844:	75 1c                	jne    8862 <ftp_disect+0x48>
    8846:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    884a:	48 8d 35 3f 50 00 00 	lea    rsi,[rip+0x503f]        # d890 <_IO_stdin_used+0x1890>
    8851:	48 89 c7             	mov    rdi,rax
    8854:	e8 87 9e ff ff       	call   26e0 <strstr@plt>
    8859:	48 85 c0             	test   rax,rax
    885c:	0f 84 8a 00 00 00    	je     88ec <ftp_disect+0xd2>
    8862:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    8866:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    886a:	48 89 c7             	mov    rdi,rax
    886d:	e8 46 f1 ff ff       	call   79b8 <member_exists>
    8872:	48 63 d0             	movsxd rdx,eax
    8875:	48 89 d0             	mov    rax,rdx
    8878:	48 c1 e0 02          	shl    rax,0x2
    887c:	48 01 d0             	add    rax,rdx
    887f:	48 c1 e0 03          	shl    rax,0x3
    8883:	48 01 d0             	add    rax,rdx
    8886:	48 c1 e0 04          	shl    rax,0x4
    888a:	48 8d 15 8f ac 0e 00 	lea    rdx,[rip+0xeac8f]        # f3520 <watchlist>
    8891:	48 01 d0             	add    rax,rdx
    8894:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8898:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    889c:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    88a2:	8d 50 01             	lea    edx,[rax+0x1]
    88a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88a9:	89 90 40 02 00 00    	mov    DWORD PTR [rax+0x240],edx
    88af:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88b3:	8b 80 40 02 00 00    	mov    eax,DWORD PTR [rax+0x240]
    88b9:	83 f8 04             	cmp    eax,0x4
    88bc:	7e 2e                	jle    88ec <ftp_disect+0xd2>
    88be:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    88c2:	8b 88 40 02 00 00    	mov    ecx,DWORD PTR [rax+0x240]
    88c8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    88cc:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    88d0:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    88d4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    88d8:	48 89 c6             	mov    rsi,rax
    88db:	48 8d 3d be 4f 00 00 	lea    rdi,[rip+0x4fbe]        # d8a0 <_IO_stdin_used+0x18a0>
    88e2:	b8 00 00 00 00       	mov    eax,0x0
    88e7:	e8 d4 9b ff ff       	call   24c0 <printf@plt>
    88ec:	90                   	nop
    88ed:	c9                   	leave  
    88ee:	c3                   	ret    

00000000000088ef <livedebug>:
    88ef:	f3 0f 1e fa          	endbr64 
    88f3:	55                   	push   rbp
    88f4:	48 89 e5             	mov    rbp,rsp
    88f7:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    88fe:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    8905:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
    890c:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    8913:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    891a:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    8921:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    8928:	84 c0                	test   al,al
    892a:	74 20                	je     894c <livedebug+0x5d>
    892c:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    8930:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    8934:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    8938:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    893c:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    8940:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    8944:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    8948:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    894c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8953:	00 00 
    8955:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    895c:	31 c0                	xor    eax,eax
    895e:	0f b6 05 bb 15 10 00 	movzx  eax,BYTE PTR [rip+0x1015bb]        # 109f20 <debug_mode>
    8965:	84 c0                	test   al,al
    8967:	74 4b                	je     89b4 <livedebug+0xc5>
    8969:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
    8970:	00 00 00 
    8973:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    897a:	00 00 00 
    897d:	48 8d 45 10          	lea    rax,[rbp+0x10]
    8981:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    8988:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    898f:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    8996:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    899d:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    89a4:	48 89 d6             	mov    rsi,rdx
    89a7:	48 89 c7             	mov    rdi,rax
    89aa:	b8 00 00 00 00       	mov    eax,0x0
    89af:	e8 0c 9b ff ff       	call   24c0 <printf@plt>
    89b4:	90                   	nop
    89b5:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    89bc:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    89c3:	00 00 
    89c5:	74 05                	je     89cc <livedebug+0xdd>
    89c7:	e8 e4 9d ff ff       	call   27b0 <__stack_chk_fail@plt>
    89cc:	c9                   	leave  
    89cd:	c3                   	ret    

00000000000089ce <forward_packet>:
    89ce:	f3 0f 1e fa          	endbr64 
    89d2:	55                   	push   rbp
    89d3:	48 89 e5             	mov    rbp,rsp
    89d6:	48 83 ec 20          	sub    rsp,0x20
    89da:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    89de:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89e2:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    89e6:	48 8d 35 a3 15 10 00 	lea    rsi,[rip+0x1015a3]        # 109f90 <local_ip>
    89ed:	48 89 c7             	mov    rdi,rax
    89f0:	e8 cb 9d ff ff       	call   27c0 <strcmp@plt>
    89f5:	85 c0                	test   eax,eax
    89f7:	74 4f                	je     8a48 <forward_packet+0x7a>
    89f9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    89fd:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8a01:	48 8d 35 88 15 10 00 	lea    rsi,[rip+0x101588]        # 109f90 <local_ip>
    8a08:	48 89 c7             	mov    rdi,rax
    8a0b:	e8 b0 9d ff ff       	call   27c0 <strcmp@plt>
    8a10:	85 c0                	test   eax,eax
    8a12:	74 34                	je     8a48 <forward_packet+0x7a>
    8a14:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a18:	48 8b 00             	mov    rax,QWORD PTR [rax]
    8a1b:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    8a1f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a23:	48 89 d6             	mov    rsi,rdx
    8a26:	48 89 c7             	mov    rdi,rax
    8a29:	e8 c2 9d ff ff       	call   27f0 <strcpy@plt>
    8a2e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a32:	8b 40 30             	mov    eax,DWORD PTR [rax+0x30]
    8a35:	83 e8 0e             	sub    eax,0xe
    8a38:	89 c2                	mov    edx,eax
    8a3a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a3e:	89 d6                	mov    esi,edx
    8a40:	48 89 c7             	mov    rdi,rax
    8a43:	e8 9f c9 ff ff       	call   53e7 <ascii_hexdump>
    8a48:	90                   	nop
    8a49:	c9                   	leave  
    8a4a:	c3                   	ret    

0000000000008a4b <conversation_exists>:
    8a4b:	f3 0f 1e fa          	endbr64 
    8a4f:	55                   	push   rbp
    8a50:	48 89 e5             	mov    rbp,rsp
    8a53:	48 83 ec 20          	sub    rsp,0x20
    8a57:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8a5b:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    8a62:	e9 ff 00 00 00       	jmp    8b66 <conversation_exists+0x11b>
    8a67:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8a6a:	48 98                	cdqe   
    8a6c:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8a73:	48 8d 15 66 15 10 00 	lea    rdx,[rip+0x101566]        # 109fe0 <spi_table>
    8a7a:	48 01 d0             	add    rax,rdx
    8a7d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8a81:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a85:	0f b6 80 b0 00 00 00 	movzx  eax,BYTE PTR [rax+0xb0]
    8a8c:	84 c0                	test   al,al
    8a8e:	0f 84 ce 00 00 00    	je     8b62 <conversation_exists+0x117>
    8a94:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8a98:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8a9b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8a9f:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8aa2:	39 c2                	cmp    edx,eax
    8aa4:	75 58                	jne    8afe <conversation_exists+0xb3>
    8aa6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8aaa:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8aad:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ab1:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8ab4:	39 c2                	cmp    edx,eax
    8ab6:	75 46                	jne    8afe <conversation_exists+0xb3>
    8ab8:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8abc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ac0:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8ac4:	48 89 d6             	mov    rsi,rdx
    8ac7:	48 89 c7             	mov    rdi,rax
    8aca:	e8 f1 9c ff ff       	call   27c0 <strcmp@plt>
    8acf:	85 c0                	test   eax,eax
    8ad1:	0f 85 8a 00 00 00    	jne    8b61 <conversation_exists+0x116>
    8ad7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8adb:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8adf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ae3:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8ae7:	48 89 d6             	mov    rsi,rdx
    8aea:	48 89 c7             	mov    rdi,rax
    8aed:	e8 ce 9c ff ff       	call   27c0 <strcmp@plt>
    8af2:	85 c0                	test   eax,eax
    8af4:	75 6b                	jne    8b61 <conversation_exists+0x116>
    8af6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8af9:	e9 81 00 00 00       	jmp    8b7f <conversation_exists+0x134>
    8afe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b02:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8b05:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b09:	8b 40 58             	mov    eax,DWORD PTR [rax+0x58]
    8b0c:	39 c2                	cmp    edx,eax
    8b0e:	75 52                	jne    8b62 <conversation_exists+0x117>
    8b10:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b14:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8b17:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b1b:	8b 40 54             	mov    eax,DWORD PTR [rax+0x54]
    8b1e:	39 c2                	cmp    edx,eax
    8b20:	75 40                	jne    8b62 <conversation_exists+0x117>
    8b22:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8b26:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b2a:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    8b2e:	48 89 d6             	mov    rsi,rdx
    8b31:	48 89 c7             	mov    rdi,rax
    8b34:	e8 87 9c ff ff       	call   27c0 <strcmp@plt>
    8b39:	85 c0                	test   eax,eax
    8b3b:	75 25                	jne    8b62 <conversation_exists+0x117>
    8b3d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8b41:	48 8d 50 29          	lea    rdx,[rax+0x29]
    8b45:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8b49:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8b4d:	48 89 d6             	mov    rsi,rdx
    8b50:	48 89 c7             	mov    rdi,rax
    8b53:	e8 68 9c ff ff       	call   27c0 <strcmp@plt>
    8b58:	85 c0                	test   eax,eax
    8b5a:	75 06                	jne    8b62 <conversation_exists+0x117>
    8b5c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b5f:	eb 1e                	jmp    8b7f <conversation_exists+0x134>
    8b61:	90                   	nop
    8b62:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    8b66:	8b 05 d4 84 00 00    	mov    eax,DWORD PTR [rip+0x84d4]        # 11040 <total_conversations>
    8b6c:	8d 50 01             	lea    edx,[rax+0x1]
    8b6f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8b72:	39 c2                	cmp    edx,eax
    8b74:	0f 87 ed fe ff ff    	ja     8a67 <conversation_exists+0x1c>
    8b7a:	b8 ff ff ff ff       	mov    eax,0xffffffff
    8b7f:	c9                   	leave  
    8b80:	c3                   	ret    

0000000000008b81 <get_new_spi_location>:
    8b81:	f3 0f 1e fa          	endbr64 
    8b85:	55                   	push   rbp
    8b86:	48 89 e5             	mov    rbp,rsp
    8b89:	8b 05 b1 84 00 00    	mov    eax,DWORD PTR [rip+0x84b1]        # 11040 <total_conversations>
    8b8f:	83 f8 ff             	cmp    eax,0xffffffff
    8b92:	75 17                	jne    8bab <get_new_spi_location+0x2a>
    8b94:	8b 05 a6 84 00 00    	mov    eax,DWORD PTR [rip+0x84a6]        # 11040 <total_conversations>
    8b9a:	83 c0 01             	add    eax,0x1
    8b9d:	89 05 9d 84 00 00    	mov    DWORD PTR [rip+0x849d],eax        # 11040 <total_conversations>
    8ba3:	8b 05 97 84 00 00    	mov    eax,DWORD PTR [rip+0x8497]        # 11040 <total_conversations>
    8ba9:	eb 52                	jmp    8bfd <get_new_spi_location+0x7c>
    8bab:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    8bb2:	eb 27                	jmp    8bdb <get_new_spi_location+0x5a>
    8bb4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8bb7:	48 98                	cdqe   
    8bb9:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8bc0:	48 8d 15 c9 14 10 00 	lea    rdx,[rip+0x1014c9]        # 10a090 <spi_table+0xb0>
    8bc7:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
    8bcb:	83 f0 01             	xor    eax,0x1
    8bce:	84 c0                	test   al,al
    8bd0:	74 05                	je     8bd7 <get_new_spi_location+0x56>
    8bd2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    8bd5:	eb 26                	jmp    8bfd <get_new_spi_location+0x7c>
    8bd7:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    8bdb:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
    8bde:	8b 05 5c 84 00 00    	mov    eax,DWORD PTR [rip+0x845c]        # 11040 <total_conversations>
    8be4:	39 c2                	cmp    edx,eax
    8be6:	72 cc                	jb     8bb4 <get_new_spi_location+0x33>
    8be8:	8b 05 52 84 00 00    	mov    eax,DWORD PTR [rip+0x8452]        # 11040 <total_conversations>
    8bee:	83 c0 01             	add    eax,0x1
    8bf1:	89 05 49 84 00 00    	mov    DWORD PTR [rip+0x8449],eax        # 11040 <total_conversations>
    8bf7:	8b 05 43 84 00 00    	mov    eax,DWORD PTR [rip+0x8443]        # 11040 <total_conversations>
    8bfd:	5d                   	pop    rbp
    8bfe:	c3                   	ret    

0000000000008bff <add_new_conversation>:
    8bff:	f3 0f 1e fa          	endbr64 
    8c03:	55                   	push   rbp
    8c04:	48 89 e5             	mov    rbp,rsp
    8c07:	48 83 ec 20          	sub    rsp,0x20
    8c0b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8c0f:	0f b6 05 ac 13 10 00 	movzx  eax,BYTE PTR [rip+0x1013ac]        # 109fc2 <use_spi>
    8c16:	84 c0                	test   al,al
    8c18:	0f 84 17 02 00 00    	je     8e35 <add_new_conversation+0x236>
    8c1e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8c22:	48 89 c7             	mov    rdi,rax
    8c25:	e8 21 fe ff ff       	call   8a4b <conversation_exists>
    8c2a:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8c2d:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8c31:	0f 84 88 00 00 00    	je     8cbf <add_new_conversation+0xc0>
    8c37:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8c3a:	48 98                	cdqe   
    8c3c:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8c43:	48 8d 15 96 13 10 00 	lea    rdx,[rip+0x101396]        # 109fe0 <spi_table>
    8c4a:	48 01 d0             	add    rax,rdx
    8c4d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8c51:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c55:	8b 80 ac 00 00 00    	mov    eax,DWORD PTR [rax+0xac]
    8c5b:	8d 50 01             	lea    edx,[rax+0x1]
    8c5e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c62:	89 90 ac 00 00 00    	mov    DWORD PTR [rax+0xac],edx
    8c68:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c6c:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8c72:	8d 50 01             	lea    edx,[rax+0x1]
    8c75:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c79:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8c7f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c83:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8c86:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8c8a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c8e:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8c91:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8c95:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8c99:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8c9c:	41 89 f9             	mov    r9d,edi
    8c9f:	49 89 c8             	mov    r8,rcx
    8ca2:	89 d1                	mov    ecx,edx
    8ca4:	48 89 f2             	mov    rdx,rsi
    8ca7:	89 c6                	mov    esi,eax
    8ca9:	48 8d 3d 38 4c 00 00 	lea    rdi,[rip+0x4c38]        # d8e8 <_IO_stdin_used+0x18e8>
    8cb0:	b8 00 00 00 00       	mov    eax,0x0
    8cb5:	e8 06 98 ff ff       	call   24c0 <printf@plt>
    8cba:	e9 76 01 00 00       	jmp    8e35 <add_new_conversation+0x236>
    8cbf:	b8 00 00 00 00       	mov    eax,0x0
    8cc4:	e8 b8 fe ff ff       	call   8b81 <get_new_spi_location>
    8cc9:	48 98                	cdqe   
    8ccb:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8cd2:	48 8d 15 07 13 10 00 	lea    rdx,[rip+0x101307]        # 109fe0 <spi_table>
    8cd9:	48 01 d0             	add    rax,rdx
    8cdc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8ce0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ce4:	ba 08 00 00 00       	mov    edx,0x8
    8ce9:	be 00 00 00 00       	mov    esi,0x0
    8cee:	48 89 c7             	mov    rdi,rax
    8cf1:	e8 da 97 ff ff       	call   24d0 <memset@plt>
    8cf6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8cfa:	c6 80 b0 00 00 00 01 	mov    BYTE PTR [rax+0xb0],0x1
    8d01:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d05:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    8d09:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d0d:	48 83 c2 29          	add    rdx,0x29
    8d11:	48 89 c6             	mov    rsi,rax
    8d14:	48 89 d7             	mov    rdi,rdx
    8d17:	e8 d4 9a ff ff       	call   27f0 <strcpy@plt>
    8d1c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d20:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    8d24:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d28:	48 89 d6             	mov    rsi,rdx
    8d2b:	48 89 c7             	mov    rdi,rax
    8d2e:	e8 bd 9a ff ff       	call   27f0 <strcpy@plt>
    8d33:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d37:	8b 50 24             	mov    edx,DWORD PTR [rax+0x24]
    8d3a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d3e:	89 50 58             	mov    DWORD PTR [rax+0x58],edx
    8d41:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d45:	8b 50 28             	mov    edx,DWORD PTR [rax+0x28]
    8d48:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d4c:	89 50 54             	mov    DWORD PTR [rax+0x54],edx
    8d4f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d53:	c7 40 7c 00 00 00 00 	mov    DWORD PTR [rax+0x7c],0x0
    8d5a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d5e:	48 8d 50 5c          	lea    rdx,[rax+0x5c]
    8d62:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d66:	48 89 50 70          	mov    QWORD PTR [rax+0x70],rdx
    8d6a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d6e:	48 8d 50 60          	lea    rdx,[rax+0x60]
    8d72:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d76:	48 89 50 68          	mov    QWORD PTR [rax+0x68],rdx
    8d7a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8d7e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8d82:	48 89 d6             	mov    rsi,rdx
    8d85:	48 89 c7             	mov    rdi,rax
    8d88:	e8 8e 04 00 00       	call   921b <increment_stats>
    8d8d:	bf 00 00 00 00       	mov    edi,0x0
    8d92:	e8 59 9b ff ff       	call   28f0 <time@plt>
    8d97:	48 89 c2             	mov    rdx,rax
    8d9a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8d9e:	48 89 90 90 00 00 00 	mov    QWORD PTR [rax+0x90],rdx
    8da5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8da9:	c7 80 80 00 00 00 00 	mov    DWORD PTR [rax+0x80],0x0
    8db0:	00 00 00 
    8db3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8db7:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8dbd:	8d 50 01             	lea    edx,[rax+0x1]
    8dc0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dc4:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8dca:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8dce:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8dd1:	89 c2                	mov    edx,eax
    8dd3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dd7:	89 90 a4 00 00 00    	mov    DWORD PTR [rax+0xa4],edx
    8ddd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8de1:	8b 78 54             	mov    edi,DWORD PTR [rax+0x54]
    8de4:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    8de8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8dec:	8b 50 58             	mov    edx,DWORD PTR [rax+0x58]
    8def:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8df3:	48 8d 70 29          	lea    rsi,[rax+0x29]
    8df7:	8b 05 43 82 00 00    	mov    eax,DWORD PTR [rip+0x8243]        # 11040 <total_conversations>
    8dfd:	41 89 f9             	mov    r9d,edi
    8e00:	49 89 c8             	mov    r8,rcx
    8e03:	89 d1                	mov    ecx,edx
    8e05:	48 89 f2             	mov    rdx,rsi
    8e08:	89 c6                	mov    esi,eax
    8e0a:	48 8d 3d ff 4a 00 00 	lea    rdi,[rip+0x4aff]        # d910 <_IO_stdin_used+0x1910>
    8e11:	b8 00 00 00 00       	mov    eax,0x0
    8e16:	e8 a5 96 ff ff       	call   24c0 <printf@plt>
    8e1b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e1f:	8b 40 2c             	mov    eax,DWORD PTR [rax+0x2c]
    8e22:	83 f8 7e             	cmp    eax,0x7e
    8e25:	75 0e                	jne    8e35 <add_new_conversation+0x236>
    8e27:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e2b:	c7 80 8c 00 00 00 f3 	mov    DWORD PTR [rax+0x8c],0xf3
    8e32:	00 00 00 
    8e35:	90                   	nop
    8e36:	c9                   	leave  
    8e37:	c3                   	ret    

0000000000008e38 <spi_ud_thw>:
    8e38:	f3 0f 1e fa          	endbr64 
    8e3c:	55                   	push   rbp
    8e3d:	48 89 e5             	mov    rbp,rsp
    8e40:	48 83 ec 20          	sub    rsp,0x20
    8e44:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    8e48:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e4c:	48 89 c7             	mov    rdi,rax
    8e4f:	e8 f7 fb ff ff       	call   8a4b <conversation_exists>
    8e54:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    8e57:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    8e5b:	0f 84 9d 00 00 00    	je     8efe <spi_ud_thw+0xc6>
    8e61:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8e64:	48 98                	cdqe   
    8e66:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8e6d:	48 8d 15 6c 11 10 00 	lea    rdx,[rip+0x10116c]        # 109fe0 <spi_table>
    8e74:	48 01 d0             	add    rax,rdx
    8e77:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8e7b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e7f:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8e85:	8d 50 01             	lea    edx,[rax+0x1]
    8e88:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8e8c:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8e92:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    8e96:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8e9a:	48 89 d6             	mov    rsi,rdx
    8e9d:	48 89 c7             	mov    rdi,rax
    8ea0:	e8 76 03 00 00       	call   921b <increment_stats>
    8ea5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ea9:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8eac:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8eb0:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8eb4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8eb8:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8ebb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    8ebf:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8ec3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    8ec6:	41 89 f9             	mov    r9d,edi
    8ec9:	49 89 f0             	mov    r8,rsi
    8ecc:	89 c6                	mov    esi,eax
    8ece:	48 8d 3d 63 4a 00 00 	lea    rdi,[rip+0x4a63]        # d938 <_IO_stdin_used+0x1938>
    8ed5:	b8 00 00 00 00       	mov    eax,0x0
    8eda:	e8 e1 95 ff ff       	call   24c0 <printf@plt>
    8edf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ee3:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8ee9:	3d f3 00 00 00       	cmp    eax,0xf3
    8eee:	75 0e                	jne    8efe <spi_ud_thw+0xc6>
    8ef0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    8ef4:	c7 80 8c 00 00 00 f4 	mov    DWORD PTR [rax+0x8c],0xf4
    8efb:	00 00 00 
    8efe:	90                   	nop
    8eff:	c9                   	leave  
    8f00:	c3                   	ret    

0000000000008f01 <update_table>:
    8f01:	f3 0f 1e fa          	endbr64 
    8f05:	55                   	push   rbp
    8f06:	48 89 e5             	mov    rbp,rsp
    8f09:	48 83 ec 30          	sub    rsp,0x30
    8f0d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    8f11:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    8f18:	00 00 
    8f1a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    8f1e:	31 c0                	xor    eax,eax
    8f20:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f24:	48 89 c7             	mov    rdi,rax
    8f27:	e8 1f fb ff ff       	call   8a4b <conversation_exists>
    8f2c:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
    8f2f:	83 7d e4 ff          	cmp    DWORD PTR [rbp-0x1c],0xffffffff
    8f33:	0f 84 52 01 00 00    	je     908b <update_table+0x18a>
    8f39:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8f3c:	48 98                	cdqe   
    8f3e:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    8f45:	48 8d 15 94 10 10 00 	lea    rdx,[rip+0x101094]        # 109fe0 <spi_table>
    8f4c:	48 01 d0             	add    rax,rdx
    8f4f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    8f53:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f57:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    8f5d:	8d 50 01             	lea    edx,[rax+0x1]
    8f60:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f64:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    8f6a:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    8f6e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8f72:	48 89 d6             	mov    rsi,rdx
    8f75:	48 89 c7             	mov    rdi,rax
    8f78:	e8 9e 02 00 00       	call   921b <increment_stats>
    8f7d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f81:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8f87:	3d f4 00 00 00       	cmp    eax,0xf4
    8f8c:	75 4d                	jne    8fdb <update_table+0xda>
    8f8e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8f92:	c7 80 8c 00 00 00 f1 	mov    DWORD PTR [rax+0x8c],0xf1
    8f99:	00 00 00 
    8f9c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fa0:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8fa3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fa7:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8fab:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8faf:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    8fb2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8fb6:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    8fba:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    8fbd:	41 89 f9             	mov    r9d,edi
    8fc0:	49 89 f0             	mov    r8,rsi
    8fc3:	89 c6                	mov    esi,eax
    8fc5:	48 8d 3d 94 49 00 00 	lea    rdi,[rip+0x4994]        # d960 <_IO_stdin_used+0x1960>
    8fcc:	b8 00 00 00 00       	mov    eax,0x0
    8fd1:	e8 ea 94 ff ff       	call   24c0 <printf@plt>
    8fd6:	e9 b0 00 00 00       	jmp    908b <update_table+0x18a>
    8fdb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    8fdf:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    8fe5:	3d f6 00 00 00       	cmp    eax,0xf6
    8fea:	0f 85 9b 00 00 00    	jne    908b <update_table+0x18a>
    8ff0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ff4:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    8ff7:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    8ffb:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    8fff:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9003:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9006:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    900a:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    900e:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9011:	41 89 f9             	mov    r9d,edi
    9014:	49 89 f0             	mov    r8,rsi
    9017:	89 c6                	mov    esi,eax
    9019:	48 8d 3d 70 49 00 00 	lea    rdi,[rip+0x4970]        # d990 <_IO_stdin_used+0x1990>
    9020:	b8 00 00 00 00       	mov    eax,0x0
    9025:	e8 96 94 ff ff       	call   24c0 <printf@plt>
    902a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    902e:	c7 80 8c 00 00 00 fa 	mov    DWORD PTR [rax+0x8c],0xfa
    9035:	00 00 00 
    9038:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    903c:	c6 80 b0 00 00 00 00 	mov    BYTE PTR [rax+0xb0],0x0
    9043:	bf 00 00 00 00       	mov    edi,0x0
    9048:	e8 a3 98 ff ff       	call   28f0 <time@plt>
    904d:	48 89 c2             	mov    rdx,rax
    9050:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9054:	48 89 90 98 00 00 00 	mov    QWORD PTR [rax+0x98],rdx
    905b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    905f:	48 8d 45 e8          	lea    rax,[rbp-0x18]
    9063:	48 89 d1             	mov    rcx,rdx
    9066:	48 8d 15 b1 f3 ff ff 	lea    rdx,[rip+0xfffffffffffff3b1]        # 841e <update_spi_db>
    906d:	be 00 00 00 00       	mov    esi,0x0
    9072:	48 89 c7             	mov    rdi,rax
    9075:	e8 96 95 ff ff       	call   2610 <pthread_create@plt>
    907a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    907e:	be 00 00 00 00       	mov    esi,0x0
    9083:	48 89 c7             	mov    rdi,rax
    9086:	e8 25 94 ff ff       	call   24b0 <pthread_join@plt>
    908b:	90                   	nop
    908c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9090:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9097:	00 00 
    9099:	74 05                	je     90a0 <update_table+0x19f>
    909b:	e8 10 97 ff ff       	call   27b0 <__stack_chk_fail@plt>
    90a0:	c9                   	leave  
    90a1:	c3                   	ret    

00000000000090a2 <polite_end>:
    90a2:	f3 0f 1e fa          	endbr64 
    90a6:	55                   	push   rbp
    90a7:	48 89 e5             	mov    rbp,rsp
    90aa:	48 83 ec 20          	sub    rsp,0x20
    90ae:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    90b2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    90b6:	48 89 c7             	mov    rdi,rax
    90b9:	e8 8d f9 ff ff       	call   8a4b <conversation_exists>
    90be:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    90c1:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    90c5:	0f 84 e7 00 00 00    	je     91b2 <polite_end+0x110>
    90cb:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    90ce:	48 98                	cdqe   
    90d0:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    90d7:	48 8d 15 02 0f 10 00 	lea    rdx,[rip+0x100f02]        # 109fe0 <spi_table>
    90de:	48 01 d0             	add    rax,rdx
    90e1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    90e5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90e9:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [rax+0x80]
    90ef:	8d 50 01             	lea    edx,[rax+0x1]
    90f2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    90f6:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
    90fc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9100:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [rax+0x8c]
    9106:	3d f5 00 00 00       	cmp    eax,0xf5
    910b:	75 4a                	jne    9157 <polite_end+0xb5>
    910d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9111:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    9114:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9118:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    911c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9120:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    9123:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9127:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    912b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    912e:	41 89 f9             	mov    r9d,edi
    9131:	49 89 f0             	mov    r8,rsi
    9134:	89 c6                	mov    esi,eax
    9136:	48 8d 3d 8b 48 00 00 	lea    rdi,[rip+0x488b]        # d9c8 <_IO_stdin_used+0x19c8>
    913d:	b8 00 00 00 00       	mov    eax,0x0
    9142:	e8 79 93 ff ff       	call   24c0 <printf@plt>
    9147:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    914b:	c7 80 8c 00 00 00 f6 	mov    DWORD PTR [rax+0x8c],0xf6
    9152:	00 00 00 
    9155:	eb 48                	jmp    919f <polite_end+0xfd>
    9157:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    915b:	8b 78 28             	mov    edi,DWORD PTR [rax+0x28]
    915e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9162:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    9166:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    916a:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    916d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9171:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    9175:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9178:	41 89 f9             	mov    r9d,edi
    917b:	49 89 f0             	mov    r8,rsi
    917e:	89 c6                	mov    esi,eax
    9180:	48 8d 3d 79 48 00 00 	lea    rdi,[rip+0x4879]        # da00 <_IO_stdin_used+0x1a00>
    9187:	b8 00 00 00 00       	mov    eax,0x0
    918c:	e8 2f 93 ff ff       	call   24c0 <printf@plt>
    9191:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9195:	c7 80 8c 00 00 00 f5 	mov    DWORD PTR [rax+0x8c],0xf5
    919c:	00 00 00 
    919f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    91a3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91a7:	48 89 d6             	mov    rsi,rdx
    91aa:	48 89 c7             	mov    rdi,rax
    91ad:	e8 69 00 00 00       	call   921b <increment_stats>
    91b2:	90                   	nop
    91b3:	c9                   	leave  
    91b4:	c3                   	ret    

00000000000091b5 <handle_data_pkt>:
    91b5:	f3 0f 1e fa          	endbr64 
    91b9:	55                   	push   rbp
    91ba:	48 89 e5             	mov    rbp,rsp
    91bd:	48 83 ec 20          	sub    rsp,0x20
    91c1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    91c5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    91c9:	48 89 c7             	mov    rdi,rax
    91cc:	e8 7a f8 ff ff       	call   8a4b <conversation_exists>
    91d1:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    91d4:	83 7d f4 ff          	cmp    DWORD PTR [rbp-0xc],0xffffffff
    91d8:	74 3e                	je     9218 <handle_data_pkt+0x63>
    91da:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    91dd:	48 98                	cdqe   
    91df:	48 69 c0 b8 00 00 00 	imul   rax,rax,0xb8
    91e6:	48 8d 15 f3 0d 10 00 	lea    rdx,[rip+0x100df3]        # 109fe0 <spi_table>
    91ed:	48 01 d0             	add    rax,rdx
    91f0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    91f4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    91f8:	8b 40 7c             	mov    eax,DWORD PTR [rax+0x7c]
    91fb:	8d 50 01             	lea    edx,[rax+0x1]
    91fe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9202:	89 50 7c             	mov    DWORD PTR [rax+0x7c],edx
    9205:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    9209:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    920d:	48 89 d6             	mov    rsi,rdx
    9210:	48 89 c7             	mov    rdi,rax
    9213:	e8 03 00 00 00       	call   921b <increment_stats>
    9218:	90                   	nop
    9219:	c9                   	leave  
    921a:	c3                   	ret    

000000000000921b <increment_stats>:
    921b:	f3 0f 1e fa          	endbr64 
    921f:	55                   	push   rbp
    9220:	48 89 e5             	mov    rbp,rsp
    9223:	48 83 ec 10          	sub    rsp,0x10
    9227:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    922b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    922f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9233:	48 8d 50 29          	lea    rdx,[rax+0x29]
    9237:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    923b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    923f:	48 89 d6             	mov    rsi,rdx
    9242:	48 89 c7             	mov    rdi,rax
    9245:	e8 76 95 ff ff       	call   27c0 <strcmp@plt>
    924a:	85 c0                	test   eax,eax
    924c:	75 13                	jne    9261 <increment_stats+0x46>
    924e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9252:	8b 40 60             	mov    eax,DWORD PTR [rax+0x60]
    9255:	8d 50 01             	lea    edx,[rax+0x1]
    9258:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    925c:	89 50 60             	mov    DWORD PTR [rax+0x60],edx
    925f:	eb 2c                	jmp    928d <increment_stats+0x72>
    9261:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    9265:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9269:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
    926d:	48 89 d6             	mov    rsi,rdx
    9270:	48 89 c7             	mov    rdi,rax
    9273:	e8 48 95 ff ff       	call   27c0 <strcmp@plt>
    9278:	85 c0                	test   eax,eax
    927a:	75 11                	jne    928d <increment_stats+0x72>
    927c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9280:	8b 40 5c             	mov    eax,DWORD PTR [rax+0x5c]
    9283:	8d 50 01             	lea    edx,[rax+0x1]
    9286:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    928a:	89 50 5c             	mov    DWORD PTR [rax+0x5c],edx
    928d:	90                   	nop
    928e:	c9                   	leave  
    928f:	c3                   	ret    

0000000000009290 <lprintf>:
    9290:	f3 0f 1e fa          	endbr64 
    9294:	55                   	push   rbp
    9295:	48 89 e5             	mov    rbp,rsp
    9298:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
    929f:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
    92a6:	48 89 b5 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rsi
    92ad:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    92b4:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
    92bb:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
    92c2:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
    92c9:	84 c0                	test   al,al
    92cb:	74 20                	je     92ed <lprintf+0x5d>
    92cd:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
    92d1:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
    92d5:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
    92d9:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
    92dd:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
    92e1:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
    92e5:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
    92e9:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
    92ed:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    92f4:	00 00 
    92f6:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    92fd:	31 c0                	xor    eax,eax
    92ff:	c7 85 30 ff ff ff 10 	mov    DWORD PTR [rbp-0xd0],0x10
    9306:	00 00 00 
    9309:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
    9310:	00 00 00 
    9313:	48 8d 45 10          	lea    rax,[rbp+0x10]
    9317:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    931e:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
    9325:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    932c:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
    9333:	48 8b 8d 20 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xe0]
    933a:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    9341:	48 89 ce             	mov    rsi,rcx
    9344:	48 89 c7             	mov    rdi,rax
    9347:	b8 00 00 00 00       	mov    eax,0x0
    934c:	e8 4f 95 ff ff       	call   28a0 <fprintf@plt>
    9351:	90                   	nop
    9352:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    9359:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    9360:	00 00 
    9362:	74 05                	je     9369 <lprintf+0xd9>
    9364:	e8 47 94 ff ff       	call   27b0 <__stack_chk_fail@plt>
    9369:	c9                   	leave  
    936a:	c3                   	ret    

000000000000936b <lfprintf>:
    936b:	f3 0f 1e fa          	endbr64 
    936f:	55                   	push   rbp
    9370:	48 89 e5             	mov    rbp,rsp
    9373:	48 81 ec 90 08 00 00 	sub    rsp,0x890
    937a:	48 89 bd 98 f7 ff ff 	mov    QWORD PTR [rbp-0x868],rdi
    9381:	48 89 b5 90 f7 ff ff 	mov    QWORD PTR [rbp-0x870],rsi
    9388:	48 89 95 88 f7 ff ff 	mov    QWORD PTR [rbp-0x878],rdx
    938f:	48 89 8d 80 f7 ff ff 	mov    QWORD PTR [rbp-0x880],rcx
    9396:	44 89 85 7c f7 ff ff 	mov    DWORD PTR [rbp-0x884],r8d
    939d:	44 89 8d 78 f7 ff ff 	mov    DWORD PTR [rbp-0x888],r9d
    93a4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    93ab:	00 00 
    93ad:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    93b1:	31 c0                	xor    eax,eax
    93b3:	48 8b 85 98 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x868]
    93ba:	48 8d 35 77 46 00 00 	lea    rsi,[rip+0x4677]        # da38 <_IO_stdin_used+0x1a38>
    93c1:	48 89 c7             	mov    rdi,rax
    93c4:	e8 e7 91 ff ff       	call   25b0 <fopen@plt>
    93c9:	48 89 85 a8 f7 ff ff 	mov    QWORD PTR [rbp-0x858],rax
    93d0:	48 83 bd a8 f7 ff ff 	cmp    QWORD PTR [rbp-0x858],0x0
    93d7:	00 
    93d8:	75 20                	jne    93fa <lfprintf+0x8f>
    93da:	48 8b 85 90 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x870]
    93e1:	48 89 c6             	mov    rsi,rax
    93e4:	48 8d 3d 55 46 00 00 	lea    rdi,[rip+0x4655]        # da40 <_IO_stdin_used+0x1a40>
    93eb:	b8 00 00 00 00       	mov    eax,0x0
    93f0:	e8 cb 90 ff ff       	call   24c0 <printf@plt>
    93f5:	e9 cd 00 00 00       	jmp    94c7 <lfprintf+0x15c>
    93fa:	48 8d 85 b0 f7 ff ff 	lea    rax,[rbp-0x850]
    9401:	48 89 c7             	mov    rdi,rax
    9404:	e8 94 a0 ff ff       	call   349d <cb_get_formatted_time>
    9409:	83 bd 7c f7 ff ff ff 	cmp    DWORD PTR [rbp-0x884],0xffffffff
    9410:	75 3f                	jne    9451 <lfprintf+0xe6>
    9412:	48 8b bd 80 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x880]
    9419:	48 8b b5 88 f7 ff ff 	mov    rsi,QWORD PTR [rbp-0x878]
    9420:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    9427:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    942e:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9435:	49 89 f9             	mov    r9,rdi
    9438:	49 89 f0             	mov    r8,rsi
    943b:	48 8d 35 2c 46 00 00 	lea    rsi,[rip+0x462c]        # da6e <_IO_stdin_used+0x1a6e>
    9442:	48 89 c7             	mov    rdi,rax
    9445:	b8 00 00 00 00       	mov    eax,0x0
    944a:	e8 31 92 ff ff       	call   2680 <sprintf@plt>
    944f:	eb 4e                	jmp    949f <lfprintf+0x134>
    9451:	44 8b 85 7c f7 ff ff 	mov    r8d,DWORD PTR [rbp-0x884]
    9458:	48 8b bd 88 f7 ff ff 	mov    rdi,QWORD PTR [rbp-0x878]
    945f:	48 8b 8d 90 f7 ff ff 	mov    rcx,QWORD PTR [rbp-0x870]
    9466:	48 8d 95 b0 f7 ff ff 	lea    rdx,[rbp-0x850]
    946d:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    9474:	8b b5 78 f7 ff ff    	mov    esi,DWORD PTR [rbp-0x888]
    947a:	56                   	push   rsi
    947b:	ff b5 80 f7 ff ff    	push   QWORD PTR [rbp-0x880]
    9481:	45 89 c1             	mov    r9d,r8d
    9484:	49 89 f8             	mov    r8,rdi
    9487:	48 8d 35 f0 45 00 00 	lea    rsi,[rip+0x45f0]        # da7e <_IO_stdin_used+0x1a7e>
    948e:	48 89 c7             	mov    rdi,rax
    9491:	b8 00 00 00 00       	mov    eax,0x0
    9496:	e8 e5 91 ff ff       	call   2680 <sprintf@plt>
    949b:	48 83 c4 10          	add    rsp,0x10
    949f:	48 8b 95 a8 f7 ff ff 	mov    rdx,QWORD PTR [rbp-0x858]
    94a6:	48 8d 85 f0 f7 ff ff 	lea    rax,[rbp-0x810]
    94ad:	48 89 d6             	mov    rsi,rdx
    94b0:	48 89 c7             	mov    rdi,rax
    94b3:	e8 48 92 ff ff       	call   2700 <fputs@plt>
    94b8:	48 8b 85 a8 f7 ff ff 	mov    rax,QWORD PTR [rbp-0x858]
    94bf:	48 89 c7             	mov    rdi,rax
    94c2:	e8 69 93 ff ff       	call   2830 <fclose@plt>
    94c7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    94cb:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    94d2:	00 00 
    94d4:	74 05                	je     94db <lfprintf+0x170>
    94d6:	e8 d5 92 ff ff       	call   27b0 <__stack_chk_fail@plt>
    94db:	c9                   	leave  
    94dc:	c3                   	ret    

00000000000094dd <saprintf>:
    94dd:	f3 0f 1e fa          	endbr64 
    94e1:	55                   	push   rbp
    94e2:	48 89 e5             	mov    rbp,rsp
    94e5:	48 83 ec 20          	sub    rsp,0x20
    94e9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    94ed:	48 8b 05 3c 7b 00 00 	mov    rax,QWORD PTR [rip+0x7b3c]        # 11030 <def_log_file>
    94f4:	48 8d 35 3d 45 00 00 	lea    rsi,[rip+0x453d]        # da38 <_IO_stdin_used+0x1a38>
    94fb:	48 89 c7             	mov    rdi,rax
    94fe:	e8 ad 90 ff ff       	call   25b0 <fopen@plt>
    9503:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9507:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    950c:	75 1a                	jne    9528 <saprintf+0x4b>
    950e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9512:	48 89 c6             	mov    rsi,rax
    9515:	48 8d 3d 24 45 00 00 	lea    rdi,[rip+0x4524]        # da40 <_IO_stdin_used+0x1a40>
    951c:	b8 00 00 00 00       	mov    eax,0x0
    9521:	e8 9a 8f ff ff       	call   24c0 <printf@plt>
    9526:	eb 1f                	jmp    9547 <saprintf+0x6a>
    9528:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    952c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9530:	48 89 d6             	mov    rsi,rdx
    9533:	48 89 c7             	mov    rdi,rax
    9536:	e8 c5 91 ff ff       	call   2700 <fputs@plt>
    953b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    953f:	48 89 c7             	mov    rdi,rax
    9542:	e8 e9 92 ff ff       	call   2830 <fclose@plt>
    9547:	c9                   	leave  
    9548:	c3                   	ret    

0000000000009549 <substr>:
    9549:	f3 0f 1e fa          	endbr64 
    954d:	55                   	push   rbp
    954e:	48 89 e5             	mov    rbp,rsp
    9551:	48 83 ec 20          	sub    rsp,0x20
    9555:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    9559:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    955c:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    955f:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    9562:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9565:	83 c0 02             	add    eax,0x2
    9568:	48 98                	cdqe   
    956a:	48 89 c7             	mov    rdi,rax
    956d:	e8 2e 90 ff ff       	call   25a0 <malloc@plt>
    9572:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    9576:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
    9579:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    957c:	eb 27                	jmp    95a5 <substr+0x5c>
    957e:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    9581:	48 63 d0             	movsxd rdx,eax
    9584:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9588:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
    958c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    958f:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    9592:	48 63 d0             	movsxd rdx,eax
    9595:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9599:	48 01 c2             	add    rdx,rax
    959c:	0f b6 01             	movzx  eax,BYTE PTR [rcx]
    959f:	88 02                	mov    BYTE PTR [rdx],al
    95a1:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    95a5:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    95a8:	3b 45 e0             	cmp    eax,DWORD PTR [rbp-0x20]
    95ab:	7e d1                	jle    957e <substr+0x35>
    95ad:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
    95b0:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
    95b3:	48 98                	cdqe   
    95b5:	48 8d 50 01          	lea    rdx,[rax+0x1]
    95b9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95bd:	48 01 d0             	add    rax,rdx
    95c0:	c6 00 00             	mov    BYTE PTR [rax],0x0
    95c3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    95c7:	c9                   	leave  
    95c8:	c3                   	ret    

00000000000095c9 <delimit>:
    95c9:	f3 0f 1e fa          	endbr64 
    95cd:	55                   	push   rbp
    95ce:	48 89 e5             	mov    rbp,rsp
    95d1:	89 f8                	mov    eax,edi
    95d3:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
    95d6:	80 7d fc 20          	cmp    BYTE PTR [rbp-0x4],0x20
    95da:	0f 94 c0             	sete   al
    95dd:	5d                   	pop    rbp
    95de:	c3                   	ret    

00000000000095df <isdigit>:
    95df:	f3 0f 1e fa          	endbr64 
    95e3:	55                   	push   rbp
    95e4:	48 89 e5             	mov    rbp,rsp
    95e7:	53                   	push   rbx
    95e8:	48 83 ec 28          	sub    rsp,0x28
    95ec:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
    95f0:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    95f7:	e9 f7 00 00 00       	jmp    96f3 <isdigit+0x114>
    95fc:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    95ff:	48 63 d0             	movsxd rdx,eax
    9602:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9606:	48 01 d0             	add    rax,rdx
    9609:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    960c:	3c 30                	cmp    al,0x30
    960e:	0f 84 db 00 00 00    	je     96ef <isdigit+0x110>
    9614:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9617:	48 63 d0             	movsxd rdx,eax
    961a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    961e:	48 01 d0             	add    rax,rdx
    9621:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9624:	3c 31                	cmp    al,0x31
    9626:	0f 84 c3 00 00 00    	je     96ef <isdigit+0x110>
    962c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    962f:	48 63 d0             	movsxd rdx,eax
    9632:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9636:	48 01 d0             	add    rax,rdx
    9639:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    963c:	3c 32                	cmp    al,0x32
    963e:	0f 84 ab 00 00 00    	je     96ef <isdigit+0x110>
    9644:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9647:	48 63 d0             	movsxd rdx,eax
    964a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    964e:	48 01 d0             	add    rax,rdx
    9651:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9654:	3c 33                	cmp    al,0x33
    9656:	0f 84 93 00 00 00    	je     96ef <isdigit+0x110>
    965c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    965f:	48 63 d0             	movsxd rdx,eax
    9662:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    9666:	48 01 d0             	add    rax,rdx
    9669:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    966c:	3c 34                	cmp    al,0x34
    966e:	74 7f                	je     96ef <isdigit+0x110>
    9670:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9673:	48 63 d0             	movsxd rdx,eax
    9676:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    967a:	48 01 d0             	add    rax,rdx
    967d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9680:	3c 34                	cmp    al,0x34
    9682:	74 6b                	je     96ef <isdigit+0x110>
    9684:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    9687:	48 63 d0             	movsxd rdx,eax
    968a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    968e:	48 01 d0             	add    rax,rdx
    9691:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9694:	3c 35                	cmp    al,0x35
    9696:	74 57                	je     96ef <isdigit+0x110>
    9698:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    969b:	48 63 d0             	movsxd rdx,eax
    969e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96a2:	48 01 d0             	add    rax,rdx
    96a5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96a8:	3c 36                	cmp    al,0x36
    96aa:	74 43                	je     96ef <isdigit+0x110>
    96ac:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96af:	48 63 d0             	movsxd rdx,eax
    96b2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96b6:	48 01 d0             	add    rax,rdx
    96b9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96bc:	3c 37                	cmp    al,0x37
    96be:	74 2f                	je     96ef <isdigit+0x110>
    96c0:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96c3:	48 63 d0             	movsxd rdx,eax
    96c6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96ca:	48 01 d0             	add    rax,rdx
    96cd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96d0:	3c 38                	cmp    al,0x38
    96d2:	74 1b                	je     96ef <isdigit+0x110>
    96d4:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96d7:	48 63 d0             	movsxd rdx,eax
    96da:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96de:	48 01 d0             	add    rax,rdx
    96e1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    96e4:	3c 39                	cmp    al,0x39
    96e6:	74 07                	je     96ef <isdigit+0x110>
    96e8:	b8 00 00 00 00       	mov    eax,0x0
    96ed:	eb 24                	jmp    9713 <isdigit+0x134>
    96ef:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    96f3:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    96f6:	48 63 d8             	movsxd rbx,eax
    96f9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    96fd:	48 89 c7             	mov    rdi,rax
    9700:	e8 3b 8f ff ff       	call   2640 <strlen@plt>
    9705:	48 39 c3             	cmp    rbx,rax
    9708:	0f 82 ee fe ff ff    	jb     95fc <isdigit+0x1d>
    970e:	b8 01 00 00 00       	mov    eax,0x1
    9713:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    9717:	c9                   	leave  
    9718:	c3                   	ret    

0000000000009719 <assign_port_number>:
    9719:	f3 0f 1e fa          	endbr64 
    971d:	55                   	push   rbp
    971e:	48 89 e5             	mov    rbp,rsp
    9721:	48 83 ec 10          	sub    rsp,0x10
    9725:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9729:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    972d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9731:	48 89 c7             	mov    rdi,rax
    9734:	e8 a6 fe ff ff       	call   95df <isdigit>
    9739:	84 c0                	test   al,al
    973b:	74 18                	je     9755 <assign_port_number+0x3c>
    973d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9741:	48 89 c7             	mov    rdi,rax
    9744:	e8 e7 8f ff ff       	call   2730 <atoi@plt>
    9749:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    974d:	89 82 44 01 00 00    	mov    DWORD PTR [rdx+0x144],eax
    9753:	eb 25                	jmp    977a <assign_port_number+0x61>
    9755:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9759:	48 8d 35 38 43 00 00 	lea    rsi,[rip+0x4338]        # da98 <_IO_stdin_used+0x1a98>
    9760:	48 89 c7             	mov    rdi,rax
    9763:	e8 58 90 ff ff       	call   27c0 <strcmp@plt>
    9768:	85 c0                	test   eax,eax
    976a:	75 0e                	jne    977a <assign_port_number+0x61>
    976c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9770:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9777:	ff ff ff 
    977a:	90                   	nop
    977b:	c9                   	leave  
    977c:	c3                   	ret    

000000000000977d <check_port_number>:
    977d:	f3 0f 1e fa          	endbr64 
    9781:	55                   	push   rbp
    9782:	48 89 e5             	mov    rbp,rsp
    9785:	48 83 ec 10          	sub    rsp,0x10
    9789:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    978d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9791:	48 89 c7             	mov    rdi,rax
    9794:	e8 46 fe ff ff       	call   95df <isdigit>
    9799:	84 c0                	test   al,al
    979b:	74 0e                	je     97ab <check_port_number+0x2e>
    979d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97a1:	48 89 c7             	mov    rdi,rax
    97a4:	e8 87 8f ff ff       	call   2730 <atoi@plt>
    97a9:	eb 23                	jmp    97ce <check_port_number+0x51>
    97ab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97af:	48 8d 35 e2 42 00 00 	lea    rsi,[rip+0x42e2]        # da98 <_IO_stdin_used+0x1a98>
    97b6:	48 89 c7             	mov    rdi,rax
    97b9:	e8 02 90 ff ff       	call   27c0 <strcmp@plt>
    97be:	85 c0                	test   eax,eax
    97c0:	75 07                	jne    97c9 <check_port_number+0x4c>
    97c2:	b8 ff ff ff ff       	mov    eax,0xffffffff
    97c7:	eb 05                	jmp    97ce <check_port_number+0x51>
    97c9:	b8 ff ff ff ff       	mov    eax,0xffffffff
    97ce:	c9                   	leave  
    97cf:	c3                   	ret    

00000000000097d0 <assign_protocol>:
    97d0:	f3 0f 1e fa          	endbr64 
    97d4:	55                   	push   rbp
    97d5:	48 89 e5             	mov    rbp,rsp
    97d8:	48 83 ec 10          	sub    rsp,0x10
    97dc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    97e0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    97e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    97e8:	48 8d 35 ad 42 00 00 	lea    rsi,[rip+0x42ad]        # da9c <_IO_stdin_used+0x1a9c>
    97ef:	48 89 c7             	mov    rdi,rax
    97f2:	e8 c9 8f ff ff       	call   27c0 <strcmp@plt>
    97f7:	85 c0                	test   eax,eax
    97f9:	75 10                	jne    980b <assign_protocol+0x3b>
    97fb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    97ff:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9806:	ff ff ff 
    9809:	eb 73                	jmp    987e <assign_protocol+0xae>
    980b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    980f:	48 8d 35 8a 42 00 00 	lea    rsi,[rip+0x428a]        # daa0 <_IO_stdin_used+0x1aa0>
    9816:	48 89 c7             	mov    rdi,rax
    9819:	e8 a2 8f ff ff       	call   27c0 <strcmp@plt>
    981e:	85 c0                	test   eax,eax
    9820:	75 10                	jne    9832 <assign_protocol+0x62>
    9822:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9826:	c7 80 40 01 00 00 80 	mov    DWORD PTR [rax+0x140],0x80
    982d:	00 00 00 
    9830:	eb 4c                	jmp    987e <assign_protocol+0xae>
    9832:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9836:	48 8d 35 68 42 00 00 	lea    rsi,[rip+0x4268]        # daa5 <_IO_stdin_used+0x1aa5>
    983d:	48 89 c7             	mov    rdi,rax
    9840:	e8 7b 8f ff ff       	call   27c0 <strcmp@plt>
    9845:	85 c0                	test   eax,eax
    9847:	75 10                	jne    9859 <assign_protocol+0x89>
    9849:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    984d:	c7 80 40 01 00 00 7e 	mov    DWORD PTR [rax+0x140],0x7e
    9854:	00 00 00 
    9857:	eb 25                	jmp    987e <assign_protocol+0xae>
    9859:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    985d:	48 8d 35 45 42 00 00 	lea    rsi,[rip+0x4245]        # daa9 <_IO_stdin_used+0x1aa9>
    9864:	48 89 c7             	mov    rdi,rax
    9867:	e8 54 8f ff ff       	call   27c0 <strcmp@plt>
    986c:	85 c0                	test   eax,eax
    986e:	75 0e                	jne    987e <assign_protocol+0xae>
    9870:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9874:	c7 80 40 01 00 00 7f 	mov    DWORD PTR [rax+0x140],0x7f
    987b:	00 00 00 
    987e:	90                   	nop
    987f:	c9                   	leave  
    9880:	c3                   	ret    

0000000000009881 <get_ruletype>:
    9881:	f3 0f 1e fa          	endbr64 
    9885:	55                   	push   rbp
    9886:	48 89 e5             	mov    rbp,rsp
    9889:	48 83 ec 10          	sub    rsp,0x10
    988d:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    9891:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    9895:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9899:	ba 09 00 00 00       	mov    edx,0x9
    989e:	48 8d 35 08 42 00 00 	lea    rsi,[rip+0x4208]        # daad <_IO_stdin_used+0x1aad>
    98a5:	48 89 c7             	mov    rdi,rax
    98a8:	e8 e3 8c ff ff       	call   2590 <strncmp@plt>
    98ad:	85 c0                	test   eax,eax
    98af:	75 17                	jne    98c8 <get_ruletype+0x47>
    98b1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98b5:	48 8d 15 d8 bd ff ff 	lea    rdx,[rip+0xffffffffffffbdd8]        # 5694 <str_match_parser>
    98bc:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    98c3:	e9 82 00 00 00       	jmp    994a <get_ruletype+0xc9>
    98c8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98cc:	ba 04 00 00 00       	mov    edx,0x4
    98d1:	48 8d 35 df 41 00 00 	lea    rsi,[rip+0x41df]        # dab7 <_IO_stdin_used+0x1ab7>
    98d8:	48 89 c7             	mov    rdi,rax
    98db:	e8 b0 8c ff ff       	call   2590 <strncmp@plt>
    98e0:	85 c0                	test   eax,eax
    98e2:	75 14                	jne    98f8 <get_ruletype+0x77>
    98e4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    98e8:	48 8d 15 48 c0 ff ff 	lea    rdx,[rip+0xffffffffffffc048]        # 5937 <none>
    98ef:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    98f6:	eb 52                	jmp    994a <get_ruletype+0xc9>
    98f8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    98fc:	ba 04 00 00 00       	mov    edx,0x4
    9901:	48 8d 35 b4 41 00 00 	lea    rsi,[rip+0x41b4]        # dabc <_IO_stdin_used+0x1abc>
    9908:	48 89 c7             	mov    rdi,rax
    990b:	e8 80 8c ff ff       	call   2590 <strncmp@plt>
    9910:	85 c0                	test   eax,eax
    9912:	75 14                	jne    9928 <get_ruletype+0xa7>
    9914:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    9918:	48 8d 15 2f c0 ff ff 	lea    rdx,[rip+0xffffffffffffc02f]        # 594e <pcre_match>
    991f:	48 89 90 78 03 00 00 	mov    QWORD PTR [rax+0x378],rdx
    9926:	eb 22                	jmp    994a <get_ruletype+0xc9>
    9928:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    992c:	48 89 c6             	mov    rsi,rax
    992f:	48 8d 3d 8b 41 00 00 	lea    rdi,[rip+0x418b]        # dac1 <_IO_stdin_used+0x1ac1>
    9936:	b8 00 00 00 00       	mov    eax,0x0
    993b:	e8 80 8b ff ff       	call   24c0 <printf@plt>
    9940:	bf 01 00 00 00       	mov    edi,0x1
    9945:	e8 f6 8b ff ff       	call   2540 <exit@plt>
    994a:	c9                   	leave  
    994b:	c3                   	ret    

000000000000994c <numeric_check>:
    994c:	f3 0f 1e fa          	endbr64 
    9950:	55                   	push   rbp
    9951:	48 89 e5             	mov    rbp,rsp
    9954:	48 83 ec 30          	sub    rsp,0x30
    9958:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    995c:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    995f:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    9963:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9967:	48 89 c7             	mov    rdi,rax
    996a:	e8 70 fc ff ff       	call   95df <isdigit>
    996f:	84 c0                	test   al,al
    9971:	74 27                	je     999a <numeric_check+0x4e>
    9973:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    9977:	48 89 c7             	mov    rdi,rax
    997a:	e8 b1 8d ff ff       	call   2730 <atoi@plt>
    997f:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    9982:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9985:	39 45 e4             	cmp    DWORD PTR [rbp-0x1c],eax
    9988:	77 10                	ja     999a <numeric_check+0x4e>
    998a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    998d:	48 98                	cdqe   
    998f:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
    9993:	72 05                	jb     999a <numeric_check+0x4e>
    9995:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    9998:	eb 05                	jmp    999f <numeric_check+0x53>
    999a:	b8 ff ff ff ff       	mov    eax,0xffffffff
    999f:	c9                   	leave  
    99a0:	c3                   	ret    

00000000000099a1 <sc_strip>:
    99a1:	f3 0f 1e fa          	endbr64 
    99a5:	55                   	push   rbp
    99a6:	48 89 e5             	mov    rbp,rsp
    99a9:	48 83 ec 10          	sub    rsp,0x10
    99ad:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    99b1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    99b5:	48 8d 35 1c 41 00 00 	lea    rsi,[rip+0x411c]        # dad8 <_IO_stdin_used+0x1ad8>
    99bc:	48 89 c7             	mov    rdi,rax
    99bf:	e8 8c 8e ff ff       	call   2850 <strcspn@plt>
    99c4:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    99c8:	48 01 d0             	add    rax,rdx
    99cb:	c6 00 00             	mov    BYTE PTR [rax],0x0
    99ce:	90                   	nop
    99cf:	c9                   	leave  
    99d0:	c3                   	ret    

00000000000099d1 <void_rule>:
    99d1:	f3 0f 1e fa          	endbr64 
    99d5:	55                   	push   rbp
    99d6:	48 89 e5             	mov    rbp,rsp
    99d9:	48 83 ec 10          	sub    rsp,0x10
    99dd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    99e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    99e5:	48 05 6e 03 00 00    	add    rax,0x36e
    99eb:	ba 0a 00 00 00       	mov    edx,0xa
    99f0:	be 00 00 00 00       	mov    esi,0x0
    99f5:	48 89 c7             	mov    rdi,rax
    99f8:	e8 d3 8a ff ff       	call   24d0 <memset@plt>
    99fd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a01:	48 05 68 03 00 00    	add    rax,0x368
    9a07:	ba 06 00 00 00       	mov    edx,0x6
    9a0c:	be 00 00 00 00       	mov    esi,0x0
    9a11:	48 89 c7             	mov    rdi,rax
    9a14:	e8 b7 8a ff ff       	call   24d0 <memset@plt>
    9a19:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    9a1d:	48 05 50 03 00 00    	add    rax,0x350
    9a23:	ba 18 00 00 00       	mov    edx,0x18
    9a28:	be 00 00 00 00       	mov    esi,0x0
    9a2d:	48 89 c7             	mov    rdi,rax
    9a30:	e8 9b 8a ff ff       	call   24d0 <memset@plt>
    9a35:	90                   	nop
    9a36:	c9                   	leave  
    9a37:	c3                   	ret    

0000000000009a38 <line_parser>:
    9a38:	f3 0f 1e fa          	endbr64 
    9a3c:	55                   	push   rbp
    9a3d:	48 89 e5             	mov    rbp,rsp
    9a40:	53                   	push   rbx
    9a41:	48 81 ec 98 00 00 00 	sub    rsp,0x98
    9a48:	48 89 bd 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rdi
    9a4f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    9a56:	00 00 
    9a58:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    9a5c:	31 c0                	xor    eax,eax
    9a5e:	8b 05 b0 75 00 00    	mov    eax,DWORD PTR [rip+0x75b0]        # 11014 <num_rules>
    9a64:	83 c0 01             	add    eax,0x1
    9a67:	89 05 a7 75 00 00    	mov    DWORD PTR [rip+0x75a7],eax        # 11014 <num_rules>
    9a6d:	8b 05 a1 75 00 00    	mov    eax,DWORD PTR [rip+0x75a1]        # 11014 <num_rules>
    9a73:	48 98                	cdqe   
    9a75:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    9a7c:	48 8d 15 5d 78 00 00 	lea    rdx,[rip+0x785d]        # 112e0 <rules>
    9a83:	48 01 d0             	add    rax,rdx
    9a86:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    9a8a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9a8e:	ba 08 00 00 00       	mov    edx,0x8
    9a93:	be 00 00 00 00       	mov    esi,0x0
    9a98:	48 89 c7             	mov    rdi,rax
    9a9b:	e8 30 8a ff ff       	call   24d0 <memset@plt>
    9aa0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9aa4:	c7 80 44 01 00 00 ff 	mov    DWORD PTR [rax+0x144],0xffffffff
    9aab:	ff ff ff 
    9aae:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ab2:	c7 80 40 01 00 00 ff 	mov    DWORD PTR [rax+0x140],0xffffffff
    9ab9:	ff ff ff 
    9abc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ac0:	c7 40 1c ff ff ff ff 	mov    DWORD PTR [rax+0x1c],0xffffffff
    9ac7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9acb:	c7 40 18 ff ff ff ff 	mov    DWORD PTR [rax+0x18],0xffffffff
    9ad2:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ad6:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
    9add:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ae1:	c7 80 4c 03 00 00 00 	mov    DWORD PTR [rax+0x34c],0x0
    9ae8:	00 00 00 
    9aeb:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9aef:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    9af5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9af9:	c7 40 04 00 00 00 00 	mov    DWORD PTR [rax+0x4],0x0
    9b00:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9b04:	48 89 c7             	mov    rdi,rax
    9b07:	e8 c5 fe ff ff       	call   99d1 <void_rule>
    9b0c:	c7 45 88 00 00 00 00 	mov    DWORD PTR [rbp-0x78],0x0
    9b13:	c6 85 7c ff ff ff 00 	mov    BYTE PTR [rbp-0x84],0x0
    9b1a:	c7 45 80 00 00 00 00 	mov    DWORD PTR [rbp-0x80],0x0
    9b21:	c7 45 84 00 00 00 00 	mov    DWORD PTR [rbp-0x7c],0x0
    9b28:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9b2f:	48 89 c7             	mov    rdi,rax
    9b32:	e8 09 8b ff ff       	call   2640 <strlen@plt>
    9b37:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    9b3a:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9b41:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    9b48:	c6 85 7f ff ff ff 00 	mov    BYTE PTR [rbp-0x81],0x0
    9b4f:	e9 c4 0d 00 00       	jmp    a918 <line_parser+0xee0>
    9b54:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9b57:	48 63 d0             	movsxd rdx,eax
    9b5a:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9b61:	48 01 d0             	add    rax,rdx
    9b64:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b67:	0f be c0             	movsx  eax,al
    9b6a:	89 c7                	mov    edi,eax
    9b6c:	e8 58 fa ff ff       	call   95c9 <delimit>
    9b71:	83 f0 01             	xor    eax,0x1
    9b74:	84 c0                	test   al,al
    9b76:	74 04                	je     9b7c <line_parser+0x144>
    9b78:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9b7c:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9b7f:	48 63 d0             	movsxd rdx,eax
    9b82:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9b89:	48 01 d0             	add    rax,rdx
    9b8c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9b8f:	0f be c0             	movsx  eax,al
    9b92:	89 c7                	mov    edi,eax
    9b94:	e8 30 fa ff ff       	call   95c9 <delimit>
    9b99:	84 c0                	test   al,al
    9b9b:	74 3f                	je     9bdc <line_parser+0x1a4>
    9b9d:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9ba0:	3b 45 80             	cmp    eax,DWORD PTR [rbp-0x80]
    9ba3:	75 37                	jne    9bdc <line_parser+0x1a4>
    9ba5:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9ba8:	48 63 d0             	movsxd rdx,eax
    9bab:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9bb2:	48 01 d0             	add    rax,rdx
    9bb5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9bb8:	3c 3a                	cmp    al,0x3a
    9bba:	75 11                	jne    9bcd <line_parser+0x195>
    9bbc:	48 8d 3d 17 3f 00 00 	lea    rdi,[rip+0x3f17]        # dada <_IO_stdin_used+0x1ada>
    9bc3:	b8 00 00 00 00       	mov    eax,0x0
    9bc8:	e8 f3 88 ff ff       	call   24c0 <printf@plt>
    9bcd:	83 45 84 01          	add    DWORD PTR [rbp-0x7c],0x1
    9bd1:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9bd4:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    9bd7:	e9 3c 0d 00 00       	jmp    a918 <line_parser+0xee0>
    9bdc:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9bdf:	48 63 d0             	movsxd rdx,eax
    9be2:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9be9:	48 01 d0             	add    rax,rdx
    9bec:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9bef:	0f be c0             	movsx  eax,al
    9bf2:	89 c7                	mov    edi,eax
    9bf4:	e8 d0 f9 ff ff       	call   95c9 <delimit>
    9bf9:	84 c0                	test   al,al
    9bfb:	74 08                	je     9c05 <line_parser+0x1cd>
    9bfd:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9c00:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9c03:	75 18                	jne    9c1d <line_parser+0x1e5>
    9c05:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c08:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    9c0b:	0f 85 07 0d 00 00    	jne    a918 <line_parser+0xee0>
    9c11:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    9c14:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    9c17:	0f 84 fb 0c 00 00    	je     a918 <line_parser+0xee0>
    9c1d:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    9c20:	8d 50 ff             	lea    edx,[rax-0x1]
    9c23:	8b 4d 80             	mov    ecx,DWORD PTR [rbp-0x80]
    9c26:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    9c2d:	89 ce                	mov    esi,ecx
    9c2f:	48 89 c7             	mov    rdi,rax
    9c32:	e8 12 f9 ff ff       	call   9549 <substr>
    9c37:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    9c3b:	0f b6 85 7c ff ff ff 	movzx  eax,BYTE PTR [rbp-0x84]
    9c42:	83 f0 01             	xor    eax,0x1
    9c45:	84 c0                	test   al,al
    9c47:	0f 84 ea 02 00 00    	je     9f37 <line_parser+0x4ff>
    9c4d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9c51:	48 8d 35 91 3e 00 00 	lea    rsi,[rip+0x3e91]        # dae9 <_IO_stdin_used+0x1ae9>
    9c58:	48 89 c7             	mov    rdi,rax
    9c5b:	e8 60 8b ff ff       	call   27c0 <strcmp@plt>
    9c60:	85 c0                	test   eax,eax
    9c62:	75 33                	jne    9c97 <line_parser+0x25f>
    9c64:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9c6b:	83 f0 01             	xor    eax,0x1
    9c6e:	84 c0                	test   al,al
    9c70:	74 25                	je     9c97 <line_parser+0x25f>
    9c72:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9c79:	83 f0 01             	xor    eax,0x1
    9c7c:	84 c0                	test   al,al
    9c7e:	74 17                	je     9c97 <line_parser+0x25f>
    9c80:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9c84:	48 8d 15 df b7 ff ff 	lea    rdx,[rip+0xffffffffffffb7df]        # 546a <stdout_alert>
    9c8b:	48 89 90 80 03 00 00 	mov    QWORD PTR [rax+0x380],rdx
    9c92:	e9 5d 0c 00 00       	jmp    a8f4 <line_parser+0xebc>
    9c97:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9c9b:	48 8d 35 fe 3d 00 00 	lea    rsi,[rip+0x3dfe]        # daa0 <_IO_stdin_used+0x1aa0>
    9ca2:	48 89 c7             	mov    rdi,rax
    9ca5:	e8 16 8b ff ff       	call   27c0 <strcmp@plt>
    9caa:	85 c0                	test   eax,eax
    9cac:	74 45                	je     9cf3 <line_parser+0x2bb>
    9cae:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9cb2:	48 8d 35 e3 3d 00 00 	lea    rsi,[rip+0x3de3]        # da9c <_IO_stdin_used+0x1a9c>
    9cb9:	48 89 c7             	mov    rdi,rax
    9cbc:	e8 ff 8a ff ff       	call   27c0 <strcmp@plt>
    9cc1:	85 c0                	test   eax,eax
    9cc3:	74 2e                	je     9cf3 <line_parser+0x2bb>
    9cc5:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9cc9:	48 8d 35 d5 3d 00 00 	lea    rsi,[rip+0x3dd5]        # daa5 <_IO_stdin_used+0x1aa5>
    9cd0:	48 89 c7             	mov    rdi,rax
    9cd3:	e8 e8 8a ff ff       	call   27c0 <strcmp@plt>
    9cd8:	85 c0                	test   eax,eax
    9cda:	74 17                	je     9cf3 <line_parser+0x2bb>
    9cdc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ce0:	48 8d 35 c2 3d 00 00 	lea    rsi,[rip+0x3dc2]        # daa9 <_IO_stdin_used+0x1aa9>
    9ce7:	48 89 c7             	mov    rdi,rax
    9cea:	e8 d1 8a ff ff       	call   27c0 <strcmp@plt>
    9cef:	85 c0                	test   eax,eax
    9cf1:	75 34                	jne    9d27 <line_parser+0x2ef>
    9cf3:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9cfa:	83 f0 01             	xor    eax,0x1
    9cfd:	84 c0                	test   al,al
    9cff:	74 26                	je     9d27 <line_parser+0x2ef>
    9d01:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9d08:	83 f0 01             	xor    eax,0x1
    9d0b:	84 c0                	test   al,al
    9d0d:	74 18                	je     9d27 <line_parser+0x2ef>
    9d0f:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9d13:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d17:	48 89 d6             	mov    rsi,rdx
    9d1a:	48 89 c7             	mov    rdi,rax
    9d1d:	e8 ae fa ff ff       	call   97d0 <assign_protocol>
    9d22:	e9 cd 0b 00 00       	jmp    a8f4 <line_parser+0xebc>
    9d27:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d2b:	48 89 c7             	mov    rdi,rax
    9d2e:	e8 ac f8 ff ff       	call   95df <isdigit>
    9d33:	84 c0                	test   al,al
    9d35:	75 17                	jne    9d4e <line_parser+0x316>
    9d37:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d3b:	48 8d 35 56 3d 00 00 	lea    rsi,[rip+0x3d56]        # da98 <_IO_stdin_used+0x1a98>
    9d42:	48 89 c7             	mov    rdi,rax
    9d45:	e8 76 8a ff ff       	call   27c0 <strcmp@plt>
    9d4a:	85 c0                	test   eax,eax
    9d4c:	75 34                	jne    9d82 <line_parser+0x34a>
    9d4e:	0f b6 85 7d ff ff ff 	movzx  eax,BYTE PTR [rbp-0x83]
    9d55:	83 f0 01             	xor    eax,0x1
    9d58:	84 c0                	test   al,al
    9d5a:	74 26                	je     9d82 <line_parser+0x34a>
    9d5c:	0f b6 85 7e ff ff ff 	movzx  eax,BYTE PTR [rbp-0x82]
    9d63:	83 f0 01             	xor    eax,0x1
    9d66:	84 c0                	test   al,al
    9d68:	74 18                	je     9d82 <line_parser+0x34a>
    9d6a:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9d6e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d72:	48 89 d6             	mov    rsi,rdx
    9d75:	48 89 c7             	mov    rdi,rax
    9d78:	e8 9c f9 ff ff       	call   9719 <assign_port_number>
    9d7d:	e9 72 0b 00 00       	jmp    a8f4 <line_parser+0xebc>
    9d82:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9d86:	ba 08 00 00 00       	mov    edx,0x8
    9d8b:	48 8d 35 5d 3d 00 00 	lea    rsi,[rip+0x3d5d]        # daef <_IO_stdin_used+0x1aef>
    9d92:	48 89 c7             	mov    rdi,rax
    9d95:	e8 f6 87 ff ff       	call   2590 <strncmp@plt>
    9d9a:	85 c0                	test   eax,eax
    9d9c:	75 75                	jne    9e13 <line_parser+0x3db>
    9d9e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9da2:	48 8d 50 09          	lea    rdx,[rax+0x9]
    9da6:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9daa:	48 89 d6             	mov    rsi,rdx
    9dad:	48 89 c7             	mov    rdi,rax
    9db0:	e8 3b 8a ff ff       	call   27f0 <strcpy@plt>
    9db5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9db9:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9dbc:	85 c0                	test   eax,eax
    9dbe:	75 2e                	jne    9dee <line_parser+0x3b6>
    9dc0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9dc4:	8b 00                	mov    eax,DWORD PTR [rax]
    9dc6:	85 c0                	test   eax,eax
    9dc8:	75 24                	jne    9dee <line_parser+0x3b6>
    9dca:	8b 15 f4 01 10 00    	mov    edx,DWORD PTR [rip+0x1001f4]        # 109fc4 <homenet>
    9dd0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9dd4:	89 10                	mov    DWORD PTR [rax],edx
    9dd6:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9dda:	48 89 c7             	mov    rdi,rax
    9ddd:	e8 9b f9 ff ff       	call   977d <check_port_number>
    9de2:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9de6:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9de9:	e9 06 0b 00 00       	jmp    a8f4 <line_parser+0xebc>
    9dee:	8b 15 d0 01 10 00    	mov    edx,DWORD PTR [rip+0x1001d0]        # 109fc4 <homenet>
    9df4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9df8:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
    9dfb:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9dff:	48 89 c7             	mov    rdi,rax
    9e02:	e8 76 f9 ff ff       	call   977d <check_port_number>
    9e07:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9e0b:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9e0e:	e9 e1 0a 00 00       	jmp    a8f4 <line_parser+0xebc>
    9e13:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e17:	48 8d 35 da 3c 00 00 	lea    rsi,[rip+0x3cda]        # daf8 <_IO_stdin_used+0x1af8>
    9e1e:	48 89 c7             	mov    rdi,rax
    9e21:	e8 9a 89 ff ff       	call   27c0 <strcmp@plt>
    9e26:	85 c0                	test   eax,eax
    9e28:	75 30                	jne    9e5a <line_parser+0x422>
    9e2a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e2e:	8b 10                	mov    edx,DWORD PTR [rax]
    9e30:	8b 05 8e 01 10 00    	mov    eax,DWORD PTR [rip+0x10018e]        # 109fc4 <homenet>
    9e36:	39 c2                	cmp    edx,eax
    9e38:	75 10                	jne    9e4a <line_parser+0x412>
    9e3a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e3e:	c7 40 10 45 00 00 00 	mov    DWORD PTR [rax+0x10],0x45
    9e45:	e9 aa 0a 00 00       	jmp    a8f4 <line_parser+0xebc>
    9e4a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e4e:	c7 40 10 46 00 00 00 	mov    DWORD PTR [rax+0x10],0x46
    9e55:	e9 9a 0a 00 00       	jmp    a8f4 <line_parser+0xebc>
    9e5a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e5e:	48 8d 35 96 3c 00 00 	lea    rsi,[rip+0x3c96]        # dafb <_IO_stdin_used+0x1afb>
    9e65:	48 89 c7             	mov    rdi,rax
    9e68:	e8 53 89 ff ff       	call   27c0 <strcmp@plt>
    9e6d:	85 c0                	test   eax,eax
    9e6f:	75 10                	jne    9e81 <line_parser+0x449>
    9e71:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9e75:	c7 40 10 47 00 00 00 	mov    DWORD PTR [rax+0x10],0x47
    9e7c:	e9 73 0a 00 00       	jmp    a8f4 <line_parser+0xebc>
    9e81:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9e85:	ba 0c 00 00 00       	mov    edx,0xc
    9e8a:	48 8d 35 6d 3c 00 00 	lea    rsi,[rip+0x3c6d]        # dafe <_IO_stdin_used+0x1afe>
    9e91:	48 89 c7             	mov    rdi,rax
    9e94:	e8 f7 86 ff ff       	call   2590 <strncmp@plt>
    9e99:	85 c0                	test   eax,eax
    9e9b:	75 7f                	jne    9f1c <line_parser+0x4e4>
    9e9d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9ea1:	48 8d 50 0c          	lea    rdx,[rax+0xc]
    9ea5:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9ea9:	48 89 d6             	mov    rsi,rdx
    9eac:	48 89 c7             	mov    rdi,rax
    9eaf:	e8 3c 89 ff ff       	call   27f0 <strcpy@plt>
    9eb4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9eb8:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
    9ebb:	85 c0                	test   eax,eax
    9ebd:	75 37                	jne    9ef6 <line_parser+0x4be>
    9ebf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ec3:	8b 10                	mov    edx,DWORD PTR [rax]
    9ec5:	8b 05 f9 00 10 00    	mov    eax,DWORD PTR [rip+0x1000f9]        # 109fc4 <homenet>
    9ecb:	39 c2                	cmp    edx,eax
    9ecd:	75 27                	jne    9ef6 <line_parser+0x4be>
    9ecf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9ed3:	c7 40 04 ff ff ff ff 	mov    DWORD PTR [rax+0x4],0xffffffff
    9eda:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9ede:	48 83 c0 01          	add    rax,0x1
    9ee2:	48 89 c7             	mov    rdi,rax
    9ee5:	e8 93 f8 ff ff       	call   977d <check_port_number>
    9eea:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9eee:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    9ef1:	e9 fe 09 00 00       	jmp    a8f4 <line_parser+0xebc>
    9ef6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9efa:	c7 00 ff ff ff ff    	mov    DWORD PTR [rax],0xffffffff
    9f00:	48 8d 45 de          	lea    rax,[rbp-0x22]
    9f04:	48 83 c0 01          	add    rax,0x1
    9f08:	48 89 c7             	mov    rdi,rax
    9f0b:	e8 6d f8 ff ff       	call   977d <check_port_number>
    9f10:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    9f14:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
    9f17:	e9 d8 09 00 00       	jmp    a8f4 <line_parser+0xebc>
    9f1c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f20:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f23:	3c 28                	cmp    al,0x28
    9f25:	0f 85 c9 09 00 00    	jne    a8f4 <line_parser+0xebc>
    9f2b:	c6 85 7c ff ff ff 01 	mov    BYTE PTR [rbp-0x84],0x1
    9f32:	e9 e1 09 00 00       	jmp    a918 <line_parser+0xee0>
    9f37:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f3b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f3e:	3c 28                	cmp    al,0x28
    9f40:	75 0e                	jne    9f50 <line_parser+0x518>
    9f42:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f46:	48 83 c0 01          	add    rax,0x1
    9f4a:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9f4e:	eb 08                	jmp    9f58 <line_parser+0x520>
    9f50:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    9f54:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    9f58:	80 bd 7d ff ff ff 00 	cmp    BYTE PTR [rbp-0x83],0x0
    9f5f:	0f 84 8e 00 00 00    	je     9ff3 <line_parser+0x5bb>
    9f65:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f69:	48 89 c7             	mov    rdi,rax
    9f6c:	e8 cf 86 ff ff       	call   2640 <strlen@plt>
    9f71:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    9f75:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f79:	48 01 d0             	add    rax,rdx
    9f7c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    9f7f:	3c 3b                	cmp    al,0x3b
    9f81:	75 36                	jne    9fb9 <line_parser+0x581>
    9f83:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9f87:	48 89 c7             	mov    rdi,rax
    9f8a:	e8 b1 86 ff ff       	call   2640 <strlen@plt>
    9f8f:	48 8d 50 fe          	lea    rdx,[rax-0x2]
    9f93:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9f97:	48 8d 88 50 01 00 00 	lea    rcx,[rax+0x150]
    9f9e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fa2:	48 89 c6             	mov    rsi,rax
    9fa5:	48 89 cf             	mov    rdi,rcx
    9fa8:	e8 63 85 ff ff       	call   2510 <strncat@plt>
    9fad:	c6 85 7d ff ff ff 00 	mov    BYTE PTR [rbp-0x83],0x0
    9fb4:	e9 5f 09 00 00       	jmp    a918 <line_parser+0xee0>
    9fb9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9fbd:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    9fc4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    9fc8:	48 89 c6             	mov    rsi,rax
    9fcb:	48 89 d7             	mov    rdi,rdx
    9fce:	e8 1d 87 ff ff       	call   26f0 <strcat@plt>
    9fd3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    9fd7:	48 8d 98 50 01 00 00 	lea    rbx,[rax+0x150]
    9fde:	48 89 df             	mov    rdi,rbx
    9fe1:	e8 5a 86 ff ff       	call   2640 <strlen@plt>
    9fe6:	48 01 d8             	add    rax,rbx
    9fe9:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    9fee:	e9 01 09 00 00       	jmp    a8f4 <line_parser+0xebc>
    9ff3:	80 bd 7e ff ff ff 00 	cmp    BYTE PTR [rbp-0x82],0x0
    9ffa:	74 7f                	je     a07b <line_parser+0x643>
    9ffc:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a000:	48 8d 35 04 3b 00 00 	lea    rsi,[rip+0x3b04]        # db0b <_IO_stdin_used+0x1b0b>
    a007:	48 89 c7             	mov    rdi,rax
    a00a:	e8 d1 86 ff ff       	call   26e0 <strstr@plt>
    a00f:	48 85 c0             	test   rax,rax
    a012:	74 33                	je     a047 <line_parser+0x60f>
    a014:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a018:	48 89 c7             	mov    rdi,rax
    a01b:	e8 20 86 ff ff       	call   2640 <strlen@plt>
    a020:	48 8d 50 fd          	lea    rdx,[rax-0x3]
    a024:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a028:	48 8d 48 40          	lea    rcx,[rax+0x40]
    a02c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a030:	48 89 c6             	mov    rsi,rax
    a033:	48 89 cf             	mov    rdi,rcx
    a036:	e8 d5 84 ff ff       	call   2510 <strncat@plt>
    a03b:	c6 85 7e ff ff ff 00 	mov    BYTE PTR [rbp-0x82],0x0
    a042:	e9 d1 08 00 00       	jmp    a918 <line_parser+0xee0>
    a047:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a04b:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a04f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a053:	48 89 c6             	mov    rsi,rax
    a056:	48 89 d7             	mov    rdi,rdx
    a059:	e8 92 86 ff ff       	call   26f0 <strcat@plt>
    a05e:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a062:	48 8d 58 40          	lea    rbx,[rax+0x40]
    a066:	48 89 df             	mov    rdi,rbx
    a069:	e8 d2 85 ff ff       	call   2640 <strlen@plt>
    a06e:	48 01 d8             	add    rax,rbx
    a071:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a076:	e9 79 08 00 00       	jmp    a8f4 <line_parser+0xebc>
    a07b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a07f:	ba 06 00 00 00       	mov    edx,0x6
    a084:	48 8d 35 83 3a 00 00 	lea    rsi,[rip+0x3a83]        # db0e <_IO_stdin_used+0x1b0e>
    a08b:	48 89 c7             	mov    rdi,rax
    a08e:	e8 fd 84 ff ff       	call   2590 <strncmp@plt>
    a093:	85 c0                	test   eax,eax
    a095:	75 37                	jne    a0ce <line_parser+0x696>
    a097:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a09b:	48 89 c7             	mov    rdi,rax
    a09e:	e8 9d 85 ff ff       	call   2640 <strlen@plt>
    a0a3:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a0a7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0ab:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a0af:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a0b3:	48 83 c0 20          	add    rax,0x20
    a0b7:	48 89 ce             	mov    rsi,rcx
    a0ba:	48 89 c7             	mov    rdi,rax
    a0bd:	e8 7e 87 ff ff       	call   2840 <strncpy@plt>
    a0c2:	c6 85 7f ff ff ff 01 	mov    BYTE PTR [rbp-0x81],0x1
    a0c9:	e9 26 08 00 00       	jmp    a8f4 <line_parser+0xebc>
    a0ce:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0d2:	ba 05 00 00 00       	mov    edx,0x5
    a0d7:	48 8d 35 37 3a 00 00 	lea    rsi,[rip+0x3a37]        # db15 <_IO_stdin_used+0x1b15>
    a0de:	48 89 c7             	mov    rdi,rax
    a0e1:	e8 aa 84 ff ff       	call   2590 <strncmp@plt>
    a0e6:	85 c0                	test   eax,eax
    a0e8:	75 4d                	jne    a137 <line_parser+0x6ff>
    a0ea:	c6 85 7d ff ff ff 01 	mov    BYTE PTR [rbp-0x83],0x1
    a0f1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a0f5:	48 83 c0 05          	add    rax,0x5
    a0f9:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    a0fd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a101:	48 8d 90 50 01 00 00 	lea    rdx,[rax+0x150]
    a108:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    a10c:	48 89 c6             	mov    rsi,rax
    a10f:	48 89 d7             	mov    rdi,rdx
    a112:	e8 d9 85 ff ff       	call   26f0 <strcat@plt>
    a117:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a11b:	48 8d 98 50 01 00 00 	lea    rbx,[rax+0x150]
    a122:	48 89 df             	mov    rdi,rbx
    a125:	e8 16 85 ff ff       	call   2640 <strlen@plt>
    a12a:	48 01 d8             	add    rax,rbx
    a12d:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a132:	e9 bd 07 00 00       	jmp    a8f4 <line_parser+0xebc>
    a137:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a13b:	ba 06 00 00 00       	mov    edx,0x6
    a140:	48 8d 35 d4 39 00 00 	lea    rsi,[rip+0x39d4]        # db1b <_IO_stdin_used+0x1b1b>
    a147:	48 89 c7             	mov    rdi,rax
    a14a:	e8 41 84 ff ff       	call   2590 <strncmp@plt>
    a14f:	85 c0                	test   eax,eax
    a151:	75 31                	jne    a184 <line_parser+0x74c>
    a153:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a157:	48 89 c7             	mov    rdi,rax
    a15a:	e8 42 f8 ff ff       	call   99a1 <sc_strip>
    a15f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a163:	48 83 c0 06          	add    rax,0x6
    a167:	48 89 c7             	mov    rdi,rax
    a16a:	e8 c1 85 ff ff       	call   2730 <atoi@plt>
    a16f:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    a172:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a176:	8b 55 ac             	mov    edx,DWORD PTR [rbp-0x54]
    a179:	89 90 4c 03 00 00    	mov    DWORD PTR [rax+0x34c],edx
    a17f:	e9 70 07 00 00       	jmp    a8f4 <line_parser+0xebc>
    a184:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a188:	ba 05 00 00 00       	mov    edx,0x5
    a18d:	48 8d 35 8e 39 00 00 	lea    rsi,[rip+0x398e]        # db22 <_IO_stdin_used+0x1b22>
    a194:	48 89 c7             	mov    rdi,rax
    a197:	e8 f4 83 ff ff       	call   2590 <strncmp@plt>
    a19c:	85 c0                	test   eax,eax
    a19e:	75 3f                	jne    a1df <line_parser+0x7a7>
    a1a0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1a4:	48 89 c7             	mov    rdi,rax
    a1a7:	e8 94 84 ff ff       	call   2640 <strlen@plt>
    a1ac:	48 8d 50 fa          	lea    rdx,[rax-0x6]
    a1b0:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1b4:	48 8d 48 05          	lea    rcx,[rax+0x5]
    a1b8:	48 8d 45 de          	lea    rax,[rbp-0x22]
    a1bc:	48 89 ce             	mov    rsi,rcx
    a1bf:	48 89 c7             	mov    rdi,rax
    a1c2:	e8 79 86 ff ff       	call   2840 <strncpy@plt>
    a1c7:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    a1cb:	48 8d 45 de          	lea    rax,[rbp-0x22]
    a1cf:	48 89 d6             	mov    rsi,rdx
    a1d2:	48 89 c7             	mov    rdi,rax
    a1d5:	e8 a7 f6 ff ff       	call   9881 <get_ruletype>
    a1da:	e9 15 07 00 00       	jmp    a8f4 <line_parser+0xebc>
    a1df:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a1e3:	ba 08 00 00 00       	mov    edx,0x8
    a1e8:	48 8d 35 39 39 00 00 	lea    rsi,[rip+0x3939]        # db28 <_IO_stdin_used+0x1b28>
    a1ef:	48 89 c7             	mov    rdi,rax
    a1f2:	e8 99 83 ff ff       	call   2590 <strncmp@plt>
    a1f7:	85 c0                	test   eax,eax
    a1f9:	0f 85 8f 00 00 00    	jne    a28e <line_parser+0x856>
    a1ff:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a203:	48 83 c0 08          	add    rax,0x8
    a207:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    a20b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a20f:	48 8d 35 f5 38 00 00 	lea    rsi,[rip+0x38f5]        # db0b <_IO_stdin_used+0x1b0b>
    a216:	48 89 c7             	mov    rdi,rax
    a219:	e8 c2 84 ff ff       	call   26e0 <strstr@plt>
    a21e:	48 85 c0             	test   rax,rax
    a221:	74 30                	je     a253 <line_parser+0x81b>
    a223:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a227:	48 89 c7             	mov    rdi,rax
    a22a:	e8 11 84 ff ff       	call   2640 <strlen@plt>
    a22f:	48 8d 50 f5          	lea    rdx,[rax-0xb]
    a233:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a237:	48 8d 48 08          	lea    rcx,[rax+0x8]
    a23b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a23f:	48 83 c0 40          	add    rax,0x40
    a243:	48 89 ce             	mov    rsi,rcx
    a246:	48 89 c7             	mov    rdi,rax
    a249:	e8 f2 85 ff ff       	call   2840 <strncpy@plt>
    a24e:	e9 a1 06 00 00       	jmp    a8f4 <line_parser+0xebc>
    a253:	c6 85 7e ff ff ff 01 	mov    BYTE PTR [rbp-0x82],0x1
    a25a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a25e:	48 8d 50 40          	lea    rdx,[rax+0x40]
    a262:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    a266:	48 89 c6             	mov    rsi,rax
    a269:	48 89 d7             	mov    rdi,rdx
    a26c:	e8 7f 84 ff ff       	call   26f0 <strcat@plt>
    a271:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a275:	48 8d 58 40          	lea    rbx,[rax+0x40]
    a279:	48 89 df             	mov    rdi,rbx
    a27c:	e8 bf 83 ff ff       	call   2640 <strlen@plt>
    a281:	48 01 d8             	add    rax,rbx
    a284:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    a289:	e9 66 06 00 00       	jmp    a8f4 <line_parser+0xebc>
    a28e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a292:	ba 04 00 00 00       	mov    edx,0x4
    a297:	48 8d 35 93 38 00 00 	lea    rsi,[rip+0x3893]        # db31 <_IO_stdin_used+0x1b31>
    a29e:	48 89 c7             	mov    rdi,rax
    a2a1:	e8 ea 82 ff ff       	call   2590 <strncmp@plt>
    a2a6:	85 c0                	test   eax,eax
    a2a8:	0f 85 8e 00 00 00    	jne    a33c <line_parser+0x904>
    a2ae:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2b2:	48 8d 35 1f 38 00 00 	lea    rsi,[rip+0x381f]        # dad8 <_IO_stdin_used+0x1ad8>
    a2b9:	48 89 c7             	mov    rdi,rax
    a2bc:	e8 8f 85 ff ff       	call   2850 <strcspn@plt>
    a2c1:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    a2c5:	48 01 d0             	add    rax,rdx
    a2c8:	c6 00 00             	mov    BYTE PTR [rax],0x0
    a2cb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2cf:	48 83 c0 04          	add    rax,0x4
    a2d3:	48 89 c7             	mov    rdi,rax
    a2d6:	e8 04 f3 ff ff       	call   95df <isdigit>
    a2db:	84 c0                	test   al,al
    a2dd:	74 47                	je     a326 <line_parser+0x8ee>
    a2df:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a2e3:	48 83 c0 04          	add    rax,0x4
    a2e7:	48 89 c7             	mov    rdi,rax
    a2ea:	e8 41 84 ff ff       	call   2730 <atoi@plt>
    a2ef:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    a2f2:	83 7d a8 00          	cmp    DWORD PTR [rbp-0x58],0x0
    a2f6:	7e 18                	jle    a310 <line_parser+0x8d8>
    a2f8:	83 7d a8 0a          	cmp    DWORD PTR [rbp-0x58],0xa
    a2fc:	7f 12                	jg     a310 <line_parser+0x8d8>
    a2fe:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a302:	8b 55 a8             	mov    edx,DWORD PTR [rbp-0x58]
    a305:	89 90 4c 01 00 00    	mov    DWORD PTR [rax+0x14c],edx
    a30b:	e9 e4 05 00 00       	jmp    a8f4 <line_parser+0xebc>
    a310:	48 8d 3d 21 38 00 00 	lea    rdi,[rip+0x3821]        # db38 <_IO_stdin_used+0x1b38>
    a317:	e8 04 82 ff ff       	call   2520 <puts@plt>
    a31c:	bf ff ff ff ff       	mov    edi,0xffffffff
    a321:	e8 1a 82 ff ff       	call   2540 <exit@plt>
    a326:	48 8d 3d 33 38 00 00 	lea    rdi,[rip+0x3833]        # db60 <_IO_stdin_used+0x1b60>
    a32d:	e8 ee 81 ff ff       	call   2520 <puts@plt>
    a332:	bf ff ff ff ff       	mov    edi,0xffffffff
    a337:	e8 04 82 ff ff       	call   2540 <exit@plt>
    a33c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a340:	ba 06 00 00 00       	mov    edx,0x6
    a345:	48 8d 35 3c 38 00 00 	lea    rsi,[rip+0x383c]        # db88 <_IO_stdin_used+0x1b88>
    a34c:	48 89 c7             	mov    rdi,rax
    a34f:	e8 3c 82 ff ff       	call   2590 <strncmp@plt>
    a354:	85 c0                	test   eax,eax
    a356:	0f 85 9b 00 00 00    	jne    a3f7 <line_parser+0x9bf>
    a35c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a360:	48 89 c7             	mov    rdi,rax
    a363:	e8 39 f6 ff ff       	call   99a1 <sc_strip>
    a368:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a36c:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a372:	3d 80 00 00 00       	cmp    eax,0x80
    a377:	75 58                	jne    a3d1 <line_parser+0x999>
    a379:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a37d:	48 83 c0 06          	add    rax,0x6
    a381:	ba ff 00 00 00       	mov    edx,0xff
    a386:	be 00 00 00 00       	mov    esi,0x0
    a38b:	48 89 c7             	mov    rdi,rax
    a38e:	e8 b9 f5 ff ff       	call   994c <numeric_check>
    a393:	89 45 a4             	mov    DWORD PTR [rbp-0x5c],eax
    a396:	83 7d a4 ff          	cmp    DWORD PTR [rbp-0x5c],0xffffffff
    a39a:	75 16                	jne    a3b2 <line_parser+0x97a>
    a39c:	48 8d 3d ec 37 00 00 	lea    rdi,[rip+0x37ec]        # db8f <_IO_stdin_used+0x1b8f>
    a3a3:	e8 78 81 ff ff       	call   2520 <puts@plt>
    a3a8:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3ad:	e8 8e 81 ff ff       	call   2540 <exit@plt>
    a3b2:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
    a3b5:	89 c2                	mov    edx,eax
    a3b7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3bb:	88 90 72 03 00 00    	mov    BYTE PTR [rax+0x372],dl
    a3c1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3c5:	c6 80 6e 03 00 00 01 	mov    BYTE PTR [rax+0x36e],0x1
    a3cc:	e9 23 05 00 00       	jmp    a8f4 <line_parser+0xebc>
    a3d1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a3d5:	48 83 c0 20          	add    rax,0x20
    a3d9:	48 89 c6             	mov    rsi,rax
    a3dc:	48 8d 3d c5 37 00 00 	lea    rdi,[rip+0x37c5]        # dba8 <_IO_stdin_used+0x1ba8>
    a3e3:	b8 00 00 00 00       	mov    eax,0x0
    a3e8:	e8 d3 80 ff ff       	call   24c0 <printf@plt>
    a3ed:	bf ff ff ff ff       	mov    edi,0xffffffff
    a3f2:	e8 49 81 ff ff       	call   2540 <exit@plt>
    a3f7:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a3fb:	ba 06 00 00 00       	mov    edx,0x6
    a400:	48 8d 35 d8 37 00 00 	lea    rsi,[rip+0x37d8]        # dbdf <_IO_stdin_used+0x1bdf>
    a407:	48 89 c7             	mov    rdi,rax
    a40a:	e8 81 81 ff ff       	call   2590 <strncmp@plt>
    a40f:	85 c0                	test   eax,eax
    a411:	0f 85 86 00 00 00    	jne    a49d <line_parser+0xa65>
    a417:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a41b:	48 89 c7             	mov    rdi,rax
    a41e:	e8 7e f5 ff ff       	call   99a1 <sc_strip>
    a423:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a427:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a42d:	3d 80 00 00 00       	cmp    eax,0x80
    a432:	75 58                	jne    a48c <line_parser+0xa54>
    a434:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a438:	48 83 c0 06          	add    rax,0x6
    a43c:	ba ff 00 00 00       	mov    edx,0xff
    a441:	be 00 00 00 00       	mov    esi,0x0
    a446:	48 89 c7             	mov    rdi,rax
    a449:	e8 fe f4 ff ff       	call   994c <numeric_check>
    a44e:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
    a451:	83 7d a0 ff          	cmp    DWORD PTR [rbp-0x60],0xffffffff
    a455:	75 16                	jne    a46d <line_parser+0xa35>
    a457:	48 8d 3d 88 37 00 00 	lea    rdi,[rip+0x3788]        # dbe6 <_IO_stdin_used+0x1be6>
    a45e:	e8 bd 80 ff ff       	call   2520 <puts@plt>
    a463:	bf ff ff ff ff       	mov    edi,0xffffffff
    a468:	e8 d3 80 ff ff       	call   2540 <exit@plt>
    a46d:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    a470:	89 c2                	mov    edx,eax
    a472:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a476:	88 90 73 03 00 00    	mov    BYTE PTR [rax+0x373],dl
    a47c:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a480:	c6 80 6f 03 00 00 01 	mov    BYTE PTR [rax+0x36f],0x1
    a487:	e9 68 04 00 00       	jmp    a8f4 <line_parser+0xebc>
    a48c:	48 8d 3d 6d 37 00 00 	lea    rdi,[rip+0x376d]        # dc00 <_IO_stdin_used+0x1c00>
    a493:	e8 88 80 ff ff       	call   2520 <puts@plt>
    a498:	e9 57 04 00 00       	jmp    a8f4 <line_parser+0xebc>
    a49d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a4a1:	ba 08 00 00 00       	mov    edx,0x8
    a4a6:	48 8d 35 85 37 00 00 	lea    rsi,[rip+0x3785]        # dc32 <_IO_stdin_used+0x1c32>
    a4ad:	48 89 c7             	mov    rdi,rax
    a4b0:	e8 db 80 ff ff       	call   2590 <strncmp@plt>
    a4b5:	85 c0                	test   eax,eax
    a4b7:	0f 85 8c 00 00 00    	jne    a549 <line_parser+0xb11>
    a4bd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a4c1:	48 89 c7             	mov    rdi,rax
    a4c4:	e8 d8 f4 ff ff       	call   99a1 <sc_strip>
    a4c9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a4cd:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a4d3:	3d 80 00 00 00       	cmp    eax,0x80
    a4d8:	75 59                	jne    a533 <line_parser+0xafb>
    a4da:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a4de:	48 83 c0 08          	add    rax,0x8
    a4e2:	ba ff ff 00 00       	mov    edx,0xffff
    a4e7:	be 00 00 00 00       	mov    esi,0x0
    a4ec:	48 89 c7             	mov    rdi,rax
    a4ef:	e8 58 f4 ff ff       	call   994c <numeric_check>
    a4f4:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    a4f7:	83 7d 9c ff          	cmp    DWORD PTR [rbp-0x64],0xffffffff
    a4fb:	75 16                	jne    a513 <line_parser+0xadb>
    a4fd:	48 8d 3d 37 37 00 00 	lea    rdi,[rip+0x3737]        # dc3b <_IO_stdin_used+0x1c3b>
    a504:	e8 17 80 ff ff       	call   2520 <puts@plt>
    a509:	bf ff ff ff ff       	mov    edi,0xffffffff
    a50e:	e8 2d 80 ff ff       	call   2540 <exit@plt>
    a513:	8b 45 9c             	mov    eax,DWORD PTR [rbp-0x64]
    a516:	89 c2                	mov    edx,eax
    a518:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a51c:	66 89 90 76 03 00 00 	mov    WORD PTR [rax+0x376],dx
    a523:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a527:	c6 80 71 03 00 00 01 	mov    BYTE PTR [rax+0x371],0x1
    a52e:	e9 c1 03 00 00       	jmp    a8f4 <line_parser+0xebc>
    a533:	48 8d 3d 1e 37 00 00 	lea    rdi,[rip+0x371e]        # dc58 <_IO_stdin_used+0x1c58>
    a53a:	e8 e1 7f ff ff       	call   2520 <puts@plt>
    a53f:	bf ff ff ff ff       	mov    edi,0xffffffff
    a544:	e8 f7 7f ff ff       	call   2540 <exit@plt>
    a549:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a54d:	ba 09 00 00 00       	mov    edx,0x9
    a552:	48 8d 35 33 37 00 00 	lea    rsi,[rip+0x3733]        # dc8c <_IO_stdin_used+0x1c8c>
    a559:	48 89 c7             	mov    rdi,rax
    a55c:	e8 2f 80 ff ff       	call   2590 <strncmp@plt>
    a561:	85 c0                	test   eax,eax
    a563:	75 7a                	jne    a5df <line_parser+0xba7>
    a565:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a569:	48 89 c7             	mov    rdi,rax
    a56c:	e8 30 f4 ff ff       	call   99a1 <sc_strip>
    a571:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a575:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a57b:	3d 80 00 00 00       	cmp    eax,0x80
    a580:	0f 85 6e 03 00 00    	jne    a8f4 <line_parser+0xebc>
    a586:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a58a:	48 83 c0 09          	add    rax,0x9
    a58e:	ba ff ff 00 00       	mov    edx,0xffff
    a593:	be 00 00 00 00       	mov    esi,0x0
    a598:	48 89 c7             	mov    rdi,rax
    a59b:	e8 ac f3 ff ff       	call   994c <numeric_check>
    a5a0:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    a5a3:	83 7d 98 ff          	cmp    DWORD PTR [rbp-0x68],0xffffffff
    a5a7:	75 16                	jne    a5bf <line_parser+0xb87>
    a5a9:	48 8d 3d e6 36 00 00 	lea    rdi,[rip+0x36e6]        # dc96 <_IO_stdin_used+0x1c96>
    a5b0:	e8 6b 7f ff ff       	call   2520 <puts@plt>
    a5b5:	bf ff ff ff ff       	mov    edi,0xffffffff
    a5ba:	e8 81 7f ff ff       	call   2540 <exit@plt>
    a5bf:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
    a5c2:	89 c2                	mov    edx,eax
    a5c4:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5c8:	66 89 90 74 03 00 00 	mov    WORD PTR [rax+0x374],dx
    a5cf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a5d3:	c6 80 70 03 00 00 01 	mov    BYTE PTR [rax+0x370],0x1
    a5da:	e9 15 03 00 00       	jmp    a8f4 <line_parser+0xebc>
    a5df:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a5e3:	ba 04 00 00 00       	mov    edx,0x4
    a5e8:	48 8d 35 c3 36 00 00 	lea    rsi,[rip+0x36c3]        # dcb2 <_IO_stdin_used+0x1cb2>
    a5ef:	48 89 c7             	mov    rdi,rax
    a5f2:	e8 99 7f ff ff       	call   2590 <strncmp@plt>
    a5f7:	85 c0                	test   eax,eax
    a5f9:	75 64                	jne    a65f <line_parser+0xc27>
    a5fb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a5ff:	48 89 c7             	mov    rdi,rax
    a602:	e8 9a f3 ff ff       	call   99a1 <sc_strip>
    a607:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a60b:	48 83 c0 04          	add    rax,0x4
    a60f:	ba ff 00 00 00       	mov    edx,0xff
    a614:	be 00 00 00 00       	mov    esi,0x0
    a619:	48 89 c7             	mov    rdi,rax
    a61c:	e8 2b f3 ff ff       	call   994c <numeric_check>
    a621:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
    a624:	83 7d 94 ff          	cmp    DWORD PTR [rbp-0x6c],0xffffffff
    a628:	75 16                	jne    a640 <line_parser+0xc08>
    a62a:	48 8d 3d 86 36 00 00 	lea    rdi,[rip+0x3686]        # dcb7 <_IO_stdin_used+0x1cb7>
    a631:	e8 ea 7e ff ff       	call   2520 <puts@plt>
    a636:	bf ff ff ff ff       	mov    edi,0xffffffff
    a63b:	e8 00 7f ff ff       	call   2540 <exit@plt>
    a640:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
    a643:	89 c2                	mov    edx,eax
    a645:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a649:	88 90 6c 03 00 00    	mov    BYTE PTR [rax+0x36c],dl
    a64f:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a653:	c6 80 69 03 00 00 01 	mov    BYTE PTR [rax+0x369],0x1
    a65a:	e9 95 02 00 00       	jmp    a8f4 <line_parser+0xebc>
    a65f:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a663:	ba 07 00 00 00       	mov    edx,0x7
    a668:	48 8d 35 5a 36 00 00 	lea    rsi,[rip+0x365a]        # dcc9 <_IO_stdin_used+0x1cc9>
    a66f:	48 89 c7             	mov    rdi,rax
    a672:	e8 19 7f ff ff       	call   2590 <strncmp@plt>
    a677:	85 c0                	test   eax,eax
    a679:	75 6e                	jne    a6e9 <line_parser+0xcb1>
    a67b:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a67f:	48 89 c7             	mov    rdi,rax
    a682:	e8 1a f3 ff ff       	call   99a1 <sc_strip>
    a687:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a68b:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a691:	83 f8 7e             	cmp    eax,0x7e
    a694:	75 3d                	jne    a6d3 <line_parser+0xc9b>
    a696:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a69a:	48 89 c7             	mov    rdi,rax
    a69d:	e8 9e 7f ff ff       	call   2640 <strlen@plt>
    a6a2:	48 8d 50 f8          	lea    rdx,[rax-0x8]
    a6a6:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6aa:	48 8d 48 07          	lea    rcx,[rax+0x7]
    a6ae:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6b2:	48 05 53 03 00 00    	add    rax,0x353
    a6b8:	48 89 ce             	mov    rsi,rcx
    a6bb:	48 89 c7             	mov    rdi,rax
    a6be:	e8 7d 81 ff ff       	call   2840 <strncpy@plt>
    a6c3:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a6c7:	c6 80 50 03 00 00 01 	mov    BYTE PTR [rax+0x350],0x1
    a6ce:	e9 21 02 00 00       	jmp    a8f4 <line_parser+0xebc>
    a6d3:	48 8d 3d fe 35 00 00 	lea    rdi,[rip+0x35fe]        # dcd8 <_IO_stdin_used+0x1cd8>
    a6da:	e8 41 7e ff ff       	call   2520 <puts@plt>
    a6df:	bf ff ff ff ff       	mov    edi,0xffffffff
    a6e4:	e8 57 7e ff ff       	call   2540 <exit@plt>
    a6e9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a6ed:	ba 04 00 00 00       	mov    edx,0x4
    a6f2:	48 8d 35 10 36 00 00 	lea    rsi,[rip+0x3610]        # dd09 <_IO_stdin_used+0x1d09>
    a6f9:	48 89 c7             	mov    rdi,rax
    a6fc:	e8 8f 7e ff ff       	call   2590 <strncmp@plt>
    a701:	85 c0                	test   eax,eax
    a703:	75 78                	jne    a77d <line_parser+0xd45>
    a705:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a709:	48 89 c7             	mov    rdi,rax
    a70c:	e8 90 f2 ff ff       	call   99a1 <sc_strip>
    a711:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a715:	8b 80 40 01 00 00    	mov    eax,DWORD PTR [rax+0x140]
    a71b:	83 f8 7e             	cmp    eax,0x7e
    a71e:	0f 85 d0 01 00 00    	jne    a8f4 <line_parser+0xebc>
    a724:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a728:	48 83 c0 04          	add    rax,0x4
    a72c:	ba ff ff ff ff       	mov    edx,0xffffffff
    a731:	be 00 00 00 00       	mov    esi,0x0
    a736:	48 89 c7             	mov    rdi,rax
    a739:	e8 0e f2 ff ff       	call   994c <numeric_check>
    a73e:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    a741:	83 7d 90 ff          	cmp    DWORD PTR [rbp-0x70],0xffffffff
    a745:	75 16                	jne    a75d <line_parser+0xd25>
    a747:	48 8d 3d c0 35 00 00 	lea    rdi,[rip+0x35c0]        # dd0e <_IO_stdin_used+0x1d0e>
    a74e:	e8 cd 7d ff ff       	call   2520 <puts@plt>
    a753:	bf ff ff ff ff       	mov    edi,0xffffffff
    a758:	e8 e3 7d ff ff       	call   2540 <exit@plt>
    a75d:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
    a760:	89 c2                	mov    edx,eax
    a762:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a766:	66 89 90 5c 03 00 00 	mov    WORD PTR [rax+0x35c],dx
    a76d:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a771:	c6 80 51 03 00 00 01 	mov    BYTE PTR [rax+0x351],0x1
    a778:	e9 77 01 00 00       	jmp    a8f4 <line_parser+0xebc>
    a77d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a781:	ba 06 00 00 00       	mov    edx,0x6
    a786:	48 8d 35 93 35 00 00 	lea    rsi,[rip+0x3593]        # dd20 <_IO_stdin_used+0x1d20>
    a78d:	48 89 c7             	mov    rdi,rax
    a790:	e8 fb 7d ff ff       	call   2590 <strncmp@plt>
    a795:	85 c0                	test   eax,eax
    a797:	75 7c                	jne    a815 <line_parser+0xddd>
    a799:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a79d:	48 89 c7             	mov    rdi,rax
    a7a0:	e8 9b 7e ff ff       	call   2640 <strlen@plt>
    a7a5:	48 8d 50 f7          	lea    rdx,[rax-0x9]
    a7a9:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a7ad:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a7b1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7b5:	48 05 10 02 00 00    	add    rax,0x210
    a7bb:	48 89 ce             	mov    rsi,rcx
    a7be:	48 89 c7             	mov    rdi,rax
    a7c1:	e8 7a 80 ff ff       	call   2840 <strncpy@plt>
    a7c6:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7ca:	48 8d 88 10 02 00 00 	lea    rcx,[rax+0x210]
    a7d1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a7d5:	48 05 d0 01 00 00    	add    rax,0x1d0
    a7db:	ba 00 00 00 00       	mov    edx,0x0
    a7e0:	48 89 ce             	mov    rsi,rcx
    a7e3:	48 89 c7             	mov    rdi,rax
    a7e6:	e8 55 7f ff ff       	call   2740 <regcomp@plt>
    a7eb:	85 c0                	test   eax,eax
    a7ed:	74 16                	je     a805 <line_parser+0xdcd>
    a7ef:	48 8d 3d 32 35 00 00 	lea    rdi,[rip+0x3532]        # dd28 <_IO_stdin_used+0x1d28>
    a7f6:	e8 25 7d ff ff       	call   2520 <puts@plt>
    a7fb:	bf ff ff ff ff       	mov    edi,0xffffffff
    a800:	e8 3b 7d ff ff       	call   2540 <exit@plt>
    a805:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a809:	c6 80 90 02 00 00 01 	mov    BYTE PTR [rax+0x290],0x1
    a810:	e9 df 00 00 00       	jmp    a8f4 <line_parser+0xebc>
    a815:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a819:	ba 06 00 00 00       	mov    edx,0x6
    a81e:	48 8d 35 28 35 00 00 	lea    rsi,[rip+0x3528]        # dd4d <_IO_stdin_used+0x1d4d>
    a825:	48 89 c7             	mov    rdi,rax
    a828:	e8 63 7d ff ff       	call   2590 <strncmp@plt>
    a82d:	85 c0                	test   eax,eax
    a82f:	75 2d                	jne    a85e <line_parser+0xe26>
    a831:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a835:	48 89 c7             	mov    rdi,rax
    a838:	e8 64 f1 ff ff       	call   99a1 <sc_strip>
    a83d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a841:	48 8d 48 06          	lea    rcx,[rax+0x6]
    a845:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a849:	ba 01 00 00 00       	mov    edx,0x1
    a84e:	48 89 ce             	mov    rsi,rcx
    a851:	48 89 c7             	mov    rdi,rax
    a854:	e8 98 03 00 00       	call   abf1 <d_op_parser>
    a859:	e9 96 00 00 00       	jmp    a8f4 <line_parser+0xebc>
    a85e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a862:	ba 07 00 00 00       	mov    edx,0x7
    a867:	48 8d 35 e6 34 00 00 	lea    rsi,[rip+0x34e6]        # dd54 <_IO_stdin_used+0x1d54>
    a86e:	48 89 c7             	mov    rdi,rax
    a871:	e8 1a 7d ff ff       	call   2590 <strncmp@plt>
    a876:	85 c0                	test   eax,eax
    a878:	75 27                	jne    a8a1 <line_parser+0xe69>
    a87a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a87e:	48 89 c7             	mov    rdi,rax
    a881:	e8 1b f1 ff ff       	call   99a1 <sc_strip>
    a886:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a88a:	48 83 c0 07          	add    rax,0x7
    a88e:	48 89 c7             	mov    rdi,rax
    a891:	e8 9a 7e ff ff       	call   2730 <atoi@plt>
    a896:	89 c2                	mov    edx,eax
    a898:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a89c:	89 50 14             	mov    DWORD PTR [rax+0x14],edx
    a89f:	eb 53                	jmp    a8f4 <line_parser+0xebc>
    a8a1:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8a5:	ba 0b 00 00 00       	mov    edx,0xb
    a8aa:	48 8d 35 ab 34 00 00 	lea    rsi,[rip+0x34ab]        # dd5c <_IO_stdin_used+0x1d5c>
    a8b1:	48 89 c7             	mov    rdi,rax
    a8b4:	e8 d7 7c ff ff       	call   2590 <strncmp@plt>
    a8b9:	85 c0                	test   eax,eax
    a8bb:	75 10                	jne    a8cd <line_parser+0xe95>
    a8bd:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a8c1:	c7 80 48 03 00 00 01 	mov    DWORD PTR [rax+0x348],0x1
    a8c8:	00 00 00 
    a8cb:	eb 27                	jmp    a8f4 <line_parser+0xebc>
    a8cd:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    a8d1:	ba 09 00 00 00       	mov    edx,0x9
    a8d6:	48 8d 35 8b 34 00 00 	lea    rsi,[rip+0x348b]        # dd68 <_IO_stdin_used+0x1d68>
    a8dd:	48 89 c7             	mov    rdi,rax
    a8e0:	e8 ab 7c ff ff       	call   2590 <strncmp@plt>
    a8e5:	85 c0                	test   eax,eax
    a8e7:	75 0b                	jne    a8f4 <line_parser+0xebc>
    a8e9:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a8ed:	c6 80 48 01 00 00 01 	mov    BYTE PTR [rax+0x148],0x1
    a8f4:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a8f7:	89 45 80             	mov    DWORD PTR [rbp-0x80],eax
    a8fa:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a8fe:	48 89 c7             	mov    rdi,rax
    a901:	e8 3a 7d ff ff       	call   2640 <strlen@plt>
    a906:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    a90a:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    a90e:	48 01 d0             	add    rax,rdx
    a911:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    a914:	3c 29                	cmp    al,0x29
    a916:	74 3d                	je     a955 <line_parser+0xf1d>
    a918:	8b 45 84             	mov    eax,DWORD PTR [rbp-0x7c]
    a91b:	3b 45 8c             	cmp    eax,DWORD PTR [rbp-0x74]
    a91e:	7f 0c                	jg     a92c <line_parser+0xef4>
    a920:	8b 45 80             	mov    eax,DWORD PTR [rbp-0x80]
    a923:	3b 45 84             	cmp    eax,DWORD PTR [rbp-0x7c]
    a926:	0f 8e 28 f2 ff ff    	jle    9b54 <line_parser+0x11c>
    a92c:	0f b6 85 7f ff ff ff 	movzx  eax,BYTE PTR [rbp-0x81]
    a933:	83 f0 01             	xor    eax,0x1
    a936:	84 c0                	test   al,al
    a938:	74 1c                	je     a956 <line_parser+0xf1e>
    a93a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a93e:	48 83 c0 20          	add    rax,0x20
    a942:	48 bb 55 6e 74 69 74 	movabs rbx,0x64656c7469746e55
    a949:	6c 65 64 
    a94c:	48 89 18             	mov    QWORD PTR [rax],rbx
    a94f:	c6 40 08 00          	mov    BYTE PTR [rax+0x8],0x0
    a953:	eb 01                	jmp    a956 <line_parser+0xf1e>
    a955:	90                   	nop
    a956:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    a95a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    a961:	00 00 
    a963:	74 05                	je     a96a <line_parser+0xf32>
    a965:	e8 46 7e ff ff       	call   27b0 <__stack_chk_fail@plt>
    a96a:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    a96e:	c9                   	leave  
    a96f:	c3                   	ret    

000000000000a970 <rule_processor>:
    a970:	f3 0f 1e fa          	endbr64 
    a974:	55                   	push   rbp
    a975:	48 89 e5             	mov    rbp,rsp
    a978:	48 83 ec 10          	sub    rsp,0x10
    a97c:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    a983:	eb 22                	jmp    a9a7 <rule_processor+0x37>
    a985:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    a988:	48 98                	cdqe   
    a98a:	48 69 c0 88 03 00 00 	imul   rax,rax,0x388
    a991:	48 8d 15 48 69 00 00 	lea    rdx,[rip+0x6948]        # 112e0 <rules>
    a998:	48 01 d0             	add    rax,rdx
    a99b:	48 89 c7             	mov    rdi,rax
    a99e:	e8 13 00 00 00       	call   a9b6 <process_rule>
    a9a3:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    a9a7:	8b 05 67 66 00 00    	mov    eax,DWORD PTR [rip+0x6667]        # 11014 <num_rules>
    a9ad:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
    a9b0:	7e d3                	jle    a985 <rule_processor+0x15>
    a9b2:	90                   	nop
    a9b3:	90                   	nop
    a9b4:	c9                   	leave  
    a9b5:	c3                   	ret    

000000000000a9b6 <process_rule>:
    a9b6:	f3 0f 1e fa          	endbr64 
    a9ba:	55                   	push   rbp
    a9bb:	48 89 e5             	mov    rbp,rsp
    a9be:	41 57                	push   r15
    a9c0:	41 56                	push   r14
    a9c2:	41 54                	push   r12
    a9c4:	53                   	push   rbx
    a9c5:	48 83 ec 40          	sub    rsp,0x40
    a9c9:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
    a9cd:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    a9d4:	00 00 
    a9d6:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    a9da:	31 c0                	xor    eax,eax
    a9dc:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a9e0:	0f b6 80 90 02 00 00 	movzx  eax,BYTE PTR [rax+0x290]
    a9e7:	83 f0 01             	xor    eax,0x1
    a9ea:	84 c0                	test   al,al
    a9ec:	0f 84 dd 01 00 00    	je     abcf <process_rule+0x219>
    a9f2:	48 89 e0             	mov    rax,rsp
    a9f5:	49 89 c4             	mov    r12,rax
    a9f8:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    a9fc:	48 83 c0 40          	add    rax,0x40
    aa00:	48 89 c7             	mov    rdi,rax
    aa03:	e8 38 7c ff ff       	call   2640 <strlen@plt>
    aa08:	48 83 c0 01          	add    rax,0x1
    aa0c:	48 01 c0             	add    rax,rax
    aa0f:	48 89 c2             	mov    rdx,rax
    aa12:	48 83 ea 01          	sub    rdx,0x1
    aa16:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
    aa1a:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    aa1e:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
    aa25:	00 
    aa26:	49 89 c6             	mov    r14,rax
    aa29:	41 bf 00 00 00 00    	mov    r15d,0x0
    aa2f:	ba 10 00 00 00       	mov    edx,0x10
    aa34:	48 83 ea 01          	sub    rdx,0x1
    aa38:	48 01 d0             	add    rax,rdx
    aa3b:	bb 10 00 00 00       	mov    ebx,0x10
    aa40:	ba 00 00 00 00       	mov    edx,0x0
    aa45:	48 f7 f3             	div    rbx
    aa48:	48 6b c0 10          	imul   rax,rax,0x10
    aa4c:	48 89 c1             	mov    rcx,rax
    aa4f:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    aa56:	48 89 e2             	mov    rdx,rsp
    aa59:	48 29 ca             	sub    rdx,rcx
    aa5c:	48 39 d4             	cmp    rsp,rdx
    aa5f:	74 12                	je     aa73 <process_rule+0xbd>
    aa61:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    aa68:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    aa6f:	00 00 
    aa71:	eb e9                	jmp    aa5c <process_rule+0xa6>
    aa73:	48 89 c2             	mov    rdx,rax
    aa76:	81 e2 ff 0f 00 00    	and    edx,0xfff
    aa7c:	48 29 d4             	sub    rsp,rdx
    aa7f:	48 89 c2             	mov    rdx,rax
    aa82:	81 e2 ff 0f 00 00    	and    edx,0xfff
    aa88:	48 85 d2             	test   rdx,rdx
    aa8b:	74 10                	je     aa9d <process_rule+0xe7>
    aa8d:	25 ff 0f 00 00       	and    eax,0xfff
    aa92:	48 83 e8 08          	sub    rax,0x8
    aa96:	48 01 e0             	add    rax,rsp
    aa99:	48 83 08 00          	or     QWORD PTR [rax],0x0
    aa9d:	48 89 e0             	mov    rax,rsp
    aaa0:	48 83 c0 00          	add    rax,0x0
    aaa4:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aaa8:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    aaaf:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aab3:	48 8d 50 40          	lea    rdx,[rax+0x40]
    aab7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    aabb:	48 05 c8 02 00 00    	add    rax,0x2c8
    aac1:	48 89 d6             	mov    rsi,rdx
    aac4:	48 89 c7             	mov    rdi,rax
    aac7:	e8 24 7d ff ff       	call   27f0 <strcpy@plt>
    aacc:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [rbp-0x3c],0x0
    aad3:	e9 a4 00 00 00       	jmp    ab7c <process_rule+0x1c6>
    aad8:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    aadc:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    aadf:	48 98                	cdqe   
    aae1:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    aae6:	3c 7c                	cmp    al,0x7c
    aae8:	75 18                	jne    ab02 <process_rule+0x14c>
    aaea:	83 7d c0 00          	cmp    DWORD PTR [rbp-0x40],0x0
    aaee:	74 09                	je     aaf9 <process_rule+0x143>
    aaf0:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [rbp-0x40],0x0
    aaf7:	eb 7f                	jmp    ab78 <process_rule+0x1c2>
    aaf9:	c7 45 c0 01 00 00 00 	mov    DWORD PTR [rbp-0x40],0x1
    ab00:	eb 76                	jmp    ab78 <process_rule+0x1c2>
    ab02:	83 7d c0 01          	cmp    DWORD PTR [rbp-0x40],0x1
    ab06:	75 3a                	jne    ab42 <process_rule+0x18c>
    ab08:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ab0c:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab0f:	48 98                	cdqe   
    ab11:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab16:	0f be c0             	movsx  eax,al
    ab19:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    ab1c:	48 63 d2             	movsxd rdx,edx
    ab1f:	48 8d 4a ff          	lea    rcx,[rdx-0x1]
    ab23:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    ab27:	48 01 d1             	add    rcx,rdx
    ab2a:	89 c2                	mov    edx,eax
    ab2c:	48 8d 35 3f 32 00 00 	lea    rsi,[rip+0x323f]        # dd72 <_IO_stdin_used+0x1d72>
    ab33:	48 89 cf             	mov    rdi,rcx
    ab36:	b8 00 00 00 00       	mov    eax,0x0
    ab3b:	e8 40 7b ff ff       	call   2680 <sprintf@plt>
    ab40:	eb 36                	jmp    ab78 <process_rule+0x1c2>
    ab42:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
    ab46:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab49:	48 98                	cdqe   
    ab4b:	0f b6 44 02 40       	movzx  eax,BYTE PTR [rdx+rax*1+0x40]
    ab50:	0f be c0             	movsx  eax,al
    ab53:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
    ab56:	01 d2                	add    edx,edx
    ab58:	48 63 ca             	movsxd rcx,edx
    ab5b:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    ab5f:	48 01 d1             	add    rcx,rdx
    ab62:	89 c2                	mov    edx,eax
    ab64:	48 8d 35 0a 32 00 00 	lea    rsi,[rip+0x320a]        # dd75 <_IO_stdin_used+0x1d75>
    ab6b:	48 89 cf             	mov    rdi,rcx
    ab6e:	b8 00 00 00 00       	mov    eax,0x0
    ab73:	e8 08 7b ff ff       	call   2680 <sprintf@plt>
    ab78:	83 45 c4 01          	add    DWORD PTR [rbp-0x3c],0x1
    ab7c:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    ab7f:	48 63 d8             	movsxd rbx,eax
    ab82:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab86:	48 83 c0 40          	add    rax,0x40
    ab8a:	48 89 c7             	mov    rdi,rax
    ab8d:	e8 ae 7a ff ff       	call   2640 <strlen@plt>
    ab92:	48 39 c3             	cmp    rbx,rax
    ab95:	0f 82 3d ff ff ff    	jb     aad8 <process_rule+0x122>
    ab9b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    ab9f:	48 83 c0 40          	add    rax,0x40
    aba3:	ba ff 00 00 00       	mov    edx,0xff
    aba8:	be 00 00 00 00       	mov    esi,0x0
    abad:	48 89 c7             	mov    rdi,rax
    abb0:	e8 1b 79 ff ff       	call   24d0 <memset@plt>
    abb5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
    abb9:	48 8d 50 40          	lea    rdx,[rax+0x40]
    abbd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    abc1:	48 89 c6             	mov    rsi,rax
    abc4:	48 89 d7             	mov    rdi,rdx
    abc7:	e8 24 7c ff ff       	call   27f0 <strcpy@plt>
    abcc:	4c 89 e4             	mov    rsp,r12
    abcf:	90                   	nop
    abd0:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    abd4:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    abdb:	00 00 
    abdd:	74 05                	je     abe4 <process_rule+0x22e>
    abdf:	e8 cc 7b ff ff       	call   27b0 <__stack_chk_fail@plt>
    abe4:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    abe8:	5b                   	pop    rbx
    abe9:	41 5c                	pop    r12
    abeb:	41 5e                	pop    r14
    abed:	41 5f                	pop    r15
    abef:	5d                   	pop    rbp
    abf0:	c3                   	ret    

000000000000abf1 <d_op_parser>:
    abf1:	f3 0f 1e fa          	endbr64 
    abf5:	55                   	push   rbp
    abf6:	48 89 e5             	mov    rbp,rsp
    abf9:	48 83 ec 20          	sub    rsp,0x20
    abfd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ac01:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ac05:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    ac08:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac0c:	48 89 c7             	mov    rdi,rax
    ac0f:	e8 cb e9 ff ff       	call   95df <isdigit>
    ac14:	84 c0                	test   al,al
    ac16:	74 23                	je     ac3b <d_op_parser+0x4a>
    ac18:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac1c:	c7 40 1c a1 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa1
    ac23:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac27:	48 89 c7             	mov    rdi,rax
    ac2a:	e8 01 7b ff ff       	call   2730 <atoi@plt>
    ac2f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ac33:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ac36:	e9 59 01 00 00       	jmp    ad94 <d_op_parser+0x1a3>
    ac3b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac3f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac42:	0f b6 15 33 31 00 00 	movzx  edx,BYTE PTR [rip+0x3133]        # dd7c <_IO_stdin_used+0x1d7c>
    ac49:	0f b6 c0             	movzx  eax,al
    ac4c:	0f b6 d2             	movzx  edx,dl
    ac4f:	29 d0                	sub    eax,edx
    ac51:	85 c0                	test   eax,eax
    ac53:	75 27                	jne    ac7c <d_op_parser+0x8b>
    ac55:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac59:	c7 40 1c a4 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa4
    ac60:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac64:	48 83 c0 01          	add    rax,0x1
    ac68:	48 89 c7             	mov    rdi,rax
    ac6b:	e8 c0 7a ff ff       	call   2730 <atoi@plt>
    ac70:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ac74:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ac77:	e9 18 01 00 00       	jmp    ad94 <d_op_parser+0x1a3>
    ac7c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ac80:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    ac83:	0f b6 15 f4 30 00 00 	movzx  edx,BYTE PTR [rip+0x30f4]        # dd7e <_IO_stdin_used+0x1d7e>
    ac8a:	0f b6 c0             	movzx  eax,al
    ac8d:	0f b6 d2             	movzx  edx,dl
    ac90:	29 d0                	sub    eax,edx
    ac92:	85 c0                	test   eax,eax
    ac94:	75 27                	jne    acbd <d_op_parser+0xcc>
    ac96:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ac9a:	c7 40 1c a2 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa2
    aca1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    aca5:	48 83 c0 01          	add    rax,0x1
    aca9:	48 89 c7             	mov    rdi,rax
    acac:	e8 7f 7a ff ff       	call   2730 <atoi@plt>
    acb1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    acb5:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    acb8:	e9 d7 00 00 00       	jmp    ad94 <d_op_parser+0x1a3>
    acbd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    acc1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    acc4:	0f b6 15 b5 30 00 00 	movzx  edx,BYTE PTR [rip+0x30b5]        # dd80 <_IO_stdin_used+0x1d80>
    accb:	0f b6 c0             	movzx  eax,al
    acce:	0f b6 d2             	movzx  edx,dl
    acd1:	29 d0                	sub    eax,edx
    acd3:	85 c0                	test   eax,eax
    acd5:	75 27                	jne    acfe <d_op_parser+0x10d>
    acd7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    acdb:	c7 40 1c a6 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa6
    ace2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ace6:	48 83 c0 01          	add    rax,0x1
    acea:	48 89 c7             	mov    rdi,rax
    aced:	e8 3e 7a ff ff       	call   2730 <atoi@plt>
    acf2:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    acf6:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    acf9:	e9 96 00 00 00       	jmp    ad94 <d_op_parser+0x1a3>
    acfe:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad02:	ba 02 00 00 00       	mov    edx,0x2
    ad07:	48 8d 35 74 30 00 00 	lea    rsi,[rip+0x3074]        # dd82 <_IO_stdin_used+0x1d82>
    ad0e:	48 89 c7             	mov    rdi,rax
    ad11:	e8 7a 78 ff ff       	call   2590 <strncmp@plt>
    ad16:	85 c0                	test   eax,eax
    ad18:	75 24                	jne    ad3e <d_op_parser+0x14d>
    ad1a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad1e:	c7 40 1c a3 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa3
    ad25:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad29:	48 83 c0 02          	add    rax,0x2
    ad2d:	48 89 c7             	mov    rdi,rax
    ad30:	e8 fb 79 ff ff       	call   2730 <atoi@plt>
    ad35:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad39:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad3c:	eb 56                	jmp    ad94 <d_op_parser+0x1a3>
    ad3e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad42:	ba 02 00 00 00       	mov    edx,0x2
    ad47:	48 8d 35 37 30 00 00 	lea    rsi,[rip+0x3037]        # dd85 <_IO_stdin_used+0x1d85>
    ad4e:	48 89 c7             	mov    rdi,rax
    ad51:	e8 3a 78 ff ff       	call   2590 <strncmp@plt>
    ad56:	85 c0                	test   eax,eax
    ad58:	75 24                	jne    ad7e <d_op_parser+0x18d>
    ad5a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ad5e:	c7 40 1c a5 00 00 00 	mov    DWORD PTR [rax+0x1c],0xa5
    ad65:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ad69:	48 83 c0 02          	add    rax,0x2
    ad6d:	48 89 c7             	mov    rdi,rax
    ad70:	e8 bb 79 ff ff       	call   2730 <atoi@plt>
    ad75:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    ad79:	89 42 18             	mov    DWORD PTR [rdx+0x18],eax
    ad7c:	eb 16                	jmp    ad94 <d_op_parser+0x1a3>
    ad7e:	48 8d 3d 03 30 00 00 	lea    rdi,[rip+0x3003]        # dd88 <_IO_stdin_used+0x1d88>
    ad85:	e8 96 77 ff ff       	call   2520 <puts@plt>
    ad8a:	bf ff ff ff ff       	mov    edi,0xffffffff
    ad8f:	e8 ac 77 ff ff       	call   2540 <exit@plt>
    ad94:	c9                   	leave  
    ad95:	c3                   	ret    

000000000000ad96 <d_engine>:
    ad96:	f3 0f 1e fa          	endbr64 
    ad9a:	55                   	push   rbp
    ad9b:	48 89 e5             	mov    rbp,rsp
    ad9e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    ada2:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    ada6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adaa:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    adad:	83 f8 ff             	cmp    eax,0xffffffff
    adb0:	75 0a                	jne    adbc <d_engine+0x26>
    adb2:	b8 01 00 00 00       	mov    eax,0x1
    adb7:	e9 ea 00 00 00       	jmp    aea6 <d_engine+0x110>
    adbc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adc0:	8b 40 1c             	mov    eax,DWORD PTR [rax+0x1c]
    adc3:	2d a1 00 00 00       	sub    eax,0xa1
    adc8:	83 f8 05             	cmp    eax,0x5
    adcb:	0f 87 d0 00 00 00    	ja     aea1 <d_engine+0x10b>
    add1:	89 c0                	mov    eax,eax
    add3:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    adda:	00 
    addb:	48 8d 05 be 2f 00 00 	lea    rax,[rip+0x2fbe]        # dda0 <_IO_stdin_used+0x1da0>
    ade2:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    ade5:	48 98                	cdqe   
    ade7:	48 8d 15 b2 2f 00 00 	lea    rdx,[rip+0x2fb2]        # dda0 <_IO_stdin_used+0x1da0>
    adee:	48 01 d0             	add    rax,rdx
    adf1:	3e ff e0             	notrack jmp rax
    adf4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    adf8:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    adfb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    adff:	8b 40 34             	mov    eax,DWORD PTR [rax+0x34]
    ae02:	39 c2                	cmp    edx,eax
    ae04:	0f 85 87 00 00 00    	jne    ae91 <d_engine+0xfb>
    ae0a:	b8 01 00 00 00       	mov    eax,0x1
    ae0f:	e9 92 00 00 00       	jmp    aea6 <d_engine+0x110>
    ae14:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae18:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae1b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae1f:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae22:	39 c2                	cmp    edx,eax
    ae24:	76 6e                	jbe    ae94 <d_engine+0xfe>
    ae26:	b8 01 00 00 00       	mov    eax,0x1
    ae2b:	eb 79                	jmp    aea6 <d_engine+0x110>
    ae2d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae31:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae34:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae38:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae3b:	39 c2                	cmp    edx,eax
    ae3d:	72 58                	jb     ae97 <d_engine+0x101>
    ae3f:	b8 01 00 00 00       	mov    eax,0x1
    ae44:	eb 60                	jmp    aea6 <d_engine+0x110>
    ae46:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae4a:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae4d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae51:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae54:	39 c2                	cmp    edx,eax
    ae56:	73 42                	jae    ae9a <d_engine+0x104>
    ae58:	b8 01 00 00 00       	mov    eax,0x1
    ae5d:	eb 47                	jmp    aea6 <d_engine+0x110>
    ae5f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae63:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae66:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae6a:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae6d:	39 c2                	cmp    edx,eax
    ae6f:	77 2c                	ja     ae9d <d_engine+0x107>
    ae71:	b8 01 00 00 00       	mov    eax,0x1
    ae76:	eb 2e                	jmp    aea6 <d_engine+0x110>
    ae78:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    ae7c:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
    ae7f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    ae83:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
    ae86:	39 c2                	cmp    edx,eax
    ae88:	74 16                	je     aea0 <d_engine+0x10a>
    ae8a:	b8 01 00 00 00       	mov    eax,0x1
    ae8f:	eb 15                	jmp    aea6 <d_engine+0x110>
    ae91:	90                   	nop
    ae92:	eb 0d                	jmp    aea1 <d_engine+0x10b>
    ae94:	90                   	nop
    ae95:	eb 0a                	jmp    aea1 <d_engine+0x10b>
    ae97:	90                   	nop
    ae98:	eb 07                	jmp    aea1 <d_engine+0x10b>
    ae9a:	90                   	nop
    ae9b:	eb 04                	jmp    aea1 <d_engine+0x10b>
    ae9d:	90                   	nop
    ae9e:	eb 01                	jmp    aea1 <d_engine+0x10b>
    aea0:	90                   	nop
    aea1:	b8 00 00 00 00       	mov    eax,0x0
    aea6:	5d                   	pop    rbp
    aea7:	c3                   	ret    

000000000000aea8 <homenet_toi>:
    aea8:	f3 0f 1e fa          	endbr64 
    aeac:	55                   	push   rbp
    aead:	48 89 e5             	mov    rbp,rsp
    aeb0:	53                   	push   rbx
    aeb1:	48 83 ec 38          	sub    rsp,0x38
    aeb5:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    aeb9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    aec0:	00 00 
    aec2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    aec6:	31 c0                	xor    eax,eax
    aec8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    aecc:	48 8d 35 e5 2e 00 00 	lea    rsi,[rip+0x2ee5]        # ddb8 <_IO_stdin_used+0x1db8>
    aed3:	48 89 c7             	mov    rdi,rax
    aed6:	e8 25 79 ff ff       	call   2800 <strtok@plt>
    aedb:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    aedf:	eb 4c                	jmp    af2d <homenet_toi+0x85>
    aee1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    aee5:	48 89 c7             	mov    rdi,rax
    aee8:	e8 43 78 ff ff       	call   2730 <atoi@plt>
    aeed:	89 c3                	mov    ebx,eax
    aeef:	48 8d 45 df          	lea    rax,[rbp-0x21]
    aef3:	48 89 c7             	mov    rdi,rax
    aef6:	e8 45 77 ff ff       	call   2640 <strlen@plt>
    aefb:	48 8d 55 df          	lea    rdx,[rbp-0x21]
    aeff:	48 01 d0             	add    rax,rdx
    af02:	89 da                	mov    edx,ebx
    af04:	48 8d 35 af 2e 00 00 	lea    rsi,[rip+0x2eaf]        # ddba <_IO_stdin_used+0x1dba>
    af0b:	48 89 c7             	mov    rdi,rax
    af0e:	b8 00 00 00 00       	mov    eax,0x0
    af13:	e8 68 77 ff ff       	call   2680 <sprintf@plt>
    af18:	48 8d 35 99 2e 00 00 	lea    rsi,[rip+0x2e99]        # ddb8 <_IO_stdin_used+0x1db8>
    af1f:	bf 00 00 00 00       	mov    edi,0x0
    af24:	e8 d7 78 ff ff       	call   2800 <strtok@plt>
    af29:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    af2d:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
    af32:	75 ad                	jne    aee1 <homenet_toi+0x39>
    af34:	48 8d 45 df          	lea    rax,[rbp-0x21]
    af38:	ba 10 00 00 00       	mov    edx,0x10
    af3d:	be 00 00 00 00       	mov    esi,0x0
    af42:	48 89 c7             	mov    rdi,rax
    af45:	e8 c6 77 ff ff       	call   2710 <strtol@plt>
    af4a:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    af4e:	64 48 2b 0c 25 28 00 	sub    rcx,QWORD PTR fs:0x28
    af55:	00 00 
    af57:	74 05                	je     af5e <homenet_toi+0xb6>
    af59:	e8 52 78 ff ff       	call   27b0 <__stack_chk_fail@plt>
    af5e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    af62:	c9                   	leave  
    af63:	c3                   	ret    

000000000000af64 <tcp_check_sum_passed>:
    af64:	f3 0f 1e fa          	endbr64 
    af68:	55                   	push   rbp
    af69:	48 89 e5             	mov    rbp,rsp
    af6c:	41 54                	push   r12
    af6e:	53                   	push   rbx
    af6f:	48 83 ec 30          	sub    rsp,0x30
    af73:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    af77:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
    af7b:	bb 00 00 00 00       	mov    ebx,0x0
    af80:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    af84:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
    af88:	0f b7 c0             	movzx  eax,ax
    af8b:	89 c7                	mov    edi,eax
    af8d:	e8 fe 76 ff ff       	call   2690 <ntohs@plt>
    af92:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    af96:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
    af99:	83 e2 0f             	and    edx,0xf
    af9c:	0f b6 d2             	movzx  edx,dl
    af9f:	c1 e2 02             	shl    edx,0x2
    afa2:	29 d0                	sub    eax,edx
    afa4:	66 89 45 de          	mov    WORD PTR [rbp-0x22],ax
    afa8:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    afac:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    afb0:	0f b7 c0             	movzx  eax,ax
    afb3:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    afb7:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    afbb:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    afbf:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    afc3:	66 c7 40 10 00 00    	mov    WORD PTR [rax+0x10],0x0
    afc9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    afcd:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    afd0:	c1 e8 10             	shr    eax,0x10
    afd3:	89 c0                	mov    eax,eax
    afd5:	0f b7 c0             	movzx  eax,ax
    afd8:	48 01 c3             	add    rbx,rax
    afdb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    afdf:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
    afe2:	89 c0                	mov    eax,eax
    afe4:	0f b7 c0             	movzx  eax,ax
    afe7:	48 01 c3             	add    rbx,rax
    afea:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    afee:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    aff1:	c1 e8 10             	shr    eax,0x10
    aff4:	89 c0                	mov    eax,eax
    aff6:	0f b7 c0             	movzx  eax,ax
    aff9:	48 01 c3             	add    rbx,rax
    affc:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    b000:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
    b003:	89 c0                	mov    eax,eax
    b005:	0f b7 c0             	movzx  eax,ax
    b008:	48 01 c3             	add    rbx,rax
    b00b:	bf 06 00 00 00       	mov    edi,0x6
    b010:	e8 1b 75 ff ff       	call   2530 <htons@plt>
    b015:	0f b7 c0             	movzx  eax,ax
    b018:	48 01 c3             	add    rbx,rax
    b01b:	0f b7 45 de          	movzx  eax,WORD PTR [rbp-0x22]
    b01f:	89 c7                	mov    edi,eax
    b021:	e8 0a 75 ff ff       	call   2530 <htons@plt>
    b026:	0f b7 c0             	movzx  eax,ax
    b029:	48 01 c3             	add    rbx,rax
    b02c:	eb 1a                	jmp    b048 <tcp_check_sum_passed+0xe4>
    b02e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b032:	48 8d 50 14          	lea    rdx,[rax+0x14]
    b036:	48 89 55 c0          	mov    QWORD PTR [rbp-0x40],rdx
    b03a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b03d:	0f b6 c0             	movzx  eax,al
    b040:	48 01 c3             	add    rbx,rax
    b043:	66 83 6d de 02       	sub    WORD PTR [rbp-0x22],0x2
    b048:	66 83 7d de 01       	cmp    WORD PTR [rbp-0x22],0x1
    b04d:	77 df                	ja     b02e <tcp_check_sum_passed+0xca>
    b04f:	66 83 7d de 00       	cmp    WORD PTR [rbp-0x22],0x0
    b054:	74 1d                	je     b073 <tcp_check_sum_passed+0x10f>
    b056:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b05a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b05d:	0f b6 c0             	movzx  eax,al
    b060:	48 01 c3             	add    rbx,rax
    b063:	eb 0e                	jmp    b073 <tcp_check_sum_passed+0x10f>
    b065:	0f b7 c3             	movzx  eax,bx
    b068:	48 c1 eb 10          	shr    rbx,0x10
    b06c:	48 89 da             	mov    rdx,rbx
    b06f:	48 8d 1c 10          	lea    rbx,[rax+rdx*1]
    b073:	48 89 d8             	mov    rax,rbx
    b076:	48 c1 e8 10          	shr    rax,0x10
    b07a:	48 85 c0             	test   rax,rax
    b07d:	75 e6                	jne    b065 <tcp_check_sum_passed+0x101>
    b07f:	48 f7 d3             	not    rbx
    b082:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b086:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    b08a:	66 89 50 10          	mov    WORD PTR [rax+0x10],dx
    b08e:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    b092:	0f b7 40 10          	movzx  eax,WORD PTR [rax+0x10]
    b096:	0f b7 c0             	movzx  eax,ax
    b099:	89 c7                	mov    edi,eax
    b09b:	e8 f0 75 ff ff       	call   2690 <ntohs@plt>
    b0a0:	44 0f b7 e0          	movzx  r12d,ax
    b0a4:	89 d8                	mov    eax,ebx
    b0a6:	0f b7 c0             	movzx  eax,ax
    b0a9:	89 c7                	mov    edi,eax
    b0ab:	e8 e0 75 ff ff       	call   2690 <ntohs@plt>
    b0b0:	0f b7 c0             	movzx  eax,ax
    b0b3:	44 89 e2             	mov    edx,r12d
    b0b6:	89 c6                	mov    esi,eax
    b0b8:	48 8d 3d 00 2d 00 00 	lea    rdi,[rip+0x2d00]        # ddbf <_IO_stdin_used+0x1dbf>
    b0bf:	b8 00 00 00 00       	mov    eax,0x0
    b0c4:	e8 f7 73 ff ff       	call   24c0 <printf@plt>
    b0c9:	89 d8                	mov    eax,ebx
    b0cb:	0f b7 c0             	movzx  eax,ax
    b0ce:	89 c7                	mov    edi,eax
    b0d0:	e8 bb 75 ff ff       	call   2690 <ntohs@plt>
    b0d5:	89 c3                	mov    ebx,eax
    b0d7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    b0db:	0f b7 c0             	movzx  eax,ax
    b0de:	89 c7                	mov    edi,eax
    b0e0:	e8 ab 75 ff ff       	call   2690 <ntohs@plt>
    b0e5:	66 39 c3             	cmp    bx,ax
    b0e8:	75 07                	jne    b0f1 <tcp_check_sum_passed+0x18d>
    b0ea:	b8 01 00 00 00       	mov    eax,0x1
    b0ef:	eb 05                	jmp    b0f6 <tcp_check_sum_passed+0x192>
    b0f1:	b8 00 00 00 00       	mov    eax,0x0
    b0f6:	48 83 c4 30          	add    rsp,0x30
    b0fa:	5b                   	pop    rbx
    b0fb:	41 5c                	pop    r12
    b0fd:	5d                   	pop    rbp
    b0fe:	c3                   	ret    

000000000000b0ff <run_hello_script>:
    b0ff:	f3 0f 1e fa          	endbr64 
    b103:	55                   	push   rbp
    b104:	48 89 e5             	mov    rbp,rsp
    b107:	48 83 ec 10          	sub    rsp,0x10
    b10b:	e8 70 76 ff ff       	call   2780 <luaL_newstate@plt>
    b110:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b114:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b118:	48 89 c7             	mov    rdi,rax
    b11b:	e8 80 76 ff ff       	call   27a0 <luaL_openlibs@plt>
    b120:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b124:	ba 00 00 00 00       	mov    edx,0x0
    b129:	48 8d 35 a0 2c 00 00 	lea    rsi,[rip+0x2ca0]        # ddd0 <_IO_stdin_used+0x1dd0>
    b130:	48 89 c7             	mov    rdi,rax
    b133:	e8 e8 75 ff ff       	call   2720 <luaL_loadfilex@plt>
    b138:	85 c0                	test   eax,eax
    b13a:	75 2b                	jne    b167 <run_hello_script+0x68>
    b13c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b140:	41 b9 00 00 00 00    	mov    r9d,0x0
    b146:	41 b8 00 00 00 00    	mov    r8d,0x0
    b14c:	b9 00 00 00 00       	mov    ecx,0x0
    b151:	ba ff ff ff ff       	mov    edx,0xffffffff
    b156:	be 00 00 00 00       	mov    esi,0x0
    b15b:	48 89 c7             	mov    rdi,rax
    b15e:	e8 6d 75 ff ff       	call   26d0 <lua_pcallk@plt>
    b163:	85 c0                	test   eax,eax
    b165:	74 07                	je     b16e <run_hello_script+0x6f>
    b167:	b8 01 00 00 00       	mov    eax,0x1
    b16c:	eb 05                	jmp    b173 <run_hello_script+0x74>
    b16e:	b8 00 00 00 00       	mov    eax,0x0
    b173:	85 c0                	test   eax,eax
    b175:	75 1e                	jne    b195 <run_hello_script+0x96>
    b177:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b17b:	48 89 c7             	mov    rdi,rax
    b17e:	e8 ed 75 ff ff       	call   2770 <lua_gettop@plt>
    b183:	f7 d0                	not    eax
    b185:	89 c2                	mov    edx,eax
    b187:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b18b:	89 d6                	mov    esi,edx
    b18d:	48 89 c7             	mov    rdi,rax
    b190:	e8 6b 74 ff ff       	call   2600 <lua_settop@plt>
    b195:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b199:	48 89 c7             	mov    rdi,rax
    b19c:	e8 6f 76 ff ff       	call   2810 <lua_close@plt>
    b1a1:	90                   	nop
    b1a2:	c9                   	leave  
    b1a3:	c3                   	ret    

000000000000b1a4 <collect_scripts>:
    b1a4:	f3 0f 1e fa          	endbr64 
    b1a8:	55                   	push   rbp
    b1a9:	48 89 e5             	mov    rbp,rsp
    b1ac:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b1b3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b1ba:	00 00 
    b1bc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b1c0:	31 c0                	xor    eax,eax
    b1c2:	48 8d 35 25 2c 00 00 	lea    rsi,[rip+0x2c25]        # ddee <_IO_stdin_used+0x1dee>
    b1c9:	48 8d 3d 20 2c 00 00 	lea    rdi,[rip+0x2c20]        # ddf0 <_IO_stdin_used+0x1df0>
    b1d0:	e8 db 73 ff ff       	call   25b0 <fopen@plt>
    b1d5:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    b1d9:	48 83 7d 80 00       	cmp    QWORD PTR [rbp-0x80],0x0
    b1de:	75 16                	jne    b1f6 <collect_scripts+0x52>
    b1e0:	48 8d 3d 21 2c 00 00 	lea    rdi,[rip+0x2c21]        # de08 <_IO_stdin_used+0x1e08>
    b1e7:	e8 34 73 ff ff       	call   2520 <puts@plt>
    b1ec:	bf ff ff ff ff       	mov    edi,0xffffffff
    b1f1:	e8 4a 73 ff ff       	call   2540 <exit@plt>
    b1f6:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
    b1fd:	00 00 00 00 
    b201:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b205:	ba 00 00 00 00       	mov    edx,0x0
    b20a:	48 8d 35 39 2c 00 00 	lea    rsi,[rip+0x2c39]        # de4a <_IO_stdin_used+0x1e4a>
    b211:	48 89 c7             	mov    rdi,rax
    b214:	e8 27 75 ff ff       	call   2740 <regcomp@plt>
    b219:	e9 86 00 00 00       	jmp    b2a4 <collect_scripts+0x100>
    b21e:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b225:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    b228:	3c 23                	cmp    al,0x23
    b22a:	75 02                	jne    b22e <collect_scripts+0x8a>
    b22c:	eb 76                	jmp    b2a4 <collect_scripts+0x100>
    b22e:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b235:	ba 0e 00 00 00       	mov    edx,0xe
    b23a:	48 8d 35 13 2c 00 00 	lea    rsi,[rip+0x2c13]        # de54 <_IO_stdin_used+0x1e54>
    b241:	48 89 c7             	mov    rdi,rax
    b244:	e8 47 73 ff ff       	call   2590 <strncmp@plt>
    b249:	85 c0                	test   eax,eax
    b24b:	75 34                	jne    b281 <collect_scripts+0xdd>
    b24d:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b254:	48 8d 50 0e          	lea    rdx,[rax+0xe]
    b258:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b25c:	48 89 d6             	mov    rsi,rdx
    b25f:	48 89 c7             	mov    rdi,rax
    b262:	e8 89 75 ff ff       	call   27f0 <strcpy@plt>
    b267:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b26b:	48 8d 35 f1 2b 00 00 	lea    rsi,[rip+0x2bf1]        # de63 <_IO_stdin_used+0x1e63>
    b272:	48 89 c7             	mov    rdi,rax
    b275:	e8 d6 75 ff ff       	call   2850 <strcspn@plt>
    b27a:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b27f:	eb 23                	jmp    b2a4 <collect_scripts+0x100>
    b281:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
    b288:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b28c:	41 b8 00 00 00 00    	mov    r8d,0x0
    b292:	b9 00 00 00 00       	mov    ecx,0x0
    b297:	ba 00 00 00 00       	mov    edx,0x0
    b29c:	48 89 c7             	mov    rdi,rax
    b29f:	e8 1c 73 ff ff       	call   25c0 <regexec@plt>
    b2a4:	48 8b 55 80          	mov    rdx,QWORD PTR [rbp-0x80]
    b2a8:	48 8d 8d 70 ff ff ff 	lea    rcx,[rbp-0x90]
    b2af:	48 8d 85 78 ff ff ff 	lea    rax,[rbp-0x88]
    b2b6:	48 89 ce             	mov    rsi,rcx
    b2b9:	48 89 c7             	mov    rdi,rax
    b2bc:	e8 1f 75 ff ff       	call   27e0 <getline@plt>
    b2c1:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b2c5:	48 83 7d 88 ff       	cmp    QWORD PTR [rbp-0x78],0xffffffffffffffff
    b2ca:	0f 85 4e ff ff ff    	jne    b21e <collect_scripts+0x7a>
    b2d0:	90                   	nop
    b2d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b2d5:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b2dc:	00 00 
    b2de:	74 05                	je     b2e5 <collect_scripts+0x141>
    b2e0:	e8 cb 74 ff ff       	call   27b0 <__stack_chk_fail@plt>
    b2e5:	c9                   	leave  
    b2e6:	c3                   	ret    

000000000000b2e7 <ip6decode>:
    b2e7:	f3 0f 1e fa          	endbr64 
    b2eb:	55                   	push   rbp
    b2ec:	48 89 e5             	mov    rbp,rsp
    b2ef:	48 81 ec 90 00 00 00 	sub    rsp,0x90
    b2f6:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    b2fd:	48 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rsi
    b304:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b30b:	00 00 
    b30d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b311:	31 c0                	xor    eax,eax
    b313:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b31a:	48 83 c0 0e          	add    rax,0xe
    b31e:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
    b322:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b326:	48 83 c0 08          	add    rax,0x8
    b32a:	48 89 c7             	mov    rdi,rax
    b32d:	e8 cb 7e ff ff       	call   31fd <inet6_ntoa>
    b332:	48 89 c1             	mov    rcx,rax
    b335:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b339:	ba 29 00 00 00       	mov    edx,0x29
    b33e:	48 89 ce             	mov    rsi,rcx
    b341:	48 89 c7             	mov    rdi,rax
    b344:	e8 f7 74 ff ff       	call   2840 <strncpy@plt>
    b349:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b34d:	48 83 c0 18          	add    rax,0x18
    b351:	48 89 c7             	mov    rdi,rax
    b354:	e8 a4 7e ff ff       	call   31fd <inet6_ntoa>
    b359:	48 89 c1             	mov    rcx,rax
    b35c:	48 8d 45 90          	lea    rax,[rbp-0x70]
    b360:	ba 29 00 00 00       	mov    edx,0x29
    b365:	48 89 ce             	mov    rsi,rcx
    b368:	48 89 c7             	mov    rdi,rax
    b36b:	e8 d0 74 ff ff       	call   2840 <strncpy@plt>
    b370:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b374:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b378:	0f b6 c0             	movzx  eax,al
    b37b:	85 c0                	test   eax,eax
    b37d:	75 1c                	jne    b39b <ip6decode+0xb4>
    b37f:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b383:	48 8d 4d c0          	lea    rcx,[rbp-0x40]
    b387:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
    b38e:	48 89 ce             	mov    rsi,rcx
    b391:	48 89 c7             	mov    rdi,rax
    b394:	e8 ff 86 ff ff       	call   3a98 <ip6_icmp_decode>
    b399:	eb 28                	jmp    b3c3 <ip6decode+0xdc>
    b39b:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
    b39f:	0f b6 40 06          	movzx  eax,BYTE PTR [rax+0x6]
    b3a3:	0f b6 c8             	movzx  ecx,al
    b3a6:	48 8d 55 90          	lea    rdx,[rbp-0x70]
    b3aa:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b3ae:	48 89 c6             	mov    rsi,rax
    b3b1:	48 8d 3d b0 2a 00 00 	lea    rdi,[rip+0x2ab0]        # de68 <_IO_stdin_used+0x1e68>
    b3b8:	b8 00 00 00 00       	mov    eax,0x0
    b3bd:	e8 fe 70 ff ff       	call   24c0 <printf@plt>
    b3c2:	90                   	nop
    b3c3:	90                   	nop
    b3c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b3c8:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b3cf:	00 00 
    b3d1:	74 05                	je     b3d8 <ip6decode+0xf1>
    b3d3:	e8 d8 73 ff ff       	call   27b0 <__stack_chk_fail@plt>
    b3d8:	c9                   	leave  
    b3d9:	c3                   	ret    

000000000000b3da <print_mem_map>:
    b3da:	f3 0f 1e fa          	endbr64 
    b3de:	55                   	push   rbp
    b3df:	48 89 e5             	mov    rbp,rsp
    b3e2:	48 83 ec 10          	sub    rsp,0x10
    b3e6:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b3ed:	eb 4c                	jmp    b43b <print_mem_map+0x61>
    b3ef:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b3f2:	48 63 d0             	movsxd rdx,eax
    b3f5:	48 89 d0             	mov    rax,rdx
    b3f8:	48 c1 e0 02          	shl    rax,0x2
    b3fc:	48 01 d0             	add    rax,rdx
    b3ff:	48 c1 e0 03          	shl    rax,0x3
    b403:	48 8d 15 f6 d3 12 00 	lea    rdx,[rip+0x12d3f6]        # 138800 <fn_mem_map>
    b40a:	48 01 d0             	add    rax,rdx
    b40d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b411:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b415:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b418:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b41c:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b41f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b423:	48 89 c6             	mov    rsi,rax
    b426:	48 8d 3d 63 2a 00 00 	lea    rdi,[rip+0x2a63]        # de90 <_IO_stdin_used+0x1e90>
    b42d:	b8 00 00 00 00       	mov    eax,0x0
    b432:	e8 89 70 ff ff       	call   24c0 <printf@plt>
    b437:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b43b:	8b 05 bf fb 12 00    	mov    eax,DWORD PTR [rip+0x12fbbf]        # 13b000 <fn_num>
    b441:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b444:	7c a9                	jl     b3ef <print_mem_map+0x15>
    b446:	90                   	nop
    b447:	90                   	nop
    b448:	c9                   	leave  
    b449:	c3                   	ret    

000000000000b44a <crash_handler>:
    b44a:	f3 0f 1e fa          	endbr64 
    b44e:	55                   	push   rbp
    b44f:	48 89 e5             	mov    rbp,rsp
    b452:	41 54                	push   r12
    b454:	53                   	push   rbx
    b455:	48 81 ec f0 00 00 00 	sub    rsp,0xf0
    b45c:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
    b462:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b469:	00 00 
    b46b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b46f:	31 c0                	xor    eax,eax
    b471:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b478:	be 14 00 00 00       	mov    esi,0x14
    b47d:	48 89 c7             	mov    rdi,rax
    b480:	e8 6b 70 ff ff       	call   24f0 <backtrace@plt>
    b485:	89 85 18 ff ff ff    	mov    DWORD PTR [rbp-0xe8],eax
    b48b:	8b 95 18 ff ff ff    	mov    edx,DWORD PTR [rbp-0xe8]
    b491:	48 8d 85 30 ff ff ff 	lea    rax,[rbp-0xd0]
    b498:	89 d6                	mov    esi,edx
    b49a:	48 89 c7             	mov    rdi,rax
    b49d:	e8 7e 71 ff ff       	call   2620 <backtrace_symbols@plt>
    b4a2:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
    b4a9:	b8 00 00 00 00       	mov    eax,0x0
    b4ae:	e8 16 7f ff ff       	call   33c9 <get_formated_time>
    b4b3:	48 89 c6             	mov    rsi,rax
    b4b6:	48 8d 3d f3 29 00 00 	lea    rdi,[rip+0x29f3]        # deb0 <_IO_stdin_used+0x1eb0>
    b4bd:	b8 00 00 00 00       	mov    eax,0x0
    b4c2:	e8 f9 6f ff ff       	call   24c0 <printf@plt>
    b4c7:	48 8d 3d 11 2a 00 00 	lea    rdi,[rip+0x2a11]        # dedf <_IO_stdin_used+0x1edf>
    b4ce:	e8 4d 70 ff ff       	call   2520 <puts@plt>
    b4d3:	48 83 bd 20 ff ff ff 	cmp    QWORD PTR [rbp-0xe0],0x0
    b4da:	00 
    b4db:	0f 84 6d 01 00 00    	je     b64e <crash_handler+0x204>
    b4e1:	c7 85 14 ff ff ff 00 	mov    DWORD PTR [rbp-0xec],0x0
    b4e8:	00 00 00 
    b4eb:	e9 4c 01 00 00       	jmp    b63c <crash_handler+0x1f2>
    b4f0:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b4f6:	48 98                	cdqe   
    b4f8:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b4ff:	00 
    b500:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b507:	48 01 d0             	add    rax,rdx
    b50a:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b50d:	48 8d 35 df 29 00 00 	lea    rsi,[rip+0x29df]        # def3 <_IO_stdin_used+0x1ef3>
    b514:	48 89 c7             	mov    rdi,rax
    b517:	e8 c4 71 ff ff       	call   26e0 <strstr@plt>
    b51c:	48 85 c0             	test   rax,rax
    b51f:	0f 85 0f 01 00 00    	jne    b634 <crash_handler+0x1ea>
    b525:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b52b:	48 98                	cdqe   
    b52d:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b534:	00 
    b535:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b53c:	48 01 d0             	add    rax,rdx
    b53f:	4c 8b 20             	mov    r12,QWORD PTR [rax]
    b542:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b548:	48 98                	cdqe   
    b54a:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    b551:	00 
    b552:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b559:	48 01 d0             	add    rax,rdx
    b55c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    b55f:	be 2b 00 00 00       	mov    esi,0x2b
    b564:	48 89 c7             	mov    rdi,rax
    b567:	e8 f8 7f ff ff       	call   3564 <strloc>
    b56c:	48 98                	cdqe   
    b56e:	48 83 c0 01          	add    rax,0x1
    b572:	49 8d 14 04          	lea    rdx,[r12+rax*1]
    b576:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b57a:	48 8d 35 76 29 00 00 	lea    rsi,[rip+0x2976]        # def7 <_IO_stdin_used+0x1ef7>
    b581:	48 89 c7             	mov    rdi,rax
    b584:	b8 00 00 00 00       	mov    eax,0x0
    b589:	e8 f2 70 ff ff       	call   2680 <sprintf@plt>
    b58e:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b592:	be 29 00 00 00       	mov    esi,0x29
    b597:	48 89 c7             	mov    rdi,rax
    b59a:	e8 c5 7f ff ff       	call   3564 <strloc>
    b59f:	48 98                	cdqe   
    b5a1:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
    b5a6:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    b5aa:	ba 10 00 00 00       	mov    edx,0x10
    b5af:	be 00 00 00 00       	mov    esi,0x0
    b5b4:	48 89 c7             	mov    rdi,rax
    b5b7:	e8 54 71 ff ff       	call   2710 <strtol@plt>
    b5bc:	89 85 1c ff ff ff    	mov    DWORD PTR [rbp-0xe4],eax
    b5c2:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b5c8:	89 c7                	mov    edi,eax
    b5ca:	e8 20 01 00 00       	call   b6ef <offset_search>
    b5cf:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
    b5d6:	83 bd 1c ff ff ff 00 	cmp    DWORD PTR [rbp-0xe4],0x0
    b5dd:	74 3a                	je     b619 <crash_handler+0x1cf>
    b5df:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b5e6:	8b 48 24             	mov    ecx,DWORD PTR [rax+0x24]
    b5e9:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b5f0:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    b5f3:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
    b5fa:	8b b5 1c ff ff ff    	mov    esi,DWORD PTR [rbp-0xe4]
    b600:	41 89 f0             	mov    r8d,esi
    b603:	48 89 c6             	mov    rsi,rax
    b606:	48 8d 3d f3 28 00 00 	lea    rdi,[rip+0x28f3]        # df00 <_IO_stdin_used+0x1f00>
    b60d:	b8 00 00 00 00       	mov    eax,0x0
    b612:	e8 a9 6e ff ff       	call   24c0 <printf@plt>
    b617:	eb 1c                	jmp    b635 <crash_handler+0x1eb>
    b619:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [rbp-0xe4]
    b61f:	89 c6                	mov    esi,eax
    b621:	48 8d 3d 10 29 00 00 	lea    rdi,[rip+0x2910]        # df38 <_IO_stdin_used+0x1f38>
    b628:	b8 00 00 00 00       	mov    eax,0x0
    b62d:	e8 8e 6e ff ff       	call   24c0 <printf@plt>
    b632:	eb 01                	jmp    b635 <crash_handler+0x1eb>
    b634:	90                   	nop
    b635:	83 85 14 ff ff ff 01 	add    DWORD PTR [rbp-0xec],0x1
    b63c:	8b 85 14 ff ff ff    	mov    eax,DWORD PTR [rbp-0xec]
    b642:	3b 85 18 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xe8]
    b648:	0f 8c a2 fe ff ff    	jl     b4f0 <crash_handler+0xa6>
    b64e:	48 8b 85 20 ff ff ff 	mov    rax,QWORD PTR [rbp-0xe0]
    b655:	48 89 c7             	mov    rdi,rax
    b658:	e8 d3 6f ff ff       	call   2630 <free@plt>
    b65d:	48 8d 3d fe 28 00 00 	lea    rdi,[rip+0x28fe]        # df62 <_IO_stdin_used+0x1f62>
    b664:	e8 b7 6e ff ff       	call   2520 <puts@plt>
    b669:	89 c6                	mov    esi,eax
    b66b:	48 8d 3d ff 28 00 00 	lea    rdi,[rip+0x28ff]        # df71 <_IO_stdin_used+0x1f71>
    b672:	b8 00 00 00 00       	mov    eax,0x0
    b677:	e8 44 6e ff ff       	call   24c0 <printf@plt>
    b67c:	89 d8                	mov    eax,ebx
    b67e:	89 c6                	mov    esi,eax
    b680:	48 8d 3d fa 28 00 00 	lea    rdi,[rip+0x28fa]        # df81 <_IO_stdin_used+0x1f81>
    b687:	b8 00 00 00 00       	mov    eax,0x0
    b68c:	e8 2f 6e ff ff       	call   24c0 <printf@plt>
    b691:	89 d8                	mov    eax,ebx
    b693:	89 c6                	mov    esi,eax
    b695:	48 8d 3d f5 28 00 00 	lea    rdi,[rip+0x28f5]        # df91 <_IO_stdin_used+0x1f91>
    b69c:	b8 00 00 00 00       	mov    eax,0x0
    b6a1:	e8 1a 6e ff ff       	call   24c0 <printf@plt>
    b6a6:	89 c8                	mov    eax,ecx
    b6a8:	89 c6                	mov    esi,eax
    b6aa:	48 8d 3d f0 28 00 00 	lea    rdi,[rip+0x28f0]        # dfa1 <_IO_stdin_used+0x1fa1>
    b6b1:	b8 00 00 00 00       	mov    eax,0x0
    b6b6:	e8 05 6e ff ff       	call   24c0 <printf@plt>
    b6bb:	89 e0                	mov    eax,esp
    b6bd:	89 c6                	mov    esi,eax
    b6bf:	48 8d 3d eb 28 00 00 	lea    rdi,[rip+0x28eb]        # dfb1 <_IO_stdin_used+0x1fb1>
    b6c6:	b8 00 00 00 00       	mov    eax,0x0
    b6cb:	e8 f0 6d ff ff       	call   24c0 <printf@plt>
    b6d0:	89 e8                	mov    eax,ebp
    b6d2:	89 c6                	mov    esi,eax
    b6d4:	48 8d 3d e6 28 00 00 	lea    rdi,[rip+0x28e6]        # dfc1 <_IO_stdin_used+0x1fc1>
    b6db:	b8 00 00 00 00       	mov    eax,0x0
    b6e0:	e8 db 6d ff ff       	call   24c0 <printf@plt>
    b6e5:	bf 01 00 00 00       	mov    edi,0x1
    b6ea:	e8 51 6e ff ff       	call   2540 <exit@plt>

000000000000b6ef <offset_search>:
    b6ef:	f3 0f 1e fa          	endbr64 
    b6f3:	55                   	push   rbp
    b6f4:	48 89 e5             	mov    rbp,rsp
    b6f7:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    b6fa:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    b701:	eb 44                	jmp    b747 <offset_search+0x58>
    b703:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    b706:	48 63 d0             	movsxd rdx,eax
    b709:	48 89 d0             	mov    rax,rdx
    b70c:	48 c1 e0 02          	shl    rax,0x2
    b710:	48 01 d0             	add    rax,rdx
    b713:	48 c1 e0 03          	shl    rax,0x3
    b717:	48 8d 15 e2 d0 12 00 	lea    rdx,[rip+0x12d0e2]        # 138800 <fn_mem_map>
    b71e:	48 01 d0             	add    rax,rdx
    b721:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b725:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b729:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
    b72c:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b72f:	76 12                	jbe    b743 <offset_search+0x54>
    b731:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b735:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
    b738:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
    b73b:	73 06                	jae    b743 <offset_search+0x54>
    b73d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b741:	eb 14                	jmp    b757 <offset_search+0x68>
    b743:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    b747:	8b 05 b3 f8 12 00    	mov    eax,DWORD PTR [rip+0x12f8b3]        # 13b000 <fn_num>
    b74d:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
    b750:	7c b1                	jl     b703 <offset_search+0x14>
    b752:	b8 00 00 00 00       	mov    eax,0x0
    b757:	5d                   	pop    rbp
    b758:	c3                   	ret    

000000000000b759 <add_fn>:
    b759:	f3 0f 1e fa          	endbr64 
    b75d:	55                   	push   rbp
    b75e:	48 89 e5             	mov    rbp,rsp
    b761:	48 83 ec 20          	sub    rsp,0x20
    b765:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    b769:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
    b76c:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
    b76f:	8b 05 8b f8 12 00    	mov    eax,DWORD PTR [rip+0x12f88b]        # 13b000 <fn_num>
    b775:	8d 50 01             	lea    edx,[rax+0x1]
    b778:	89 15 82 f8 12 00    	mov    DWORD PTR [rip+0x12f882],edx        # 13b000 <fn_num>
    b77e:	48 63 d0             	movsxd rdx,eax
    b781:	48 89 d0             	mov    rax,rdx
    b784:	48 c1 e0 02          	shl    rax,0x2
    b788:	48 01 d0             	add    rax,rdx
    b78b:	48 c1 e0 03          	shl    rax,0x3
    b78f:	48 8d 15 6a d0 12 00 	lea    rdx,[rip+0x12d06a]        # 138800 <fn_mem_map>
    b796:	48 01 d0             	add    rax,rdx
    b799:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    b79d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7a1:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    b7a5:	48 89 d6             	mov    rsi,rdx
    b7a8:	48 89 c7             	mov    rdi,rax
    b7ab:	e8 40 70 ff ff       	call   27f0 <strcpy@plt>
    b7b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7b4:	8b 55 e4             	mov    edx,DWORD PTR [rbp-0x1c]
    b7b7:	89 50 20             	mov    DWORD PTR [rax+0x20],edx
    b7ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    b7be:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
    b7c1:	89 50 24             	mov    DWORD PTR [rax+0x24],edx
    b7c4:	90                   	nop
    b7c5:	c9                   	leave  
    b7c6:	c3                   	ret    

000000000000b7c7 <load_fn_mem_map>:
    b7c7:	f3 0f 1e fa          	endbr64 
    b7cb:	55                   	push   rbp
    b7cc:	48 89 e5             	mov    rbp,rsp
    b7cf:	53                   	push   rbx
    b7d0:	48 83 ec 78          	sub    rsp,0x78
    b7d4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b7db:	00 00 
    b7dd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    b7e1:	31 c0                	xor    eax,eax
    b7e3:	48 8d 35 ee 27 00 00 	lea    rsi,[rip+0x27ee]        # dfd8 <_IO_stdin_used+0x1fd8>
    b7ea:	48 8d 3d e9 27 00 00 	lea    rdi,[rip+0x27e9]        # dfda <_IO_stdin_used+0x1fda>
    b7f1:	e8 ba 6d ff ff       	call   25b0 <fopen@plt>
    b7f6:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
    b7fa:	48 83 7d b0 00       	cmp    QWORD PTR [rbp-0x50],0x0
    b7ff:	75 16                	jne    b817 <load_fn_mem_map+0x50>
    b801:	48 8d 3d f0 27 00 00 	lea    rdi,[rip+0x27f0]        # dff8 <_IO_stdin_used+0x1ff8>
    b808:	e8 13 6d ff ff       	call   2520 <puts@plt>
    b80d:	bf ff ff ff ff       	mov    edi,0xffffffff
    b812:	e8 29 6d ff ff       	call   2540 <exit@plt>
    b817:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
    b81e:	00 
    b81f:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
    b826:	00 
    b827:	e9 db 00 00 00       	jmp    b907 <load_fn_mem_map+0x140>
    b82c:	48 8b 5d 98          	mov    rbx,QWORD PTR [rbp-0x68]
    b830:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b834:	48 8d 35 24 28 00 00 	lea    rsi,[rip+0x2824]        # e05f <_IO_stdin_used+0x205f>
    b83b:	48 89 c7             	mov    rdi,rax
    b83e:	e8 0d 70 ff ff       	call   2850 <strcspn@plt>
    b843:	48 01 d8             	add    rax,rbx
    b846:	c6 00 00             	mov    BYTE PTR [rax],0x0
    b849:	c7 45 94 00 00 00 00 	mov    DWORD PTR [rbp-0x6c],0x0
    b850:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
    b854:	48 8d 35 06 28 00 00 	lea    rsi,[rip+0x2806]        # e061 <_IO_stdin_used+0x2061>
    b85b:	48 89 c7             	mov    rdi,rax
    b85e:	e8 9d 6f ff ff       	call   2800 <strtok@plt>
    b863:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b867:	eb 7f                	jmp    b8e8 <load_fn_mem_map+0x121>
    b869:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b86d:	74 44                	je     b8b3 <load_fn_mem_map+0xec>
    b86f:	83 7d 94 02          	cmp    DWORD PTR [rbp-0x6c],0x2
    b873:	7f 59                	jg     b8ce <load_fn_mem_map+0x107>
    b875:	83 7d 94 00          	cmp    DWORD PTR [rbp-0x6c],0x0
    b879:	74 08                	je     b883 <load_fn_mem_map+0xbc>
    b87b:	83 7d 94 01          	cmp    DWORD PTR [rbp-0x6c],0x1
    b87f:	74 17                	je     b898 <load_fn_mem_map+0xd1>
    b881:	eb 4b                	jmp    b8ce <load_fn_mem_map+0x107>
    b883:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    b887:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b88b:	48 89 d6             	mov    rsi,rdx
    b88e:	48 89 c7             	mov    rdi,rax
    b891:	e8 5a 6f ff ff       	call   27f0 <strcpy@plt>
    b896:	eb 37                	jmp    b8cf <load_fn_mem_map+0x108>
    b898:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b89c:	ba 10 00 00 00       	mov    edx,0x10
    b8a1:	be 00 00 00 00       	mov    esi,0x0
    b8a6:	48 89 c7             	mov    rdi,rax
    b8a9:	e8 62 6e ff ff       	call   2710 <strtol@plt>
    b8ae:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    b8b1:	eb 1c                	jmp    b8cf <load_fn_mem_map+0x108>
    b8b3:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
    b8b7:	ba 10 00 00 00       	mov    edx,0x10
    b8bc:	be 00 00 00 00       	mov    esi,0x0
    b8c1:	48 89 c7             	mov    rdi,rax
    b8c4:	e8 47 6e ff ff       	call   2710 <strtol@plt>
    b8c9:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
    b8cc:	eb 01                	jmp    b8cf <load_fn_mem_map+0x108>
    b8ce:	90                   	nop
    b8cf:	48 8d 35 8b 27 00 00 	lea    rsi,[rip+0x278b]        # e061 <_IO_stdin_used+0x2061>
    b8d6:	bf 00 00 00 00       	mov    edi,0x0
    b8db:	e8 20 6f ff ff       	call   2800 <strtok@plt>
    b8e0:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    b8e4:	83 45 94 01          	add    DWORD PTR [rbp-0x6c],0x1
    b8e8:	48 83 7d a8 00       	cmp    QWORD PTR [rbp-0x58],0x0
    b8ed:	0f 85 76 ff ff ff    	jne    b869 <load_fn_mem_map+0xa2>
    b8f3:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
    b8f6:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    b8f9:	48 8d 45 c0          	lea    rax,[rbp-0x40]
    b8fd:	89 ce                	mov    esi,ecx
    b8ff:	48 89 c7             	mov    rdi,rax
    b902:	e8 52 fe ff ff       	call   b759 <add_fn>
    b907:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
    b90b:	48 8d 4d a0          	lea    rcx,[rbp-0x60]
    b90f:	48 8d 45 98          	lea    rax,[rbp-0x68]
    b913:	48 89 ce             	mov    rsi,rcx
    b916:	48 89 c7             	mov    rdi,rax
    b919:	e8 c2 6e ff ff       	call   27e0 <getline@plt>
    b91e:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
    b922:	48 83 7d b8 ff       	cmp    QWORD PTR [rbp-0x48],0xffffffffffffffff
    b927:	0f 85 ff fe ff ff    	jne    b82c <load_fn_mem_map+0x65>
    b92d:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    b931:	48 89 c7             	mov    rdi,rax
    b934:	e8 f7 6e ff ff       	call   2830 <fclose@plt>
    b939:	90                   	nop
    b93a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    b93e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    b945:	00 00 
    b947:	74 05                	je     b94e <load_fn_mem_map+0x187>
    b949:	e8 62 6e ff ff       	call   27b0 <__stack_chk_fail@plt>
    b94e:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
    b952:	c9                   	leave  
    b953:	c3                   	ret    

000000000000b954 <pps_monitor>:
    b954:	f3 0f 1e fa          	endbr64 
    b958:	55                   	push   rbp
    b959:	48 89 e5             	mov    rbp,rsp
    b95c:	41 57                	push   r15
    b95e:	41 56                	push   r14
    b960:	41 55                	push   r13
    b962:	41 54                	push   r12
    b964:	53                   	push   rbx
    b965:	48 81 ec d8 00 00 00 	sub    rsp,0xd8
    b96c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    b973:	00 00 
    b975:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    b979:	31 c0                	xor    eax,eax
    b97b:	8b 05 9f f6 12 00    	mov    eax,DWORD PTR [rip+0x12f69f]        # 13b020 <current_log_num.2>
    b981:	85 c0                	test   eax,eax
    b983:	0f 85 a6 00 00 00    	jne    ba2f <pps_monitor+0xdb>
    b989:	48 8d 3d d8 26 00 00 	lea    rdi,[rip+0x26d8]        # e068 <_IO_stdin_used+0x2068>
    b990:	e8 8b 6b ff ff       	call   2520 <puts@plt>
    b995:	48 8d 3d ef 26 00 00 	lea    rdi,[rip+0x26ef]        # e08b <_IO_stdin_used+0x208b>
    b99c:	e8 af 6c ff ff       	call   2650 <opendir@plt>
    b9a1:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
    b9a8:	48 83 bd 70 ff ff ff 	cmp    QWORD PTR [rbp-0x90],0x0
    b9af:	00 
    b9b0:	75 27                	jne    b9d9 <pps_monitor+0x85>
    b9b2:	48 8d 3d ee 26 00 00 	lea    rdi,[rip+0x26ee]        # e0a7 <_IO_stdin_used+0x20a7>
    b9b9:	e8 d2 6e ff ff       	call   2890 <perror@plt>
    b9be:	c7 05 58 f6 12 00 00 	mov    DWORD PTR [rip+0x12f658],0x0        # 13b020 <current_log_num.2>
    b9c5:	00 00 00 
    b9c8:	eb 3e                	jmp    ba08 <pps_monitor+0xb4>
    b9ca:	8b 05 50 f6 12 00    	mov    eax,DWORD PTR [rip+0x12f650]        # 13b020 <current_log_num.2>
    b9d0:	83 c0 01             	add    eax,0x1
    b9d3:	89 05 47 f6 12 00    	mov    DWORD PTR [rip+0x12f647],eax        # 13b020 <current_log_num.2>
    b9d9:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
    b9e0:	48 89 c7             	mov    rdi,rax
    b9e3:	e8 88 6c ff ff       	call   2670 <readdir@plt>
    b9e8:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
    b9ef:	48 83 bd 78 ff ff ff 	cmp    QWORD PTR [rbp-0x88],0x0
    b9f6:	00 
    b9f7:	75 d1                	jne    b9ca <pps_monitor+0x76>
    b9f9:	8b 05 21 f6 12 00    	mov    eax,DWORD PTR [rip+0x12f621]        # 13b020 <current_log_num.2>
    b9ff:	83 e8 02             	sub    eax,0x2
    ba02:	89 05 18 f6 12 00    	mov    DWORD PTR [rip+0x12f618],eax        # 13b020 <current_log_num.2>
    ba08:	8b 05 12 f6 12 00    	mov    eax,DWORD PTR [rip+0x12f612]        # 13b020 <current_log_num.2>
    ba0e:	8d 50 01             	lea    edx,[rax+0x1]
    ba11:	89 15 09 f6 12 00    	mov    DWORD PTR [rip+0x12f609],edx        # 13b020 <current_log_num.2>
    ba17:	89 c6                	mov    esi,eax
    ba19:	48 8d 3d 8e 26 00 00 	lea    rdi,[rip+0x268e]        # e0ae <_IO_stdin_used+0x20ae>
    ba20:	b8 00 00 00 00       	mov    eax,0x0
    ba25:	e8 96 6a ff ff       	call   24c0 <printf@plt>
    ba2a:	e9 db 04 00 00       	jmp    bf0a <pps_monitor+0x5b6>
    ba2f:	bf 00 00 00 00       	mov    edi,0x0
    ba34:	e8 b7 6e ff ff       	call   28f0 <time@plt>
    ba39:	48 89 c2             	mov    rdx,rax
    ba3c:	8b 05 e2 f5 12 00    	mov    eax,DWORD PTR [rip+0x12f5e2]        # 13b024 <arr_num.1>
    ba42:	8d 48 01             	lea    ecx,[rax+0x1]
    ba45:	89 0d d9 f5 12 00    	mov    DWORD PTR [rip+0x12f5d9],ecx        # 13b024 <arr_num.1>
    ba4b:	48 89 d1             	mov    rcx,rdx
    ba4e:	89 c0                	mov    eax,eax
    ba50:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    ba57:	00 
    ba58:	48 8d 05 e1 f5 12 00 	lea    rax,[rip+0x12f5e1]        # 13b040 <pkt_times.0>
    ba5f:	48 89 0c 02          	mov    QWORD PTR [rdx+rax*1],rcx
    ba63:	8b 05 bb f5 12 00    	mov    eax,DWORD PTR [rip+0x12f5bb]        # 13b024 <arr_num.1>
    ba69:	3d 00 08 00 00       	cmp    eax,0x800
    ba6e:	0f 85 96 04 00 00    	jne    bf0a <pps_monitor+0x5b6>
    ba74:	c7 85 34 ff ff ff 00 	mov    DWORD PTR [rbp-0xcc],0x0
    ba7b:	00 00 00 
    ba7e:	8b 05 9c f5 12 00    	mov    eax,DWORD PTR [rip+0x12f59c]        # 13b020 <current_log_num.2>
    ba84:	85 c0                	test   eax,eax
    ba86:	0f 85 95 00 00 00    	jne    bb21 <pps_monitor+0x1cd>
    ba8c:	8b 15 8e f5 12 00    	mov    edx,DWORD PTR [rip+0x12f58e]        # 13b020 <current_log_num.2>
    ba92:	48 8d 45 80          	lea    rax,[rbp-0x80]
    ba96:	48 8d 35 2b 26 00 00 	lea    rsi,[rip+0x262b]        # e0c8 <_IO_stdin_used+0x20c8>
    ba9d:	48 89 c7             	mov    rdi,rax
    baa0:	b8 00 00 00 00       	mov    eax,0x0
    baa5:	e8 d6 6b ff ff       	call   2680 <sprintf@plt>
    baaa:	c7 85 30 ff ff ff 00 	mov    DWORD PTR [rbp-0xd0],0x0
    bab1:	00 00 00 
    bab4:	48 8d 45 80          	lea    rax,[rbp-0x80]
    bab8:	48 8d 35 33 26 00 00 	lea    rsi,[rip+0x2633]        # e0f2 <_IO_stdin_used+0x20f2>
    babf:	48 89 c7             	mov    rdi,rax
    bac2:	e8 e9 6a ff ff       	call   25b0 <fopen@plt>
    bac7:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
    bace:	48 83 bd 48 ff ff ff 	cmp    QWORD PTR [rbp-0xb8],0x0
    bad5:	00 
    bad6:	75 1c                	jne    baf4 <pps_monitor+0x1a0>
    bad8:	c7 85 30 ff ff ff 00 	mov    DWORD PTR [rbp-0xd0],0x800
    badf:	08 00 00 
    bae2:	eb 3d                	jmp    bb21 <pps_monitor+0x1cd>
    bae4:	80 bd 23 ff ff ff 0a 	cmp    BYTE PTR [rbp-0xdd],0xa
    baeb:	75 07                	jne    baf4 <pps_monitor+0x1a0>
    baed:	83 85 30 ff ff ff 01 	add    DWORD PTR [rbp-0xd0],0x1
    baf4:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    bafb:	48 89 c7             	mov    rdi,rax
    bafe:	e8 9d 6b ff ff       	call   26a0 <fgetc@plt>
    bb03:	88 85 23 ff ff ff    	mov    BYTE PTR [rbp-0xdd],al
    bb09:	80 bd 23 ff ff ff ff 	cmp    BYTE PTR [rbp-0xdd],0xff
    bb10:	75 d2                	jne    bae4 <pps_monitor+0x190>
    bb12:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
    bb19:	48 89 c7             	mov    rdi,rax
    bb1c:	e8 0f 6d ff ff       	call   2830 <fclose@plt>
    bb21:	81 bd 34 ff ff ff ff 	cmp    DWORD PTR [rbp-0xcc],0x7ff
    bb28:	07 00 00 
    bb2b:	7e 49                	jle    bb76 <pps_monitor+0x222>
    bb2d:	8b 05 ed f4 12 00    	mov    eax,DWORD PTR [rip+0x12f4ed]        # 13b020 <current_log_num.2>
    bb33:	83 c0 01             	add    eax,0x1
    bb36:	89 05 e4 f4 12 00    	mov    DWORD PTR [rip+0x12f4e4],eax        # 13b020 <current_log_num.2>
    bb3c:	8b 15 de f4 12 00    	mov    edx,DWORD PTR [rip+0x12f4de]        # 13b020 <current_log_num.2>
    bb42:	48 8d 45 80          	lea    rax,[rbp-0x80]
    bb46:	48 8d 35 7b 25 00 00 	lea    rsi,[rip+0x257b]        # e0c8 <_IO_stdin_used+0x20c8>
    bb4d:	48 89 c7             	mov    rdi,rax
    bb50:	b8 00 00 00 00       	mov    eax,0x0
    bb55:	e8 26 6b ff ff       	call   2680 <sprintf@plt>
    bb5a:	48 8d 45 80          	lea    rax,[rbp-0x80]
    bb5e:	48 8d 35 8f 25 00 00 	lea    rsi,[rip+0x258f]        # e0f4 <_IO_stdin_used+0x20f4>
    bb65:	48 89 c7             	mov    rdi,rax
    bb68:	e8 43 6a ff ff       	call   25b0 <fopen@plt>
    bb6d:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    bb74:	eb 38                	jmp    bbae <pps_monitor+0x25a>
    bb76:	8b 15 a4 f4 12 00    	mov    edx,DWORD PTR [rip+0x12f4a4]        # 13b020 <current_log_num.2>
    bb7c:	48 8d 45 80          	lea    rax,[rbp-0x80]
    bb80:	48 8d 35 41 25 00 00 	lea    rsi,[rip+0x2541]        # e0c8 <_IO_stdin_used+0x20c8>
    bb87:	48 89 c7             	mov    rdi,rax
    bb8a:	b8 00 00 00 00       	mov    eax,0x0
    bb8f:	e8 ec 6a ff ff       	call   2680 <sprintf@plt>
    bb94:	48 8d 45 80          	lea    rax,[rbp-0x80]
    bb98:	48 8d 35 57 25 00 00 	lea    rsi,[rip+0x2557]        # e0f6 <_IO_stdin_used+0x20f6>
    bb9f:	48 89 c7             	mov    rdi,rax
    bba2:	e8 09 6a ff ff       	call   25b0 <fopen@plt>
    bba7:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
    bbae:	48 8d 45 80          	lea    rax,[rbp-0x80]
    bbb2:	48 89 c6             	mov    rsi,rax
    bbb5:	48 8d 3d 3c 25 00 00 	lea    rdi,[rip+0x253c]        # e0f8 <_IO_stdin_used+0x20f8>
    bbbc:	b8 00 00 00 00       	mov    eax,0x0
    bbc1:	e8 fa 68 ff ff       	call   24c0 <printf@plt>
    bbc6:	8b 15 54 f4 12 00    	mov    edx,DWORD PTR [rip+0x12f454]        # 13b020 <current_log_num.2>
    bbcc:	89 d0                	mov    eax,edx
    bbce:	01 c0                	add    eax,eax
    bbd0:	01 d0                	add    eax,edx
    bbd2:	c1 e0 03             	shl    eax,0x3
    bbd5:	48 89 e2             	mov    rdx,rsp
    bbd8:	48 89 d3             	mov    rbx,rdx
    bbdb:	48 63 d0             	movsxd rdx,eax
    bbde:	48 83 ea 01          	sub    rdx,0x1
    bbe2:	48 89 95 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rdx
    bbe9:	48 63 d0             	movsxd rdx,eax
    bbec:	48 89 95 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rdx
    bbf3:	48 c7 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],0x0
    bbfa:	00 00 00 00 
    bbfe:	48 63 d0             	movsxd rdx,eax
    bc01:	48 89 95 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],rdx
    bc08:	48 c7 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],0x0
    bc0f:	00 00 00 00 
    bc13:	48 98                	cdqe   
    bc15:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bc1c:	00 
    bc1d:	b8 10 00 00 00       	mov    eax,0x10
    bc22:	48 83 e8 01          	sub    rax,0x1
    bc26:	48 01 d0             	add    rax,rdx
    bc29:	be 10 00 00 00       	mov    esi,0x10
    bc2e:	ba 00 00 00 00       	mov    edx,0x0
    bc33:	48 f7 f6             	div    rsi
    bc36:	48 6b c0 10          	imul   rax,rax,0x10
    bc3a:	48 89 c1             	mov    rcx,rax
    bc3d:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    bc44:	48 89 e2             	mov    rdx,rsp
    bc47:	48 29 ca             	sub    rdx,rcx
    bc4a:	48 39 d4             	cmp    rsp,rdx
    bc4d:	74 12                	je     bc61 <pps_monitor+0x30d>
    bc4f:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    bc56:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    bc5d:	00 00 
    bc5f:	eb e9                	jmp    bc4a <pps_monitor+0x2f6>
    bc61:	48 89 c2             	mov    rdx,rax
    bc64:	81 e2 ff 0f 00 00    	and    edx,0xfff
    bc6a:	48 29 d4             	sub    rsp,rdx
    bc6d:	48 89 c2             	mov    rdx,rax
    bc70:	81 e2 ff 0f 00 00    	and    edx,0xfff
    bc76:	48 85 d2             	test   rdx,rdx
    bc79:	74 10                	je     bc8b <pps_monitor+0x337>
    bc7b:	25 ff 0f 00 00       	and    eax,0xfff
    bc80:	48 83 e8 08          	sub    rax,0x8
    bc84:	48 01 e0             	add    rax,rsp
    bc87:	48 83 08 00          	or     QWORD PTR [rax],0x0
    bc8b:	48 89 e0             	mov    rax,rsp
    bc8e:	48 83 c0 07          	add    rax,0x7
    bc92:	48 c1 e8 03          	shr    rax,0x3
    bc96:	48 c1 e0 03          	shl    rax,0x3
    bc9a:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
    bca1:	8b 15 79 f3 12 00    	mov    edx,DWORD PTR [rip+0x12f379]        # 13b020 <current_log_num.2>
    bca7:	89 d0                	mov    eax,edx
    bca9:	01 c0                	add    eax,eax
    bcab:	01 d0                	add    eax,edx
    bcad:	c1 e0 03             	shl    eax,0x3
    bcb0:	48 63 d0             	movsxd rdx,eax
    bcb3:	48 83 ea 01          	sub    rdx,0x1
    bcb7:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
    bcbe:	48 63 d0             	movsxd rdx,eax
    bcc1:	49 89 d6             	mov    r14,rdx
    bcc4:	41 bf 00 00 00 00    	mov    r15d,0x0
    bcca:	48 63 d0             	movsxd rdx,eax
    bccd:	49 89 d4             	mov    r12,rdx
    bcd0:	41 bd 00 00 00 00    	mov    r13d,0x0
    bcd6:	48 98                	cdqe   
    bcd8:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    bcdf:	00 
    bce0:	b8 10 00 00 00       	mov    eax,0x10
    bce5:	48 83 e8 01          	sub    rax,0x1
    bce9:	48 01 d0             	add    rax,rdx
    bcec:	be 10 00 00 00       	mov    esi,0x10
    bcf1:	ba 00 00 00 00       	mov    edx,0x0
    bcf6:	48 f7 f6             	div    rsi
    bcf9:	48 6b c0 10          	imul   rax,rax,0x10
    bcfd:	48 89 c1             	mov    rcx,rax
    bd00:	48 81 e1 00 f0 ff ff 	and    rcx,0xfffffffffffff000
    bd07:	48 89 e2             	mov    rdx,rsp
    bd0a:	48 29 ca             	sub    rdx,rcx
    bd0d:	48 39 d4             	cmp    rsp,rdx
    bd10:	74 12                	je     bd24 <pps_monitor+0x3d0>
    bd12:	48 81 ec 00 10 00 00 	sub    rsp,0x1000
    bd19:	48 83 8c 24 f8 0f 00 	or     QWORD PTR [rsp+0xff8],0x0
    bd20:	00 00 
    bd22:	eb e9                	jmp    bd0d <pps_monitor+0x3b9>
    bd24:	48 89 c2             	mov    rdx,rax
    bd27:	81 e2 ff 0f 00 00    	and    edx,0xfff
    bd2d:	48 29 d4             	sub    rsp,rdx
    bd30:	48 89 c2             	mov    rdx,rax
    bd33:	81 e2 ff 0f 00 00    	and    edx,0xfff
    bd39:	48 85 d2             	test   rdx,rdx
    bd3c:	74 10                	je     bd4e <pps_monitor+0x3fa>
    bd3e:	25 ff 0f 00 00       	and    eax,0xfff
    bd43:	48 83 e8 08          	sub    rax,0x8
    bd47:	48 01 e0             	add    rax,rsp
    bd4a:	48 83 08 00          	or     QWORD PTR [rax],0x0
    bd4e:	48 89 e0             	mov    rax,rsp
    bd51:	48 83 c0 03          	add    rax,0x3
    bd55:	48 c1 e8 02          	shr    rax,0x2
    bd59:	48 c1 e0 02          	shl    rax,0x2
    bd5d:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
    bd64:	c7 85 2c ff ff ff ff 	mov    DWORD PTR [rbp-0xd4],0xffffffff
    bd6b:	ff ff ff 
    bd6e:	48 c7 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],0x0
    bd75:	00 00 00 00 
    bd79:	c7 85 28 ff ff ff 00 	mov    DWORD PTR [rbp-0xd8],0x0
    bd80:	00 00 00 
    bd83:	e9 dd 00 00 00       	jmp    be65 <pps_monitor+0x511>
    bd88:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd8]
    bd8e:	48 98                	cdqe   
    bd90:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bd97:	00 
    bd98:	48 8d 05 a1 f2 12 00 	lea    rax,[rip+0x12f2a1]        # 13b040 <pkt_times.0>
    bd9f:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    bda3:	48 39 85 38 ff ff ff 	cmp    QWORD PTR [rbp-0xc8],rax
    bdaa:	75 2e                	jne    bdda <pps_monitor+0x486>
    bdac:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    bdb3:	8b 95 2c ff ff ff    	mov    edx,DWORD PTR [rbp-0xd4]
    bdb9:	48 63 d2             	movsxd rdx,edx
    bdbc:	8b 04 90             	mov    eax,DWORD PTR [rax+rdx*4]
    bdbf:	8d 48 01             	lea    ecx,[rax+0x1]
    bdc2:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    bdc9:	8b 95 2c ff ff ff    	mov    edx,DWORD PTR [rbp-0xd4]
    bdcf:	48 63 d2             	movsxd rdx,edx
    bdd2:	89 0c 90             	mov    DWORD PTR [rax+rdx*4],ecx
    bdd5:	e9 84 00 00 00       	jmp    be5e <pps_monitor+0x50a>
    bdda:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [rbp-0xd8]
    bde0:	48 98                	cdqe   
    bde2:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    bde9:	00 
    bdea:	48 8d 05 4f f2 12 00 	lea    rax,[rip+0x12f24f]        # 13b040 <pkt_times.0>
    bdf1:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    bdf5:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
    bdfc:	83 85 2c ff ff ff 01 	add    DWORD PTR [rbp-0xd4],0x1
    be03:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    be0a:	8b 95 2c ff ff ff    	mov    edx,DWORD PTR [rbp-0xd4]
    be10:	48 63 d2             	movsxd rdx,edx
    be13:	48 8b 8d 38 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xc8]
    be1a:	48 89 0c d0          	mov    QWORD PTR [rax+rdx*8],rcx
    be1e:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    be25:	8b 95 2c ff ff ff    	mov    edx,DWORD PTR [rbp-0xd4]
    be2b:	48 63 d2             	movsxd rdx,edx
    be2e:	c7 04 90 01 00 00 00 	mov    DWORD PTR [rax+rdx*4],0x1
    be35:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    be3c:	8b 95 2c ff ff ff    	mov    edx,DWORD PTR [rbp-0xd4]
    be42:	48 63 d2             	movsxd rdx,edx
    be45:	8b 04 90             	mov    eax,DWORD PTR [rax+rdx*4]
    be48:	8d 48 01             	lea    ecx,[rax+0x1]
    be4b:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    be52:	8b 95 2c ff ff ff    	mov    edx,DWORD PTR [rbp-0xd4]
    be58:	48 63 d2             	movsxd rdx,edx
    be5b:	89 0c 90             	mov    DWORD PTR [rax+rdx*4],ecx
    be5e:	83 85 28 ff ff ff 01 	add    DWORD PTR [rbp-0xd8],0x1
    be65:	81 bd 28 ff ff ff ff 	cmp    DWORD PTR [rbp-0xd8],0x7ff
    be6c:	07 00 00 
    be6f:	0f 8e 13 ff ff ff    	jle    bd88 <pps_monitor+0x434>
    be75:	c7 85 24 ff ff ff 00 	mov    DWORD PTR [rbp-0xdc],0x0
    be7c:	00 00 00 
    be7f:	eb 49                	jmp    beca <pps_monitor+0x576>
    be81:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
    be88:	8b 95 24 ff ff ff    	mov    edx,DWORD PTR [rbp-0xdc]
    be8e:	48 63 d2             	movsxd rdx,edx
    be91:	8b 0c 90             	mov    ecx,DWORD PTR [rax+rdx*4]
    be94:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
    be9b:	8b 95 24 ff ff ff    	mov    edx,DWORD PTR [rbp-0xdc]
    bea1:	48 63 d2             	movsxd rdx,edx
    bea4:	48 8b 14 d0          	mov    rdx,QWORD PTR [rax+rdx*8]
    bea8:	48 8b 85 40 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc0]
    beaf:	48 8d 35 51 22 00 00 	lea    rsi,[rip+0x2251]        # e107 <_IO_stdin_used+0x2107>
    beb6:	48 89 c7             	mov    rdi,rax
    beb9:	b8 00 00 00 00       	mov    eax,0x0
    bebe:	e8 dd 69 ff ff       	call   28a0 <fprintf@plt>
    bec3:	83 85 24 ff ff ff 01 	add    DWORD PTR [rbp-0xdc],0x1
    beca:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [rbp-0xdc]
    bed0:	3b 85 2c ff ff ff    	cmp    eax,DWORD PTR [rbp-0xd4]
    bed6:	7c a9                	jl     be81 <pps_monitor+0x52d>
    bed8:	ba 00 40 00 00       	mov    edx,0x4000
    bedd:	be 00 00 00 00       	mov    esi,0x0
    bee2:	48 8d 3d 57 f1 12 00 	lea    rdi,[rip+0x12f157]        # 13b040 <pkt_times.0>
    bee9:	e8 e2 65 ff ff       	call   24d0 <memset@plt>
    beee:	c7 05 2c f1 12 00 00 	mov    DWORD PTR [rip+0x12f12c],0x0        # 13b024 <arr_num.1>
    bef5:	00 00 00 
    bef8:	48 8b 85 40 ff ff ff 	mov    rax,QWORD PTR [rbp-0xc0]
    beff:	48 89 c7             	mov    rdi,rax
    bf02:	e8 29 69 ff ff       	call   2830 <fclose@plt>
    bf07:	48 89 dc             	mov    rsp,rbx
    bf0a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    bf0e:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    bf15:	00 00 
    bf17:	74 05                	je     bf1e <pps_monitor+0x5ca>
    bf19:	e8 92 68 ff ff       	call   27b0 <__stack_chk_fail@plt>
    bf1e:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    bf22:	5b                   	pop    rbx
    bf23:	41 5c                	pop    r12
    bf25:	41 5d                	pop    r13
    bf27:	41 5e                	pop    r14
    bf29:	41 5f                	pop    r15
    bf2b:	5d                   	pop    rbp
    bf2c:	c3                   	ret    

Disassembly of section .fini:

000000000000bf30 <_fini>:
    bf30:	f3 0f 1e fa          	endbr64 
    bf34:	48 83 ec 08          	sub    rsp,0x8
    bf38:	48 83 c4 08          	add    rsp,0x8
    bf3c:	c3                   	ret    

Disassembly of section .rodata:

000000000000c000 <_IO_stdin_used>:
    c000:	01 00                	add    DWORD PTR [rax],eax
    c002:	02 00                	add    al,BYTE PTR [rax]
    c004:	2f                   	(bad)  
    c005:	65 74 63             	gs je  c06b <_IO_stdin_used+0x6b>
    c008:	2f                   	(bad)  
    c009:	76 69                	jbe    c074 <_IO_stdin_used+0x74>
    c00b:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    c012:	69 6c 
    c014:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c018:	66 00 2f             	data16 add BYTE PTR [rdi],ch
    c01b:	76 61                	jbe    c07e <_IO_stdin_used+0x7e>
    c01d:	72 2f                	jb     c04e <_IO_stdin_used+0x4e>
    c01f:	6c                   	ins    BYTE PTR es:[rdi],dx
    c020:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c021:	67 2f                	addr32 (bad) 
    c023:	76 69                	jbe    c08e <_IO_stdin_used+0x8e>
    c025:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c02c:	6c 6f 
    c02e:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c031:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c032:	67 00 2f             	add    BYTE PTR [edi],ch
    c035:	65 74 63             	gs je  c09b <_IO_stdin_used+0x9b>
    c038:	2f                   	(bad)  
    c039:	76 69                	jbe    c0a4 <_IO_stdin_used+0xa4>
    c03b:	67 69 6c 2f 68 6f 73 	imul   ebp,DWORD PTR [edi+ebp*1+0x68],0x7374736f
    c042:	74 73 
    c044:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    c048:	66 00 00             	data16 add BYTE PTR [rax],al
    c04b:	00 00                	add    BYTE PTR [rax],al
    c04d:	00 00                	add    BYTE PTR [rax],al
    c04f:	00 1b                	add    BYTE PTR [rbx],bl
    c051:	5b                   	pop    rbx
    c052:	39 30                	cmp    DWORD PTR [rax],esi
    c054:	6d                   	ins    DWORD PTR es:[rdi],dx
    c055:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c05a:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c05f:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c064:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c069:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c06e:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c073:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c078:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c07d:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c082:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c087:	2d 3d 2d 3d 2d       	sub    eax,0x2d3d2d3d
    c08c:	3d 2d 3d 2d 3d       	cmp    eax,0x3d2d3d2d
    c091:	2d 1b 5b 6d 00       	sub    eax,0x6d5b1b
    c096:	00 00                	add    BYTE PTR [rax],al
    c098:	42                   	rex.X
    c099:	41                   	rex.B
    c09a:	44 2d 54 52 41 46    	rex.R sub eax,0x46415254
    c0a0:	46                   	rex.RX
    c0a1:	49                   	rex.WB
    c0a2:	43 20 55 6e          	rex.XB and BYTE PTR [r13+0x6e],dl
    c0a6:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c0aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c0ab:	20 45 74             	and    BYTE PTR [rbp+0x74],al
    c0ae:	68 65 72 6e 74       	push   0x746e7265
    c0b3:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c0b6:	61                   	(bad)  
    c0b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0b8:	65 20 50 72          	and    BYTE PTR gs:[rax+0x72],dl
    c0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0bd:	74 6f                	je     c12e <_IO_stdin_used+0x12e>
    c0bf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c0c2:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c0c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0c6:	62                   	(bad)  
    c0c7:	65 72 00             	gs jb  c0ca <_IO_stdin_used+0xca>
    c0ca:	2f                   	(bad)  
    c0cb:	76 61                	jbe    c12e <_IO_stdin_used+0x12e>
    c0cd:	72 2f                	jb     c0fe <_IO_stdin_used+0xfe>
    c0cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c0d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0d1:	67 2f                	addr32 (bad) 
    c0d3:	76 69                	jbe    c13e <_IO_stdin_used+0x13e>
    c0d5:	67 69 6c 2f 73 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x6f6c6769
    c0dc:	6c 6f 
    c0de:	67 2e 6c             	cs ins BYTE PTR es:[edi],dx
    c0e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c0e2:	67 00 00             	add    BYTE PTR [eax],al
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 1b                	add    BYTE PTR [rbx],bl
    c0e9:	5b                   	pop    rbx
    c0ea:	33 3b                	xor    edi,DWORD PTR [rbx]
    c0ec:	33 33                	xor    esi,DWORD PTR [rbx]
    c0ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    c0ef:	00 25 73 00 30 2e    	add    BYTE PTR [rip+0x2e300073],ah        # 2e30c168 <_end+0x2e1cd128>
    c0f5:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f7:	30 2e                	xor    BYTE PTR [rsi],ch
    c0f9:	30 00                	xor    BYTE PTR [rax],al
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	00 00                	add    BYTE PTR [rax],al
    c0ff:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c102:	4f 54                	rex.WRXB push r12
    c104:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c108:	50                   	push   rax
    c109:	3a 20                	cmp    ah,BYTE PTR [rax]
    c10b:	50                   	push   rax
    c10c:	52                   	push   rdx
    c10d:	4f                   	rex.WRXB
    c10e:	42                   	rex.X
    c10f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    c112:	57                   	push   rdi
    c113:	68 6f 20 68 61       	push   0x6168206f
    c118:	73 20                	jae    c13a <_IO_stdin_used+0x13a>
    c11a:	25 73 3f 0a 00       	and    eax,0xa3f73
    c11f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c122:	4f 54                	rex.WRXB push r12
    c124:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c128:	50                   	push   rax
    c129:	3a 20                	cmp    ah,BYTE PTR [rax]
    c12b:	57                   	push   rdi
    c12c:	68 6f 20 69 73       	push   0x7369206f
    c131:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c134:	20 25 73 3f 20 54    	and    BYTE PTR [rip+0x54203f73],ah        # 542100ad <_end+0x540d106d>
    c13a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    c13c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c13d:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cbb6 <_IO_stdin_used+0xbb6>
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	00 00                	add    BYTE PTR [rax],al
    c147:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    c14a:	4f 54                	rex.WRXB push r12
    c14c:	4f 20 41 52          	rex.WRXB and BYTE PTR [r9+0x52],r8b
    c150:	50                   	push   rax
    c151:	3a 20                	cmp    ah,BYTE PTR [rax]
    c153:	52                   	push   rdx
    c154:	45 50                	rex.RB push r8
    c156:	4c 59                	rex.WR pop rcx
    c158:	3a 20                	cmp    ah,BYTE PTR [rax]
    c15a:	25 73 20 69 73       	and    eax,0x73692073
    c15f:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    c162:	20 25 73 0a 00 55    	and    BYTE PTR [rip+0x55000a73],ah        # 5500cbdb <_end+0x54ecdb9b>
    c168:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c169:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c16d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c16e:	20 41 52             	and    BYTE PTR [rcx+0x52],al
    c171:	50                   	push   rax
    c172:	20 6f 70             	and    BYTE PTR [rdi+0x70],ch
    c175:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    c178:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    c17b:	25 64 0a 00 1b       	and    eax,0x1b000a64
    c180:	5b                   	pop    rbx
    c181:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c184:	4c                   	rex.WR
    c185:	4f                   	rex.WRXB
    c186:	4f 50                	rex.WRXB push r8
    c188:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de201 <_end+0x3e19f1c1>
    c18e:	20 25 73 00 20 52    	and    BYTE PTR [rip+0x52200073],ah        # 5220c207 <_end+0x520cd1c7>
    c194:	45 50                	rex.RB push r8
    c196:	4c 59                	rex.WR pop rcx
    c198:	20 00                	and    BYTE PTR [rax],al
    c19a:	20 55 4e             	and    BYTE PTR [rbp+0x4e],dl
    c19d:	4b                   	rex.WXB
    c19e:	4e                   	rex.WRX
    c19f:	4f 57                	rex.WRXB push r15
    c1a1:	4e 20 4c 4f 4f       	rex.WRX and BYTE PTR [rdi+r9*2+0x4f],r9b
    c1a6:	50                   	push   rax
    c1a7:	20 46 55             	and    BYTE PTR [rsi+0x55],al
    c1aa:	4e                   	rex.WRX
    c1ab:	43 54                	rex.XB push r12
    c1ad:	49                   	rex.WB
    c1ae:	4f                   	rex.WRXB
    c1af:	4e 3a 25 64 20 0a 00 	rex.WRX cmp r12b,BYTE PTR [rip+0xa2064]        # ae21a <rules+0x9cf3a>
    c1b6:	00 00                	add    BYTE PTR [rax],al
    c1b8:	25 30 32 78 3a       	and    eax,0x3a783230
    c1bd:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c2:	25 30 32 78 3a       	and    eax,0x3a783230
    c1c7:	25 30 32 78 3a       	and    eax,0x3a783230
    c1cc:	25 30 32 78 3a       	and    eax,0x3a783230
    c1d1:	25 30 32 78 00       	and    eax,0x783230
    c1d6:	25 64 2e 25 64       	and    eax,0x64252e64
    c1db:	2e 25 64 2e 25 64    	cs and eax,0x64252e64
    c1e1:	00 00                	add    BYTE PTR [rax],al
    c1e3:	00 00                	add    BYTE PTR [rax],al
    c1e5:	00 00                	add    BYTE PTR [rax],al
    c1e7:	00 25 30 32 78 25    	add    BYTE PTR [rip+0x25783230],ah        # 2578f41d <_end+0x256503dd>
    c1ed:	30 32                	xor    BYTE PTR [rdx],dh
    c1ef:	78 3a                	js     c22b <_IO_stdin_used+0x22b>
    c1f1:	25 30 32 78 25       	and    eax,0x25783230
    c1f6:	30 32                	xor    BYTE PTR [rdx],dh
    c1f8:	78 3a                	js     c234 <_IO_stdin_used+0x234>
    c1fa:	25 30 32 78 25       	and    eax,0x25783230
    c1ff:	30 32                	xor    BYTE PTR [rdx],dh
    c201:	78 3a                	js     c23d <_IO_stdin_used+0x23d>
    c203:	25 30 32 78 25       	and    eax,0x25783230
    c208:	30 32                	xor    BYTE PTR [rdx],dh
    c20a:	78 3a                	js     c246 <_IO_stdin_used+0x246>
    c20c:	25 30 32 78 25       	and    eax,0x25783230
    c211:	30 32                	xor    BYTE PTR [rdx],dh
    c213:	78 3a                	js     c24f <_IO_stdin_used+0x24f>
    c215:	25 30 32 78 25       	and    eax,0x25783230
    c21a:	30 32                	xor    BYTE PTR [rdx],dh
    c21c:	78 3a                	js     c258 <_IO_stdin_used+0x258>
    c21e:	25 30 32 78 25       	and    eax,0x25783230
    c223:	30 32                	xor    BYTE PTR [rdx],dh
    c225:	78 3a                	js     c261 <_IO_stdin_used+0x261>
    c227:	25 30 32 78 25       	and    eax,0x25783230
    c22c:	30 32                	xor    BYTE PTR [rdx],dh
    c22e:	78 00                	js     c230 <_IO_stdin_used+0x230>
    c230:	25 64 2d 25 30       	and    eax,0x30252d64
    c235:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    c239:	30 32                	xor    BYTE PTR [rdx],dh
    c23b:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64f472 <_end+0x3a510432>
    c242:	25 30 32 64 3a       	and    eax,0x3a643230
    c247:	25 30 32 64 00       	and    eax,0x643230
    c24c:	25 73 3a 20 25       	and    eax,0x25203a73
    c251:	73 0a                	jae    c25d <_IO_stdin_used+0x25d>
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 00                	add    BYTE PTR [rax],al
    c257:	00 25 73 20 46 6f    	add    BYTE PTR [rip+0x6f462073],ah        # 6f46e2d0 <_end+0x6f32f290>
    c25d:	75 6e                	jne    c2cd <_IO_stdin_used+0x2cd>
    c25f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c263:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c264:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c267:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c26b:	76 34                	jbe    c2a1 <_IO_stdin_used+0x2a1>
    c26d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c270:	64 72 65             	fs jb  c2d8 <_IO_stdin_used+0x2d8>
    c273:	73 73                	jae    c2e8 <_IO_stdin_used+0x2e8>
    c275:	28 64 65 73          	sub    BYTE PTR [rbp+riz*2+0x73],ah
    c279:	74 29                	je     c2a4 <_IO_stdin_used+0x2a4>
    c27b:	3a 20                	cmp    ah,BYTE PTR [rax]
    c27d:	25 73 0a 00 00       	and    eax,0xa73
    c282:	00 00                	add    BYTE PTR [rax],al
    c284:	00 00                	add    BYTE PTR [rax],al
    c286:	00 00                	add    BYTE PTR [rax],al
    c288:	25 73 20 46 6f       	and    eax,0x6f462073
    c28d:	75 6e                	jne    c2fd <_IO_stdin_used+0x2fd>
    c28f:	64 20 62 6c          	and    BYTE PTR fs:[rdx+0x6c],ah
    c293:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c294:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c297:	64 20 69 70          	and    BYTE PTR fs:[rcx+0x70],ch
    c29b:	76 34                	jbe    c2d1 <_IO_stdin_used+0x2d1>
    c29d:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
    c2a0:	64 72 65             	fs jb  c308 <_IO_stdin_used+0x308>
    c2a3:	73 73                	jae    c318 <_IO_stdin_used+0x318>
    c2a5:	28 73 72             	sub    BYTE PTR [rbx+0x72],dh
    c2a8:	63 29                	movsxd ebp,DWORD PTR [rcx]
    c2aa:	3a 20                	cmp    ah,BYTE PTR [rax]
    c2ac:	25 73 0a 00 1b       	and    eax,0x1b000a73
    c2b1:	5b                   	pop    rbx
    c2b2:	34 6d                	xor    al,0x6d
    c2b4:	00 25 73 46 72 61    	add    BYTE PTR [rip+0x61724673],ah        # 6173092d <_end+0x615f18ed>
    c2ba:	67 6d                	ins    DWORD PTR es:[edi],dx
    c2bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c2be:	74 65                	je     c325 <_IO_stdin_used+0x325>
    c2c0:	64 20 00             	and    BYTE PTR fs:[rax],al
    c2c3:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    c2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2c7:	00 25 73 00 20 25    	add    BYTE PTR [rip+0x25200073],ah        # 2520c340 <_end+0x250cd300>
    c2cd:	73 20                	jae    c2ef <_IO_stdin_used+0x2ef>
    c2cf:	2d 3e 20 25 73       	sub    eax,0x7325203e
    c2d4:	25 73 0a 00 49       	and    eax,0x49000a73
    c2d9:	50                   	push   rax
    c2da:	76 34                	jbe    c310 <_IO_stdin_used+0x310>
    c2dc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de355 <_end+0x3e19f315>
    c2e2:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250e35b <_end+0x723cf31b>
    c2e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c2e9:	74 6f                	je     c35a <_IO_stdin_used+0x35a>
    c2eb:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c2ee:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    c2f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    c2f2:	62                   	(bad)  
    c2f3:	65 72 20             	gs jb  c316 <_IO_stdin_used+0x316>
    c2f6:	3d 20 25 64 0a       	cmp    eax,0xa642520
    c2fb:	00 00                	add    BYTE PTR [rax],al
    c2fd:	00 00                	add    BYTE PTR [rax],al
    c2ff:	00 1b                	add    BYTE PTR [rbx],bl
    c301:	5b                   	pop    rbx
    c302:	33 35 6d 00 25 73    	xor    esi,DWORD PTR [rip+0x7325006d]        # 7325c375 <_end+0x7311d335>
    c308:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    c30b:	76 36                	jbe    c343 <_IO_stdin_used+0x343>
    c30d:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de386 <_end+0x3e19f346>
    c313:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cd8c <_end+0x8ecdd4c>
    c319:	49                   	rex.WB
    c31a:	43                   	rex.XB
    c31b:	4d 50                	rex.WRB push r8
    c31d:	76 36                	jbe    c355 <_IO_stdin_used+0x355>
    c31f:	20 00                	and    BYTE PTR [rax],al
    c321:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c324:	75 74                	jne    c39a <_IO_stdin_used+0x39a>
    c326:	65 72 20             	gs jb  c349 <_IO_stdin_used+0x349>
    c329:	53                   	push   rbx
    c32a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c32b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c32c:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c334:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c335:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    c338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c339:	6d                   	ins    DWORD PTR es:[rdi],dx
    c33a:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # cdb3 <_IO_stdin_used+0xdb3>
    c340:	4d 75 6c             	rex.WRB jne c3af <_IO_stdin_used+0x3af>
    c343:	74 69                	je     c3ae <_IO_stdin_used+0x3ae>
    c345:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c348:	74 20                	je     c36a <_IO_stdin_used+0x36a>
    c34a:	4c 69 73 74 65 6e 65 	imul   r14,QWORD PTR [rbx+0x74],0x72656e65
    c351:	72 
    c352:	20 52 65             	and    BYTE PTR [rdx+0x65],dl
    c355:	70 6f                	jo     c3c6 <_IO_stdin_used+0x3c6>
    c357:	72 74                	jb     c3cd <_IO_stdin_used+0x3cd>
    c359:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    c35c:	73 73                	jae    c3d1 <_IO_stdin_used+0x3d1>
    c35e:	61                   	(bad)  
    c35f:	67 65 20 76 32       	and    BYTE PTR gs:[esi+0x32],dh
    c364:	00 4d 75             	add    BYTE PTR [rbp+0x75],cl
    c367:	6c                   	ins    BYTE PTR es:[rdi],dx
    c368:	74 69                	je     c3d3 <_IO_stdin_used+0x3d3>
    c36a:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    c36d:	74 20                	je     c38f <_IO_stdin_used+0x38f>
    c36f:	20 4c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],cl
    c373:	74 65                	je     c3da <_IO_stdin_used+0x3da>
    c375:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c376:	65 72 20             	gs jb  c399 <_IO_stdin_used+0x399>
    c379:	51                   	push   rcx
    c37a:	75 65                	jne    c3e1 <_IO_stdin_used+0x3e1>
    c37c:	72 79                	jb     c3f7 <_IO_stdin_used+0x3f7>
    c37e:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    c381:	69 67 68 62 6f 72 20 	imul   esp,DWORD PTR [rdi+0x68],0x20726f62
    c388:	53                   	push   rbx
    c389:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c38a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38b:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c392:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c394:	00 1b                	add    BYTE PTR [rbx],bl
    c396:	5b                   	pop    rbx
    c397:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c39a:	00 00                	add    BYTE PTR [rax],al
    c39c:	00 00                	add    BYTE PTR [rax],al
    c39e:	00 00                	add    BYTE PTR [rax],al
    c3a0:	54                   	push   rsp
    c3a1:	69 6d 65 20 73 74 61 	imul   ebp,DWORD PTR [rbp+0x65],0x61747320
    c3a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3a9:	70 20                	jo     c3cb <_IO_stdin_used+0x3cb>
    c3ab:	72 65                	jb     c412 <_IO_stdin_used+0x412>
    c3ad:	71 75                	jno    c424 <_IO_stdin_used+0x424>
    c3af:	65 73 74             	gs jae c426 <_IO_stdin_used+0x426>
    c3b2:	3a 20                	cmp    ah,BYTE PTR [rax]
    c3b4:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c3b9:	20 25 73 28 63 6f    	and    BYTE PTR [rip+0x6f632873],ah        # 6f63ec32 <_end+0x6f4ffbf2>
    c3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3c0:	66 69 67 20 73 70    	imul   sp,WORD PTR [rdi+0x20],0x7073
    c3c6:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    c3ca:	69 65 73 20 73 74 72 	imul   esp,DWORD PTR [rbp+0x73],0x72747320
    c3d1:	69 63 74 20 74 69 6d 	imul   esp,DWORD PTR [rbx+0x74],0x6d697420
    c3d8:	65 73 74             	gs jae c44f <_IO_stdin_used+0x44f>
    c3db:	61                   	(bad)  
    c3dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c3dd:	70 20                	jo     c3ff <_IO_stdin_used+0x3ff>
    c3df:	61                   	(bad)  
    c3e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3e1:	65 72 74             	gs jb  c458 <_IO_stdin_used+0x458>
    c3e4:	73 29                	jae    c40f <_IO_stdin_used+0x40f>
    c3e6:	0a 00                	or     al,BYTE PTR [rax]
    c3e8:	50                   	push   rax
    c3e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c3ea:	73 73                	jae    c45f <_IO_stdin_used+0x45f>
    c3ec:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c3f3:	61                   	(bad)  
    c3f4:	70 20                	jo     c416 <_IO_stdin_used+0x416>
    c3f6:	68 6f 73 74 20       	push   0x2074736f
    c3fb:	61                   	(bad)  
    c3fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3fd:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c404:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c407:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c40c:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20ff85 <_end+0x6d0d0f45>
    c412:	61                   	(bad)  
    c413:	74 63                	je     c478 <_IO_stdin_used+0x478>
    c415:	68 65 64 20 49       	push   0x49206465
    c41a:	43                   	rex.XB
    c41b:	4d 50                	rex.WRB push r8
    c41d:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c420:	68 6f 2c 20 54       	push   0x54202c6f
    c425:	43 50                	rex.XB push r8
    c427:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c42a:	4e 2c 20             	rex.WRX sub al,0x20
    c42d:	54                   	push   rsp
    c42e:	43 50                	rex.XB push r8
    c430:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c433:	4b 2c 20             	rex.WXB sub al,0x20
    c436:	61                   	(bad)  
    c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c438:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c43c:	4d 50                	rex.WRB push r8
    c43e:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c442:	65 73 74             	gs jae c4b9 <_IO_stdin_used+0x4b9>
    c445:	61                   	(bad)  
    c446:	6d                   	ins    DWORD PTR es:[rdi],dx
    c447:	70 20                	jo     c469 <_IO_stdin_used+0x469>
    c449:	72 65                	jb     c4b0 <_IO_stdin_used+0x4b0>
    c44b:	71 75                	jno    c4c2 <_IO_stdin_used+0x4c2>
    c44d:	65 73 74             	gs jae c4c4 <_IO_stdin_used+0x4c4>
    c450:	0a 00                	or     al,BYTE PTR [rax]
    c452:	61                   	(bad)  
    c453:	00 00                	add    BYTE PTR [rax],al
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    c45a:	73 73                	jae    c4cf <_IO_stdin_used+0x4cf>
    c45c:	69 62 6c 65 20 6e 6d 	imul   esp,DWORD PTR [rdx+0x6c],0x6d6e2065
    c463:	61                   	(bad)  
    c464:	70 20                	jo     c486 <_IO_stdin_used+0x486>
    c466:	68 6f 73 74 20       	push   0x2074736f
    c46b:	61                   	(bad)  
    c46c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c46d:	69 76 65 20 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x65686320
    c474:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    c477:	25 73 20 2d 3e       	and    eax,0x3e2d2073
    c47c:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461e4f5 <_end+0x744df4b5>
    c482:	20 25 73 3b 20 6d    	and    BYTE PTR [rip+0x6d203b73],ah        # 6d20fffb <_end+0x6d0d0fbb>
    c488:	61                   	(bad)  
    c489:	74 63                	je     c4ee <_IO_stdin_used+0x4ee>
    c48b:	68 65 64 20 49       	push   0x49206465
    c490:	43                   	rex.XB
    c491:	4d 50                	rex.WRB push r8
    c493:	20 45 63             	and    BYTE PTR [rbp+0x63],al
    c496:	68 6f 2c 20 54       	push   0x54202c6f
    c49b:	43 50                	rex.XB push r8
    c49d:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c4a0:	4e 2c 20             	rex.WRX sub al,0x20
    c4a3:	54                   	push   rsp
    c4a4:	43 50                	rex.XB push r8
    c4a6:	20 41 43             	and    BYTE PTR [rcx+0x43],al
    c4a9:	4b 2c 20             	rex.WXB sub al,0x20
    c4ac:	61                   	(bad)  
    c4ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4ae:	64 20 49 43          	and    BYTE PTR fs:[rcx+0x43],cl
    c4b2:	4d 50                	rex.WRB push r8
    c4b4:	20 54 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dl
    c4b8:	65 73 74             	gs jae c52f <_IO_stdin_used+0x52f>
    c4bb:	61                   	(bad)  
    c4bc:	6d                   	ins    DWORD PTR es:[rdi],dx
    c4bd:	70 20                	jo     c4df <_IO_stdin_used+0x4df>
    c4bf:	72 65                	jb     c526 <_IO_stdin_used+0x526>
    c4c1:	71 75                	jno    c538 <_IO_stdin_used+0x538>
    c4c3:	65 73 74             	gs jae c53a <_IO_stdin_used+0x53a>
    c4c6:	0a 00                	or     al,BYTE PTR [rax]
    c4c8:	49 50                	rex.WB push r8
    c4ca:	76 34                	jbe    c500 <_IO_stdin_used+0x500>
    c4cc:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2de545 <_end+0x3e19f505>
    c4d2:	20 25 73 0a 00 09    	and    BYTE PTR [rip+0x9000a73],ah        # 900cf4b <_end+0x8ecdf0b>
    c4d8:	49                   	rex.WB
    c4d9:	43                   	rex.XB
    c4da:	4d 50                	rex.WRB push r8
    c4dc:	20 00                	and    BYTE PTR [rax],al
    c4de:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    c4e1:	68 6f 20 72 65       	push   0x6572206f
    c4e6:	70 6c                	jo     c554 <_IO_stdin_used+0x554>
    c4e8:	79 00                	jns    c4ea <_IO_stdin_used+0x4ea>
    c4ea:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
    c4ee:	74 69                	je     c559 <_IO_stdin_used+0x559>
    c4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f1:	61                   	(bad)  
    c4f2:	74 69                	je     c55d <_IO_stdin_used+0x55d>
    c4f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c4f6:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c4f9:	72 65                	jb     c560 <_IO_stdin_used+0x560>
    c4fb:	61                   	(bad)  
    c4fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c4ff:	62                   	(bad)  
    c500:	6c                   	ins    BYTE PTR es:[rdi],dx
    c501:	65 28 00             	sub    BYTE PTR gs:[rax],al
    c504:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c507:	74 77                	je     c580 <_IO_stdin_used+0x580>
    c509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c50a:	72 6b                	jb     c577 <_IO_stdin_used+0x577>
    c50c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c50f:	72 65                	jb     c576 <_IO_stdin_used+0x576>
    c511:	61                   	(bad)  
    c512:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c515:	62                   	(bad)  
    c516:	6c                   	ins    BYTE PTR es:[rdi],dx
    c517:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c51a:	00 20                	add    BYTE PTR [rax],ah
    c51c:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c51e:	73 74                	jae    c594 <_IO_stdin_used+0x594>
    c520:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c523:	72 65                	jb     c58a <_IO_stdin_used+0x58a>
    c525:	61                   	(bad)  
    c526:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c529:	62                   	(bad)  
    c52a:	6c                   	ins    BYTE PTR es:[rdi],dx
    c52b:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c52e:	00 20                	add    BYTE PTR [rax],ah
    c530:	50                   	push   rax
    c531:	72 6f                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c533:	74 6f                	je     c5a4 <_IO_stdin_used+0x5a4>
    c535:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    c538:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c53b:	72 65                	jb     c5a2 <_IO_stdin_used+0x5a2>
    c53d:	61                   	(bad)  
    c53e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c541:	62                   	(bad)  
    c542:	6c                   	ins    BYTE PTR es:[rdi],dx
    c543:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c546:	00 20                	add    BYTE PTR [rax],ah
    c548:	50                   	push   rax
    c549:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c54a:	72 74                	jb     c5c0 <_IO_stdin_used+0x5c0>
    c54c:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c54f:	72 65                	jb     c5b6 <_IO_stdin_used+0x5b6>
    c551:	61                   	(bad)  
    c552:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c555:	62                   	(bad)  
    c556:	6c                   	ins    BYTE PTR es:[rdi],dx
    c557:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c55a:	00 20                	add    BYTE PTR [rax],ah
    c55c:	46 72 61             	rex.RX jb c5c0 <_IO_stdin_used+0x5c0>
    c55f:	67 6d                	ins    DWORD PTR es:[edi],dx
    c561:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c563:	74 61                	je     c5c6 <_IO_stdin_used+0x5c6>
    c565:	74 69                	je     c5d0 <_IO_stdin_used+0x5d0>
    c567:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c568:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c569:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c56c:	65 64 65 64 20 29    	gs fs gs and BYTE PTR fs:[rcx],ch
    c572:	00 20                	add    BYTE PTR [rax],ah
    c574:	53                   	push   rbx
    c575:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c576:	75 72                	jne    c5ea <_IO_stdin_used+0x5ea>
    c578:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c57b:	52                   	push   rdx
    c57c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c57d:	75 74                	jne    c5f3 <_IO_stdin_used+0x5f3>
    c57f:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
    c583:	69 6c 65 64 20 29 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2920
    c58a:	00 
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 20                	add    BYTE PTR [rax],ah
    c591:	44                   	rex.R
    c592:	65 73 74             	gs jae c609 <_IO_stdin_used+0x609>
    c595:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
    c59c:	20 4e 65             	and    BYTE PTR [rsi+0x65],cl
    c59f:	74 77                	je     c618 <_IO_stdin_used+0x618>
    c5a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5a2:	72 6b                	jb     c60f <_IO_stdin_used+0x60f>
    c5a4:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5a7:	72 65                	jb     c60e <_IO_stdin_used+0x60e>
    c5a9:	61                   	(bad)  
    c5aa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5ad:	62                   	(bad)  
    c5ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5af:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	00 00                	add    BYTE PTR [rax],al
    c5b8:	20 44 65 73          	and    BYTE PTR [rbp+riz*2+0x73],al
    c5bc:	74 69                	je     c627 <_IO_stdin_used+0x627>
    c5be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5bf:	61                   	(bad)  
    c5c0:	74 69                	je     c62b <_IO_stdin_used+0x62b>
    c5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c5c4:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c5c7:	73 74                	jae    c63d <_IO_stdin_used+0x63d>
    c5c9:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c5cc:	72 65                	jb     c633 <_IO_stdin_used+0x633>
    c5ce:	61                   	(bad)  
    c5cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c5d2:	62                   	(bad)  
    c5d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5d4:	65 20 29             	and    BYTE PTR gs:[rcx],ch
    c5d7:	00 20                	add    BYTE PTR [rax],ah
    c5d9:	53                   	push   rbx
    c5da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5db:	75 72                	jne    c64f <_IO_stdin_used+0x64f>
    c5dd:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c5e0:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c5e2:	73 74                	jae    c658 <_IO_stdin_used+0x658>
    c5e4:	20 49 73             	and    BYTE PTR [rcx+0x73],cl
    c5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    c5e9:	61                   	(bad)  
    c5ea:	74 65                	je     c651 <_IO_stdin_used+0x651>
    c5ec:	64 20 29             	and    BYTE PTR fs:[rcx],ch
    c5ef:	00 20                	add    BYTE PTR [rax],ah
    c5f1:	4e                   	rex.WRX
    c5f2:	65 74 77             	gs je  c66c <_IO_stdin_used+0x66c>
    c5f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c5f6:	72 6b                	jb     c663 <_IO_stdin_used+0x663>
    c5f8:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c5fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c5fc:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c603:	74 69                	je     c66e <_IO_stdin_used+0x66e>
    c605:	76 65                	jbe    c66c <_IO_stdin_used+0x66c>
    c607:	6c                   	ins    BYTE PTR es:[rdi],dx
    c608:	79 20                	jns    c62a <_IO_stdin_used+0x62a>
    c60a:	50                   	push   rax
    c60b:	72 6f                	jb     c67c <_IO_stdin_used+0x67c>
    c60d:	68 69 62 69 74       	push   0x74696269
    c612:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	20 48 6f             	and    BYTE PTR [rax+0x6f],cl
    c61b:	73 74                	jae    c691 <_IO_stdin_used+0x691>
    c61d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c620:	6d                   	ins    DWORD PTR es:[rdi],dx
    c621:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c628:	74 69                	je     c693 <_IO_stdin_used+0x693>
    c62a:	76 65                	jbe    c691 <_IO_stdin_used+0x691>
    c62c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c62d:	79 20                	jns    c64f <_IO_stdin_used+0x64f>
    c62f:	50                   	push   rax
    c630:	72 6f                	jb     c6a1 <_IO_stdin_used+0x6a1>
    c632:	68 69 62 69 74       	push   0x74696269
    c637:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 20                	add    BYTE PTR [rax],ah
    c641:	4e                   	rex.WRX
    c642:	65 74 77             	gs je  c6bc <_IO_stdin_used+0x6bc>
    c645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c646:	72 6b                	jb     c6b3 <_IO_stdin_used+0x6b3>
    c648:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c64b:	72 65                	jb     c6b2 <_IO_stdin_used+0x6b2>
    c64d:	61                   	(bad)  
    c64e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c651:	62                   	(bad)  
    c652:	6c                   	ins    BYTE PTR es:[rdi],dx
    c653:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c657:	72 20                	jb     c679 <_IO_stdin_used+0x679>
    c659:	54                   	push   rsp
    c65a:	4f 53                	rex.WRXB push r11
    c65c:	20 29                	and    BYTE PTR [rcx],ch
    c65e:	00 20                	add    BYTE PTR [rax],ah
    c660:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c662:	73 74                	jae    c6d8 <_IO_stdin_used+0x6d8>
    c664:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
    c667:	72 65                	jb     c6ce <_IO_stdin_used+0x6ce>
    c669:	61                   	(bad)  
    c66a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    c66d:	62                   	(bad)  
    c66e:	6c                   	ins    BYTE PTR es:[rdi],dx
    c66f:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    c673:	72 20                	jb     c695 <_IO_stdin_used+0x695>
    c675:	54                   	push   rsp
    c676:	4f 53                	rex.WRXB push r11
    c678:	20 29                	and    BYTE PTR [rcx],ch
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	00 00                	add    BYTE PTR [rax],al
    c67e:	00 00                	add    BYTE PTR [rax],al
    c680:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c683:	6d                   	ins    DWORD PTR es:[rdi],dx
    c684:	6d                   	ins    DWORD PTR es:[rdi],dx
    c685:	75 6e                	jne    c6f5 <_IO_stdin_used+0x6f5>
    c687:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    c68e:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    c691:	6d                   	ins    DWORD PTR es:[rdi],dx
    c692:	69 6e 69 73 74 72 61 	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
    c699:	74 69                	je     c704 <_IO_stdin_used+0x704>
    c69b:	76 65                	jbe    c702 <_IO_stdin_used+0x702>
    c69d:	6c                   	ins    BYTE PTR es:[rdi],dx
    c69e:	79 20                	jns    c6c0 <_IO_stdin_used+0x6c0>
    c6a0:	50                   	push   rax
    c6a1:	72 6f                	jb     c712 <_IO_stdin_used+0x712>
    c6a3:	68 69 62 69 74       	push   0x74696269
    c6a8:	65 64 20 29          	gs and BYTE PTR fs:[rcx],ch
    c6ac:	00 20                	add    BYTE PTR [rax],ah
    c6ae:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c6b0:	73 74                	jae    c726 <_IO_stdin_used+0x726>
    c6b2:	20 50 72             	and    BYTE PTR [rax+0x72],dl
    c6b5:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    c6b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6bb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6be:	56                   	push   rsi
    c6bf:	69 6f 6c 61 74 69 6f 	imul   ebp,DWORD PTR [rdi+0x6c],0x6f697461
    c6c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6c7:	20 29                	and    BYTE PTR [rcx],ch
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 00                	add    BYTE PTR [rax],al
    c6cf:	00 20                	add    BYTE PTR [rax],ah
    c6d1:	50                   	push   rax
    c6d2:	72 65                	jb     c739 <_IO_stdin_used+0x739>
    c6d4:	63 65 64             	movsxd esp,DWORD PTR [rbp+0x64]
    c6d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c6d9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c6dc:	43 75 74             	rex.XB jne c753 <_IO_stdin_used+0x753>
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	66 66 20 69 6e       	data16 data16 and BYTE PTR [rcx+0x6e],ch
    c6e5:	20 45 66             	and    BYTE PTR [rbp+0x66],al
    c6e8:	66 65 63 74 20 29    	movsxd si,DWORD PTR gs:[rax+riz*1+0x29]
    c6ee:	00 20                	add    BYTE PTR [rax],ah
    c6f0:	55                   	push   rbp
    c6f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f2:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c6f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c6f7:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c6fa:	64 65 3d 25 64 20 29 	fs gs cmp eax,0x29206425
    c701:	0a 00                	or     al,BYTE PTR [rax]
    c703:	00 00                	add    BYTE PTR [rax],al
    c705:	00 00                	add    BYTE PTR [rax],al
    c707:	00 20                	add    BYTE PTR [rax],ah
    c709:	53                   	push   rbx
    c70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c70b:	75 72                	jne    c77f <_IO_stdin_used+0x77f>
    c70d:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    c710:	51                   	push   rcx
    c711:	75 65                	jne    c778 <_IO_stdin_used+0x778>
    c713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c714:	63 68 28             	movsxd ebp,DWORD PTR [rax+0x28]
    c717:	20 66 6c             	and    BYTE PTR [rsi+0x6c],ah
    c71a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c71b:	77 20                	ja     c73d <_IO_stdin_used+0x73d>
    c71d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    c720:	74 72                	je     c794 <_IO_stdin_used+0x794>
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	6c                   	ins    BYTE PTR es:[rdi],dx
    c724:	20 29                	and    BYTE PTR [rcx],ch
    c726:	00 20                	add    BYTE PTR [rax],ah
    c728:	52                   	push   rdx
    c729:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x28207463
    c730:	20 28 
    c732:	00 20                	add    BYTE PTR [rax],ah
    c734:	52                   	push   rdx
    c735:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c73c:	20 66 
    c73e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c73f:	72 20                	jb     c761 <_IO_stdin_used+0x761>
    c741:	4e                   	rex.WRX
    c742:	65 74 77             	gs je  c7bc <_IO_stdin_used+0x7bc>
    c745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c746:	72 6b                	jb     c7b3 <_IO_stdin_used+0x7b3>
    c748:	20 29                	and    BYTE PTR [rcx],ch
    c74a:	00 20                	add    BYTE PTR [rax],ah
    c74c:	52                   	push   rdx
    c74d:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c754:	20 66 
    c756:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c757:	72 20                	jb     c779 <_IO_stdin_used+0x779>
    c759:	48 6f                	rex.W outs dx,DWORD PTR ds:[rsi]
    c75b:	73 74                	jae    c7d1 <_IO_stdin_used+0x7d1>
    c75d:	20 29                	and    BYTE PTR [rcx],ch
    c75f:	00 20                	add    BYTE PTR [rax],ah
    c761:	52                   	push   rdx
    c762:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c769:	20 66 
    c76b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c76c:	72 20                	jb     c78e <_IO_stdin_used+0x78e>
    c76e:	54                   	push   rsp
    c76f:	4f 53                	rex.WRXB push r11
    c771:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c774:	64 20 4e 65          	and    BYTE PTR fs:[rsi+0x65],cl
    c778:	74 77                	je     c7f1 <_IO_stdin_used+0x7f1>
    c77a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c77b:	72 6b                	jb     c7e8 <_IO_stdin_used+0x7e8>
    c77d:	20 29                	and    BYTE PTR [rcx],ch
    c77f:	00 20                	add    BYTE PTR [rax],ah
    c781:	52                   	push   rdx
    c782:	65 64 69 72 65 63 74 	gs imul esi,DWORD PTR fs:[rdx+0x65],0x66207463
    c789:	20 66 
    c78b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c78c:	72 20                	jb     c7ae <_IO_stdin_used+0x7ae>
    c78e:	54                   	push   rsp
    c78f:	4f 53                	rex.WRXB push r11
    c791:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    c794:	64 20 48 6f          	and    BYTE PTR fs:[rax+0x6f],cl
    c798:	73 74                	jae    c80e <_IO_stdin_used+0x80e>
    c79a:	20 29                	and    BYTE PTR [rcx],ch
    c79c:	00 20                	add    BYTE PTR [rax],ah
    c79e:	65 63 68 6f          	movsxd ebp,DWORD PTR gs:[rax+0x6f]
    c7a2:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    c7a5:	71 75                	jno    c81c <_IO_stdin_used+0x81c>
    c7a7:	65 73 74             	gs jae c81e <_IO_stdin_used+0x81e>
    c7aa:	00 00                	add    BYTE PTR [rax],al
    c7ac:	00 00                	add    BYTE PTR [rax],al
    c7ae:	00 00                	add    BYTE PTR [rax],al
    c7b0:	20 4d 6f             	and    BYTE PTR [rbp+0x6f],cl
    c7b3:	62                   	(bad)  
    c7b4:	69 6c 65 20 49 50 20 	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x41205049
    c7bb:	41 
    c7bc:	64 76 65             	fs jbe c824 <_IO_stdin_used+0x824>
    c7bf:	72 74                	jb     c835 <_IO_stdin_used+0x835>
    c7c1:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7c8:	20 28                	and    BYTE PTR [rax],ch
    c7ca:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    c7cc:	72 6d                	jb     c83b <_IO_stdin_used+0x83b>
    c7ce:	61                   	(bad)  
    c7cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    c7d0:	20 52 6f             	and    BYTE PTR [rdx+0x6f],dl
    c7d3:	75 74                	jne    c849 <_IO_stdin_used+0x849>
    c7d5:	65 72 20             	gs jb  c7f8 <_IO_stdin_used+0x7f8>
    c7d8:	41                   	rex.B
    c7d9:	64 76 65             	fs jbe c841 <_IO_stdin_used+0x841>
    c7dc:	72 74                	jb     c852 <_IO_stdin_used+0x852>
    c7de:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c7e5:	20 29                	and    BYTE PTR [rcx],ch
    c7e7:	20 29                	and    BYTE PTR [rcx],ch
    c7e9:	0a 20                	or     ah,BYTE PTR [rax]
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 20                	add    BYTE PTR [rax],ah
    c7f1:	52                   	push   rdx
    c7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c7f3:	75 74                	jne    c869 <_IO_stdin_used+0x869>
    c7f5:	65 72 20             	gs jb  c818 <_IO_stdin_used+0x818>
    c7f8:	41                   	rex.B
    c7f9:	64 76 65             	fs jbe c861 <_IO_stdin_used+0x861>
    c7fc:	72 74                	jb     c872 <_IO_stdin_used+0x872>
    c7fe:	69 73 65 6d 65 6e 74 	imul   esi,DWORD PTR [rbx+0x65],0x746e656d
    c805:	20 28                	and    BYTE PTR [rax],ch
    c807:	55                   	push   rbp
    c808:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c809:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c80d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c80e:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c811:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c815:	25 64 20 29 20       	and    eax,0x20292064
    c81a:	29 0a                	sub    DWORD PTR [rdx],ecx
    c81c:	00 20                	add    BYTE PTR [rax],ah
    c81e:	52                   	push   rdx
    c81f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c820:	75 74                	jne    c896 <_IO_stdin_used+0x896>
    c822:	65 72 20             	gs jb  c845 <_IO_stdin_used+0x845>
    c825:	53                   	push   rbx
    c826:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c827:	6c                   	ins    BYTE PTR es:[rdi],dx
    c828:	69 63 69 74 61 74 69 	imul   esp,DWORD PTR [rbx+0x69],0x69746174
    c82f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c830:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c831:	20 29                	and    BYTE PTR [rcx],ch
    c833:	00 20                	add    BYTE PTR [rax],ah
    c835:	54                   	push   rsp
    c836:	69 6d 65 20 54 6f 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206f5420
    c83d:	4c 69 76 65 20 65 78 	imul   r14,QWORD PTR [rsi+0x65],0x63786520
    c844:	63 
    c845:	65 65 64 65 64 00 20 	gs gs fs gs add BYTE PTR fs:[rax],ah
    c84c:	28 20                	sub    BYTE PTR [rax],ah
    c84e:	74 74                	je     c8c4 <_IO_stdin_used+0x8c4>
    c850:	6c                   	ins    BYTE PTR es:[rdi],dx
    c851:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
    c854:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c857:	64 65 64 20 69 6e    	fs gs and BYTE PTR fs:[rcx+0x6e],ch
    c85d:	20 74 72 61          	and    BYTE PTR [rdx+rsi*2+0x61],dh
    c861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c862:	73 69                	jae    c8cd <_IO_stdin_used+0x8cd>
    c864:	74 20                	je     c886 <_IO_stdin_used+0x886>
    c866:	29 00                	sub    DWORD PTR [rax],eax
    c868:	20 28                	and    BYTE PTR [rax],ch
    c86a:	20 46 72             	and    BYTE PTR [rsi+0x72],al
    c86d:	61                   	(bad)  
    c86e:	67 6d                	ins    DWORD PTR es:[edi],dx
    c870:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c872:	74 20                	je     c894 <_IO_stdin_used+0x894>
    c874:	52                   	push   rdx
    c875:	65 61                	gs (bad) 
    c877:	73 73                	jae    c8ec <_IO_stdin_used+0x8ec>
    c879:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    c87b:	62                   	(bad)  
    c87c:	6c                   	ins    BYTE PTR es:[rdi],dx
    c87d:	79 20                	jns    c89f <_IO_stdin_used+0x89f>
    c87f:	74 69                	je     c8ea <_IO_stdin_used+0x8ea>
    c881:	6d                   	ins    DWORD PTR es:[rdi],dx
    c882:	65 20 65 78          	and    BYTE PTR gs:[rbp+0x78],ah
    c886:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
    c889:	64 65 64 20 29       	fs gs and BYTE PTR fs:[rcx],ch
    c88e:	00 20                	add    BYTE PTR [rax],ah
    c890:	28 20                	sub    BYTE PTR [rax],ah
    c892:	55                   	push   rbp
    c893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c894:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c898:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c899:	20 43 6f             	and    BYTE PTR [rbx+0x6f],al
    c89c:	64 65 3a 20          	fs cmp ah,BYTE PTR gs:[rax]
    c8a0:	25 64 29 0a 00       	and    eax,0xa2964
    c8a5:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
    c8a9:	65 73 74             	gs jae c920 <_IO_stdin_used+0x920>
    c8ac:	61                   	(bad)  
    c8ad:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8ae:	70 20                	jo     c8d0 <_IO_stdin_used+0x8d0>
    c8b0:	72 65                	jb     c917 <_IO_stdin_used+0x917>
    c8b2:	71 75                	jno    c929 <_IO_stdin_used+0x929>
    c8b4:	65 73 74             	gs jae c92b <_IO_stdin_used+0x92b>
    c8b7:	00 20                	add    BYTE PTR [rax],ah
    c8b9:	74 69                	je     c924 <_IO_stdin_used+0x924>
    c8bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8bc:	65 73 74             	gs jae c933 <_IO_stdin_used+0x933>
    c8bf:	61                   	(bad)  
    c8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8c1:	70 20                	jo     c8e3 <_IO_stdin_used+0x8e3>
    c8c3:	72 65                	jb     c92a <_IO_stdin_used+0x92a>
    c8c5:	70 6c                	jo     c933 <_IO_stdin_used+0x933>
    c8c7:	79 00                	jns    c8c9 <_IO_stdin_used+0x8c9>
    c8c9:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    c8cc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    c8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c8d1:	20 69 63             	and    BYTE PTR [rcx+0x63],ch
    c8d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    c8d5:	70 20                	jo     c8f7 <_IO_stdin_used+0x8f7>
    c8d7:	74 79                	je     c952 <_IO_stdin_used+0x952>
    c8d9:	70 65                	jo     c940 <_IO_stdin_used+0x940>
    c8db:	3d 25 64 00 00       	cmp    eax,0x6425
    c8e0:	e6 77                	out    0x77,al
    c8e2:	ff                   	(bad)  
    c8e3:	ff 09                	dec    DWORD PTR [rcx]
    c8e5:	7b ff                	jnp    c8e6 <_IO_stdin_used+0x8e6>
    c8e7:	ff 09                	dec    DWORD PTR [rcx]
    c8e9:	7b ff                	jnp    c8ea <_IO_stdin_used+0x8ea>
    c8eb:	ff f7                	push   rdi
    c8ed:	77 ff                	ja     c8ee <_IO_stdin_used+0x8ee>
    c8ef:	ff 64 79 ff          	jmp    QWORD PTR [rcx+rdi*2-0x1]
    c8f3:	ff 75 79             	push   QWORD PTR [rbp+0x79]
    c8f6:	ff                   	(bad)  
    c8f7:	ff 09                	dec    DWORD PTR [rcx]
    c8f9:	7b ff                	jnp    c8fa <_IO_stdin_used+0x8fa>
    c8fb:	ff 09                	dec    DWORD PTR [rcx]
    c8fd:	7b ff                	jnp    c8fe <_IO_stdin_used+0x8fe>
    c8ff:	ff 12                	call   QWORD PTR [rdx]
    c901:	7a ff                	jp     c902 <_IO_stdin_used+0x902>
    c903:	ff 23                	jmp    QWORD PTR [rbx]
    c905:	7a ff                	jp     c906 <_IO_stdin_used+0x906>
    c907:	ff 6e 7a             	jmp    FWORD PTR [rsi+0x7a]
    c90a:	ff                   	(bad)  
    c90b:	ff                   	(bad)  
    c90c:	7f 7a                	jg     c988 <_IO_stdin_used+0x988>
    c90e:	ff                   	(bad)  
    c90f:	ff 09                	dec    DWORD PTR [rcx]
    c911:	7b ff                	jnp    c912 <_IO_stdin_used+0x912>
    c913:	ff                   	(bad)  
    c914:	ed                   	in     eax,dx
    c915:	7a ff                	jp     c916 <_IO_stdin_used+0x916>
    c917:	ff                   	(bad)  
    c918:	fb                   	sti    
    c919:	7a ff                	jp     c91a <_IO_stdin_used+0x91a>
    c91b:	ff 06                	inc    DWORD PTR [rsi]
    c91d:	78 ff                	js     c91e <_IO_stdin_used+0x91e>
    c91f:	ff 17                	call   QWORD PTR [rdi]
    c921:	78 ff                	js     c922 <_IO_stdin_used+0x922>
    c923:	ff 28                	jmp    FWORD PTR [rax]
    c925:	78 ff                	js     c926 <_IO_stdin_used+0x926>
    c927:	ff                   	(bad)  
    c928:	39 78 ff             	cmp    DWORD PTR [rax-0x1],edi
    c92b:	ff 4a 78             	dec    DWORD PTR [rdx+0x78]
    c92e:	ff                   	(bad)  
    c92f:	ff 5b 78             	call   FWORD PTR [rbx+0x78]
    c932:	ff                   	(bad)  
    c933:	ff 6c 78 ff          	jmp    FWORD PTR [rax+rdi*2-0x1]
    c937:	ff                   	(bad)  
    c938:	7d 78                	jge    c9b2 <_IO_stdin_used+0x9b2>
    c93a:	ff                   	(bad)  
    c93b:	ff 8e 78 ff ff 9f    	dec    DWORD PTR [rsi-0x60000088]
    c941:	78 ff                	js     c942 <_IO_stdin_used+0x942>
    c943:	ff ad 78 ff ff bb    	jmp    FWORD PTR [rbp-0x44000088]
    c949:	78 ff                	js     c94a <_IO_stdin_used+0x94a>
    c94b:	ff c9                	dec    ecx
    c94d:	78 ff                	js     c94e <_IO_stdin_used+0x94e>
    c94f:	ff d7                	call   rdi
    c951:	78 ff                	js     c952 <_IO_stdin_used+0x952>
    c953:	ff e5                	jmp    rbp
    c955:	78 ff                	js     c956 <_IO_stdin_used+0x956>
    c957:	ff f3                	push   rbx
    c959:	78 ff                	js     c95a <_IO_stdin_used+0x95a>
    c95b:	ff 00                	inc    DWORD PTR [rax]
    c95d:	00 00                	add    BYTE PTR [rax],al
    c95f:	00 1b                	add    BYTE PTR [rbx],bl
    c961:	5b                   	pop    rbx
    c962:	33 32                	xor    esi,DWORD PTR [rdx]
    c964:	6d                   	ins    DWORD PTR es:[rdi],dx
    c965:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049c9de <_end+0x5035d99e>
    c96b:	76 34                	jbe    c9a1 <_IO_stdin_used+0x9a1>
    c96d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642603e6 <_end+0x641213a6>
    c973:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325e9b7 <_end+0x7311f977>
    c979:	3a 25 64 0a 00 09    	cmp    ah,BYTE PTR [rip+0x9000a64]        # 900d3e3 <_end+0x8ece3a3>
    c97f:	54                   	push   rsp
    c980:	43 50                	rex.XB push r8
    c982:	20 5b 00             	and    BYTE PTR [rbx+0x0],bl
    c985:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c988:	33 6d 00             	xor    ebp,DWORD PTR [rbp+0x0]
    c98b:	25 73 20 41 43       	and    eax,0x43412073
    c990:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    c993:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c996:	37                   	(bad)  
    c997:	6d                   	ins    DWORD PTR es:[rdi],dx
    c998:	00 25 73 20 46 49    	add    BYTE PTR [rip+0x49462073],ah        # 4946ea11 <_end+0x4932f9d1>
    c99e:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9a1:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9a4:	34 6d                	xor    al,0x6d
    c9a6:	00 25 73 20 50 53    	add    BYTE PTR [rip+0x53502073],ah        # 5350ea1f <_end+0x533cf9df>
    c9ac:	48 20 00             	rex.W and BYTE PTR [rax],al
    c9af:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9b2:	31 6d 00             	xor    DWORD PTR [rbp+0x0],ebp
    c9b5:	25 73 20 52 53       	and    eax,0x53522073
    c9ba:	54                   	push   rsp
    c9bb:	20 00                	and    BYTE PTR [rax],al
    c9bd:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9c0:	35 6d 00 25 73       	xor    eax,0x7325006d
    c9c5:	20 53 59             	and    BYTE PTR [rbx+0x59],dl
    c9c8:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    c9cb:	1b 5b 33             	sbb    ebx,DWORD PTR [rbx+0x33]
    c9ce:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    c9d0:	00 25 73 20 55 52    	add    BYTE PTR [rip+0x52552073],ah        # 5255ea49 <_end+0x5241fa09>
    c9d6:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    c9d9:	5d                   	pop    rbp
    c9da:	00 1b                	add    BYTE PTR [rbx],bl
    c9dc:	5b                   	pop    rbx
    c9dd:	30 6d 00             	xor    BYTE PTR [rbp+0x0],ch
    c9e0:	25 73 53 75 73       	and    eax,0x73755373
    c9e5:	70 69                	jo     ca50 <_IO_stdin_used+0xa50>
    c9e7:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
    c9ea:	75 73                	jne    ca5f <_IO_stdin_used+0xa5f>
    c9ec:	20 54 43 50          	and    BYTE PTR [rbx+rax*2+0x50],dl
    c9f0:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    c9f3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    c9f6:	74 20                	je     ca18 <_IO_stdin_used+0xa18>
    c9f8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    c9fa:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    c9fd:	74 65                	je     ca64 <_IO_stdin_used+0xa64>
    c9ff:	72 65                	jb     ca66 <_IO_stdin_used+0xa66>
    ca01:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    ca04:	25 73 3a 25 64       	and    eax,0x64253a73
    ca09:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea4d <_end+0x7311fa0d>
    ca0f:	3a 25 64 2c 20 25    	cmp    ah,BYTE PTR [rip+0x25202c64]        # 2520f679 <_end+0x250d0639>
    ca15:	64 20 66 6c          	and    BYTE PTR fs:[rsi+0x6c],ah
    ca19:	61                   	(bad)  
    ca1a:	67 73 25             	addr32 jae ca42 <_IO_stdin_used+0xa42>
    ca1d:	73 0a                	jae    ca29 <_IO_stdin_used+0xa29>
    ca1f:	00 1b                	add    BYTE PTR [rbx],bl
    ca21:	5b                   	pop    rbx
    ca22:	39 36                	cmp    DWORD PTR [rsi],esi
    ca24:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca25:	00 25 73 00 49 50    	add    BYTE PTR [rip+0x50490073],ah        # 5049ca9e <_end+0x5035da5e>
    ca2b:	76 34                	jbe    ca61 <_IO_stdin_used+0xa61>
    ca2d:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642604a6 <_end+0x64121466>
    ca33:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325ea77 <_end+0x7311fa37>
    ca39:	3a 25 64 20 55 44    	cmp    ah,BYTE PTR [rip+0x44552064]        # 4455eaa3 <_end+0x4441fa63>
    ca3f:	50                   	push   rax
    ca40:	0a 00                	or     al,BYTE PTR [rax]
    ca42:	1b 5b 30             	sbb    ebx,DWORD PTR [rbx+0x30]
    ca45:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca46:	00 00                	add    BYTE PTR [rax],al
    ca48:	49 50                	rex.WB push r8
    ca4a:	76 34                	jbe    ca80 <_IO_stdin_used+0xa80>
    ca4c:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    ca4f:	4d 50                	rex.WRB push r8
    ca51:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deaca <_end+0x3e19fa8a>
    ca57:	20 25 73 20 5b 00    	and    BYTE PTR [rip+0x5b2073],ah        # 5bead0 <_end+0x47fa90>
    ca5d:	20 4d 65             	and    BYTE PTR [rbp+0x65],cl
    ca60:	6d                   	ins    DWORD PTR es:[rdi],dx
    ca61:	62                   	(bad)  
    ca62:	65 72 73             	gs jb  cad8 <_IO_stdin_used+0xad8>
    ca65:	68 69 70 20 51       	push   0x51207069
    ca6a:	75 65                	jne    cad1 <_IO_stdin_used+0xad1>
    ca6c:	72 79                	jb     cae7 <_IO_stdin_used+0xae7>
    ca6e:	20 5d 00             	and    BYTE PTR [rbp+0x0],bl
    ca71:	00 00                	add    BYTE PTR [rax],al
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 00                	add    BYTE PTR [rax],al
    ca77:	00 20                	add    BYTE PTR [rax],ah
    ca79:	4d                   	rex.WRB
    ca7a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    ca7c:	62                   	(bad)  
    ca7d:	65 72 73             	gs jb  caf3 <_IO_stdin_used+0xaf3>
    ca80:	68 69 70 20 52       	push   0x52207069
    ca85:	65 70 6f             	gs jo  caf7 <_IO_stdin_used+0xaf7>
    ca88:	72 74                	jb     cafe <_IO_stdin_used+0xafe>
    ca8a:	20 2f                	and    BYTE PTR [rdi],ch
    ca8c:	20 4a 6f             	and    BYTE PTR [rdx+0x6f],cl
    ca8f:	69 6e 20 67 72 6f 75 	imul   ebp,DWORD PTR [rsi+0x20],0x756f7267
    ca96:	70 20                	jo     cab8 <_IO_stdin_used+0xab8>
    ca98:	25 73 20 66 6f       	and    eax,0x6f662073
    ca9d:	72 20                	jb     cabf <_IO_stdin_used+0xabf>
    ca9f:	61                   	(bad)  
    caa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    caa1:	79 20                	jns    cac3 <_IO_stdin_used+0xac3>
    caa3:	73 6f                	jae    cb14 <_IO_stdin_used+0xb14>
    caa5:	75 72                	jne    cb19 <_IO_stdin_used+0xb19>
    caa7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    caaa:	20 5d 0a             	and    BYTE PTR [rbp+0xa],bl
    caad:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cab0:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    cab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cab5:	20 49 47             	and    BYTE PTR [rcx+0x47],cl
    cab8:	4d 50                	rex.WRB push r8
    caba:	20 54 79 70          	and    BYTE PTR [rcx+rdi*2+0x70],dl
    cabe:	65 3d 25 64 20 5d    	gs cmp eax,0x5d206425
    cac4:	0a 00                	or     al,BYTE PTR [rax]
    cac6:	25 64 2d 25 30       	and    eax,0x30252d64
    cacb:	32 64 2d 25          	xor    ah,BYTE PTR [rbp+rbp*1+0x25]
    cacf:	30 32                	xor    BYTE PTR [rdx],dh
    cad1:	64 20 25 30 32 64 3a 	and    BYTE PTR fs:[rip+0x3a643230],ah        # 3a64fd08 <_end+0x3a510cc8>
    cad8:	25 30 32 64 3a       	and    eax,0x3a643230
    cadd:	25 30 32 64 00       	and    eax,0x643230
    cae2:	25 73 20 25 73       	and    eax,0x73252073
    cae7:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2deb60 <_end+0x3e19fb20>
    caed:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500d566 <_end+0x24ece526>
    caf3:	73 20                	jae    cb15 <_IO_stdin_used+0xb15>
    caf5:	25 73 20 25 73       	and    eax,0x73252073
    cafa:	3a 25 64 20 2d 3e    	cmp    ah,BYTE PTR [rip+0x3e2d2064]        # 3e2deb64 <_end+0x3e19fb24>
    cb00:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64260579 <_end+0x64121539>
    cb06:	0a 00                	or     al,BYTE PTR [rax]
    cb08:	25 73 00 61 00       	and    eax,0x610073
    cb0d:	25 30 32 78 00       	and    eax,0x783230
    cb12:	00 00                	add    BYTE PTR [rax],al
    cb14:	00 00                	add    BYTE PTR [rax],al
    cb16:	00 00                	add    BYTE PTR [rax],al
    cb18:	72 00                	jb     cb1a <_IO_stdin_used+0xb1a>
    cb1a:	00 00                	add    BYTE PTR [rax],al
    cb1c:	00 00                	add    BYTE PTR [rax],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	45 72 72             	rex.RB jb cb95 <_IO_stdin_used+0xb95>
    cb23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb24:	72 20                	jb     cb46 <_IO_stdin_used+0xb46>
    cb26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb27:	70 65                	jo     cb8e <_IO_stdin_used+0xb8e>
    cb29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb2a:	69 6e 67 20 63 6f 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
    cb31:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    cb37:	74 69                	je     cba2 <_IO_stdin_used+0xba2>
    cb39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb3b:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    cb3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb3f:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cb42:	25 73 0a 00 0a       	and    eax,0xa000a73
    cb47:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb4a:	72 69                	jb     cbb5 <_IO_stdin_used+0xbb5>
    cb4c:	63 74 5f 69          	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
    cb50:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    cb53:	5f                   	pop    rdi
    cb54:	74 69                	je     cbbf <_IO_stdin_used+0xbbf>
    cb56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb57:	65 73 74             	gs jae cbce <_IO_stdin_used+0xbce>
    cb5a:	61                   	(bad)  
    cb5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb5c:	70 5f                	jo     cbbd <_IO_stdin_used+0xbbd>
    cb5e:	72 65                	jb     cbc5 <_IO_stdin_used+0xbc5>
    cb60:	71 3d                	jno    cb9f <_IO_stdin_used+0xb9f>
    cb62:	00 59 45             	add    BYTE PTR [rcx+0x45],bl
    cb65:	53                   	push   rbx
    cb66:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    cb69:	72 69                	jb     cbd4 <_IO_stdin_used+0xbd4>
    cb6b:	63 74 5f 6e          	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
    cb6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    cb70:	61                   	(bad)  
    cb71:	70 5f                	jo     cbd2 <_IO_stdin_used+0xbd2>
    cb73:	68 6f 73 74 5f       	push   0x5f74736f
    cb78:	61                   	(bad)  
    cb79:	6c                   	ins    BYTE PTR es:[rdi],dx
    cb7a:	69 76 65 5f 63 68 65 	imul   esi,DWORD PTR [rsi+0x65],0x6568635f
    cb81:	63 6b 3d             	movsxd ebp,DWORD PTR [rbx+0x3d]
    cb84:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cb87:	65 61                	gs (bad) 
    cb89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cb8a:	5f                   	pop    rdi
    cb8b:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cb8e:	61                   	(bad)  
    cb8f:	79 5f                	jns    cbf0 <_IO_stdin_used+0xbf0>
    cb91:	69 6e 5f 70 61 63 6b 	imul   ebp,DWORD PTR [rsi+0x5f],0x6b636170
    cb98:	65 74 73             	gs je  cc0e <_IO_stdin_used+0xc0e>
    cb9b:	3d 00 43 6c 65       	cmp    eax,0x656c4300
    cba0:	61                   	(bad)  
    cba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cba2:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
    cba6:	61                   	(bad)  
    cba7:	79 20                	jns    cbc9 <_IO_stdin_used+0xbc9>
    cba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbaa:	65 65 64 73 20       	gs gs fs jae cbcf <_IO_stdin_used+0xbcf>
    cbaf:	61                   	(bad)  
    cbb0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    cbb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbb4:	75 65                	jne    cc1b <_IO_stdin_used+0xc1b>
    cbb6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    cbb9:	65 61                	gs (bad) 
    cbbb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbbc:	5f                   	pop    rdi
    cbbd:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    cbc0:	61                   	(bad)  
    cbc1:	79 5f                	jns    cc22 <_IO_stdin_used+0xc22>
    cbc3:	69 6e 5f 6d 73 65 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x6365736d
    cbca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cbcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbcc:	64 73 3d             	fs jae cc0c <_IO_stdin_used+0xc0c>
    cbcf:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cbd2:	65 5f                	gs pop rdi
    cbd4:	73 71                	jae    cc47 <_IO_stdin_used+0xc47>
    cbd6:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd7:	69 74 65 3d 00 73 71 	imul   esi,DWORD PTR [rbp+riz*2+0x3d],0x6c717300
    cbde:	6c 
    cbdf:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbe6:	61 
    cbe7:	62 61                	(bad)  
    cbe9:	73 65                	jae    cc50 <_IO_stdin_used+0xc50>
    cbeb:	5f                   	pop    rdi
    cbec:	70 61                	jo     cc4f <_IO_stdin_used+0xc4f>
    cbee:	74 68                	je     cc58 <_IO_stdin_used+0xc58>
    cbf0:	3d 00 73 71 6c       	cmp    eax,0x6c717300
    cbf5:	69 74 65 5f 64 61 74 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x61746164
    cbfc:	61 
    cbfd:	62 61                	(bad)  
    cbff:	73 65                	jae    cc66 <_IO_stdin_used+0xc66>
    cc01:	5f                   	pop    rdi
    cc02:	70 61                	jo     cc65 <_IO_stdin_used+0xc65>
    cc04:	74 68                	je     cc6e <_IO_stdin_used+0xc6e>
    cc06:	3a 20                	cmp    ah,BYTE PTR [rax]
    cc08:	25 73 00 69 6e       	and    eax,0x6e690073
    cc0d:	5f                   	pop    rdi
    cc0e:	61                   	(bad)  
    cc0f:	64 61                	fs (bad) 
    cc11:	70 74                	jo     cc87 <_IO_stdin_used+0xc87>
    cc13:	65 72 3d             	gs jb  cc53 <_IO_stdin_used+0xc53>
    cc16:	00 00                	add    BYTE PTR [rax],al
    cc18:	72 75                	jb     cc8f <_IO_stdin_used+0xc8f>
    cc1a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc1b:	65 5f                	gs pop rdi
    cc1d:	70 61                	jo     cc80 <_IO_stdin_used+0xc80>
    cc1f:	72 73                	jb     cc94 <_IO_stdin_used+0xc94>
    cc21:	65 72 2e             	gs jb  cc52 <_IO_stdin_used+0xc52>
    cc24:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc26:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc29:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2a:	65 5f                	gs pop rdi
    cc2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc2d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc34:	70 61                	jo     cc97 <_IO_stdin_used+0xc97>
    cc36:	72 73                	jb     ccab <_IO_stdin_used+0xcab>
    cc38:	65 72 3a             	gs jb  cc75 <_IO_stdin_used+0xc75>
    cc3b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    cc3e:	5f                   	pop    rdi
    cc3f:	61                   	(bad)  
    cc40:	64 61                	fs (bad) 
    cc42:	70 74                	jo     ccb8 <_IO_stdin_used+0xcb8>
    cc44:	65 72 3a             	gs jb  cc81 <_IO_stdin_used+0xc81>
    cc47:	20 25 73 00 6f 75    	and    BYTE PTR [rip+0x756f0073],ah        # 756fccc0 <_end+0x755bdc80>
    cc4d:	74 5f                	je     ccae <_IO_stdin_used+0xcae>
    cc4f:	61                   	(bad)  
    cc50:	64 61                	fs (bad) 
    cc52:	70 74                	jo     ccc8 <_IO_stdin_used+0xcc8>
    cc54:	65 72 3d             	gs jb  cc94 <_IO_stdin_used+0xc94>
    cc57:	00 72 75             	add    BYTE PTR [rdx+0x75],dh
    cc5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc5b:	65 5f                	gs pop rdi
    cc5d:	70 61                	jo     ccc0 <_IO_stdin_used+0xcc0>
    cc5f:	72 73                	jb     ccd4 <_IO_stdin_used+0xcd4>
    cc61:	65 72 2e             	gs jb  cc92 <_IO_stdin_used+0xc92>
    cc64:	63 3a                	movsxd edi,DWORD PTR [rdx]
    cc66:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    cc69:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6a:	65 5f                	gs pop rdi
    cc6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cc6d:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
    cc74:	70 61                	jo     ccd7 <_IO_stdin_used+0xcd7>
    cc76:	72 73                	jb     cceb <_IO_stdin_used+0xceb>
    cc78:	65 72 3a             	gs jb  ccb5 <_IO_stdin_used+0xcb5>
    cc7b:	20 6f 75             	and    BYTE PTR [rdi+0x75],ch
    cc7e:	74 5f                	je     ccdf <_IO_stdin_used+0xcdf>
    cc80:	61                   	(bad)  
    cc81:	64 61                	fs (bad) 
    cc83:	70 74                	jo     ccf9 <_IO_stdin_used+0xcf9>
    cc85:	65 72 3a             	gs jb  ccc2 <_IO_stdin_used+0xcc2>
    cc88:	20 25 73 00 6d 6f    	and    BYTE PTR [rip+0x6f6d0073],ah        # 6f6dcd01 <_end+0x6f59dcc1>
    cc8e:	64 65 3d 00 6d 6f 64 	fs gs cmp eax,0x646f6d00
    cc95:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cc98:	25 73 00 52 75       	and    eax,0x75520073
    cc9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cc9f:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    cca6:	00 32                	add    BYTE PTR [rdx],dh
    cca8:	00 49 50             	add    BYTE PTR [rcx+0x50],cl
    ccab:	53                   	push   rbx
    ccac:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccaf:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    ccb4:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccb7:	72 20                	jb     ccd9 <_IO_stdin_used+0xcd9>
    ccb9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccbc:	66 69 67 00 49 44    	imul   sp,WORD PTR [rdi+0x0],0x4449
    ccc2:	53                   	push   rbx
    ccc3:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    ccc6:	64 65 20 61 73       	fs and BYTE PTR gs:[rcx+0x73],ah
    cccb:	20 70 65             	and    BYTE PTR [rax+0x65],dh
    ccce:	72 20                	jb     ccf0 <_IO_stdin_used+0xcf0>
    ccd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccd3:	66 69 67 00 6c 6f    	imul   sp,WORD PTR [rdi+0x0],0x6f6c
    ccd9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    ccdc:	69 70 3d 00 6c 6f 63 	imul   esi,DWORD PTR [rax+0x3d],0x636f6c00
    cce3:	61                   	(bad)  
    cce4:	6c                   	ins    BYTE PTR es:[rdi],dx
    cce5:	5f                   	pop    rdi
    cce6:	69 70 20 61 73 20 70 	imul   esi,DWORD PTR [rax+0x20],0x70207361
    cced:	65 72 20             	gs jb  cd10 <_IO_stdin_used+0xd10>
    ccf0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    ccf3:	66 69 67 3a 20 25    	imul   sp,WORD PTR [rdi+0x3a],0x2520
    ccf9:	73 00                	jae    ccfb <_IO_stdin_used+0xcfb>
    ccfb:	64 65 66 67 77 3d    	fs gs data16 addr32 ja cd3e <_IO_stdin_used+0xd3e>
    cd01:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
    cd04:	65 5f                	gs pop rdi
    cd06:	73 70                	jae    cd78 <_IO_stdin_used+0xd78>
    cd08:	69 3d 00 56 49 47 49 	imul   edi,DWORD PTR [rip+0x47495600],0x53204c49        # 474a2312 <_end+0x473632d2>
    cd0f:	4c 20 53 
    cd12:	50                   	push   rax
    cd13:	49 20 73 65          	rex.WB and BYTE PTR [r11+0x65],sil
    cd17:	72 76                	jb     cd8f <_IO_stdin_used+0xd8f>
    cd19:	69 63 65 20 61 63 74 	imul   esp,DWORD PTR [rbx+0x65],0x74636120
    cd20:	69 76 65 00 48 4f 4d 	imul   esi,DWORD PTR [rsi+0x65],0x4d4f4800
    cd27:	45 5f                	rex.RB pop r15
    cd29:	4e                   	rex.WRX
    cd2a:	45 54                	rex.RB push r12
    cd2c:	3d 00 48 4f 4d       	cmp    eax,0x4d4f4800
    cd31:	45 5f                	rex.RB pop r15
    cd33:	4e                   	rex.WRX
    cd34:	45 54                	rex.RB push r12
    cd36:	5f                   	pop    rdi
    cd37:	4d                   	rex.WRB
    cd38:	41 53                	push   r11
    cd3a:	4b 3d 00 6c 6f 63    	rex.WXB cmp rax,0x636f6c00
    cd40:	61                   	(bad)  
    cd41:	74 69                	je     cdac <_IO_stdin_used+0xdac>
    cd43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd45:	3d 00 65 78 74       	cmp    eax,0x74786500
    cd4a:	65 72 6e             	gs jb  cdbb <_IO_stdin_used+0xdbb>
    cd4d:	61                   	(bad)  
    cd4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd4f:	00 53 79             	add    BYTE PTR [rbx+0x79],dl
    cd52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd53:	74 61                	je     cdb6 <_IO_stdin_used+0xdb6>
    cd55:	78 20                	js     cd77 <_IO_stdin_used+0xd77>
    cd57:	65 72 72             	gs jb  cdcc <_IO_stdin_used+0xdcc>
    cd5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd5b:	72 20                	jb     cd7d <_IO_stdin_used+0xd7d>
    cd5d:	61                   	(bad)  
    cd5e:	74 20                	je     cd80 <_IO_stdin_used+0xd80>
    cd60:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd61:	69 6e 65 20 25 64 3a 	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
    cd68:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d7e1 <_IO_stdin_used+0x17e1>
    cd6e:	00 00                	add    BYTE PTR [rax],al
    cd70:	45 72 72             	rex.RB jb cde5 <_IO_stdin_used+0xde5>
    cd73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd74:	72 20                	jb     cd96 <_IO_stdin_used+0xd96>
    cd76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cd77:	70 65                	jo     cdde <_IO_stdin_used+0xdde>
    cd79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7a:	69 6e 67 20 72 75 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c757220
    cd81:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cd85:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd86:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    cd89:	25 73 2e 20 52       	and    eax,0x52202e73
    cd8e:	65 66 75 73          	gs data16 jne ce05 <_IO_stdin_used+0xe05>
    cd92:	69 6e 67 20 74 6f 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
    cd99:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cd9c:	74 69                	je     ce07 <_IO_stdin_used+0xe07>
    cd9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd9f:	75 65                	jne    ce06 <_IO_stdin_used+0xe06>
    cda1:	0a 00                	or     al,BYTE PTR [rax]
    cda3:	50                   	push   rax
    cda4:	61                   	(bad)  
    cda5:	72 73                	jb     ce1a <_IO_stdin_used+0xe1a>
    cda7:	69 6e 67 20 66 69 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
    cdae:	65 20 25 73 0a 00 61 	and    BYTE PTR gs:[rip+0x61000a73],ah        # 6100d828 <_end+0x60ece7e8>
    cdb5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cdb6:	65 72 74             	gs jb  ce2d <_IO_stdin_used+0xe2d>
    cdb9:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    cdbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdbd:	69 73 68 65 64 20 70 	imul   esi,DWORD PTR [rbx+0x68],0x70206465
    cdc4:	61                   	(bad)  
    cdc5:	72 73                	jb     ce3a <_IO_stdin_used+0xe3a>
    cdc7:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
    cdce:	00 00                	add    BYTE PTR [rax],al
    cdd0:	45 72 72             	rex.RB jb ce45 <_IO_stdin_used+0xe45>
    cdd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd4:	72 20                	jb     cdf6 <_IO_stdin_used+0xdf6>
    cdd6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cdd7:	70 65                	jo     ce3e <_IO_stdin_used+0xe3e>
    cdd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cdda:	69 6e 67 20 25 73 20 	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
    cde1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    cde3:	72 20                	jb     ce05 <_IO_stdin_used+0xe05>
    cde5:	65 78 70             	gs js  ce58 <_IO_stdin_used+0xe58>
    cde8:	6c                   	ins    BYTE PTR es:[rdi],dx
    cde9:	2f                   	(bad)  
    cdea:	69 6d 70 6c 69 63 69 	imul   ebp,DWORD PTR [rbp+0x70],0x6963696c
    cdf1:	74 20                	je     ce13 <_IO_stdin_used+0xe13>
    cdf3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    cdf6:	79 20                	jns    ce18 <_IO_stdin_used+0xe18>
    cdf8:	70 61                	jo     ce5b <_IO_stdin_used+0xe5b>
    cdfa:	72 73                	jb     ce6f <_IO_stdin_used+0xe6f>
    cdfc:	69 6e 67 0a 00 69 70 	imul   ebp,DWORD PTR [rsi+0x67],0x7069000a
    ce03:	76 34                	jbe    ce39 <_IO_stdin_used+0xe39>
    ce05:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    ce08:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    ce0f:	20 
    ce10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    ce11:	70 65                	jo     ce78 <_IO_stdin_used+0xe78>
    ce13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce14:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # d88d <_IO_stdin_used+0x188d>
    ce1a:	00 00                	add    BYTE PTR [rax],al
    ce1c:	00 00                	add    BYTE PTR [rax],al
    ce1e:	00 00                	add    BYTE PTR [rax],al
    ce20:	52                   	push   rdx
    ce21:	55                   	push   rbp
    ce22:	4e                   	rex.WRX
    ce23:	4e                   	rex.WRX
    ce24:	49                   	rex.WB
    ce25:	4e                   	rex.WRX
    ce26:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce2a:	20 44 45 4d          	and    BYTE PTR [rbp+rax*2+0x4d],al
    ce2e:	4f                   	rex.WRXB
    ce2f:	4e 53                	rex.WRX push rbx
    ce31:	54                   	push   rsp
    ce32:	52                   	push   rdx
    ce33:	41 54                	push   r12
    ce35:	49                   	rex.WB
    ce36:	4f                   	rex.WRXB
    ce37:	4e 20 4d 4f          	rex.WRX and BYTE PTR [rbp+0x4f],r9b
    ce3b:	44                   	rex.R
    ce3c:	45                   	rex.RB
    ce3d:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce41:	55                   	push   rbp
    ce42:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce45:	56                   	push   rsi
    ce46:	45 20 31             	and    BYTE PTR [r9],r14b
    ce49:	30 20                	xor    BYTE PTR [rax],ah
    ce4b:	53                   	push   rbx
    ce4c:	45                   	rex.RB
    ce4d:	43                   	rex.XB
    ce4e:	4f                   	rex.WRXB
    ce4f:	4e                   	rex.WRX
    ce50:	44 53                	rex.R push rbx
    ce52:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce56:	41                   	rex.B
    ce57:	42                   	rex.X
    ce58:	4f 52                	rex.WRXB push r10
    ce5a:	54                   	push   rsp
    ce5b:	2e 00 00             	cs add BYTE PTR [rax],al
    ce5e:	00 00                	add    BYTE PTR [rax],al
    ce60:	52                   	push   rdx
    ce61:	55                   	push   rbp
    ce62:	4e                   	rex.WRX
    ce63:	4e                   	rex.WRX
    ce64:	49                   	rex.WB
    ce65:	4e                   	rex.WRX
    ce66:	47 20 49 4e          	rex.RXB and BYTE PTR [r9+0x4e],r9b
    ce6a:	20 54 45 53          	and    BYTE PTR [rbp+rax*2+0x53],dl
    ce6e:	54                   	push   rsp
    ce6f:	20 4d 4f             	and    BYTE PTR [rbp+0x4f],cl
    ce72:	44                   	rex.R
    ce73:	45                   	rex.RB
    ce74:	2e 20 59 4f          	cs and BYTE PTR [rcx+0x4f],bl
    ce78:	55                   	push   rbp
    ce79:	20 48 41             	and    BYTE PTR [rax+0x41],cl
    ce7c:	56                   	push   rsi
    ce7d:	45 20 31             	and    BYTE PTR [r9],r14b
    ce80:	30 20                	xor    BYTE PTR [rax],ah
    ce82:	53                   	push   rbx
    ce83:	45                   	rex.RB
    ce84:	43                   	rex.XB
    ce85:	4f                   	rex.WRXB
    ce86:	4e                   	rex.WRX
    ce87:	44 53                	rex.R push rbx
    ce89:	20 54 4f 20          	and    BYTE PTR [rdi+rcx*2+0x20],dl
    ce8d:	41                   	rex.B
    ce8e:	42                   	rex.X
    ce8f:	4f 52                	rex.WRXB push r10
    ce91:	54                   	push   rsp
    ce92:	2e 00 55 6e          	cs add BYTE PTR [rbp+0x6e],dl
    ce96:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    ce9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ce9b:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    ce9e:	67 75 6d             	addr32 jne cf0e <_IO_stdin_used+0xf0e>
    cea1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    cea3:	74 20                	je     cec5 <_IO_stdin_used+0xec5>
    cea5:	2d 25 63 0a 00       	sub    eax,0xa6325
    ceaa:	70 64                	jo     cf10 <_IO_stdin_used+0xf10>
    ceac:	71 68                	jno    cf16 <_IO_stdin_used+0xf16>
    ceae:	74 65                	je     cf15 <_IO_stdin_used+0xf15>
    ceb0:	69 3a 00 2f 65 74    	imul   edi,DWORD PTR [rdx],0x74652f00
    ceb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ceb8:	76 69                	jbe    cf23 <_IO_stdin_used+0xf23>
    ceba:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cec1:	79 2e 
    cec3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cec6:	66 00 46 69          	data16 add BYTE PTR [rsi+0x69],al
    ceca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cecb:	73 69                	jae    cf36 <_IO_stdin_used+0xf36>
    cecd:	73 68                	jae    cf37 <_IO_stdin_used+0xf37>
    cecf:	65 64 20 6c 6f 61    	gs and BYTE PTR fs:[rdi+rbp*2+0x61],ch
    ced5:	64 69 6e 67 20 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70786520
    cedc:	70 
    cedd:	6c                   	ins    BYTE PTR es:[rdi],dx
    cede:	69 63 69 74 20 64 65 	imul   esp,DWORD PTR [rbx+0x69],0x65642074
    cee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cee6:	79 20                	jns    cf08 <_IO_stdin_used+0xf08>
    cee8:	66 69 6c 65 28 2f 65 	imul   bp,WORD PTR [rbp+riz*2+0x28],0x652f
    ceef:	74 63                	je     cf54 <_IO_stdin_used+0xf54>
    cef1:	2f                   	(bad)  
    cef2:	76 69                	jbe    cf5d <_IO_stdin_used+0xf5d>
    cef4:	67 69 6c 2f 64 65 6e 	imul   ebp,DWORD PTR [edi+ebp*1+0x64],0x2e796e65
    cefb:	79 2e 
    cefd:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    cf00:	66 29 00             	sub    WORD PTR [rax],ax
    cf03:	2f                   	(bad)  
    cf04:	65 74 63             	gs je  cf6a <_IO_stdin_used+0xf6a>
    cf07:	2f                   	(bad)  
    cf08:	76 69                	jbe    cf73 <_IO_stdin_used+0xf73>
    cf0a:	67 69 6c 2f 76 69 67 	imul   ebp,DWORD PTR [edi+ebp*1+0x76],0x6c696769
    cf11:	69 6c 
    cf13:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    cf17:	66 00 50 61          	data16 add BYTE PTR [rax+0x61],dl
    cf1b:	72 73                	jb     cf90 <_IO_stdin_used+0xf90>
    cf1d:	65 64 20 72 75       	gs and BYTE PTR fs:[rdx+0x75],dh
    cf22:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf23:	65 20 66 69          	and    BYTE PTR gs:[rsi+0x69],ah
    cf27:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf28:	65 73 00             	gs jae cf2b <_IO_stdin_used+0xf2b>
    cf2b:	00 00                	add    BYTE PTR [rax],al
    cf2d:	00 00                	add    BYTE PTR [rax],al
    cf2f:	00 56 49             	add    BYTE PTR [rsi+0x49],dl
    cf32:	47                   	rex.RXB
    cf33:	49                   	rex.WB
    cf34:	4c 20 6c 69 73       	rex.WR and BYTE PTR [rcx+rbp*2+0x73],r13b
    cf39:	74 65                	je     cfa0 <_IO_stdin_used+0xfa0>
    cf3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf3c:	69 6e 67 20 6f 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
    cf43:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    cf4a:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    cf4d:	25 73 0a 00 70       	and    eax,0x70000a73
    cf52:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    cf55:	5f                   	pop    rdi
    cf56:	6d                   	ins    DWORD PTR es:[rdi],dx
    cf57:	67 72 20             	addr32 jb cf7a <_IO_stdin_used+0xf7a>
    cf5a:	69 6e 20 70 63 61 70 	imul   ebp,DWORD PTR [rsi+0x20],0x70616370
    cf61:	5f                   	pop    rdi
    cf62:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cf63:	70 65                	jo     cfca <_IO_stdin_used+0xfca>
    cf65:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf66:	5f                   	pop    rdi
    cf67:	6c                   	ins    BYTE PTR es:[rdi],dx
    cf68:	69 76 65 00 00 00 00 	imul   esi,DWORD PTR [rsi+0x65],0x0
    cf6f:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    cf72:	65 63 72 79          	movsxd esi,DWORD PTR gs:[rdx+0x79]
    cf76:	70 74                	jo     cfec <_IO_stdin_used+0xfec>
    cf78:	65 64 20 4e 53       	gs and BYTE PTR fs:[rsi+0x53],cl
    cf7d:	48 20 63 6f          	rex.W and BYTE PTR [rbx+0x6f],spl
    cf81:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cf82:	66 69 67 20 73 65    	imul   sp,WORD PTR [rdi+0x20],0x6573
    cf88:	72 76                	jb     d000 <_IO_stdin_used+0x1000>
    cf8a:	65 72 20             	gs jb  cfad <_IO_stdin_used+0xfad>
    cf8d:	73 74                	jae    d003 <_IO_stdin_used+0x1003>
    cf8f:	61                   	(bad)  
    cf90:	72 74                	jb     d006 <_IO_stdin_used+0x1006>
    cf92:	65 64 3a 20          	gs cmp ah,BYTE PTR fs:[rax]
    cf96:	31 32                	xor    DWORD PTR [rdx],esi
    cf98:	37                   	(bad)  
    cf99:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    cf9c:	30 2e                	xor    BYTE PTR [rsi],ch
    cf9e:	31 3a                	xor    DWORD PTR [rdx],edi
    cfa0:	36 34 31             	ss xor al,0x31
    cfa3:	00 d3                	add    bl,dl
    cfa5:	9a                   	(bad)  
    cfa6:	ff                   	(bad)  
    cfa7:	ff 10                	call   QWORD PTR [rax]
    cfa9:	9b                   	fwait
    cfaa:	ff                   	(bad)  
    cfab:	ff 4e 9b             	dec    DWORD PTR [rsi-0x65]
    cfae:	ff                   	(bad)  
    cfaf:	ff 4e 9b             	dec    DWORD PTR [rsi-0x65]
    cfb2:	ff                   	(bad)  
    cfb3:	ff                   	(bad)  
    cfb4:	df 9a ff ff ee 9a    	fistp  WORD PTR [rdx-0x65110001]
    cfba:	ff                   	(bad)  
    cfbb:	ff 4e 9b             	dec    DWORD PTR [rsi-0x65]
    cfbe:	ff                   	(bad)  
    cfbf:	ff 4e 9b             	dec    DWORD PTR [rsi-0x65]
    cfc2:	ff                   	(bad)  
    cfc3:	ff 4e 9b             	dec    DWORD PTR [rsi-0x65]
    cfc6:	ff                   	(bad)  
    cfc7:	ff 4e 9b             	dec    DWORD PTR [rsi-0x65]
    cfca:	ff                   	(bad)  
    cfcb:	ff 4e 9b             	dec    DWORD PTR [rsi-0x65]
    cfce:	ff                   	(bad)  
    cfcf:	ff 4e 9b             	dec    DWORD PTR [rsi-0x65]
    cfd2:	ff                   	(bad)  
    cfd3:	ff                   	(bad)  
    cfd4:	fe                   	(bad)  
    cfd5:	9a                   	(bad)  
    cfd6:	ff                   	(bad)  
    cfd7:	ff 07                	inc    DWORD PTR [rdi]
    cfd9:	9b                   	fwait
    cfda:	ff                   	(bad)  
    cfdb:	ff 4e 9b             	dec    DWORD PTR [rsi-0x65]
    cfde:	ff                   	(bad)  
    cfdf:	ff 4e 9b             	dec    DWORD PTR [rsi-0x65]
    cfe2:	ff                   	(bad)  
    cfe3:	ff 2f                	jmp    FWORD PTR [rdi]
    cfe5:	9b                   	fwait
    cfe6:	ff                   	(bad)  
    cfe7:	ff 0a                	dec    DWORD PTR [rdx]
    cfe9:	43 61                	rex.XB (bad) 
    cfeb:	75 67                	jne    d054 <_IO_stdin_used+0x1054>
    cfed:	68 74 20 73 69       	push   0x69732074
    cff2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    cff4:	61                   	(bad)  
    cff5:	6c                   	ins    BYTE PTR es:[rdi],dx
    cff6:	20 25 64 20 61 74    	and    BYTE PTR [rip+0x74612064],ah        # 7461f060 <_end+0x744e0020>
    cffc:	20 25 73 2c 20 65    	and    BYTE PTR [rip+0x65202c73],ah        # 6520fc75 <_end+0x650d0c35>
    d002:	78 69                	js     d06d <_IO_stdin_used+0x106d>
    d004:	74 69                	je     d06f <_IO_stdin_used+0x106f>
    d006:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d007:	67 2e 2e 2e 0a 00    	cs cs cs or al,BYTE PTR [eax]
    d00d:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
    d011:	61                   	(bad)  
    d012:	6c                   	ins    BYTE PTR es:[rdi],dx
    d013:	20 50 61             	and    BYTE PTR [rax+0x61],dl
    d016:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d019:	74 73                	je     d08e <_IO_stdin_used+0x108e>
    d01b:	20 43 61             	and    BYTE PTR [rbx+0x61],al
    d01e:	75 67                	jne    d087 <_IO_stdin_used+0x1087>
    d020:	68 74 3a 20 25       	push   0x25203a74
    d025:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    d028:	53                   	push   rbx
    d029:	74 61                	je     d08c <_IO_stdin_used+0x108c>
    d02b:	74 69                	je     d096 <_IO_stdin_used+0x1096>
    d02d:	73 74                	jae    d0a3 <_IO_stdin_used+0x10a3>
    d02f:	69 63 73 0a 49 70 20 	imul   esp,DWORD PTR [rbx+0x73],0x2070490a
    d036:	61                   	(bad)  
    d037:	64 64 72 65          	fs fs jb d0a0 <_IO_stdin_used+0x10a0>
    d03b:	73 73                	jae    d0b0 <_IO_stdin_used+0x10b0>
    d03d:	20 20                	and    BYTE PTR [rax],ah
    d03f:	20 20                	and    BYTE PTR [rax],ah
    d041:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    d043:	75 6e                	jne    d0b3 <_IO_stdin_used+0x10b3>
    d045:	74 0a                	je     d051 <_IO_stdin_used+0x1051>
    d047:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d04c:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d051:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    d056:	2d 2d 00 00 00       	sub    eax,0x2d
    d05b:	00 00                	add    BYTE PTR [rax],al
    d05d:	00 00                	add    BYTE PTR [rax],al
    d05f:	00 25 73 0a 09 09    	add    BYTE PTR [rip+0x9090a73],ah        # 909dad8 <_end+0x8f5ea98>
    d065:	74 6f                	je     d0d6 <_IO_stdin_used+0x10d6>
    d067:	74 61                	je     d0ca <_IO_stdin_used+0x10ca>
    d069:	6c                   	ins    BYTE PTR es:[rdi],dx
    d06a:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    d06d:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d070:	74 73                	je     d0e5 <_IO_stdin_used+0x10e5>
    d072:	20 3d 20 25 64 0a    	and    BYTE PTR [rip+0xa642520],bh        # a64f598 <_end+0xa510558>
    d078:	09 09                	or     DWORD PTR [rcx],ecx
    d07a:	74 6f                	je     d0eb <_IO_stdin_used+0x10eb>
    d07c:	74 61                	je     d0df <_IO_stdin_used+0x10df>
    d07e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d07f:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d082:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d083:	74 20                	je     d0a5 <_IO_stdin_used+0x10a5>
    d085:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d08a:	09 09                	or     DWORD PTR [rcx],ecx
    d08c:	74 6f                	je     d0fd <_IO_stdin_used+0x10fd>
    d08e:	74 61                	je     d0f1 <_IO_stdin_used+0x10f1>
    d090:	6c                   	ins    BYTE PTR es:[rdi],dx
    d091:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d094:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d097:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d09c:	09 09                	or     DWORD PTR [rcx],ecx
    d09e:	54                   	push   rsp
    d09f:	43 50                	rex.XB push r8
    d0a1:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0a5:	74 20                	je     d0c7 <_IO_stdin_used+0x10c7>
    d0a7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0ac:	09 09                	or     DWORD PTR [rcx],ecx
    d0ae:	54                   	push   rsp
    d0af:	43 50                	rex.XB push r8
    d0b1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0b4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0b7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0bc:	09 09                	or     DWORD PTR [rcx],ecx
    d0be:	55                   	push   rbp
    d0bf:	44 50                	rex.R push rax
    d0c1:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0c4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0c5:	74 20                	je     d0e7 <_IO_stdin_used+0x10e7>
    d0c7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0cc:	09 09                	or     DWORD PTR [rcx],ecx
    d0ce:	55                   	push   rbp
    d0cf:	44 50                	rex.R push rax
    d0d1:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0d4:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0d7:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0dc:	09 09                	or     DWORD PTR [rcx],ecx
    d0de:	49                   	rex.WB
    d0df:	43                   	rex.XB
    d0e0:	4d 50                	rex.WRB push r8
    d0e2:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d0e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d0e6:	74 20                	je     d108 <_IO_stdin_used+0x1108>
    d0e8:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0ed:	09 09                	or     DWORD PTR [rcx],ecx
    d0ef:	49                   	rex.WB
    d0f0:	43                   	rex.XB
    d0f1:	4d 50                	rex.WRB push r8
    d0f3:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    d0f6:	63 76 20             	movsxd esi,DWORD PTR [rsi+0x20]
    d0f9:	3d 20 25 64 0a       	cmp    eax,0xa642520
    d0fe:	0a 00                	or     al,BYTE PTR [rax]
    d100:	77 00                	ja     d102 <_IO_stdin_used+0x1102>
    d102:	2f                   	(bad)  
    d103:	75 73                	jne    d178 <_IO_stdin_used+0x1178>
    d105:	72 2f                	jb     d136 <_IO_stdin_used+0x1136>
    d107:	73 68                	jae    d171 <_IO_stdin_used+0x1171>
    d109:	61                   	(bad)  
    d10a:	72 65                	jb     d171 <_IO_stdin_used+0x1171>
    d10c:	2f                   	(bad)  
    d10d:	76 69                	jbe    d178 <_IO_stdin_used+0x1178>
    d10f:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d116:	63 61 
    d118:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d11b:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d11f:	00 43 61             	add    BYTE PTR [rbx+0x61],al
    d122:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d123:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d124:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d125:	74 20                	je     d147 <_IO_stdin_used+0x1147>
    d127:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d128:	70 65                	jo     d18f <_IO_stdin_used+0x118f>
    d12a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d12b:	20 2f                	and    BYTE PTR [rdi],ch
    d12d:	75 73                	jne    d1a2 <_IO_stdin_used+0x11a2>
    d12f:	72 2f                	jb     d160 <_IO_stdin_used+0x1160>
    d131:	73 68                	jae    d19b <_IO_stdin_used+0x119b>
    d133:	61                   	(bad)  
    d134:	72 65                	jb     d19b <_IO_stdin_used+0x119b>
    d136:	2f                   	(bad)  
    d137:	76 69                	jbe    d1a2 <_IO_stdin_used+0x11a2>
    d139:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d140:	63 61 
    d142:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d145:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d149:	3a 20                	cmp    ah,BYTE PTR [rax]
    d14b:	70 72                	jo     d1bf <_IO_stdin_used+0x11bf>
    d14d:	69 6e 74 69 6e 67 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
    d154:	61                   	(bad)  
    d155:	72 70                	jb     d1c7 <_IO_stdin_used+0x11c7>
    d157:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d15a:	68 65 20 74 6f       	push   0x6f742065
    d15f:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    d162:	72 65                	jb     d1c9 <_IO_stdin_used+0x11c9>
    d164:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d166:	00 25 73 20 2d 3e    	add    BYTE PTR [rip+0x3e2d2073],ah        # 3e2df1df <_end+0x3e1a019f>
    d16c:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 2500dbe5 <_end+0x24eceba5>
    d172:	73 2c                	jae    d1a0 <_IO_stdin_used+0x11a0>
    d174:	25 73 0a 00 31       	and    eax,0x31000a73
    d179:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d17c:	30 00                	xor    BYTE PTR [rax],al
    d17e:	00 00                	add    BYTE PTR [rax],al
    d180:	56                   	push   rsi
    d181:	49                   	rex.WB
    d182:	47                   	rex.RXB
    d183:	49                   	rex.WB
    d184:	4c 20 55 54          	rex.WR and BYTE PTR [rbp+0x54],r10b
    d188:	4d 20 25 73 0a 09 2d 	rex.WRB and BYTE PTR [rip+0x2d090a73],r12b        # 2d09dc02 <_end+0x2cf5ebc2>
    d18f:	64 3a 20             	cmp    ah,BYTE PTR fs:[rax]
    d192:	64 65 62             	fs gs (bad) 
    d195:	75 67                	jne    d1fe <_IO_stdin_used+0x11fe>
    d197:	20 6d 6f             	and    BYTE PTR [rbp+0x6f],ch
    d19a:	64 65 0a 09          	fs or  cl,BYTE PTR gs:[rcx]
    d19e:	2d 68 3a 20 64       	sub    eax,0x64203a68
    d1a3:	69 73 70 6c 61 79 20 	imul   esi,DWORD PTR [rbx+0x70],0x2079616c
    d1aa:	74 68                	je     d214 <_IO_stdin_used+0x1214>
    d1ac:	69 73 20 6d 65 73 73 	imul   esi,DWORD PTR [rbx+0x20],0x7373656d
    d1b3:	61                   	(bad)  
    d1b4:	67 65 0a 09          	or     cl,BYTE PTR gs:[ecx]
    d1b8:	2d 69 20 3c 69       	sub    eax,0x693c2069
    d1bd:	66 61                	data16 (bad) 
    d1bf:	63 65 3e             	movsxd esp,DWORD PTR [rbp+0x3e]
    d1c2:	3a 20                	cmp    ah,BYTE PTR [rax]
    d1c4:	73 65                	jae    d22b <_IO_stdin_used+0x122b>
    d1c6:	74 20                	je     d1e8 <_IO_stdin_used+0x11e8>
    d1c8:	74 68                	je     d232 <_IO_stdin_used+0x1232>
    d1ca:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
    d1ce:	74 65                	je     d235 <_IO_stdin_used+0x1235>
    d1d0:	72 66                	jb     d238 <_IO_stdin_used+0x1238>
    d1d2:	61                   	(bad)  
    d1d3:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    d1d6:	74 6f                	je     d247 <_IO_stdin_used+0x1247>
    d1d8:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d1dc:	74 65                	je     d243 <_IO_stdin_used+0x1243>
    d1de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d1df:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    d1e2:	0a 09                	or     cl,BYTE PTR [rcx]
    d1e4:	2d 70 20 70 72       	sub    eax,0x72702070
    d1e9:	69 6e 74 20 70 61 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63617020
    d1f0:	6b 65 74 73          	imul   esp,DWORD PTR [rbp+0x74],0x73
    d1f4:	0a 09                	or     cl,BYTE PTR [rcx]
    d1f6:	2d 71 20 65 78       	sub    eax,0x78652071
    d1fb:	69 74 20 71 75 69 65 	imul   esi,DWORD PTR [rax+riz*1+0x71],0x74656975
    d202:	74 
    d203:	6c                   	ins    BYTE PTR es:[rdi],dx
    d204:	79 0a                	jns    d210 <_IO_stdin_used+0x1210>
    d206:	00 72 62             	add    BYTE PTR [rdx+0x62],dh
    d209:	00 2f                	add    BYTE PTR [rdi],ch
    d20b:	70 72                	jo     d27f <_IO_stdin_used+0x127f>
    d20d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d20e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    d210:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    d213:	69 6e 66 6f 00 6d 6f 	imul   ebp,DWORD PTR [rsi+0x66],0x6f6d006f
    d21a:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    d21d:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    d220:	6d                   	ins    DWORD PTR es:[rdi],dx
    d221:	65 00 46 6f          	add    BYTE PTR gs:[rsi+0x6f],al
    d225:	75 6e                	jne    d295 <_IO_stdin_used+0x1295>
    d227:	64 20 25 64 20 63 70 	and    BYTE PTR fs:[rip+0x70632064],ah        # 7063f292 <_end+0x70500252>
    d22e:	75 73                	jne    d2a3 <_IO_stdin_used+0x12a3>
    d230:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    d232:	25 73 00 00 00       	and    eax,0x73
    d237:	00 e2                	add    dl,ah
    d239:	96                   	xchg   esi,eax
    d23a:	88 e2                	mov    dl,ah
    d23c:	96                   	xchg   esi,eax
    d23d:	88 e2                	mov    dl,ah
    d23f:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d246:	88 e2                	mov    dl,ah
    d248:	96                   	xchg   esi,eax
    d249:	88 e2                	mov    dl,ah
    d24b:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d252:	88 e2                	mov    dl,ah
    d254:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d25b:	96                   	xchg   esi,eax
    d25c:	88 e2                	mov    dl,ah
    d25e:	96                   	xchg   esi,eax
    d25f:	88 e2                	mov    dl,ah
    d261:	96                   	xchg   esi,eax
    d262:	88 e2                	mov    dl,ah
    d264:	96                   	xchg   esi,eax
    d265:	88 e2                	mov    dl,ah
    d267:	96                   	xchg   esi,eax
    d268:	88 e2                	mov    dl,ah
    d26a:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d271:	96                   	xchg   esi,eax
    d272:	88 e2                	mov    dl,ah
    d274:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d27b:	88 0a                	mov    BYTE PTR [rdx],cl
    d27d:	e2 96                	loop   d215 <_IO_stdin_used+0x1215>
    d27f:	88 e2                	mov    dl,ah
    d281:	96                   	xchg   esi,eax
    d282:	88 e2                	mov    dl,ah
    d284:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d28b:	88 e2                	mov    dl,ah
    d28d:	96                   	xchg   esi,eax
    d28e:	88 e2                	mov    dl,ah
    d290:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d297:	88 e2                	mov    dl,ah
    d299:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2a0:	88 e2                	mov    dl,ah
    d2a2:	80 81 e2 80 81 e2 80 	add    BYTE PTR [rcx-0x1d7e7f1e],0x80
    d2a9:	81 e2 80 81 e2 80    	and    edx,0x80e28180
    d2af:	81 e2 80 81 20 e2    	and    edx,0xe2208180
    d2b5:	96                   	xchg   esi,eax
    d2b6:	88 e2                	mov    dl,ah
    d2b8:	96                   	xchg   esi,eax
    d2b9:	88 e2                	mov    dl,ah
    d2bb:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2c2:	88 0a                	mov    BYTE PTR [rdx],cl
    d2c4:	e2 96                	loop   d25c <_IO_stdin_used+0x125c>
    d2c6:	88 e2                	mov    dl,ah
    d2c8:	96                   	xchg   esi,eax
    d2c9:	88 e2                	mov    dl,ah
    d2cb:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d2d2:	88 e2                	mov    dl,ah
    d2d4:	96                   	xchg   esi,eax
    d2d5:	88 e2                	mov    dl,ah
    d2d7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2de:	88 e2                	mov    dl,ah
    d2e0:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2e7:	88 e2                	mov    dl,ah
    d2e9:	80 81 20 20 e2 96 88 	add    BYTE PTR [rcx-0x691ddfe0],0x88
    d2f0:	e2 96                	loop   d288 <_IO_stdin_used+0x1288>
    d2f2:	88 e2                	mov    dl,ah
    d2f4:	96                   	xchg   esi,eax
    d2f5:	88 e2                	mov    dl,ah
    d2f7:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d2fe:	88 e2                	mov    dl,ah
    d300:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d307:	88 0a                	mov    BYTE PTR [rdx],cl
    d309:	e2 80                	loop   d28b <_IO_stdin_used+0x128b>
    d30b:	81 e2 96 88 e2 96    	and    edx,0x96e28896
    d311:	88 e2                	mov    dl,ah
    d313:	80 81 20 e2 96 88 e2 	add    BYTE PTR [rcx-0x77691de0],0xe2
    d31a:	96                   	xchg   esi,eax
    d31b:	88 e2                	mov    dl,ah
    d31d:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d324:	88 e2                	mov    dl,ah
    d326:	96                   	xchg   esi,eax
    d327:	88 e2                	mov    dl,ah
    d329:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d330:	88 e2                	mov    dl,ah
    d332:	80 81 20 20 20 e2 96 	add    BYTE PTR [rcx-0x1ddfdfe0],0x96
    d339:	88 e2                	mov    dl,ah
    d33b:	96                   	xchg   esi,eax
    d33c:	88 e2                	mov    dl,ah
    d33e:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d345:	88 e2                	mov    dl,ah
    d347:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d34e:	88 0a                	mov    BYTE PTR [rdx],cl
    d350:	20 e2                	and    dl,ah
    d352:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d359:	88 e2                	mov    dl,ah
    d35b:	96                   	xchg   esi,eax
    d35c:	88 e2                	mov    dl,ah
    d35e:	96                   	xchg   esi,eax
    d35f:	88 e2                	mov    dl,ah
    d361:	80 81 e2 80 81 20 e2 	add    BYTE PTR [rcx+0x208180e2],0xe2
    d368:	96                   	xchg   esi,eax
    d369:	88 e2                	mov    dl,ah
    d36b:	96                   	xchg   esi,eax
    d36c:	88 e2                	mov    dl,ah
    d36e:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d375:	88 e2                	mov    dl,ah
    d377:	96                   	xchg   esi,eax
    d378:	88 e2                	mov    dl,ah
    d37a:	96                   	xchg   esi,eax
    d37b:	88 e2                	mov    dl,ah
    d37d:	96                   	xchg   esi,eax
    d37e:	88 e2                	mov    dl,ah
    d380:	96                   	xchg   esi,eax
    d381:	88 e2                	mov    dl,ah
    d383:	96                   	xchg   esi,eax
    d384:	88 e2                	mov    dl,ah
    d386:	80 81 e2 80 81 e2 96 	add    BYTE PTR [rcx-0x1d7e7f1e],0x96
    d38d:	88 e2                	mov    dl,ah
    d38f:	96                   	xchg   esi,eax
    d390:	88 e2                	mov    dl,ah
    d392:	80 81 e2 96 88 e2 96 	add    BYTE PTR [rcx-0x1d77691e],0x96
    d399:	88 e2                	mov    dl,ah
    d39b:	96                   	xchg   esi,eax
    d39c:	88 e2                	mov    dl,ah
    d39e:	96                   	xchg   esi,eax
    d39f:	88 e2                	mov    dl,ah
    d3a1:	96                   	xchg   esi,eax
    d3a2:	88 e2                	mov    dl,ah
    d3a4:	96                   	xchg   esi,eax
    d3a5:	88 e2                	mov    dl,ah
    d3a7:	96                   	xchg   esi,eax
    d3a8:	88 00                	mov    BYTE PTR [rax],al
    d3aa:	00 00                	add    BYTE PTR [rax],al
    d3ac:	00 00                	add    BYTE PTR [rax],al
    d3ae:	00 00                	add    BYTE PTR [rax],al
    d3b0:	0a 00                	or     al,BYTE PTR [rax]
    d3b2:	0d 00 00 00 00       	or     eax,0x0
    d3b7:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d3ba:	68 5f 73 65 72       	push   0x7265735f
    d3bf:	76 65                	jbe    d426 <_IO_stdin_used+0x1426>
    d3c1:	72 2e                	jb     d3f1 <_IO_stdin_used+0x13f1>
    d3c3:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3c5:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3c8:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    d3cf:	20 
    d3d0:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    d3d3:	61                   	(bad)  
    d3d4:	74 65                	je     d43b <_IO_stdin_used+0x143b>
    d3d6:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    d3d9:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d3dc:	74 00                	je     d3de <_IO_stdin_used+0x13de>
    d3de:	00 00                	add    BYTE PTR [rax],al
    d3e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d3e1:	73 68                	jae    d44b <_IO_stdin_used+0x144b>
    d3e3:	5f                   	pop    rdi
    d3e4:	73 65                	jae    d44b <_IO_stdin_used+0x144b>
    d3e6:	72 76                	jb     d45e <_IO_stdin_used+0x145e>
    d3e8:	65 72 2e             	gs jb  d419 <_IO_stdin_used+0x1419>
    d3eb:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d3ed:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d3f0:	69 6c 75 72 65 20 69 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e692065
    d3f7:	6e 
    d3f8:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    d3fb:	74 73                	je     d470 <_IO_stdin_used+0x1470>
    d3fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d3fe:	63 6b 6f             	movsxd ebp,DWORD PTR [rbx+0x6f]
    d401:	70 74                	jo     d477 <_IO_stdin_used+0x1477>
    d403:	00 00                	add    BYTE PTR [rax],al
    d405:	00 00                	add    BYTE PTR [rax],al
    d407:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d40a:	68 5f 73 65 72       	push   0x7265735f
    d40f:	76 65                	jbe    d476 <_IO_stdin_used+0x1476>
    d411:	72 2e                	jb     d441 <_IO_stdin_used+0x1441>
    d413:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d415:	20 62 69             	and    BYTE PTR [rdx+0x69],ah
    d418:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d419:	64 69 6e 67 20 6f 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20666f20
    d420:	20 
    d421:	73 6f                	jae    d492 <_IO_stdin_used+0x1492>
    d423:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    d426:	74 20                	je     d448 <_IO_stdin_used+0x1448>
    d428:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    d42a:	72 20                	jb     d44c <_IO_stdin_used+0x144c>
    d42c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d42d:	73 68                	jae    d497 <_IO_stdin_used+0x1497>
    d42f:	5f                   	pop    rdi
    d430:	66 64 20 66 61       	data16 and BYTE PTR fs:[rsi+0x61],ah
    d435:	69 6c 65 64 00 00 00 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
    d43c:	00 
    d43d:	00 00                	add    BYTE PTR [rax],al
    d43f:	00 6e 73             	add    BYTE PTR [rsi+0x73],ch
    d442:	68 5f 73 65 72       	push   0x7265735f
    d447:	76 65                	jbe    d4ae <_IO_stdin_used+0x14ae>
    d449:	72 2e                	jb     d479 <_IO_stdin_used+0x1479>
    d44b:	63 3a                	movsxd edi,DWORD PTR [rdx]
    d44d:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    d450:	69 6c 75 72 65 20 6f 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6e6f2065
    d457:	6e 
    d458:	20 6c 69 73          	and    BYTE PTR [rcx+rbp*2+0x73],ch
    d45c:	74 65                	je     d4c3 <_IO_stdin_used+0x14c3>
    d45e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d45f:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    d466:	20 6e 73             	and    BYTE PTR [rsi+0x73],ch
    d469:	68 5f 66 64 00       	push   0x64665f
    d46e:	00 00                	add    BYTE PTR [rax],al
    d470:	46 61                	rex.RX (bad) 
    d472:	69 6c 75 72 65 20 74 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
    d479:	6f 
    d47a:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    d47d:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    d480:	74 20                	je     d4a2 <_IO_stdin_used+0x14a2>
    d482:	61                   	(bad)  
    d483:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d486:	69 65 6e 74 20 61 74 	imul   esp,DWORD PTR [rbp+0x6e],0x74612074
    d48d:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000df06 <_end+0x2feceec6>
    d493:	78 25                	js     d4ba <_IO_stdin_used+0x14ba>
    d495:	30 32                	xor    BYTE PTR [rdx],dh
    d497:	78 0a                	js     d4a3 <_IO_stdin_used+0x14a3>
    d499:	00 00                	add    BYTE PTR [rax],al
    d49b:	00 00                	add    BYTE PTR [rax],al
    d49d:	00 00                	add    BYTE PTR [rax],al
    d49f:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    d4a2:	00 00                	add    BYTE PTR [rax],al
    d4a4:	00 00                	add    BYTE PTR [rax],al
    d4a6:	00 00                	add    BYTE PTR [rax],al
    d4a8:	42 61                	rex.X (bad) 
    d4aa:	73 69                	jae    d515 <_IO_stdin_used+0x1515>
    d4ac:	63 20                	movsxd esp,DWORD PTR [rax]
    d4ae:	70 6f                	jo     d51f <_IO_stdin_used+0x151f>
    d4b0:	72 74                	jb     d526 <_IO_stdin_used+0x1526>
    d4b2:	73 63                	jae    d517 <_IO_stdin_used+0x1517>
    d4b4:	61                   	(bad)  
    d4b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4b6:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4ba:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4bf:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4c3:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4c4:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d4c7:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d4ca:	64 72 65             	fs jb  d532 <_IO_stdin_used+0x1532>
    d4cd:	73 73                	jae    d542 <_IO_stdin_used+0x1542>
    d4cf:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df48 <_IO_stdin_used+0x1f48>
    d4d5:	00 00                	add    BYTE PTR [rax],al
    d4d7:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
    d4da:	72 74                	jb     d550 <_IO_stdin_used+0x1550>
    d4dc:	73 63                	jae    d541 <_IO_stdin_used+0x1541>
    d4de:	61                   	(bad)  
    d4df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d4e0:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d4e4:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d4e9:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d4ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d4ed:	6d                   	ins    DWORD PTR es:[rdi],dx
    d4ee:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f567 <_end+0x744e0527>
    d4f4:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df6d <_IO_stdin_used+0x1f6d>
    d4fa:	00 00                	add    BYTE PTR [rax],al
    d4fc:	00 00                	add    BYTE PTR [rax],al
    d4fe:	00 00                	add    BYTE PTR [rax],al
    d500:	46                   	rex.RX
    d501:	49                   	rex.WB
    d502:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d506:	72 74                	jb     d57c <_IO_stdin_used+0x157c>
    d508:	73 63                	jae    d56d <_IO_stdin_used+0x156d>
    d50a:	61                   	(bad)  
    d50b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d50c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d510:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d515:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d518:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d519:	6d                   	ins    DWORD PTR es:[rdi],dx
    d51a:	20 49 50             	and    BYTE PTR [rcx+0x50],cl
    d51d:	20 41 64             	and    BYTE PTR [rcx+0x64],al
    d520:	64 72 65             	fs jb  d588 <_IO_stdin_used+0x1588>
    d523:	73 73                	jae    d598 <_IO_stdin_used+0x1598>
    d525:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # df9e <_IO_stdin_used+0x1f9e>
    d52b:	00 00                	add    BYTE PTR [rax],al
    d52d:	00 00                	add    BYTE PTR [rax],al
    d52f:	00 46 49             	add    BYTE PTR [rsi+0x49],al
    d532:	4e 20 70 6f          	rex.WRX and BYTE PTR [rax+0x6f],r14b
    d536:	72 74                	jb     d5ac <_IO_stdin_used+0x15ac>
    d538:	73 63                	jae    d59d <_IO_stdin_used+0x159d>
    d53a:	61                   	(bad)  
    d53b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d53c:	20 64 65 74          	and    BYTE PTR [rbp+riz*2+0x74],ah
    d540:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    d545:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    d548:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d549:	6d                   	ins    DWORD PTR es:[rdi],dx
    d54a:	20 25 73 20 61 74    	and    BYTE PTR [rip+0x74612073],ah        # 7461f5c3 <_end+0x744e0583>
    d550:	20 25 73 0a 00 30    	and    BYTE PTR [rip+0x30000a73],ah        # 3000dfc9 <_end+0x2fecef89>
    d556:	2e 30 2e             	cs xor BYTE PTR [rsi],ch
    d559:	30 2e                	xor    BYTE PTR [rsi],ch
    d55b:	31 00                	xor    DWORD PTR [rax],eax
    d55d:	30 2e                	xor    BYTE PTR [rsi],ch
    d55f:	30 2e                	xor    BYTE PTR [rsi],ch
    d561:	30 2e                	xor    BYTE PTR [rsi],ch
    d563:	31 00                	xor    DWORD PTR [rax],eax
    d565:	00 00                	add    BYTE PTR [rax],al
    d567:	00 41 72             	add    BYTE PTR [rcx+0x72],al
    d56a:	70 20                	jo     d58c <_IO_stdin_used+0x158c>
    d56c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    d56e:	74 72                	je     d5e2 <_IO_stdin_used+0x15e2>
    d570:	79 20                	jns    d592 <_IO_stdin_used+0x1592>
    d572:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    d575:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d576:	67 65 64 20 66 6f    	gs and BYTE PTR fs:[esi+0x6f],ah
    d57c:	72 20                	jb     d59e <_IO_stdin_used+0x159e>
    d57e:	69 70 20 61 64 64 72 	imul   esi,DWORD PTR [rax+0x20],0x72646461
    d585:	65 73 73             	gs jae d5fb <_IO_stdin_used+0x15fb>
    d588:	20 25 73 3a 20 77    	and    BYTE PTR [rip+0x77203a73],ah        # 77211001 <_end+0x770d1fc1>
    d58e:	61                   	(bad)  
    d58f:	73 20                	jae    d5b1 <_IO_stdin_used+0x15b1>
    d591:	25 73 20 69 73       	and    eax,0x73692073
    d596:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    d599:	77 20                	ja     d5bb <_IO_stdin_used+0x15bb>
    d59b:	25 73 00 72 00       	and    eax,0x720073
    d5a0:	2f                   	(bad)  
    d5a1:	75 73                	jne    d616 <_IO_stdin_used+0x1616>
    d5a3:	72 2f                	jb     d5d4 <_IO_stdin_used+0x15d4>
    d5a5:	73 68                	jae    d60f <_IO_stdin_used+0x160f>
    d5a7:	61                   	(bad)  
    d5a8:	72 65                	jb     d60f <_IO_stdin_used+0x160f>
    d5aa:	2f                   	(bad)  
    d5ab:	76 69                	jbe    d616 <_IO_stdin_used+0x1616>
    d5ad:	67 69 6c 2f 61 72 70 	imul   ebp,DWORD PTR [edi+ebp*1+0x61],0x61637072
    d5b4:	63 61 
    d5b6:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    d5b9:	2e 63 73 76          	cs movsxd esi,DWORD PTR [rbx+0x76]
    d5bd:	00 00                	add    BYTE PTR [rax],al
    d5bf:	00 43 6f             	add    BYTE PTR [rbx+0x6f],al
    d5c2:	75 6c                	jne    d630 <_IO_stdin_used+0x1630>
    d5c4:	64 20 6e 6f          	and    BYTE PTR fs:[rsi+0x6f],ch
    d5c8:	74 20                	je     d5ea <_IO_stdin_used+0x15ea>
    d5ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    d5cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5cc:	61                   	(bad)  
    d5cd:	64 20 61 72          	and    BYTE PTR fs:[rcx+0x72],ah
    d5d1:	70 20                	jo     d5f3 <_IO_stdin_used+0x15f3>
    d5d3:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d5d6:	68 65 20 66 72       	push   0x72662065
    d5db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d5dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    d5dd:	20 64 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ah
    d5e1:	61                   	(bad)  
    d5e2:	62 61                	(bad)  
    d5e4:	73 65                	jae    d64b <_IO_stdin_used+0x164b>
    d5e6:	2c 20                	sub    al,0x20
    d5e8:	66 69 6c 65 20 6e 6f 	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
    d5ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5f0:	65 78 69             	gs js  d65c <_IO_stdin_used+0x165c>
    d5f3:	73 74                	jae    d669 <_IO_stdin_used+0x1669>
    d5f5:	61                   	(bad)  
    d5f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d5f7:	74 00                	je     d5f9 <_IO_stdin_used+0x15f9>
    d5f9:	0a 00                	or     al,BYTE PTR [rax]
    d5fb:	2c 00                	sub    al,0x0
    d5fd:	00 00                	add    BYTE PTR [rax],al
    d5ff:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d603:	20 31                	and    BYTE PTR [rcx],dh
    d605:	2e 30 20             	cs xor BYTE PTR [rax],ah
    d608:	44                   	rex.R
    d609:	41 54                	push   r12
    d60b:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d60e:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d612:	20 31                	and    BYTE PTR [rcx],dh
    d614:	2e 32 20             	cs xor ah,BYTE PTR [rax]
    d617:	44                   	rex.R
    d618:	41 54                	push   r12
    d61a:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d61d:	00 54 4c 53          	add    BYTE PTR [rsp+rcx*2+0x53],dl
    d621:	20 31                	and    BYTE PTR [rcx],dh
    d623:	2e 33 20             	cs xor esp,DWORD PTR [rax]
    d626:	44                   	rex.R
    d627:	41 54                	push   r12
    d629:	41 3a 20             	cmp    spl,BYTE PTR [r8]
    d62c:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d62f:	69 65 6e 74 20 48 65 	imul   esp,DWORD PTR [rbp+0x6e],0x65482074
    d636:	6c                   	ins    BYTE PTR es:[rdi],dx
    d637:	6c                   	ins    BYTE PTR es:[rdi],dx
    d638:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d639:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
    d63c:	72 76                	jb     d6b4 <_IO_stdin_used+0x16b4>
    d63e:	65 72 20             	gs jb  d661 <_IO_stdin_used+0x1661>
    d641:	48                   	rex.W
    d642:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    d644:	6c                   	ins    BYTE PTR es:[rdi],dx
    d645:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d646:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
    d649:	77 20                	ja     d66b <_IO_stdin_used+0x166b>
    d64b:	53                   	push   rbx
    d64c:	65 73 73             	gs jae d6c2 <_IO_stdin_used+0x16c2>
    d64f:	69 6f 6e 20 54 69 63 	imul   ebp,DWORD PTR [rdi+0x6e],0x63695420
    d656:	6b 65 74 00          	imul   esp,DWORD PTR [rbp+0x74],0x0
    d65a:	43                   	rex.XB
    d65b:	65 72 74             	gs jb  d6d2 <_IO_stdin_used+0x16d2>
    d65e:	69 66 69 63 61 74 65 	imul   esp,DWORD PTR [rsi+0x69],0x65746163
    d665:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
    d668:	69 65 6e 74 20 4b 65 	imul   esp,DWORD PTR [rbp+0x6e],0x654b2074
    d66f:	78 00                	js     d671 <_IO_stdin_used+0x1671>
    d671:	00 00                	add    BYTE PTR [rax],al
    d673:	00 84 ab ff ff e8 aa 	add    BYTE PTR [rbx+rbp*4-0x55170001],al
    d67a:	ff                   	(bad)  
    d67b:	ff 01                	inc    DWORD PTR [rcx]
    d67d:	ab                   	stos   DWORD PTR es:[rdi],eax
    d67e:	ff                   	(bad)  
    d67f:	ff 84 ab ff ff 22 ab 	inc    DWORD PTR [rbx+rbp*4-0x54dd0001]
    d686:	ff                   	(bad)  
    d687:	ff 84 ab ff ff 84 ab 	inc    DWORD PTR [rbx+rbp*4-0x547b0001]
    d68e:	ff                   	(bad)  
    d68f:	ff 84 ab ff ff 84 ab 	inc    DWORD PTR [rbx+rbp*4-0x547b0001]
    d696:	ff                   	(bad)  
    d697:	ff 84 ab ff ff 64 ab 	inc    DWORD PTR [rbx+rbp*4-0x549b0001]
    d69e:	ff                   	(bad)  
    d69f:	ff 43 ab             	inc    DWORD PTR [rbx-0x55]
    d6a2:	ff                   	(bad)  
    d6a3:	ff 00                	inc    DWORD PTR [rax]
    d6a5:	00 00                	add    BYTE PTR [rax],al
    d6a7:	00 55 70             	add    BYTE PTR [rbp+0x70],dl
    d6aa:	64 61                	fs (bad) 
    d6ac:	74 69                	je     d717 <_IO_stdin_used+0x1717>
    d6ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d6af:	67 20 64 62 00       	and    BYTE PTR [edx+eiz*2+0x0],ah
    d6b4:	53                   	push   rbx
    d6b5:	51                   	push   rcx
    d6b6:	6c                   	ins    BYTE PTR es:[rdi],dx
    d6b7:	69 74 65 20 65 72 72 	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
    d6be:	6f 
    d6bf:	72 3a                	jb     d6fb <_IO_stdin_used+0x16fb>
    d6c1:	20 25 73 0a 00 00    	and    BYTE PTR [rip+0xa73],ah        # e13a <__GNU_EH_FRAME_HDR+0x2a>
    d6c7:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d6ca:	53                   	push   rbx
    d6cb:	45 52                	rex.RB push r10
    d6cd:	54                   	push   rsp
    d6ce:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d6d1:	54                   	push   rsp
    d6d2:	4f 20 61 72          	rex.WRXB and BYTE PTR [r9+0x72],r12b
    d6d6:	70 5f                	jo     d737 <_IO_stdin_used+0x1737>
    d6d8:	63 61 63             	movsxd esp,DWORD PTR [rcx+0x63]
    d6db:	68 65 20 28 69       	push   0x69282065
    d6e0:	70 5f                	jo     d741 <_IO_stdin_used+0x1741>
    d6e2:	61                   	(bad)  
    d6e3:	64 64 72 65          	fs fs jb d74c <_IO_stdin_used+0x174c>
    d6e7:	73 73                	jae    d75c <_IO_stdin_used+0x175c>
    d6e9:	2c 20                	sub    al,0x20
    d6eb:	6d                   	ins    DWORD PTR es:[rdi],dx
    d6ec:	61                   	(bad)  
    d6ed:	63 5f 61             	movsxd ebx,DWORD PTR [rdi+0x61]
    d6f0:	64 64 72 65          	fs fs jb d759 <_IO_stdin_used+0x1759>
    d6f4:	73 73                	jae    d769 <_IO_stdin_used+0x1769>
    d6f6:	29 20                	sub    DWORD PTR [rax],esp
    d6f8:	56                   	push   rsi
    d6f9:	41                   	rex.B
    d6fa:	4c 55                	rex.WR push rbp
    d6fc:	45 53                	rex.RB push r11
    d6fe:	20 28                	and    BYTE PTR [rax],ch
    d700:	22 25 73 22 2c 20    	and    ah,BYTE PTR [rip+0x202c2273]        # 202cf979 <_end+0x20190939>
    d706:	22 25 73 22 29 3b    	and    ah,BYTE PTR [rip+0x3b292273]        # 3b29f97f <_end+0x3b16093f>
    d70c:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d70f:	4c 69 74 65 20 65 6e 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f636e65
    d716:	63 6f 
    d718:	75 6e                	jne    d788 <_IO_stdin_used+0x1788>
    d71a:	74 65                	je     d781 <_IO_stdin_used+0x1781>
    d71c:	72 65                	jb     d783 <_IO_stdin_used+0x1783>
    d71e:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d722:	72 6f                	jb     d793 <_IO_stdin_used+0x1793>
    d724:	72 3a                	jb     d760 <_IO_stdin_used+0x1760>
    d726:	20 25 73 0a 00 2f    	and    BYTE PTR [rip+0x2f000a73],ah        # 2f00e19f <_end+0x2eecf15f>
    d72c:	75 73                	jne    d7a1 <_IO_stdin_used+0x17a1>
    d72e:	72 2f                	jb     d75f <_IO_stdin_used+0x175f>
    d730:	73 68                	jae    d79a <_IO_stdin_used+0x179a>
    d732:	61                   	(bad)  
    d733:	72 65                	jb     d79a <_IO_stdin_used+0x179a>
    d735:	2f                   	(bad)  
    d736:	76 69                	jbe    d7a1 <_IO_stdin_used+0x17a1>
    d738:	67 69 6c 2f 73 70 69 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x642e6970
    d73f:	2e 64 
    d741:	62                   	(bad)  
    d742:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d745:	4c 69 74 65 20 65 72 	imul   r14,QWORD PTR [rbp+riz*2+0x20],0x6f727265
    d74c:	72 6f 
    d74e:	72 20                	jb     d770 <_IO_stdin_used+0x1770>
    d750:	25 73 0a 00 00       	and    eax,0xa73
    d755:	00 00                	add    BYTE PTR [rax],al
    d757:	00 49 4e             	add    BYTE PTR [rcx+0x4e],cl
    d75a:	53                   	push   rbx
    d75b:	45 52                	rex.RB push r10
    d75d:	54                   	push   rsp
    d75e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    d761:	54                   	push   rsp
    d762:	4f 20 73 70          	rex.WRXB and BYTE PTR [r11+0x70],r14b
    d766:	69 5f 74 61 62 6c 65 	imul   ebx,DWORD PTR [rdi+0x74],0x656c6261
    d76d:	20 28                	and    BYTE PTR [rax],ch
    d76f:	73 65                	jae    d7d6 <_IO_stdin_used+0x17d6>
    d771:	72 76                	jb     d7e9 <_IO_stdin_used+0x17e9>
    d773:	5f                   	pop    rdi
    d774:	61                   	(bad)  
    d775:	64 64 72 2c          	fs fs jb d7a5 <_IO_stdin_used+0x17a5>
    d779:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
    d77c:	69 5f 61 64 64 72 2c 	imul   ebx,DWORD PTR [rdi+0x61],0x2c726464
    d783:	73 65                	jae    d7ea <_IO_stdin_used+0x17ea>
    d785:	72 76                	jb     d7fd <_IO_stdin_used+0x17fd>
    d787:	5f                   	pop    rdi
    d788:	70 6f                	jo     d7f9 <_IO_stdin_used+0x17f9>
    d78a:	72 74                	jb     d800 <_IO_stdin_used+0x1800>
    d78c:	2c 63                	sub    al,0x63
    d78e:	6c                   	ins    BYTE PTR es:[rdi],dx
    d78f:	69 5f 70 6f 72 74 2c 	imul   ebx,DWORD PTR [rdi+0x70],0x2c74726f
    d796:	73 65                	jae    d7fd <_IO_stdin_used+0x17fd>
    d798:	72 76                	jb     d810 <_IO_stdin_used+0x1810>
    d79a:	5f                   	pop    rdi
    d79b:	70 6b                	jo     d808 <_IO_stdin_used+0x1808>
    d79d:	74 5f                	je     d7fe <_IO_stdin_used+0x17fe>
    d79f:	73 65                	jae    d806 <_IO_stdin_used+0x1806>
    d7a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7a2:	74 2c                	je     d7d0 <_IO_stdin_used+0x17d0>
    d7a4:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7a8:	70 6b                	jo     d815 <_IO_stdin_used+0x1815>
    d7aa:	74 5f                	je     d80b <_IO_stdin_used+0x180b>
    d7ac:	73 65                	jae    d813 <_IO_stdin_used+0x1813>
    d7ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7af:	74 2c                	je     d7dd <_IO_stdin_used+0x17dd>
    d7b1:	73 65                	jae    d818 <_IO_stdin_used+0x1818>
    d7b3:	72 76                	jb     d82b <_IO_stdin_used+0x182b>
    d7b5:	5f                   	pop    rdi
    d7b6:	70 6b                	jo     d823 <_IO_stdin_used+0x1823>
    d7b8:	74 5f                	je     d819 <_IO_stdin_used+0x1819>
    d7ba:	72 65                	jb     d821 <_IO_stdin_used+0x1821>
    d7bc:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7bf:	63 6c 69 5f          	movsxd ebp,DWORD PTR [rcx+rbp*2+0x5f]
    d7c3:	70 6b                	jo     d830 <_IO_stdin_used+0x1830>
    d7c5:	74 5f                	je     d826 <_IO_stdin_used+0x1826>
    d7c7:	72 65                	jb     d82e <_IO_stdin_used+0x182e>
    d7c9:	63 76 2c             	movsxd esi,DWORD PTR [rsi+0x2c]
    d7cc:	70 72                	jo     d840 <_IO_stdin_used+0x1840>
    d7ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7cf:	74 6f                	je     d840 <_IO_stdin_used+0x1840>
    d7d1:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    d7d4:	2c 61                	sub    al,0x61
    d7d6:	76 67                	jbe    d83f <_IO_stdin_used+0x183f>
    d7d8:	5f                   	pop    rdi
    d7d9:	70 70                	jo     d84b <_IO_stdin_used+0x184b>
    d7db:	73 2c                	jae    d809 <_IO_stdin_used+0x1809>
    d7dd:	73 74                	jae    d853 <_IO_stdin_used+0x1853>
    d7df:	61                   	(bad)  
    d7e0:	72 74                	jb     d856 <_IO_stdin_used+0x1856>
    d7e2:	5f                   	pop    rdi
    d7e3:	74 69                	je     d84e <_IO_stdin_used+0x184e>
    d7e5:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7e6:	65 2c 65             	gs sub al,0x65
    d7e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7ea:	64 5f                	fs pop rdi
    d7ec:	74 69                	je     d857 <_IO_stdin_used+0x1857>
    d7ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    d7ef:	65 2c 64             	gs sub al,0x64
    d7f2:	61                   	(bad)  
    d7f3:	74 61                	je     d856 <_IO_stdin_used+0x1856>
    d7f5:	5f                   	pop    rdi
    d7f6:	70 6b                	jo     d863 <_IO_stdin_used+0x1863>
    d7f8:	74 73                	je     d86d <_IO_stdin_used+0x186d>
    d7fa:	2c 63                	sub    al,0x63
    d7fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d7fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d7fe:	74 72                	je     d872 <_IO_stdin_used+0x1872>
    d800:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d801:	6c                   	ins    BYTE PTR es:[rdi],dx
    d802:	5f                   	pop    rdi
    d803:	70 6b                	jo     d870 <_IO_stdin_used+0x1870>
    d805:	74 73                	je     d87a <_IO_stdin_used+0x187a>
    d807:	29 20                	sub    DWORD PTR [rax],esp
    d809:	56                   	push   rsi
    d80a:	41                   	rex.B
    d80b:	4c 55                	rex.WR push rbp
    d80d:	45 53                	rex.RB push r11
    d80f:	20 28                	and    BYTE PTR [rax],ch
    d811:	22 25 73 22 2c 22    	and    ah,BYTE PTR [rip+0x222c2273]        # 222cfa8a <_end+0x22190a4a>
    d817:	25 73 22 2c 25       	and    eax,0x252c2273
    d81c:	6c                   	ins    BYTE PTR es:[rdi],dx
    d81d:	64 2c 25             	fs sub al,0x25
    d820:	6c                   	ins    BYTE PTR es:[rdi],dx
    d821:	64 2c 25             	fs sub al,0x25
    d824:	64 2c 25             	fs sub al,0x25
    d827:	64 2c 25             	fs sub al,0x25
    d82a:	64 2c 25             	fs sub al,0x25
    d82d:	64 2c 25             	fs sub al,0x25
    d830:	64 2c 25             	fs sub al,0x25
    d833:	64 2c 25             	fs sub al,0x25
    d836:	6c                   	ins    BYTE PTR es:[rdi],dx
    d837:	64 2c 25             	fs sub al,0x25
    d83a:	6c                   	ins    BYTE PTR es:[rdi],dx
    d83b:	64 2c 25             	fs sub al,0x25
    d83e:	64 2c 25             	fs sub al,0x25
    d841:	64 29 3b             	sub    DWORD PTR fs:[rbx],edi
    d844:	00 53 51             	add    BYTE PTR [rbx+0x51],dl
    d847:	4c                   	rex.WR
    d848:	49 54                	rex.WB push r12
    d84a:	45 20 45 6e          	and    BYTE PTR [r13+0x6e],r8b
    d84e:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    d851:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    d852:	74 65                	je     d8b9 <_IO_stdin_used+0x18b9>
    d854:	72 65                	jb     d8bb <_IO_stdin_used+0x18bb>
    d856:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    d85a:	72 6f                	jb     d8cb <_IO_stdin_used+0x18cb>
    d85c:	72 3a                	jb     d898 <_IO_stdin_used+0x1898>
    d85e:	20 25 73 0a 00 53    	and    BYTE PTR [rip+0x53000a73],ah        # 5300e2d7 <_end+0x52ecf297>
    d864:	74 72                	je     d8d8 <_IO_stdin_used+0x18d8>
    d866:	6c                   	ins    BYTE PTR es:[rdi],dx
    d867:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d868:	63 20                	movsxd esp,DWORD PTR [rax]
    d86a:	73 75                	jae    d8e1 <_IO_stdin_used+0x18e1>
    d86c:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    d86f:	73 73                	jae    d8e4 <_IO_stdin_used+0x18e4>
    d871:	66 75 6c             	data16 jne d8e0 <_IO_stdin_used+0x18e0>
    d874:	00 51 75             	add    BYTE PTR [rcx+0x75],dl
    d877:	65 72 79             	gs jb  d8f3 <_IO_stdin_used+0x18f3>
    d87a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d87c:	25 73 0a 00 4c       	and    eax,0x4c000a73
    d881:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d882:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d889:	6f 
    d88a:	72 72                	jb     d8fe <_IO_stdin_used+0x18fe>
    d88c:	65 63 74 00 6c       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x6c]
    d891:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d892:	67 69 6e 20 69 6e 63 	imul   ebp,DWORD PTR [esi+0x20],0x6f636e69
    d899:	6f 
    d89a:	72 72                	jb     d90e <_IO_stdin_used+0x190e>
    d89c:	65 63 74 00 50       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x50]
    d8a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    d8a2:	73 73                	jae    d917 <_IO_stdin_used+0x1917>
    d8a4:	69 62 6c 65 20 46 54 	imul   esp,DWORD PTR [rdx+0x6c],0x54462065
    d8ab:	50                   	push   rax
    d8ac:	20 62 72             	and    BYTE PTR [rdx+0x72],ah
    d8af:	75 74                	jne    d925 <_IO_stdin_used+0x1925>
    d8b1:	65 20 66 6f          	and    BYTE PTR gs:[rsi+0x6f],ah
    d8b5:	72 63                	jb     d91a <_IO_stdin_used+0x191a>
    d8b7:	65 20 61 74          	and    BYTE PTR gs:[rcx+0x74],ah
    d8bb:	74 65                	je     d922 <_IO_stdin_used+0x1922>
    d8bd:	6d                   	ins    DWORD PTR es:[rdi],dx
    d8be:	70 74                	jo     d934 <_IO_stdin_used+0x1934>
    d8c0:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8c2:	25 73 28 73 75       	and    eax,0x75732873
    d8c7:	73 70                	jae    d939 <_IO_stdin_used+0x1939>
    d8c9:	65 63 74 29 20       	movsxd esi,DWORD PTR gs:[rcx+rbp*1+0x20]
    d8ce:	2d 3e 20 25 73       	sub    eax,0x7325203e
    d8d3:	2e 20 25 64 20 66 61 	cs and BYTE PTR [rip+0x61662064],ah        # 6166f93e <_end+0x615308fe>
    d8da:	69 6c 65 64 20 6c 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x676f6c20
    d8e1:	67 
    d8e2:	69 6e 73 0a 00 00 53 	imul   ebp,DWORD PTR [rsi+0x73],0x5300000a
    d8e9:	50                   	push   rax
    d8ea:	49 20 54 41 42       	rex.WB and BYTE PTR [r9+rax*2+0x42],dl
    d8ef:	4c                   	rex.WR
    d8f0:	45 20 52 45          	and    BYTE PTR [r10+0x45],r10b
    d8f4:	54                   	push   rsp
    d8f5:	52                   	push   rdx
    d8f6:	41                   	rex.B
    d8f7:	4e 53                	rex.WRX push rbx
    d8f9:	3a 20                	cmp    ah,BYTE PTR [rax]
    d8fb:	25 64 3a 20 25       	and    eax,0x25203a64
    d900:	73 3a                	jae    d93c <_IO_stdin_used+0x193c>
    d902:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d907:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261380 <_end+0x64122340>
    d90d:	0a 00                	or     al,BYTE PTR [rax]
    d90f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d912:	49 20 4e 45          	rex.WB and BYTE PTR [r14+0x45],cl
    d916:	57                   	push   rdi
    d917:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    d91a:	4e 56                	rex.WRX push rsi
    d91c:	3a 20                	cmp    ah,BYTE PTR [rax]
    d91e:	25 64 3a 20 25       	and    eax,0x25203a64
    d923:	73 3a                	jae    d95f <_IO_stdin_used+0x195f>
    d925:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d92a:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613a3 <_end+0x64122363>
    d930:	0a 00                	or     al,BYTE PTR [rax]
    d932:	00 00                	add    BYTE PTR [rax],al
    d934:	00 00                	add    BYTE PTR [rax],al
    d936:	00 00                	add    BYTE PTR [rax],al
    d938:	53                   	push   rbx
    d939:	50                   	push   rax
    d93a:	49 20 54 57 48       	rex.WB and BYTE PTR [r15+rdx*2+0x48],dl
    d93f:	20 32                	and    BYTE PTR [rdx],dh
    d941:	2f                   	(bad)  
    d942:	33 3a                	xor    edi,DWORD PTR [rdx]
    d944:	20 25 64 3a 20 25    	and    BYTE PTR [rip+0x25203a64],ah        # 252113ae <_end+0x250d236e>
    d94a:	73 3a                	jae    d986 <_IO_stdin_used+0x1986>
    d94c:	25 64 20 2d 3e       	and    eax,0x3e2d2064
    d951:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642613ca <_end+0x6412238a>
    d957:	0a 00                	or     al,BYTE PTR [rax]
    d959:	00 00                	add    BYTE PTR [rax],al
    d95b:	00 00                	add    BYTE PTR [rax],al
    d95d:	00 00                	add    BYTE PTR [rax],al
    d95f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d962:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d966:	54                   	push   rsp
    d967:	52                   	push   rdx
    d968:	59                   	pop    rcx
    d969:	3a 20                	cmp    ah,BYTE PTR [rax]
    d96b:	25 64 3a 20 53       	and    eax,0x53203a64
    d970:	45 53                	rex.RB push r11
    d972:	53                   	push   rbx
    d973:	49                   	rex.WB
    d974:	4f                   	rex.WRXB
    d975:	4e 20 45 53          	rex.WRX and BYTE PTR [rbp+0x53],r8b
    d979:	54                   	push   rsp
    d97a:	3a 20                	cmp    ah,BYTE PTR [rax]
    d97c:	25 73 3a 25 64       	and    eax,0x64253a73
    d981:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9c5 <_end+0x73120985>
    d987:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e3f1 <__GNU_EH_FRAME_HDR+0x2e1>
    d98d:	00 00                	add    BYTE PTR [rax],al
    d98f:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d992:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d996:	54                   	push   rsp
    d997:	52                   	push   rdx
    d998:	59                   	pop    rcx
    d999:	3a 20                	cmp    ah,BYTE PTR [rax]
    d99b:	25 64 3a 20 50       	and    eax,0x50203a64
    d9a0:	4f                   	rex.WRXB
    d9a1:	4c                   	rex.WR
    d9a2:	49 54                	rex.WB push r12
    d9a4:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9a8:	4e 56                	rex.WRX push rsi
    d9aa:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9ad:	44 20 33             	and    BYTE PTR [rbx],r14b
    d9b0:	2f                   	(bad)  
    d9b1:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9b3:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426142c <_end+0x641223ec>
    d9b9:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325f9fd <_end+0x731209bd>
    d9bf:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e429 <__GNU_EH_FRAME_HDR+0x319>
    d9c5:	00 00                	add    BYTE PTR [rax],al
    d9c7:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    d9ca:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    d9ce:	54                   	push   rsp
    d9cf:	52                   	push   rdx
    d9d0:	59                   	pop    rcx
    d9d1:	3a 20                	cmp    ah,BYTE PTR [rax]
    d9d3:	25 64 3a 20 50       	and    eax,0x50203a64
    d9d8:	4f                   	rex.WRXB
    d9d9:	4c                   	rex.WR
    d9da:	49 54                	rex.WB push r12
    d9dc:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    d9e0:	4e 56                	rex.WRX push rsi
    d9e2:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    d9e5:	44 20 32             	and    BYTE PTR [rdx],r14b
    d9e8:	2f                   	(bad)  
    d9e9:	33 3a                	xor    edi,DWORD PTR [rdx]
    d9eb:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 64261464 <_end+0x64122424>
    d9f1:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa35 <_end+0x731209f5>
    d9f7:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e461 <__GNU_EH_FRAME_HDR+0x351>
    d9fd:	00 00                	add    BYTE PTR [rax],al
    d9ff:	00 53 50             	add    BYTE PTR [rbx+0x50],dl
    da02:	49 20 45 4e          	rex.WB and BYTE PTR [r13+0x4e],al
    da06:	54                   	push   rsp
    da07:	52                   	push   rdx
    da08:	59                   	pop    rcx
    da09:	3a 20                	cmp    ah,BYTE PTR [rax]
    da0b:	25 64 3a 20 50       	and    eax,0x50203a64
    da10:	4f                   	rex.WRXB
    da11:	4c                   	rex.WR
    da12:	49 54                	rex.WB push r12
    da14:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    da18:	4e 56                	rex.WRX push rsi
    da1a:	20 45 4e             	and    BYTE PTR [rbp+0x4e],al
    da1d:	44 20 31             	and    BYTE PTR [rcx],r14b
    da20:	2f                   	(bad)  
    da21:	33 3a                	xor    edi,DWORD PTR [rdx]
    da23:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 6426149c <_end+0x6412245c>
    da29:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325fa6d <_end+0x73120a2d>
    da2f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e499 <__GNU_EH_FRAME_HDR+0x389>
    da35:	00 00                	add    BYTE PTR [rax],al
    da37:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    da3a:	00 00                	add    BYTE PTR [rax],al
    da3c:	00 00                	add    BYTE PTR [rax],al
    da3e:	00 00                	add    BYTE PTR [rax],al
    da40:	43 52                	rex.XB push r10
    da42:	49 54                	rex.WB push r12
    da44:	49                   	rex.WB
    da45:	43                   	rex.XB
    da46:	41                   	rex.B
    da47:	4c 20 46 41          	rex.WR and BYTE PTR [rsi+0x41],r8b
    da4b:	49                   	rex.WB
    da4c:	4c                   	rex.WR
    da4d:	45                   	rex.RB
    da4e:	44 20 54 4f 20       	and    BYTE PTR [rdi+rcx*2+0x20],r10b
    da53:	4f 50                	rex.WRXB push r8
    da55:	45                   	rex.RB
    da56:	4e 20 46 49          	rex.WRX and BYTE PTR [rsi+0x49],r8b
    da5a:	4c                   	rex.WR
    da5b:	45 20 46 4f          	and    BYTE PTR [r14+0x4f],r8b
    da5f:	52                   	push   rdx
    da60:	20 4c 4f 47          	and    BYTE PTR [rdi+rcx*2+0x47],cl
    da64:	47                   	rex.RXB
    da65:	49                   	rex.WB
    da66:	4e                   	rex.WRX
    da67:	47 3a 20             	rex.RXB cmp r12b,BYTE PTR [r8]
    da6a:	25 73 0a 00 25       	and    eax,0x25000a73
    da6f:	73 20                	jae    da91 <_IO_stdin_used+0x1a91>
    da71:	25 73 20 25 73       	and    eax,0x73252073
    da76:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325faba <_end+0x73120a7a>
    da7c:	0a 00                	or     al,BYTE PTR [rax]
    da7e:	25 73 20 25 73       	and    eax,0x73252073
    da83:	20 25 73 3a 25 64    	and    BYTE PTR [rip+0x64253a73],ah        # 642614fc <_end+0x641224bc>
    da89:	20 2d 3e 20 25 73    	and    BYTE PTR [rip+0x7325203e],ch        # 7325facd <_end+0x73120a8d>
    da8f:	3a 25 64 0a 00 00    	cmp    ah,BYTE PTR [rip+0xa64]        # e4f9 <__GNU_EH_FRAME_HDR+0x3e9>
    da95:	00 00                	add    BYTE PTR [rax],al
    da97:	00 61 6e             	add    BYTE PTR [rcx+0x6e],ah
    da9a:	79 00                	jns    da9c <_IO_stdin_used+0x1a9c>
    da9c:	41                   	rex.B
    da9d:	4e 59                	rex.WRX pop rcx
    da9f:	00 49 43             	add    BYTE PTR [rcx+0x43],cl
    daa2:	4d 50                	rex.WRB push r8
    daa4:	00 54 43 50          	add    BYTE PTR [rbx+rax*2+0x50],dl
    daa8:	00 55 44             	add    BYTE PTR [rbp+0x44],dl
    daab:	50                   	push   rax
    daac:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    daaf:	72 5f                	jb     db10 <_IO_stdin_used+0x1b10>
    dab1:	6d                   	ins    DWORD PTR es:[rdi],dx
    dab2:	61                   	(bad)  
    dab3:	74 63                	je     db18 <_IO_stdin_used+0x1b18>
    dab5:	68 00 6e 6f 6e       	push   0x6e6f6e00
    daba:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    dabe:	72 65                	jb     db25 <_IO_stdin_used+0x1b25>
    dac0:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
    dac3:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    dac7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dac8:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    dacb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dacc:	65 20 74 79 70       	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
    dad1:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
    dad4:	25 73 0a 00 3b       	and    eax,0x3b000a73
    dad9:	00 46 6f             	add    BYTE PTR [rsi+0x6f],al
    dadc:	75 6e                	jne    db4c <_IO_stdin_used+0x1b4c>
    dade:	64 20 6f 70          	and    BYTE PTR fs:[rdi+0x70],ch
    dae2:	65 72 61             	gs jb  db46 <_IO_stdin_used+0x1b46>
    dae5:	74 6f                	je     db56 <_IO_stdin_used+0x1b56>
    dae7:	72 00                	jb     dae9 <_IO_stdin_used+0x1ae9>
    dae9:	61                   	(bad)  
    daea:	6c                   	ins    BYTE PTR es:[rdi],dx
    daeb:	65 72 74             	gs jb  db62 <_IO_stdin_used+0x1b62>
    daee:	00 24 68             	add    BYTE PTR [rax+rbp*2],ah
    daf1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    daf2:	6d                   	ins    DWORD PTR es:[rdi],dx
    daf3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    daf5:	65 74 00             	gs je  daf8 <_IO_stdin_used+0x1af8>
    daf8:	2d 3e 00 3c 3e       	sub    eax,0x3e3c003e
    dafd:	00 24 65 78 74 65 72 	add    BYTE PTR [riz*2+0x72657478],ah
    db04:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db05:	61                   	(bad)  
    db06:	6c                   	ins    BYTE PTR es:[rdi],dx
    db07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db08:	65 74 00             	gs je  db0b <_IO_stdin_used+0x1b0b>
    db0b:	22 3b                	and    bh,BYTE PTR [rbx]
    db0d:	00 6e 61             	add    BYTE PTR [rsi+0x61],ch
    db10:	6d                   	ins    DWORD PTR es:[rdi],dx
    db11:	65 3a 22             	cmp    ah,BYTE PTR gs:[rdx]
    db14:	00 6d 73             	add    BYTE PTR [rbp+0x73],ch
    db17:	67 3a 22             	cmp    ah,BYTE PTR [edx]
    db1a:	00 64 65 70          	add    BYTE PTR [rbp+riz*2+0x70],ah
    db1e:	74 68                	je     db88 <_IO_stdin_used+0x1b88>
    db20:	3a 00                	cmp    al,BYTE PTR [rax]
    db22:	74 79                	je     db9d <_IO_stdin_used+0x1b9d>
    db24:	70 65                	jo     db8b <_IO_stdin_used+0x1b8b>
    db26:	3a 00                	cmp    al,BYTE PTR [rax]
    db28:	74 61                	je     db8b <_IO_stdin_used+0x1b8b>
    db2a:	72 67                	jb     db93 <_IO_stdin_used+0x1b93>
    db2c:	65 74 3a             	gs je  db69 <_IO_stdin_used+0x1b69>
    db2f:	22 00                	and    al,BYTE PTR [rax]
    db31:	73 65                	jae    db98 <_IO_stdin_used+0x1b98>
    db33:	76 3a                	jbe    db6f <_IO_stdin_used+0x1b6f>
    db35:	00 00                	add    BYTE PTR [rax],al
    db37:	00 52 75             	add    BYTE PTR [rdx+0x75],dl
    db3a:	6c                   	ins    BYTE PTR es:[rdi],dx
    db3b:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db3f:	76 65                	jbe    dba6 <_IO_stdin_used+0x1ba6>
    db41:	72 69                	jb     dbac <_IO_stdin_used+0x1bac>
    db43:	74 79                	je     dbbe <_IO_stdin_used+0x1bbe>
    db45:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db49:	75 6c                	jne    dbb7 <_IO_stdin_used+0x1bb7>
    db4b:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db4f:	20 3e                	and    BYTE PTR [rsi],bh
    db51:	20 30                	and    BYTE PTR [rax],dh
    db53:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    db56:	64 20 3c 3d 20 31 30 	and    BYTE PTR fs:[rdi*1+0x303120],bh
    db5d:	00 
    db5e:	00 00                	add    BYTE PTR [rax],al
    db60:	52                   	push   rdx
    db61:	75 6c                	jne    dbcf <_IO_stdin_used+0x1bcf>
    db63:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
    db67:	76 65                	jbe    dbce <_IO_stdin_used+0x1bce>
    db69:	72 69                	jb     dbd4 <_IO_stdin_used+0x1bd4>
    db6b:	74 79                	je     dbe6 <_IO_stdin_used+0x1be6>
    db6d:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    db70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    db71:	75 6c                	jne    dbdf <_IO_stdin_used+0x1bdf>
    db73:	64 20 62 65          	and    BYTE PTR fs:[rdx+0x65],ah
    db77:	20 61 20             	and    BYTE PTR [rcx+0x20],ah
    db7a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    db7b:	75 6d                	jne    dbea <_IO_stdin_used+0x1bea>
    db7d:	65 72 69             	gs jb  dbe9 <_IO_stdin_used+0x1be9>
    db80:	63 20                	movsxd esp,DWORD PTR [rax]
    db82:	76 61                	jbe    dbe5 <_IO_stdin_used+0x1be5>
    db84:	6c                   	ins    BYTE PTR es:[rdi],dx
    db85:	75 65                	jne    dbec <_IO_stdin_used+0x1bec>
    db87:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    db8a:	79 70                	jns    dbfc <_IO_stdin_used+0x1bfc>
    db8c:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    db8f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    db91:	76 61                	jbe    dbf4 <_IO_stdin_used+0x1bf4>
    db93:	6c                   	ins    BYTE PTR es:[rdi],dx
    db94:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    db9b:	20 
    db9c:	74 79                	je     dc17 <_IO_stdin_used+0x1c17>
    db9e:	70 65                	jo     dc05 <_IO_stdin_used+0x1c05>
    dba0:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
    dba3:	6c                   	ins    BYTE PTR es:[rdi],dx
    dba4:	75 65                	jne    dc0b <_IO_stdin_used+0x1c0b>
    dba6:	00 00                	add    BYTE PTR [rax],al
    dba8:	25 73 3a 20 69       	and    eax,0x69203a73
    dbad:	74 79                	je     dc28 <_IO_stdin_used+0x1c28>
    dbaf:	70 65                	jo     dc16 <_IO_stdin_used+0x1c16>
    dbb1:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dbb4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbb5:	79 20                	jns    dbd7 <_IO_stdin_used+0x1bd7>
    dbb7:	61                   	(bad)  
    dbb8:	70 70                	jo     dc2a <_IO_stdin_used+0x1c2a>
    dbba:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbbb:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dbc2:	72 75                	jb     dc39 <_IO_stdin_used+0x1c39>
    dbc4:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbc5:	65 73 20             	gs jae dbe8 <_IO_stdin_used+0x1be8>
    dbc8:	77 69                	ja     dc33 <_IO_stdin_used+0x1c33>
    dbca:	74 68                	je     dc34 <_IO_stdin_used+0x1c34>
    dbcc:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dbcf:	4d 50                	rex.WRB push r8
    dbd1:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dbd4:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dbd7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dbd8:	74 6f                	je     dc49 <_IO_stdin_used+0x1c49>
    dbda:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dbdd:	0a 00                	or     al,BYTE PTR [rax]
    dbdf:	69 63 6f 64 65 3a 00 	imul   esp,DWORD PTR [rbx+0x6f],0x3a6564
    dbe6:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dbe8:	76 61                	jbe    dc4b <_IO_stdin_used+0x1c4b>
    dbea:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbeb:	69 64 65 20 69 63 6d 	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x706d6369
    dbf2:	70 
    dbf3:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    dbf6:	64 65 20 76 61       	fs and BYTE PTR gs:[rsi+0x61],dh
    dbfb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dbfc:	75 65                	jne    dc63 <_IO_stdin_used+0x1c63>
    dbfe:	00 00                	add    BYTE PTR [rax],al
    dc00:	69 63 6f 64 65 20 6f 	imul   esp,DWORD PTR [rbx+0x6f],0x6f206564
    dc07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dc08:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc09:	79 20                	jns    dc2b <_IO_stdin_used+0x1c2b>
    dc0b:	61                   	(bad)  
    dc0c:	70 70                	jo     dc7e <_IO_stdin_used+0x1c7e>
    dc0e:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc0f:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc16:	72 75                	jb     dc8d <_IO_stdin_used+0x1c8d>
    dc18:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc19:	65 73 20             	gs jae dc3c <_IO_stdin_used+0x1c3c>
    dc1c:	77 69                	ja     dc87 <_IO_stdin_used+0x1c87>
    dc1e:	74 68                	je     dc88 <_IO_stdin_used+0x1c88>
    dc20:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc23:	4d 50                	rex.WRB push r8
    dc25:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc28:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc2b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc2c:	74 6f                	je     dc9d <_IO_stdin_used+0x1c9d>
    dc2e:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc31:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc34:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc35:	70 5f                	jo     dc96 <_IO_stdin_used+0x1c96>
    dc37:	69 64 3a 00 49 6e 76 	imul   esp,DWORD PTR [rdx+rdi*1+0x0],0x61766e49
    dc3e:	61 
    dc3f:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc40:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dc47:	20 
    dc48:	69 64 20 76 61 6c 75 	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
    dc4f:	65 
	...
    dc58:	49                   	rex.WB
    dc59:	43                   	rex.XB
    dc5a:	4d 50                	rex.WRB push r8
    dc5c:	20 49 44             	and    BYTE PTR [rcx+0x44],cl
    dc5f:	20 6f 6e             	and    BYTE PTR [rdi+0x6e],ch
    dc62:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc63:	79 20                	jns    dc85 <_IO_stdin_used+0x1c85>
    dc65:	61                   	(bad)  
    dc66:	70 70                	jo     dcd8 <_IO_stdin_used+0x1cd8>
    dc68:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc69:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dc70:	72 75                	jb     dce7 <_IO_stdin_used+0x1ce7>
    dc72:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc73:	65 73 20             	gs jae dc96 <_IO_stdin_used+0x1c96>
    dc76:	77 69                	ja     dce1 <_IO_stdin_used+0x1ce1>
    dc78:	74 68                	je     dce2 <_IO_stdin_used+0x1ce2>
    dc7a:	20 49 43             	and    BYTE PTR [rcx+0x43],cl
    dc7d:	4d 50                	rex.WRB push r8
    dc7f:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dc82:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dc85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dc86:	74 6f                	je     dcf7 <_IO_stdin_used+0x1cf7>
    dc88:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dc8b:	00 69 63             	add    BYTE PTR [rcx+0x63],ch
    dc8e:	6d                   	ins    DWORD PTR es:[rdi],dx
    dc8f:	70 5f                	jo     dcf0 <_IO_stdin_used+0x1cf0>
    dc91:	73 65                	jae    dcf8 <_IO_stdin_used+0x1cf8>
    dc93:	71 3a                	jno    dccf <_IO_stdin_used+0x1ccf>
    dc95:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
    dc98:	76 61                	jbe    dcfb <_IO_stdin_used+0x1cfb>
    dc9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    dc9b:	69 64 20 69 63 6d 70 	imul   esp,DWORD PTR [rax+riz*1+0x69],0x20706d63
    dca2:	20 
    dca3:	73 65                	jae    dd0a <_IO_stdin_used+0x1d0a>
    dca5:	71 75                	jno    dd1c <_IO_stdin_used+0x1d1c>
    dca7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dca9:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    dcac:	76 61                	jbe    dd0f <_IO_stdin_used+0x1d0f>
    dcae:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcaf:	75 65                	jne    dd16 <_IO_stdin_used+0x1d16>
    dcb1:	00 74 74 6c          	add    BYTE PTR [rsp+rsi*2+0x6c],dh
    dcb5:	3a 00                	cmp    al,BYTE PTR [rax]
    dcb7:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dcb9:	76 61                	jbe    dd1c <_IO_stdin_used+0x1d1c>
    dcbb:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcbc:	69 64 20 74 74 6c 20 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x76206c74
    dcc3:	76 
    dcc4:	61                   	(bad)  
    dcc5:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcc6:	75 65                	jne    dd2d <_IO_stdin_used+0x1d2d>
    dcc8:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dccb:	61                   	(bad)  
    dccc:	67 73 3a             	addr32 jae dd09 <_IO_stdin_used+0x1d09>
    dccf:	22 00                	and    al,BYTE PTR [rax]
    dcd1:	00 00                	add    BYTE PTR [rax],al
    dcd3:	00 00                	add    BYTE PTR [rax],al
    dcd5:	00 00                	add    BYTE PTR [rax],al
    dcd7:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    dcda:	61                   	(bad)  
    dcdb:	67 73 20             	addr32 jae dcfe <_IO_stdin_used+0x1cfe>
    dcde:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dcdf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dce0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce1:	79 20                	jns    dd03 <_IO_stdin_used+0x1d03>
    dce3:	61                   	(bad)  
    dce4:	70 70                	jo     dd56 <_IO_stdin_used+0x1d56>
    dce6:	6c                   	ins    BYTE PTR es:[rdi],dx
    dce7:	69 65 73 20 74 6f 20 	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
    dcee:	72 75                	jb     dd65 <_IO_stdin_used+0x1d65>
    dcf0:	6c                   	ins    BYTE PTR es:[rdi],dx
    dcf1:	65 73 20             	gs jae dd14 <_IO_stdin_used+0x1d14>
    dcf4:	77 69                	ja     dd5f <_IO_stdin_used+0x1d5f>
    dcf6:	74 68                	je     dd60 <_IO_stdin_used+0x1d60>
    dcf8:	20 74 63 70          	and    BYTE PTR [rbx+riz*2+0x70],dh
    dcfc:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
    dcff:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    dd02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd03:	74 6f                	je     dd74 <_IO_stdin_used+0x1d74>
    dd05:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    dd08:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    dd0b:	6b 3a 00             	imul   edi,DWORD PTR [rdx],0x0
    dd0e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    dd10:	76 61                	jbe    dd73 <_IO_stdin_used+0x1d73>
    dd12:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd13:	69 64 20 61 63 6b 20 	imul   esp,DWORD PTR [rax+riz*1+0x61],0x76206b63
    dd1a:	76 
    dd1b:	61                   	(bad)  
    dd1c:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd1d:	75 65                	jne    dd84 <_IO_stdin_used+0x1d84>
    dd1f:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    dd22:	72 65                	jb     dd89 <_IO_stdin_used+0x1d89>
    dd24:	3a 22                	cmp    ah,BYTE PTR [rdx]
    dd26:	00 00                	add    BYTE PTR [rax],al
    dd28:	46 61                	rex.RX (bad) 
    dd2a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    dd31:	20 
    dd32:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    dd35:	70 69                	jo     dda0 <_IO_stdin_used+0x1da0>
    dd37:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd38:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
    dd3c:	67 75 6c             	addr32 jne ddab <_IO_stdin_used+0x1dab>
    dd3f:	61                   	(bad)  
    dd40:	72 20                	jb     dd62 <_IO_stdin_used+0x1d62>
    dd42:	65 78 70             	gs js  ddb5 <_IO_stdin_used+0x1db5>
    dd45:	72 65                	jb     ddac <_IO_stdin_used+0x1dac>
    dd47:	73 73                	jae    ddbc <_IO_stdin_used+0x1dbc>
    dd49:	69 6f 6e 00 64 73 69 	imul   ebp,DWORD PTR [rdi+0x6e],0x69736400
    dd50:	7a 65                	jp     ddb7 <_IO_stdin_used+0x1db7>
    dd52:	3a 00                	cmp    al,BYTE PTR [rax]
    dd54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd55:	66 66 73 65          	data16 data16 jae ddbe <_IO_stdin_used+0x1dbe>
    dd59:	74 3a                	je     dd95 <_IO_stdin_used+0x1d95>
    dd5b:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    dd5e:	74 61                	je     ddc1 <_IO_stdin_used+0x1dc1>
    dd60:	62                   	(bad)  
    dd61:	6c                   	ins    BYTE PTR es:[rdi],dx
    dd62:	69 73 68 65 64 00 6e 	imul   esi,DWORD PTR [rbx+0x68],0x6e006465
    dd69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    dd6a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    dd6c:	63 72 79             	movsxd esi,DWORD PTR [rdx+0x79]
    dd6f:	70 74                	jo     dde5 <_IO_stdin_used+0x1de5>
    dd71:	00 25 63 00 25 30    	add    BYTE PTR [rip+0x30250063],ah        # 3025ddda <_end+0x3011ed9a>
    dd77:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    dd7a:	00 00                	add    BYTE PTR [rax],al
    dd7c:	3e 00 3c 00          	ds add BYTE PTR [rax+rax*1],bh
    dd80:	21 00                	and    DWORD PTR [rax],eax
    dd82:	3c 3d                	cmp    al,0x3d
    dd84:	00 3e                	add    BYTE PTR [rsi],bh
    dd86:	3d 00 55 6e 73       	cmp    eax,0x736e5500
    dd8b:	75 70                	jne    ddfd <_IO_stdin_used+0x1dfd>
    dd8d:	70 6f                	jo     ddfe <_IO_stdin_used+0x1dfe>
    dd8f:	72 74                	jb     de05 <_IO_stdin_used+0x1e05>
    dd91:	65 64 20 6f 70       	gs and BYTE PTR fs:[rdi+0x70],ch
    dd96:	65 72 61             	gs jb  ddfa <_IO_stdin_used+0x1dfa>
    dd99:	74 6f                	je     de0a <_IO_stdin_used+0x1e0a>
    dd9b:	72 00                	jb     dd9d <_IO_stdin_used+0x1d9d>
    dd9d:	00 00                	add    BYTE PTR [rax],al
    dd9f:	00 54 d0 ff          	add    BYTE PTR [rax+rdx*8-0x1],dl
    dda3:	ff a6 d0 ff ff bf    	jmp    QWORD PTR [rsi-0x40000030]
    dda9:	d0 ff                	sar    bh,1
    ddab:	ff 74 d0 ff          	push   QWORD PTR [rax+rdx*8-0x1]
    ddaf:	ff 8d d0 ff ff d8    	dec    DWORD PTR [rbp-0x27000030]
    ddb5:	d0 ff                	sar    bh,1
    ddb7:	ff 2e                	jmp    FWORD PTR [rsi]
    ddb9:	00 25 30 32 78 00    	add    BYTE PTR [rip+0x783230],ah        # 790fef <_end+0x651faf>
    ddbf:	25 30 32 78 20       	and    eax,0x20783230
    ddc4:	2d 2d 20 25 30       	sub    eax,0x3025202d
    ddc9:	32 78 0a             	xor    bh,BYTE PTR [rax+0xa]
    ddcc:	00 00                	add    BYTE PTR [rax],al
    ddce:	00 00                	add    BYTE PTR [rax],al
    ddd0:	73 72                	jae    de44 <_IO_stdin_used+0x1e44>
    ddd2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    ddd4:	6c                   	ins    BYTE PTR es:[rdi],dx
    ddd5:	75 61                	jne    de38 <_IO_stdin_used+0x1e38>
    ddd7:	2f                   	(bad)  
    ddd8:	73 63                	jae    de3d <_IO_stdin_used+0x1e3d>
    ddda:	72 69                	jb     de45 <_IO_stdin_used+0x1e45>
    dddc:	70 74                	jo     de52 <_IO_stdin_used+0x1e52>
    ddde:	73 2f                	jae    de0f <_IO_stdin_used+0x1e0f>
    dde0:	68 65 6c 6c 6f       	push   0x6f6c6c65
    dde5:	74 65                	je     de4c <_IO_stdin_used+0x1e4c>
    dde7:	73 74                	jae    de5d <_IO_stdin_used+0x1e5d>
    dde9:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    ddeb:	75 61                	jne    de4e <_IO_stdin_used+0x1e4e>
    dded:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    ddf0:	2f                   	(bad)  
    ddf1:	65 74 63             	gs je  de57 <_IO_stdin_used+0x1e57>
    ddf4:	2f                   	(bad)  
    ddf5:	76 69                	jbe    de60 <_IO_stdin_used+0x1e60>
    ddf7:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    ddfe:	72 69 
    de00:	70 74                	jo     de76 <_IO_stdin_used+0x1e76>
    de02:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    de06:	66 00 46 61          	data16 add BYTE PTR [rsi+0x61],al
    de0a:	69 6c 65 64 20 74 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
    de11:	20 
    de12:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de15:	6c                   	ins    BYTE PTR es:[rdi],dx
    de16:	65 63 74 20 4c       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x4c]
    de1b:	75 61                	jne    de7e <_IO_stdin_used+0x1e7e>
    de1d:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    de20:	72 69                	jb     de8b <_IO_stdin_used+0x1e8b>
    de22:	70 74                	jo     de98 <_IO_stdin_used+0x1e98>
    de24:	73 3a                	jae    de60 <_IO_stdin_used+0x1e60>
    de26:	20 2f                	and    BYTE PTR [rdi],ch
    de28:	65 74 63             	gs je  de8e <_IO_stdin_used+0x1e8e>
    de2b:	2f                   	(bad)  
    de2c:	76 69                	jbe    de97 <_IO_stdin_used+0x1e97>
    de2e:	67 69 6c 2f 6c 73 63 	imul   ebp,DWORD PTR [edi+ebp*1+0x6c],0x69726373
    de35:	72 69 
    de37:	70 74                	jo     dead <_IO_stdin_used+0x1ead>
    de39:	2e 63 6f 6e          	cs movsxd ebp,DWORD PTR [rdi+0x6e]
    de3d:	66 20 6e 6f          	data16 and BYTE PTR [rsi+0x6f],ch
    de41:	74 20                	je     de63 <_IO_stdin_used+0x1e63>
    de43:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    de45:	75 6e                	jne    deb5 <_IO_stdin_used+0x1eb5>
    de47:	64 2e 00 2e          	fs add BYTE PTR fs:[rsi],ch
    de4b:	2a 2e                	sub    ch,BYTE PTR [rsi]
    de4d:	6c                   	ins    BYTE PTR es:[rdi],dx
    de4e:	75 61                	jne    deb1 <_IO_stdin_used+0x1eb1>
    de50:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    de52:	2a 00                	sub    al,BYTE PTR [rax]
    de54:	6c                   	ins    BYTE PTR es:[rdi],dx
    de55:	5f                   	pop    rdi
    de56:	73 63                	jae    debb <_IO_stdin_used+0x1ebb>
    de58:	72 69                	jb     dec3 <_IO_stdin_used+0x1ec3>
    de5a:	70 74                	jo     ded0 <_IO_stdin_used+0x1ed0>
    de5c:	5f                   	pop    rdi
    de5d:	72 6f                	jb     dece <_IO_stdin_used+0x1ece>
    de5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de60:	74 3d                	je     de9f <_IO_stdin_used+0x1e9f>
    de62:	00 0a                	add    BYTE PTR [rdx],cl
    de64:	00 00                	add    BYTE PTR [rax],al
    de66:	00 00                	add    BYTE PTR [rax],al
    de68:	49 50                	rex.WB push r8
    de6a:	76 36                	jbe    dea2 <_IO_stdin_used+0x1ea2>
    de6c:	20 25 73 20 2d 3e    	and    BYTE PTR [rip+0x3e2d2073],ah        # 3e2dfee5 <_end+0x3e1a0ea5>
    de72:	20 25 73 20 50 72    	and    BYTE PTR [rip+0x72502073],ah        # 7250feeb <_end+0x723d0eab>
    de78:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    de79:	74 6f                	je     deea <_IO_stdin_used+0x1eea>
    de7b:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    de7e:	20 4e 75             	and    BYTE PTR [rsi+0x75],cl
    de81:	6d                   	ins    DWORD PTR es:[rdi],dx
    de82:	62                   	(bad)  
    de83:	65 72 20             	gs jb  dea6 <_IO_stdin_used+0x1ea6>
    de86:	3d 20 25 64 0a       	cmp    eax,0xa642520
    de8b:	00 00                	add    BYTE PTR [rax],al
    de8d:	00 00                	add    BYTE PTR [rax],al
    de8f:	00 5b 4e             	add    BYTE PTR [rbx+0x4e],bl
    de92:	20 25 73 20 53 20    	and    BYTE PTR [rip+0x20532073],ah        # 2053ff0b <_end+0x20400ecb>
    de98:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    de9b:	30 32                	xor    BYTE PTR [rdx],dh
    de9d:	78 20                	js     debf <_IO_stdin_used+0x1ebf>
    de9f:	45 20 30             	and    BYTE PTR [r8],r14b
    dea2:	78 25                	js     dec9 <_IO_stdin_used+0x1ec9>
    dea4:	30 32                	xor    BYTE PTR [rdx],dh
    dea6:	78 5d                	js     df05 <_IO_stdin_used+0x1f05>
    dea8:	0a 00                	or     al,BYTE PTR [rax]
    deaa:	00 00                	add    BYTE PTR [rax],al
    deac:	00 00                	add    BYTE PTR [rax],al
    deae:	00 00                	add    BYTE PTR [rax],al
    deb0:	53                   	push   rbx
    deb1:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
    deb4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    deb6:	74 61                	je     df19 <_IO_stdin_used+0x1f19>
    deb8:	74 69                	je     df23 <_IO_stdin_used+0x1f23>
    deba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    debb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    debc:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
    debf:	75 6c                	jne    df2d <_IO_stdin_used+0x1f2d>
    dec1:	74 20                	je     dee3 <_IO_stdin_used+0x1ee3>
    dec3:	61                   	(bad)  
    dec4:	74 20                	je     dee6 <_IO_stdin_used+0x1ee6>
    dec6:	25 73 3a 20 61       	and    eax,0x61203a73
    decb:	70 70                	jo     df3d <_IO_stdin_used+0x1f3d>
    decd:	6c                   	ins    BYTE PTR es:[rdi],dx
    dece:	69 63 61 74 69 6f 6e 	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
    ded5:	20 63 72             	and    BYTE PTR [rbx+0x72],ah
    ded8:	61                   	(bad)  
    ded9:	73 68                	jae    df43 <_IO_stdin_used+0x1f43>
    dedb:	65 64 0a 00          	gs or  al,BYTE PTR fs:[rax]
    dedf:	46 75 6e             	rex.RX jne df50 <_IO_stdin_used+0x1f50>
    dee2:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    dee6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    dee7:	20 62 61             	and    BYTE PTR [rdx+0x61],ah
    deea:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    deed:	72 61                	jb     df50 <_IO_stdin_used+0x1f50>
    deef:	63 65 3a             	movsxd esp,DWORD PTR [rbp+0x3a]
    def2:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
    def6:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # e96f <__GNU_EH_FRAME_HDR+0x85f>
    defc:	00 00                	add    BYTE PTR [rax],al
    defe:	00 00                	add    BYTE PTR [rax],al
    df00:	5b                   	pop    rbx
    df01:	4e 20 25 73 20 53 20 	rex.WRX and BYTE PTR [rip+0x20532073],r12b        # 2053ff7b <_end+0x20400f3b>
    df08:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df0b:	30 32                	xor    BYTE PTR [rdx],dh
    df0d:	78 20                	js     df2f <_IO_stdin_used+0x1f2f>
    df0f:	45 20 30             	and    BYTE PTR [r8],r14b
    df12:	78 25                	js     df39 <_IO_stdin_used+0x1f39>
    df14:	30 32                	xor    BYTE PTR [rdx],dh
    df16:	78 20                	js     df38 <_IO_stdin_used+0x1f38>
    df18:	28 2e                	sub    BYTE PTR [rsi],ch
    df1a:	2f                   	(bad)  
    df1b:	76 69                	jbe    df86 <_IO_stdin_used+0x1f86>
    df1d:	67 69 6c 2e 65 78 65 	imul   ebp,DWORD PTR [esi+ebp*1+0x65],0x2b286578
    df24:	28 2b 
    df26:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df29:	30 32                	xor    BYTE PTR [rdx],dh
    df2b:	78 29                	js     df56 <_IO_stdin_used+0x1f56>
    df2d:	29 5d 0a             	sub    DWORD PTR [rbp+0xa],ebx
	...
    df38:	55                   	push   rbp
    df39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3a:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
    df3e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df3f:	20 66 75             	and    BYTE PTR [rsi+0x75],ah
    df42:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df43:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    df47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    df48:	20 61 74             	and    BYTE PTR [rcx+0x74],ah
    df4b:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    df4e:	6d                   	ins    DWORD PTR es:[rdi],dx
    df4f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    df50:	72 79                	jb     dfcb <_IO_stdin_used+0x1fcb>
    df52:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
    df55:	66 73 65             	data16 jae dfbd <_IO_stdin_used+0x1fbd>
    df58:	74 20                	je     df7a <_IO_stdin_used+0x1f7a>
    df5a:	30 78 25             	xor    BYTE PTR [rax+0x25],bh
    df5d:	30 32                	xor    BYTE PTR [rdx],dh
    df5f:	78 0a                	js     df6b <_IO_stdin_used+0x1f6b>
    df61:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
    df64:	67 69 73 74 65 72 20 	imul   esi,DWORD PTR [ebx+0x74],0x44207265
    df6b:	44 
    df6c:	75 6d                	jne    dfdb <_IO_stdin_used+0x1fdb>
    df6e:	70 3a                	jo     dfaa <_IO_stdin_used+0x1faa>
    df70:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df73:	41 58                	pop    r8
    df75:	5d                   	pop    rbp
    df76:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790f9c <_end+0x25651f5c>
    df7c:	30 32                	xor    BYTE PTR [rdx],dh
    df7e:	78 0a                	js     df8a <_IO_stdin_used+0x1f8a>
    df80:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df83:	42 58                	rex.X pop rax
    df85:	5d                   	pop    rbp
    df86:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fac <_end+0x25651f6c>
    df8c:	30 32                	xor    BYTE PTR [rdx],dh
    df8e:	78 0a                	js     df9a <_IO_stdin_used+0x1f9a>
    df90:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    df93:	43 58                	rex.XB pop r8
    df95:	5d                   	pop    rbp
    df96:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fbc <_end+0x25651f7c>
    df9c:	30 32                	xor    BYTE PTR [rdx],dh
    df9e:	78 0a                	js     dfaa <_IO_stdin_used+0x1faa>
    dfa0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfa3:	44 58                	rex.R pop rax
    dfa5:	5d                   	pop    rbp
    dfa6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fcc <_end+0x25651f8c>
    dfac:	30 32                	xor    BYTE PTR [rdx],dh
    dfae:	78 0a                	js     dfba <_IO_stdin_used+0x1fba>
    dfb0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfb3:	53                   	push   rbx
    dfb4:	50                   	push   rax
    dfb5:	5d                   	pop    rbp
    dfb6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fdc <_end+0x25651f9c>
    dfbc:	30 32                	xor    BYTE PTR [rdx],dh
    dfbe:	78 0a                	js     dfca <_IO_stdin_used+0x1fca>
    dfc0:	00 5b 52             	add    BYTE PTR [rbx+0x52],bl
    dfc3:	42 50                	rex.X push rax
    dfc5:	5d                   	pop    rbp
    dfc6:	20 3d 20 30 78 25    	and    BYTE PTR [rip+0x25783020],bh        # 25790fec <_end+0x25651fac>
    dfcc:	30 32                	xor    BYTE PTR [rdx],dh
    dfce:	78 0a                	js     dfda <_IO_stdin_used+0x1fda>
	...
    dfd8:	72 00                	jb     dfda <_IO_stdin_used+0x1fda>
    dfda:	2f                   	(bad)  
    dfdb:	75 73                	jne    e050 <_IO_stdin_used+0x2050>
    dfdd:	72 2f                	jb     e00e <_IO_stdin_used+0x200e>
    dfdf:	73 68                	jae    e049 <_IO_stdin_used+0x2049>
    dfe1:	61                   	(bad)  
    dfe2:	72 65                	jb     e049 <_IO_stdin_used+0x2049>
    dfe4:	2f                   	(bad)  
    dfe5:	76 69                	jbe    e050 <_IO_stdin_used+0x2050>
    dfe7:	67 69 6c 2f 6d 65 6d 	imul   ebp,DWORD PTR [edi+ebp*1+0x6d],0x616d6d65
    dfee:	6d 61 
    dff0:	70 2e                	jo     e020 <_IO_stdin_used+0x2020>
    dff2:	74 78                	je     e06c <_IO_stdin_used+0x206c>
    dff4:	74 00                	je     dff6 <_IO_stdin_used+0x1ff6>
    dff6:	00 00                	add    BYTE PTR [rax],al
    dff8:	46                   	rex.RX
    dff9:	41 54                	push   r12
    dffb:	41                   	rex.B
    dffc:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
    e000:	52                   	push   rdx
    e001:	4f 52                	rex.WRXB push r10
    e003:	3a 20                	cmp    ah,BYTE PTR [rax]
    e005:	6d                   	ins    DWORD PTR es:[rdi],dx
    e006:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e008:	6d                   	ins    DWORD PTR es:[rdi],dx
    e009:	61                   	(bad)  
    e00a:	70 2e                	jo     e03a <_IO_stdin_used+0x203a>
    e00c:	74 78                	je     e086 <_IO_stdin_used+0x2086>
    e00e:	74 20                	je     e030 <_IO_stdin_used+0x2030>
    e010:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e011:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e012:	74 20                	je     e034 <_IO_stdin_used+0x2034>
    e014:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    e016:	75 6e                	jne    e086 <_IO_stdin_used+0x2086>
    e018:	64 2e 50             	fs cs push rax
    e01b:	6c                   	ins    BYTE PTR es:[rdi],dx
    e01c:	65 61                	gs (bad) 
    e01e:	73 65                	jae    e085 <_IO_stdin_used+0x2085>
    e020:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    e023:	20 72 75             	and    BYTE PTR [rdx+0x75],dh
    e026:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e027:	20 67 65             	and    BYTE PTR [rdi+0x65],ah
    e02a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e02b:	5f                   	pop    rdi
    e02c:	6d                   	ins    DWORD PTR es:[rdi],dx
    e02d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    e02f:	5f                   	pop    rdi
    e030:	6d                   	ins    DWORD PTR es:[rdi],dx
    e031:	61                   	(bad)  
    e032:	70 2e                	jo     e062 <_IO_stdin_used+0x2062>
    e034:	70 79                	jo     e0af <_IO_stdin_used+0x20af>
    e036:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    e039:	64 20 63 6f          	and    BYTE PTR fs:[rbx+0x6f],ah
    e03d:	70 79                	jo     e0b8 <_IO_stdin_used+0x20b8>
    e03f:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    e042:	6d                   	ins    DWORD PTR es:[rdi],dx
    e043:	6d                   	ins    DWORD PTR es:[rdi],dx
    e044:	61                   	(bad)  
    e045:	70 2e                	jo     e075 <_IO_stdin_used+0x2075>
    e047:	74 78                	je     e0c1 <_IO_stdin_used+0x20c1>
    e049:	74 20                	je     e06b <_IO_stdin_used+0x206b>
    e04b:	74 6f                	je     e0bc <_IO_stdin_used+0x20bc>
    e04d:	20 2f                	and    BYTE PTR [rdi],ch
    e04f:	75 73                	jne    e0c4 <_IO_stdin_used+0x20c4>
    e051:	72 2f                	jb     e082 <_IO_stdin_used+0x2082>
    e053:	73 68                	jae    e0bd <_IO_stdin_used+0x20bd>
    e055:	61                   	(bad)  
    e056:	72 65                	jb     e0bd <_IO_stdin_used+0x20bd>
    e058:	2f                   	(bad)  
    e059:	76 69                	jbe    e0c4 <_IO_stdin_used+0x20c4>
    e05b:	67 69 6c 00 0a 00 20 	imul   ebp,DWORD PTR [eax+eax*1+0xa],0x2000
    e062:	00 00 
    e064:	00 00                	add    BYTE PTR [rax],al
    e066:	00 00                	add    BYTE PTR [rax],al
    e068:	53                   	push   rbx
    e069:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    e06c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e06d:	69 6e 67 20 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
    e074:	20 70 72             	and    BYTE PTR [rax+0x72],dh
    e077:	65 76 69             	gs jbe e0e3 <_IO_stdin_used+0x20e3>
    e07a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e07b:	75 73                	jne    e0f0 <_IO_stdin_used+0x20f0>
    e07d:	20 6c 6f 67          	and    BYTE PTR [rdi+rbp*2+0x67],ch
    e081:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
    e084:	6c                   	ins    BYTE PTR es:[rdi],dx
    e085:	65 73 2e             	gs jae e0b6 <_IO_stdin_used+0x20b6>
    e088:	2e 2e 00 2f          	cs cs add BYTE PTR [rdi],ch
    e08c:	75 73                	jne    e101 <_IO_stdin_used+0x2101>
    e08e:	72 2f                	jb     e0bf <_IO_stdin_used+0x20bf>
    e090:	73 68                	jae    e0fa <_IO_stdin_used+0x20fa>
    e092:	61                   	(bad)  
    e093:	72 65                	jb     e0fa <_IO_stdin_used+0x20fa>
    e095:	2f                   	(bad)  
    e096:	76 69                	jbe    e101 <_IO_stdin_used+0x2101>
    e098:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e09f:	74 73 
    e0a1:	2f                   	(bad)  
    e0a2:	70 70                	jo     e114 <__GNU_EH_FRAME_HDR+0x4>
    e0a4:	73 2f                	jae    e0d5 <_IO_stdin_used+0x20d5>
    e0a6:	00 46 61             	add    BYTE PTR [rsi+0x61],al
    e0a9:	69 6c 65 64 00 46 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x756f4600
    e0b0:	75 
    e0b1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0b2:	64 20 25 64 20 6c 6f 	and    BYTE PTR fs:[rip+0x6f6c2064],ah        # 6f6d011d <_end+0x6f5910dd>
    e0b9:	67 20 66 69          	and    BYTE PTR [esi+0x69],ah
    e0bd:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0be:	65 73 0a             	gs jae e0cb <_IO_stdin_used+0x20cb>
    e0c1:	00 00                	add    BYTE PTR [rax],al
    e0c3:	00 00                	add    BYTE PTR [rax],al
    e0c5:	00 00                	add    BYTE PTR [rax],al
    e0c7:	00 2f                	add    BYTE PTR [rdi],ch
    e0c9:	75 73                	jne    e13e <__GNU_EH_FRAME_HDR+0x2e>
    e0cb:	72 2f                	jb     e0fc <_IO_stdin_used+0x20fc>
    e0cd:	73 68                	jae    e137 <__GNU_EH_FRAME_HDR+0x27>
    e0cf:	61                   	(bad)  
    e0d0:	72 65                	jb     e137 <__GNU_EH_FRAME_HDR+0x27>
    e0d2:	2f                   	(bad)  
    e0d3:	76 69                	jbe    e13e <__GNU_EH_FRAME_HDR+0x2e>
    e0d5:	67 69 6c 2f 73 74 61 	imul   ebp,DWORD PTR [edi+ebp*1+0x73],0x73746174
    e0dc:	74 73 
    e0de:	2f                   	(bad)  
    e0df:	70 70                	jo     e151 <__GNU_EH_FRAME_HDR+0x41>
    e0e1:	73 2f                	jae    e112 <__GNU_EH_FRAME_HDR+0x2>
    e0e3:	70 70                	jo     e155 <__GNU_EH_FRAME_HDR+0x45>
    e0e5:	73 2e                	jae    e115 <__GNU_EH_FRAME_HDR+0x5>
    e0e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    e0e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e0e9:	67 2e 25 64 2e 74 78 	addr32 cs and eax,0x78742e64
    e0f0:	74 00                	je     e0f2 <_IO_stdin_used+0x20f2>
    e0f2:	72 00                	jb     e0f4 <_IO_stdin_used+0x20f4>
    e0f4:	77 00                	ja     e0f6 <_IO_stdin_used+0x20f6>
    e0f6:	61                   	(bad)  
    e0f7:	00 44 75 6d          	add    BYTE PTR [rbp+rsi*2+0x6d],al
    e0fb:	70 69                	jo     e166 <__GNU_EH_FRAME_HDR+0x56>
    e0fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    e0fe:	67 20 74 6f 20       	and    BYTE PTR [edi+ebp*2+0x20],dh
    e103:	25 73 0a 00 25       	and    eax,0x25000a73
    e108:	6c                   	ins    BYTE PTR es:[rdi],dx
    e109:	75 2c                	jne    e137 <__GNU_EH_FRAME_HDR+0x27>
    e10b:	25                   	.byte 0x25
    e10c:	64 0a 00             	or     al,BYTE PTR fs:[rax]

Disassembly of section .eh_frame_hdr:

000000000000e110 <__GNU_EH_FRAME_HDR>:
    e110:	01 1b                	add    DWORD PTR [rbx],ebx
    e112:	03 3b                	add    edi,DWORD PTR [rbx]
    e114:	bc 03 00 00 76       	mov    esp,0x76000003
    e119:	00 00                	add    BYTE PTR [rax],al
    e11b:	00 10                	add    BYTE PTR [rax],dl
    e11d:	3f                   	(bad)  
    e11e:	ff                   	(bad)  
    e11f:	ff f0                	push   rax
    e121:	03 00                	add    eax,DWORD PTR [rax]
    e123:	00 80 43 ff ff 18    	add    BYTE PTR [rax+0x18ffff43],al
    e129:	04 00                	add    al,0x0
    e12b:	00 90 43 ff ff 30    	add    BYTE PTR [rax+0x30ffff43],dl
    e131:	04 00                	add    al,0x0
    e133:	00 f0                	add    al,dh
    e135:	47 ff                	rex.RXB (bad) 
    e137:	ff                   	(bad)  
    e138:	d8 03                	fadd   DWORD PTR [rbx]
    e13a:	00 00                	add    BYTE PTR [rax],al
    e13c:	d9 48 ff             	(bad)  [rax-0x1]
    e13f:	ff 48 04             	dec    DWORD PTR [rax+0x4]
    e142:	00 00                	add    BYTE PTR [rax],al
    e144:	13 49 ff             	adc    ecx,DWORD PTR [rcx-0x1]
    e147:	ff 68 04             	jmp    FWORD PTR [rax+0x4]
    e14a:	00 00                	add    BYTE PTR [rax],al
    e14c:	69 4a ff ff 90 04 00 	imul   ecx,DWORD PTR [rdx-0x1],0x490ff
    e153:	00 5d 4d             	add    BYTE PTR [rbp+0x4d],bl
    e156:	ff                   	(bad)  
    e157:	ff b0 04 00 00 70    	push   QWORD PTR [rax+0x70000004]
    e15d:	4e ff                	rex.WRX (bad) 
    e15f:	ff d0                	call   rax
    e161:	04 00                	add    al,0x0
    e163:	00 1e                	add    BYTE PTR [rsi],bl
    e165:	4f ff                	rex.WRXB (bad) 
    e167:	ff f0                	push   rax
    e169:	04 00                	add    al,0x0
    e16b:	00 c4                	add    ah,al
    e16d:	4f ff                	rex.WRXB (bad) 
    e16f:	ff 10                	call   QWORD PTR [rax]
    e171:	05 00 00 59 50       	add    eax,0x50590000
    e176:	ff                   	(bad)  
    e177:	ff 30                	push   QWORD PTR [rax]
    e179:	05 00 00 ed 50       	add    eax,0x50ed0000
    e17e:	ff                   	(bad)  
    e17f:	ff 50 05             	call   QWORD PTR [rax+0x5]
    e182:	00 00                	add    BYTE PTR [rax],al
    e184:	b9 52 ff ff 7c       	mov    ecx,0x7cffff52
    e189:	05 00 00 8d 53       	add    eax,0x538d0000
    e18e:	ff                   	(bad)  
    e18f:	ff a0 05 00 00 54    	jmp    QWORD PTR [rax+0x54000005]
    e195:	54                   	push   rsp
    e196:	ff                   	(bad)  
    e197:	ff c4                	inc    esp
    e199:	05 00 00 a7 54       	add    eax,0x54a70000
    e19e:	ff                   	(bad)  
    e19f:	ff e4                	jmp    rsp
    e1a1:	05 00 00 da 54       	add    eax,0x54da0000
    e1a6:	ff                   	(bad)  
    e1a7:	ff 04 06             	inc    DWORD PTR [rsi+rax*1]
    e1aa:	00 00                	add    BYTE PTR [rax],al
    e1ac:	fb                   	sti    
    e1ad:	54                   	push   rsp
    e1ae:	ff                   	(bad)  
    e1af:	ff 24 06             	jmp    QWORD PTR [rsi+rax*1]
    e1b2:	00 00                	add    BYTE PTR [rax],al
    e1b4:	63 55 ff             	movsxd edx,DWORD PTR [rbp-0x1]
    e1b7:	ff 48 06             	dec    DWORD PTR [rax+0x6]
    e1ba:	00 00                	add    BYTE PTR [rax],al
    e1bc:	88 59 ff             	mov    BYTE PTR [rcx-0x1],bl
    e1bf:	ff 68 06             	jmp    FWORD PTR [rax+0x6]
    e1c2:	00 00                	add    BYTE PTR [rax],al
    e1c4:	e5 5a                	in     eax,0x5a
    e1c6:	ff                   	(bad)  
    e1c7:	ff 88 06 00 00 29    	dec    DWORD PTR [rax+0x29000006]
    e1cd:	63 ff                	movsxd edi,edi
    e1cf:	ff a8 06 00 00 e5    	jmp    FWORD PTR [rax-0x1afffffa]
    e1d5:	6b ff ff             	imul   edi,edi,0xffffffff
    e1d8:	d0 06                	rol    BYTE PTR [rsi],1
    e1da:	00 00                	add    BYTE PTR [rax],al
    e1dc:	3a 6d ff             	cmp    ch,BYTE PTR [rbp-0x1]
    e1df:	ff f0                	push   rax
    e1e1:	06                   	(bad)  
    e1e2:	00 00                	add    BYTE PTR [rax],al
    e1e4:	39 6e ff             	cmp    DWORD PTR [rsi-0x1],ebp
    e1e7:	ff 10                	call   QWORD PTR [rax]
    e1e9:	07                   	(bad)  
    e1ea:	00 00                	add    BYTE PTR [rax],al
    e1ec:	25 6f ff ff 30       	and    eax,0x30ffff6f
    e1f1:	07                   	(bad)  
    e1f2:	00 00                	add    BYTE PTR [rax],al
    e1f4:	d7                   	xlat   BYTE PTR ds:[rbx]
    e1f5:	72 ff                	jb     e1f6 <__GNU_EH_FRAME_HDR+0xe6>
    e1f7:	ff 50 07             	call   QWORD PTR [rax+0x7]
    e1fa:	00 00                	add    BYTE PTR [rax],al
    e1fc:	5a                   	pop    rdx
    e1fd:	73 ff                	jae    e1fe <__GNU_EH_FRAME_HDR+0xee>
    e1ff:	ff 70 07             	push   QWORD PTR [rax+0x7]
    e202:	00 00                	add    BYTE PTR [rax],al
    e204:	84 75 ff             	test   BYTE PTR [rbp-0x1],dh
    e207:	ff 98 07 00 00 c1    	call   FWORD PTR [rax-0x3efffff9]
    e20d:	77 ff                	ja     e20e <__GNU_EH_FRAME_HDR+0xfe>
    e20f:	ff                   	(bad)  
    e210:	bc 07 00 00 27       	mov    esp,0x27000007
    e215:	78 ff                	js     e216 <__GNU_EH_FRAME_HDR+0x106>
    e217:	ff                   	(bad)  
    e218:	dc 07                	fadd   QWORD PTR [rdi]
    e21a:	00 00                	add    BYTE PTR [rax],al
    e21c:	3e 78 ff             	ds js  e21e <__GNU_EH_FRAME_HDR+0x10e>
    e21f:	ff                   	(bad)  
    e220:	fc                   	cld    
    e221:	07                   	(bad)  
    e222:	00 00                	add    BYTE PTR [rax],al
    e224:	8f                   	(bad)  
    e225:	78 ff                	js     e226 <__GNU_EH_FRAME_HDR+0x116>
    e227:	ff 20                	jmp    QWORD PTR [rax]
    e229:	08 00                	or     BYTE PTR [rax],al
    e22b:	00 cc                	add    ah,cl
    e22d:	7e ff                	jle    e22e <__GNU_EH_FRAME_HDR+0x11e>
    e22f:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    e233:	00 e6                	add    dh,ah
    e235:	7e ff                	jle    e236 <__GNU_EH_FRAME_HDR+0x126>
    e237:	ff 64 08 00          	jmp    QWORD PTR [rax+rcx*1+0x0]
    e23b:	00 0f                	add    BYTE PTR [rdi],cl
    e23d:	7f ff                	jg     e23e <__GNU_EH_FRAME_HDR+0x12e>
    e23f:	ff 84 08 00 00 3f 7f 	inc    DWORD PTR [rax+rcx*1+0x7f3f0000]
    e246:	ff                   	(bad)  
    e247:	ff a4 08 00 00 76 7f 	jmp    QWORD PTR [rax+rcx*1+0x7f760000]
    e24e:	ff                   	(bad)  
    e24f:	ff c0                	inc    eax
    e251:	08 00                	or     BYTE PTR [rax],al
    e253:	00 bb 80 ff ff e0    	add    BYTE PTR [rbx-0x1f000080],bh
    e259:	08 00                	or     BYTE PTR [rax],al
    e25b:	00 1b                	add    BYTE PTR [rbx],bl
    e25d:	82                   	(bad)  
    e25e:	ff                   	(bad)  
    e25f:	ff 00                	inc    DWORD PTR [rax]
    e261:	09 00                	or     DWORD PTR [rax],eax
    e263:	00 7c 82 ff          	add    BYTE PTR [rdx+rax*4-0x1],bh
    e267:	ff 20                	jmp    QWORD PTR [rax]
    e269:	09 00                	or     DWORD PTR [rax],eax
    e26b:	00 b5 82 ff ff 40    	add    BYTE PTR [rbp+0x40ffff82],dh
    e271:	09 00                	or     DWORD PTR [rax],eax
    e273:	00 73 83             	add    BYTE PTR [rbx-0x7d],dh
    e276:	ff                   	(bad)  
    e277:	ff 60 09             	jmp    QWORD PTR [rax+0x9]
    e27a:	00 00                	add    BYTE PTR [rax],al
    e27c:	31 86 ff ff 80 09    	xor    DWORD PTR [rsi+0x980ffff],eax
    e282:	00 00                	add    BYTE PTR [rax],al
    e284:	29 88 ff ff a0 09    	sub    DWORD PTR [rax+0x9a0ffff],ecx
    e28a:	00 00                	add    BYTE PTR [rax],al
    e28c:	83 88 ff ff c0 09 00 	or     DWORD PTR [rax+0x9c0ffff],0x0
    e293:	00 73 8b             	add    BYTE PTR [rbx-0x75],dh
    e296:	ff                   	(bad)  
    e297:	ff e0                	jmp    rax
    e299:	09 00                	or     DWORD PTR [rax],eax
    e29b:	00 c4                	add    ah,al
    e29d:	8f                   	(bad)  
    e29e:	ff                   	(bad)  
    e29f:	ff 00                	inc    DWORD PTR [rax]
    e2a1:	0a 00                	or     al,BYTE PTR [rax]
    e2a3:	00 ee                	add    dh,ch
    e2a5:	8f                   	(bad)  
    e2a6:	ff                   	(bad)  
    e2a7:	ff 1c 0a             	call   FWORD PTR [rdx+rcx*1]
    e2aa:	00 00                	add    BYTE PTR [rax],al
    e2ac:	a0 91 ff ff 40 0a 00 	movabs al,ds:0xb700000a40ffff91
    e2b3:	00 b7 
    e2b5:	91                   	xchg   ecx,eax
    e2b6:	ff                   	(bad)  
    e2b7:	ff 60 0a             	jmp    QWORD PTR [rax+0xa]
    e2ba:	00 00                	add    BYTE PTR [rax],al
    e2bc:	06                   	(bad)  
    e2bd:	92                   	xchg   edx,eax
    e2be:	ff                   	(bad)  
    e2bf:	ff 80 0a 00 00 53    	inc    DWORD PTR [rax+0x5300000a]
    e2c5:	92                   	xchg   edx,eax
    e2c6:	ff                   	(bad)  
    e2c7:	ff a0 0a 00 00 ca    	jmp    QWORD PTR [rax-0x35fffff6]
    e2cd:	93                   	xchg   ebx,eax
    e2ce:	ff                   	(bad)  
    e2cf:	ff                   	(bad)  
    e2d0:	bc 0a 00 00 66       	mov    esp,0x6600000a
    e2d5:	94                   	xchg   esp,eax
    e2d6:	ff                   	(bad)  
    e2d7:	ff e0                	jmp    rax
    e2d9:	0a 00                	or     al,BYTE PTR [rax]
    e2db:	00 54 96 ff          	add    BYTE PTR [rsi+rdx*4-0x1],dl
    e2df:	ff 00                	inc    DWORD PTR [rax]
    e2e1:	0b 00                	or     eax,DWORD PTR [rax]
    e2e3:	00 3c 98             	add    BYTE PTR [rax+rbx*4],bh
    e2e6:	ff                   	(bad)  
    e2e7:	ff 20                	jmp    QWORD PTR [rax]
    e2e9:	0b 00                	or     eax,DWORD PTR [rax]
    e2eb:	00 a8 98 ff ff 40    	add    BYTE PTR [rax+0x40ffff98],ch
    e2f1:	0b 00                	or     eax,DWORD PTR [rax]
    e2f3:	00 1a                	add    BYTE PTR [rdx],bl
    e2f5:	99                   	cdq    
    e2f6:	ff                   	(bad)  
    e2f7:	ff 60 0b             	jmp    QWORD PTR [rax+0xb]
    e2fa:	00 00                	add    BYTE PTR [rax],al
    e2fc:	2b 9a ff ff 80 0b    	sub    ebx,DWORD PTR [rdx+0xb80ffff]
    e302:	00 00                	add    BYTE PTR [rax],al
    e304:	87 9a ff ff a0 0b    	xchg   DWORD PTR [rdx+0xba0ffff],ebx
    e30a:	00 00                	add    BYTE PTR [rax],al
    e30c:	c5 9a ff             	(bad)
    e30f:	ff c0                	inc    eax
    e311:	0b 00                	or     eax,DWORD PTR [rax]
    e313:	00 4b 9b             	add    BYTE PTR [rbx-0x65],cl
    e316:	ff                   	(bad)  
    e317:	ff e0                	jmp    rax
    e319:	0b 00                	or     eax,DWORD PTR [rax]
    e31b:	00 2a                	add    BYTE PTR [rdx],ch
    e31d:	9c                   	pushf  
    e31e:	ff                   	(bad)  
    e31f:	ff 00                	inc    DWORD PTR [rax]
    e321:	0c 00                	or     al,0x0
    e323:	00 9e 9c ff ff 20    	add    BYTE PTR [rsi+0x20ffff9c],bl
    e329:	0c 00                	or     al,0x0
    e32b:	00 3a                	add    BYTE PTR [rdx],bh
    e32d:	9d                   	popf   
    e32e:	ff                   	(bad)  
    e32f:	ff 40 0c             	inc    DWORD PTR [rax+0xc]
    e332:	00 00                	add    BYTE PTR [rax],al
    e334:	63 9d ff ff 60 0c    	movsxd ebx,DWORD PTR [rbp+0xc60ffff]
    e33a:	00 00                	add    BYTE PTR [rax],al
    e33c:	8c 9d ff ff 80 0c    	mov    WORD PTR [rbp+0xc80ffff],ds
    e342:	00 00                	add    BYTE PTR [rax],al
    e344:	df 9e ff ff a8 0c    	fistp  WORD PTR [rsi+0xca8ffff]
    e34a:	00 00                	add    BYTE PTR [rax],al
    e34c:	f2 9f                	repnz lahf 
    e34e:	ff                   	(bad)  
    e34f:	ff c8                	dec    eax
    e351:	0c 00                	or     al,0x0
    e353:	00 eb                	add    bl,ch
    e355:	a0 ff ff e8 0c 00 00 	movabs al,ds:0xa18d00000ce8ffff
    e35c:	8d a1 
    e35e:	ff                   	(bad)  
    e35f:	ff 08                	dec    DWORD PTR [rax]
    e361:	0d 00 00 ab a1       	or     eax,0xa1ab0000
    e366:	ff                   	(bad)  
    e367:	ff 28                	jmp    FWORD PTR [rax]
    e369:	0d 00 00 0e a3       	or     eax,0xa30e0000
    e36e:	ff                   	(bad)  
    e36f:	ff 48 0d             	dec    DWORD PTR [rax+0xd]
    e372:	00 00                	add    BYTE PTR [rax],al
    e374:	1f                   	(bad)  
    e375:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e376:	ff                   	(bad)  
    e377:	ff                   	(bad)  
    e378:	78 0d                	js     e387 <__GNU_EH_FRAME_HDR+0x277>
    e37a:	00 00                	add    BYTE PTR [rax],al
    e37c:	d1 a5 ff ff 98 0d    	shl    DWORD PTR [rbp+0xd98ffff],1
    e382:	00 00                	add    BYTE PTR [rax],al
    e384:	76 a6                	jbe    e32c <__GNU_EH_FRAME_HDR+0x21c>
    e386:	ff                   	(bad)  
    e387:	ff                   	(bad)  
    e388:	b8 0d 00 00 0a       	mov    eax,0xa00000d
    e38d:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    e38e:	ff                   	(bad)  
    e38f:	ff e0                	jmp    rax
    e391:	0d 00 00 df a7       	or     eax,0xa7df0000
    e396:	ff                   	(bad)  
    e397:	ff 00                	inc    DWORD PTR [rax]
    e399:	0e                   	(bad)  
    e39a:	00 00                	add    BYTE PTR [rax],al
    e39c:	be a8 ff ff 20       	mov    esi,0x20ffffa8
    e3a1:	0e                   	(bad)  
    e3a2:	00 00                	add    BYTE PTR [rax],al
    e3a4:	3b a9 ff ff 40 0e    	cmp    ebp,DWORD PTR [rcx+0xe40ffff]
    e3aa:	00 00                	add    BYTE PTR [rax],al
    e3ac:	71 aa                	jno    e358 <__GNU_EH_FRAME_HDR+0x248>
    e3ae:	ff                   	(bad)  
    e3af:	ff 60 0e             	jmp    QWORD PTR [rax+0xe]
    e3b2:	00 00                	add    BYTE PTR [rax],al
    e3b4:	ef                   	out    dx,eax
    e3b5:	aa                   	stos   BYTE PTR es:[rdi],al
    e3b6:	ff                   	(bad)  
    e3b7:	ff 80 0e 00 00 28    	inc    DWORD PTR [rax+0x2800000e]
    e3bd:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e3be:	ff                   	(bad)  
    e3bf:	ff a0 0e 00 00 f1    	jmp    QWORD PTR [rax-0xefffff2]
    e3c5:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    e3c6:	ff                   	(bad)  
    e3c7:	ff c0                	inc    eax
    e3c9:	0e                   	(bad)  
    e3ca:	00 00                	add    BYTE PTR [rax],al
    e3cc:	92                   	xchg   edx,eax
    e3cd:	af                   	scas   eax,DWORD PTR es:[rdi]
    e3ce:	ff                   	(bad)  
    e3cf:	ff e0                	jmp    rax
    e3d1:	0e                   	(bad)  
    e3d2:	00 00                	add    BYTE PTR [rax],al
    e3d4:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    e3d5:	b0 ff                	mov    al,0xff
    e3d7:	ff 00                	inc    DWORD PTR [rax]
    e3d9:	0f 00 00             	sldt   WORD PTR [rax]
    e3dc:	0b b1 ff ff 20 0f    	or     esi,DWORD PTR [rcx+0xf20ffff]
    e3e2:	00 00                	add    BYTE PTR [rax],al
    e3e4:	80 b1 ff ff 40 0f 00 	xor    BYTE PTR [rcx+0xf40ffff],0x0
    e3eb:	00 5b b2             	add    BYTE PTR [rbx-0x4e],bl
    e3ee:	ff                   	(bad)  
    e3ef:	ff 60 0f             	jmp    QWORD PTR [rax+0xf]
    e3f2:	00 00                	add    BYTE PTR [rax],al
    e3f4:	cd b3                	int    0xb3
    e3f6:	ff                   	(bad)  
    e3f7:	ff 80 0f 00 00 39    	inc    DWORD PTR [rax+0x3900000f]
    e3fd:	b4 ff                	mov    ah,0xff
    e3ff:	ff a0 0f 00 00 b9    	jmp    QWORD PTR [rax-0x46fffff1]
    e405:	b4 ff                	mov    ah,0xff
    e407:	ff c0                	inc    eax
    e409:	0f 00 00             	sldt   WORD PTR [rax]
    e40c:	cf                   	iret   
    e40d:	b4 ff                	mov    ah,0xff
    e40f:	ff e0                	jmp    rax
    e411:	0f 00 00             	sldt   WORD PTR [rax]
    e414:	09 b6 ff ff 04 10    	or     DWORD PTR [rsi+0x1004ffff],esi
    e41a:	00 00                	add    BYTE PTR [rax],al
    e41c:	6d                   	ins    DWORD PTR es:[rdi],dx
    e41d:	b6 ff                	mov    dh,0xff
    e41f:	ff 24 10             	jmp    QWORD PTR [rax+rdx*1]
    e422:	00 00                	add    BYTE PTR [rax],al
    e424:	c0 b6 ff ff 44 10 00 	shl    BYTE PTR [rsi+0x1044ffff],0x0
    e42b:	00 71 b7             	add    BYTE PTR [rcx-0x49],dh
    e42e:	ff                   	(bad)  
    e42f:	ff 64 10 00          	jmp    QWORD PTR [rax+rdx*1+0x0]
    e433:	00 3c b8             	add    BYTE PTR [rax+rdi*4],bh
    e436:	ff                   	(bad)  
    e437:	ff 84 10 00 00 91 b8 	inc    DWORD PTR [rax+rdx*1-0x476f0000]
    e43e:	ff                   	(bad)  
    e43f:	ff a4 10 00 00 c1 b8 	jmp    QWORD PTR [rax+rdx*1-0x473f0000]
    e446:	ff                   	(bad)  
    e447:	ff c4                	inc    esp
    e449:	10 00                	adc    BYTE PTR [rax],al
    e44b:	00 28                	add    BYTE PTR [rax],ch
    e44d:	b9 ff ff e4 10       	mov    ecx,0x10e4ffff
    e452:	00 00                	add    BYTE PTR [rax],al
    e454:	60                   	(bad)  
    e455:	c8 ff ff 08          	enter  0xffff,0x8
    e459:	11 00                	adc    DWORD PTR [rax],eax
    e45b:	00 a6 c8 ff ff 28    	add    BYTE PTR [rsi+0x28ffffc8],ah
    e461:	11 00                	adc    DWORD PTR [rax],eax
    e463:	00 e1                	add    cl,ah
    e465:	ca ff ff             	retf   0xffff
    e468:	50                   	push   rax
    e469:	11 00                	adc    DWORD PTR [rax],eax
    e46b:	00 86 cc ff ff 70    	add    BYTE PTR [rsi+0x70ffffcc],al
    e471:	11 00                	adc    DWORD PTR [rax],eax
    e473:	00 98 cd ff ff 90    	add    BYTE PTR [rax-0x6f000033],bl
    e479:	11 00                	adc    DWORD PTR [rax],eax
    e47b:	00 54 ce ff          	add    BYTE PTR [rsi+rcx*8-0x1],dl
    e47f:	ff                   	(bad)  
    e480:	b8 11 00 00 ef       	mov    eax,0xef000011
    e485:	cf                   	iret   
    e486:	ff                   	(bad)  
    e487:	ff e0                	jmp    rax
    e489:	11 00                	adc    DWORD PTR [rax],eax
    e48b:	00 94 d0 ff ff 00 12 	add    BYTE PTR [rax+rdx*8+0x1200ffff],dl
    e492:	00 00                	add    BYTE PTR [rax],al
    e494:	d7                   	xlat   BYTE PTR ds:[rbx]
    e495:	d1 ff                	sar    edi,1
    e497:	ff 20                	jmp    QWORD PTR [rax]
    e499:	12 00                	adc    al,BYTE PTR [rax]
    e49b:	00 ca                	add    dl,cl
    e49d:	d2 ff                	sar    bh,cl
    e49f:	ff 40 12             	inc    DWORD PTR [rax+0x12]
    e4a2:	00 00                	add    BYTE PTR [rax],al
    e4a4:	3a d3                	cmp    dl,bl
    e4a6:	ff                   	(bad)  
    e4a7:	ff 60 12             	jmp    QWORD PTR [rax+0x12]
    e4aa:	00 00                	add    BYTE PTR [rax],al
    e4ac:	df d5                	(bad)  
    e4ae:	ff                   	(bad)  
    e4af:	ff 80 12 00 00 49    	inc    DWORD PTR [rax+0x49000012]
    e4b5:	d6                   	(bad)  
    e4b6:	ff                   	(bad)  
    e4b7:	ff a0 12 00 00 b7    	jmp    QWORD PTR [rax-0x48ffffee]
    e4bd:	d6                   	(bad)  
    e4be:	ff                   	(bad)  
    e4bf:	ff c0                	inc    eax
    e4c1:	12 00                	adc    al,BYTE PTR [rax]
    e4c3:	00 44 d8 ff          	add    BYTE PTR [rax+rbx*8-0x1],al
    e4c7:	ff                   	(bad)  
    e4c8:	e8                   	.byte 0xe8
    e4c9:	12 00                	adc    al,BYTE PTR [rax]
	...

Disassembly of section .eh_frame:

000000000000e4d0 <__FRAME_END__-0xf54>:
    e4d0:	14 00                	adc    al,0x0
    e4d2:	00 00                	add    BYTE PTR [rax],al
    e4d4:	00 00                	add    BYTE PTR [rax],al
    e4d6:	00 00                	add    BYTE PTR [rax],al
    e4d8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    e4db:	00 01                	add    BYTE PTR [rcx],al
    e4dd:	78 10                	js     e4ef <__GNU_EH_FRAME_HDR+0x3df>
    e4df:	01 1b                	add    DWORD PTR [rbx],ebx
    e4e1:	0c 07                	or     al,0x7
    e4e3:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    e4e9:	00 00                	add    BYTE PTR [rax],al
    e4eb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e4ee:	00 00                	add    BYTE PTR [rax],al
    e4f0:	10 44 ff ff          	adc    BYTE PTR [rdi+rdi*8-0x1],al
    e4f4:	26 00 00             	es add BYTE PTR [rax],al
    e4f7:	00 00                	add    BYTE PTR [rax],al
    e4f9:	44 07                	rex.R (bad) 
    e4fb:	10 00                	adc    BYTE PTR [rax],al
    e4fd:	00 00                	add    BYTE PTR [rax],al
    e4ff:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e502:	00 00                	add    BYTE PTR [rax],al
    e504:	34 00                	xor    al,0x0
    e506:	00 00                	add    BYTE PTR [rax],al
    e508:	18 3b                	sbb    BYTE PTR [rbx],bh
    e50a:	ff                   	(bad)  
    e50b:	ff 70 04             	push   QWORD PTR [rax+0x4]
    e50e:	00 00                	add    BYTE PTR [rax],al
    e510:	00 0e                	add    BYTE PTR [rsi],cl
    e512:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    e515:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    e518:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    e51b:	80 00 3f             	add    BYTE PTR [rax],0x3f
    e51e:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    e520:	2a 33                	sub    dh,BYTE PTR [rbx]
    e522:	24 22                	and    al,0x22
    e524:	00 00                	add    BYTE PTR [rax],al
    e526:	00 00                	add    BYTE PTR [rax],al
    e528:	14 00                	adc    al,0x0
    e52a:	00 00                	add    BYTE PTR [rax],al
    e52c:	5c                   	pop    rsp
    e52d:	00 00                	add    BYTE PTR [rax],al
    e52f:	00 60 3f             	add    BYTE PTR [rax+0x3f],ah
    e532:	ff                   	(bad)  
    e533:	ff 10                	call   QWORD PTR [rax]
	...
    e53d:	00 00                	add    BYTE PTR [rax],al
    e53f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    e542:	00 00                	add    BYTE PTR [rax],al
    e544:	74 00                	je     e546 <__GNU_EH_FRAME_HDR+0x436>
    e546:	00 00                	add    BYTE PTR [rax],al
    e548:	58                   	pop    rax
    e549:	3f                   	(bad)  
    e54a:	ff                   	(bad)  
    e54b:	ff 60 04             	jmp    QWORD PTR [rax+0x4]
	...
    e556:	00 00                	add    BYTE PTR [rax],al
    e558:	1c 00                	sbb    al,0x0
    e55a:	00 00                	add    BYTE PTR [rax],al
    e55c:	8c 00                	mov    WORD PTR [rax],es
    e55e:	00 00                	add    BYTE PTR [rax],al
    e560:	89 44 ff ff          	mov    DWORD PTR [rdi+rdi*8-0x1],eax
    e564:	3a 00                	cmp    al,BYTE PTR [rax]
    e566:	00 00                	add    BYTE PTR [rax],al
    e568:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e56b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e571:	71 0c                	jno    e57f <__GNU_EH_FRAME_HDR+0x46f>
    e573:	07                   	(bad)  
    e574:	08 00                	or     BYTE PTR [rax],al
    e576:	00 00                	add    BYTE PTR [rax],al
    e578:	24 00                	and    al,0x0
    e57a:	00 00                	add    BYTE PTR [rax],al
    e57c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e57d:	00 00                	add    BYTE PTR [rax],al
    e57f:	00 a3 44 ff ff 56    	add    BYTE PTR [rbx+0x56ffff44],ah
    e585:	01 00                	add    DWORD PTR [rax],eax
    e587:	00 00                	add    BYTE PTR [rax],al
    e589:	45 0e                	rex.RB (bad) 
    e58b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e591:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e595:	48 01 0c 07          	add    QWORD PTR [rdi+rax*1],rcx
    e599:	08 00                	or     BYTE PTR [rax],al
    e59b:	00 00                	add    BYTE PTR [rax],al
    e59d:	00 00                	add    BYTE PTR [rax],al
    e59f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e5a2:	00 00                	add    BYTE PTR [rax],al
    e5a4:	d4                   	(bad)  
    e5a5:	00 00                	add    BYTE PTR [rax],al
    e5a7:	00 d1                	add    cl,dl
    e5a9:	45 ff                	rex.RB (bad) 
    e5ab:	ff f4                	push   rsp
    e5ad:	02 00                	add    al,BYTE PTR [rax]
    e5af:	00 00                	add    BYTE PTR [rax],al
    e5b1:	45 0e                	rex.RB (bad) 
    e5b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5b9:	03 eb                	add    ebp,ebx
    e5bb:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e5be:	08 00                	or     BYTE PTR [rax],al
    e5c0:	1c 00                	sbb    al,0x0
    e5c2:	00 00                	add    BYTE PTR [rax],al
    e5c4:	f4                   	hlt    
    e5c5:	00 00                	add    BYTE PTR [rax],al
    e5c7:	00 a5 48 ff ff 13    	add    BYTE PTR [rbp+0x13ffff48],ah
    e5cd:	01 00                	add    DWORD PTR [rax],eax
    e5cf:	00 00                	add    BYTE PTR [rax],al
    e5d1:	45 0e                	rex.RB (bad) 
    e5d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5d9:	03 0a                	add    ecx,DWORD PTR [rdx]
    e5db:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    e5de:	08 00                	or     BYTE PTR [rax],al
    e5e0:	1c 00                	sbb    al,0x0
    e5e2:	00 00                	add    BYTE PTR [rax],al
    e5e4:	14 01                	adc    al,0x1
    e5e6:	00 00                	add    BYTE PTR [rax],al
    e5e8:	98                   	cwde   
    e5e9:	49 ff                	rex.WB (bad) 
    e5eb:	ff ae 00 00 00 00    	jmp    FWORD PTR [rsi+0x0]
    e5f1:	45 0e                	rex.RB (bad) 
    e5f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e5f9:	02 a5 0c 07 08 00    	add    ah,BYTE PTR [rbp+0x8070c]
    e5ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e602:	00 00                	add    BYTE PTR [rax],al
    e604:	34 01                	xor    al,0x1
    e606:	00 00                	add    BYTE PTR [rax],al
    e608:	26 4a ff             	es rex.WX (bad) 
    e60b:	ff a6 00 00 00 00    	jmp    QWORD PTR [rsi+0x0]
    e611:	45 0e                	rex.RB (bad) 
    e613:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e619:	02 9d 0c 07 08 00    	add    bl,BYTE PTR [rbp+0x8070c]
    e61f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e622:	00 00                	add    BYTE PTR [rax],al
    e624:	54                   	push   rsp
    e625:	01 00                	add    DWORD PTR [rax],eax
    e627:	00 ac 4a ff ff 95 00 	add    BYTE PTR [rdx+rcx*2+0x95ffff],ch
    e62e:	00 00                	add    BYTE PTR [rax],al
    e630:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e633:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e639:	02 8c 0c 07 08 00 00 	add    cl,BYTE PTR [rsp+rcx*1+0x807]
    e640:	1c 00                	sbb    al,0x0
    e642:	00 00                	add    BYTE PTR [rax],al
    e644:	74 01                	je     e647 <__GNU_EH_FRAME_HDR+0x537>
    e646:	00 00                	add    BYTE PTR [rax],al
    e648:	21 4b ff             	and    DWORD PTR [rbx-0x1],ecx
    e64b:	ff 94 00 00 00 00 45 	call   QWORD PTR [rax+rax*1+0x45000000]
    e652:	0e                   	(bad)  
    e653:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e659:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    e65f:	00 28                	add    BYTE PTR [rax],ch
    e661:	00 00                	add    BYTE PTR [rax],al
    e663:	00 94 01 00 00 95 4b 	add    BYTE PTR [rcx+rax*1+0x4b950000],dl
    e66a:	ff                   	(bad)  
    e66b:	ff cc                	dec    esp
    e66d:	01 00                	add    DWORD PTR [rax],eax
    e66f:	00 00                	add    BYTE PTR [rax],al
    e671:	45 0e                	rex.RB (bad) 
    e673:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e679:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    e67c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    e683:	07                   	(bad)  
    e684:	03 b6 01 0c 07 08    	add    esi,DWORD PTR [rsi+0x8070c01]
    e68a:	00 00                	add    BYTE PTR [rax],al
    e68c:	20 00                	and    BYTE PTR [rax],al
    e68e:	00 00                	add    BYTE PTR [rax],al
    e690:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    e693:	00 35 4d ff ff d4    	add    BYTE PTR [rip+0xffffffffd4ffff4d],dh        # ffffffffd500e5e6 <_end+0xffffffffd4ecf5a6>
    e699:	00 00                	add    BYTE PTR [rax],al
    e69b:	00 00                	add    BYTE PTR [rax],al
    e69d:	45 0e                	rex.RB (bad) 
    e69f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6a5:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6a9:	c6                   	(bad)  
    e6aa:	0c 07                	or     al,0x7
    e6ac:	08 00                	or     BYTE PTR [rax],al
    e6ae:	00 00                	add    BYTE PTR [rax],al
    e6b0:	20 00                	and    BYTE PTR [rax],al
    e6b2:	00 00                	add    BYTE PTR [rax],al
    e6b4:	e4 01                	in     al,0x1
    e6b6:	00 00                	add    BYTE PTR [rax],al
    e6b8:	e5 4d                	in     eax,0x4d
    e6ba:	ff                   	(bad)  
    e6bb:	ff c7                	inc    edi
    e6bd:	00 00                	add    BYTE PTR [rax],al
    e6bf:	00 00                	add    BYTE PTR [rax],al
    e6c1:	45 0e                	rex.RB (bad) 
    e6c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6c9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e6cd:	b9 0c 07 08 00       	mov    ecx,0x8070c
    e6d2:	00 00                	add    BYTE PTR [rax],al
    e6d4:	1c 00                	sbb    al,0x0
    e6d6:	00 00                	add    BYTE PTR [rax],al
    e6d8:	08 02                	or     BYTE PTR [rdx],al
    e6da:	00 00                	add    BYTE PTR [rax],al
    e6dc:	88 4e ff             	mov    BYTE PTR [rsi-0x1],cl
    e6df:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    e6e2:	00 00                	add    BYTE PTR [rax],al
    e6e4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e6e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e6ed:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    e6f0:	07                   	(bad)  
    e6f1:	08 00                	or     BYTE PTR [rax],al
    e6f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e6f6:	00 00                	add    BYTE PTR [rax],al
    e6f8:	28 02                	sub    BYTE PTR [rdx],al
    e6fa:	00 00                	add    BYTE PTR [rax],al
    e6fc:	bb 4e ff ff 33       	mov    ebx,0x33ffff4e
    e701:	00 00                	add    BYTE PTR [rax],al
    e703:	00 00                	add    BYTE PTR [rax],al
    e705:	45 0e                	rex.RB (bad) 
    e707:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e70d:	6a 0c                	push   0xc
    e70f:	07                   	(bad)  
    e710:	08 00                	or     BYTE PTR [rax],al
    e712:	00 00                	add    BYTE PTR [rax],al
    e714:	1c 00                	sbb    al,0x0
    e716:	00 00                	add    BYTE PTR [rax],al
    e718:	48 02 00             	rex.W add al,BYTE PTR [rax]
    e71b:	00 ce                	add    dh,cl
    e71d:	4e ff                	rex.WRX (bad) 
    e71f:	ff 21                	jmp    QWORD PTR [rcx]
    e721:	00 00                	add    BYTE PTR [rax],al
    e723:	00 00                	add    BYTE PTR [rax],al
    e725:	45 0e                	rex.RB (bad) 
    e727:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e72d:	58                   	pop    rax
    e72e:	0c 07                	or     al,0x7
    e730:	08 00                	or     BYTE PTR [rax],al
    e732:	00 00                	add    BYTE PTR [rax],al
    e734:	20 00                	and    BYTE PTR [rax],al
    e736:	00 00                	add    BYTE PTR [rax],al
    e738:	68 02 00 00 cf       	push   0xffffffffcf000002
    e73d:	4e ff                	rex.WRX (bad) 
    e73f:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    e742:	00 00                	add    BYTE PTR [rax],al
    e744:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e747:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e74d:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    e751:	5a                   	pop    rdx
    e752:	0c 07                	or     al,0x7
    e754:	08 00                	or     BYTE PTR [rax],al
    e756:	00 00                	add    BYTE PTR [rax],al
    e758:	1c 00                	sbb    al,0x0
    e75a:	00 00                	add    BYTE PTR [rax],al
    e75c:	8c 02                	mov    WORD PTR [rdx],es
    e75e:	00 00                	add    BYTE PTR [rax],al
    e760:	13 4f ff             	adc    ecx,DWORD PTR [rdi-0x1]
    e763:	ff 25 04 00 00 00    	jmp    QWORD PTR [rip+0x4]        # e76d <__GNU_EH_FRAME_HDR+0x65d>
    e769:	45 0e                	rex.RB (bad) 
    e76b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e771:	03 1c 04             	add    ebx,DWORD PTR [rsp+rax*1]
    e774:	0c 07                	or     al,0x7
    e776:	08 00                	or     BYTE PTR [rax],al
    e778:	1c 00                	sbb    al,0x0
    e77a:	00 00                	add    BYTE PTR [rax],al
    e77c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    e77d:	02 00                	add    al,BYTE PTR [rax]
    e77f:	00 18                	add    BYTE PTR [rax],bl
    e781:	53                   	push   rbx
    e782:	ff                   	(bad)  
    e783:	ff 5d 01             	call   FWORD PTR [rbp+0x1]
    e786:	00 00                	add    BYTE PTR [rax],al
    e788:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e78b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e791:	03 54 01 0c          	add    edx,DWORD PTR [rcx+rax*1+0xc]
    e795:	07                   	(bad)  
    e796:	08 00                	or     BYTE PTR [rax],al
    e798:	1c 00                	sbb    al,0x0
    e79a:	00 00                	add    BYTE PTR [rax],al
    e79c:	cc                   	int3   
    e79d:	02 00                	add    al,BYTE PTR [rax]
    e79f:	00 55 54             	add    BYTE PTR [rbp+0x54],dl
    e7a2:	ff                   	(bad)  
    e7a3:	ff 44 08 00          	inc    DWORD PTR [rax+rcx*1+0x0]
    e7a7:	00 00                	add    BYTE PTR [rax],al
    e7a9:	45 0e                	rex.RB (bad) 
    e7ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7b1:	03 3b                	add    edi,DWORD PTR [rbx]
    e7b3:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e7b6:	08 00                	or     BYTE PTR [rax],al
    e7b8:	24 00                	and    al,0x0
    e7ba:	00 00                	add    BYTE PTR [rax],al
    e7bc:	ec                   	in     al,dx
    e7bd:	02 00                	add    al,BYTE PTR [rax]
    e7bf:	00 79 5c             	add    BYTE PTR [rcx+0x5c],bh
    e7c2:	ff                   	(bad)  
    e7c3:	ff                   	(bad)  
    e7c4:	bc 08 00 00 00       	mov    esp,0x8
    e7c9:	45 0e                	rex.RB (bad) 
    e7cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7d1:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e7d5:	ab                   	stos   DWORD PTR es:[rdi],eax
    e7d6:	08 0c 07             	or     BYTE PTR [rdi+rax*1],cl
    e7d9:	08 00                	or     BYTE PTR [rax],al
    e7db:	00 00                	add    BYTE PTR [rax],al
    e7dd:	00 00                	add    BYTE PTR [rax],al
    e7df:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e7e2:	00 00                	add    BYTE PTR [rax],al
    e7e4:	14 03                	adc    al,0x3
    e7e6:	00 00                	add    BYTE PTR [rax],al
    e7e8:	0d 65 ff ff 55       	or     eax,0x55ffff65
    e7ed:	01 00                	add    DWORD PTR [rax],eax
    e7ef:	00 00                	add    BYTE PTR [rax],al
    e7f1:	45 0e                	rex.RB (bad) 
    e7f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e7f9:	03 4c 01 0c          	add    ecx,DWORD PTR [rcx+rax*1+0xc]
    e7fd:	07                   	(bad)  
    e7fe:	08 00                	or     BYTE PTR [rax],al
    e800:	1c 00                	sbb    al,0x0
    e802:	00 00                	add    BYTE PTR [rax],al
    e804:	34 03                	xor    al,0x3
    e806:	00 00                	add    BYTE PTR [rax],al
    e808:	42                   	rex.X
    e809:	66 ff                	data16 (bad) 
    e80b:	ff                   	(bad)  
    e80c:	ff 00                	inc    DWORD PTR [rax]
    e80e:	00 00                	add    BYTE PTR [rax],al
    e810:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e813:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e819:	02 f6                	add    dh,dh
    e81b:	0c 07                	or     al,0x7
    e81d:	08 00                	or     BYTE PTR [rax],al
    e81f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e822:	00 00                	add    BYTE PTR [rax],al
    e824:	54                   	push   rsp
    e825:	03 00                	add    eax,DWORD PTR [rax]
    e827:	00 21                	add    BYTE PTR [rcx],ah
    e829:	67 ff                	addr32 (bad) 
    e82b:	ff                   	(bad)  
    e82c:	ec                   	in     al,dx
    e82d:	00 00                	add    BYTE PTR [rax],al
    e82f:	00 00                	add    BYTE PTR [rax],al
    e831:	45 0e                	rex.RB (bad) 
    e833:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e839:	02 e3                	add    ah,bl
    e83b:	0c 07                	or     al,0x7
    e83d:	08 00                	or     BYTE PTR [rax],al
    e83f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e842:	00 00                	add    BYTE PTR [rax],al
    e844:	74 03                	je     e849 <__GNU_EH_FRAME_HDR+0x739>
    e846:	00 00                	add    BYTE PTR [rax],al
    e848:	ed                   	in     eax,dx
    e849:	67 ff                	addr32 (bad) 
    e84b:	ff b2 03 00 00 00    	push   QWORD PTR [rdx+0x3]
    e851:	45 0e                	rex.RB (bad) 
    e853:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e859:	03 a9 03 0c 07 08    	add    ebp,DWORD PTR [rcx+0x8070c03]
    e85f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e862:	00 00                	add    BYTE PTR [rax],al
    e864:	94                   	xchg   esp,eax
    e865:	03 00                	add    eax,DWORD PTR [rax]
    e867:	00 7f 6b             	add    BYTE PTR [rdi+0x6b],bh
    e86a:	ff                   	(bad)  
    e86b:	ff 83 00 00 00 00    	inc    DWORD PTR [rbx+0x0]
    e871:	45 0e                	rex.RB (bad) 
    e873:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e879:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
    e87c:	07                   	(bad)  
    e87d:	08 00                	or     BYTE PTR [rax],al
    e87f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    e882:	00 00                	add    BYTE PTR [rax],al
    e884:	b4 03                	mov    ah,0x3
    e886:	00 00                	add    BYTE PTR [rax],al
    e888:	e2 6b                	loop   e8f5 <__GNU_EH_FRAME_HDR+0x7e5>
    e88a:	ff                   	(bad)  
    e88b:	ff 2a                	jmp    FWORD PTR [rdx]
    e88d:	02 00                	add    al,BYTE PTR [rax]
    e88f:	00 00                	add    BYTE PTR [rax],al
    e891:	45 0e                	rex.RB (bad) 
    e893:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e899:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    e89d:	19 02                	sbb    DWORD PTR [rdx],eax
    e89f:	0c 07                	or     al,0x7
    e8a1:	08 00                	or     BYTE PTR [rax],al
    e8a3:	00 00                	add    BYTE PTR [rax],al
    e8a5:	00 00                	add    BYTE PTR [rax],al
    e8a7:	00 20                	add    BYTE PTR [rax],ah
    e8a9:	00 00                	add    BYTE PTR [rax],al
    e8ab:	00 dc                	add    ah,bl
    e8ad:	03 00                	add    eax,DWORD PTR [rax]
    e8af:	00 e4                	add    ah,ah
    e8b1:	6d                   	ins    DWORD PTR es:[rdi],dx
    e8b2:	ff                   	(bad)  
    e8b3:	ff                   	(bad)  
    e8b4:	3d 02 00 00 00       	cmp    eax,0x2
    e8b9:	45 0e                	rex.RB (bad) 
    e8bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8c1:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e8c5:	2f                   	(bad)  
    e8c6:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    e8c9:	08 00                	or     BYTE PTR [rax],al
    e8cb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8ce:	00 00                	add    BYTE PTR [rax],al
    e8d0:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    e8d3:	00 fd                	add    ch,bh
    e8d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    e8d6:	ff                   	(bad)  
    e8d7:	ff 66 00             	jmp    QWORD PTR [rsi+0x0]
    e8da:	00 00                	add    BYTE PTR [rax],al
    e8dc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e8df:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e8e5:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    e8e8:	07                   	(bad)  
    e8e9:	08 00                	or     BYTE PTR [rax],al
    e8eb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e8ee:	00 00                	add    BYTE PTR [rax],al
    e8f0:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    e8f3:	00 43 70             	add    BYTE PTR [rbx+0x70],al
    e8f6:	ff                   	(bad)  
    e8f7:	ff 17                	call   QWORD PTR [rdi]
    e8f9:	00 00                	add    BYTE PTR [rax],al
    e8fb:	00 00                	add    BYTE PTR [rax],al
    e8fd:	45 0e                	rex.RB (bad) 
    e8ff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e905:	4e 0c 07             	rex.WRX or al,0x7
    e908:	08 00                	or     BYTE PTR [rax],al
    e90a:	00 00                	add    BYTE PTR [rax],al
    e90c:	20 00                	and    BYTE PTR [rax],al
    e90e:	00 00                	add    BYTE PTR [rax],al
    e910:	40 04 00             	rex add al,0x0
    e913:	00 3a                	add    BYTE PTR [rdx],bh
    e915:	70 ff                	jo     e916 <__GNU_EH_FRAME_HDR+0x806>
    e917:	ff 51 00             	call   QWORD PTR [rcx+0x0]
    e91a:	00 00                	add    BYTE PTR [rax],al
    e91c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e91f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e925:	02 48 0c             	add    cl,BYTE PTR [rax+0xc]
    e928:	07                   	(bad)  
    e929:	08 00                	or     BYTE PTR [rax],al
    e92b:	00 00                	add    BYTE PTR [rax],al
    e92d:	00 00                	add    BYTE PTR [rax],al
    e92f:	00 20                	add    BYTE PTR [rax],ah
    e931:	00 00                	add    BYTE PTR [rax],al
    e933:	00 64 04 00          	add    BYTE PTR [rsp+rax*1+0x0],ah
    e937:	00 67 70             	add    BYTE PTR [rdi+0x70],ah
    e93a:	ff                   	(bad)  
    e93b:	ff                   	(bad)  
    e93c:	3d 06 00 00 00       	cmp    eax,0x6
    e941:	45 0e                	rex.RB (bad) 
    e943:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e949:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    e94d:	2f                   	(bad)  
    e94e:	06                   	(bad)  
    e94f:	0c 07                	or     al,0x7
    e951:	08 00                	or     BYTE PTR [rax],al
    e953:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e956:	00 00                	add    BYTE PTR [rax],al
    e958:	88 04 00             	mov    BYTE PTR [rax+rax*1],al
    e95b:	00 80 76 ff ff 1a    	add    BYTE PTR [rax+0x1affff76],al
    e961:	00 00                	add    BYTE PTR [rax],al
    e963:	00 00                	add    BYTE PTR [rax],al
    e965:	45 0e                	rex.RB (bad) 
    e967:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e96d:	51                   	push   rcx
    e96e:	0c 07                	or     al,0x7
    e970:	08 00                	or     BYTE PTR [rax],al
    e972:	00 00                	add    BYTE PTR [rax],al
    e974:	1c 00                	sbb    al,0x0
    e976:	00 00                	add    BYTE PTR [rax],al
    e978:	a8 04                	test   al,0x4
    e97a:	00 00                	add    BYTE PTR [rax],al
    e97c:	7a 76                	jp     e9f4 <__GNU_EH_FRAME_HDR+0x8e4>
    e97e:	ff                   	(bad)  
    e97f:	ff 29                	jmp    FWORD PTR [rcx]
    e981:	00 00                	add    BYTE PTR [rax],al
    e983:	00 00                	add    BYTE PTR [rax],al
    e985:	45 0e                	rex.RB (bad) 
    e987:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e98d:	60                   	(bad)  
    e98e:	0c 07                	or     al,0x7
    e990:	08 00                	or     BYTE PTR [rax],al
    e992:	00 00                	add    BYTE PTR [rax],al
    e994:	1c 00                	sbb    al,0x0
    e996:	00 00                	add    BYTE PTR [rax],al
    e998:	c8 04 00 00          	enter  0x4,0x0
    e99c:	83 76 ff ff          	xor    DWORD PTR [rsi-0x1],0xffffffff
    e9a0:	30 00                	xor    BYTE PTR [rax],al
    e9a2:	00 00                	add    BYTE PTR [rax],al
    e9a4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9ad:	67 0c 07             	addr32 or al,0x7
    e9b0:	08 00                	or     BYTE PTR [rax],al
    e9b2:	00 00                	add    BYTE PTR [rax],al
    e9b4:	18 00                	sbb    BYTE PTR [rax],al
    e9b6:	00 00                	add    BYTE PTR [rax],al
    e9b8:	e8 04 00 00 93       	call   ffffffff9300e9c1 <_end+0xffffffff92ecf981>
    e9bd:	76 ff                	jbe    e9be <__GNU_EH_FRAME_HDR+0x8ae>
    e9bf:	ff 37                	push   QWORD PTR [rdi]
    e9c1:	00 00                	add    BYTE PTR [rax],al
    e9c3:	00 00                	add    BYTE PTR [rax],al
    e9c5:	45 0e                	rex.RB (bad) 
    e9c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9cd:	00 00                	add    BYTE PTR [rax],al
    e9cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    e9d2:	00 00                	add    BYTE PTR [rax],al
    e9d4:	04 05                	add    al,0x5
    e9d6:	00 00                	add    BYTE PTR [rax],al
    e9d8:	ae                   	scas   al,BYTE PTR es:[rdi]
    e9d9:	76 ff                	jbe    e9da <__GNU_EH_FRAME_HDR+0x8ca>
    e9db:	ff 45 01             	inc    DWORD PTR [rbp+0x1]
    e9de:	00 00                	add    BYTE PTR [rax],al
    e9e0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    e9e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    e9e9:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    e9ec:	0c 07                	or     al,0x7
    e9ee:	08 00                	or     BYTE PTR [rax],al
    e9f0:	1c 00                	sbb    al,0x0
    e9f2:	00 00                	add    BYTE PTR [rax],al
    e9f4:	24 05                	and    al,0x5
    e9f6:	00 00                	add    BYTE PTR [rax],al
    e9f8:	d3 77 ff             	shl    DWORD PTR [rdi-0x1],cl
    e9fb:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
    e9fe:	00 00                	add    BYTE PTR [rax],al
    ea00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea09:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    ea0c:	0c 07                	or     al,0x7
    ea0e:	08 00                	or     BYTE PTR [rax],al
    ea10:	1c 00                	sbb    al,0x0
    ea12:	00 00                	add    BYTE PTR [rax],al
    ea14:	44 05 00 00 13 79    	rex.R add eax,0x79130000
    ea1a:	ff                   	(bad)  
    ea1b:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
    ea1e:	00 00                	add    BYTE PTR [rax],al
    ea20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea29:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
    ea2c:	07                   	(bad)  
    ea2d:	08 00                	or     BYTE PTR [rax],al
    ea2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea32:	00 00                	add    BYTE PTR [rax],al
    ea34:	64 05 00 00 54 79    	fs add eax,0x79540000
    ea3a:	ff                   	(bad)  
    ea3b:	ff                   	(bad)  
    ea3c:	39 00                	cmp    DWORD PTR [rax],eax
    ea3e:	00 00                	add    BYTE PTR [rax],al
    ea40:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ea43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea49:	70 0c                	jo     ea57 <__GNU_EH_FRAME_HDR+0x947>
    ea4b:	07                   	(bad)  
    ea4c:	08 00                	or     BYTE PTR [rax],al
    ea4e:	00 00                	add    BYTE PTR [rax],al
    ea50:	1c 00                	sbb    al,0x0
    ea52:	00 00                	add    BYTE PTR [rax],al
    ea54:	84 05 00 00 6d 79    	test   BYTE PTR [rip+0x796d0000],al        # 796dea5a <_end+0x7959fa1a>
    ea5a:	ff                   	(bad)  
    ea5b:	ff                   	(bad)  
    ea5c:	be 00 00 00 00       	mov    esi,0x0
    ea61:	45 0e                	rex.RB (bad) 
    ea63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea69:	02 b5 0c 07 08 00    	add    dh,BYTE PTR [rbp+0x8070c]
    ea6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea72:	00 00                	add    BYTE PTR [rax],al
    ea74:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ea75:	05 00 00 0b 7a       	add    eax,0x7a0b0000
    ea7a:	ff                   	(bad)  
    ea7b:	ff                   	(bad)  
    ea7c:	be 02 00 00 00       	mov    esi,0x2
    ea81:	45 0e                	rex.RB (bad) 
    ea83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ea89:	03 b5 02 0c 07 08    	add    esi,DWORD PTR [rbp+0x8070c02]
    ea8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ea92:	00 00                	add    BYTE PTR [rax],al
    ea94:	c4                   	(bad)  
    ea95:	05 00 00 a9 7c       	add    eax,0x7ca90000
    ea9a:	ff                   	(bad)  
    ea9b:	ff                   	(bad)  
    ea9c:	f8                   	clc    
    ea9d:	01 00                	add    DWORD PTR [rax],eax
    ea9f:	00 00                	add    BYTE PTR [rax],al
    eaa1:	45 0e                	rex.RB (bad) 
    eaa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eaa9:	03 ef                	add    ebp,edi
    eaab:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    eaae:	08 00                	or     BYTE PTR [rax],al
    eab0:	1c 00                	sbb    al,0x0
    eab2:	00 00                	add    BYTE PTR [rax],al
    eab4:	e4 05                	in     al,0x5
    eab6:	00 00                	add    BYTE PTR [rax],al
    eab8:	81 7e ff ff 5a 00 00 	cmp    DWORD PTR [rsi-0x1],0x5aff
    eabf:	00 00                	add    BYTE PTR [rax],al
    eac1:	45 0e                	rex.RB (bad) 
    eac3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eac9:	02 51 0c             	add    dl,BYTE PTR [rcx+0xc]
    eacc:	07                   	(bad)  
    eacd:	08 00                	or     BYTE PTR [rax],al
    eacf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ead2:	00 00                	add    BYTE PTR [rax],al
    ead4:	04 06                	add    al,0x6
    ead6:	00 00                	add    BYTE PTR [rax],al
    ead8:	bb 7e ff ff f0       	mov    ebx,0xf0ffff7e
    eadd:	02 00                	add    al,BYTE PTR [rax]
    eadf:	00 00                	add    BYTE PTR [rax],al
    eae1:	45 0e                	rex.RB (bad) 
    eae3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eae9:	03 e7                	add    esp,edi
    eaeb:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    eaee:	08 00                	or     BYTE PTR [rax],al
    eaf0:	1c 00                	sbb    al,0x0
    eaf2:	00 00                	add    BYTE PTR [rax],al
    eaf4:	24 06                	and    al,0x6
    eaf6:	00 00                	add    BYTE PTR [rax],al
    eaf8:	8b 81 ff ff 51 04    	mov    eax,DWORD PTR [rcx+0x451ffff]
    eafe:	00 00                	add    BYTE PTR [rax],al
    eb00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb09:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    eb0c:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    eb10:	18 00                	sbb    BYTE PTR [rax],al
    eb12:	00 00                	add    BYTE PTR [rax],al
    eb14:	44 06                	rex.R (bad) 
    eb16:	00 00                	add    BYTE PTR [rax],al
    eb18:	bc 85 ff ff 2a       	mov    esp,0x2affff85
    eb1d:	00 00                	add    BYTE PTR [rax],al
    eb1f:	00 00                	add    BYTE PTR [rax],al
    eb21:	45 0e                	rex.RB (bad) 
    eb23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb29:	00 00                	add    BYTE PTR [rax],al
    eb2b:	00 20                	add    BYTE PTR [rax],ah
    eb2d:	00 00                	add    BYTE PTR [rax],al
    eb2f:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    eb32:	00 00                	add    BYTE PTR [rax],al
    eb34:	ca 85 ff             	retf   0xff85
    eb37:	ff b2 01 00 00 00    	push   QWORD PTR [rdx+0x1]
    eb3d:	45 0e                	rex.RB (bad) 
    eb3f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb45:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    eb49:	a1 01 0c 07 08 00 00 	movabs eax,ds:0x1c000008070c01
    eb50:	1c 00 
    eb52:	00 00                	add    BYTE PTR [rax],al
    eb54:	84 06                	test   BYTE PTR [rsi],al
    eb56:	00 00                	add    BYTE PTR [rax],al
    eb58:	58                   	pop    rax
    eb59:	87 ff                	xchg   edi,edi
    eb5b:	ff 17                	call   QWORD PTR [rdi]
    eb5d:	00 00                	add    BYTE PTR [rax],al
    eb5f:	00 00                	add    BYTE PTR [rax],al
    eb61:	45 0e                	rex.RB (bad) 
    eb63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb69:	4e 0c 07             	rex.WRX or al,0x7
    eb6c:	08 00                	or     BYTE PTR [rax],al
    eb6e:	00 00                	add    BYTE PTR [rax],al
    eb70:	1c 00                	sbb    al,0x0
    eb72:	00 00                	add    BYTE PTR [rax],al
    eb74:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    eb75:	06                   	(bad)  
    eb76:	00 00                	add    BYTE PTR [rax],al
    eb78:	4f 87 ff             	rex.WRXB xchg r15,r15
    eb7b:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
    eb7e:	00 00                	add    BYTE PTR [rax],al
    eb80:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eb83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eb89:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
    eb8c:	07                   	(bad)  
    eb8d:	08 00                	or     BYTE PTR [rax],al
    eb8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eb92:	00 00                	add    BYTE PTR [rax],al
    eb94:	c4                   	(bad)  
    eb95:	06                   	(bad)  
    eb96:	00 00                	add    BYTE PTR [rax],al
    eb98:	7e 87                	jle    eb21 <__GNU_EH_FRAME_HDR+0xa11>
    eb9a:	ff                   	(bad)  
    eb9b:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
    eb9e:	00 00                	add    BYTE PTR [rax],al
    eba0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eba3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eba9:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
    ebad:	08 00                	or     BYTE PTR [rax],al
    ebaf:	00 18                	add    BYTE PTR [rax],bl
    ebb1:	00 00                	add    BYTE PTR [rax],al
    ebb3:	00 e4                	add    ah,ah
    ebb5:	06                   	(bad)  
    ebb6:	00 00                	add    BYTE PTR [rax],al
    ebb8:	ab                   	stos   DWORD PTR es:[rdi],eax
    ebb9:	87 ff                	xchg   edi,edi
    ebbb:	ff 77 01             	push   QWORD PTR [rdi+0x1]
    ebbe:	00 00                	add    BYTE PTR [rax],al
    ebc0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ebc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebc9:	00 00                	add    BYTE PTR [rax],al
    ebcb:	00 20                	add    BYTE PTR [rax],ah
    ebcd:	00 00                	add    BYTE PTR [rax],al
    ebcf:	00 00                	add    BYTE PTR [rax],al
    ebd1:	07                   	(bad)  
    ebd2:	00 00                	add    BYTE PTR [rax],al
    ebd4:	06                   	(bad)  
    ebd5:	89 ff                	mov    edi,edi
    ebd7:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ebde:	0e                   	(bad)  
    ebdf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ebe5:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ebeb:	00 00                	add    BYTE PTR [rax],al
    ebed:	00 00                	add    BYTE PTR [rax],al
    ebef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ebf2:	00 00                	add    BYTE PTR [rax],al
    ebf4:	24 07                	and    al,0x7
    ebf6:	00 00                	add    BYTE PTR [rax],al
    ebf8:	7e 89                	jle    eb83 <__GNU_EH_FRAME_HDR+0xa73>
    ebfa:	ff                   	(bad)  
    ebfb:	ff                   	(bad)  
    ebfc:	ee                   	out    dx,al
    ebfd:	01 00                	add    DWORD PTR [rax],eax
    ebff:	00 00                	add    BYTE PTR [rax],al
    ec01:	45 0e                	rex.RB (bad) 
    ec03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec09:	03 e5                	add    esp,ebp
    ec0b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec0e:	08 00                	or     BYTE PTR [rax],al
    ec10:	1c 00                	sbb    al,0x0
    ec12:	00 00                	add    BYTE PTR [rax],al
    ec14:	44 07                	rex.R (bad) 
    ec16:	00 00                	add    BYTE PTR [rax],al
    ec18:	4c 8b ff             	mov    r15,rdi
    ec1b:	ff                   	(bad)  
    ec1c:	e8 01 00 00 00       	call   ec22 <__GNU_EH_FRAME_HDR+0xb12>
    ec21:	45 0e                	rex.RB (bad) 
    ec23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec29:	03 df                	add    ebx,edi
    ec2b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec2e:	08 00                	or     BYTE PTR [rax],al
    ec30:	1c 00                	sbb    al,0x0
    ec32:	00 00                	add    BYTE PTR [rax],al
    ec34:	64 07                	fs (bad) 
    ec36:	00 00                	add    BYTE PTR [rax],al
    ec38:	14 8d                	adc    al,0x8d
    ec3a:	ff                   	(bad)  
    ec3b:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    ec3f:	00 00                	add    BYTE PTR [rax],al
    ec41:	45 0e                	rex.RB (bad) 
    ec43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec49:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    ec4c:	07                   	(bad)  
    ec4d:	08 00                	or     BYTE PTR [rax],al
    ec4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec52:	00 00                	add    BYTE PTR [rax],al
    ec54:	84 07                	test   BYTE PTR [rdi],al
    ec56:	00 00                	add    BYTE PTR [rax],al
    ec58:	60                   	(bad)  
    ec59:	8d                   	(bad)  
    ec5a:	ff                   	(bad)  
    ec5b:	ff 72 00             	push   QWORD PTR [rdx+0x0]
    ec5e:	00 00                	add    BYTE PTR [rax],al
    ec60:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ec63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec69:	02 69 0c             	add    ch,BYTE PTR [rcx+0xc]
    ec6c:	07                   	(bad)  
    ec6d:	08 00                	or     BYTE PTR [rax],al
    ec6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ec72:	00 00                	add    BYTE PTR [rax],al
    ec74:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ec75:	07                   	(bad)  
    ec76:	00 00                	add    BYTE PTR [rax],al
    ec78:	b2 8d                	mov    dl,0x8d
    ec7a:	ff                   	(bad)  
    ec7b:	ff 11                	call   QWORD PTR [rcx]
    ec7d:	01 00                	add    DWORD PTR [rax],eax
    ec7f:	00 00                	add    BYTE PTR [rax],al
    ec81:	45 0e                	rex.RB (bad) 
    ec83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ec89:	03 08                	add    ecx,DWORD PTR [rax]
    ec8b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ec8e:	08 00                	or     BYTE PTR [rax],al
    ec90:	1c 00                	sbb    al,0x0
    ec92:	00 00                	add    BYTE PTR [rax],al
    ec94:	c4                   	(bad)  
    ec95:	07                   	(bad)  
    ec96:	00 00                	add    BYTE PTR [rax],al
    ec98:	a3 8e ff ff 5c 00 00 	movabs ds:0x5cffff8e,eax
    ec9f:	00 00 
    eca1:	45 0e                	rex.RB (bad) 
    eca3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eca9:	02 53 0c             	add    dl,BYTE PTR [rbx+0xc]
    ecac:	07                   	(bad)  
    ecad:	08 00                	or     BYTE PTR [rax],al
    ecaf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecb2:	00 00                	add    BYTE PTR [rax],al
    ecb4:	e4 07                	in     al,0x7
    ecb6:	00 00                	add    BYTE PTR [rax],al
    ecb8:	df 8e ff ff 3e 00    	fisttp WORD PTR [rsi+0x3effff]
    ecbe:	00 00                	add    BYTE PTR [rax],al
    ecc0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ecc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ecc9:	75 0c                	jne    ecd7 <__GNU_EH_FRAME_HDR+0xbc7>
    eccb:	07                   	(bad)  
    eccc:	08 00                	or     BYTE PTR [rax],al
    ecce:	00 00                	add    BYTE PTR [rax],al
    ecd0:	1c 00                	sbb    al,0x0
    ecd2:	00 00                	add    BYTE PTR [rax],al
    ecd4:	04 08                	add    al,0x8
    ecd6:	00 00                	add    BYTE PTR [rax],al
    ecd8:	fd                   	std    
    ecd9:	8e ff                	mov    ?,edi
    ecdb:	ff 86 00 00 00 00    	inc    DWORD PTR [rsi+0x0]
    ece1:	45 0e                	rex.RB (bad) 
    ece3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ece9:	02 7d 0c             	add    bh,BYTE PTR [rbp+0xc]
    ecec:	07                   	(bad)  
    eced:	08 00                	or     BYTE PTR [rax],al
    ecef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ecf2:	00 00                	add    BYTE PTR [rax],al
    ecf4:	24 08                	and    al,0x8
    ecf6:	00 00                	add    BYTE PTR [rax],al
    ecf8:	63 8f ff ff df 00    	movsxd ecx,DWORD PTR [rdi+0xdfffff]
    ecfe:	00 00                	add    BYTE PTR [rax],al
    ed00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ed03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed09:	02 d6                	add    dl,dh
    ed0b:	0c 07                	or     al,0x7
    ed0d:	08 00                	or     BYTE PTR [rax],al
    ed0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed12:	00 00                	add    BYTE PTR [rax],al
    ed14:	44 08 00             	or     BYTE PTR [rax],r8b
    ed17:	00 22                	add    BYTE PTR [rdx],ah
    ed19:	90                   	nop
    ed1a:	ff                   	(bad)  
    ed1b:	ff 74 00 00          	push   QWORD PTR [rax+rax*1+0x0]
    ed1f:	00 00                	add    BYTE PTR [rax],al
    ed21:	45 0e                	rex.RB (bad) 
    ed23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed29:	02 6b 0c             	add    ch,BYTE PTR [rbx+0xc]
    ed2c:	07                   	(bad)  
    ed2d:	08 00                	or     BYTE PTR [rax],al
    ed2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed32:	00 00                	add    BYTE PTR [rax],al
    ed34:	64 08 00             	or     BYTE PTR fs:[rax],al
    ed37:	00 76 90             	add    BYTE PTR [rsi-0x70],dh
    ed3a:	ff                   	(bad)  
    ed3b:	ff 9c 00 00 00 00 45 	call   FWORD PTR [rax+rax*1+0x45000000]
    ed42:	0e                   	(bad)  
    ed43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed49:	02 93 0c 07 08 00    	add    dl,BYTE PTR [rbx+0x8070c]
    ed4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ed52:	00 00                	add    BYTE PTR [rax],al
    ed54:	84 08                	test   BYTE PTR [rax],cl
    ed56:	00 00                	add    BYTE PTR [rax],al
    ed58:	f2 90                	repnz nop
    ed5a:	ff                   	(bad)  
    ed5b:	ff 29                	jmp    FWORD PTR [rcx]
    ed5d:	00 00                	add    BYTE PTR [rax],al
    ed5f:	00 00                	add    BYTE PTR [rax],al
    ed61:	45 0e                	rex.RB (bad) 
    ed63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed69:	60                   	(bad)  
    ed6a:	0c 07                	or     al,0x7
    ed6c:	08 00                	or     BYTE PTR [rax],al
    ed6e:	00 00                	add    BYTE PTR [rax],al
    ed70:	1c 00                	sbb    al,0x0
    ed72:	00 00                	add    BYTE PTR [rax],al
    ed74:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ed75:	08 00                	or     BYTE PTR [rax],al
    ed77:	00 fb                	add    bl,bh
    ed79:	90                   	nop
    ed7a:	ff                   	(bad)  
    ed7b:	ff 29                	jmp    FWORD PTR [rcx]
    ed7d:	00 00                	add    BYTE PTR [rax],al
    ed7f:	00 00                	add    BYTE PTR [rax],al
    ed81:	45 0e                	rex.RB (bad) 
    ed83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ed89:	60                   	(bad)  
    ed8a:	0c 07                	or     al,0x7
    ed8c:	08 00                	or     BYTE PTR [rax],al
    ed8e:	00 00                	add    BYTE PTR [rax],al
    ed90:	24 00                	and    al,0x0
    ed92:	00 00                	add    BYTE PTR [rax],al
    ed94:	c4                   	(bad)  
    ed95:	08 00                	or     BYTE PTR [rax],al
    ed97:	00 04 91             	add    BYTE PTR [rcx+rdx*4],al
    ed9a:	ff                   	(bad)  
    ed9b:	ff 53 01             	call   QWORD PTR [rbx+0x1]
    ed9e:	00 00                	add    BYTE PTR [rax],al
    eda0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eda3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eda9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    edad:	45 01 0c 07          	add    DWORD PTR [r15+rax*1],r9d
    edb1:	08 00                	or     BYTE PTR [rax],al
    edb3:	00 00                	add    BYTE PTR [rax],al
    edb5:	00 00                	add    BYTE PTR [rax],al
    edb7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edba:	00 00                	add    BYTE PTR [rax],al
    edbc:	ec                   	in     al,dx
    edbd:	08 00                	or     BYTE PTR [rax],al
    edbf:	00 2f                	add    BYTE PTR [rdi],ch
    edc1:	92                   	xchg   edx,eax
    edc2:	ff                   	(bad)  
    edc3:	ff 13                	call   QWORD PTR [rbx]
    edc5:	01 00                	add    DWORD PTR [rax],eax
    edc7:	00 00                	add    BYTE PTR [rax],al
    edc9:	45 0e                	rex.RB (bad) 
    edcb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edd1:	03 0a                	add    ecx,DWORD PTR [rdx]
    edd3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    edd6:	08 00                	or     BYTE PTR [rax],al
    edd8:	1c 00                	sbb    al,0x0
    edda:	00 00                	add    BYTE PTR [rax],al
    eddc:	0c 09                	or     al,0x9
    edde:	00 00                	add    BYTE PTR [rax],al
    ede0:	22 93 ff ff f9 00    	and    dl,BYTE PTR [rbx+0xf9ffff]
    ede6:	00 00                	add    BYTE PTR [rax],al
    ede8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    edeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    edf1:	02 f0                	add    dh,al
    edf3:	0c 07                	or     al,0x7
    edf5:	08 00                	or     BYTE PTR [rax],al
    edf7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    edfa:	00 00                	add    BYTE PTR [rax],al
    edfc:	2c 09                	sub    al,0x9
    edfe:	00 00                	add    BYTE PTR [rax],al
    ee00:	fb                   	sti    
    ee01:	93                   	xchg   ebx,eax
    ee02:	ff                   	(bad)  
    ee03:	ff a2 00 00 00 00    	jmp    QWORD PTR [rdx+0x0]
    ee09:	45 0e                	rex.RB (bad) 
    ee0b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee11:	02 99 0c 07 08 00    	add    bl,BYTE PTR [rcx+0x8070c]
    ee17:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee1a:	00 00                	add    BYTE PTR [rax],al
    ee1c:	4c 09 00             	or     QWORD PTR [rax],r8
    ee1f:	00 7d 94             	add    BYTE PTR [rbp-0x6c],bh
    ee22:	ff                   	(bad)  
    ee23:	ff 1e                	call   FWORD PTR [rsi]
    ee25:	00 00                	add    BYTE PTR [rax],al
    ee27:	00 00                	add    BYTE PTR [rax],al
    ee29:	45 0e                	rex.RB (bad) 
    ee2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee31:	55                   	push   rbp
    ee32:	0c 07                	or     al,0x7
    ee34:	08 00                	or     BYTE PTR [rax],al
    ee36:	00 00                	add    BYTE PTR [rax],al
    ee38:	1c 00                	sbb    al,0x0
    ee3a:	00 00                	add    BYTE PTR [rax],al
    ee3c:	6c                   	ins    BYTE PTR es:[rdi],dx
    ee3d:	09 00                	or     DWORD PTR [rax],eax
    ee3f:	00 7b 94             	add    BYTE PTR [rbx-0x6c],bh
    ee42:	ff                   	(bad)  
    ee43:	ff 63 01             	jmp    QWORD PTR [rbx+0x1]
    ee46:	00 00                	add    BYTE PTR [rax],al
    ee48:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ee4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee51:	03 5a 01             	add    ebx,DWORD PTR [rdx+0x1]
    ee54:	0c 07                	or     al,0x7
    ee56:	08 00                	or     BYTE PTR [rax],al
    ee58:	2c 00                	sub    al,0x0
    ee5a:	00 00                	add    BYTE PTR [rax],al
    ee5c:	8c 09                	mov    WORD PTR [rcx],cs
    ee5e:	00 00                	add    BYTE PTR [rax],al
    ee60:	be 95 ff ff 11       	mov    esi,0x11ffff95
    ee65:	02 00                	add    al,BYTE PTR [rax]
    ee67:	00 00                	add    BYTE PTR [rax],al
    ee69:	45 0e                	rex.RB (bad) 
    ee6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ee71:	50                   	push   rax
    ee72:	8f 03                	pop    QWORD PTR [rbx]
    ee74:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    ee7b:	07                   	(bad)  
    ee7c:	03 f8                	add    edi,eax
    ee7e:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    ee81:	08 00                	or     BYTE PTR [rax],al
    ee83:	00 00                	add    BYTE PTR [rax],al
    ee85:	00 00                	add    BYTE PTR [rax],al
    ee87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ee8a:	00 00                	add    BYTE PTR [rax],al
    ee8c:	bc 09 00 00 9f       	mov    esp,0x9f000009
    ee91:	97                   	xchg   edi,eax
    ee92:	ff                   	(bad)  
    ee93:	ff b2 00 00 00 00    	push   QWORD PTR [rdx+0x0]
    ee99:	45 0e                	rex.RB (bad) 
    ee9b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eea1:	02 a9 0c 07 08 00    	add    ch,BYTE PTR [rcx+0x8070c]
    eea7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eeaa:	00 00                	add    BYTE PTR [rax],al
    eeac:	dc 09                	fmul   QWORD PTR [rcx]
    eeae:	00 00                	add    BYTE PTR [rax],al
    eeb0:	31 98 ff ff a5 00    	xor    DWORD PTR [rax+0xa5ffff],ebx
    eeb6:	00 00                	add    BYTE PTR [rax],al
    eeb8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    eebb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eec1:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    eec8:	24 00                	and    al,0x0
    eeca:	00 00                	add    BYTE PTR [rax],al
    eecc:	fc                   	cld    
    eecd:	09 00                	or     DWORD PTR [rax],eax
    eecf:	00 b6 98 ff ff 94    	add    BYTE PTR [rsi-0x6b000068],dh
    eed5:	00 00                	add    BYTE PTR [rax],al
    eed7:	00 00                	add    BYTE PTR [rax],al
    eed9:	45 0e                	rex.RB (bad) 
    eedb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    eee1:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    eee5:	86 0c 07             	xchg   BYTE PTR [rdi+rax*1],cl
    eee8:	08 00                	or     BYTE PTR [rax],al
    eeea:	00 00                	add    BYTE PTR [rax],al
    eeec:	00 00                	add    BYTE PTR [rax],al
    eeee:	00 00                	add    BYTE PTR [rax],al
    eef0:	1c 00                	sbb    al,0x0
    eef2:	00 00                	add    BYTE PTR [rax],al
    eef4:	24 0a                	and    al,0xa
    eef6:	00 00                	add    BYTE PTR [rax],al
    eef8:	22 99 ff ff d5 00    	and    bl,BYTE PTR [rcx+0xd5ffff]
    eefe:	00 00                	add    BYTE PTR [rax],al
    ef00:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef03:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef09:	02 cc                	add    cl,ah
    ef0b:	0c 07                	or     al,0x7
    ef0d:	08 00                	or     BYTE PTR [rax],al
    ef0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef12:	00 00                	add    BYTE PTR [rax],al
    ef14:	44 0a 00             	or     r8b,BYTE PTR [rax]
    ef17:	00 d7                	add    bh,dl
    ef19:	99                   	cdq    
    ef1a:	ff                   	(bad)  
    ef1b:	ff                   	(bad)  
    ef1c:	df 00                	fild   WORD PTR [rax]
    ef1e:	00 00                	add    BYTE PTR [rax],al
    ef20:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef29:	02 d6                	add    dl,dh
    ef2b:	0c 07                	or     al,0x7
    ef2d:	08 00                	or     BYTE PTR [rax],al
    ef2f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef32:	00 00                	add    BYTE PTR [rax],al
    ef34:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    ef37:	00 96 9a ff ff 7d    	add    BYTE PTR [rsi+0x7dffff9a],dl
    ef3d:	00 00                	add    BYTE PTR [rax],al
    ef3f:	00 00                	add    BYTE PTR [rax],al
    ef41:	45 0e                	rex.RB (bad) 
    ef43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef49:	02 74 0c 07          	add    dh,BYTE PTR [rsp+rcx*1+0x7]
    ef4d:	08 00                	or     BYTE PTR [rax],al
    ef4f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef52:	00 00                	add    BYTE PTR [rax],al
    ef54:	84 0a                	test   BYTE PTR [rdx],cl
    ef56:	00 00                	add    BYTE PTR [rax],al
    ef58:	f3 9a                	repz (bad) 
    ef5a:	ff                   	(bad)  
    ef5b:	ff 36                	push   QWORD PTR [rsi]
    ef5d:	01 00                	add    DWORD PTR [rax],eax
    ef5f:	00 00                	add    BYTE PTR [rax],al
    ef61:	45 0e                	rex.RB (bad) 
    ef63:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef69:	03 2d 01 0c 07 08    	add    ebp,DWORD PTR [rip+0x8070c01]        # 807fb70 <_end+0x7f40b30>
    ef6f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef72:	00 00                	add    BYTE PTR [rax],al
    ef74:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ef75:	0a 00                	or     al,BYTE PTR [rax]
    ef77:	00 09                	add    BYTE PTR [rcx],cl
    ef79:	9c                   	pushf  
    ef7a:	ff                   	(bad)  
    ef7b:	ff                   	(bad)  
    ef7c:	7e 00                	jle    ef7e <__GNU_EH_FRAME_HDR+0xe6e>
    ef7e:	00 00                	add    BYTE PTR [rax],al
    ef80:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    ef83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    ef89:	02 75 0c             	add    dh,BYTE PTR [rbp+0xc]
    ef8c:	07                   	(bad)  
    ef8d:	08 00                	or     BYTE PTR [rax],al
    ef8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    ef92:	00 00                	add    BYTE PTR [rax],al
    ef94:	c4                   	(bad)  
    ef95:	0a 00                	or     al,BYTE PTR [rax]
    ef97:	00 67 9c             	add    BYTE PTR [rdi-0x64],ah
    ef9a:	ff                   	(bad)  
    ef9b:	ff                   	(bad)  
    ef9c:	39 02                	cmp    DWORD PTR [rdx],eax
    ef9e:	00 00                	add    BYTE PTR [rax],al
    efa0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    efa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efa9:	03 30                	add    esi,DWORD PTR [rax]
    efab:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    efae:	08 00                	or     BYTE PTR [rax],al
    efb0:	1c 00                	sbb    al,0x0
    efb2:	00 00                	add    BYTE PTR [rax],al
    efb4:	e4 0a                	in     al,0xa
    efb6:	00 00                	add    BYTE PTR [rax],al
    efb8:	80 9e ff ff c9 00 00 	sbb    BYTE PTR [rsi+0xc9ffff],0x0
    efbf:	00 00                	add    BYTE PTR [rax],al
    efc1:	45 0e                	rex.RB (bad) 
    efc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efc9:	02 c0                	add    al,al
    efcb:	0c 07                	or     al,0x7
    efcd:	08 00                	or     BYTE PTR [rax],al
    efcf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    efd2:	00 00                	add    BYTE PTR [rax],al
    efd4:	04 0b                	add    al,0xb
    efd6:	00 00                	add    BYTE PTR [rax],al
    efd8:	29 9f ff ff a1 01    	sub    DWORD PTR [rdi+0x1a1ffff],ebx
    efde:	00 00                	add    BYTE PTR [rax],al
    efe0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    efe3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    efe9:	03 98 01 0c 07 08    	add    ebx,DWORD PTR [rax+0x8070c01]
    efef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    eff2:	00 00                	add    BYTE PTR [rax],al
    eff4:	24 0b                	and    al,0xb
    eff6:	00 00                	add    BYTE PTR [rax],al
    eff8:	aa                   	stos   BYTE PTR es:[rdi],al
    eff9:	a0 ff ff 13 01 00 00 	movabs al,ds:0x450000000113ffff
    f000:	00 45 
    f002:	0e                   	(bad)  
    f003:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f009:	03 0a                	add    ecx,DWORD PTR [rdx]
    f00b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f00e:	08 00                	or     BYTE PTR [rax],al
    f010:	1c 00                	sbb    al,0x0
    f012:	00 00                	add    BYTE PTR [rax],al
    f014:	44 0b 00             	or     r8d,DWORD PTR [rax]
    f017:	00 9d a1 ff ff 66    	add    BYTE PTR [rbp+0x66ffffa1],bl
    f01d:	00 00                	add    BYTE PTR [rax],al
    f01f:	00 00                	add    BYTE PTR [rax],al
    f021:	45 0e                	rex.RB (bad) 
    f023:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f029:	02 5d 0c             	add    bl,BYTE PTR [rbp+0xc]
    f02c:	07                   	(bad)  
    f02d:	08 00                	or     BYTE PTR [rax],al
    f02f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f032:	00 00                	add    BYTE PTR [rax],al
    f034:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    f037:	00 e3                	add    bl,ah
    f039:	a1 ff ff 75 00 00 00 	movabs eax,ds:0x450000000075ffff
    f040:	00 45 
    f042:	0e                   	(bad)  
    f043:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f049:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    f04d:	08 00                	or     BYTE PTR [rax],al
    f04f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f052:	00 00                	add    BYTE PTR [rax],al
    f054:	84 0b                	test   BYTE PTR [rbx],cl
    f056:	00 00                	add    BYTE PTR [rax],al
    f058:	38 a2 ff ff db 00    	cmp    BYTE PTR [rdx+0xdbffff],ah
    f05e:	00 00                	add    BYTE PTR [rax],al
    f060:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f063:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f069:	02 d2                	add    dl,dl
    f06b:	0c 07                	or     al,0x7
    f06d:	08 00                	or     BYTE PTR [rax],al
    f06f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f072:	00 00                	add    BYTE PTR [rax],al
    f074:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f075:	0b 00                	or     eax,DWORD PTR [rax]
    f077:	00 f3                	add    bl,dh
    f079:	a2 ff ff 72 01 00 00 	movabs ds:0x450000000172ffff,al
    f080:	00 45 
    f082:	0e                   	(bad)  
    f083:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f089:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    f08c:	0c 07                	or     al,0x7
    f08e:	08 00                	or     BYTE PTR [rax],al
    f090:	1c 00                	sbb    al,0x0
    f092:	00 00                	add    BYTE PTR [rax],al
    f094:	c4                   	(bad)  
    f095:	0b 00                	or     eax,DWORD PTR [rax]
    f097:	00 45 a4             	add    BYTE PTR [rbp-0x5c],al
    f09a:	ff                   	(bad)  
    f09b:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    f09f:	00 00                	add    BYTE PTR [rax],al
    f0a1:	45 0e                	rex.RB (bad) 
    f0a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0a9:	02 63 0c             	add    ah,BYTE PTR [rbx+0xc]
    f0ac:	07                   	(bad)  
    f0ad:	08 00                	or     BYTE PTR [rax],al
    f0af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0b2:	00 00                	add    BYTE PTR [rax],al
    f0b4:	e4 0b                	in     al,0xb
    f0b6:	00 00                	add    BYTE PTR [rax],al
    f0b8:	91                   	xchg   ecx,eax
    f0b9:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f0ba:	ff                   	(bad)  
    f0bb:	ff 80 00 00 00 00    	inc    DWORD PTR [rax+0x0]
    f0c1:	45 0e                	rex.RB (bad) 
    f0c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0c9:	02 77 0c             	add    dh,BYTE PTR [rdi+0xc]
    f0cc:	07                   	(bad)  
    f0cd:	08 00                	or     BYTE PTR [rax],al
    f0cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f0d2:	00 00                	add    BYTE PTR [rax],al
    f0d4:	04 0c                	add    al,0xc
    f0d6:	00 00                	add    BYTE PTR [rax],al
    f0d8:	f1                   	icebp  
    f0d9:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f0da:	ff                   	(bad)  
    f0db:	ff 16                	call   QWORD PTR [rsi]
    f0dd:	00 00                	add    BYTE PTR [rax],al
    f0df:	00 00                	add    BYTE PTR [rax],al
    f0e1:	45 0e                	rex.RB (bad) 
    f0e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f0e9:	4d 0c 07             	rex.WRB or al,0x7
    f0ec:	08 00                	or     BYTE PTR [rax],al
    f0ee:	00 00                	add    BYTE PTR [rax],al
    f0f0:	20 00                	and    BYTE PTR [rax],al
    f0f2:	00 00                	add    BYTE PTR [rax],al
    f0f4:	24 0c                	and    al,0xc
    f0f6:	00 00                	add    BYTE PTR [rax],al
    f0f8:	e7 a4                	out    0xa4,eax
    f0fa:	ff                   	(bad)  
    f0fb:	ff                   	(bad)  
    f0fc:	3a 01                	cmp    al,BYTE PTR [rcx]
    f0fe:	00 00                	add    BYTE PTR [rax],al
    f100:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f103:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f109:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f10d:	2c 01                	sub    al,0x1
    f10f:	0c 07                	or     al,0x7
    f111:	08 00                	or     BYTE PTR [rax],al
    f113:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f116:	00 00                	add    BYTE PTR [rax],al
    f118:	48 0c 00             	rex.W or al,0x0
    f11b:	00 fd                	add    ch,bh
    f11d:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    f11e:	ff                   	(bad)  
    f11f:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
    f123:	00 00                	add    BYTE PTR [rax],al
    f125:	45 0e                	rex.RB (bad) 
    f127:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f12d:	02 5b 0c             	add    bl,BYTE PTR [rbx+0xc]
    f130:	07                   	(bad)  
    f131:	08 00                	or     BYTE PTR [rax],al
    f133:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f136:	00 00                	add    BYTE PTR [rax],al
    f138:	68 0c 00 00 41       	push   0x4100000c
    f13d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    f13e:	ff                   	(bad)  
    f13f:	ff 53 00             	call   QWORD PTR [rbx+0x0]
    f142:	00 00                	add    BYTE PTR [rax],al
    f144:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f147:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f14d:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
    f150:	07                   	(bad)  
    f151:	08 00                	or     BYTE PTR [rax],al
    f153:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f156:	00 00                	add    BYTE PTR [rax],al
    f158:	88 0c 00             	mov    BYTE PTR [rax+rax*1],cl
    f15b:	00 74 a6 ff          	add    BYTE PTR [rsi+riz*4-0x1],dh
    f15f:	ff b1 00 00 00 00    	push   QWORD PTR [rcx+0x0]
    f165:	45 0e                	rex.RB (bad) 
    f167:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f16d:	02 a8 0c 07 08 00    	add    ch,BYTE PTR [rax+0x8070c]
    f173:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f176:	00 00                	add    BYTE PTR [rax],al
    f178:	a8 0c                	test   al,0xc
    f17a:	00 00                	add    BYTE PTR [rax],al
    f17c:	05 a7 ff ff cb       	add    eax,0xcbffffa7
    f181:	00 00                	add    BYTE PTR [rax],al
    f183:	00 00                	add    BYTE PTR [rax],al
    f185:	45 0e                	rex.RB (bad) 
    f187:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f18d:	02 c2                	add    al,dl
    f18f:	0c 07                	or     al,0x7
    f191:	08 00                	or     BYTE PTR [rax],al
    f193:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f196:	00 00                	add    BYTE PTR [rax],al
    f198:	c8 0c 00 00          	enter  0xc,0x0
    f19c:	b0 a7                	mov    al,0xa7
    f19e:	ff                   	(bad)  
    f19f:	ff 55 00             	call   QWORD PTR [rbp+0x0]
    f1a2:	00 00                	add    BYTE PTR [rax],al
    f1a4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1ad:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
    f1b1:	08 00                	or     BYTE PTR [rax],al
    f1b3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f1b6:	00 00                	add    BYTE PTR [rax],al
    f1b8:	e8 0c 00 00 e5       	call   ffffffffe500f1c9 <_end+0xffffffffe4ed0189>
    f1bd:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    f1be:	ff                   	(bad)  
    f1bf:	ff 30                	push   QWORD PTR [rax]
    f1c1:	00 00                	add    BYTE PTR [rax],al
    f1c3:	00 00                	add    BYTE PTR [rax],al
    f1c5:	45 0e                	rex.RB (bad) 
    f1c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1cd:	67 0c 07             	addr32 or al,0x7
    f1d0:	08 00                	or     BYTE PTR [rax],al
    f1d2:	00 00                	add    BYTE PTR [rax],al
    f1d4:	1c 00                	sbb    al,0x0
    f1d6:	00 00                	add    BYTE PTR [rax],al
    f1d8:	08 0d 00 00 f5 a7    	or     BYTE PTR [rip+0xffffffffa7f50000],cl        # ffffffffa7f5f1de <_end+0xffffffffa7e2019e>
    f1de:	ff                   	(bad)  
    f1df:	ff 67 00             	jmp    QWORD PTR [rdi+0x0]
    f1e2:	00 00                	add    BYTE PTR [rax],al
    f1e4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f1e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f1ed:	02 5e 0c             	add    bl,BYTE PTR [rsi+0xc]
    f1f0:	07                   	(bad)  
    f1f1:	08 00                	or     BYTE PTR [rax],al
    f1f3:	00 20                	add    BYTE PTR [rax],ah
    f1f5:	00 00                	add    BYTE PTR [rax],al
    f1f7:	00 28                	add    BYTE PTR [rax],ch
    f1f9:	0d 00 00 3c a8       	or     eax,0xa83c0000
    f1fe:	ff                   	(bad)  
    f1ff:	ff                   	(bad)  
    f200:	38 0f                	cmp    BYTE PTR [rdi],cl
    f202:	00 00                	add    BYTE PTR [rax],al
    f204:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f207:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f20d:	48 83 03 03          	add    QWORD PTR [rbx],0x3
    f211:	27                   	(bad)  
    f212:	0f 0c                	(bad)  
    f214:	07                   	(bad)  
    f215:	08 00                	or     BYTE PTR [rax],al
    f217:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f21a:	00 00                	add    BYTE PTR [rax],al
    f21c:	4c 0d 00 00 50 b7    	rex.WR or rax,0xffffffffb7500000
    f222:	ff                   	(bad)  
    f223:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
    f226:	00 00                	add    BYTE PTR [rax],al
    f228:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f22b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f231:	7d 0c                	jge    f23f <__GNU_EH_FRAME_HDR+0x112f>
    f233:	07                   	(bad)  
    f234:	08 00                	or     BYTE PTR [rax],al
    f236:	00 00                	add    BYTE PTR [rax],al
    f238:	24 00                	and    al,0x0
    f23a:	00 00                	add    BYTE PTR [rax],al
    f23c:	6c                   	ins    BYTE PTR es:[rdi],dx
    f23d:	0d 00 00 76 b7       	or     eax,0xb7760000
    f242:	ff                   	(bad)  
    f243:	ff                   	(bad)  
    f244:	3b 02                	cmp    eax,DWORD PTR [rdx]
    f246:	00 00                	add    BYTE PTR [rax],al
    f248:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f24b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f251:	4b 8f 03             	rex.WXB pop QWORD PTR [r11]
    f254:	8e 04 8c             	mov    es,WORD PTR [rsp+rcx*4]
    f257:	05 83 06 03 27       	add    eax,0x27030683
    f25c:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
    f25f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    f262:	00 00                	add    BYTE PTR [rax],al
    f264:	94                   	xchg   esp,eax
    f265:	0d 00 00 89 b9       	or     eax,0xb9890000
    f26a:	ff                   	(bad)  
    f26b:	ff a5 01 00 00 00    	jmp    QWORD PTR [rbp+0x1]
    f271:	45 0e                	rex.RB (bad) 
    f273:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f279:	03 9c 01 0c 07 08 00 	add    ebx,DWORD PTR [rcx+rax*1+0x8070c]
    f280:	1c 00                	sbb    al,0x0
    f282:	00 00                	add    BYTE PTR [rax],al
    f284:	b4 0d                	mov    ah,0xd
    f286:	00 00                	add    BYTE PTR [rax],al
    f288:	0e                   	(bad)  
    f289:	bb ff ff 12 01       	mov    ebx,0x112ffff
    f28e:	00 00                	add    BYTE PTR [rax],al
    f290:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f293:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f299:	03 09                	add    ecx,DWORD PTR [rcx]
    f29b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f29e:	08 00                	or     BYTE PTR [rax],al
    f2a0:	24 00                	and    al,0x0
    f2a2:	00 00                	add    BYTE PTR [rax],al
    f2a4:	d4                   	(bad)  
    f2a5:	0d 00 00 00 bc       	or     eax,0xbc000000
    f2aa:	ff                   	(bad)  
    f2ab:	ff                   	(bad)  
    f2ac:	bc 00 00 00 00       	mov    esp,0x0
    f2b1:	45 0e                	rex.RB (bad) 
    f2b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2b9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    f2bd:	ae                   	scas   al,BYTE PTR es:[rdi]
    f2be:	0c 07                	or     al,0x7
    f2c0:	08 00                	or     BYTE PTR [rax],al
    f2c2:	00 00                	add    BYTE PTR [rax],al
    f2c4:	00 00                	add    BYTE PTR [rax],al
    f2c6:	00 00                	add    BYTE PTR [rax],al
    f2c8:	24 00                	and    al,0x0
    f2ca:	00 00                	add    BYTE PTR [rax],al
    f2cc:	fc                   	cld    
    f2cd:	0d 00 00 94 bc       	or     eax,0xbc940000
    f2d2:	ff                   	(bad)  
    f2d3:	ff 9b 01 00 00 00    	call   FWORD PTR [rbx+0x1]
    f2d9:	45 0e                	rex.RB (bad) 
    f2db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f2e1:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    f2e4:	83 04 03 8b          	add    DWORD PTR [rbx+rax*1],0xffffff8b
    f2e8:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f2eb:	08 00                	or     BYTE PTR [rax],al
    f2ed:	00 00                	add    BYTE PTR [rax],al
    f2ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f2f2:	00 00                	add    BYTE PTR [rax],al
    f2f4:	24 0e                	and    al,0xe
    f2f6:	00 00                	add    BYTE PTR [rax],al
    f2f8:	07                   	(bad)  
    f2f9:	be ff ff a5 00       	mov    esi,0xa5ffff
    f2fe:	00 00                	add    BYTE PTR [rax],al
    f300:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f303:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f309:	02 9c 0c 07 08 00 00 	add    bl,BYTE PTR [rsp+rcx*1+0x807]
    f310:	1c 00                	sbb    al,0x0
    f312:	00 00                	add    BYTE PTR [rax],al
    f314:	44 0e                	rex.R (bad) 
    f316:	00 00                	add    BYTE PTR [rax],al
    f318:	8c be ff ff 43 01    	mov    WORD PTR [rsi+0x143ffff],?
    f31e:	00 00                	add    BYTE PTR [rax],al
    f320:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f323:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f329:	03 3a                	add    edi,DWORD PTR [rdx]
    f32b:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    f32e:	08 00                	or     BYTE PTR [rax],al
    f330:	1c 00                	sbb    al,0x0
    f332:	00 00                	add    BYTE PTR [rax],al
    f334:	64 0e                	fs (bad) 
    f336:	00 00                	add    BYTE PTR [rax],al
    f338:	af                   	scas   eax,DWORD PTR es:[rdi]
    f339:	bf ff ff f3 00       	mov    edi,0xf3ffff
    f33e:	00 00                	add    BYTE PTR [rax],al
    f340:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f343:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f349:	02 ea                	add    ch,dl
    f34b:	0c 07                	or     al,0x7
    f34d:	08 00                	or     BYTE PTR [rax],al
    f34f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f352:	00 00                	add    BYTE PTR [rax],al
    f354:	84 0e                	test   BYTE PTR [rsi],cl
    f356:	00 00                	add    BYTE PTR [rax],al
    f358:	82                   	(bad)  
    f359:	c0 ff ff             	sar    bh,0xff
    f35c:	70 00                	jo     f35e <__GNU_EH_FRAME_HDR+0x124e>
    f35e:	00 00                	add    BYTE PTR [rax],al
    f360:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f363:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f369:	02 67 0c             	add    ah,BYTE PTR [rdi+0xc]
    f36c:	07                   	(bad)  
    f36d:	08 00                	or     BYTE PTR [rax],al
    f36f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f372:	00 00                	add    BYTE PTR [rax],al
    f374:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    f375:	0e                   	(bad)  
    f376:	00 00                	add    BYTE PTR [rax],al
    f378:	d2 c0                	rol    al,cl
    f37a:	ff                   	(bad)  
    f37b:	ff a5 02 00 00 00    	jmp    QWORD PTR [rbp+0x2]
    f381:	45 0e                	rex.RB (bad) 
    f383:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f389:	4a 8c 03             	rex.WX mov WORD PTR [rbx],es
    f38c:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    f390:	1c 00                	sbb    al,0x0
    f392:	00 00                	add    BYTE PTR [rax],al
    f394:	c4                   	(bad)  
    f395:	0e                   	(bad)  
    f396:	00 00                	add    BYTE PTR [rax],al
    f398:	57                   	push   rdi
    f399:	c3                   	ret    
    f39a:	ff                   	(bad)  
    f39b:	ff 6a 00             	jmp    FWORD PTR [rdx+0x0]
    f39e:	00 00                	add    BYTE PTR [rax],al
    f3a0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    f3a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3a9:	02 61 0c             	add    ah,BYTE PTR [rcx+0xc]
    f3ac:	07                   	(bad)  
    f3ad:	08 00                	or     BYTE PTR [rax],al
    f3af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    f3b2:	00 00                	add    BYTE PTR [rax],al
    f3b4:	e4 0e                	in     al,0xe
    f3b6:	00 00                	add    BYTE PTR [rax],al
    f3b8:	a1 c3 ff ff 6e 00 00 	movabs eax,ds:0x6effffc3
    f3bf:	00 00 
    f3c1:	45 0e                	rex.RB (bad) 
    f3c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3c9:	02 65 0c             	add    ah,BYTE PTR [rbp+0xc]
    f3cc:	07                   	(bad)  
    f3cd:	08 00                	or     BYTE PTR [rax],al
    f3cf:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    f3d2:	00 00                	add    BYTE PTR [rax],al
    f3d4:	04 0f                	add    al,0xf
    f3d6:	00 00                	add    BYTE PTR [rax],al
    f3d8:	ef                   	out    dx,eax
    f3d9:	c3                   	ret    
    f3da:	ff                   	(bad)  
    f3db:	ff 8d 01 00 00 00    	dec    DWORD PTR [rbp+0x1]
    f3e1:	45 0e                	rex.RB (bad) 
    f3e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f3e9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    f3ed:	7f 01                	jg     f3f0 <__GNU_EH_FRAME_HDR+0x12e0>
    f3ef:	0c 07                	or     al,0x7
    f3f1:	08 00                	or     BYTE PTR [rax],al
    f3f3:	00 00                	add    BYTE PTR [rax],al
    f3f5:	00 00                	add    BYTE PTR [rax],al
    f3f7:	00 28                	add    BYTE PTR [rax],ch
    f3f9:	00 00                	add    BYTE PTR [rax],al
    f3fb:	00 2c 0f             	add    BYTE PTR [rdi+rcx*1],ch
    f3fe:	00 00                	add    BYTE PTR [rax],al
    f400:	54                   	push   rsp
    f401:	c5 ff ff             	(bad)  
    f404:	d9 05 00 00 00 45    	fld    DWORD PTR [rip+0x45000000]        # 4500f40a <_end+0x44ed03ca>
    f40a:	0e                   	(bad)  
    f40b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    f411:	50                   	push   rax
    f412:	8f 03                	pop    QWORD PTR [rbx]
    f414:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    f41b:	07                   	(bad)  
    f41c:	03 c0                	add    eax,eax
    f41e:	05 0c 07 08 00       	add    eax,0x8070c
	...

000000000000f424 <__FRAME_END__>:
    f424:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tbss:

0000000000010b60 <buffer.0+0x10ae0>:
	...

Disassembly of section .init_array:

0000000000010b60 <__frame_dummy_init_array_entry>:
   10b60:	e0 29                	loopne 10b8b <_DYNAMIC+0x1b>
   10b62:	00 00                	add    BYTE PTR [rax],al
   10b64:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000010b68 <__do_global_dtors_aux_fini_array_entry>:
   10b68:	a0                   	.byte 0xa0
   10b69:	29 00                	sub    DWORD PTR [rax],eax
   10b6b:	00 00                	add    BYTE PTR [rax],al
   10b6d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000010b70 <_DYNAMIC>:
   10b70:	01 00                	add    DWORD PTR [rax],eax
   10b72:	00 00                	add    BYTE PTR [rax],al
   10b74:	00 00                	add    BYTE PTR [rax],al
   10b76:	00 00                	add    BYTE PTR [rax],al
   10b78:	b9 02 00 00 00       	mov    ecx,0x2
   10b7d:	00 00                	add    BYTE PTR [rax],al
   10b7f:	00 01                	add    BYTE PTR [rcx],al
   10b81:	00 00                	add    BYTE PTR [rax],al
   10b83:	00 00                	add    BYTE PTR [rax],al
   10b85:	00 00                	add    BYTE PTR [rax],al
   10b87:	00 c8                	add    al,cl
   10b89:	02 00                	add    al,BYTE PTR [rax]
   10b8b:	00 00                	add    BYTE PTR [rax],al
   10b8d:	00 00                	add    BYTE PTR [rax],al
   10b8f:	00 01                	add    BYTE PTR [rcx],al
   10b91:	00 00                	add    BYTE PTR [rax],al
   10b93:	00 00                	add    BYTE PTR [rax],al
   10b95:	00 00                	add    BYTE PTR [rax],al
   10b97:	00 d8                	add    al,bl
   10b99:	02 00                	add    al,BYTE PTR [rax]
   10b9b:	00 00                	add    BYTE PTR [rax],al
   10b9d:	00 00                	add    BYTE PTR [rax],al
   10b9f:	00 01                	add    BYTE PTR [rcx],al
   10ba1:	00 00                	add    BYTE PTR [rax],al
   10ba3:	00 00                	add    BYTE PTR [rax],al
   10ba5:	00 00                	add    BYTE PTR [rax],al
   10ba7:	00 e7                	add    bh,ah
   10ba9:	02 00                	add    al,BYTE PTR [rax]
   10bab:	00 00                	add    BYTE PTR [rax],al
   10bad:	00 00                	add    BYTE PTR [rax],al
   10baf:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
   10bb2:	00 00                	add    BYTE PTR [rax],al
   10bb4:	00 00                	add    BYTE PTR [rax],al
   10bb6:	00 00                	add    BYTE PTR [rax],al
   10bb8:	00 20                	add    BYTE PTR [rax],ah
   10bba:	00 00                	add    BYTE PTR [rax],al
   10bbc:	00 00                	add    BYTE PTR [rax],al
   10bbe:	00 00                	add    BYTE PTR [rax],al
   10bc0:	0d 00 00 00 00       	or     eax,0x0
   10bc5:	00 00                	add    BYTE PTR [rax],al
   10bc7:	00 30                	add    BYTE PTR [rax],dh
   10bc9:	bf 00 00 00 00       	mov    edi,0x0
   10bce:	00 00                	add    BYTE PTR [rax],al
   10bd0:	19 00                	sbb    DWORD PTR [rax],eax
   10bd2:	00 00                	add    BYTE PTR [rax],al
   10bd4:	00 00                	add    BYTE PTR [rax],al
   10bd6:	00 00                	add    BYTE PTR [rax],al
   10bd8:	60                   	(bad)  
   10bd9:	0b 01                	or     eax,DWORD PTR [rcx]
   10bdb:	00 00                	add    BYTE PTR [rax],al
   10bdd:	00 00                	add    BYTE PTR [rax],al
   10bdf:	00 1b                	add    BYTE PTR [rbx],bl
   10be1:	00 00                	add    BYTE PTR [rax],al
   10be3:	00 00                	add    BYTE PTR [rax],al
   10be5:	00 00                	add    BYTE PTR [rax],al
   10be7:	00 08                	add    BYTE PTR [rax],cl
   10be9:	00 00                	add    BYTE PTR [rax],al
   10beb:	00 00                	add    BYTE PTR [rax],al
   10bed:	00 00                	add    BYTE PTR [rax],al
   10bef:	00 1a                	add    BYTE PTR [rdx],bl
   10bf1:	00 00                	add    BYTE PTR [rax],al
   10bf3:	00 00                	add    BYTE PTR [rax],al
   10bf5:	00 00                	add    BYTE PTR [rax],al
   10bf7:	00 68 0b             	add    BYTE PTR [rax+0xb],ch
   10bfa:	01 00                	add    DWORD PTR [rax],eax
   10bfc:	00 00                	add    BYTE PTR [rax],al
   10bfe:	00 00                	add    BYTE PTR [rax],al
   10c00:	1c 00                	sbb    al,0x0
   10c02:	00 00                	add    BYTE PTR [rax],al
   10c04:	00 00                	add    BYTE PTR [rax],al
   10c06:	00 00                	add    BYTE PTR [rax],al
   10c08:	08 00                	or     BYTE PTR [rax],al
   10c0a:	00 00                	add    BYTE PTR [rax],al
   10c0c:	00 00                	add    BYTE PTR [rax],al
   10c0e:	00 00                	add    BYTE PTR [rax],al
   10c10:	f5                   	cmc    
   10c11:	fe                   	(bad)  
   10c12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10c15:	00 00                	add    BYTE PTR [rax],al
   10c17:	00 e8                	add    al,ch
   10c19:	03 00                	add    eax,DWORD PTR [rax]
   10c1b:	00 00                	add    BYTE PTR [rax],al
   10c1d:	00 00                	add    BYTE PTR [rax],al
   10c1f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 10c25 <_DYNAMIC+0xb5>
   10c25:	00 00                	add    BYTE PTR [rax],al
   10c27:	00 68 0b             	add    BYTE PTR [rax+0xb],ch
   10c2a:	00 00                	add    BYTE PTR [rax],al
   10c2c:	00 00                	add    BYTE PTR [rax],al
   10c2e:	00 00                	add    BYTE PTR [rax],al
   10c30:	06                   	(bad)  
   10c31:	00 00                	add    BYTE PTR [rax],al
   10c33:	00 00                	add    BYTE PTR [rax],al
   10c35:	00 00                	add    BYTE PTR [rax],al
   10c37:	00 18                	add    BYTE PTR [rax],bl
   10c39:	04 00                	add    al,0x0
   10c3b:	00 00                	add    BYTE PTR [rax],al
   10c3d:	00 00                	add    BYTE PTR [rax],al
   10c3f:	00 0a                	add    BYTE PTR [rdx],cl
   10c41:	00 00                	add    BYTE PTR [rax],al
   10c43:	00 00                	add    BYTE PTR [rax],al
   10c45:	00 00                	add    BYTE PTR [rax],al
   10c47:	00 26                	add    BYTE PTR [rsi],ah
   10c49:	03 00                	add    eax,DWORD PTR [rax]
   10c4b:	00 00                	add    BYTE PTR [rax],al
   10c4d:	00 00                	add    BYTE PTR [rax],al
   10c4f:	00 0b                	add    BYTE PTR [rbx],cl
   10c51:	00 00                	add    BYTE PTR [rax],al
   10c53:	00 00                	add    BYTE PTR [rax],al
   10c55:	00 00                	add    BYTE PTR [rax],al
   10c57:	00 18                	add    BYTE PTR [rax],bl
   10c59:	00 00                	add    BYTE PTR [rax],al
   10c5b:	00 00                	add    BYTE PTR [rax],al
   10c5d:	00 00                	add    BYTE PTR [rax],al
   10c5f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 10c65 <_DYNAMIC+0xf5>
	...
   10c6d:	00 00                	add    BYTE PTR [rax],al
   10c6f:	00 03                	add    BYTE PTR [rbx],al
   10c71:	00 00                	add    BYTE PTR [rax],al
   10c73:	00 00                	add    BYTE PTR [rax],al
   10c75:	00 00                	add    BYTE PTR [rax],al
   10c77:	00 90 0d 01 00 00    	add    BYTE PTR [rax+0x10d],dl
   10c7d:	00 00                	add    BYTE PTR [rax],al
   10c7f:	00 02                	add    BYTE PTR [rdx],al
   10c81:	00 00                	add    BYTE PTR [rax],al
   10c83:	00 00                	add    BYTE PTR [rax],al
   10c85:	00 00                	add    BYTE PTR [rax],al
   10c87:	00 90 06 00 00 00    	add    BYTE PTR [rax+0x6],dl
   10c8d:	00 00                	add    BYTE PTR [rax],al
   10c8f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
   10c92:	00 00                	add    BYTE PTR [rax],al
   10c94:	00 00                	add    BYTE PTR [rax],al
   10c96:	00 00                	add    BYTE PTR [rax],al
   10c98:	07                   	(bad)  
   10c99:	00 00                	add    BYTE PTR [rax],al
   10c9b:	00 00                	add    BYTE PTR [rax],al
   10c9d:	00 00                	add    BYTE PTR [rax],al
   10c9f:	00 17                	add    BYTE PTR [rdi],dl
   10ca1:	00 00                	add    BYTE PTR [rax],al
   10ca3:	00 00                	add    BYTE PTR [rax],al
   10ca5:	00 00                	add    BYTE PTR [rax],al
   10ca7:	00 c0                	add    al,al
   10ca9:	10 00                	adc    BYTE PTR [rax],al
   10cab:	00 00                	add    BYTE PTR [rax],al
   10cad:	00 00                	add    BYTE PTR [rax],al
   10caf:	00 07                	add    BYTE PTR [rdi],al
   10cb1:	00 00                	add    BYTE PTR [rax],al
   10cb3:	00 00                	add    BYTE PTR [rax],al
   10cb5:	00 00                	add    BYTE PTR [rax],al
   10cb7:	00 a0 0f 00 00 00    	add    BYTE PTR [rax+0xf],ah
   10cbd:	00 00                	add    BYTE PTR [rax],al
   10cbf:	00 08                	add    BYTE PTR [rax],cl
   10cc1:	00 00                	add    BYTE PTR [rax],al
   10cc3:	00 00                	add    BYTE PTR [rax],al
   10cc5:	00 00                	add    BYTE PTR [rax],al
   10cc7:	00 20                	add    BYTE PTR [rax],ah
   10cc9:	01 00                	add    DWORD PTR [rax],eax
   10ccb:	00 00                	add    BYTE PTR [rax],al
   10ccd:	00 00                	add    BYTE PTR [rax],al
   10ccf:	00 09                	add    BYTE PTR [rcx],cl
   10cd1:	00 00                	add    BYTE PTR [rax],al
   10cd3:	00 00                	add    BYTE PTR [rax],al
   10cd5:	00 00                	add    BYTE PTR [rax],al
   10cd7:	00 18                	add    BYTE PTR [rax],bl
   10cd9:	00 00                	add    BYTE PTR [rax],al
   10cdb:	00 00                	add    BYTE PTR [rax],al
   10cdd:	00 00                	add    BYTE PTR [rax],al
   10cdf:	00 1e                	add    BYTE PTR [rsi],bl
   10ce1:	00 00                	add    BYTE PTR [rax],al
   10ce3:	00 00                	add    BYTE PTR [rax],al
   10ce5:	00 00                	add    BYTE PTR [rax],al
   10ce7:	00 08                	add    BYTE PTR [rax],cl
   10ce9:	00 00                	add    BYTE PTR [rax],al
   10ceb:	00 00                	add    BYTE PTR [rax],al
   10ced:	00 00                	add    BYTE PTR [rax],al
   10cef:	00 fb                	add    bl,bh
   10cf1:	ff                   	(bad)  
   10cf2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10cf5:	00 00                	add    BYTE PTR [rax],al
   10cf7:	00 01                	add    BYTE PTR [rcx],al
   10cf9:	00 00                	add    BYTE PTR [rax],al
   10cfb:	08 00                	or     BYTE PTR [rax],al
   10cfd:	00 00                	add    BYTE PTR [rax],al
   10cff:	00 fe                	add    dh,bh
   10d01:	ff                   	(bad)  
   10d02:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d05:	00 00                	add    BYTE PTR [rax],al
   10d07:	00 30                	add    BYTE PTR [rax],dh
   10d09:	0f 00 00             	sldt   WORD PTR [rax]
   10d0c:	00 00                	add    BYTE PTR [rax],al
   10d0e:	00 00                	add    BYTE PTR [rax],al
   10d10:	ff                   	(bad)  
   10d11:	ff                   	(bad)  
   10d12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d15:	00 00                	add    BYTE PTR [rax],al
   10d17:	00 02                	add    BYTE PTR [rdx],al
   10d19:	00 00                	add    BYTE PTR [rax],al
   10d1b:	00 00                	add    BYTE PTR [rax],al
   10d1d:	00 00                	add    BYTE PTR [rax],al
   10d1f:	00 f0                	add    al,dh
   10d21:	ff                   	(bad)  
   10d22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d25:	00 00                	add    BYTE PTR [rax],al
   10d27:	00 8e 0e 00 00 00    	add    BYTE PTR [rsi+0xe],cl
   10d2d:	00 00                	add    BYTE PTR [rax],al
   10d2f:	00 f9                	add    cl,bh
   10d31:	ff                   	(bad)  
   10d32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
   10d35:	00 00                	add    BYTE PTR [rax],al
   10d37:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .got:

0000000000010d90 <_GLOBAL_OFFSET_TABLE_>:
   10d90:	70 0b                	jo     10d9d <_GLOBAL_OFFSET_TABLE_+0xd>
   10d92:	01 00                	add    DWORD PTR [rax],eax
	...
   10da8:	30 20                	xor    BYTE PTR [rax],ah
   10daa:	00 00                	add    BYTE PTR [rax],al
   10dac:	00 00                	add    BYTE PTR [rax],al
   10dae:	00 00                	add    BYTE PTR [rax],al
   10db0:	40 20 00             	rex and BYTE PTR [rax],al
   10db3:	00 00                	add    BYTE PTR [rax],al
   10db5:	00 00                	add    BYTE PTR [rax],al
   10db7:	00 50 20             	add    BYTE PTR [rax+0x20],dl
   10dba:	00 00                	add    BYTE PTR [rax],al
   10dbc:	00 00                	add    BYTE PTR [rax],al
   10dbe:	00 00                	add    BYTE PTR [rax],al
   10dc0:	60                   	(bad)  
   10dc1:	20 00                	and    BYTE PTR [rax],al
   10dc3:	00 00                	add    BYTE PTR [rax],al
   10dc5:	00 00                	add    BYTE PTR [rax],al
   10dc7:	00 70 20             	add    BYTE PTR [rax+0x20],dh
   10dca:	00 00                	add    BYTE PTR [rax],al
   10dcc:	00 00                	add    BYTE PTR [rax],al
   10dce:	00 00                	add    BYTE PTR [rax],al
   10dd0:	80 20 00             	and    BYTE PTR [rax],0x0
   10dd3:	00 00                	add    BYTE PTR [rax],al
   10dd5:	00 00                	add    BYTE PTR [rax],al
   10dd7:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   10ddd:	00 00                	add    BYTE PTR [rax],al
   10ddf:	00 a0 20 00 00 00    	add    BYTE PTR [rax+0x20],ah
   10de5:	00 00                	add    BYTE PTR [rax],al
   10de7:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
   10ded:	00 00                	add    BYTE PTR [rax],al
   10def:	00 c0                	add    al,al
   10df1:	20 00                	and    BYTE PTR [rax],al
   10df3:	00 00                	add    BYTE PTR [rax],al
   10df5:	00 00                	add    BYTE PTR [rax],al
   10df7:	00 d0                	add    al,dl
   10df9:	20 00                	and    BYTE PTR [rax],al
   10dfb:	00 00                	add    BYTE PTR [rax],al
   10dfd:	00 00                	add    BYTE PTR [rax],al
   10dff:	00 e0                	add    al,ah
   10e01:	20 00                	and    BYTE PTR [rax],al
   10e03:	00 00                	add    BYTE PTR [rax],al
   10e05:	00 00                	add    BYTE PTR [rax],al
   10e07:	00 f0                	add    al,dh
   10e09:	20 00                	and    BYTE PTR [rax],al
   10e0b:	00 00                	add    BYTE PTR [rax],al
   10e0d:	00 00                	add    BYTE PTR [rax],al
   10e0f:	00 00                	add    BYTE PTR [rax],al
   10e11:	21 00                	and    DWORD PTR [rax],eax
   10e13:	00 00                	add    BYTE PTR [rax],al
   10e15:	00 00                	add    BYTE PTR [rax],al
   10e17:	00 10                	add    BYTE PTR [rax],dl
   10e19:	21 00                	and    DWORD PTR [rax],eax
   10e1b:	00 00                	add    BYTE PTR [rax],al
   10e1d:	00 00                	add    BYTE PTR [rax],al
   10e1f:	00 20                	add    BYTE PTR [rax],ah
   10e21:	21 00                	and    DWORD PTR [rax],eax
   10e23:	00 00                	add    BYTE PTR [rax],al
   10e25:	00 00                	add    BYTE PTR [rax],al
   10e27:	00 30                	add    BYTE PTR [rax],dh
   10e29:	21 00                	and    DWORD PTR [rax],eax
   10e2b:	00 00                	add    BYTE PTR [rax],al
   10e2d:	00 00                	add    BYTE PTR [rax],al
   10e2f:	00 40 21             	add    BYTE PTR [rax+0x21],al
   10e32:	00 00                	add    BYTE PTR [rax],al
   10e34:	00 00                	add    BYTE PTR [rax],al
   10e36:	00 00                	add    BYTE PTR [rax],al
   10e38:	50                   	push   rax
   10e39:	21 00                	and    DWORD PTR [rax],eax
   10e3b:	00 00                	add    BYTE PTR [rax],al
   10e3d:	00 00                	add    BYTE PTR [rax],al
   10e3f:	00 60 21             	add    BYTE PTR [rax+0x21],ah
   10e42:	00 00                	add    BYTE PTR [rax],al
   10e44:	00 00                	add    BYTE PTR [rax],al
   10e46:	00 00                	add    BYTE PTR [rax],al
   10e48:	70 21                	jo     10e6b <_GLOBAL_OFFSET_TABLE_+0xdb>
   10e4a:	00 00                	add    BYTE PTR [rax],al
   10e4c:	00 00                	add    BYTE PTR [rax],al
   10e4e:	00 00                	add    BYTE PTR [rax],al
   10e50:	80 21 00             	and    BYTE PTR [rcx],0x0
   10e53:	00 00                	add    BYTE PTR [rax],al
   10e55:	00 00                	add    BYTE PTR [rax],al
   10e57:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
   10e5d:	00 00                	add    BYTE PTR [rax],al
   10e5f:	00 a0 21 00 00 00    	add    BYTE PTR [rax+0x21],ah
   10e65:	00 00                	add    BYTE PTR [rax],al
   10e67:	00 b0 21 00 00 00    	add    BYTE PTR [rax+0x21],dh
   10e6d:	00 00                	add    BYTE PTR [rax],al
   10e6f:	00 c0                	add    al,al
   10e71:	21 00                	and    DWORD PTR [rax],eax
   10e73:	00 00                	add    BYTE PTR [rax],al
   10e75:	00 00                	add    BYTE PTR [rax],al
   10e77:	00 d0                	add    al,dl
   10e79:	21 00                	and    DWORD PTR [rax],eax
   10e7b:	00 00                	add    BYTE PTR [rax],al
   10e7d:	00 00                	add    BYTE PTR [rax],al
   10e7f:	00 e0                	add    al,ah
   10e81:	21 00                	and    DWORD PTR [rax],eax
   10e83:	00 00                	add    BYTE PTR [rax],al
   10e85:	00 00                	add    BYTE PTR [rax],al
   10e87:	00 f0                	add    al,dh
   10e89:	21 00                	and    DWORD PTR [rax],eax
   10e8b:	00 00                	add    BYTE PTR [rax],al
   10e8d:	00 00                	add    BYTE PTR [rax],al
   10e8f:	00 00                	add    BYTE PTR [rax],al
   10e91:	22 00                	and    al,BYTE PTR [rax]
   10e93:	00 00                	add    BYTE PTR [rax],al
   10e95:	00 00                	add    BYTE PTR [rax],al
   10e97:	00 10                	add    BYTE PTR [rax],dl
   10e99:	22 00                	and    al,BYTE PTR [rax]
   10e9b:	00 00                	add    BYTE PTR [rax],al
   10e9d:	00 00                	add    BYTE PTR [rax],al
   10e9f:	00 20                	add    BYTE PTR [rax],ah
   10ea1:	22 00                	and    al,BYTE PTR [rax]
   10ea3:	00 00                	add    BYTE PTR [rax],al
   10ea5:	00 00                	add    BYTE PTR [rax],al
   10ea7:	00 30                	add    BYTE PTR [rax],dh
   10ea9:	22 00                	and    al,BYTE PTR [rax]
   10eab:	00 00                	add    BYTE PTR [rax],al
   10ead:	00 00                	add    BYTE PTR [rax],al
   10eaf:	00 40 22             	add    BYTE PTR [rax+0x22],al
   10eb2:	00 00                	add    BYTE PTR [rax],al
   10eb4:	00 00                	add    BYTE PTR [rax],al
   10eb6:	00 00                	add    BYTE PTR [rax],al
   10eb8:	50                   	push   rax
   10eb9:	22 00                	and    al,BYTE PTR [rax]
   10ebb:	00 00                	add    BYTE PTR [rax],al
   10ebd:	00 00                	add    BYTE PTR [rax],al
   10ebf:	00 60 22             	add    BYTE PTR [rax+0x22],ah
   10ec2:	00 00                	add    BYTE PTR [rax],al
   10ec4:	00 00                	add    BYTE PTR [rax],al
   10ec6:	00 00                	add    BYTE PTR [rax],al
   10ec8:	70 22                	jo     10eec <_GLOBAL_OFFSET_TABLE_+0x15c>
   10eca:	00 00                	add    BYTE PTR [rax],al
   10ecc:	00 00                	add    BYTE PTR [rax],al
   10ece:	00 00                	add    BYTE PTR [rax],al
   10ed0:	80 22 00             	and    BYTE PTR [rdx],0x0
   10ed3:	00 00                	add    BYTE PTR [rax],al
   10ed5:	00 00                	add    BYTE PTR [rax],al
   10ed7:	00 90 22 00 00 00    	add    BYTE PTR [rax+0x22],dl
   10edd:	00 00                	add    BYTE PTR [rax],al
   10edf:	00 a0 22 00 00 00    	add    BYTE PTR [rax+0x22],ah
   10ee5:	00 00                	add    BYTE PTR [rax],al
   10ee7:	00 b0 22 00 00 00    	add    BYTE PTR [rax+0x22],dh
   10eed:	00 00                	add    BYTE PTR [rax],al
   10eef:	00 c0                	add    al,al
   10ef1:	22 00                	and    al,BYTE PTR [rax]
   10ef3:	00 00                	add    BYTE PTR [rax],al
   10ef5:	00 00                	add    BYTE PTR [rax],al
   10ef7:	00 d0                	add    al,dl
   10ef9:	22 00                	and    al,BYTE PTR [rax]
   10efb:	00 00                	add    BYTE PTR [rax],al
   10efd:	00 00                	add    BYTE PTR [rax],al
   10eff:	00 e0                	add    al,ah
   10f01:	22 00                	and    al,BYTE PTR [rax]
   10f03:	00 00                	add    BYTE PTR [rax],al
   10f05:	00 00                	add    BYTE PTR [rax],al
   10f07:	00 f0                	add    al,dh
   10f09:	22 00                	and    al,BYTE PTR [rax]
   10f0b:	00 00                	add    BYTE PTR [rax],al
   10f0d:	00 00                	add    BYTE PTR [rax],al
   10f0f:	00 00                	add    BYTE PTR [rax],al
   10f11:	23 00                	and    eax,DWORD PTR [rax]
   10f13:	00 00                	add    BYTE PTR [rax],al
   10f15:	00 00                	add    BYTE PTR [rax],al
   10f17:	00 10                	add    BYTE PTR [rax],dl
   10f19:	23 00                	and    eax,DWORD PTR [rax]
   10f1b:	00 00                	add    BYTE PTR [rax],al
   10f1d:	00 00                	add    BYTE PTR [rax],al
   10f1f:	00 20                	add    BYTE PTR [rax],ah
   10f21:	23 00                	and    eax,DWORD PTR [rax]
   10f23:	00 00                	add    BYTE PTR [rax],al
   10f25:	00 00                	add    BYTE PTR [rax],al
   10f27:	00 30                	add    BYTE PTR [rax],dh
   10f29:	23 00                	and    eax,DWORD PTR [rax]
   10f2b:	00 00                	add    BYTE PTR [rax],al
   10f2d:	00 00                	add    BYTE PTR [rax],al
   10f2f:	00 40 23             	add    BYTE PTR [rax+0x23],al
   10f32:	00 00                	add    BYTE PTR [rax],al
   10f34:	00 00                	add    BYTE PTR [rax],al
   10f36:	00 00                	add    BYTE PTR [rax],al
   10f38:	50                   	push   rax
   10f39:	23 00                	and    eax,DWORD PTR [rax]
   10f3b:	00 00                	add    BYTE PTR [rax],al
   10f3d:	00 00                	add    BYTE PTR [rax],al
   10f3f:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   10f42:	00 00                	add    BYTE PTR [rax],al
   10f44:	00 00                	add    BYTE PTR [rax],al
   10f46:	00 00                	add    BYTE PTR [rax],al
   10f48:	70 23                	jo     10f6d <_GLOBAL_OFFSET_TABLE_+0x1dd>
   10f4a:	00 00                	add    BYTE PTR [rax],al
   10f4c:	00 00                	add    BYTE PTR [rax],al
   10f4e:	00 00                	add    BYTE PTR [rax],al
   10f50:	80 23 00             	and    BYTE PTR [rbx],0x0
   10f53:	00 00                	add    BYTE PTR [rax],al
   10f55:	00 00                	add    BYTE PTR [rax],al
   10f57:	00 90 23 00 00 00    	add    BYTE PTR [rax+0x23],dl
   10f5d:	00 00                	add    BYTE PTR [rax],al
   10f5f:	00 a0 23 00 00 00    	add    BYTE PTR [rax+0x23],ah
   10f65:	00 00                	add    BYTE PTR [rax],al
   10f67:	00 b0 23 00 00 00    	add    BYTE PTR [rax+0x23],dh
   10f6d:	00 00                	add    BYTE PTR [rax],al
   10f6f:	00 c0                	add    al,al
   10f71:	23 00                	and    eax,DWORD PTR [rax]
   10f73:	00 00                	add    BYTE PTR [rax],al
   10f75:	00 00                	add    BYTE PTR [rax],al
   10f77:	00 d0                	add    al,dl
   10f79:	23 00                	and    eax,DWORD PTR [rax]
   10f7b:	00 00                	add    BYTE PTR [rax],al
   10f7d:	00 00                	add    BYTE PTR [rax],al
   10f7f:	00 e0                	add    al,ah
   10f81:	23 00                	and    eax,DWORD PTR [rax]
   10f83:	00 00                	add    BYTE PTR [rax],al
   10f85:	00 00                	add    BYTE PTR [rax],al
   10f87:	00 f0                	add    al,dh
   10f89:	23 00                	and    eax,DWORD PTR [rax]
   10f8b:	00 00                	add    BYTE PTR [rax],al
   10f8d:	00 00                	add    BYTE PTR [rax],al
   10f8f:	00 00                	add    BYTE PTR [rax],al
   10f91:	24 00                	and    al,0x0
   10f93:	00 00                	add    BYTE PTR [rax],al
   10f95:	00 00                	add    BYTE PTR [rax],al
   10f97:	00 10                	add    BYTE PTR [rax],dl
   10f99:	24 00                	and    al,0x0
   10f9b:	00 00                	add    BYTE PTR [rax],al
   10f9d:	00 00                	add    BYTE PTR [rax],al
   10f9f:	00 20                	add    BYTE PTR [rax],ah
   10fa1:	24 00                	and    al,0x0
   10fa3:	00 00                	add    BYTE PTR [rax],al
   10fa5:	00 00                	add    BYTE PTR [rax],al
   10fa7:	00 30                	add    BYTE PTR [rax],dh
   10fa9:	24 00                	and    al,0x0
   10fab:	00 00                	add    BYTE PTR [rax],al
   10fad:	00 00                	add    BYTE PTR [rax],al
   10faf:	00 40 24             	add    BYTE PTR [rax+0x24],al
   10fb2:	00 00                	add    BYTE PTR [rax],al
   10fb4:	00 00                	add    BYTE PTR [rax],al
   10fb6:	00 00                	add    BYTE PTR [rax],al
   10fb8:	50                   	push   rax
   10fb9:	24 00                	and    al,0x0
   10fbb:	00 00                	add    BYTE PTR [rax],al
   10fbd:	00 00                	add    BYTE PTR [rax],al
   10fbf:	00 60 24             	add    BYTE PTR [rax+0x24],ah
   10fc2:	00 00                	add    BYTE PTR [rax],al
   10fc4:	00 00                	add    BYTE PTR [rax],al
   10fc6:	00 00                	add    BYTE PTR [rax],al
   10fc8:	70 24                	jo     10fee <_GLOBAL_OFFSET_TABLE_+0x25e>
   10fca:	00 00                	add    BYTE PTR [rax],al
   10fcc:	00 00                	add    BYTE PTR [rax],al
   10fce:	00 00                	add    BYTE PTR [rax],al
   10fd0:	80 24 00 00          	and    BYTE PTR [rax+rax*1],0x0
	...

Disassembly of section .data:

0000000000011000 <__data_start>:
	...

0000000000011008 <__dso_handle>:
   11008:	08 10                	or     BYTE PTR [rax],dl
   1100a:	01 00                	add    DWORD PTR [rax],eax
   1100c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011010 <blk_ipv4_len>:
   11010:	ff                   	(bad)  
   11011:	ff                   	(bad)  
   11012:	ff                   	(bad)  
   11013:	ff                   	(bad)  

0000000000011014 <num_rules>:
   11014:	ff                   	(bad)  
   11015:	ff                   	(bad)  
   11016:	ff                   	(bad)  
   11017:	ff                   	(bad)  

0000000000011018 <watchlist_num>:
   11018:	ff                   	(bad)  
   11019:	ff                   	(bad)  
   1101a:	ff                   	(bad)  
   1101b:	ff                   	(bad)  

000000000001101c <arp_entries>:
   1101c:	ff                   	(bad)  
   1101d:	ff                   	(bad)  
   1101e:	ff                   	(bad)  
   1101f:	ff                 	dec    eax

0000000000011020 <spi_max>:
   11020:	c8 00 00 00          	enter  0x0,0x0

0000000000011024 <VIGIL_MODE>:
   11024:	ff                   	(bad)  
   11025:	ff 00                	inc    DWORD PTR [rax]
	...

0000000000011028 <default_config>:
   11028:	04 c0                	add    al,0xc0
   1102a:	00 00                	add    BYTE PTR [rax],al
   1102c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011030 <def_log_file>:
   11030:	1a c0                	sbb    al,al
   11032:	00 00                	add    BYTE PTR [rax],al
   11034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011038 <default_host_conf>:
   11038:	34 c0                	xor    al,0xc0
   1103a:	00 00                	add    BYTE PTR [rax],al
   1103c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011040 <total_conversations>:
   11040:	ff                   	(bad)  
   11041:	ff                   	(bad)  
   11042:	ff                   	(bad)  
   11043:	ff                   	.byte 0xff

Disassembly of section .bss:

0000000000011060 <optarg@GLIBC_2.2.5>:
	...

0000000000011068 <completed.0>:
	...

0000000000011080 <demo_mode>:
   11080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011084 <strict_icmp_timestamp_req>:
   11084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000011088 <strict_nmap_host_alive_check>:
	...

00000000000110a0 <threads>:
	...

00000000000112a0 <thread_count>:
   112a0:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a4 <total_pkt_captured>:
   112a4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000112a8 <is_running>:
	...

00000000000112b0 <last_clean_time>:
	...

00000000000112b8 <clean_delay>:
	...

00000000000112c0 <pkt_counter>:
	...

00000000000112e0 <rules>:
	...

00000000000f32e0 <blocked_ipv4_addrs>:
	...

00000000000f3520 <watchlist>:
	...

0000000000107d20 <arpcache>:
	...

0000000000109f00 <ip_addr>:
	...

0000000000109f20 <debug_mode>:
	...

0000000000109f21 <use_sqlite>:
	...

0000000000109f40 <sqlite_db_path>:
	...

0000000000109f60 <clean_delay_pkts>:
  109f60:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f64 <packet_print>:
	...

0000000000109f65 <quiet_exit>:
  109f65:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109f68 <vigil_location>:
	...

0000000000109f70 <input_adapter>:
	...

0000000000109f80 <output_adapter>:
	...

0000000000109f90 <local_ip>:
	...

0000000000109fb0 <def_gw>:
	...

0000000000109fc2 <use_spi>:
	...

0000000000109fc4 <homenet>:
  109fc4:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fc8 <homenetmask>:
  109fc8:	00 00                	add    BYTE PTR [rax],al
	...

0000000000109fcc <in_test_mode>:
	...

0000000000109fe0 <spi_table>:
	...

0000000000137fe0 <lua_scripts>:
	...

0000000000138800 <fn_mem_map>:
	...

000000000013b000 <fn_num>:
	...

000000000013b020 <current_log_num.2>:
  13b020:	00 00                	add    BYTE PTR [rax],al
	...

000000000013b024 <arr_num.1>:
	...

000000000013b040 <pkt_times.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <buffer+0x78>
   a:	74 75                	je     81 <buffer.0+0x1>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	30 2e                	xor    BYTE PTR [rsi],ch
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627549 <_end+0x754e8509>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <buffer.0+0x10>
  1b:	31 29                	xor    DWORD PTR [rcx],ebp
  1d:	20 31                	and    BYTE PTR [rcx],dh
  1f:	30 2e                	xor    BYTE PTR [rsi],ch
  21:	33 2e                	xor    ebp,DWORD PTR [rsi]
  23:	30 00                	xor    BYTE PTR [rax],al
